; ModuleID = '../../third_party/blink/renderer/core/css/resolver/scoped_style_resolver.cc'
source_filename = "../../third_party/blink/renderer/core/css/resolver/scoped_style_resolver.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.53", i32, [4 x i8], %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.189", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.205", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.223", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.230", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.169", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.89" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.89" = type { %"struct.std::__1::__atomic_base.90" }
%"struct.std::__1::__atomic_base.90" = type { %"struct.std::__1::__atomic_base.91" }
%"struct.std::__1::__atomic_base.91" = type { %"struct.std::__1::__cxx_atomic_impl.92" }
%"struct.std::__1::__cxx_atomic_impl.92" = type { %"struct.std::__1::__cxx_atomic_base_impl.93" }
%"struct.std::__1::__cxx_atomic_base_impl.93" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::Worklist.100"* }
%"class.blink::Worklist.100" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.89" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::Worklist.107"* }
%"class.blink::Worklist.107" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.89" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::Worklist.114"* }
%"class.blink::Worklist.114" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.89" }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::Worklist.121"* }
%"class.blink::Worklist.121" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.89" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::Worklist.128"* }
%"class.blink::Worklist.128" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.89" }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::Worklist.135"* }
%"class.blink::Worklist.135" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.89" }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::Worklist.142"* }
%"class.blink::Worklist.142" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.89" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.149", %"class.std::__1::__compressed_pair.156", %"class.std::__1::__compressed_pair.161", %"class.std::__1::__compressed_pair.163", [4 x i8] }>
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151", %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { i64 }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { float }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.172", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.181" }
%"class.WTF::Vector.181" = type { %"class.WTF::VectorBuffer.182" }
%"class.WTF::VectorBuffer.182" = type { %"class.WTF::VectorBufferBase.183" }
%"class.WTF::VectorBufferBase.183" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.197" }
%"class.WTF::VectorBuffer.197" = type { %"class.WTF::VectorBufferBase.198" }
%"class.WTF::VectorBufferBase.198" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.211" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.100"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.107"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.114"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.121"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.128"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1263" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1263" = type { %"struct.std::__1::__compressed_pair_elem.1264" }
%"struct.std::__1::__compressed_pair_elem.1264" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.229 }
%class.scoped_refptr.229 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.230" = type { %"struct.std::__1::__atomic_base.231" }
%"struct.std::__1::__atomic_base.231" = type { %"struct.std::__1::__cxx_atomic_impl.232" }
%"struct.std::__1::__cxx_atomic_impl.232" = type { %"struct.std::__1::__cxx_atomic_base_impl.233" }
%"struct.std::__1::__cxx_atomic_base_impl.233" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.554" }
%"struct.std::__1::atomic.554" = type { %"struct.std::__1::__atomic_base.555" }
%"struct.std::__1::__atomic_base.555" = type { %"struct.std::__1::__atomic_base.556" }
%"struct.std::__1::__atomic_base.556" = type { %"struct.std::__1::__cxx_atomic_impl.557" }
%"struct.std::__1::__cxx_atomic_impl.557" = type { %"struct.std::__1::__cxx_atomic_base_impl.558" }
%"struct.std::__1::__cxx_atomic_base_impl.558" = type { i32 }
%"class.blink::ScopedStyleResolver" = type <{ %"class.blink::Member", %"class.blink::HeapVector", %"class.WTF::Vector.320", %"class.WTF::Vector.320", %"class.blink::HeapHashMap.458", %"class.blink::Member.465", %"class.blink::Member.476", i8, i8, [6 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.493", %"class.blink::Member.444", %"class.blink::Member", %"class.blink::Member.495", %"class.blink::Member.495", %"class.blink::Member.532", %"class.blink::Member.534", %"class.blink::Member.536", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.541", %"class.blink::HeapVector" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.431", %"class.blink::Member.431" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.431", %"class.blink::Member", %"class.blink::Member.431", %"class.blink::Member.431", %"class.blink::Member.489" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.489" = type { %"class.blink::MemberBase.490" }
%"class.blink::MemberBase.490" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::Node"* }
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.550", %"class.WTF::Vector.550", i8, i32, %"class.blink::Member.561", %"class.blink::Member.563", %"class.blink::Member.565", %"class.blink::Member.567", %"class.blink::Member.569", %"class.blink::Member.571", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.573", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.579", %"class.blink::Member.581", %"class.blink::Member.2", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.584", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.525", %"class.blink::Member.510", %"class.blink::Member.599", %"class.blink::Member.510", %"class.blink::Member.510", %"class.blink::Member.510", %"class.blink::UserActionElementSet", %"class.blink::Member.608", double, double, i64, i64, %"class.blink::HeapHashSet.610", %"class.blink::HeapHashSet.617", i16, i8, %"class.blink::Member.624", %"class.blink::Member.626", %"class.blink::Member.847", %"class.blink::Member.849", %"class.blink::TextLinkColors", %"class.blink::Member.851", i8, [7 x i8], %"class.blink::HeapHashMap.853", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.510", %"class.WTF::Vector.860", %"class.blink::Member.865", %"class.blink::Member.867", i8, %"class.blink::Member.510", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.869", %"class.blink::HeapVector.871", %"class.std::__1::unique_ptr.879", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.885", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.898", %"class.WTF::Vector.900", i8, i8, %"class.std::__1::unique_ptr.905", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.525", %"class.blink::HeapVector.911", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.919", i8, i32, %"class.blink::Member.921", %"class.blink::Member.923", %"class.blink::Member.925", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.927", %"class.WTF::HashMap.929", %"class.blink::Member.934", %"class.blink::Member.936", %"class.blink::Member.1070", %"class.blink::Member.1072", %"class.blink::Member.444", %"class.blink::Member.444", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1074", i8, i32, %"class.blink::Member.1081", %"class.blink::Member.1083", i32, %"class.blink::Member.1085", %"class.blink::Member.1087", %"class.blink::Member.1089", %"class.std::__1::unique_ptr.1091", i64, %"class.std::__1::unique_ptr.1097", i32, i32, %"class.blink::Member.1108", %"class.blink::Member.1110", %"class.blink::Member.1112", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1114", %"class.WTF::Vector.1116", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1121", %"class.blink::Member.1128", %"class.std::__1::unique_ptr.1130", %"class.blink::Member.1136", i8, i8, %"class.WTF::String", %"class.blink::Member.1138", i8, [7 x i8], %"class.blink::HeapHashMap.1140", %"class.blink::HeapObserverSet.1147", %"class.blink::Member.1155", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1157", i32, i8, i8, %"class.blink::WeakMember.1159", %"class.blink::Member.1160" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.543" }
%"class.blink::HeapHashMap.543" = type { %"class.WTF::HashMap.546" }
%"class.WTF::HashMap.546" = type { %"class.WTF::HashTable.547" }
%"class.WTF::HashTable.547" = type <{ %"struct.WTF::KeyValuePair.549"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.549" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.550" = type { %"class.WTF::VectorBuffer.551" }
%"class.WTF::VectorBuffer.551" = type { %"class.WTF::VectorBufferBase.552" }
%"class.WTF::VectorBufferBase.552" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.553 }
%class.scoped_refptr.553 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.554" }
%"class.blink::Member.561" = type { %"class.blink::MemberBase.562" }
%"class.blink::MemberBase.562" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1199", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1232", i32, i8, [3 x i8], %"class.blink::HeapVector.1234", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1242", %"class.blink::Member.1244", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1253", %"class.blink::Member.1259", %"class.blink::Member.1261", i8, [7 x i8] }>
%"class.blink::Supplementable.1199" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1200" }
%"class.blink::HeapHashMap.1200" = type { %"class.WTF::HashMap.1203" }
%"class.WTF::HashMap.1203" = type { %"class.WTF::HashTable.1204" }
%"class.WTF::HashTable.1204" = type <{ %"struct.WTF::KeyValuePair.1206"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1206" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1207" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.969" }
%"class.blink::HeapHashSet.969" = type { %"class.WTF::HashSet.972" }
%"class.WTF::HashSet.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"class.blink::WeakMember.975"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.975" = type opaque
%"class.blink::Supplementable.1207" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1208" }
%"class.blink::HeapHashMap.1208" = type { %"class.WTF::HashMap.1211" }
%"class.WTF::HashMap.1211" = type { %"class.WTF::HashTable.1212" }
%"class.WTF::HashTable.1212" = type <{ %"struct.WTF::KeyValuePair.1214"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1214" = type { i8*, %"class.blink::Member.1356" }
%"class.blink::Member.1356" = type { %"class.blink::MemberBase.1357" }
%"class.blink::MemberBase.1357" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1358" }
%"class.blink::Member.1358" = type { %"class.blink::MemberBase.1359" }
%"class.blink::MemberBase.1359" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1215, %"class.std::__1::unique_ptr.1216", %"class.std::__1::unique_ptr.1216", %"class.std::__1::unique_ptr.1222", %"class.std::__1::unique_ptr.1222", %"class.blink::Member.563", i32, [4 x i8], %"class.WTF::HashSet.1228", i32, i32 }
%class.scoped_refptr.1215 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1216" = type { %"class.std::__1::__compressed_pair.1217" }
%"class.std::__1::__compressed_pair.1217" = type { %"struct.std::__1::__compressed_pair_elem.1218" }
%"struct.std::__1::__compressed_pair_elem.1218" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1222" = type { %"class.std::__1::__compressed_pair.1223" }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.1224" }
%"struct.std::__1::__compressed_pair_elem.1224" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1228" = type { %"class.WTF::HashTable.1229" }
%"class.WTF::HashTable.1229" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1232" = type { %"class.blink::MemberBase.1233" }
%"class.blink::MemberBase.1233" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1234" = type { %"class.WTF::Vector.1237" }
%"class.WTF::Vector.1237" = type { %"class.WTF::VectorBuffer.1238" }
%"class.WTF::VectorBuffer.1238" = type { %"class.WTF::VectorBufferBase.1239" }
%"class.WTF::VectorBufferBase.1239" = type { %"class.blink::Member.1240"*, i32, i32 }
%"class.blink::Member.1240" = type opaque
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1244" = type { %"class.blink::MemberBase.1245" }
%"class.blink::MemberBase.1245" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1246", i32, i32 }
%"class.blink::HeapHashMap.1246" = type { %"class.WTF::HashMap.1249" }
%"class.WTF::HashMap.1249" = type { %"class.WTF::HashTable.1250" }
%"class.WTF::HashTable.1250" = type <{ %"struct.WTF::KeyValuePair.1252"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1252" = type opaque
%"class.std::__1::unique_ptr.1253" = type { %"class.std::__1::__compressed_pair.1254" }
%"class.std::__1::__compressed_pair.1254" = type { %"struct.std::__1::__compressed_pair_elem.1255" }
%"struct.std::__1::__compressed_pair_elem.1255" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1259" = type { %"class.blink::MemberBase.1260" }
%"class.blink::MemberBase.1260" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1261" = type { %"class.blink::MemberBase.1262" }
%"class.blink::MemberBase.1262" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.567" = type { %"class.blink::MemberBase.568" }
%"class.blink::MemberBase.568" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.569" = type { %"class.blink::MemberBase.570" }
%"class.blink::MemberBase.570" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.571" = type { %"class.blink::MemberBase.572" }
%"class.blink::MemberBase.572" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.579" = type { %"class.blink::MemberBase.580" }
%"class.blink::MemberBase.580" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.581" = type { %"class.blink::MemberBase.582" }
%"class.blink::MemberBase.582" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.6", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.430, %"class.WTF::Vector.320", %"class.WTF::Vector.320", %"class.blink::Member.431", %"class.blink::Member.433", %"class.blink::HeapHashSet.437", %"class.blink::Member.444", %"class.WTF::HashSet.311", %"class.WTF::TextPosition", %"class.blink::Member.446", %"class.blink::HeapVector.448", %"class.blink::Member.455" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type <{ %"class.blink::Member.10", %"class.WTF::String", %"class.blink::HeapVector.13", %"class.blink::HeapVector.19", %"class.blink::HeapVector.27", %"class.WTF::HashMap", %"class.WTF::AtomicString", %"class.blink::WeakMember", i8, [7 x i8], %"class.blink::Member.37", %"class.blink::HeapHashSet", %"class.blink::HeapHashSet", %"class.blink::Member.241", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::StyleRuleImport"* }
%"class.blink::StyleRuleImport" = type opaque
%"class.blink::HeapVector.13" = type { %"class.WTF::Vector.16" }
%"class.WTF::Vector.16" = type { %"class.WTF::VectorBuffer.17" }
%"class.WTF::VectorBuffer.17" = type { %"class.WTF::VectorBufferBase.18" }
%"class.WTF::VectorBufferBase.18" = type { %"class.blink::Member.10"*, i32, i32 }
%"class.blink::HeapVector.19" = type { %"class.WTF::Vector.22" }
%"class.WTF::Vector.22" = type { %"class.WTF::VectorBuffer.23" }
%"class.WTF::VectorBuffer.23" = type { %"class.WTF::VectorBufferBase.24" }
%"class.WTF::VectorBufferBase.24" = type { %"class.blink::Member.25"*, i32, i32 }
%"class.blink::Member.25" = type opaque
%"class.blink::HeapVector.27" = type { %"class.WTF::Vector.30" }
%"class.WTF::Vector.30" = type { %"class.WTF::VectorBuffer.31" }
%"class.WTF::VectorBuffer.31" = type { %"class.WTF::VectorBufferBase.32" }
%"class.WTF::VectorBufferBase.32" = type { %"class.blink::Member.33"*, i32, i32 }
%"class.blink::Member.33" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::CSSStyleSheetResource"* }
%"class.blink::CSSStyleSheetResource" = type opaque
%"class.blink::Member.37" = type { %"class.blink::MemberBase.38" }
%"class.blink::MemberBase.38" = type { %"class.blink::CSSParserContext"* }
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.42, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.234", i32, [4 x i8] }>
%class.scoped_refptr.42 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.47" }
%"class.WTF::HashMap.47" = type { %"class.WTF::HashTable.48" }
%"class.WTF::HashTable.48" = type <{ %"struct.WTF::KeyValuePair.50"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.50" = type { %"class.blink::WeakMember.51", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::WeakMember.234" = type { %"class.blink::MemberBase.235" }
%"class.blink::MemberBase.235" = type { %"class.blink::Document"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.238" }
%"class.WTF::HashTable.238" = type <{ %"class.blink::WeakMember.240"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.240" = type { %"class.blink::MemberBase.3" }
%"class.blink::Member.241" = type { %"class.blink::MemberBase.242" }
%"class.blink::MemberBase.242" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.245", %"class.blink::HeapHashMap.245", %"class.blink::HeapHashMap.245", %"class.blink::HeapHashMap.245", %"class.blink::HeapVector.252", %"class.blink::HeapVector.252", %"class.blink::HeapVector.252", %"class.blink::HeapVector.252", %"class.blink::HeapVector.252", %"class.blink::HeapVector.252", %"class.blink::HeapVector.252", %"class.blink::HeapVector.252", %"class.blink::HeapVector.252", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.325", %"class.blink::HeapVector.333", %"class.blink::HeapVector.342", %"class.blink::HeapVector.359", %"class.blink::HeapVector.367", %"class.blink::HeapVector.375", %"class.blink::HeapVector.388", %"class.WTF::Vector.395", i32, %"class.blink::Member.419" }
%"class.blink::HeapHashMap.245" = type { %"class.WTF::HashMap.248" }
%"class.WTF::HashMap.248" = type { %"class.WTF::HashTable.249" }
%"class.WTF::HashTable.249" = type <{ %"struct.WTF::KeyValuePair.251"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.251" = type { %"class.WTF::AtomicString", %"class.blink::Member.1364" }
%"class.blink::Member.1364" = type { %"class.blink::MemberBase.1365" }
%"class.blink::MemberBase.1365" = type { %"class.blink::HeapVector.252"* }
%"class.blink::HeapVector.252" = type { %"class.WTF::Vector.255" }
%"class.WTF::Vector.255" = type { %"class.WTF::VectorBuffer.256" }
%"class.WTF::VectorBuffer.256" = type { %"class.WTF::VectorBufferBase.257" }
%"class.WTF::VectorBufferBase.257" = type { %"class.blink::Member.258"*, i32, i32 }
%"class.blink::Member.258" = type { %"class.blink::MemberBase.259" }
%"class.blink::MemberBase.259" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.262", i64, [4 x i32] }
%"class.blink::Member.262" = type { %"class.blink::MemberBase.263" }
%"class.blink::MemberBase.263" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.289", %"class.blink::Member.293" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.289" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.293" = type { %"class.blink::MemberBase.294" }
%"class.blink::MemberBase.294" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.298", %"class.WTF::HashMap.298", %"class.WTF::HashMap.298", %"class.WTF::HashMap.303", %class.scoped_refptr.308, %class.scoped_refptr.319, %class.scoped_refptr.318, %"class.WTF::Vector.320", %"class.WTF::Vector.320", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.298" = type { %"class.WTF::HashTable.299" }
%"class.WTF::HashTable.299" = type <{ %"struct.WTF::KeyValuePair.302"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.302" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1360 }
%class.scoped_refptr.1360 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.309", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.315", %"union.blink::InvalidationSet::Backing.316", %"union.blink::InvalidationSet::Backing.317", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.309" = type { %"class.base::RefCounted.310" }
%"class.base::RefCounted.310" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.315" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.316" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.317" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.303" = type { %"class.WTF::HashTable.304" }
%"class.WTF::HashTable.304" = type <{ %"struct.WTF::KeyValuePair.307"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.307" = type opaque
%class.scoped_refptr.308 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.318, %class.scoped_refptr.318 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.309", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.315", %"union.blink::InvalidationSet::Backing.316", %"union.blink::InvalidationSet::Backing.317", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.319 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.318 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::HeapVector.325" = type { %"class.WTF::Vector.328" }
%"class.WTF::Vector.328" = type { %"class.WTF::VectorBuffer.329" }
%"class.WTF::VectorBuffer.329" = type { %"class.WTF::VectorBufferBase.330" }
%"class.WTF::VectorBufferBase.330" = type { %"class.blink::Member.331"*, i32, i32 }
%"class.blink::Member.331" = type { %"class.blink::MemberBase.1361" }
%"class.blink::MemberBase.1361" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.289", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.333" = type { %"class.WTF::Vector.336" }
%"class.WTF::Vector.336" = type { %"class.WTF::VectorBuffer.337" }
%"class.WTF::VectorBuffer.337" = type { %"class.WTF::VectorBufferBase.338" }
%"class.WTF::VectorBufferBase.338" = type { %"class.blink::Member.339"*, i32, i32 }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.289" }
%"class.blink::HeapVector.342" = type { %"class.WTF::Vector.345" }
%"class.WTF::Vector.345" = type { %"class.WTF::VectorBuffer.346" }
%"class.WTF::VectorBuffer.346" = type { %"class.WTF::VectorBufferBase.347" }
%"class.WTF::VectorBufferBase.347" = type { %"class.blink::Member.348"*, i32, i32 }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.350", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.350" = type { %"class.WTF::Vector.353" }
%"class.WTF::Vector.353" = type { %"class.WTF::VectorBuffer.354" }
%"class.WTF::VectorBuffer.354" = type { %"class.WTF::VectorBufferBase.355" }
%"class.WTF::VectorBufferBase.355" = type { %"class.blink::Member.356"*, i32, i32 }
%"class.blink::Member.356" = type opaque
%"class.blink::HeapVector.359" = type { %"class.WTF::Vector.362" }
%"class.WTF::Vector.362" = type { %"class.WTF::VectorBuffer.363" }
%"class.WTF::VectorBuffer.363" = type { %"class.WTF::VectorBufferBase.364" }
%"class.WTF::VectorBufferBase.364" = type { %"class.blink::Member.365"*, i32, i32 }
%"class.blink::Member.365" = type { %"class.blink::MemberBase.1362" }
%"class.blink::MemberBase.1362" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.289" }
%"class.blink::HeapVector.367" = type { %"class.WTF::Vector.370" }
%"class.WTF::Vector.370" = type { %"class.WTF::VectorBuffer.371" }
%"class.WTF::VectorBuffer.371" = type { %"class.WTF::VectorBufferBase.372" }
%"class.WTF::VectorBufferBase.372" = type { %"class.blink::Member.373"*, i32, i32 }
%"class.blink::Member.373" = type { %"class.blink::MemberBase.1363" }
%"class.blink::MemberBase.1363" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.383", %"class.blink::Member.383", %"class.blink::Member.383", %"class.blink::Member.383", %"class.blink::Member.383", %"class.blink::Member.383", %"class.blink::Member.383", %"class.blink::Member.383", %"class.blink::Member.383", %"class.blink::Member.383", i32, [4 x i8] }>
%"class.blink::Member.383" = type { %"class.blink::MemberBase.384" }
%"class.blink::MemberBase.384" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapVector.375" = type { %"class.WTF::Vector.378" }
%"class.WTF::Vector.378" = type { %"class.WTF::VectorBuffer.379" }
%"class.WTF::VectorBuffer.379" = type { %"class.WTF::VectorBufferBase.380" }
%"class.WTF::VectorBufferBase.380" = type { %"class.blink::Member.381"*, i32, i32 }
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.383", %"class.blink::Member.383", %"class.blink::Member.383", %"class.blink::Member.383", %"class.blink::Member.383" }
%"class.blink::HeapVector.388" = type { %"class.WTF::Vector.391" }
%"class.WTF::Vector.391" = type { %"class.WTF::VectorBuffer.392" }
%"class.WTF::VectorBuffer.392" = type { %"class.WTF::VectorBufferBase.393" }
%"class.WTF::VectorBufferBase.393" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.262", i32, i32 }
%"class.WTF::Vector.395" = type { %"class.WTF::VectorBuffer.396" }
%"class.WTF::VectorBuffer.396" = type { %"class.WTF::VectorBufferBase.397" }
%"class.WTF::VectorBufferBase.397" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.398, i8, [7 x i8] }>
%class.scoped_refptr.398 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.399", %"class.WTF::Vector.401" }
%"class.WTF::RefCounted.399" = type { %"class.base::RefCounted.400" }
%"class.base::RefCounted.400" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.401" = type { %"class.WTF::VectorBuffer.402" }
%"class.WTF::VectorBuffer.402" = type { %"class.WTF::VectorBufferBase.403" }
%"class.WTF::VectorBufferBase.403" = type { %"class.std::__1::unique_ptr.404"*, i32, i32 }
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.407", %"class.WTF::String" }
%"class.WTF::Vector.407" = type { %"class.WTF::VectorBuffer.408" }
%"class.WTF::VectorBuffer.408" = type { %"class.WTF::VectorBufferBase.409" }
%"class.WTF::VectorBufferBase.409" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.423", %"class.blink::HeapHashMap.423", %"class.blink::HeapHashMap.423", %"class.blink::HeapHashMap.423" }
%"class.blink::HeapHashMap.423" = type { %"class.WTF::HashMap.426" }
%"class.WTF::HashMap.426" = type { %"class.WTF::HashTable.427" }
%"class.WTF::HashTable.427" = type <{ %"struct.WTF::KeyValuePair.429"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.429" = type opaque
%class.scoped_refptr.430 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.435" }
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.437" = type { %"class.WTF::HashSet.440" }
%"class.WTF::HashSet.440" = type { %"class.WTF::HashTable.441" }
%"class.WTF::HashTable.441" = type <{ %"class.blink::WeakMember.443"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.443" = type { %"class.blink::MemberBase" }
%"class.WTF::HashSet.311" = type { %"class.WTF::HashTable.312" }
%"class.WTF::HashTable.312" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.430, %"class.blink::Member.2", %"class.blink::Member.433" }
%"class.blink::HeapVector.448" = type { %"class.WTF::Vector.451" }
%"class.WTF::Vector.451" = type { %"class.WTF::VectorBuffer.452" }
%"class.WTF::VectorBuffer.452" = type { %"class.WTF::VectorBufferBase.453" }
%"class.WTF::VectorBufferBase.453" = type { %"class.blink::Member.433"*, i32, i32 }
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.583 }
%class.scoped_refptr.583 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.42 }
%"class.blink::Member.599" = type { %"class.blink::MemberBase.600" }
%"class.blink::MemberBase.600" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.601" }
%"class.blink::HeapHashMap.601" = type { %"class.WTF::HashMap.604" }
%"class.WTF::HashMap.604" = type { %"class.WTF::HashTable.605" }
%"class.WTF::HashTable.605" = type <{ %"struct.WTF::KeyValuePair.607"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.607" = type opaque
%"class.blink::Member.608" = type { %"class.blink::MemberBase.609" }
%"class.blink::MemberBase.609" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.610" = type { %"class.WTF::HashSet.613" }
%"class.WTF::HashSet.613" = type { %"class.WTF::HashTable.614" }
%"class.WTF::HashTable.614" = type <{ %"class.blink::WeakMember.616"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.616" = type opaque
%"class.blink::HeapHashSet.617" = type { %"class.WTF::HashSet.620" }
%"class.WTF::HashSet.620" = type { %"class.WTF::HashTable.621" }
%"class.WTF::HashTable.621" = type <{ %"class.blink::WeakMember.623"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.623" = type opaque
%"class.blink::Member.624" = type { %"class.blink::MemberBase.625" }
%"class.blink::MemberBase.625" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.626" = type { %"class.blink::MemberBase.627" }
%"class.blink::MemberBase.627" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.444", i32, i32, i32, %"class.blink::Member.2", %"class.blink::Member.630", %"class.blink::Member.657", %"class.blink::HeapHashMap.659", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.666", %"class.blink::HeapHashSet.666", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.672", %"class.blink::Member.686", %"class.blink::Member.716", %"class.blink::Member.718", %"class.blink::Member.724", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.735", %"class.blink::Member.741", %"class.blink::HeapHashMap.803", %"class.blink::HeapHashMap.810", %"class.std::__1::unique_ptr.817", i32, %"class.blink::HeapVector.823", %"class.blink::HeapVector.823", %"class.blink::HeapVector.642", %"class.blink::HeapHashSet", %"class.blink::HeapHashMap.458", %"class.blink::Member.465", %"class.blink::HeapHashMap.831", %class.scoped_refptr.838, %class.scoped_refptr.839, %"class.blink::Member.383", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.840", %"class.blink::Member.510" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.630" = type { %"class.blink::MemberBase.631" }
%"class.blink::MemberBase.631" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.634", %"class.blink::HeapVector.642", i8 }>
%"class.blink::HeapVector.634" = type { %"class.WTF::Vector.637" }
%"class.WTF::Vector.637" = type { %"class.WTF::VectorBuffer.638" }
%"class.WTF::VectorBuffer.638" = type { %"class.WTF::VectorBufferBase.639" }
%"class.WTF::VectorBufferBase.639" = type { %"class.blink::Member.640"*, i32, i32 }
%"class.blink::Member.640" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.653", %"class.blink::Member.655", %"class.blink::Member.655", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.653" = type <{ %"class.blink::Member.655"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.655" = type { %"class.blink::MemberBase.656" }
%"class.blink::MemberBase.656" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.431", %"class.blink::Member.655", %"class.blink::Member.655" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.657" = type { %"class.blink::MemberBase.658" }
%"class.blink::MemberBase.658" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.659" = type { %"class.WTF::HashMap.662" }
%"class.WTF::HashMap.662" = type { %"class.WTF::HashTable.663" }
%"class.WTF::HashTable.663" = type <{ %"struct.WTF::KeyValuePair.665"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.665" = type opaque
%"class.blink::HeapHashSet.666" = type { %"class.WTF::HashSet.669" }
%"class.WTF::HashSet.669" = type { %"class.WTF::HashTable.670" }
%"class.WTF::HashTable.670" = type <{ %"class.blink::Member"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.672" = type { %"class.blink::MemberBase.673" }
%"class.blink::MemberBase.673" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.676", %"class.blink::Member.678" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.676" = type { %"class.blink::MemberBase.677" }
%"class.blink::MemberBase.677" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type opaque
%"class.blink::Member.678" = type { %"class.blink::MemberBase.679" }
%"class.blink::MemberBase.679" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.682", %"class.blink::Member.684" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.682" = type { %"class.blink::MemberBase.683" }
%"class.blink::MemberBase.683" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.684" = type { %"class.blink::MemberBase.685" }
%"class.blink::MemberBase.685" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1184", %"class.blink::Member.678", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector.1184" = type { %"class.WTF::Vector.1187" }
%"class.WTF::Vector.1187" = type { %"class.WTF::VectorBuffer.1188" }
%"class.WTF::VectorBuffer.1188" = type { %"class.WTF::VectorBufferBase.1189" }
%"class.WTF::VectorBufferBase.1189" = type { %"class.blink::Member.684"*, i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1191, i32, %"class.absl::optional.1192", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.554" }>
%class.sk_sp.1191 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1192" = type { %"class.absl::optional_internal::optional_data.1193" }
%"class.absl::optional_internal::optional_data.1193" = type { %"class.absl::optional_internal::optional_data_base.1194" }
%"class.absl::optional_internal::optional_data_base.1194" = type { %"class.absl::optional_internal::optional_data_dtor_base.1195" }
%"class.absl::optional_internal::optional_data_dtor_base.1195" = type { i8, %union.anon.1196 }
%union.anon.1196 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.686" = type { %"class.blink::MemberBase.687" }
%"class.blink::MemberBase.687" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.444", %class.scoped_refptr.697, %"class.blink::SelectorFilter", %"class.blink::Member.657", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.690" }
%"class.blink::HeapHashMap.690" = type { %"class.WTF::HashMap.693" }
%"class.WTF::HashMap.693" = type { %"class.WTF::HashTable.694" }
%"class.WTF::HashTable.694" = type <{ %"struct.WTF::KeyValuePair.696"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.696" = type opaque
%class.scoped_refptr.697 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.698", %"class.std::__1::unique_ptr.710" }
%"class.blink::HeapVector.698" = type { %"class.WTF::Vector.701" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.510", %"class.WTF::Vector.704" }
%"class.WTF::Vector.704" = type { %"class.WTF::VectorBuffer.705" }
%"class.WTF::VectorBuffer.705" = type { %"class.WTF::VectorBufferBase.706", [16 x i8] }
%"class.WTF::VectorBufferBase.706" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.716" = type { %"class.blink::MemberBase.717" }
%"class.blink::MemberBase.717" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.718" = type { %"class.blink::MemberBase.719" }
%"class.blink::MemberBase.719" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.722", i8, [7 x i8] }>
%"class.blink::Member.722" = type { %"class.blink::MemberBase.723" }
%"class.blink::MemberBase.723" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.724" = type { %"class.blink::MemberBase.725" }
%"class.blink::MemberBase.725" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.241", i8, i8, [6 x i8] }>
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.728" }
%"class.blink::HeapHashMap.728" = type { %"class.WTF::HashMap.731" }
%"class.WTF::HashMap.731" = type { %"class.WTF::HashTable.732" }
%"class.WTF::HashTable.732" = type <{ %"struct.WTF::KeyValuePair.734"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.734" = type { %"class.blink::Member.493", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1366", %"class.WTF::Vector.1366" }
%"class.WTF::Vector.1366" = type { %"class.WTF::VectorBuffer.1367" }
%"class.WTF::VectorBuffer.1367" = type { %"class.WTF::VectorBufferBase.1368" }
%"class.WTF::VectorBufferBase.1368" = type { %class.scoped_refptr.1360*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.431", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.735" = type { %"class.WTF::HashSet.738" }
%"class.WTF::HashSet.738" = type { %"class.WTF::HashTable.739" }
%"class.WTF::HashTable.739" = type <{ %"class.blink::Member.510"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.741" = type { %"class.blink::MemberBase.742" }
%"class.blink::MemberBase.742" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type { %"class.blink::FontSelector", %"class.blink::WeakMember.747", %"class.blink::Member.749", %"class.blink::HeapHashSet.784", %"class.blink::GenericFontFamilySettings" }
%"class.blink::FontSelector" = type { %"class.blink::FontCacheClient", %"class.blink::Member.745" }
%"class.blink::FontCacheClient" = type { i32 (...)** }
%"class.blink::Member.745" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::FontFallbackMap"* }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::WeakMember.747" = type { %"class.blink::MemberBase.748" }
%"class.blink::MemberBase.748" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.749" = type { %"class.blink::MemberBase.750" }
%"class.blink::MemberBase.750" = type { %"class.blink::FontFaceCache"* }
%"class.blink::FontFaceCache" = type <{ %"class.blink::HeapHashMap.753", %"class.blink::HeapHashMap.760", %"class.blink::HeapHashMap.767", %"class.blink::HeapLinkedHashSet", i32, [4 x i8] }>
%"class.blink::HeapHashMap.753" = type { %"class.WTF::HashMap.756" }
%"class.WTF::HashMap.756" = type { %"class.WTF::HashTable.757" }
%"class.WTF::HashTable.757" = type <{ %"struct.WTF::KeyValuePair.759"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.759" = type opaque
%"class.blink::HeapHashMap.760" = type { %"class.WTF::HashMap.763" }
%"class.WTF::HashMap.763" = type { %"class.WTF::HashTable.764" }
%"class.WTF::HashTable.764" = type <{ %"struct.WTF::KeyValuePair.766"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.766" = type opaque
%"class.blink::HeapHashMap.767" = type { %"class.WTF::HashMap.770" }
%"class.WTF::HashMap.770" = type { %"class.WTF::HashTable.771" }
%"class.WTF::HashTable.771" = type <{ %"struct.WTF::KeyValuePair.773"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.773" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.776", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.776" = type { %"class.WTF::HashTable.777" }
%"class.WTF::HashTable.777" = type <{ %"struct.WTF::KeyValuePair.779"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.779" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.780", i32, i32 }
%"class.WTF::Vector.780" = type { %"class.WTF::VectorBuffer.781" }
%"class.WTF::VectorBuffer.781" = type { %"class.WTF::VectorBufferBase.782" }
%"class.WTF::VectorBufferBase.782" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapHashSet.784" = type { %"class.WTF::HashSet.787" }
%"class.WTF::HashSet.787" = type { %"class.WTF::HashTable.788" }
%"class.WTF::HashTable.788" = type <{ %"class.blink::WeakMember.790"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.790" = type opaque
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.791", %"class.WTF::HashMap.791", %"class.WTF::HashMap.791", %"class.WTF::HashMap.791", %"class.WTF::HashMap.791", %"class.WTF::HashMap.791", %"class.WTF::HashMap.791", %"class.std::__1::unique_ptr.796" }
%"class.WTF::HashMap.791" = type { %"class.WTF::HashTable.792" }
%"class.WTF::HashTable.792" = type <{ %"struct.WTF::KeyValuePair.795"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.795" = type opaque
%"class.std::__1::unique_ptr.796" = type { %"class.std::__1::__compressed_pair.797" }
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"class.WTF::Vector.799"* }
%"class.WTF::Vector.799" = type opaque
%"class.blink::HeapHashMap.803" = type { %"class.WTF::HashMap.806" }
%"class.WTF::HashMap.806" = type { %"class.WTF::HashTable.807" }
%"class.WTF::HashTable.807" = type <{ %"struct.WTF::KeyValuePair.809"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.809" = type opaque
%"class.blink::HeapHashMap.810" = type { %"class.WTF::HashMap.813" }
%"class.WTF::HashMap.813" = type { %"class.WTF::HashTable.814" }
%"class.WTF::HashTable.814" = type <{ %"struct.WTF::KeyValuePair.816"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.816" = type opaque
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.823" = type { %"class.WTF::Vector.826" }
%"class.WTF::Vector.826" = type { %"class.WTF::VectorBuffer.827" }
%"class.WTF::VectorBuffer.827" = type { %"class.WTF::VectorBufferBase.828" }
%"class.WTF::VectorBufferBase.828" = type { %"struct.std::__1::pair.829"*, i32, i32 }
%"struct.std::__1::pair.829" = type opaque
%"class.blink::HeapVector.642" = type { %"class.WTF::Vector.645" }
%"class.WTF::Vector.645" = type { %"class.WTF::VectorBuffer.646" }
%"class.WTF::VectorBuffer.646" = type { %"class.WTF::VectorBufferBase.647" }
%"class.WTF::VectorBufferBase.647" = type { %"struct.std::__1::pair.648"*, i32, i32 }
%"struct.std::__1::pair.648" = type { %"class.blink::Member.2", %"class.blink::Member.241" }
%"class.blink::HeapHashMap.831" = type { %"class.WTF::HashMap.834" }
%"class.WTF::HashMap.834" = type { %"class.WTF::HashTable.835" }
%"class.WTF::HashTable.835" = type <{ %"struct.WTF::KeyValuePair.837"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.837" = type opaque
%class.scoped_refptr.838 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.839 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type opaque
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.840" = type { %"class.WTF::HashSet.843" }
%"class.WTF::HashSet.843" = type { %"class.WTF::HashTable.844" }
%"class.WTF::HashTable.844" = type <{ %"class.blink::Member.846"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.846" = type opaque
%"class.blink::Member.847" = type { %"class.blink::MemberBase.848" }
%"class.blink::MemberBase.848" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member", %"class.blink::HeapVector" }
%"class.blink::Member.849" = type { %"class.blink::MemberBase.850" }
%"class.blink::MemberBase.850" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.851" = type { %"class.blink::MemberBase.852" }
%"class.blink::MemberBase.852" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.853" = type { %"class.WTF::HashMap.856" }
%"class.WTF::HashMap.856" = type { %"class.WTF::HashTable.857" }
%"class.WTF::HashTable.857" = type <{ %"struct.WTF::KeyValuePair.859"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.859" = type opaque
%"class.WTF::Vector.860" = type { %"class.WTF::VectorBuffer.861" }
%"class.WTF::VectorBuffer.861" = type { %"class.WTF::VectorBufferBase.862" }
%"class.WTF::VectorBufferBase.862" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.865" = type { %"class.blink::MemberBase.866" }
%"class.blink::MemberBase.866" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.867" = type { %"class.blink::MemberBase.868" }
%"class.blink::MemberBase.868" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.512" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.266 }
%class.scoped_refptr.266 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.267", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.267" = type { %"class.base::RefCounted.268" }
%"class.base::RefCounted.268" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.516", %"class.blink::Member.289", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.516" = type { %"class.WTF::SingleThreadedBitField.517" }
%"class.WTF::SingleThreadedBitField.517" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.519", %"class.WTF::AtomicString", %"class.WTF::Vector.521" }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.521" = type { %"class.WTF::VectorBuffer.522" }
%"class.WTF::VectorBuffer.522" = type { %"class.WTF::VectorBufferBase.283", [32 x i8] }
%"class.WTF::VectorBufferBase.283" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.871" = type { %"class.WTF::Vector.874" }
%"class.WTF::Vector.874" = type { %"class.WTF::VectorBuffer.875" }
%"class.WTF::VectorBuffer.875" = type { %"class.WTF::VectorBufferBase.876" }
%"class.WTF::VectorBufferBase.876" = type { %"class.blink::Member.877"*, i32, i32 }
%"class.blink::Member.877" = type opaque
%"class.std::__1::unique_ptr.879" = type { %"class.std::__1::__compressed_pair.880" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.885" = type { %"class.WTF::HashSet.888" }
%"class.WTF::HashSet.888" = type { %"class.WTF::HashTable.889" }
%"class.WTF::HashTable.889" = type <{ %"class.blink::WeakMember.891"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.891" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.892", i32, [4 x i8] }>
%"class.WTF::Vector.892" = type { %"class.WTF::VectorBuffer.893" }
%"class.WTF::VectorBuffer.893" = type { %"class.WTF::VectorBufferBase.894" }
%"class.WTF::VectorBufferBase.894" = type { %"struct.std::__1::pair.895"*, i32, i32 }
%"struct.std::__1::pair.895" = type opaque
%"class.blink::Member.898" = type { %"class.blink::MemberBase.899" }
%"class.blink::MemberBase.899" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.900" = type { %"class.WTF::VectorBuffer.901" }
%"class.WTF::VectorBuffer.901" = type { %"class.WTF::VectorBufferBase.902" }
%"class.WTF::VectorBufferBase.902" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.905" = type { %"class.std::__1::__compressed_pair.906" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.525" = type { %"class.WTF::Vector.528" }
%"class.WTF::Vector.528" = type { %"class.WTF::VectorBuffer.529" }
%"class.WTF::VectorBuffer.529" = type { %"class.WTF::VectorBufferBase.530" }
%"class.WTF::VectorBufferBase.530" = type { %"class.blink::Member.510"*, i32, i32 }
%"class.blink::HeapVector.911" = type { %"class.WTF::Vector.914" }
%"class.WTF::Vector.914" = type { %"class.WTF::VectorBuffer.915" }
%"class.WTF::VectorBuffer.915" = type { %"class.WTF::VectorBufferBase.916" }
%"class.WTF::VectorBufferBase.916" = type { %"class.blink::Member.917"*, i32, i32 }
%"class.blink::Member.917" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.444" }
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.925" = type { %"class.blink::MemberBase.926" }
%"class.blink::MemberBase.926" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.927" = type { %"class.blink::MemberBase.928" }
%"class.blink::MemberBase.928" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.929" = type { %"class.WTF::HashTable.930" }
%"class.WTF::HashTable.930" = type <{ %"struct.WTF::KeyValuePair.933"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.933" = type opaque
%"class.blink::Member.934" = type { %"class.blink::MemberBase.935" }
%"class.blink::MemberBase.935" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.936" = type { %"class.blink::MemberBase.937" }
%"class.blink::MemberBase.937" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type { %"class.blink::AnimationTimeline", %"class.base::TimeDelta", %"class.base::TimeTicks", i8, double, %"class.blink::Member.1066" }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.444", i32, [4 x i8], %"class.blink::HeapHashSet.938", %"class.blink::HeapHashSet.1016", %"class.std::__1::unique_ptr.1023", %"class.absl::optional.1056" }
%"class.blink::HeapHashSet.938" = type { %"class.WTF::HashSet.941" }
%"class.WTF::HashSet.941" = type { %"class.WTF::HashTable.942" }
%"class.WTF::HashTable.942" = type <{ %"class.blink::Member.944"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.944" = type { %"class.blink::MemberBase.945" }
%"class.blink::MemberBase.945" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional", %"class.absl::optional.977", %"class.absl::optional.977", %"class.absl::optional.982", %"class.absl::optional.977", i8, [3 x i8], i32, %"class.blink::Member.987", %"class.blink::Member.987", %"class.blink::Member.989", %"class.blink::Member.444", %"class.blink::Member.1004", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.1006", %"class.blink::Member.1006", %"class.blink::Member.1006", %"class.std::__1::unique_ptr.1008", i8, [3 x i8], i32, %"class.blink::Member.1014", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.960" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.948" }
%"class.blink::HeapVector.948" = type { %"class.WTF::Vector.951" }
%"class.WTF::Vector.951" = type { %"class.WTF::VectorBuffer.952" }
%"class.WTF::VectorBuffer.952" = type { %"class.WTF::VectorBufferBase.953", [32 x i8] }
%"class.WTF::VectorBufferBase.953" = type { %"struct.std::__1::pair.954"*, i32, i32 }
%"struct.std::__1::pair.954" = type { %"class.WTF::AtomicString", %"class.blink::Member.955" }
%"class.blink::Member.955" = type { %"class.blink::MemberBase.956" }
%"class.blink::MemberBase.956" = type { %"class.blink::HeapVector.957"* }
%"class.blink::HeapVector.957" = type opaque
%"class.std::__1::unique_ptr.960" = type { %"class.std::__1::__compressed_pair.961" }
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.962" }
%"struct.std::__1::__compressed_pair_elem.962" = type { %"class.WTF::Vector.963"* }
%"class.WTF::Vector.963" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.967" }
%"class.blink::WeakMember.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.976 }
%union.anon.976 = type { double }
%"class.absl::optional.982" = type { %"class.absl::optional_internal::optional_data.983" }
%"class.absl::optional_internal::optional_data.983" = type { %"class.absl::optional_internal::optional_data_base.984" }
%"class.absl::optional_internal::optional_data_base.984" = type { %"class.absl::optional_internal::optional_data_dtor_base.985" }
%"class.absl::optional_internal::optional_data_dtor_base.985" = type { i8, %union.anon.986 }
%union.anon.986 = type { i32 }
%"class.absl::optional.977" = type { %"class.absl::optional_internal::optional_data.978" }
%"class.absl::optional_internal::optional_data.978" = type { %"class.absl::optional_internal::optional_data_base.979" }
%"class.absl::optional_internal::optional_data_base.979" = type { %"class.absl::optional_internal::optional_data_dtor_base.980" }
%"class.absl::optional_internal::optional_data_dtor_base.980" = type { i8, %union.anon.981 }
%union.anon.981 = type { %"class.blink::AnimationTimeDelta" }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.987" = type { %"class.blink::MemberBase.988" }
%"class.blink::MemberBase.988" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.989" = type { %"class.blink::MemberBase.990" }
%"class.blink::MemberBase.990" = type { %"class.blink::AnimationEffect"* }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.991", %"struct.blink::Timing", %"class.blink::Member.995", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional.977", %"class.absl::optional.999", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.991" = type { %"class.blink::MemberBase.992" }
%"class.blink::MemberBase.992" = type { %"class.blink::AnimationEffectOwner"* }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.977", i32, [4 x i8], %class.scoped_refptr.993, i16, [6 x i8] }>
%class.scoped_refptr.993 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.994" }
%"class.base::RefCountedThreadSafe.994" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.995" = type { %"class.blink::MemberBase.996" }
%"class.blink::MemberBase.996" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional", %"class.absl::optional", i8, i8, i8, %"class.absl::optional.977", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.999" = type { %"class.absl::optional_internal::optional_data.1000" }
%"class.absl::optional_internal::optional_data.1000" = type { %"class.absl::optional_internal::optional_data_base.1001" }
%"class.absl::optional_internal::optional_data_base.1001" = type { %"class.absl::optional_internal::optional_data_dtor_base.1002" }
%"class.absl::optional_internal::optional_data_dtor_base.1002" = type { i8, %union.anon.1003 }
%union.anon.1003 = type { i32 }
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.1008" = type { %"class.std::__1::__compressed_pair.1009" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.1010" }
%"struct.std::__1::__compressed_pair_elem.1010" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional", %"class.absl::optional", double, i8, i32 }
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.1175", %"class.std::__1::unique_ptr.1176", %"class.blink::Member.944" }
%"class.blink::ThreadState::PrefinalizerRegistration.1175" = type { i8 }
%"class.std::__1::unique_ptr.1176" = type { %"class.std::__1::__compressed_pair.1177" }
%"class.std::__1::__compressed_pair.1177" = type { %"struct.std::__1::__compressed_pair_elem.1178" }
%"struct.std::__1::__compressed_pair_elem.1178" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.1016" = type { %"class.WTF::HashSet.1019" }
%"class.WTF::HashSet.1019" = type { %"class.WTF::HashTable.1020" }
%"class.WTF::HashTable.1020" = type <{ %"class.blink::WeakMember.1022"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1022" = type opaque
%"class.std::__1::unique_ptr.1023" = type { %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.1026 }
%class.scoped_refptr.1026 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.1027", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.1027" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.1028" }
%"class.std::__1::__hash_table.1028" = type <{ %"class.std::__1::unique_ptr.1029", %"class.std::__1::__compressed_pair.1039", %"class.std::__1::__compressed_pair.1044", %"class.std::__1::__compressed_pair.1048", [4 x i8] }>
%"class.std::__1::unique_ptr.1029" = type { %"class.std::__1::__compressed_pair.1030" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.1031", %"struct.std::__1::__compressed_pair_elem.1033" }
%"struct.std::__1::__compressed_pair_elem.1031" = type { %"struct.std::__1::__hash_node_base.1032"** }
%"struct.std::__1::__hash_node_base.1032" = type { %"struct.std::__1::__hash_node_base.1032"* }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"class.std::__1::__bucket_list_deallocator.1034" }
%"class.std::__1::__bucket_list_deallocator.1034" = type { %"class.std::__1::__compressed_pair.1035" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.1040" }
%"struct.std::__1::__compressed_pair_elem.1040" = type { %"struct.std::__1::__hash_node_base.1032" }
%"class.std::__1::__compressed_pair.1044" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.1056" = type { %"class.absl::optional_internal::optional_data.1057" }
%"class.absl::optional_internal::optional_data.1057" = type { %"class.absl::optional_internal::optional_data_base.1058" }
%"class.absl::optional_internal::optional_data_base.1058" = type { %"class.absl::optional_internal::optional_data_dtor_base.1059" }
%"class.absl::optional_internal::optional_data_dtor_base.1059" = type { i8, %union.anon.1060 }
%union.anon.1060 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.1061" }
%"class.absl::optional.1061" = type { %"class.absl::optional_internal::optional_data.1062" }
%"class.absl::optional_internal::optional_data.1062" = type { %"class.absl::optional_internal::optional_data_base.1063" }
%"class.absl::optional_internal::optional_data_base.1063" = type { %"class.absl::optional_internal::optional_data_dtor_base.1064" }
%"class.absl::optional_internal::optional_data_dtor_base.1064" = type { i8, %union.anon.1065 }
%union.anon.1065 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::Member.1066" = type { %"class.blink::MemberBase.1067" }
%"class.blink::MemberBase.1067" = type { %"class.blink::DocumentTimeline::PlatformTiming"* }
%"class.blink::DocumentTimeline::PlatformTiming" = type { i32 (...)** }
%"class.blink::Member.1070" = type { %"class.blink::MemberBase.1071" }
%"class.blink::MemberBase.1071" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1072" = type { %"class.blink::MemberBase.1073" }
%"class.blink::MemberBase.1073" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.598", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.589, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.589 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.590" }>
%"class.base::RefCountedThreadSafe.590" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.591 }
%class.scoped_refptr.591 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.592", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.592" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.593" }
%"struct.std::__1::atomic.593" = type { %"struct.std::__1::__atomic_base.594" }
%"struct.std::__1::__atomic_base.594" = type { %"struct.std::__1::__atomic_base.595" }
%"struct.std::__1::__atomic_base.595" = type { %"struct.std::__1::__cxx_atomic_impl.596" }
%"struct.std::__1::__cxx_atomic_impl.596" = type { %"struct.std::__1::__cxx_atomic_base_impl.597" }
%"struct.std::__1::__cxx_atomic_base_impl.597" = type { i8 }
%"class.blink::WeakMember.598" = type { %"class.blink::MemberBase.445" }
%"class.blink::HeapHashSet.1074" = type { %"class.WTF::HashSet.1077" }
%"class.WTF::HashSet.1077" = type { %"class.WTF::HashTable.1078" }
%"class.WTF::HashTable.1078" = type <{ %"class.blink::Member.1080"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1080" = type opaque
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1085" = type { %"class.blink::MemberBase.1086" }
%"class.blink::MemberBase.1086" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1091" = type { %"class.std::__1::__compressed_pair.1092" }
%"class.std::__1::__compressed_pair.1092" = type { %"struct.std::__1::__compressed_pair_elem.1093" }
%"struct.std::__1::__compressed_pair_elem.1093" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.311", %"class.WTF::HashSet.311", %"class.WTF::HashSet.311", %"class.WTF::HashSet.311", %"class.WTF::HashSet.311", %"class.WTF::HashSet.311", i32, [4 x i8], %"class.WTF::HashMap.1100", %"class.WTF::HashMap.1100", %"class.WTF::HashMap.1100", %"class.WTF::HashMap.1100", %"class.WTF::HashMap.1100", %"class.WTF::HashMap.1100", %"class.WTF::HashMap.1100", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1100" = type { %"class.WTF::HashTable.1101" }
%"class.WTF::HashTable.1101" = type <{ %"struct.WTF::KeyValuePair.1104"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1104" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1108" = type { %"class.blink::MemberBase.1109" }
%"class.blink::MemberBase.1109" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1110" = type { %"class.blink::MemberBase.1111" }
%"class.blink::MemberBase.1111" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1112" = type { %"class.blink::MemberBase.1113" }
%"class.blink::MemberBase.1113" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1116" = type { %"class.WTF::VectorBuffer.1117" }
%"class.WTF::VectorBuffer.1117" = type { %"class.WTF::VectorBufferBase.1118" }
%"class.WTF::VectorBufferBase.1118" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1121" = type { %"class.WTF::HashMap.1124" }
%"class.WTF::HashMap.1124" = type { %"class.WTF::HashTable.1125" }
%"class.WTF::HashTable.1125" = type <{ %"struct.WTF::KeyValuePair.1127"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1127" = type opaque
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1130" = type { %"class.std::__1::__compressed_pair.1131" }
%"class.std::__1::__compressed_pair.1131" = type { %"struct.std::__1::__compressed_pair_elem.1132" }
%"struct.std::__1::__compressed_pair_elem.1132" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1136" = type { %"class.blink::MemberBase.1137" }
%"class.blink::MemberBase.1137" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1138" = type { %"class.blink::MemberBase.1139" }
%"class.blink::MemberBase.1139" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1140" = type { %"class.WTF::HashMap.1143" }
%"class.WTF::HashMap.1143" = type { %"class.WTF::HashTable.1144" }
%"class.WTF::HashTable.1144" = type <{ %"struct.WTF::KeyValuePair.1146"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1146" = type opaque
%"class.blink::HeapObserverSet.1147" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1148" }
%"class.blink::HeapHashSet.1148" = type { %"class.WTF::HashSet.1151" }
%"class.WTF::HashSet.1151" = type { %"class.WTF::HashTable.1152" }
%"class.WTF::HashTable.1152" = type <{ %"class.blink::WeakMember.1154"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1154" = type opaque
%"class.blink::Member.1155" = type { %"class.blink::MemberBase.1156" }
%"class.blink::MemberBase.1156" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1157" = type { %"class.blink::MemberBase.1158" }
%"class.blink::MemberBase.1158" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.444", %"class.blink::HeapHashSet.1164", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1171", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1164" = type { %"class.WTF::HashSet.1167" }
%"class.WTF::HashSet.1167" = type { %"class.WTF::HashTable.1168" }
%"class.WTF::HashTable.1168" = type <{ %"class.blink::Member.1170"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1170" = type opaque
%"class.blink::HeapTaskRunnerTimer.1171" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1172", { i64, i64 } }
%"class.blink::WeakMember.1172" = type { %"class.blink::MemberBase.1158" }
%"class.blink::WeakMember.1159" = type { %"class.blink::MemberBase.432" }
%"class.blink::Member.1160" = type { %"class.blink::MemberBase.1161" }
%"class.blink::MemberBase.1161" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.499" }
%"class.blink::HeapHashMap.499" = type { %"class.WTF::HashMap.502" }
%"class.WTF::HashMap.502" = type { %"class.WTF::HashTable.503" }
%"class.WTF::HashTable.503" = type <{ %"struct.WTF::KeyValuePair.505"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.505" = type { %"class.WTF::AtomicString", %"class.blink::Member.506" }
%"class.blink::Member.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.510", i32, %"class.blink::HeapVector.525" }
%"class.blink::Member.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.538" }
%"class.blink::Member.538" = type { %"class.blink::MemberBase.539" }
%"class.blink::MemberBase.539" = type { %"class.blink::HeapHashMap.540"* }
%"class.blink::HeapHashMap.540" = type opaque
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.2"*, i32, i32 }
%"class.WTF::Vector.320" = type { %"class.WTF::VectorBuffer.321" }
%"class.WTF::VectorBuffer.321" = type { %"class.WTF::VectorBufferBase.322" }
%"class.WTF::VectorBufferBase.322" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::HeapHashMap.458" = type { %"class.WTF::HashMap.461" }
%"class.WTF::HashMap.461" = type { %"class.WTF::HashTable.462" }
%"class.WTF::HashTable.462" = type <{ %"struct.WTF::KeyValuePair.464"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.464" = type { %"class.WTF::AtomicString", %"class.blink::Member.348" }
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type { %"class.blink::Member.444", %"class.blink::Member", %"class.blink::HeapHashMap.469" }
%"class.blink::HeapHashMap.469" = type { %"class.WTF::HashMap.472" }
%"class.WTF::HashMap.472" = type { %"class.WTF::HashTable.473" }
%"class.WTF::HashTable.473" = type <{ %"struct.WTF::KeyValuePair.475"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.475" = type opaque
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::HeapVector.478"* }
%"class.blink::HeapVector.478" = type { %"class.WTF::Vector.481" }
%"class.WTF::Vector.481" = type { %"class.WTF::VectorBuffer.482" }
%"class.WTF::VectorBuffer.482" = type { %"class.WTF::VectorBufferBase.483" }
%"class.WTF::VectorBufferBase.483" = type { %"class.blink::Member.484"*, i32, i32 }
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::ScopedStyleResolver::RuleSubSet"* }
%"class.blink::ScopedStyleResolver::RuleSubSet" = type { %"class.blink::Member.2", i32, %"class.blink::Member.241" }
%"class.blink::FontFace" = type { %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable.1268", %"class.blink::ExecutionContextClient", %"class.WTF::AtomicString", %"class.WTF::String", %"class.blink::Member.383", %"class.blink::Member.383", %"class.blink::Member.383", %"class.blink::Member.383", %"class.blink::Member.383", %"class.blink::Member.383", %"class.blink::Member.383", %"class.blink::Member.383", %"class.blink::Member.383", %"class.blink::Member.383", %"class.blink::Member.383", %"class.blink::Member.383", i32, %"class.blink::Member.1270", %"class.blink::Member.1272", %"class.blink::Member.1275", %"class.blink::HeapVector.1277" }
%"class.blink::ActiveScriptWrappable.1268" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1269" }
%"class.blink::WeakMember.1269" = type { %"class.blink::MemberBase.564" }
%"class.blink::Member.1270" = type { %"class.blink::MemberBase.1271" }
%"class.blink::MemberBase.1271" = type { %"class.blink::DOMException"* }
%"class.blink::DOMException" = type { %"class.blink::ScriptWrappable", i16, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.1272" = type { %"class.blink::MemberBase.1273" }
%"class.blink::MemberBase.1273" = type { %"class.blink::ScriptPromiseProperty.1274"* }
%"class.blink::ScriptPromiseProperty.1274" = type opaque
%"class.blink::Member.1275" = type { %"class.blink::MemberBase.1276" }
%"class.blink::MemberBase.1276" = type { %"class.blink::CSSFontFace"* }
%"class.blink::CSSFontFace" = type opaque
%"class.blink::HeapVector.1277" = type { %"class.WTF::Vector.1280" }
%"class.WTF::Vector.1280" = type { %"class.WTF::VectorBuffer.1281" }
%"class.WTF::VectorBuffer.1281" = type { %"class.WTF::VectorBufferBase.1282" }
%"class.WTF::VectorBufferBase.1282" = type { %"class.blink::Member.1283"*, i32, i32 }
%"class.blink::Member.1283" = type opaque
%"class.blink::ContainerQuery" = type <{ %class.scoped_refptr.430, %"class.base::StrongAlias", [7 x i8] }>
%"class.base::StrongAlias" = type { i8 }
%"class.blink::HeapHashSet.1285" = type { %"class.WTF::HashSet.1288" }
%"class.WTF::HashSet.1288" = type { %"class.WTF::HashTable.1289" }
%"class.WTF::HashTable.1289" = type <{ %"class.blink::Member.1291"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1291" = type { %"class.blink::MemberBase.1371" }
%"class.blink::MemberBase.1371" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleChangeReasonForTracing" = type { i8*, %"class.WTF::AtomicString" }
%"class.blink::ElementRuleCollector" = type { %"class.blink::ElementResolveContext"*, %"class.blink::StyleRecalcContext", %"class.blink::SelectorFilter"*, %class.scoped_refptr.1295, %"class.blink::StyleRequest", i32, i8, i8, i8, i8, i32, %"class.blink::HeapVector.1308", %"class.blink::Member.1318", %"class.blink::Member.1321", %"class.blink::MatchResult"* }
%"class.blink::ElementResolveContext" = type <{ %"class.blink::Element"*, %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"*, %class.scoped_refptr.697, i32, [4 x i8] }>
%"class.blink::StyleRecalcContext" = type { %"class.blink::ContainerQueryEvaluator"* }
%"class.blink::ContainerQueryEvaluator" = type opaque
%class.scoped_refptr.1295 = type { %"class.blink::ComputedStyle"* }
%"class.blink::StyleRequest" = type { %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*, i32, i8, i32, i32, %"class.blink::CustomScrollbar"*, %"class.WTF::AtomicString" }
%"class.blink::CustomScrollbar" = type <{ %"class.blink::Scrollbar", %"class.WTF::HashMap.1303", i8, [7 x i8] }>
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1298", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1300", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.510" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1298" = type { %"class.blink::MemberBase.1299" }
%"class.blink::MemberBase.1299" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1300" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1301", { i64, i64 } }
%"class.blink::WeakMember.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::Scrollbar"* }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"class.WTF::HashMap.1303" = type { %"class.WTF::HashTable.1304" }
%"class.WTF::HashTable.1304" = type <{ %"struct.WTF::KeyValuePair.1307"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1307" = type { i32, %"class.blink::LayoutCustomScrollbarPart"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::HeapVector.1308" = type { %"class.WTF::Vector.1311" }
%"class.WTF::Vector.1311" = type { %"class.WTF::VectorBuffer.1312" }
%"class.WTF::VectorBuffer.1312" = type { %"class.WTF::VectorBufferBase.1313", [768 x i8] }
%"class.WTF::VectorBufferBase.1313" = type { %"class.blink::MatchedRule"*, i32, i32 }
%"class.blink::MatchedRule" = type { %"class.blink::Member.258", i64, %"class.blink::Member.1314" }
%"class.blink::Member.1314" = type { %"class.blink::MemberBase.1315" }
%"class.blink::MemberBase.1315" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::HeapVector.1320"* }
%"class.blink::HeapVector.1320" = type opaque
%"class.blink::Member.1321" = type { %"class.blink::MemberBase.1322" }
%"class.blink::MemberBase.1322" = type { %"class.blink::HeapVector.1323"* }
%"class.blink::HeapVector.1323" = type opaque
%"class.blink::MatchResult" = type <{ %"class.blink::HeapVector.1324", %"class.blink::HeapVector.1332", i8, i8, i8, i8, i16, [2 x i8] }>
%"class.blink::HeapVector.1324" = type { %"class.WTF::Vector.1327" }
%"class.WTF::Vector.1327" = type { %"class.WTF::VectorBuffer.1328" }
%"class.WTF::VectorBuffer.1328" = type { %"class.WTF::VectorBufferBase.1329", [1024 x i8] }
%"class.WTF::VectorBufferBase.1329" = type { %"struct.blink::MatchedProperties"*, i32, i32 }
%"struct.blink::MatchedProperties" = type <{ %"class.blink::Member.289", %"struct.blink::MatchedProperties::Data", [4 x i8] }>
%"struct.blink::MatchedProperties::Data" = type { i8, i8, i16 }
%"class.blink::HeapVector.1332" = type { %"class.WTF::Vector.1335" }
%"class.WTF::Vector.1335" = type { %"class.WTF::VectorBuffer.1336" }
%"class.WTF::VectorBuffer.1336" = type { %"class.WTF::VectorBufferBase.1337", [32 x i8] }
%"class.WTF::VectorBufferBase.1337" = type { %"class.blink::Member.1338"*, i32, i32 }
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.748" }
%"class.blink::MatchRequest" = type { %"class.blink::RuleSet"*, %"class.blink::ContainerNode"*, %"class.blink::CSSStyleSheet"*, i32, %"class.blink::Element"* }
%"class.blink::PartNames" = type { %"class.WTF::HashSet.311", %"class.WTF::Vector.1341" }
%"class.WTF::Vector.1341" = type { %"class.WTF::VectorBuffer.1342" }
%"class.WTF::VectorBuffer.1342" = type { %"class.WTF::VectorBufferBase.1343" }
%"class.WTF::VectorBufferBase.1343" = type { %"class.blink::NamesMap"**, i32, i32 }
%"class.blink::NamesMap" = type { %"class.WTF::HashMap.1344" }
%"class.WTF::HashMap.1344" = type { %"class.WTF::HashTable.1345" }
%"class.WTF::HashTable.1345" = type <{ %"struct.WTF::KeyValuePair.1348"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1348" = type { %"class.WTF::AtomicString", %"class.absl::optional.1351" }
%"class.absl::optional.1351" = type { %"class.absl::optional_internal::optional_data.1352" }
%"class.absl::optional_internal::optional_data.1352" = type { %"class.absl::optional_internal::optional_data_base.1353" }
%"class.absl::optional_internal::optional_data_base.1353" = type { %"class.absl::optional_internal::optional_data_dtor_base.1354" }
%"class.absl::optional_internal::optional_data_dtor_base.1354" = type { i8, %union.anon.1355 }
%union.anon.1355 = type { %"class.blink::SpaceSplitString" }
%"class.blink::PageRuleCollector" = type { i8, i8, %"class.WTF::AtomicString", %"class.blink::MatchResult"* }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.1392", %"class.blink::FreeList", %"class.WTF::Vector.1397" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.1392" = type { %"class.WTF::VectorBuffer.1393" }
%"class.WTF::VectorBuffer.1393" = type { %"class.WTF::VectorBufferBase.1394" }
%"class.WTF::VectorBufferBase.1394" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.1397" = type { %"class.WTF::VectorBuffer.1398" }
%"class.WTF::VectorBuffer.1398" = type { %"class.WTF::VectorBufferBase.1399" }
%"class.WTF::VectorBufferBase.1399" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1382" }
%"class.std::__1::__compressed_pair.1382" = type { %"struct.std::__1::__compressed_pair_elem.1383" }
%"struct.std::__1::__compressed_pair_elem.1383" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.1384 }
%union.anon.1384 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::HeapVectorBacking.1419" = type { i8 }
%"class.blink::HeapVectorBacking.1439" = type { i8 }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::HeapHashTableBacking.1462" = type { i8 }
%"class.blink::HeapVectorBacking.1478" = type { i8 }

$_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleKeyframesEEELj0ENS1_13HeapAllocatorEEC2ERKS6_ = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18StyleRuleKeyframesEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_18StyleRuleKeyframesEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEEC2ERKS6_ = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17StyleRuleFontFaceEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17StyleRuleFontFaceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink16MediaQueryResultELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j = comdat any

$_ZN3WTF6VectorIN5blink16MediaQueryResultELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16MediaQueryResultEEEmm = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleSheetEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_18StyleSheetContentsEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS3_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_18StyleSheetContentsEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_18StyleSheetContentsEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_18StyleSheetContentsEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_18StyleSheetContentsEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_18StyleSheetContentsEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_18StyleSheetContentsEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_18StyleSheetContentsEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_18StyleRuleKeyframesEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_18StyleRuleKeyframesEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_18StyleRuleKeyframesEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_18StyleRuleKeyframesEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_18StyleRuleKeyframesEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_12AtomicStringENS1_12KeyValuePairIS3_NS_6MemberINS_18StyleRuleKeyframesEEEEENS1_24KeyValuePairKeyExtractorENS1_16AtomicStringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_18StyleRuleKeyframesEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_12AtomicStringENS3_12KeyValuePairIS5_NS_6MemberINS_18StyleRuleKeyframesEEEEENS3_24KeyValuePairKeyExtractorENS3_16AtomicStringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_18StyleRuleKeyframesEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS3_N5blink6MemberINS5_18StyleRuleKeyframesEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_15CounterStyleMapEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEELj0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_19ScopedStyleResolver10RuleSubSetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_7RuleSetEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_7RuleSetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_7RuleSetEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_7RuleSetEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEELj0EEEEEPhm = comdat any

$_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEELj0EEEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_19ScopedStyleResolver10RuleSubSetEEEPhm = comdat any

$_ZN5blink9NameTraitINS_19ScopedStyleResolver10RuleSubSetEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_19ScopedStyleResolver10RuleSubSetEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_19ScopedStyleResolver10RuleSubSetEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_19ScopedStyleResolver10RuleSubSetEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_18StyleSheetContentsEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_18StyleSheetContentsEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_18StyleRuleKeyframesEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_18StyleRuleKeyframesEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_7RuleSetEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_7RuleSetEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEELj0EEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEELj0EEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_19ScopedStyleResolver10RuleSubSetEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_19ScopedStyleResolver10RuleSubSetEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink19style_change_reason17kStyleSheetChangeE = external constant [0 x i8], align 1
@_ZN5blink26RuntimeEnabledFeaturesBase51is_css_at_rule_counter_style_in_shadow_dom_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.3 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.6 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_18StyleRuleKeyframesEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [177 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::StyleRuleKeyframes>, WTF::VectorTraits<blink::Member<blink::StyleRuleKeyframes> > >]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_17StyleRuleFontFaceEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [175 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::StyleRuleFontFace>, WTF::VectorTraits<blink::Member<blink::StyleRuleFontFace> > >]\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.10 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16MediaQueryResultEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::MediaQueryResult]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13CSSStyleSheetEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [167 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::CSSStyleSheet>, WTF::VectorTraits<blink::Member<blink::CSSStyleSheet> > >]\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.13 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_18StyleSheetContentsEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_18StyleSheetContentsEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_18StyleSheetContentsEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_18StyleSheetContentsEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberIKNS1_18StyleSheetContentsEEES7_NS_17IdentityExtractorENS_10MemberHashIS6_EENS_10HashTraitsIS7_EESC_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [416 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<const blink::StyleSheetContents>, blink::Member<const blink::StyleSheetContents>, WTF::IdentityExtractor, WTF::MemberHash<const blink::StyleSheetContents>, WTF::HashTraits<blink::Member<const blink::StyleSheetContents> >, WTF::HashTraits<blink::Member<const blink::StyleSheetContents> >, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_18StyleRuleKeyframesEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_18StyleRuleKeyframesEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_12AtomicStringENS3_12KeyValuePairIS5_NS_6MemberINS_18StyleRuleKeyframesEEEEENS3_24KeyValuePairKeyExtractorENS3_16AtomicStringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_18StyleRuleKeyframesEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_18StyleRuleKeyframesEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS4_NS1_6MemberINS1_18StyleRuleKeyframesEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [426 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<WTF::AtomicString, WTF::KeyValuePair<WTF::AtomicString, blink::Member<blink::StyleRuleKeyframes> >, WTF::KeyValuePairKeyExtractor, WTF::AtomicStringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<blink::Member<blink::StyleRuleKeyframes> > >, WTF::HashTraits<WTF::AtomicString>, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7RuleSetEEEPKcv = private unnamed_addr constant [62 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::RuleSet]\00", align 1
@_ZZN5blink11GCInfoTraitINS_7RuleSetEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_7RuleSetEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_7RuleSetEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_7RuleSetEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_7RuleSetEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10HeapVectorINS1_6MemberINS1_19ScopedStyleResolver10RuleSubSetEEELj0EEEEEPKcv = private unnamed_addr constant [123 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVector<blink::Member<blink::ScopedStyleResolver::RuleSubSet>, 0>]\00", align 1
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEELj0EEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEELj0EEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEELj0EEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEELj0EEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19ScopedStyleResolver10RuleSubSetEEEPKcv = private unnamed_addr constant [86 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScopedStyleResolver::RuleSubSet]\00", align 1
@_ZZN5blink11GCInfoTraitINS_19ScopedStyleResolver10RuleSubSetEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_19ScopedStyleResolver10RuleSubSetEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_19ScopedStyleResolver10RuleSubSetEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_19ScopedStyleResolver10RuleSubSetEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_19ScopedStyleResolver10RuleSubSetEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [203 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::ScopedStyleResolver::RuleSubSet>, WTF::VectorTraits<blink::Member<blink::ScopedStyleResolver::RuleSubSet> > >]\00", align 1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::ScopedStyleResolver"* @_ZNK5blink19ScopedStyleResolver6ParentEv(%"class.blink::ScopedStyleResolver"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  br label %4

4:                                                ; preds = %9, %1
  %5 = phi %"class.blink::TreeScope"* [ %3, %1 ], [ %7, %9 ]
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = icmp eq %"class.blink::TreeScope"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 7, i32 0, i32 0
  %11 = load %"class.blink::ScopedStyleResolver"*, %"class.blink::ScopedStyleResolver"** %10, align 8
  %12 = icmp eq %"class.blink::ScopedStyleResolver"* %11, null
  br i1 %12, label %4, label %13

13:                                               ; preds = %4, %9
  %14 = phi %"class.blink::ScopedStyleResolver"* [ %11, %9 ], [ null, %4 ]
  ret %"class.blink::ScopedStyleResolver"* %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ScopedStyleResolver16AddKeyframeRulesERKNS_7RuleSetE(%"class.blink::ScopedStyleResolver"*, %"class.blink::RuleSet"* dereferenceable(560)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::HeapVector.342", align 8
  %4 = bitcast %"class.blink::HeapVector.342"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.blink::HeapVector.342", %"class.blink::HeapVector.342"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::HeapVector.342", %"class.blink::HeapVector.342"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = getelementptr inbounds %"class.blink::HeapVector.342", %"class.blink::HeapVector.342"* %3, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %1, i64 0, i32 16, i32 0
  %9 = bitcast %"class.blink::HeapVector.342"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleKeyframesEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.345"* nonnull %7, %"class.WTF::Vector.345"* dereferenceable(16) %8) #9
  %10 = load %"class.blink::Member.348"*, %"class.blink::Member.348"** %5, align 8
  %11 = load i32, i32* %6, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::Member.348", %"class.blink::Member.348"* %10, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %16, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #9
  ret void

16:                                               ; preds = %2, %16
  %17 = phi %"class.blink::Member.348"* [ %20, %16 ], [ %10, %2 ]
  %18 = getelementptr inbounds %"class.blink::Member.348", %"class.blink::Member.348"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::StyleRuleKeyframes"*, %"class.blink::StyleRuleKeyframes"** %18, align 8
  call void @_ZN5blink19ScopedStyleResolver16AddKeyframeStyleEPNS_18StyleRuleKeyframesE(%"class.blink::ScopedStyleResolver"* %0, %"class.blink::StyleRuleKeyframes"* %19)
  %20 = getelementptr inbounds %"class.blink::Member.348", %"class.blink::Member.348"* %17, i64 1
  %21 = icmp eq %"class.blink::Member.348"* %20, %13
  br i1 %21, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ScopedStyleResolver16AddKeyframeStyleEPNS_18StyleRuleKeyframesE(%"class.blink::ScopedStyleResolver"*, %"class.blink::StyleRuleKeyframes"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::StyleRuleKeyframes"*, align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  store %"class.blink::StyleRuleKeyframes"* %1, %"class.blink::StyleRuleKeyframes"** %3, align 8
  %5 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::StyleRuleKeyframes", %"class.blink::StyleRuleKeyframes"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %28, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %28

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #9
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #9
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  %27 = load %"class.blink::StyleRuleKeyframes"*, %"class.blink::StyleRuleKeyframes"** %3, align 8
  br label %28

28:                                               ; preds = %2, %10, %25
  %29 = phi %"class.blink::StyleRuleKeyframes"* [ %1, %2 ], [ %1, %10 ], [ %27, %25 ]
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %6, align 8
  %30 = getelementptr inbounds %"class.blink::StyleRuleKeyframes", %"class.blink::StyleRuleKeyframes"* %29, i64 0, i32 4
  %31 = load i32, i32* %30, align 8
  %32 = icmp slt i32 %31, 0
  %33 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 4, i32 0
  br i1 %32, label %34, label %137

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.WTF::HashMap.461", %"class.WTF::HashMap.461"* %33, i64 0, i32 0, i32 0
  %36 = load %"struct.WTF::KeyValuePair.464"*, %"struct.WTF::KeyValuePair.464"** %35, align 8
  %37 = icmp eq %"struct.WTF::KeyValuePair.464"* %36, null
  %38 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  br i1 %37, label %89, label %40

40:                                               ; preds = %34
  %41 = add i32 %39, -1
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = lshr i32 %44, 8
  %46 = and i32 %45, %41
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %36, i64 %47
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %89, label %52

52:                                               ; preds = %40
  %53 = xor i32 %45, -1
  %54 = lshr i32 %44, 31
  %55 = add nsw i32 %54, %53
  %56 = shl i32 %55, 12
  %57 = xor i32 %56, %55
  %58 = lshr i32 %57, 7
  %59 = xor i32 %58, %57
  %60 = shl i32 %59, 2
  %61 = xor i32 %60, %59
  %62 = lshr i32 %61, 20
  %63 = xor i32 %62, %61
  %64 = or i32 %63, 1
  %65 = zext i32 %64 to i64
  br label %66

66:                                               ; preds = %76, %52
  %67 = phi %"struct.WTF::KeyValuePair.464"* [ %48, %52 ], [ %81, %76 ]
  %68 = phi i64 [ %47, %52 ], [ %80, %76 ]
  %69 = phi i64 [ 0, %52 ], [ %78, %76 ]
  %70 = bitcast %"struct.WTF::KeyValuePair.464"* %67 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = icmp ne i8* %71, inttoptr (i64 -1 to i8*)
  %73 = bitcast i8* %71 to %"class.WTF::StringImpl"*
  %74 = icmp eq %"class.WTF::StringImpl"* %8, %73
  %75 = and i1 %72, %74
  br i1 %75, label %85, label %76

76:                                               ; preds = %66
  %77 = icmp eq i64 %69, 0
  %78 = select i1 %77, i64 %65, i64 %69
  %79 = add i64 %78, %68
  %80 = and i64 %79, %42
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %36, i64 %80
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %81, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %89, label %66

85:                                               ; preds = %66
  %86 = icmp eq %"struct.WTF::KeyValuePair.464"* %67, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %85
  %88 = zext i32 %39 to i64
  br label %92

89:                                               ; preds = %76, %85, %40, %34
  %90 = zext i32 %39 to i64
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %36, i64 %90
  br label %92

92:                                               ; preds = %87, %89
  %93 = phi i64 [ %88, %87 ], [ %90, %89 ]
  %94 = phi %"struct.WTF::KeyValuePair.464"* [ %67, %87 ], [ %91, %89 ]
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %36, i64 %93
  %96 = icmp eq %"struct.WTF::KeyValuePair.464"* %94, %95
  br i1 %96, label %97, label %114

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.WTF::HashMap.461", %"class.WTF::HashMap.461"* %33, i64 0, i32 0
  %99 = call { %"struct.WTF::KeyValuePair.464"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_18StyleRuleKeyframesEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.462"* %98, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.blink::StyleRuleKeyframes"** nonnull dereferenceable(8) %3) #9
  %100 = extractvalue { %"struct.WTF::KeyValuePair.464"*, i8 } %99, 1
  %101 = and i8 %100, 1
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %154

103:                                              ; preds = %97
  %104 = extractvalue { %"struct.WTF::KeyValuePair.464"*, i8 } %99, 0
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %104, i64 0, i32 1
  %106 = load %"class.blink::StyleRuleKeyframes"*, %"class.blink::StyleRuleKeyframes"** %3, align 8
  %107 = ptrtoint %"class.blink::StyleRuleKeyframes"* %106 to i64
  %108 = bitcast %"class.blink::Member.348"* %105 to i64*
  store atomic i64 %107, i64* %108 monotonic, align 8
  %109 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %154, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"class.blink::StyleRuleKeyframes", %"class.blink::StyleRuleKeyframes"* %106, i64 0, i32 0, i32 0
  %113 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %112) #9
  br label %154

114:                                              ; preds = %92
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %94, i64 0, i32 1, i32 0, i32 0
  %116 = load %"class.blink::StyleRuleKeyframes"*, %"class.blink::StyleRuleKeyframes"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::StyleRuleKeyframes", %"class.blink::StyleRuleKeyframes"* %116, i64 0, i32 4
  %118 = load i32, i32* %117, align 8
  %119 = icmp slt i32 %118, 0
  br i1 %119, label %120, label %154

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.WTF::HashMap.461", %"class.WTF::HashMap.461"* %33, i64 0, i32 0
  %122 = call { %"struct.WTF::KeyValuePair.464"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_18StyleRuleKeyframesEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.462"* %121, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.blink::StyleRuleKeyframes"** nonnull dereferenceable(8) %3) #9
  %123 = extractvalue { %"struct.WTF::KeyValuePair.464"*, i8 } %122, 1
  %124 = and i8 %123, 1
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %126, label %154

126:                                              ; preds = %120
  %127 = extractvalue { %"struct.WTF::KeyValuePair.464"*, i8 } %122, 0
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %127, i64 0, i32 1
  %129 = load %"class.blink::StyleRuleKeyframes"*, %"class.blink::StyleRuleKeyframes"** %3, align 8
  %130 = ptrtoint %"class.blink::StyleRuleKeyframes"* %129 to i64
  %131 = bitcast %"class.blink::Member.348"* %128 to i64*
  store atomic i64 %130, i64* %131 monotonic, align 8
  %132 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %154, label %134

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"class.blink::StyleRuleKeyframes", %"class.blink::StyleRuleKeyframes"* %129, i64 0, i32 0, i32 0
  %136 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %135) #9
  br label %154

137:                                              ; preds = %28
  %138 = getelementptr inbounds %"class.WTF::HashMap.461", %"class.WTF::HashMap.461"* %33, i64 0, i32 0
  %139 = call { %"struct.WTF::KeyValuePair.464"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_18StyleRuleKeyframesEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.462"* %138, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.blink::StyleRuleKeyframes"** nonnull dereferenceable(8) %3) #9
  %140 = extractvalue { %"struct.WTF::KeyValuePair.464"*, i8 } %139, 1
  %141 = and i8 %140, 1
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %143, label %154

143:                                              ; preds = %137
  %144 = extractvalue { %"struct.WTF::KeyValuePair.464"*, i8 } %139, 0
  %145 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %144, i64 0, i32 1
  %146 = load %"class.blink::StyleRuleKeyframes"*, %"class.blink::StyleRuleKeyframes"** %3, align 8
  %147 = ptrtoint %"class.blink::StyleRuleKeyframes"* %146 to i64
  %148 = bitcast %"class.blink::Member.348"* %145 to i64*
  store atomic i64 %147, i64* %148 monotonic, align 8
  %149 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %154, label %151

151:                                              ; preds = %143
  %152 = getelementptr inbounds %"class.blink::StyleRuleKeyframes", %"class.blink::StyleRuleKeyframes"* %146, i64 0, i32 0, i32 0
  %153 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %152) #9
  br label %154

154:                                              ; preds = %151, %143, %137, %114, %97, %103, %111, %120, %126, %134
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %156 = icmp eq %"class.WTF::StringImpl"* %155, null
  br i1 %156, label %170, label %157

157:                                              ; preds = %154
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  br i1 %161, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %163, -1
  store i32 %165, i32* %162, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %163, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %155) #9
  br label %170

170:                                              ; preds = %154, %166, %169
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.blink::CounterStyleMap"* @_ZN5blink19ScopedStyleResolver21EnsureCounterStyleMapEv(%"class.blink::ScopedStyleResolver"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.blink::Member.465", %"class.blink::Member.465"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::CounterStyleMap"*, %"class.blink::CounterStyleMap"** %3, align 8
  %5 = icmp eq %"class.blink::CounterStyleMap"* %4, null
  br i1 %5, label %6, label %18

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = tail call %"class.blink::CounterStyleMap"* @_ZN5blink15CounterStyleMap27CreateAuthorCounterStyleMapERNS_9TreeScopeE(%"class.blink::TreeScope"* dereferenceable(104) %8) #9
  %10 = ptrtoint %"class.blink::CounterStyleMap"* %9 to i64
  %11 = bitcast %"class.blink::Member.465"* %2 to i64*
  store atomic i64 %10, i64* %11 monotonic, align 8
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %6
  %15 = bitcast %"class.blink::CounterStyleMap"* %9 to i8*
  %16 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %15) #9
  %17 = load %"class.blink::CounterStyleMap"*, %"class.blink::CounterStyleMap"** %3, align 8
  br label %18

18:                                               ; preds = %1, %14, %6
  %19 = phi %"class.blink::CounterStyleMap"* [ %4, %1 ], [ %17, %14 ], [ %9, %6 ]
  ret %"class.blink::CounterStyleMap"* %19
}

declare %"class.blink::CounterStyleMap"* @_ZN5blink15CounterStyleMap27CreateAuthorCounterStyleMapERNS_9TreeScopeE(%"class.blink::TreeScope"* dereferenceable(104)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ScopedStyleResolver16AddFontFaceRulesERKNS_7RuleSetE(%"class.blink::ScopedStyleResolver"* nocapture readonly, %"class.blink::RuleSet"* dereferenceable(560)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::HeapVector.333", align 8
  %4 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %12, i64 0, i32 0, i32 0
  %14 = icmp eq %"class.blink::Node"* %13, %8
  br i1 %14, label %15, label %56

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::Document"*, %"class.blink::Document"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %17, i64 0, i32 59, i32 0, i32 0
  %19 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %19, i64 0, i32 37, i32 0, i32 0
  %21 = load %"class.blink::CSSFontSelector"*, %"class.blink::CSSFontSelector"** %20, align 8
  %22 = bitcast %"class.blink::HeapVector.333"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.blink::HeapVector.333", %"class.blink::HeapVector.333"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.blink::HeapVector.333", %"class.blink::HeapVector.333"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %25 = getelementptr inbounds %"class.blink::HeapVector.333", %"class.blink::HeapVector.333"* %3, i64 0, i32 0
  %26 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %1, i64 0, i32 15, i32 0
  %27 = bitcast %"class.blink::HeapVector.333"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false)
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.336"* nonnull %25, %"class.WTF::Vector.336"* dereferenceable(16) %26) #9
  %28 = load %"class.blink::Member.339"*, %"class.blink::Member.339"** %23, align 8
  %29 = load i32, i32* %24, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.blink::Member.339", %"class.blink::Member.339"* %28, i64 %30
  %32 = icmp eq i32 %29, 0
  br i1 %32, label %55, label %33

33:                                               ; preds = %15
  %34 = bitcast %"class.blink::CSSFontSelector"* %21 to %"class.blink::FontFaceCache"* (%"class.blink::CSSFontSelector"*)***
  br label %38

35:                                               ; preds = %50
  %36 = load i32, i32* %24, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %55, label %53

38:                                               ; preds = %33, %50
  %39 = phi %"class.blink::Member.339"* [ %28, %33 ], [ %51, %50 ]
  %40 = getelementptr inbounds %"class.blink::Member.339", %"class.blink::Member.339"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::StyleRuleFontFace"*, %"class.blink::StyleRuleFontFace"** %40, align 8
  %42 = call %"class.blink::FontFace"* @_ZN5blink8FontFace6CreateEPNS_8DocumentEPKNS_17StyleRuleFontFaceE(%"class.blink::Document"* %17, %"class.blink::StyleRuleFontFace"* %41) #9
  %43 = icmp eq %"class.blink::FontFace"* %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %38
  %45 = load %"class.blink::FontFaceCache"* (%"class.blink::CSSFontSelector"*)**, %"class.blink::FontFaceCache"* (%"class.blink::CSSFontSelector"*)*** %34, align 8
  %46 = getelementptr inbounds %"class.blink::FontFaceCache"* (%"class.blink::CSSFontSelector"*)*, %"class.blink::FontFaceCache"* (%"class.blink::CSSFontSelector"*)** %45, i64 22
  %47 = load %"class.blink::FontFaceCache"* (%"class.blink::CSSFontSelector"*)*, %"class.blink::FontFaceCache"* (%"class.blink::CSSFontSelector"*)** %46, align 8
  %48 = call %"class.blink::FontFaceCache"* %47(%"class.blink::CSSFontSelector"* %21) #9
  %49 = load %"class.blink::StyleRuleFontFace"*, %"class.blink::StyleRuleFontFace"** %40, align 8
  call void @_ZN5blink13FontFaceCache3AddEPKNS_17StyleRuleFontFaceEPNS_8FontFaceE(%"class.blink::FontFaceCache"* %48, %"class.blink::StyleRuleFontFace"* %49, %"class.blink::FontFace"* nonnull %42) #9
  br label %50

50:                                               ; preds = %38, %44
  %51 = getelementptr inbounds %"class.blink::Member.339", %"class.blink::Member.339"* %39, i64 1
  %52 = icmp eq %"class.blink::Member.339"* %51, %31
  br i1 %52, label %35, label %38

53:                                               ; preds = %35
  %54 = call dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"* %17) #9
  call void @_ZN5blink13StyleResolver32InvalidateMatchedPropertiesCacheEv(%"class.blink::StyleResolver"* %54) #9
  br label %55

55:                                               ; preds = %15, %35, %53
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #9
  br label %56

56:                                               ; preds = %2, %55
  ret void
}

declare %"class.blink::FontFace"* @_ZN5blink8FontFace6CreateEPNS_8DocumentEPKNS_17StyleRuleFontFaceE(%"class.blink::Document"*, %"class.blink::StyleRuleFontFace"*) local_unnamed_addr #3

declare void @_ZN5blink13FontFaceCache3AddEPKNS_17StyleRuleFontFaceEPNS_8FontFaceE(%"class.blink::FontFaceCache"*, %"class.blink::StyleRuleFontFace"*, %"class.blink::FontFace"*) local_unnamed_addr #3

declare dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"*) local_unnamed_addr #3

declare void @_ZN5blink13StyleResolver32InvalidateMatchedPropertiesCacheEv(%"class.blink::StyleResolver"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ScopedStyleResolver20AddCounterStyleRulesERKNS_7RuleSetE(%"class.blink::ScopedStyleResolver"* nocapture, %"class.blink::RuleSet"* dereferenceable(560)) local_unnamed_addr #2 align 2 {
  %3 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase51is_css_at_rule_counter_style_in_shadow_dom_enabled_E, align 1, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %17

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %9, i64 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %14, i64 0, i32 0, i32 0
  %16 = icmp eq %"class.blink::Node"* %15, %10
  br i1 %16, label %17, label %40

17:                                               ; preds = %2, %5
  %18 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %1, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %40, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 5
  %23 = getelementptr inbounds %"class.blink::Member.465", %"class.blink::Member.465"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::CounterStyleMap"*, %"class.blink::CounterStyleMap"** %23, align 8
  %25 = icmp eq %"class.blink::CounterStyleMap"* %24, null
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %27, align 8
  %29 = tail call %"class.blink::CounterStyleMap"* @_ZN5blink15CounterStyleMap27CreateAuthorCounterStyleMapERNS_9TreeScopeE(%"class.blink::TreeScope"* dereferenceable(104) %28) #9
  %30 = ptrtoint %"class.blink::CounterStyleMap"* %29 to i64
  %31 = bitcast %"class.blink::Member.465"* %22 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %26
  %35 = bitcast %"class.blink::CounterStyleMap"* %29 to i8*
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #9
  %37 = load %"class.blink::CounterStyleMap"*, %"class.blink::CounterStyleMap"** %23, align 8
  br label %38

38:                                               ; preds = %21, %26, %34
  %39 = phi %"class.blink::CounterStyleMap"* [ %24, %21 ], [ %37, %34 ], [ %29, %26 ]
  tail call void @_ZN5blink15CounterStyleMap16AddCounterStylesERKNS_7RuleSetE(%"class.blink::CounterStyleMap"* %39, %"class.blink::RuleSet"* dereferenceable(560) %1) #9
  br label %40

40:                                               ; preds = %17, %5, %38
  ret void
}

declare void @_ZN5blink15CounterStyleMap16AddCounterStylesERKNS_7RuleSetE(%"class.blink::CounterStyleMap"*, %"class.blink::RuleSet"* dereferenceable(560)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ScopedStyleResolver23AppendActiveStyleSheetsEjRKNS_10HeapVectorINSt3__14pairINS_6MemberINS_13CSSStyleSheetEEENS4_INS_7RuleSetEEEEELj0EEE(%"class.blink::ScopedStyleResolver"*, i32, %"class.blink::HeapVector.642"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.blink::HeapVector.342", align 8
  %5 = alloca %"class.blink::CSSStyleSheet"*, align 8
  %6 = getelementptr inbounds %"class.blink::HeapVector.642", %"class.blink::HeapVector.642"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HeapVector.642", %"class.blink::HeapVector.642"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, %1
  br i1 %9, label %30, label %10

10:                                               ; preds = %3
  %11 = zext i32 %1 to i64
  %12 = load %"struct.std::__1::pair.648"*, %"struct.std::__1::pair.648"** %6, align 8
  %13 = getelementptr inbounds %"struct.std::__1::pair.648", %"struct.std::__1::pair.648"* %12, i64 %11
  %14 = bitcast %"class.blink::CSSStyleSheet"** %5 to i8*
  %15 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %19 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %17, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.blink::CSSStyleSheet"** %5 to i64*
  %22 = bitcast %"class.blink::HeapVector.342"* %4 to i8*
  %23 = getelementptr inbounds %"class.blink::HeapVector.342", %"class.blink::HeapVector.342"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.blink::HeapVector.342", %"class.blink::HeapVector.342"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %25 = getelementptr inbounds %"class.blink::HeapVector.342", %"class.blink::HeapVector.342"* %4, i64 0, i32 0
  %26 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 5
  %28 = getelementptr inbounds %"class.blink::Member.465", %"class.blink::Member.465"* %27, i64 0, i32 0, i32 0
  %29 = bitcast %"class.blink::Member.465"* %27 to i64*
  br label %31

30:                                               ; preds = %116, %3
  ret void

31:                                               ; preds = %10, %116
  %32 = phi i32 [ %1, %10 ], [ %117, %116 ]
  %33 = phi %"struct.std::__1::pair.648"* [ %13, %10 ], [ %118, %116 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  store %"class.blink::CSSStyleSheet"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSStyleSheet"*), %"class.blink::CSSStyleSheet"** %5, align 8
  %34 = getelementptr inbounds %"struct.std::__1::pair.648", %"struct.std::__1::pair.648"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %34, align 8
  store %"class.blink::CSSStyleSheet"* %35, %"class.blink::CSSStyleSheet"** %5, align 8
  %36 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %35, i64 0, i32 9, i32 0, i32 0, i32 0
  %37 = load %"class.blink::MediaQueryResult"*, %"class.blink::MediaQueryResult"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %35, i64 0, i32 9, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  call void @_ZN3WTF6VectorIN5blink16MediaQueryResultELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.320"* %15, %"class.blink::MediaQueryResult"* %37, i32 %39) #9
  %40 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %5, align 8
  %41 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %40, i64 0, i32 10, i32 0, i32 0, i32 0
  %42 = load %"class.blink::MediaQueryResult"*, %"class.blink::MediaQueryResult"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %40, i64 0, i32 10, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  call void @_ZN3WTF6VectorIN5blink16MediaQueryResultELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.320"* %16, %"class.blink::MediaQueryResult"* %42, i32 %44) #9
  %45 = getelementptr inbounds %"struct.std::__1::pair.648", %"struct.std::__1::pair.648"* %33, i64 0, i32 1, i32 0, i32 0
  %46 = load %"class.blink::RuleSet"*, %"class.blink::RuleSet"** %45, align 8
  %47 = icmp eq %"class.blink::RuleSet"* %46, null
  br i1 %47, label %116, label %48

48:                                               ; preds = %31
  %49 = load i32, i32* %18, align 4
  %50 = load i32, i32* %19, align 8
  %51 = icmp eq i32 %49, %50
  br i1 %51, label %66, label %52, !prof !2

52:                                               ; preds = %48
  %53 = load %"class.blink::Member.2"*, %"class.blink::Member.2"** %20, align 8
  %54 = zext i32 %49 to i64
  %55 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %53, i64 %54
  %56 = load i64, i64* %21, align 8
  %57 = bitcast %"class.blink::Member.2"* %55 to i64*
  store atomic i64 %56, i64* %57 monotonic, align 8
  %58 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %52
  %61 = inttoptr i64 %56 to i8*
  %62 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %61) #9
  br label %63

63:                                               ; preds = %60, %52
  %64 = load i32, i32* %18, align 4
  %65 = add i32 %64, 1
  store i32 %65, i32* %18, align 4
  br label %67

66:                                               ; preds = %48
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector"* %17, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %5) #9
  br label %67

67:                                               ; preds = %63, %66
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #9
  %68 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %46, i64 0, i32 16, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false) #9
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleKeyframesEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.345"* nonnull %25, %"class.WTF::Vector.345"* dereferenceable(16) %68) #9
  %69 = load %"class.blink::Member.348"*, %"class.blink::Member.348"** %23, align 8
  %70 = load i32, i32* %24, align 4
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %"class.blink::Member.348", %"class.blink::Member.348"* %69, i64 %71
  %73 = icmp eq i32 %70, 0
  br i1 %73, label %80, label %74

74:                                               ; preds = %67, %74
  %75 = phi %"class.blink::Member.348"* [ %78, %74 ], [ %69, %67 ]
  %76 = getelementptr inbounds %"class.blink::Member.348", %"class.blink::Member.348"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.blink::StyleRuleKeyframes"*, %"class.blink::StyleRuleKeyframes"** %76, align 8
  call void @_ZN5blink19ScopedStyleResolver16AddKeyframeStyleEPNS_18StyleRuleKeyframesE(%"class.blink::ScopedStyleResolver"* %0, %"class.blink::StyleRuleKeyframes"* %77) #9
  %78 = getelementptr inbounds %"class.blink::Member.348", %"class.blink::Member.348"* %75, i64 1
  %79 = icmp eq %"class.blink::Member.348"* %78, %72
  br i1 %79, label %80, label %74

80:                                               ; preds = %74, %67
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #9
  call void @_ZN5blink19ScopedStyleResolver16AddFontFaceRulesERKNS_7RuleSetE(%"class.blink::ScopedStyleResolver"* %0, %"class.blink::RuleSet"* nonnull dereferenceable(560) %46)
  %81 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase51is_css_at_rule_counter_style_in_shadow_dom_enabled_E, align 1, !range !3
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %94

83:                                               ; preds = %80
  %84 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %26, align 8
  %85 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %84, i64 0, i32 1, i32 0, i32 0
  %86 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %86, i64 0, i32 0
  %88 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %86, i64 0, i32 0, i32 3, i32 0, i32 0
  %89 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %89, i64 0, i32 2, i32 0, i32 0
  %91 = load %"class.blink::Document"*, %"class.blink::Document"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %91, i64 0, i32 0, i32 0
  %93 = icmp eq %"class.blink::Node"* %92, %87
  br i1 %93, label %94, label %113

94:                                               ; preds = %83, %80
  %95 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %46, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %94
  %99 = load %"class.blink::CounterStyleMap"*, %"class.blink::CounterStyleMap"** %28, align 8
  %100 = icmp eq %"class.blink::CounterStyleMap"* %99, null
  br i1 %100, label %101, label %111

101:                                              ; preds = %98
  %102 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %26, align 8
  %103 = call %"class.blink::CounterStyleMap"* @_ZN5blink15CounterStyleMap27CreateAuthorCounterStyleMapERNS_9TreeScopeE(%"class.blink::TreeScope"* dereferenceable(104) %102) #9
  %104 = ptrtoint %"class.blink::CounterStyleMap"* %103 to i64
  store atomic i64 %104, i64* %29 monotonic, align 8
  %105 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %101
  %108 = bitcast %"class.blink::CounterStyleMap"* %103 to i8*
  %109 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %108) #9
  %110 = load %"class.blink::CounterStyleMap"*, %"class.blink::CounterStyleMap"** %28, align 8
  br label %111

111:                                              ; preds = %107, %101, %98
  %112 = phi %"class.blink::CounterStyleMap"* [ %99, %98 ], [ %110, %107 ], [ %103, %101 ]
  call void @_ZN5blink15CounterStyleMap16AddCounterStylesERKNS_7RuleSetE(%"class.blink::CounterStyleMap"* %112, %"class.blink::RuleSet"* nonnull dereferenceable(560) %46) #9
  br label %113

113:                                              ; preds = %83, %94, %111
  %114 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %5, align 8
  %115 = add i32 %32, 1
  call void @_ZN5blink19ScopedStyleResolver15AddSlottedRulesERKNS_7RuleSetEPNS_13CSSStyleSheetEj(%"class.blink::ScopedStyleResolver"* %0, %"class.blink::RuleSet"* nonnull dereferenceable(560) %46, %"class.blink::CSSStyleSheet"* %114, i32 %32)
  br label %116

116:                                              ; preds = %31, %113
  %117 = phi i32 [ %115, %113 ], [ %32, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %118 = getelementptr inbounds %"struct.std::__1::pair.648", %"struct.std::__1::pair.648"* %33, i64 1
  %119 = load %"struct.std::__1::pair.648"*, %"struct.std::__1::pair.648"** %6, align 8
  %120 = load i32, i32* %7, align 4
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds %"struct.std::__1::pair.648", %"struct.std::__1::pair.648"* %119, i64 %121
  %123 = icmp eq %"struct.std::__1::pair.648"* %118, %122
  br i1 %123, label %30, label %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ScopedStyleResolver15AddSlottedRulesERKNS_7RuleSetEPNS_13CSSStyleSheetEj(%"class.blink::ScopedStyleResolver"* nocapture, %"class.blink::RuleSet"* nocapture readonly dereferenceable(560), %"class.blink::CSSStyleSheet"*, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.blink::ScopedStyleResolver::RuleSubSet"*, align 8
  %6 = ptrtoint %"class.blink::CSSStyleSheet"* %2 to i64
  %7 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %15, i64 0, i32 0, i32 0
  %17 = icmp eq %"class.blink::Node"* %16, %11
  br i1 %17, label %110, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %1, i64 0, i32 20, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %110, label %22

22:                                               ; preds = %18
  %23 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_7RuleSetEEEPhm(i64 560) #9
  %24 = bitcast i8* %23 to %"class.blink::RuleSet"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 20, i1 false) #9
  %25 = getelementptr inbounds i8, i8* %23, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 20, i1 false) #9
  %26 = getelementptr inbounds i8, i8* %23, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 20, i1 false) #9
  %27 = getelementptr inbounds i8, i8* %23, i64 72
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 20, i1 false) #9
  %28 = getelementptr inbounds i8, i8* %23, i64 96
  %29 = getelementptr inbounds i8, i8* %23, i64 240
  %30 = bitcast i8* %29 to %"class.blink::RuleFeatureSet"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 144, i1 false) #9
  tail call void @_ZN5blink14RuleFeatureSetC1Ev(%"class.blink::RuleFeatureSet"* %30) #9
  %31 = getelementptr inbounds i8, i8* %23, i64 416
  %32 = getelementptr inbounds i8, i8* %23, i64 552
  %33 = bitcast i8* %32 to %"class.blink::RuleSet::PendingRuleMaps"**
  store %"class.blink::RuleSet::PendingRuleMaps"* null, %"class.blink::RuleSet::PendingRuleMaps"** %33, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 132, i1 false) #9
  %34 = getelementptr inbounds i8, i8* %23, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  %38 = ptrtoint i8* %23 to i64
  %39 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %1, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::MinimalRuleData"*, %"class.blink::MinimalRuleData"** %39, align 8
  %41 = load i32, i32* %19, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::MinimalRuleData", %"class.blink::MinimalRuleData"* %40, i64 %42
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %22, %45
  %46 = phi %"class.blink::MinimalRuleData"* [ %53, %45 ], [ %40, %22 ]
  %47 = getelementptr inbounds %"class.blink::MinimalRuleData", %"class.blink::MinimalRuleData"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::MinimalRuleData", %"class.blink::MinimalRuleData"* %46, i64 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"class.blink::MinimalRuleData", %"class.blink::MinimalRuleData"* %46, i64 0, i32 2
  %52 = load i32, i32* %51, align 4
  tail call void @_ZN5blink7RuleSet7AddRuleEPNS_9StyleRuleEjjPKNS_14ContainerQueryE(%"class.blink::RuleSet"* %24, %"class.blink::StyleRule"* %48, i32 %50, i32 %52, %"class.blink::ContainerQuery"* null) #9
  %53 = getelementptr inbounds %"class.blink::MinimalRuleData", %"class.blink::MinimalRuleData"* %46, i64 1
  %54 = icmp eq %"class.blink::MinimalRuleData"* %53, %43
  br i1 %54, label %55, label %45

55:                                               ; preds = %45, %22
  %56 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 6
  %57 = getelementptr inbounds %"class.blink::Member.476", %"class.blink::Member.476"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.blink::HeapVector.478"*, %"class.blink::HeapVector.478"** %57, align 8
  %59 = icmp eq %"class.blink::HeapVector.478"* %58, null
  br i1 %59, label %60, label %74

60:                                               ; preds = %55
  %61 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEELj0EEEEEPhm(i64 16) #9
  %62 = getelementptr inbounds i8, i8* %61, i64 -4
  %63 = bitcast i8* %62 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #9
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = or i16 %64, 1
  store atomic i16 %65, i16* %63 release, align 2
  %66 = ptrtoint i8* %61 to i64
  %67 = bitcast %"class.blink::Member.476"* %56 to i64*
  store atomic i64 %66, i64* %67 monotonic, align 8
  %68 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %69 = icmp eq i32 %68, 0
  %70 = bitcast i8* %61 to %"class.blink::HeapVector.478"*
  br i1 %69, label %74, label %71

71:                                               ; preds = %60
  %72 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %61) #9
  %73 = load %"class.blink::HeapVector.478"*, %"class.blink::HeapVector.478"** %57, align 8
  br label %74

74:                                               ; preds = %55, %71, %60
  %75 = phi %"class.blink::HeapVector.478"* [ %58, %55 ], [ %73, %71 ], [ %70, %60 ]
  %76 = bitcast %"class.blink::ScopedStyleResolver::RuleSubSet"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #9
  %77 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_19ScopedStyleResolver10RuleSubSetEEEPhm(i64 24) #9
  %78 = bitcast i8* %77 to i64*
  store i64 %6, i64* %78, align 8
  %79 = getelementptr inbounds i8, i8* %77, i64 8
  %80 = bitcast i8* %79 to i32*
  store i32 %3, i32* %80, align 8
  %81 = getelementptr inbounds i8, i8* %77, i64 16
  %82 = bitcast i8* %81 to i64*
  store i64 %38, i64* %82, align 8
  %83 = getelementptr inbounds i8, i8* %77, i64 -4
  %84 = bitcast i8* %83 to i16*
  %85 = load atomic i16, i16* %84 monotonic, align 2
  %86 = or i16 %85, 1
  store atomic i16 %86, i16* %84 release, align 2
  %87 = bitcast %"class.blink::ScopedStyleResolver::RuleSubSet"** %5 to i8**
  store i8* %77, i8** %87, align 8
  %88 = getelementptr inbounds %"class.blink::HeapVector.478", %"class.blink::HeapVector.478"* %75, i64 0, i32 0, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"class.blink::HeapVector.478", %"class.blink::HeapVector.478"* %75, i64 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %89, %91
  br i1 %92, label %107, label %93, !prof !2

93:                                               ; preds = %74
  %94 = ptrtoint i8* %77 to i64
  %95 = getelementptr inbounds %"class.blink::HeapVector.478", %"class.blink::HeapVector.478"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %96 = load %"class.blink::Member.484"*, %"class.blink::Member.484"** %95, align 8
  %97 = zext i32 %89 to i64
  %98 = getelementptr inbounds %"class.blink::Member.484", %"class.blink::Member.484"* %96, i64 %97
  %99 = bitcast %"class.blink::Member.484"* %98 to i64*
  store atomic i64 %94, i64* %99 monotonic, align 8
  %100 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %93
  %103 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %77) #9
  br label %104

104:                                              ; preds = %102, %93
  %105 = load i32, i32* %88, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %88, align 4
  br label %109

107:                                              ; preds = %74
  %108 = getelementptr inbounds %"class.blink::HeapVector.478", %"class.blink::HeapVector.478"* %75, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_19ScopedStyleResolver10RuleSubSetEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS4_EEvOT_(%"class.WTF::Vector.481"* %108, %"class.blink::ScopedStyleResolver::RuleSubSet"** nonnull dereferenceable(8) %5) #9
  br label %109

109:                                              ; preds = %104, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #9
  br label %110

110:                                              ; preds = %4, %18, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19ScopedStyleResolver17CollectFeaturesToERNS_14RuleFeatureSetERNS_11HeapHashSetINS_6MemberIKNS_18StyleSheetContentsEEEN3WTF10MemberHashIS6_EENS8_10HashTraitsIS7_EEEE(%"class.blink::ScopedStyleResolver"* nocapture readonly, %"class.blink::RuleFeatureSet"* dereferenceable(176), %"class.blink::HeapHashSet.1285"* dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.blink::StyleSheetContents"*, align 8
  %5 = getelementptr inbounds %"class.blink::RuleFeatureSet", %"class.blink::RuleFeatureSet"* %1, i64 0, i32 9
  %6 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.blink::MediaQueryResult"*, %"class.blink::MediaQueryResult"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  tail call void @_ZN3WTF6VectorIN5blink16MediaQueryResultELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.320"* %5, %"class.blink::MediaQueryResult"* %7, i32 %9) #9
  %10 = getelementptr inbounds %"class.blink::RuleFeatureSet", %"class.blink::RuleFeatureSet"* %1, i64 0, i32 10
  %11 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.blink::MediaQueryResult"*, %"class.blink::MediaQueryResult"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  tail call void @_ZN3WTF6VectorIN5blink16MediaQueryResultELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.320"* %10, %"class.blink::MediaQueryResult"* %12, i32 %14) #9
  %15 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.2"*, %"class.blink::Member.2"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %16, i64 %19
  %21 = icmp eq i32 %18, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %3
  %23 = bitcast %"class.blink::StyleSheetContents"** %4 to i8*
  %24 = getelementptr inbounds %"class.blink::HeapHashSet.1285", %"class.blink::HeapHashSet.1285"* %2, i64 0, i32 0, i32 0
  br label %29

25:                                               ; preds = %53, %3
  %26 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 6, i32 0, i32 0
  %27 = load %"class.blink::HeapVector.478"*, %"class.blink::HeapVector.478"** %26, align 8
  %28 = icmp eq %"class.blink::HeapVector.478"* %27, null
  br i1 %28, label %73, label %56

29:                                               ; preds = %22, %53
  %30 = phi %"class.blink::Member.2"* [ %16, %22 ], [ %54, %53 ]
  %31 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  %33 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %32, i64 0, i32 1, i32 0, i32 0
  %34 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %33, align 8
  store %"class.blink::StyleSheetContents"* %34, %"class.blink::StyleSheetContents"** %4, align 8
  %35 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %34, i64 0, i32 11, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %34, i64 0, i32 12, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %38, %36
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %48, label %41

41:                                               ; preds = %29
  %42 = call { %"class.blink::Member.1291"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberIKNS1_18StyleSheetContentsEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS3_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.1289"* %24, %"class.blink::StyleSheetContents"** nonnull dereferenceable(8) %4, %"class.blink::StyleSheetContents"** nonnull dereferenceable(8) %4) #9
  %43 = extractvalue { %"class.blink::Member.1291"*, i8 } %42, 1
  %44 = and i8 %43, 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %41
  %47 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %4, align 8
  br label %48

48:                                               ; preds = %46, %29
  %49 = phi %"class.blink::StyleSheetContents"* [ %47, %46 ], [ %34, %29 ]
  %50 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %49, i64 0, i32 13, i32 0, i32 0
  %51 = load %"class.blink::RuleSet"*, %"class.blink::RuleSet"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %51, i64 0, i32 13
  call void @_ZN5blink14RuleFeatureSet3AddERKS0_(%"class.blink::RuleFeatureSet"* %1, %"class.blink::RuleFeatureSet"* dereferenceable(176) %52) #9
  br label %53

53:                                               ; preds = %41, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  %54 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %30, i64 1
  %55 = icmp eq %"class.blink::Member.2"* %54, %20
  br i1 %55, label %25, label %29

56:                                               ; preds = %25
  %57 = getelementptr inbounds %"class.blink::HeapVector.478", %"class.blink::HeapVector.478"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::Member.484"*, %"class.blink::Member.484"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::HeapVector.478", %"class.blink::HeapVector.478"* %27, i64 0, i32 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"class.blink::Member.484", %"class.blink::Member.484"* %58, i64 %61
  %63 = icmp eq i32 %60, 0
  br i1 %63, label %73, label %64

64:                                               ; preds = %56, %64
  %65 = phi %"class.blink::Member.484"* [ %71, %64 ], [ %58, %56 ]
  %66 = getelementptr inbounds %"class.blink::Member.484", %"class.blink::Member.484"* %65, i64 0, i32 0, i32 0
  %67 = load %"class.blink::ScopedStyleResolver::RuleSubSet"*, %"class.blink::ScopedStyleResolver::RuleSubSet"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ScopedStyleResolver::RuleSubSet", %"class.blink::ScopedStyleResolver::RuleSubSet"* %67, i64 0, i32 2, i32 0, i32 0
  %69 = load %"class.blink::RuleSet"*, %"class.blink::RuleSet"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %69, i64 0, i32 13
  call void @_ZN5blink14RuleFeatureSet3AddERKS0_(%"class.blink::RuleFeatureSet"* %1, %"class.blink::RuleFeatureSet"* dereferenceable(176) %70) #9
  %71 = getelementptr inbounds %"class.blink::Member.484", %"class.blink::Member.484"* %65, i64 1
  %72 = icmp eq %"class.blink::Member.484"* %71, %62
  br i1 %72, label %73, label %64

73:                                               ; preds = %64, %56, %25
  ret void
}

declare void @_ZN5blink14RuleFeatureSet3AddERKS0_(%"class.blink::RuleFeatureSet"*, %"class.blink::RuleFeatureSet"* dereferenceable(176)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ScopedStyleResolver10ResetStyleEv(%"class.blink::ScopedStyleResolver"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = bitcast %"class.WTF::Vector"* %2 to i8**
  br i1 %9, label %15, label %11

11:                                               ; preds = %6
  %12 = load i8*, i8** %10, align 8
  %13 = zext i32 %8 to i64
  %14 = shl nuw nsw i64 %13, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %12, i64 %14) #9
  store i32 0, i32* %7, align 4
  br label %15

15:                                               ; preds = %11, %6
  %16 = load i8*, i8** %10, align 8
  %17 = bitcast %"class.WTF::Vector"* %2 to i64*
  store atomic i64 0, i64* %17 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %16) #9
  br label %18

18:                                               ; preds = %1, %15
  %19 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %42, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.WTF::Vector.320", %"class.WTF::Vector.320"* %19, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::MediaQueryResult"*, %"class.blink::MediaQueryResult"** %28, align 8
  %30 = zext i32 %25 to i64
  %31 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %29, i64 %30
  br label %32

32:                                               ; preds = %32, %27
  %33 = phi %"class.blink::MediaQueryResult"* [ %35, %32 ], [ %29, %27 ]
  %34 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %33, i64 0, i32 0
  tail call void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"* %34) #9
  %35 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %33, i64 1
  %36 = icmp eq %"class.blink::MediaQueryResult"* %35, %31
  br i1 %36, label %37, label %32

37:                                               ; preds = %32
  store i32 0, i32* %24, align 4
  br label %38

38:                                               ; preds = %37, %23
  %39 = bitcast %"class.WTF::Vector.320"* %19 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast %"class.WTF::Vector.320"* %19 to i64*
  store atomic i64 0, i64* %41 monotonic, align 8
  store i32 0, i32* %20, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #9
  br label %42

42:                                               ; preds = %18, %38
  %43 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 3
  %44 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %62, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::Vector.320", %"class.WTF::Vector.320"* %43, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::MediaQueryResult"*, %"class.blink::MediaQueryResult"** %52, align 8
  %54 = zext i32 %49 to i64
  %55 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %53, i64 %54
  br label %56

56:                                               ; preds = %56, %51
  %57 = phi %"class.blink::MediaQueryResult"* [ %59, %56 ], [ %53, %51 ]
  %58 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %57, i64 0, i32 0
  tail call void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"* %58) #9
  %59 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %57, i64 1
  %60 = icmp eq %"class.blink::MediaQueryResult"* %59, %55
  br i1 %60, label %61, label %56

61:                                               ; preds = %56
  store i32 0, i32* %48, align 4
  br label %62

62:                                               ; preds = %61, %47
  %63 = bitcast %"class.WTF::Vector.320"* %43 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast %"class.WTF::Vector.320"* %43 to i64*
  store atomic i64 0, i64* %65 monotonic, align 8
  store i32 0, i32* %44, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %64) #9
  br label %66

66:                                               ; preds = %42, %62
  %67 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 4, i32 0
  %68 = getelementptr inbounds %"class.WTF::HashMap.461", %"class.WTF::HashMap.461"* %67, i64 0, i32 0, i32 0
  %69 = load %"struct.WTF::KeyValuePair.464"*, %"struct.WTF::KeyValuePair.464"** %68, align 8
  %70 = icmp eq %"struct.WTF::KeyValuePair.464"* %69, null
  br i1 %70, label %107, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %103, label %75

75:                                               ; preds = %71
  %76 = zext i32 %73 to i64
  br label %77

77:                                               ; preds = %100, %75
  %78 = phi i64 [ 0, %75 ], [ %101, %100 ]
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %69, i64 %78
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  switch i64 %82, label %83 [
    i64 -1, label %100
    i64 0, label %100
  ]

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #9
  br label %96

96:                                               ; preds = %95, %92
  %97 = bitcast %"struct.WTF::KeyValuePair.464"* %79 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %97, align 8
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %69, i64 %78, i32 1
  %99 = bitcast %"class.blink::Member.348"* %98 to i64*
  store atomic i64 0, i64* %99 monotonic, align 8
  br label %100

100:                                              ; preds = %96, %77, %77
  %101 = add nuw nsw i64 %78, 1
  %102 = icmp eq i64 %101, %76
  br i1 %102, label %103, label %77

103:                                              ; preds = %100, %71
  %104 = bitcast %"struct.WTF::KeyValuePair.464"* %69 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %104) #9
  %105 = bitcast %"class.WTF::HashMap.461"* %67 to i64*
  store atomic i64 0, i64* %105 monotonic, align 8
  store i32 0, i32* %72, align 8
  %106 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  store i32 0, i32* %106, align 4
  br label %107

107:                                              ; preds = %66, %103
  %108 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 5, i32 0, i32 0
  %109 = load %"class.blink::CounterStyleMap"*, %"class.blink::CounterStyleMap"** %108, align 8
  %110 = icmp eq %"class.blink::CounterStyleMap"* %109, null
  br i1 %110, label %112, label %111

111:                                              ; preds = %107
  tail call void @_ZN5blink15CounterStyleMap7DisposeEv(%"class.blink::CounterStyleMap"* nonnull %109) #9
  br label %112

112:                                              ; preds = %107, %111
  %113 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 6
  %114 = bitcast %"class.blink::Member.476"* %113 to i64*
  store atomic i64 0, i64* %114 monotonic, align 8
  %115 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 8
  store i8 0, i8* %115, align 1
  ret void
}

declare void @_ZN5blink15CounterStyleMap7DisposeEv(%"class.blink::CounterStyleMap"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleRuleKeyframes"* @_ZN5blink19ScopedStyleResolver26KeyframeStylesForAnimationERKN3WTF12AtomicStringE(%"class.blink::ScopedStyleResolver"* nocapture readonly, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %74, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair.464"*, %"struct.WTF::KeyValuePair.464"** %7, align 8
  %9 = icmp eq %"struct.WTF::KeyValuePair.464"* %8, null
  %10 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  br i1 %9, label %63, label %12

12:                                               ; preds = %6
  %13 = add i32 %11, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = lshr i32 %18, 8
  %20 = and i32 %19, %13
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %8, i64 %21
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %63, label %26

26:                                               ; preds = %12
  %27 = xor i32 %19, -1
  %28 = lshr i32 %18, 31
  %29 = add nsw i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %40

40:                                               ; preds = %50, %26
  %41 = phi %"struct.WTF::KeyValuePair.464"* [ %22, %26 ], [ %55, %50 ]
  %42 = phi i64 [ %21, %26 ], [ %54, %50 ]
  %43 = phi i64 [ 0, %26 ], [ %52, %50 ]
  %44 = bitcast %"struct.WTF::KeyValuePair.464"* %41 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp ne i8* %45, inttoptr (i64 -1 to i8*)
  %47 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %48 = icmp eq %"class.WTF::StringImpl"* %16, %47
  %49 = and i1 %46, %48
  br i1 %49, label %59, label %50

50:                                               ; preds = %40
  %51 = icmp eq i64 %43, 0
  %52 = select i1 %51, i64 %39, i64 %43
  %53 = add i64 %52, %42
  %54 = and i64 %53, %14
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %8, i64 %54
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %63, label %40

59:                                               ; preds = %40
  %60 = icmp eq %"struct.WTF::KeyValuePair.464"* %41, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %59
  %62 = zext i32 %11 to i64
  br label %66

63:                                               ; preds = %50, %59, %12, %6
  %64 = zext i32 %11 to i64
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %8, i64 %64
  br label %66

66:                                               ; preds = %61, %63
  %67 = phi i64 [ %62, %61 ], [ %64, %63 ]
  %68 = phi %"struct.WTF::KeyValuePair.464"* [ %41, %61 ], [ %65, %63 ]
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %8, i64 %67
  %70 = icmp eq %"struct.WTF::KeyValuePair.464"* %68, %69
  br i1 %70, label %74, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %68, i64 0, i32 1, i32 0, i32 0
  %73 = load %"class.blink::StyleRuleKeyframes"*, %"class.blink::StyleRuleKeyframes"** %72, align 8
  br label %74

74:                                               ; preds = %71, %66, %2
  %75 = phi %"class.blink::StyleRuleKeyframes"* [ null, %2 ], [ %73, %71 ], [ null, %66 ]
  ret %"class.blink::StyleRuleKeyframes"* %75
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(104) %"class.blink::Element"* @_ZN5blink19ScopedStyleResolver28InvalidationRootForTreeScopeERKNS_9TreeScopeE(%"class.blink::TreeScope"* nocapture readonly dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %3, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %6, i64 0, i32 0, i32 0
  %8 = icmp eq %"class.blink::Node"* %4, %7
  %9 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %6, i64 0, i32 47, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast %"class.blink::Node"** %10 to %"class.blink::Element"**
  %12 = select i1 %8, %"class.blink::Element"** %9, %"class.blink::Element"** %11
  %13 = load %"class.blink::Element"*, %"class.blink::Element"** %12, align 8
  ret %"class.blink::Element"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ScopedStyleResolver19KeyframesRulesAddedERKNS_9TreeScopeE(%"class.blink::TreeScope"* dereferenceable(104)) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %3 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::Document"*, %"class.blink::Document"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %4, i64 0, i32 47, i32 0, i32 0
  %6 = load %"class.blink::Element"*, %"class.blink::Element"** %5, align 8
  %7 = icmp eq %"class.blink::Element"* %6, null
  br i1 %7, label %93, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 7, i32 0, i32 0
  %10 = load %"class.blink::ScopedStyleResolver"*, %"class.blink::ScopedStyleResolver"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %13 = icmp eq %"class.blink::TreeScope"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %12, i64 0, i32 7, i32 0, i32 0
  %16 = load %"class.blink::ScopedStyleResolver"*, %"class.blink::ScopedStyleResolver"** %15, align 8
  br label %17

17:                                               ; preds = %8, %14
  %18 = phi %"class.blink::ScopedStyleResolver"* [ %16, %14 ], [ null, %8 ]
  %19 = icmp eq %"class.blink::ScopedStyleResolver"* %10, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %10, i64 0, i32 7
  %22 = load i8, i8* %21, align 8, !range !3
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  store i8 0, i8* %21, align 8
  br label %25

25:                                               ; preds = %20, %17, %24
  %26 = phi i8 [ 1, %24 ], [ 0, %20 ], [ 0, %17 ]
  %27 = icmp eq %"class.blink::ScopedStyleResolver"* %18, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %18, i64 0, i32 7
  %30 = load i8, i8* %29, align 8, !range !3
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %28
  store i8 0, i8* %29, align 8
  br label %35

33:                                               ; preds = %28, %25
  %34 = icmp eq i8 %26, 0
  br i1 %34, label %89, label %35

35:                                               ; preds = %32, %33
  %36 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %37, i64 0, i32 0
  %39 = load %"class.blink::Document"*, %"class.blink::Document"** %3, align 8
  %40 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %39, i64 0, i32 0, i32 0
  %41 = icmp eq %"class.blink::Node"* %38, %40
  %42 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %39, i64 0, i32 47, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %37, i64 0, i32 0, i32 2, i32 0, i32 0
  %44 = bitcast %"class.blink::Node"** %43 to %"class.blink::Element"**
  %45 = select i1 %41, %"class.blink::Element"** %42, %"class.blink::Element"** %44
  %46 = load %"class.blink::Element"*, %"class.blink::Element"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %46, i64 0, i32 0, i32 0
  %48 = bitcast %"class.blink::StyleChangeReasonForTracing"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #9
  %49 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %50 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %70, label %53

53:                                               ; preds = %35
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %70

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i33
  %62 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %61, i33 1) #9
  %63 = extractvalue { i33, i1 } %62, 1
  %64 = extractvalue { i33, i1 } %62, 0
  %65 = icmp slt i33 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %68, !prof !2

67:                                               ; preds = %58
  tail call void @llvm.trap() #9
  unreachable

68:                                               ; preds = %58
  %69 = trunc i33 %64 to i32
  store i32 %69, i32* %59, align 4
  br label %70

70:                                               ; preds = %35, %53, %68
  %71 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %2, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason17kStyleSheetChangeE, i64 0, i64 0), i8** %71, align 8
  %72 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %72, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %47, i32 65536, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %2) #9
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #9
  br label %88

88:                                               ; preds = %70, %84, %87
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #9
  br label %93

89:                                               ; preds = %33
  %90 = load %"class.blink::Document"*, %"class.blink::Document"** %3, align 8
  %91 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %90, i64 0, i32 131, i32 0, i32 0
  %92 = load %"class.blink::DocumentTimeline"*, %"class.blink::DocumentTimeline"** %91, align 8
  tail call void @_ZN5blink16DocumentTimeline25InvalidateKeyframeEffectsERKNS_9TreeScopeE(%"class.blink::DocumentTimeline"* %92, %"class.blink::TreeScope"* dereferenceable(104) %0) #9
  br label %93

93:                                               ; preds = %88, %89, %1
  ret void
}

declare void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"*, i32, %"class.blink::StyleChangeReasonForTracing"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN5blink16DocumentTimeline25InvalidateKeyframeEffectsERKNS_9TreeScopeE(%"class.blink::DocumentTimeline"*, %"class.blink::TreeScope"* dereferenceable(104)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ScopedStyleResolver32CollectMatchingElementScopeRulesERNS_20ElementRuleCollectorE(%"class.blink::ScopedStyleResolver"* nocapture readonly, %"class.blink::ElementRuleCollector"* dereferenceable(904)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::MatchRequest", align 8
  %4 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Member.2"*, %"class.blink::Member.2"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::MatchRequest"* %3 to i8*
  %13 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %3, i64 0, i32 1
  %16 = bitcast %"class.blink::ContainerNode"** %15 to i64*
  %17 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %3, i64 0, i32 2
  %18 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %3, i64 0, i32 3
  %19 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %3, i64 0, i32 4
  %20 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %3, i64 0, i32 1
  %21 = bitcast %"class.blink::ContainerNode"** %20 to i8*
  br label %23

22:                                               ; preds = %41, %2
  ret void

23:                                               ; preds = %11, %41
  %24 = phi %"class.blink::Member.2"* [ %5, %11 ], [ %42, %41 ]
  %25 = phi i32 [ 0, %11 ], [ %36, %41 ]
  %26 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %24, i64 0, i32 0, i32 0
  %27 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 32, i1 false)
  %28 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %27, i64 0, i32 1, i32 0, i32 0
  %29 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %29, i64 0, i32 13, i32 0, i32 0
  %31 = load %"class.blink::RuleSet"*, %"class.blink::RuleSet"** %30, align 8
  %32 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %13, align 8
  %33 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %32, i64 0, i32 1, i32 0, i32 0
  %34 = bitcast %"class.blink::ContainerNode"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = add i32 %25, 1
  store %"class.blink::RuleSet"* %31, %"class.blink::RuleSet"** %14, align 8
  store i64 %35, i64* %16, align 8
  store %"class.blink::CSSStyleSheet"* %27, %"class.blink::CSSStyleSheet"** %17, align 8
  store i32 %25, i32* %18, align 8
  store %"class.blink::Element"* null, %"class.blink::Element"** %19, align 8
  %37 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %31, i64 0, i32 23, i32 0, i32 0
  %38 = load %"class.blink::RuleSet::PendingRuleMaps"*, %"class.blink::RuleSet::PendingRuleMaps"** %37, align 8
  %39 = icmp eq %"class.blink::RuleSet::PendingRuleMaps"* %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %23
  call void @_ZN5blink7RuleSet12CompactRulesEv(%"class.blink::RuleSet"* %31) #9
  br label %41

41:                                               ; preds = %23, %40
  call void @_ZN5blink20ElementRuleCollector20CollectMatchingRulesERKNS_12MatchRequestEb(%"class.blink::ElementRuleCollector"* %1, %"class.blink::MatchRequest"* nonnull dereferenceable(40) %3, i1 zeroext false) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #9
  %42 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %24, i64 1
  %43 = icmp eq %"class.blink::Member.2"* %42, %9
  br i1 %43, label %22, label %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink20ElementRuleCollector20CollectMatchingRulesERKNS_12MatchRequestEb(%"class.blink::ElementRuleCollector"*, %"class.blink::MatchRequest"* dereferenceable(40), i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ScopedStyleResolver30CollectMatchingShadowHostRulesERNS_20ElementRuleCollectorE(%"class.blink::ScopedStyleResolver"* nocapture readonly, %"class.blink::ElementRuleCollector"* dereferenceable(904)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::MatchRequest", align 8
  %4 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Member.2"*, %"class.blink::Member.2"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::MatchRequest"* %3 to i8*
  %13 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %3, i64 0, i32 1
  %16 = bitcast %"class.blink::ContainerNode"** %15 to i64*
  %17 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %3, i64 0, i32 2
  %18 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %3, i64 0, i32 3
  %19 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %3, i64 0, i32 4
  %20 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %3, i64 0, i32 1
  %21 = bitcast %"class.blink::ContainerNode"** %20 to i8*
  br label %23

22:                                               ; preds = %41, %2
  ret void

23:                                               ; preds = %11, %41
  %24 = phi %"class.blink::Member.2"* [ %5, %11 ], [ %42, %41 ]
  %25 = phi i32 [ 0, %11 ], [ %36, %41 ]
  %26 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %24, i64 0, i32 0, i32 0
  %27 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 32, i1 false)
  %28 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %27, i64 0, i32 1, i32 0, i32 0
  %29 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %29, i64 0, i32 13, i32 0, i32 0
  %31 = load %"class.blink::RuleSet"*, %"class.blink::RuleSet"** %30, align 8
  %32 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %13, align 8
  %33 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %32, i64 0, i32 1, i32 0, i32 0
  %34 = bitcast %"class.blink::ContainerNode"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = add i32 %25, 1
  store %"class.blink::RuleSet"* %31, %"class.blink::RuleSet"** %14, align 8
  store i64 %35, i64* %16, align 8
  store %"class.blink::CSSStyleSheet"* %27, %"class.blink::CSSStyleSheet"** %17, align 8
  store i32 %25, i32* %18, align 8
  store %"class.blink::Element"* null, %"class.blink::Element"** %19, align 8
  %37 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %31, i64 0, i32 23, i32 0, i32 0
  %38 = load %"class.blink::RuleSet::PendingRuleMaps"*, %"class.blink::RuleSet::PendingRuleMaps"** %37, align 8
  %39 = icmp eq %"class.blink::RuleSet::PendingRuleMaps"* %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %23
  call void @_ZN5blink7RuleSet12CompactRulesEv(%"class.blink::RuleSet"* %31) #9
  br label %41

41:                                               ; preds = %23, %40
  call void @_ZN5blink20ElementRuleCollector30CollectMatchingShadowHostRulesERKNS_12MatchRequestE(%"class.blink::ElementRuleCollector"* %1, %"class.blink::MatchRequest"* nonnull dereferenceable(40) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #9
  %42 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %24, i64 1
  %43 = icmp eq %"class.blink::Member.2"* %42, %9
  br i1 %43, label %22, label %23
}

declare void @_ZN5blink20ElementRuleCollector30CollectMatchingShadowHostRulesERKNS_12MatchRequestE(%"class.blink::ElementRuleCollector"*, %"class.blink::MatchRequest"* dereferenceable(40)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ScopedStyleResolver27CollectMatchingSlottedRulesERNS_20ElementRuleCollectorE(%"class.blink::ScopedStyleResolver"* nocapture readonly, %"class.blink::ElementRuleCollector"* dereferenceable(904)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::MatchRequest", align 8
  %4 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 6, i32 0, i32 0
  %5 = load %"class.blink::HeapVector.478"*, %"class.blink::HeapVector.478"** %4, align 8
  %6 = icmp eq %"class.blink::HeapVector.478"* %5, null
  br i1 %6, label %46, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::HeapVector.478", %"class.blink::HeapVector.478"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.484"*, %"class.blink::Member.484"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HeapVector.478", %"class.blink::HeapVector.478"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::Member.484", %"class.blink::Member.484"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %46, label %15

15:                                               ; preds = %7
  %16 = bitcast %"class.blink::MatchRequest"* %3 to i8*
  %17 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %3, i64 0, i32 0
  %19 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %3, i64 0, i32 1
  %20 = bitcast %"class.blink::ContainerNode"** %19 to i64*
  %21 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %3, i64 0, i32 2
  %22 = bitcast %"class.blink::CSSStyleSheet"** %21 to i64*
  %23 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %3, i64 0, i32 3
  %24 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %3, i64 0, i32 4
  br label %25

25:                                               ; preds = %15, %43
  %26 = phi %"class.blink::Member.484"* [ %9, %15 ], [ %44, %43 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false)
  %27 = getelementptr inbounds %"class.blink::Member.484", %"class.blink::Member.484"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.blink::ScopedStyleResolver::RuleSubSet"*, %"class.blink::ScopedStyleResolver::RuleSubSet"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ScopedStyleResolver::RuleSubSet", %"class.blink::ScopedStyleResolver::RuleSubSet"* %28, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.blink::RuleSet"*, %"class.blink::RuleSet"** %29, align 8
  %31 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %32 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %31, i64 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.blink::ContainerNode"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.blink::ScopedStyleResolver::RuleSubSet"* %28 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.blink::ScopedStyleResolver::RuleSubSet", %"class.blink::ScopedStyleResolver::RuleSubSet"* %28, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  store %"class.blink::RuleSet"* %30, %"class.blink::RuleSet"** %18, align 8
  store i64 %34, i64* %20, align 8
  store i64 %36, i64* %22, align 8
  store i32 %38, i32* %23, align 8
  store %"class.blink::Element"* null, %"class.blink::Element"** %24, align 8
  %39 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %30, i64 0, i32 23, i32 0, i32 0
  %40 = load %"class.blink::RuleSet::PendingRuleMaps"*, %"class.blink::RuleSet::PendingRuleMaps"** %39, align 8
  %41 = icmp eq %"class.blink::RuleSet::PendingRuleMaps"* %40, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %25
  call void @_ZN5blink7RuleSet12CompactRulesEv(%"class.blink::RuleSet"* %30) #9
  br label %43

43:                                               ; preds = %25, %42
  call void @_ZN5blink20ElementRuleCollector20CollectMatchingRulesERKNS_12MatchRequestEb(%"class.blink::ElementRuleCollector"* %1, %"class.blink::MatchRequest"* nonnull dereferenceable(40) %3, i1 zeroext true) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #9
  %44 = getelementptr inbounds %"class.blink::Member.484", %"class.blink::Member.484"* %26, i64 1
  %45 = icmp eq %"class.blink::Member.484"* %44, %13
  br i1 %45, label %46, label %25

46:                                               ; preds = %43, %7, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ScopedStyleResolver30CollectMatchingPartPseudoRulesERNS_20ElementRuleCollectorERNS_9PartNamesEb(%"class.blink::ScopedStyleResolver"* nocapture readonly, %"class.blink::ElementRuleCollector"* dereferenceable(904), %"class.blink::PartNames"* dereferenceable(40), i1 zeroext) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.blink::MatchRequest", align 8
  %6 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.2"*, %"class.blink::Member.2"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.blink::MatchRequest"* %5 to i8*
  %15 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %5, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %5, i64 0, i32 1
  %18 = bitcast %"class.blink::ContainerNode"** %17 to i64*
  %19 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %5, i64 0, i32 2
  %20 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %5, i64 0, i32 3
  %21 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %5, i64 0, i32 4
  %22 = getelementptr inbounds %"class.blink::MatchRequest", %"class.blink::MatchRequest"* %5, i64 0, i32 1
  %23 = bitcast %"class.blink::ContainerNode"** %22 to i8*
  br label %25

24:                                               ; preds = %43, %4
  ret void

25:                                               ; preds = %13, %43
  %26 = phi %"class.blink::Member.2"* [ %7, %13 ], [ %44, %43 ]
  %27 = phi i32 [ 0, %13 ], [ %38, %43 ]
  %28 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %26, i64 0, i32 0, i32 0
  %29 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 32, i1 false)
  %30 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %29, i64 0, i32 1, i32 0, i32 0
  %31 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %31, i64 0, i32 13, i32 0, i32 0
  %33 = load %"class.blink::RuleSet"*, %"class.blink::RuleSet"** %32, align 8
  %34 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %15, align 8
  %35 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %34, i64 0, i32 1, i32 0, i32 0
  %36 = bitcast %"class.blink::ContainerNode"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = add i32 %27, 1
  store %"class.blink::RuleSet"* %33, %"class.blink::RuleSet"** %16, align 8
  store i64 %37, i64* %18, align 8
  store %"class.blink::CSSStyleSheet"* %29, %"class.blink::CSSStyleSheet"** %19, align 8
  store i32 %27, i32* %20, align 8
  store %"class.blink::Element"* null, %"class.blink::Element"** %21, align 8
  %39 = getelementptr inbounds %"class.blink::RuleSet", %"class.blink::RuleSet"* %33, i64 0, i32 23, i32 0, i32 0
  %40 = load %"class.blink::RuleSet::PendingRuleMaps"*, %"class.blink::RuleSet::PendingRuleMaps"** %39, align 8
  %41 = icmp eq %"class.blink::RuleSet::PendingRuleMaps"* %40, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %25
  call void @_ZN5blink7RuleSet12CompactRulesEv(%"class.blink::RuleSet"* %33) #9
  br label %43

43:                                               ; preds = %25, %42
  call void @_ZN5blink20ElementRuleCollector30CollectMatchingPartPseudoRulesERKNS_12MatchRequestERNS_9PartNamesEb(%"class.blink::ElementRuleCollector"* %1, %"class.blink::MatchRequest"* nonnull dereferenceable(40) %5, %"class.blink::PartNames"* dereferenceable(40) %2, i1 zeroext %3) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #9
  %44 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %26, i64 1
  %45 = icmp eq %"class.blink::Member.2"* %44, %11
  br i1 %45, label %24, label %25
}

declare void @_ZN5blink20ElementRuleCollector30CollectMatchingPartPseudoRulesERKNS_12MatchRequestERNS_9PartNamesEb(%"class.blink::ElementRuleCollector"*, %"class.blink::MatchRequest"* dereferenceable(40), %"class.blink::PartNames"* dereferenceable(40), i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ScopedStyleResolver14MatchPageRulesERNS_17PageRuleCollectorE(%"class.blink::ScopedStyleResolver"* nocapture readonly, %"class.blink::PageRuleCollector"* dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Member.2"*, %"class.blink::Member.2"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %11, %2
  ret void

11:                                               ; preds = %2, %11
  %12 = phi %"class.blink::Member.2"* [ %19, %11 ], [ %4, %2 ]
  %13 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %14, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %16, i64 0, i32 13, i32 0, i32 0
  %18 = load %"class.blink::RuleSet"*, %"class.blink::RuleSet"** %17, align 8
  tail call void @_ZN5blink17PageRuleCollector14MatchPageRulesEPNS_7RuleSetE(%"class.blink::PageRuleCollector"* %1, %"class.blink::RuleSet"* %18) #9
  %19 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %12, i64 1
  %20 = icmp eq %"class.blink::Member.2"* %19, %8
  br i1 %20, label %10, label %11
}

declare void @_ZN5blink17PageRuleCollector14MatchPageRulesEPNS_7RuleSetE(%"class.blink::PageRuleCollector"*, %"class.blink::RuleSet"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19ScopedStyleResolver5TraceEPNS_7VisitorE(%"class.blink::ScopedStyleResolver"*, %"class.blink::Visitor"*) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.blink::ScopedStyleResolver"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %72, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = and i64 %4, -131072
  %9 = inttoptr i64 %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 4138
  %11 = load i8, i8* %10, align 2
  %12 = icmp eq i8 %11, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %6
  %14 = getelementptr inbounds i8, i8* %9, i64 4160
  br label %53

15:                                               ; preds = %6
  %16 = getelementptr inbounds i8, i8* %9, i64 4096
  %17 = bitcast i8* %16 to %"class.blink::NormalPage"*
  %18 = getelementptr inbounds i8, i8* %9, i64 4400
  %19 = bitcast i8* %18 to i8**
  %20 = bitcast i8* %18 to i64*
  %21 = load i64, i64* %20, align 16
  %22 = sub i64 %4, %21
  %23 = lshr i64 %22, 3
  %24 = lshr i64 %22, 6
  %25 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %17, i64 0, i32 2, i32 0, i32 1, i64 %24
  %26 = load atomic i8, i8* %25 acquire, align 1
  %27 = trunc i64 %23 to i32
  %28 = and i32 %27, 7
  %29 = shl i32 2, %28
  %30 = trunc i32 %29 to i8
  %31 = add i8 %30, -1
  %32 = and i8 %31, %26
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %15, %34
  %35 = phi i64 [ %36, %34 ], [ %24, %15 ]
  %36 = add i64 %35, -1
  %37 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %17, i64 0, i32 2, i32 0, i32 1, i64 %36
  %38 = load atomic i8, i8* %37 acquire, align 1
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %34, label %40

40:                                               ; preds = %34, %15
  %41 = phi i64 [ %24, %15 ], [ %36, %34 ]
  %42 = phi i8 [ %32, %15 ], [ %38, %34 ]
  %43 = zext i8 %42 to i32
  %44 = tail call i32 @llvm.ctlz.i32(i32 %43, i1 true) #9, !range !4
  %45 = add nsw i32 %44, -24
  %46 = shl i64 %41, 3
  %47 = or i64 %46, 7
  %48 = sext i32 %45 to i64
  %49 = sub i64 %47, %48
  %50 = shl i64 %49, 3
  %51 = load i8*, i8** %19, align 16
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  br label %53

53:                                               ; preds = %40, %13
  %54 = phi i8* [ %14, %13 ], [ %52, %40 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 8
  %56 = getelementptr inbounds i8, i8* %54, i64 4
  %57 = bitcast i8* %56 to i16*
  %58 = load atomic i16, i16* %57 acquire, align 2
  %59 = lshr i16 %58, 2
  %60 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %61 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %60, i64 0, i32 0
  %62 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %61, align 8
  %63 = zext i16 %59 to i64
  %64 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %62, i64 %63
  %65 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %64, align 8
  %66 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %65, i64 0, i32 0
  %67 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %66, align 8
  %68 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %69 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %69, i64 5
  %71 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, align 8
  tail call void %71(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* %55, void (%"class.blink::Visitor"*, i8*)* %67) #9
  br label %72

72:                                               ; preds = %2, %53
  %73 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 1
  %74 = bitcast %"class.blink::HeapVector"* %73 to i64*
  %75 = load atomic i64, i64* %74 monotonic, align 8
  %76 = icmp eq i64 %75, 0
  %77 = bitcast %"class.blink::HeapVector"* %73 to i8**
  %78 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %79 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %79, i64 11
  %81 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %80, align 8
  tail call void %81(%"class.blink::Visitor"* %1, i8** %77) #9
  br i1 %76, label %88, label %82

82:                                               ; preds = %72
  %83 = inttoptr i64 %75 to i8*
  %84 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %85 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %85, i64 5
  %87 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %86, align 8
  tail call void %87(%"class.blink::Visitor"* %1, i8* nonnull %83, i8* nonnull %83, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %88

88:                                               ; preds = %72, %82
  %89 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 4
  %90 = bitcast %"class.blink::HeapHashMap.458"* %89 to i64*
  %91 = load atomic i64, i64* %90 monotonic, align 8
  %92 = bitcast %"class.blink::HeapHashMap.458"* %89 to i8**
  %93 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %78, align 8
  %94 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %93, i64 11
  %95 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %94, align 8
  tail call void %95(%"class.blink::Visitor"* %1, i8** %92) #9
  %96 = icmp eq i64 %91, 0
  br i1 %96, label %103, label %97

97:                                               ; preds = %88
  %98 = inttoptr i64 %91 to i8*
  %99 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %100 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %100, i64 5
  %102 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %101, align 8
  tail call void %102(%"class.blink::Visitor"* %1, i8* nonnull %98, i8* nonnull %98, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_18StyleRuleKeyframesEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #9
  br label %103

103:                                              ; preds = %88, %97
  %104 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 5
  %105 = bitcast %"class.blink::Member.465"* %104 to i64*
  %106 = load atomic i64, i64* %105 monotonic, align 8
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %114, label %108

108:                                              ; preds = %103
  %109 = inttoptr i64 %106 to i8*
  %110 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %111 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %111, i64 5
  %113 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %112, align 8
  tail call void %113(%"class.blink::Visitor"* %1, i8* nonnull %109, i8* nonnull %109, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15CounterStyleMapEE5TraceEPNS_7VisitorEPKv) #9
  br label %114

114:                                              ; preds = %103, %108
  %115 = getelementptr inbounds %"class.blink::ScopedStyleResolver", %"class.blink::ScopedStyleResolver"* %0, i64 0, i32 6
  %116 = bitcast %"class.blink::Member.476"* %115 to i64*
  %117 = load atomic i64, i64* %116 monotonic, align 8
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = inttoptr i64 %117 to i8*
  %121 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %122 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %122, i64 5
  %124 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %123, align 8
  tail call void %124(%"class.blink::Visitor"* %1, i8* nonnull %120, i8* nonnull %120, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEELj0EEEE5TraceEPNS_7VisitorEPKv) #9
  br label %125

125:                                              ; preds = %114, %119
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19ScopedStyleResolver10RuleSubSet5TraceEPNS_7VisitorE(%"class.blink::ScopedStyleResolver::RuleSubSet"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.blink::ScopedStyleResolver::RuleSubSet"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv) #9
  br label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds %"class.blink::ScopedStyleResolver::RuleSubSet", %"class.blink::ScopedStyleResolver::RuleSubSet"* %0, i64 0, i32 2
  %14 = bitcast %"class.blink::Member.241"* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7RuleSetEE5TraceEPNS_7VisitorEPKv) #9
  br label %23

23:                                               ; preds = %12, %17
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZN5blink7RuleSet12CompactRulesEv(%"class.blink::RuleSet"*) local_unnamed_addr #3

declare void @_ZN5blink7RuleSet7AddRuleEPNS_9StyleRuleEjjPKNS_14ContainerQueryE(%"class.blink::RuleSet"*, %"class.blink::StyleRule"*, i32, i32, %"class.blink::ContainerQuery"*) local_unnamed_addr #3

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18StyleRuleKeyframesEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.345"*, %"class.WTF::Vector.345"* dereferenceable(16)) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.345", %"class.WTF::Vector.345"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.345", %"class.WTF::Vector.345"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Member.348"* null, %"class.blink::Member.348"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.345", %"class.WTF::Vector.345"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18StyleRuleKeyframesEEEEEmm(i64 %9) #9
  %11 = lshr i64 %10, 3
  %12 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %11) #9
  %13 = ptrtoint %"class.blink::HeapVectorBacking"* %12 to i64
  %14 = bitcast %"class.WTF::Vector.345"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking"* %12 to %"class.blink::Member.348"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #9
  %22 = load %"class.blink::Member.348"*, %"class.blink::Member.348"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.blink::Member.348"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector.345", %"class.WTF::Vector.345"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.345", %"class.WTF::Vector.345"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector.345", %"class.WTF::Vector.345"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.348"*, %"class.blink::Member.348"** %28, align 8
  %30 = icmp ne %"class.blink::Member.348"* %24, null
  %31 = icmp ne %"class.blink::Member.348"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %53, !prof !5

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.blink::Member.348"* %24 to i8*
  %37 = bitcast %"class.blink::Member.348"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #9
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33, %50
  %41 = phi i64 [ %43, %50 ], [ %35, %33 ]
  %42 = phi %"class.blink::Member.348"* [ %51, %50 ], [ %24, %33 ]
  %43 = add nsw i64 %41, -1
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member.348"* %42 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %46, %40
  %51 = getelementptr inbounds %"class.blink::Member.348", %"class.blink::Member.348"* %42, i64 1
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %50, %23, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18StyleRuleKeyframesEEEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.3, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([177 x i8], [177 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_18StyleRuleKeyframesEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.348"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member.348", %"class.blink::Member.348"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.348"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::StyleRuleKeyframes"*
  %35 = getelementptr inbounds %"class.blink::StyleRuleKeyframes", %"class.blink::StyleRuleKeyframes"* %34, i64 0, i32 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18StyleRuleKeyframesEE5TraceEPNS_7VisitorEPKv) #9
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18StyleRuleKeyframesEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18StyleRuleKeyframesEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleRuleBase"*
  tail call void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"*, %"class.blink::Visitor"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17StyleRuleFontFaceEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.336"*, %"class.WTF::Vector.336"* dereferenceable(16)) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.336", %"class.WTF::Vector.336"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.336", %"class.WTF::Vector.336"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Member.339"* null, %"class.blink::Member.339"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.336", %"class.WTF::Vector.336"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17StyleRuleFontFaceEEEEEmm(i64 %9) #9
  %11 = lshr i64 %10, 3
  %12 = tail call %"class.blink::HeapVectorBacking.1419"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %11) #9
  %13 = ptrtoint %"class.blink::HeapVectorBacking.1419"* %12 to i64
  %14 = bitcast %"class.WTF::Vector.336"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking.1419"* %12 to %"class.blink::Member.339"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking.1419", %"class.blink::HeapVectorBacking.1419"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #9
  %22 = load %"class.blink::Member.339"*, %"class.blink::Member.339"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.blink::Member.339"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector.336", %"class.WTF::Vector.336"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.336", %"class.WTF::Vector.336"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector.336", %"class.WTF::Vector.336"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.339"*, %"class.blink::Member.339"** %28, align 8
  %30 = icmp ne %"class.blink::Member.339"* %24, null
  %31 = icmp ne %"class.blink::Member.339"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %53, !prof !5

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.blink::Member.339"* %24 to i8*
  %37 = bitcast %"class.blink::Member.339"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #9
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33, %50
  %41 = phi i64 [ %43, %50 ], [ %35, %33 ]
  %42 = phi %"class.blink::Member.339"* [ %51, %50 ], [ %24, %33 ]
  %43 = add nsw i64 %41, -1
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member.339"* %42 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %46, %40
  %51 = getelementptr inbounds %"class.blink::Member.339", %"class.blink::Member.339"* %42, i64 1
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %50, %23, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17StyleRuleFontFaceEEEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1419"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.3, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1419"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1419"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([175 x i8], [175 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_17StyleRuleFontFaceEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.339"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member.339", %"class.blink::Member.339"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.339"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::StyleRuleFontFace"*
  %35 = getelementptr inbounds %"class.blink::StyleRuleFontFace", %"class.blink::StyleRuleFontFace"* %34, i64 0, i32 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17StyleRuleFontFaceEE5TraceEPNS_7VisitorEPKv) #9
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17StyleRuleFontFaceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17StyleRuleFontFaceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleRuleBase"*
  tail call void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16MediaQueryResultELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.320"*, %"class.blink::MediaQueryResult"*, i32) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.320", %"class.WTF::Vector.320"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.320", %"class.WTF::Vector.320"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %70

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.320", %"class.WTF::Vector.320"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::MediaQueryResult"*, %"class.blink::MediaQueryResult"** %14, align 8
  %16 = icmp ugt %"class.blink::MediaQueryResult"* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %15, i64 %18
  %20 = icmp ugt %"class.blink::MediaQueryResult"* %19, %1
  br i1 %20, label %41, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %70, !prof !5

30:                                               ; preds = %21
  %31 = icmp eq %"class.blink::MediaQueryResult"* %15, null
  br i1 %31, label %32, label %40

32:                                               ; preds = %30
  %33 = zext i32 %28 to i64
  %34 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16MediaQueryResultEEEmm(i64 %33) #9
  %35 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16MediaQueryResultEEEPKcv, i64 0, i64 0)) #9
  %36 = ptrtoint i8* %35 to i64
  %37 = bitcast %"class.WTF::Vector.320"* %0 to i64*
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = udiv i64 %34, 48
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %10, align 8
  br label %70

40:                                               ; preds = %30
  tail call void @_ZN3WTF6VectorIN5blink16MediaQueryResultELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.320"* %0, i32 %28) #9
  br label %70

41:                                               ; preds = %17
  %42 = ptrtoint %"class.blink::MediaQueryResult"* %1 to i64
  %43 = ptrtoint %"class.blink::MediaQueryResult"* %15 to i64
  %44 = sub i64 %42, %43
  %45 = sdiv exact i64 %44, 48
  %46 = lshr i32 %11, 2
  %47 = add nuw i32 %11, 1
  %48 = add i32 %47, %46
  %49 = icmp ugt i32 %48, 4
  %50 = select i1 %49, i32 %48, i32 4
  %51 = icmp ugt i32 %50, %9
  %52 = select i1 %51, i32 %50, i32 %9
  %53 = icmp ult i32 %11, %52
  br i1 %53, label %54, label %67, !prof !5

54:                                               ; preds = %41
  %55 = icmp eq %"class.blink::MediaQueryResult"* %15, null
  br i1 %55, label %56, label %65

56:                                               ; preds = %54
  %57 = zext i32 %52 to i64
  %58 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16MediaQueryResultEEEmm(i64 %57) #9
  %59 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %58, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16MediaQueryResultEEEPKcv, i64 0, i64 0)) #9
  %60 = ptrtoint i8* %59 to i64
  %61 = bitcast %"class.WTF::Vector.320"* %0 to i64*
  store atomic i64 %60, i64* %61 monotonic, align 8
  %62 = udiv i64 %58, 48
  %63 = trunc i64 %62 to i32
  store i32 %63, i32* %10, align 8
  %64 = bitcast i8* %59 to %"class.blink::MediaQueryResult"*
  br label %67

65:                                               ; preds = %54
  tail call void @_ZN3WTF6VectorIN5blink16MediaQueryResultELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.320"* %0, i32 %52) #9
  %66 = load %"class.blink::MediaQueryResult"*, %"class.blink::MediaQueryResult"** %14, align 8
  br label %67

67:                                               ; preds = %41, %56, %65
  %68 = phi %"class.blink::MediaQueryResult"* [ %15, %41 ], [ %64, %56 ], [ %66, %65 ]
  %69 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %68, i64 %45
  br label %70

70:                                               ; preds = %67, %21, %32, %40, %3
  %71 = phi %"class.blink::MediaQueryResult"* [ %1, %3 ], [ %69, %67 ], [ %1, %21 ], [ %1, %32 ], [ %1, %40 ]
  %72 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #9
  %73 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %73, align 8
  %74 = load i32, i32* %7, align 4
  %75 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75)
  %76 = icmp ult i32 %9, %74
  br i1 %76, label %78, label %77

77:                                               ; preds = %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75)
  store i8* null, i8** %73, align 8
  br label %87

78:                                               ; preds = %70
  %79 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  %80 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %74) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* %79, i8* %80) #9
  %81 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %82 = load i8*, i8** %81, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75)
  store i8* %82, i8** %73, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %87, label %84

84:                                               ; preds = %78
  %85 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #9
  %86 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #9
  br label %87

87:                                               ; preds = %77, %78, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #9
  %88 = zext i32 %2 to i64
  %89 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %71, i64 %88
  %90 = icmp eq i32 %2, 0
  br i1 %90, label %108, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.WTF::Vector.320", %"class.WTF::Vector.320"* %0, i64 0, i32 0, i32 0, i32 0
  %93 = load %"class.blink::MediaQueryResult"*, %"class.blink::MediaQueryResult"** %92, align 8
  %94 = load i32, i32* %7, align 4
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %93, i64 %95
  br label %97

97:                                               ; preds = %91, %97
  %98 = phi %"class.blink::MediaQueryResult"* [ %105, %97 ], [ %96, %91 ]
  %99 = phi %"class.blink::MediaQueryResult"* [ %106, %97 ], [ %71, %91 ]
  %100 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %98, i64 0, i32 0
  %101 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %99, i64 0, i32 0
  call void @_ZN5blink13MediaQueryExpC1ERKS0_(%"class.blink::MediaQueryExp"* %100, %"class.blink::MediaQueryExp"* dereferenceable(40) %101) #9
  %102 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %98, i64 0, i32 1
  %103 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %99, i64 0, i32 1
  %104 = load i8, i8* %103, align 8, !range !3
  store i8 %104, i8* %102, align 8
  %105 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %98, i64 1
  %106 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %99, i64 1
  %107 = icmp eq %"class.blink::MediaQueryResult"* %106, %89
  br i1 %107, label %108, label %97

108:                                              ; preds = %97, %87
  store i32 %9, i32* %7, align 4
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16MediaQueryResultELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.320"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %27

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.320", %"class.WTF::Vector.320"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::MediaQueryResult"*, %"class.blink::MediaQueryResult"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.320", %"class.WTF::Vector.320"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.320"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.320", %"class.WTF::Vector.320"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"class.blink::MediaQueryResult"* [ %23, %14 ], [ %6, %4 ]
  %16 = phi %"class.blink::MediaQueryResult"* [ %22, %14 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %16, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %15, i64 0, i32 0
  tail call void @_ZN5blink13MediaQueryExpC1ERKS0_(%"class.blink::MediaQueryExp"* %17, %"class.blink::MediaQueryExp"* dereferenceable(40) %18) #9
  %19 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %16, i64 0, i32 1
  %20 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %15, i64 0, i32 1
  %21 = load i8, i8* %20, align 8, !range !3
  store i8 %21, i8* %19, align 8
  tail call void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"* %18) #9
  %22 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %16, i64 1
  %23 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %15, i64 1
  %24 = icmp eq %"class.blink::MediaQueryResult"* %23, %10
  br i1 %24, label %25, label %14

25:                                               ; preds = %14, %4
  %26 = bitcast %"class.blink::MediaQueryResult"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %26) #9
  br label %63

27:                                               ; preds = %2
  %28 = zext i32 %1 to i64
  %29 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16MediaQueryResultEEEmm(i64 %28) #9
  %30 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %29, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16MediaQueryResultEEEPKcv, i64 0, i64 0)) #9
  %31 = udiv i64 %29, 48
  %32 = ptrtoint i8* %30 to i64
  %33 = getelementptr inbounds %"class.WTF::Vector.320", %"class.WTF::Vector.320"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::MediaQueryResult"*, %"class.blink::MediaQueryResult"** %33, align 8
  %35 = getelementptr inbounds %"class.WTF::Vector.320", %"class.WTF::Vector.320"* %0, i64 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %34, i64 %37
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %27
  %41 = bitcast %"class.blink::MediaQueryResult"* %34 to i8*
  br label %58

42:                                               ; preds = %27
  %43 = bitcast i8* %30 to %"class.blink::MediaQueryResult"*
  br label %44

44:                                               ; preds = %42, %44
  %45 = phi %"class.blink::MediaQueryResult"* [ %53, %44 ], [ %34, %42 ]
  %46 = phi %"class.blink::MediaQueryResult"* [ %52, %44 ], [ %43, %42 ]
  %47 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %46, i64 0, i32 0
  %48 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %45, i64 0, i32 0
  tail call void @_ZN5blink13MediaQueryExpC1ERKS0_(%"class.blink::MediaQueryExp"* %47, %"class.blink::MediaQueryExp"* dereferenceable(40) %48) #9
  %49 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %46, i64 0, i32 1
  %50 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %45, i64 0, i32 1
  %51 = load i8, i8* %50, align 8, !range !3
  store i8 %51, i8* %49, align 8
  tail call void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"* %48) #9
  %52 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %46, i64 1
  %53 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %45, i64 1
  %54 = icmp eq %"class.blink::MediaQueryResult"* %53, %38
  br i1 %54, label %55, label %44

55:                                               ; preds = %44
  %56 = bitcast %"class.WTF::Vector.320"* %0 to i8**
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %40, %55
  %59 = phi i8* [ %57, %55 ], [ %41, %40 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %59) #9
  %60 = bitcast %"class.WTF::Vector.320"* %0 to i64*
  store atomic i64 %32, i64* %60 monotonic, align 8
  %61 = trunc i64 %31 to i32
  %62 = getelementptr inbounds %"class.WTF::Vector.320", %"class.WTF::Vector.320"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %61, i32* %62, align 8
  br label %63

63:                                               ; preds = %58, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16MediaQueryResultEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 44695552
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 44695552) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 48
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

declare void @_ZN5blink13MediaQueryExpC1ERKS0_(%"class.blink::MediaQueryExp"*, %"class.blink::MediaQueryExp"* dereferenceable(40)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"*) unnamed_addr #6

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector"*, %"class.blink::CSSStyleSheet"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.2"*, %"class.blink::Member.2"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %16, i64 %18
  %20 = bitcast %"class.blink::CSSStyleSheet"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.2"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #9
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.2"*, %"class.blink::Member.2"** %8, align 8
  %10 = icmp eq %"class.blink::Member.2"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleSheetEEEEEmm(i64 %11) #9
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1439"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #9
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1439"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1439", %"class.blink::HeapVectorBacking.1439"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.2"*, %"class.blink::Member.2"** %8, align 8
  %26 = icmp eq %"class.blink::Member.2"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.2"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #9
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #9
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #9
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleSheetEEEEEmm(i64 %14) #9
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1439"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1439"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.2"*, %"class.blink::Member.2"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1439"* %17, null
  %23 = icmp ne %"class.blink::Member.2"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.2"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !5

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1439", %"class.blink::HeapVectorBacking.1439"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #9
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #9
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #9
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1439", %"class.blink::HeapVectorBacking.1439"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleSheetEEEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1439"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.3, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1439"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1439"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13CSSStyleSheetEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.2"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.2"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.1291"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberIKNS1_18StyleSheetContentsEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS3_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.1289"*, %"class.blink::StyleSheetContents"** dereferenceable(8), %"class.blink::StyleSheetContents"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1289", %"class.WTF::HashTable.1289"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.1291"*, %"class.blink::Member.1291"** %4, align 8
  %6 = icmp eq %"class.blink::Member.1291"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.1291"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_18StyleSheetContentsEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1289"* %0, %"class.blink::Member.1291"* null)
  %9 = load %"class.blink::Member.1291"*, %"class.blink::Member.1291"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.1291"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1289", %"class.WTF::HashTable.1289"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::StyleSheetContents"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.1291", %"class.blink::Member.1291"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.1291", %"class.blink::Member.1291"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %40, align 8
  %42 = icmp eq %"class.blink::StyleSheetContents"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::StyleSheetContents"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::StyleSheetContents"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.1291"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.1291"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::StyleSheetContents"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::StyleSheetContents"* %59, inttoptr (i64 -1 to %"class.blink::StyleSheetContents"*)
  %67 = select i1 %66, %"class.blink::Member.1291"* %60, %"class.blink::Member.1291"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.1291", %"class.blink::Member.1291"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.1291", %"class.blink::Member.1291"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %73, align 8
  %75 = icmp eq %"class.blink::StyleSheetContents"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.1291"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.1291"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #9
  %80 = getelementptr inbounds %"class.WTF::HashTable.1289", %"class.WTF::HashTable.1289"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.1291"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %2, align 8
  %89 = ptrtoint %"class.blink::StyleSheetContents"* %88 to i64
  %90 = bitcast %"class.blink::Member.1291"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::StyleSheetContents"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #9
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.1291"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #9
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.1289", %"class.WTF::HashTable.1289"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.1289", %"class.WTF::HashTable.1289"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.1291"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_18StyleSheetContentsEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1289"* %0, %"class.blink::Member.1291"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.1291"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.1291"*, i8 } undef, %"class.blink::Member.1291"* %117, 0
  %119 = insertvalue { %"class.blink::Member.1291"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.1291"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.1291"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_18StyleSheetContentsEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1289"*, %"class.blink::Member.1291"*) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.1289", %"class.WTF::HashTable.1289"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.1289", %"class.WTF::HashTable.1289"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #9
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %23, i8* %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #9
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.1291"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_18StyleSheetContentsEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb(%"class.WTF::HashTable.1289"* %0, i32 %35, %"class.blink::Member.1291"* %1, i8* nonnull dereferenceable(1) %4) #9
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_18StyleSheetContentsEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #9
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member.1291"*
  %44 = call %"class.blink::Member.1291"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_18StyleSheetContentsEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.1289"* %0, %"class.blink::Member.1291"* %43, i32 %40, %"class.blink::Member.1291"* %1) #9
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.1291"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.1291"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.1291"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_18StyleSheetContentsEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb(%"class.WTF::HashTable.1289"*, i32, %"class.blink::Member.1291"*, i8* dereferenceable(1)) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #9
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #9
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.1289", %"class.WTF::HashTable.1289"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.1291"*, %"class.blink::Member.1291"** %31, align 8
  %33 = icmp eq %"class.blink::Member.1291"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.1291"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #9
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.1289", %"class.WTF::HashTable.1289"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.1291"*, %"class.blink::Member.1291"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_18StyleSheetContentsEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #9
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member.1291"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.1291"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.1291"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.1291"*, %"class.blink::Member.1291"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.1291", %"class.blink::Member.1291"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.1291"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.1291", %"class.blink::Member.1291"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.1291"* %61, %"class.blink::Member.1291"* %55
  %63 = bitcast %"class.blink::Member.1291"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.1291"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.1291"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.1289"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #9
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.1291"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.1291"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_18StyleSheetContentsEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.1289"* %0, %"class.blink::Member.1291"* %42, i32 %1, %"class.blink::Member.1291"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.1291"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.1291"*, %"class.blink::Member.1291"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.1291", %"class.blink::Member.1291"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.1291"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.1291", %"class.blink::Member.1291"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.1291"* %87, %"class.blink::Member.1291"* %82
  %89 = bitcast %"class.blink::Member.1291"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.1291"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.1291"*, %"class.blink::Member.1291"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.1291", %"class.blink::Member.1291"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.1291"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.1291", %"class.blink::Member.1291"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.1291"* %99, %"class.blink::Member.1291"* %88
  %101 = bitcast %"class.blink::Member.1291"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.1291"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.1291"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.1291"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.1291"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_18StyleSheetContentsEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.1289"*, %"class.blink::Member.1291"*, i32, %"class.blink::Member.1291"*) local_unnamed_addr #2 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.1291"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.1289", %"class.WTF::HashTable.1289"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.1289", %"class.WTF::HashTable.1289"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.1291"*, %"class.blink::Member.1291"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.1291"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.1291"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #9
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.1289", %"class.WTF::HashTable.1289"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.1291"*, %"class.blink::Member.1291"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.1289"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.1291"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #9
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.1291"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.1291"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #9
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.1289", %"class.WTF::HashTable.1289"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.1291"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.1291"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.1291"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.1291", %"class.blink::Member.1291"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.1291"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.1291", %"class.blink::Member.1291"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.1291"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.1291", %"class.blink::Member.1291"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %70, align 8
  %72 = icmp eq %"class.blink::StyleSheetContents"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::StyleSheetContents"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.1291"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.1291"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.1291"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.1291"* %93, null
  %95 = ptrtoint %"class.blink::Member.1291"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::StyleSheetContents"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::StyleSheetContents"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::StyleSheetContents"* %99, inttoptr (i64 -1 to %"class.blink::StyleSheetContents"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.1291", %"class.blink::Member.1291"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.1291"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.1291", %"class.blink::Member.1291"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %113, align 8
  %115 = icmp eq %"class.blink::StyleSheetContents"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.1291"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.1291"*, %"class.blink::Member.1291"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.1291", %"class.blink::Member.1291"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.1291"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.1291"* %118, %"class.blink::Member.1291"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.1291"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.1291"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_18StyleSheetContentsEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.13, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_18StyleSheetContentsEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_18StyleSheetContentsEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_18StyleSheetContentsEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_18StyleSheetContentsEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_18StyleSheetContentsEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([416 x i8], [416 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberIKNS1_18StyleSheetContentsEEES7_NS_17IdentityExtractorENS_10MemberHashIS6_EENS_10HashTraitsIS7_EESC_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_18StyleSheetContentsEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.1291"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #9
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.1291", %"class.blink::Member.1291"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.1291"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv) #9
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv) #9
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_18StyleSheetContentsEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleSheetContents"*
  tail call void @_ZNK5blink18StyleSheetContents5TraceEPNS_7VisitorE(%"class.blink::StyleSheetContents"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink18StyleSheetContents5TraceEPNS_7VisitorE(%"class.blink::StyleSheetContents"*, %"class.blink::Visitor"*) local_unnamed_addr #3

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.464"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_18StyleRuleKeyframesEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.462"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::StyleRuleKeyframes"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.464"*, %"struct.WTF::KeyValuePair.464"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.464"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.464"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_18StyleRuleKeyframesEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.462"* %0, %"struct.WTF::KeyValuePair.464"* null)
  %9 = load %"struct.WTF::KeyValuePair.464"*, %"struct.WTF::KeyValuePair.464"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.464"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %73, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair.464"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair.464"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.464"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %172, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair.464"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair.464"* %53, null
  br i1 %63, label %73, label %64

64:                                               ; preds = %62
  %65 = bitcast %"struct.WTF::KeyValuePair.464"* %53 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %65, i64 16) #9
  %66 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  br label %73

73:                                               ; preds = %10, %62, %64
  %74 = phi %"class.WTF::StringImpl"* [ %72, %64 ], [ %17, %62 ], [ %17, %10 ]
  %75 = phi %"struct.WTF::KeyValuePair.464"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  %76 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #9
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !2

91:                                               ; preds = %82
  tail call void @llvm.trap() #9
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %92, %77, %73
  %95 = ptrtoint %"class.WTF::StringImpl"* %74 to i64
  %96 = bitcast %"struct.WTF::KeyValuePair.464"* %75 to i64*
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  store i64 %95, i64* %96, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #9
  br label %113

113:                                              ; preds = %112, %109, %94
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %75, i64 0, i32 1
  %115 = load %"class.blink::StyleRuleKeyframes"*, %"class.blink::StyleRuleKeyframes"** %2, align 8
  %116 = ptrtoint %"class.blink::StyleRuleKeyframes"* %115 to i64
  %117 = bitcast %"class.blink::Member.348"* %114 to i64*
  store atomic i64 %116, i64* %117 monotonic, align 8
  %118 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %123, label %120

120:                                              ; preds = %113
  %121 = getelementptr inbounds %"class.blink::StyleRuleKeyframes", %"class.blink::StyleRuleKeyframes"* %115, i64 0, i32 0, i32 0
  %122 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %121) #9
  br label %123

123:                                              ; preds = %113, %120
  %124 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %160, label %126

126:                                              ; preds = %123
  %127 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %128 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %127, i64 0, i32 1
  %129 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %128) #9
  %130 = icmp eq i8* %129, null
  br i1 %130, label %131, label %133, !prof !2

131:                                              ; preds = %126
  %132 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %128, i8* %132) #9
  br label %133

133:                                              ; preds = %131, %126
  %134 = phi i8* [ %132, %131 ], [ %129, %126 ]
  %135 = bitcast i8* %134 to %"class.blink::ThreadState"**
  %136 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %136, i64 0, i32 9
  %138 = load i8, i8* %137, align 1, !range !3
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %160, label %140

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %136, i64 0, i32 13
  %142 = load i64, i64* %141, align 8
  %143 = add i64 %142, 1
  store i64 %143, i64* %141, align 8
  %144 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %136, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %145 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %144, align 8
  %146 = load atomic i64, i64* %117 monotonic, align 8
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %157, label %148

148:                                              ; preds = %140
  %149 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %145, i64 0, i32 0, i32 0
  %150 = inttoptr i64 %146 to %"class.blink::StyleRuleKeyframes"*
  %151 = getelementptr inbounds %"class.blink::StyleRuleKeyframes", %"class.blink::StyleRuleKeyframes"* %150, i64 0, i32 0, i32 0
  %152 = bitcast %"class.blink::MarkingVisitor"* %145 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %153 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %152, align 8
  %154 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %153, i64 5
  %155 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %154, align 8
  tail call void %155(%"class.blink::Visitor"* %149, i8* %151, i8* %151, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18StyleRuleKeyframesEE5TraceEPNS_7VisitorEPKv) #9
  %156 = load i64, i64* %141, align 8
  br label %157

157:                                              ; preds = %148, %140
  %158 = phi i64 [ %143, %140 ], [ %156, %148 ]
  %159 = add i64 %158, -1
  store i64 %159, i64* %141, align 8
  br label %160

160:                                              ; preds = %123, %133, %157
  %161 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 2
  %162 = load i32, i32* %161, align 4
  %163 = add i32 %162, 1
  store i32 %163, i32* %161, align 4
  %164 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 3
  %165 = load i32, i32* %164, align 8
  %166 = add i32 %165, %163
  %167 = shl i32 %166, 1
  %168 = load i32, i32* %12, align 8
  %169 = icmp ult i32 %167, %168
  br i1 %169, label %172, label %170

170:                                              ; preds = %160
  %171 = tail call %"struct.WTF::KeyValuePair.464"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_18StyleRuleKeyframesEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.462"* %0, %"struct.WTF::KeyValuePair.464"* %75)
  br label %172

172:                                              ; preds = %49, %160, %170
  %173 = phi i8 [ 1, %160 ], [ 1, %170 ], [ 0, %49 ]
  %174 = phi %"struct.WTF::KeyValuePair.464"* [ %75, %160 ], [ %171, %170 ], [ %42, %49 ]
  %175 = insertvalue { %"struct.WTF::KeyValuePair.464"*, i8 } undef, %"struct.WTF::KeyValuePair.464"* %174, 0
  %176 = insertvalue { %"struct.WTF::KeyValuePair.464"*, i8 } %175, i8 %173, 1
  ret { %"struct.WTF::KeyValuePair.464"*, i8 } %176
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.464"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_18StyleRuleKeyframesEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.462"*, %"struct.WTF::KeyValuePair.464"*) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #9
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %23, i8* %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #9
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.464"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_18StyleRuleKeyframesEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.462"* %0, i32 %35, %"struct.WTF::KeyValuePair.464"* %1, i8* nonnull dereferenceable(1) %4) #9
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.1462"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_18StyleRuleKeyframesEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #9
  %43 = bitcast %"class.blink::HeapHashTableBacking.1462"* %42 to %"struct.WTF::KeyValuePair.464"*
  %44 = call %"struct.WTF::KeyValuePair.464"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_18StyleRuleKeyframesEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.462"* %0, %"struct.WTF::KeyValuePair.464"* %43, i32 %40, %"struct.WTF::KeyValuePair.464"* %1) #9
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.464"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.464"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.464"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_18StyleRuleKeyframesEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.462"*, i32, %"struct.WTF::KeyValuePair.464"*, i8* dereferenceable(1)) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #9
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #9
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.464"*, %"struct.WTF::KeyValuePair.464"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.464"* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.464"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #9
  br i1 %38, label %39, label %116

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.464"*, %"struct.WTF::KeyValuePair.464"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.1462"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_18StyleRuleKeyframesEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #9
  %45 = bitcast %"class.blink::HeapHashTableBacking.1462"* %44 to %"struct.WTF::KeyValuePair.464"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %113, %39
  %48 = phi %"struct.WTF::KeyValuePair.464"* [ null, %39 ], [ %65, %113 ]
  %49 = bitcast %"class.WTF::HashTable.462"* %0 to %"class.blink::HeapHashTableBacking.1462"**
  store %"class.blink::HeapHashTableBacking.1462"* %44, %"class.blink::HeapHashTableBacking.1462"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.1462", %"class.blink::HeapHashTableBacking.1462"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #9
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.464"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.464"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_18StyleRuleKeyframesEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.462"* %0, %"struct.WTF::KeyValuePair.464"* %42, i32 %1, %"struct.WTF::KeyValuePair.464"* %48)
  br label %116

58:                                               ; preds = %39, %113
  %59 = phi i64 [ %114, %113 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.464"* [ %65, %113 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.464"*, %"struct.WTF::KeyValuePair.464"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.464"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.464"* %64, %"struct.WTF::KeyValuePair.464"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = bitcast %"struct.WTF::KeyValuePair.464"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %71 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %58, %58
  %70 = bitcast %"struct.WTF::KeyValuePair.464"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  br label %113

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #9
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = load i64, i64* %67, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair.464"* %64 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %45, i64 %59, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %61, i64 %59, i32 1
  %93 = bitcast %"class.blink::Member.348"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.348"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = load %"struct.WTF::KeyValuePair.464"*, %"struct.WTF::KeyValuePair.464"** %31, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %96, i64 %59, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #9
  br label %113

113:                                              ; preds = %112, %109, %88, %69
  %114 = add nuw nsw i64 %59, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %47, label %58

116:                                              ; preds = %34, %30, %55
  %117 = phi %"struct.WTF::KeyValuePair.464"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.464"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.464"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberINS3_18StyleRuleKeyframesEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.462"*, %"struct.WTF::KeyValuePair.464"*, i32, %"struct.WTF::KeyValuePair.464"*) local_unnamed_addr #2 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.464"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"struct.WTF::KeyValuePair.464"*, %"struct.WTF::KeyValuePair.464"** %10, align 8
  br label %70

14:                                               ; preds = %169, %4
  %15 = phi i32 [ 0, %4 ], [ %170, %169 ]
  %16 = phi %"struct.WTF::KeyValuePair.464"* [ null, %4 ], [ %172, %169 ]
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = bitcast %"struct.WTF::KeyValuePair.464"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %20) #9
  %21 = load i32, i32* %6, align 8
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %15, %14 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 0
  %25 = load %"struct.WTF::KeyValuePair.464"*, %"struct.WTF::KeyValuePair.464"** %24, align 8
  %26 = bitcast %"class.WTF::HashTable.462"* %0 to i64*
  store atomic i64 %5, i64* %26 monotonic, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %22
  %30 = bitcast %"struct.WTF::KeyValuePair.464"* %1 to i8*
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #9
  br label %32

32:                                               ; preds = %22, %29
  store i32 %2, i32* %6, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.464"* %25, null
  br i1 %33, label %66, label %34

34:                                               ; preds = %32
  %35 = icmp eq i32 %23, 0
  br i1 %35, label %64, label %36

36:                                               ; preds = %34
  %37 = zext i32 %23 to i64
  br label %38

38:                                               ; preds = %61, %36
  %39 = phi i64 [ 0, %36 ], [ %62, %61 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %25, i64 %39
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = ptrtoint %"class.WTF::StringImpl"* %42 to i64
  switch i64 %43, label %44 [
    i64 -1, label %61
    i64 0, label %61
  ]

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #9
  br label %57

57:                                               ; preds = %56, %53
  %58 = bitcast %"struct.WTF::KeyValuePair.464"* %40 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %58, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %25, i64 %39, i32 1
  %60 = bitcast %"class.blink::Member.348"* %59 to i64*
  store atomic i64 0, i64* %60 monotonic, align 8
  br label %61

61:                                               ; preds = %57, %38, %38
  %62 = add nuw nsw i64 %39, 1
  %63 = icmp eq i64 %62, %37
  br i1 %63, label %64, label %38

64:                                               ; preds = %61, %34
  %65 = bitcast %"struct.WTF::KeyValuePair.464"* %25 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %65) #9
  br label %66

66:                                               ; preds = %32, %64
  %67 = getelementptr inbounds %"class.WTF::HashTable.462", %"class.WTF::HashTable.462"* %0, i64 0, i32 3
  %68 = load i32, i32* %67, align 8
  %69 = and i32 %68, -2147483648
  store i32 %69, i32* %67, align 8
  ret %"struct.WTF::KeyValuePair.464"* %16

70:                                               ; preds = %9, %169
  %71 = phi i32 [ %7, %9 ], [ %170, %169 ]
  %72 = phi %"struct.WTF::KeyValuePair.464"* [ %13, %9 ], [ %171, %169 ]
  %73 = phi %"struct.WTF::KeyValuePair.464"* [ null, %9 ], [ %172, %169 ]
  %74 = phi i32 [ 0, %9 ], [ %173, %169 ]
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %72, i64 %75
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %76, i64 0, i32 0, i32 0, i32 0, i32 0
  %78 = bitcast %"struct.WTF::KeyValuePair.464"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = inttoptr i64 %79 to %"class.WTF::StringImpl"*
  switch i64 %79, label %81 [
    i64 -1, label %169
    i64 0, label %169
  ]

81:                                               ; preds = %70
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = lshr i32 %83, 8
  %85 = and i32 %84, %11
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %1, i64 %86
  %88 = ptrtoint %"struct.WTF::KeyValuePair.464"* %87 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %87, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %108, label %92

92:                                               ; preds = %81
  %93 = xor i32 %84, -1
  %94 = lshr i32 %83, 31
  %95 = add nsw i32 %94, %93
  %96 = shl i32 %95, 12
  %97 = xor i32 %96, %95
  %98 = lshr i32 %97, 7
  %99 = xor i32 %98, %97
  %100 = shl i32 %99, 2
  %101 = xor i32 %100, %99
  %102 = lshr i32 %101, 20
  %103 = xor i32 %102, %101
  %104 = or i32 %103, 1
  %105 = zext i32 %104 to i64
  br label %114

106:                                              ; preds = %126
  %107 = ptrtoint %"struct.WTF::KeyValuePair.464"* %132 to i64
  br label %108

108:                                              ; preds = %106, %81
  %109 = phi i64 [ %88, %81 ], [ %107, %106 ]
  %110 = phi %"struct.WTF::KeyValuePair.464"* [ null, %81 ], [ %127, %106 ]
  %111 = icmp eq %"struct.WTF::KeyValuePair.464"* %110, null
  %112 = ptrtoint %"struct.WTF::KeyValuePair.464"* %110 to i64
  %113 = select i1 %111, i64 %109, i64 %112
  br label %137

114:                                              ; preds = %126, %92
  %115 = phi %"struct.WTF::KeyValuePair.464"* [ null, %92 ], [ %127, %126 ]
  %116 = phi i64 [ %88, %92 ], [ %133, %126 ]
  %117 = phi %"struct.WTF::KeyValuePair.464"* [ %87, %92 ], [ %132, %126 ]
  %118 = phi i64 [ %86, %92 ], [ %131, %126 ]
  %119 = phi i64 [ 0, %92 ], [ %129, %126 ]
  %120 = bitcast %"struct.WTF::KeyValuePair.464"* %117 to i8**
  %121 = load i8*, i8** %120, align 8
  %122 = icmp eq i8* %121, inttoptr (i64 -1 to i8*)
  br i1 %122, label %126, label %123

123:                                              ; preds = %114
  %124 = bitcast i8* %121 to %"class.WTF::StringImpl"*
  %125 = icmp eq %"class.WTF::StringImpl"* %80, %124
  br i1 %125, label %137, label %126

126:                                              ; preds = %123, %114
  %127 = phi %"struct.WTF::KeyValuePair.464"* [ %115, %123 ], [ %117, %114 ]
  %128 = icmp eq i64 %119, 0
  %129 = select i1 %128, i64 %105, i64 %119
  %130 = add i64 %129, %118
  %131 = and i64 %130, %12
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %1, i64 %131
  %133 = ptrtoint %"struct.WTF::KeyValuePair.464"* %132 to i64
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %132, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %106, label %114

137:                                              ; preds = %123, %108
  %138 = phi i64 [ %113, %108 ], [ %116, %123 ]
  %139 = inttoptr i64 %138 to %"struct.WTF::KeyValuePair.464"*
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %139, i64 0, i32 0, i32 0, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #9
  br label %156

156:                                              ; preds = %137, %152, %155
  %157 = load i64, i64* %78, align 8
  %158 = inttoptr i64 %138 to i64*
  store i64 %157, i64* %158, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %77, align 8
  %159 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %139, i64 0, i32 1
  %160 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %72, i64 %75, i32 1
  %161 = bitcast %"class.blink::Member.348"* %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = bitcast %"class.blink::Member.348"* %159 to i64*
  store i64 %162, i64* %163, align 8
  %164 = load %"struct.WTF::KeyValuePair.464"*, %"struct.WTF::KeyValuePair.464"** %10, align 8
  %165 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %164, i64 %75
  %166 = icmp eq %"struct.WTF::KeyValuePair.464"* %165, %3
  %167 = select i1 %166, %"struct.WTF::KeyValuePair.464"* %139, %"struct.WTF::KeyValuePair.464"* %73
  %168 = load i32, i32* %6, align 8
  br label %169

169:                                              ; preds = %70, %70, %156
  %170 = phi i32 [ %71, %70 ], [ %168, %156 ], [ %71, %70 ]
  %171 = phi %"struct.WTF::KeyValuePair.464"* [ %72, %70 ], [ %164, %156 ], [ %72, %70 ]
  %172 = phi %"struct.WTF::KeyValuePair.464"* [ %73, %70 ], [ %167, %156 ], [ %73, %70 ]
  %173 = add i32 %74, 1
  %174 = icmp eq i32 %173, %170
  br i1 %174, label %14, label %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.1462"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_18StyleRuleKeyframesEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.13, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_12AtomicStringENS1_12KeyValuePairIS3_NS_6MemberINS_18StyleRuleKeyframesEEEEENS1_24KeyValuePairKeyExtractorENS1_16AtomicStringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.1462"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.1462"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_12AtomicStringENS1_12KeyValuePairIS3_NS_6MemberINS_18StyleRuleKeyframesEEEEENS1_24KeyValuePairKeyExtractorENS1_16AtomicStringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_18StyleRuleKeyframesEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_18StyleRuleKeyframesEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_18StyleRuleKeyframesEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([426 x i8], [426 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS4_NS1_6MemberINS1_18StyleRuleKeyframesEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_18StyleRuleKeyframesEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_18StyleRuleKeyframesEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #9
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS3_N5blink6MemberINS5_18StyleRuleKeyframesEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #9
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_12AtomicStringENS3_12KeyValuePairIS5_NS_6MemberINS_18StyleRuleKeyframesEEEEENS3_24KeyValuePairKeyExtractorENS3_16AtomicStringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #2 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.464"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %22, i64 %25, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  switch i64 %29, label %30 [
    i64 -1, label %43
    i64 0, label %43
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %42, %39, %24, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberINS_18StyleRuleKeyframesEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS3_N5blink6MemberINS5_18StyleRuleKeyframesEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.464"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #9
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %63, %20
  ret void

33:                                               ; preds = %63, %30
  %34 = phi i64 [ 0, %30 ], [ %64, %63 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.464"* %35 to i64*
  br i1 %28, label %37, label %50

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %63
    i64 0, label %63
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.348"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %63, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to %"class.blink::StyleRuleKeyframes"*
  %46 = getelementptr inbounds %"class.blink::StyleRuleKeyframes", %"class.blink::StyleRuleKeyframes"* %45, i64 0, i32 0, i32 0
  %47 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %48 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, i64 5
  %49 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %48, align 8
  tail call void %49(%"class.blink::Visitor"* %0, i8* %46, i8* %46, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18StyleRuleKeyframesEE5TraceEPNS_7VisitorEPKv) #9
  br label %63

50:                                               ; preds = %33
  %51 = load i64, i64* %36, align 8
  switch i64 %51, label %52 [
    i64 -1, label %63
    i64 0, label %63
  ]

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.464", %"struct.WTF::KeyValuePair.464"* %3, i64 %34, i32 1
  %54 = bitcast %"class.blink::Member.348"* %53 to i64*
  %55 = load atomic i64, i64* %54 monotonic, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %63, label %57

57:                                               ; preds = %52
  %58 = inttoptr i64 %55 to %"class.blink::StyleRuleKeyframes"*
  %59 = getelementptr inbounds %"class.blink::StyleRuleKeyframes", %"class.blink::StyleRuleKeyframes"* %58, i64 0, i32 0, i32 0
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %61 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %60, i64 5
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %61, align 8
  tail call void %62(%"class.blink::Visitor"* %0, i8* %59, i8* %59, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18StyleRuleKeyframesEE5TraceEPNS_7VisitorEPKv) #9
  br label %63

63:                                               ; preds = %50, %50, %37, %37, %57, %52, %39, %44
  %64 = add nuw nsw i64 %34, 1
  %65 = icmp eq i64 %64, %23
  br i1 %65, label %32, label %33
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15CounterStyleMapEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CounterStyleMap"*
  tail call void @_ZNK5blink15CounterStyleMap5TraceEPNS_7VisitorE(%"class.blink::CounterStyleMap"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink15CounterStyleMap5TraceEPNS_7VisitorE(%"class.blink::CounterStyleMap"*, %"class.blink::Visitor"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEELj0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast i8* %1 to i8**
  %7 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %0, i8** %6) #9
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.484"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.484", %"class.blink::Member.484"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.484"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19ScopedStyleResolver10RuleSubSetEE5TraceEPNS_7VisitorEPKv) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19ScopedStyleResolver10RuleSubSetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv) #9
  br label %12

12:                                               ; preds = %6, %2
  %13 = getelementptr inbounds i8, i8* %1, i64 16
  %14 = bitcast i8* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %0, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7RuleSetEE5TraceEPNS_7VisitorEPKv) #9
  br label %23

23:                                               ; preds = %12, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_7RuleSetEEEPhm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_7RuleSetEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_7RuleSetEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_7RuleSetEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7RuleSetEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7RuleSetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::RuleSet"*
  tail call void @_ZNK5blink7RuleSet5TraceEPNS_7VisitorE(%"class.blink::RuleSet"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_7RuleSetEE8FinalizeEPv(i8*) #2 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 528
  %3 = bitcast i8* %2 to %"class.blink::MediaQuerySetResult"**
  %4 = load %"class.blink::MediaQuerySetResult"*, %"class.blink::MediaQuerySetResult"** %3, align 8
  %5 = icmp eq %"class.blink::MediaQuerySetResult"* %4, null
  br i1 %5, label %63, label %6, !prof !5

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::MediaQuerySetResult"* %4 to i8*
  %8 = getelementptr inbounds i8, i8* %0, i64 540
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %61, label %12, !prof !2

12:                                               ; preds = %6
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %4, i64 %13
  br label %15

15:                                               ; preds = %55, %12
  %16 = phi %"class.blink::MediaQuerySetResult"* [ %56, %55 ], [ %4, %12 ]
  %17 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %17, align 8
  %19 = icmp eq %"class.blink::MediaQuerySet"* %18, null
  br i1 %19, label %55, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #9
  %22 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %55

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %18, i64 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::Vector.401", %"class.WTF::Vector.401"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::unique_ptr.404"*, %"class.std::__1::unique_ptr.404"** %27, align 8
  %29 = icmp eq %"class.std::__1::unique_ptr.404"* %28, null
  br i1 %29, label %53, label %30, !prof !5

30:                                               ; preds = %25
  %31 = bitcast %"class.std::__1::unique_ptr.404"* %28 to i8*
  %32 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %18, i64 0, i32 1, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %51, label %35, !prof !2

35:                                               ; preds = %30
  %36 = zext i32 %33 to i64
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.404", %"class.std::__1::unique_ptr.404"* %28, i64 %36
  br label %38

38:                                               ; preds = %45, %35
  %39 = phi %"class.std::__1::unique_ptr.404"* [ %46, %45 ], [ %28, %35 ]
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.404", %"class.std::__1::unique_ptr.404"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::MediaQuery"*, %"class.blink::MediaQuery"** %40, align 8
  store %"class.blink::MediaQuery"* null, %"class.blink::MediaQuery"** %40, align 8
  %42 = icmp eq %"class.blink::MediaQuery"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  tail call void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"* nonnull %41) #9
  %44 = bitcast %"class.blink::MediaQuery"* %41 to i8*
  tail call void @free(i8* %44) #9
  br label %45

45:                                               ; preds = %43, %38
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.404", %"class.std::__1::unique_ptr.404"* %39, i64 1
  %47 = icmp eq %"class.std::__1::unique_ptr.404"* %46, %37
  br i1 %47, label %48, label %38

48:                                               ; preds = %45
  store i32 0, i32* %32, align 4
  %49 = bitcast %"class.WTF::Vector.401"* %26 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %48, %30
  %52 = phi i8* [ %50, %48 ], [ %31, %30 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %52) #9
  br label %53

53:                                               ; preds = %51, %25
  %54 = bitcast %"class.blink::MediaQuerySet"* %18 to i8*
  tail call void @free(i8* %54) #9
  br label %55

55:                                               ; preds = %15, %20, %53
  %56 = getelementptr inbounds %"class.blink::MediaQuerySetResult", %"class.blink::MediaQuerySetResult"* %16, i64 1
  %57 = icmp eq %"class.blink::MediaQuerySetResult"* %56, %14
  br i1 %57, label %58, label %15

58:                                               ; preds = %55
  store i32 0, i32* %9, align 4
  %59 = bitcast i8* %2 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %58, %6
  %62 = phi i8* [ %60, %58 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %62) #9
  store %"class.blink::MediaQuerySetResult"* null, %"class.blink::MediaQuerySetResult"** %3, align 8
  br label %63

63:                                               ; preds = %1, %61
  %64 = getelementptr inbounds i8, i8* %0, i64 240
  %65 = bitcast i8* %64 to %"class.blink::RuleFeatureSet"*
  tail call void @_ZN5blink14RuleFeatureSetD1Ev(%"class.blink::RuleFeatureSet"* %65) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_7RuleSetEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink7RuleSet5TraceEPNS_7VisitorE(%"class.blink::RuleSet"*, %"class.blink::Visitor"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink14RuleFeatureSetD1Ev(%"class.blink::RuleFeatureSet"*) unnamed_addr #6

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare void @_ZN5blink14RuleFeatureSetC1Ev(%"class.blink::RuleFeatureSet"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEELj0EEEEEPhm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEELj0EEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEELj0EEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEELj0EEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([123 x i8], [123 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10HeapVectorINS1_6MemberINS1_19ScopedStyleResolver10RuleSubSetEEELj0EEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEELj0EEEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_19ScopedStyleResolver10RuleSubSetEEEPhm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_19ScopedStyleResolver10RuleSubSetEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_19ScopedStyleResolver10RuleSubSetEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_19ScopedStyleResolver10RuleSubSetEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19ScopedStyleResolver10RuleSubSetEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_19ScopedStyleResolver10RuleSubSetEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_19ScopedStyleResolver10RuleSubSetEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS4_EEvOT_(%"class.WTF::Vector.481"*, %"class.blink::ScopedStyleResolver::RuleSubSet"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.481", %"class.WTF::Vector.481"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.481", %"class.WTF::Vector.481"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_19ScopedStyleResolver10RuleSubSetEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.481"* %0, i32 %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector.481", %"class.WTF::Vector.481"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.484"*, %"class.blink::Member.484"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.484", %"class.blink::Member.484"* %16, i64 %18
  %20 = bitcast %"class.blink::ScopedStyleResolver::RuleSubSet"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.484"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #9
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_19ScopedStyleResolver10RuleSubSetEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.481"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.481", %"class.WTF::Vector.481"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.481", %"class.WTF::Vector.481"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.484"*, %"class.blink::Member.484"** %8, align 8
  %10 = icmp eq %"class.blink::Member.484"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEEEmm(i64 %11) #9
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1478"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %14) #9
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1478"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.481"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1478", %"class.blink::HeapVectorBacking.1478"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.484"*, %"class.blink::Member.484"** %8, align 8
  %26 = icmp eq %"class.blink::Member.484"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.484"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #9
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_19ScopedStyleResolver10RuleSubSetEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.481"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_19ScopedStyleResolver10RuleSubSetEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.481"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.481"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.481", %"class.WTF::Vector.481"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.481"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.481", %"class.WTF::Vector.481"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #9
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #9
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEEEmm(i64 %14) #9
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1478"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1478"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.481", %"class.WTF::Vector.481"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.484"*, %"class.blink::Member.484"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.481", %"class.WTF::Vector.481"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1478"* %17, null
  %23 = icmp ne %"class.blink::Member.484"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.484"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !5

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.481"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1478", %"class.blink::HeapVectorBacking.1478"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #9
  %33 = bitcast %"class.WTF::Vector.481"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #9
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #9
  %42 = bitcast %"class.WTF::Vector.481"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.481", %"class.WTF::Vector.481"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1478", %"class.blink::HeapVectorBacking.1478"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1478"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.3, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1478"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1478"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([203 x i8], [203 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_19ScopedStyleResolver10RuleSubSetEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_19ScopedStyleResolver10RuleSubSetEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSStyleSheet"*
  tail call void @_ZNK5blink13CSSStyleSheet5TraceEPNS_7VisitorE(%"class.blink::CSSStyleSheet"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink13CSSStyleSheet5TraceEPNS_7VisitorE(%"class.blink::CSSStyleSheet"*, %"class.blink::Visitor"*) unnamed_addr #3

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{i32 24, i32 33}
!5 = !{!"branch_weights", i32 2000, i32 1}
