; ModuleID = 'gen/components/metrics/public/mojom/call_stack_profile_collector.mojom-test-utils.cc'
source_filename = "gen/components/metrics/public/mojom/call_stack_profile_collector.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.metrics::mojom::CallStackProfileCollectorAsyncWaiter" = type { %"class.metrics::mojom::CallStackProfileCollector"* }
%"class.metrics::mojom::CallStackProfileCollector" = type { i32 (...)** }
%"class.metrics::mojom::CallStackProfileCollectorInterceptorForTesting" = type { %"class.metrics::mojom::CallStackProfileCollector" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.metrics::mojom::SampledProfile"* }
%"class.metrics::mojom::SampledProfile" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

$_ZN7metrics5mojom25CallStackProfileCollectorD2Ev = comdat any

$_ZN7metrics5mojom46CallStackProfileCollectorInterceptorForTestingD0Ev = comdat any

@_ZTVN7metrics5mojom46CallStackProfileCollectorInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.metrics::mojom::CallStackProfileCollector"*)* @_ZN7metrics5mojom25CallStackProfileCollectorD2Ev to i8*), i8* bitcast (void (%"class.metrics::mojom::CallStackProfileCollectorInterceptorForTesting"*)* @_ZN7metrics5mojom46CallStackProfileCollectorInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.metrics::mojom::CallStackProfileCollectorInterceptorForTesting"*, i64, %"class.mojo::StructPtr"*)* @_ZN7metrics5mojom46CallStackProfileCollectorInterceptorForTesting7CollectEN4base9TimeTicksEN4mojo9StructPtrINS0_14SampledProfileEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN7metrics5mojom36CallStackProfileCollectorAsyncWaiterC1EPNS0_25CallStackProfileCollectorE = hidden unnamed_addr alias void (%"class.metrics::mojom::CallStackProfileCollectorAsyncWaiter"*, %"class.metrics::mojom::CallStackProfileCollector"*), void (%"class.metrics::mojom::CallStackProfileCollectorAsyncWaiter"*, %"class.metrics::mojom::CallStackProfileCollector"*)* @_ZN7metrics5mojom36CallStackProfileCollectorAsyncWaiterC2EPNS0_25CallStackProfileCollectorE
@_ZN7metrics5mojom36CallStackProfileCollectorAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.metrics::mojom::CallStackProfileCollectorAsyncWaiter"*), void (%"class.metrics::mojom::CallStackProfileCollectorAsyncWaiter"*)* @_ZN7metrics5mojom36CallStackProfileCollectorAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7metrics5mojom46CallStackProfileCollectorInterceptorForTesting7CollectEN4base9TimeTicksEN4mojo9StructPtrINS0_14SampledProfileEEE(%"class.metrics::mojom::CallStackProfileCollectorInterceptorForTesting"*, i64, %"class.mojo::StructPtr"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::StructPtr", align 8
  %5 = bitcast %"class.metrics::mojom::CallStackProfileCollectorInterceptorForTesting"* %0 to %"class.metrics::mojom::CallStackProfileCollector"* (%"class.metrics::mojom::CallStackProfileCollectorInterceptorForTesting"*)***
  %6 = load %"class.metrics::mojom::CallStackProfileCollector"* (%"class.metrics::mojom::CallStackProfileCollectorInterceptorForTesting"*)**, %"class.metrics::mojom::CallStackProfileCollector"* (%"class.metrics::mojom::CallStackProfileCollectorInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.metrics::mojom::CallStackProfileCollector"* (%"class.metrics::mojom::CallStackProfileCollectorInterceptorForTesting"*)*, %"class.metrics::mojom::CallStackProfileCollector"* (%"class.metrics::mojom::CallStackProfileCollectorInterceptorForTesting"*)** %6, i64 3
  %8 = load %"class.metrics::mojom::CallStackProfileCollector"* (%"class.metrics::mojom::CallStackProfileCollectorInterceptorForTesting"*)*, %"class.metrics::mojom::CallStackProfileCollector"* (%"class.metrics::mojom::CallStackProfileCollectorInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.metrics::mojom::CallStackProfileCollector"* %8(%"class.metrics::mojom::CallStackProfileCollectorInterceptorForTesting"* %0) #7
  %10 = bitcast %"class.mojo::StructPtr"* %4 to i64*
  %11 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  store i64 0, i64* %12, align 8
  %14 = bitcast %"class.metrics::mojom::CallStackProfileCollector"* %9 to void (%"class.metrics::mojom::CallStackProfileCollector"*, i64, %"class.mojo::StructPtr"*)***
  %15 = load void (%"class.metrics::mojom::CallStackProfileCollector"*, i64, %"class.mojo::StructPtr"*)**, void (%"class.metrics::mojom::CallStackProfileCollector"*, i64, %"class.mojo::StructPtr"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.metrics::mojom::CallStackProfileCollector"*, i64, %"class.mojo::StructPtr"*)*, void (%"class.metrics::mojom::CallStackProfileCollector"*, i64, %"class.mojo::StructPtr"*)** %15, i64 2
  %17 = load void (%"class.metrics::mojom::CallStackProfileCollector"*, i64, %"class.mojo::StructPtr"*)*, void (%"class.metrics::mojom::CallStackProfileCollector"*, i64, %"class.mojo::StructPtr"*)** %16, align 8
  call void %17(%"class.metrics::mojom::CallStackProfileCollector"* %9, i64 %1, %"class.mojo::StructPtr"* nonnull %4) #7
  %18 = load %"class.metrics::mojom::SampledProfile"*, %"class.metrics::mojom::SampledProfile"** %11, align 8
  store %"class.metrics::mojom::SampledProfile"* null, %"class.metrics::mojom::SampledProfile"** %11, align 8
  %19 = icmp eq %"class.metrics::mojom::SampledProfile"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %3
  call void @_ZN7metrics5mojom14SampledProfileD1Ev(%"class.metrics::mojom::SampledProfile"* nonnull %18) #7
  %21 = bitcast %"class.metrics::mojom::SampledProfile"* %18 to i8*
  call void @_ZdlPv(i8* %21) #8
  br label %22

22:                                               ; preds = %3, %20
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7metrics5mojom36CallStackProfileCollectorAsyncWaiterC2EPNS0_25CallStackProfileCollectorE(%"class.metrics::mojom::CallStackProfileCollectorAsyncWaiter"* nocapture, %"class.metrics::mojom::CallStackProfileCollector"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.metrics::mojom::CallStackProfileCollectorAsyncWaiter", %"class.metrics::mojom::CallStackProfileCollectorAsyncWaiter"* %0, i64 0, i32 0
  store %"class.metrics::mojom::CallStackProfileCollector"* %1, %"class.metrics::mojom::CallStackProfileCollector"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7metrics5mojom36CallStackProfileCollectorAsyncWaiterD2Ev(%"class.metrics::mojom::CallStackProfileCollectorAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7metrics5mojom25CallStackProfileCollectorD2Ev(%"class.metrics::mojom::CallStackProfileCollector"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7metrics5mojom46CallStackProfileCollectorInterceptorForTestingD0Ev(%"class.metrics::mojom::CallStackProfileCollectorInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN7metrics5mojom14SampledProfileD1Ev(%"class.metrics::mojom::SampledProfile"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
