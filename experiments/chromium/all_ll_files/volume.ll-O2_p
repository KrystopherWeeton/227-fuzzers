; ModuleID = '../../third_party/unrar/src/volume.cpp'
source_filename = "../../third_party/unrar/src/volume.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%class.Archive = type <{ %class.File, %class.CryptData, %class.ComprDataIO, i8, [7 x i8], %class.RAROptions*, %class.RarTime, i32, i32, i8, [7 x i8], %class.QuickOpen, i8, [7 x i8], i64, %struct.BaseBlock, %struct.MarkHeader, %struct.MainHeader, %struct.CryptHeader, [4 x i8], %struct.FileHeader, %struct.EndArcHeader, %struct.SubBlockHeader, [4 x i8], %struct.FileHeader, %struct.CommentHeader, %struct.ProtectHeader, %struct.UnixOwnersHeader, %struct.EAHeader, %struct.StreamHeader, [4 x i8], i64, i64, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], i64, i8, i8, [16 x i8], i8, i8, i32, i64, i64, i64, i8, [3 x i8], [2048 x i32], [4 x i8] }>
%class.File = type { i32 (...)**, i64, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, [2048 x i32], i32, i64 }
%class.CryptData = type { [4 x %"struct.CryptData::KDF3CacheItem"], i32, [4 x %"struct.CryptData::KDF5CacheItem"], i32, i32, %class.Rijndael, [256 x i32], [256 x i8], [4 x i32], [3 x i8], [4 x i16] }
%"struct.CryptData::KDF3CacheItem" = type { %class.SecPassword, [8 x i8], [16 x i8], [16 x i8], i8, [3 x i8] }
%class.SecPassword = type <{ [128 x i32], i8, i8, [2 x i8] }>
%"struct.CryptData::KDF5CacheItem" = type { %class.SecPassword, [16 x i8], [32 x i8], i32, [32 x i8], [32 x i8] }
%class.Rijndael = type { i8, i32, [16 x i8], [15 x [4 x [4 x i8]]] }
%class.ComprDataIO = type <{ i8, [7 x i8], i64, i8*, i8, [7 x i8], i64, i8*, i64, i8*, i64, i8, i8, i8, i8, [4 x i8], %class.File*, %class.File*, %class.CmdAdd*, %struct.FileHeader*, i64*, %class.CryptData*, %class.CryptData*, i32, i32, i8, i8, i8, [5 x i8], i64, i64, i64, i64, i64, i64, i64, %class.DataHash, %class.DataHash, %class.DataHash, i8, i8, [6 x i8] }>
%class.CmdAdd = type opaque
%class.DataHash = type <{ i32, i32, %struct.blake2sp_state*, %class.ThreadPool*, i32, [4 x i8] }>
%struct.blake2sp_state = type <{ [8 x %struct.blake2s_state], %struct.blake2s_state, [512 x i8], i64, %class.ThreadPool*, i32, [4 x i8] }>
%struct.blake2s_state = type <{ [240 x i8], i8*, i32*, i32*, i32*, i64, i8, [7 x i8] }>
%class.ThreadPool = type { i32, [64 x i64], i32, i32, [64 x %"struct.ThreadPool::QueueEntry"], i32, i32, i8, i32, %union.pthread_cond_t, %union.pthread_mutex_t, i8, %union.pthread_cond_t, %union.pthread_mutex_t, %union.pthread_mutex_t }
%"struct.ThreadPool::QueueEntry" = type { void (i8*)*, i8* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1, %union.anon.2, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1 = type { i64 }
%union.anon.2 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.RAROptions = type <{ i32, i32, i8, i8, i8, [5 x i8], i64, [2048 x i32], [2048 x i32], i32, i8, [3 x i8], [2048 x i32], [2048 x i32], i32, i32, i32, i32, [2048 x i32], %class.SecPassword, i8, i8, [2 x i8], [2048 x i32], i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, [4 x i8], i64, %class.Array.4, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, [128 x i32], [128 x i32], i8, i8, i8, i8, i8, [3 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], i64, i64, i8, i8, i8, i8, [16 x %struct.FilterMode], [2048 x i32], i32, i32, i32, i32, i32, i32, i8, [3 x i8], [2048 x i32], i32, [4 x i8] }>
%class.Array.4 = type <{ i64*, i64, i64, i64, i8, [7 x i8] }>
%struct.FilterMode = type { i32, i32, i32 }
%class.RarTime = type { i64 }
%class.QuickOpen = type <{ %class.Archive*, i8, [7 x i8], %struct.QuickOpenItem*, %struct.QuickOpenItem*, i8*, i64, %class.CryptData, i8, [7 x i8], i64, i64, i64, i64, i64, i64, %class.Array, i64, i64, i8, [7 x i8] }>
%struct.QuickOpenItem = type { i8*, i64, i64, %struct.QuickOpenItem* }
%class.Array = type <{ i8*, i64, i64, i64, i8, [7 x i8] }>
%struct.BaseBlock = type { i32, i32, i32, i32, i8 }
%struct.MarkHeader = type { [8 x i8], i32 }
%struct.MainHeader = type { %struct.BaseBlock, i16, i32, i8, i8, i8, i64, i64, i64, i64 }
%struct.CryptHeader = type { %struct.BaseBlock, i8, i32, [16 x i8], [8 x i8] }
%struct.EndArcHeader = type { %struct.BaseBlock, i32, i32, i8, i8, i8, i8 }
%struct.SubBlockHeader = type <{ %struct.BlockHeader, i16, i8, i8 }>
%struct.BlockHeader = type { %struct.BaseBlock, i32 }
%struct.FileHeader = type { %struct.BlockHeader, i8, i32, i8, %union.anon, [2048 x i32], %class.Array, %class.RarTime, %class.RarTime, %class.RarTime, i64, i64, i64, %struct.HashValue, i32, i8, i8, i8, i8, i32, i8, [16 x i8], [16 x i8], i8, [8 x i8], i8, [32 x i8], i32, i8, i8, i8, i8, i64, i8, i8, i8, i32, i32, [2048 x i32], i8, i8, i8, i8, [256 x i8], [256 x i8], i32, i32 }
%union.anon = type { i32 }
%struct.HashValue = type { i32, %union.anon.0 }
%union.anon.0 = type { i32, [28 x i8] }
%struct.CommentHeader = type <{ %struct.BaseBlock, i16, i8, i8, i16, [2 x i8] }>
%struct.ProtectHeader = type { %struct.BlockHeader, i8, i16, i32, [8 x i8] }
%struct.UnixOwnersHeader = type { %struct.SubBlockHeader.base, i16, i16, [256 x i8], [256 x i8] }
%struct.SubBlockHeader.base = type <{ %struct.BlockHeader, i16, i8 }>
%struct.EAHeader = type { %struct.SubBlockHeader.base, i32, i8, i8, i32 }
%struct.StreamHeader = type <{ %struct.SubBlockHeader.base, i8, i32, i8, i8, [2 x i8], i32, i16, [260 x i8], [2 x i8] }>
%class.uiMsgStore = type <{ [8 x i32*], [8 x i32], i32, i32, i32, [4 x i8] }>

@.str = private unnamed_addr constant [22 x i32] [i32 10, i32 10, i32 84, i32 101, i32 115, i32 116, i32 105, i32 110, i32 103, i32 32, i32 97, i32 114, i32 99, i32 104, i32 105, i32 118, i32 101, i32 32, i32 37, i32 115, i32 10, i32 0], align 4
@.str.1 = private unnamed_addr constant [22 x i32] [i32 10, i32 10, i32 69, i32 120, i32 116, i32 114, i32 97, i32 99, i32 116, i32 105, i32 110, i32 103, i32 32, i32 102, i32 114, i32 111, i32 109, i32 32, i32 37, i32 115, i32 10, i32 0], align 4
@.str.2 = private unnamed_addr constant [19 x i32] [i32 10, i32 46, i32 46, i32 46, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 37, i32 45, i32 53, i32 54, i32 115, i32 0], align 4
@.str.4 = private unnamed_addr constant [1 x i32] zeroinitializer, align 4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z12MergeArchiveR7ArchiveP11ComprDataIObw(%class.Archive* dereferenceable(65336), %class.ComprDataIO*, i1 zeroext, i32 signext) local_unnamed_addr #0 {
  %5 = alloca %class.uiMsgStore, align 8
  %6 = alloca %class.uiMsgStore, align 8
  %7 = alloca [2048 x i32], align 16
  %8 = alloca [2048 x i32], align 16
  %9 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 5
  %10 = load %class.RAROptions*, %class.RAROptions** %9, align 8
  %11 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 8
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 3
  %14 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24
  %15 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20
  %16 = select i1 %13, %struct.FileHeader* %14, %struct.FileHeader* %15
  %17 = or i32 %12, 1
  %18 = icmp eq i32 %17, 3
  br i1 %18, label %21, label %19

19:                                               ; preds = %4
  %20 = icmp ne %class.ComprDataIO* %1, null
  br label %64

21:                                               ; preds = %4
  %22 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %16, i64 0, i32 16
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = icmp ne i8 %23, 0
  %25 = icmp ne %class.ComprDataIO* %1, null
  %26 = and i1 %25, %24
  br i1 %26, label %27, label %64

27:                                               ; preds = %21
  %28 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 33
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 3
  br i1 %30, label %39, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %16, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %33, 19
  br i1 %34, label %35, label %64

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %16, i64 0, i32 13, i32 1, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, -1
  br i1 %38, label %64, label %39

39:                                               ; preds = %35, %27
  %40 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %1, i64 0, i32 36
  %41 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %16, i64 0, i32 13
  %42 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %16, i64 0, i32 25
  %43 = load i8, i8* %42, align 2, !range !2
  %44 = icmp eq i8 %43, 0
  %45 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %16, i64 0, i32 26, i64 0
  %46 = select i1 %44, i8* null, i8* %45
  %47 = tail call zeroext i1 @_ZN8DataHash3CmpEP9HashValuePh(%class.DataHash* %40, %struct.HashValue* %41, i8* %46) #3
  br i1 %47, label %64, label %48

48:                                               ; preds = %39
  %49 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %50 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %16, i64 0, i32 5, i64 0
  %51 = bitcast %class.uiMsgStore* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %51) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 112, i1 false) #3
  %52 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 0
  %53 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 1
  %54 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 2
  %55 = bitcast i32** %54 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.4, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.4, i64 0, i64 0)>, <2 x i32*>* %55, align 8
  %56 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 4
  %57 = bitcast i32** %56 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.4, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.4, i64 0, i64 0)>, <2 x i32*>* %57, align 8
  %58 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 6
  %59 = bitcast i32** %58 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.4, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.4, i64 0, i64 0)>, <2 x i32*>* %59, align 8
  %60 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 1, i64 0
  %61 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 4
  %62 = bitcast i32* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 40, i1 false) #3
  store i32 5, i32* %61, align 8
  %63 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 2
  store i32* %49, i32** %52, align 8
  store i32 2, i32* %63, align 8
  store i32* %50, i32** %53, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %6) #3
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %51) #3
  br label %64

64:                                               ; preds = %35, %21, %19, %39, %48, %31
  %65 = phi i1 [ %20, %19 ], [ true, %35 ], [ true, %39 ], [ true, %48 ], [ true, %31 ], [ %25, %21 ]
  %66 = phi i1 [ false, %19 ], [ true, %35 ], [ true, %39 ], [ true, %48 ], [ true, %31 ], [ %24, %21 ]
  %67 = bitcast %class.Archive* %0 to i64 (%class.Archive*)***
  %68 = load i64 (%class.Archive*)**, i64 (%class.Archive*)*** %67, align 8
  %69 = getelementptr inbounds i64 (%class.Archive*)*, i64 (%class.Archive*)** %68, i64 6
  %70 = load i64 (%class.Archive*)*, i64 (%class.Archive*)** %69, align 8
  %71 = call i64 %70(%class.Archive* %0) #3
  br i1 %65, label %72, label %78

72:                                               ; preds = %64
  %73 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0
  %74 = call i64 @_ZN4File10FileLengthEv(%class.File* %73) #3
  %75 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %1, i64 0, i32 34
  %76 = load i64, i64* %75, align 8
  %77 = add nsw i64 %76, %74
  store i64 %77, i64* %75, align 8
  br label %78

78:                                               ; preds = %72, %64
  %79 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0
  %80 = bitcast %class.Archive* %0 to i1 (%class.File*)***
  %81 = load i1 (%class.File*)**, i1 (%class.File*)*** %80, align 8
  %82 = getelementptr inbounds i1 (%class.File*)*, i1 (%class.File*)** %81, i64 3
  %83 = load i1 (%class.File*)*, i1 (%class.File*)** %82, align 8
  %84 = call zeroext i1 %83(%class.File* %79) #3
  %85 = bitcast [2048 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %85) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %85, i8 -86, i64 8192, i1 false)
  %86 = getelementptr inbounds [2048 x i32], [2048 x i32]* %7, i64 0, i64 0
  %87 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %86, i32* %87, i64 2048) #3
  %88 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 40
  %89 = load i8, i8* %88, align 2, !range !2
  %90 = icmp eq i8 %89, 0
  call void @_Z14NextVolumeNamePwjb(i32* nonnull %86, i32 2048, i1 zeroext %90) #3
  %91 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %10, i64 0, i32 64
  %92 = load i8, i8* %91, align 1, !range !2
  %93 = icmp eq i8 %92, 0
  %94 = select i1 %93, i32 0, i32 4
  %95 = bitcast %class.Archive* %0 to i1 (%class.Archive*, i32*, i32)***
  %96 = load i1 (%class.Archive*, i32*, i32)**, i1 (%class.Archive*, i32*, i32)*** %95, align 8
  %97 = getelementptr inbounds i1 (%class.Archive*, i32*, i32)*, i1 (%class.Archive*, i32*, i32)** %96, i64 2
  %98 = load i1 (%class.Archive*, i32*, i32)*, i1 (%class.Archive*, i32*, i32)** %97, align 8
  %99 = call zeroext i1 %98(%class.Archive* %0, i32* nonnull %86, i32 %94) #3
  br i1 %99, label %154, label %100

100:                                              ; preds = %78
  %101 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %1, i64 0, i32 35
  %102 = bitcast [2048 x i32]* %8 to i8*
  %103 = getelementptr inbounds [2048 x i32], [2048 x i32]* %8, i64 0, i64 0
  br label %104

104:                                              ; preds = %100, %120
  %105 = phi i8 [ 0, %100 ], [ %119, %120 ]
  %106 = phi i1 [ false, %100 ], [ true, %120 ]
  br i1 %65, label %107, label %108

107:                                              ; preds = %104
  store i64 0, i64* %101, align 8
  br label %108

108:                                              ; preds = %107, %104
  %109 = and i8 %105, 1
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %118

111:                                              ; preds = %108
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %102) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %102, i8 -86, i64 8192, i1 false)
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %103, i32* %87, i64 2048) #3
  call void @_Z14NextVolumeNamePwjb(i32* nonnull %103, i32 2048, i1 zeroext true) #3
  %112 = load i1 (%class.Archive*, i32*, i32)**, i1 (%class.Archive*, i32*, i32)*** %95, align 8
  %113 = getelementptr inbounds i1 (%class.Archive*, i32*, i32)*, i1 (%class.Archive*, i32*, i32)** %112, i64 2
  %114 = load i1 (%class.Archive*, i32*, i32)*, i1 (%class.Archive*, i32*, i32)** %113, align 8
  %115 = call zeroext i1 %114(%class.Archive* %0, i32* nonnull %103, i32 %94) #3
  br i1 %115, label %116, label %117

116:                                              ; preds = %111
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %86, i32* nonnull %103, i64 2048) #3
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %102) #3
  br label %154

117:                                              ; preds = %111
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %102) #3
  br label %118

118:                                              ; preds = %117, %108
  %119 = phi i8 [ %105, %108 ], [ 1, %117 ]
  br i1 %106, label %126, label %120

120:                                              ; preds = %118
  %121 = call zeroext i1 @_Z17RecVolumesRestoreP10RAROptionsPKwb(%class.RAROptions* %10, i32* %87, i1 zeroext true) #3
  %122 = load i1 (%class.Archive*, i32*, i32)**, i1 (%class.Archive*, i32*, i32)*** %95, align 8
  %123 = getelementptr inbounds i1 (%class.Archive*, i32*, i32)*, i1 (%class.Archive*, i32*, i32)** %122, i64 2
  %124 = load i1 (%class.Archive*, i32*, i32)*, i1 (%class.Archive*, i32*, i32)** %123, align 8
  %125 = call zeroext i1 %124(%class.Archive* %0, i32* nonnull %86, i32 %94) #3
  br i1 %125, label %154, label %104

126:                                              ; preds = %118
  %127 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %10, i64 0, i32 93
  %128 = load i8, i8* %127, align 2, !range !2
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %126
  %131 = call zeroext i1 @_Z11IsRemovablePKw(i32* nonnull %86) #3
  br label %132

132:                                              ; preds = %130, %126
  %133 = bitcast %class.uiMsgStore* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %133) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 -86, i64 112, i1 false) #3
  %134 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 0
  %135 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 1
  %136 = bitcast i32** %135 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.4, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.4, i64 0, i64 0)>, <2 x i32*>* %136, align 8
  %137 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 3
  %138 = bitcast i32** %137 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.4, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.4, i64 0, i64 0)>, <2 x i32*>* %138, align 8
  %139 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 5
  %140 = bitcast i32** %139 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.4, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.4, i64 0, i64 0)>, <2 x i32*>* %140, align 8
  %141 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.4, i64 0, i64 0), i32** %141, align 8
  %142 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 1, i64 0
  %143 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 4
  %144 = bitcast i32* %142 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 40, i1 false) #3
  store i32 69, i32* %143, align 8
  %145 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 2
  store i32 1, i32* %145, align 8
  store i32* %86, i32** %134, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %5) #3
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %133) #3
  %146 = load i1 (%class.Archive*, i32*, i32)**, i1 (%class.Archive*, i32*, i32)*** %95, align 8
  %147 = getelementptr inbounds i1 (%class.Archive*, i32*, i32)*, i1 (%class.Archive*, i32*, i32)** %146, i64 2
  %148 = load i1 (%class.Archive*, i32*, i32)*, i1 (%class.Archive*, i32*, i32)** %147, align 8
  %149 = call zeroext i1 %148(%class.Archive* %0, i32* %87, i32 %94) #3
  %150 = bitcast %class.Archive* %0 to void (%class.Archive*, i64, i32)***
  %151 = load void (%class.Archive*, i64, i32)**, void (%class.Archive*, i64, i32)*** %150, align 8
  %152 = getelementptr inbounds void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %151, i64 5
  %153 = load void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %152, align 8
  call void %153(%class.Archive* %0, i64 %71, i32 0) #3
  br label %200

154:                                              ; preds = %120, %78, %116
  switch i32 %3, label %160 [
    i32 88, label %155
    i32 84, label %155
    i32 69, label %155
  ]

155:                                              ; preds = %154, %154, %154
  %156 = icmp eq i32 %3, 84
  %157 = select i1 %156, [22 x i32]* @.str, [22 x i32]* @.str.1
  %158 = getelementptr inbounds [22 x i32], [22 x i32]* %157, i64 0, i64 0
  %159 = call i32* @_Z2StPKw(i32* nonnull %158) #3
  br label %160

160:                                              ; preds = %154, %155
  call void @_ZN7Archive8CheckArcEb(%class.Archive* %0, i1 zeroext true) #3
  br i1 %66, label %161, label %163

161:                                              ; preds = %160
  %162 = call i64 @_ZN7Archive11SearchBlockE11HEADER_TYPE(%class.Archive* %0, i32 %12) #3
  br label %165

163:                                              ; preds = %160
  %164 = call i64 @_ZN7Archive10ReadHeaderEv(%class.Archive* %0) #3
  br label %165

165:                                              ; preds = %163, %161
  %166 = load i32, i32* %11, align 4
  %167 = icmp eq i32 %166, 2
  br i1 %167, label %168, label %178

168:                                              ; preds = %165
  call void @_ZN7Archive17ConvertAttributesEv(%class.Archive* %0) #3
  %169 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 32
  %170 = load i64, i64* %169, align 8
  %171 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 10
  %172 = load i64, i64* %171, align 8
  %173 = sub nsw i64 %170, %172
  %174 = bitcast %class.Archive* %0 to void (%class.Archive*, i64, i32)***
  %175 = load void (%class.Archive*, i64, i32)**, void (%class.Archive*, i64, i32)*** %174, align 8
  %176 = getelementptr inbounds void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %175, i64 5
  %177 = load void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %176, align 8
  call void %177(%class.Archive* %0, i64 %173, i32 0) #3
  br label %178

178:                                              ; preds = %168, %165
  br i1 %2, label %179, label %181

179:                                              ; preds = %178
  %180 = call i32* @_Z2StPKw(i32* getelementptr inbounds ([19 x i32], [19 x i32]* @.str.2, i64 0, i64 0)) #3
  br label %181

181:                                              ; preds = %179, %178
  br i1 %65, label %182, label %200

182:                                              ; preds = %181
  %183 = icmp eq i32 %12, 5
  br i1 %183, label %184, label %186

184:                                              ; preds = %182
  %185 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %1, i64 0, i32 26
  store i8 0, i8* %185, align 1
  br label %193

186:                                              ; preds = %182
  %187 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %16, i64 0, i32 16
  %188 = load i8, i8* %187, align 1, !range !2
  %189 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %1, i64 0, i32 26
  store i8 %188, i8* %189, align 1
  %190 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %16, i64 0, i32 10
  %191 = load i64, i64* %190, align 8
  %192 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %1, i64 0, i32 10
  store i64 %191, i64* %192, align 8
  br label %193

193:                                              ; preds = %186, %184
  %194 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %1, i64 0, i32 32
  store i64 0, i64* %194, align 8
  %195 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %1, i64 0, i32 36
  %196 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %16, i64 0, i32 13, i32 0
  %197 = load i32, i32* %196, align 8
  %198 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %10, i64 0, i32 106
  %199 = load i32, i32* %198, align 8
  call void @_ZN8DataHash4InitE9HASH_TYPEj(%class.DataHash* %195, i32 %197, i32 %199) #3
  br label %200

200:                                              ; preds = %181, %193, %132
  %201 = phi i1 [ false, %132 ], [ true, %193 ], [ true, %181 ]
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %85) #3
  ret i1 %201
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN8DataHash3CmpEP9HashValuePh(%class.DataHash*, %struct.HashValue*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN4File10FileLengthEv(%class.File*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_Z8wcsncpyzPwPKwm(i32*, i32*, i64) local_unnamed_addr #2

declare void @_Z14NextVolumeNamePwjb(i32*, i32, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_Z17RecVolumesRestoreP10RAROptionsPKwb(%class.RAROptions*, i32*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_Z11IsRemovablePKw(i32*) local_unnamed_addr #2

declare i32* @_Z2StPKw(i32*) local_unnamed_addr #2

declare void @_ZN7Archive8CheckArcEb(%class.Archive*, i1 zeroext) local_unnamed_addr #2

declare i64 @_ZN7Archive11SearchBlockE11HEADER_TYPE(%class.Archive*, i32) local_unnamed_addr #2

declare i64 @_ZN7Archive10ReadHeaderEv(%class.Archive*) local_unnamed_addr #2

declare void @_ZN7Archive17ConvertAttributesEv(%class.Archive*) local_unnamed_addr #2

declare void @_ZN8DataHash4InitE9HASH_TYPEj(%class.DataHash*, i32, i32) local_unnamed_addr #2

declare void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
