; ModuleID = '../../content/utility/utility_main.cc'
source_filename = "../../content/utility/utility_main.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.content::internal::PartitionAllocSupport" = type { %"class.base::Lock", i8, i8, i8, i8, %"class.std::__1::basic_string", i64 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.content::MainFunctionParams" = type { %"class.base::CommandLine"*, i8, %"class.base::OnceCallback"*, %"class.base::OnceCallback.15"*, %"struct.content::StartupData"* }
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback.15" = type opaque
%"struct.content::StartupData" = type opaque
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"class.icu_69::UObject" = type { i32 (...)** }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.17, [32 x i8] }
%struct.anon.17 = type { i16, i32, i32, i16* }
%"class.base::SingleThreadTaskExecutor" = type { %"class.std::__1::unique_ptr", %class.scoped_refptr.21, i32, %"class.base::SimpleTaskExecutor" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.base::sequence_manager::SequenceManager"* }
%"class.base::sequence_manager::SequenceManager" = type opaque
%class.scoped_refptr.21 = type { %"class.base::sequence_manager::TaskQueue"* }
%"class.base::sequence_manager::TaskQueue" = type opaque
%"class.base::SimpleTaskExecutor" = type { %"class.base::TaskExecutor", %class.scoped_refptr.22, %"class.base::TaskExecutor"* }
%"class.base::TaskExecutor" = type { i32 (...)** }
%class.scoped_refptr.22 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.23" }>
%"class.base::RefCountedThreadSafe.23" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback.24" = type { %"class.base::internal::CallbackBase" }
%"struct.sandbox::policy::SandboxLinux::Options" = type { %"struct.sandbox::policy::SandboxSeccompBPF::Options", i8, i8, i8 }
%"struct.sandbox::policy::SandboxSeccompBPF::Options" = type { i8, i8, i8, i8, i8 }
%"class.content::ChildProcess" = type <{ i32 (...)**, i32, [4 x i8], %"class.base::WaitableEvent", %"class.base::Thread", %"class.std::__1::unique_ptr.58", i8, [7 x i8] }>
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.25, i8, [7 x i8] }>
%class.scoped_refptr.25 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.26", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.26" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.27" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.base::Thread" = type <{ %"class.base::PlatformThread::Delegate", i8, i8, i8, [5 x i8], %"class.base::Lock", %"class.base::PlatformThreadHandle", %"class.base::Lock", i32, [4 x i8], %"class.base::WaitableEvent", %"class.std::__1::unique_ptr.31", %"class.base::RunLoop"*, i32, [4 x i8], %"class.std::__1::basic_string", %"class.base::WaitableEvent", %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%"class.base::PlatformThread::Delegate" = type { i32 (...)** }
%"class.base::PlatformThreadHandle" = type { i64 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.base::Thread::Delegate"* }
%"class.base::Thread::Delegate" = type { i32 (...)** }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.22, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector.37" }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.44", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.46" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.51 }
%class.scoped_refptr.51 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.52", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.52" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.53" }
%"struct.std::__1::atomic.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__cxx_atomic_impl.56" }
%"struct.std::__1::__cxx_atomic_impl.56" = type { %"struct.std::__1::__cxx_atomic_base_impl.57" }
%"struct.std::__1::__cxx_atomic_base_impl.57" = type { i8 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.content::ChildThreadImpl"* }
%"class.content::ChildThreadImpl" = type { %"class.IPC::Listener", %"class.base::Thread", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %class.scoped_refptr.73, %"class.content::ChildThreadImpl::ChildThreadMessageRouter", i8, %class.scoped_refptr.22, %"class.base::RepeatingCallback", %"class.std::__1::unique_ptr.99", %class.scoped_refptr.22, %"class.variations::ChildProcessFieldTrialSyncer"*, %"class.std::__1::unique_ptr.106", %class.scoped_refptr.22, %"class.mojo::SharedRemote", %class.scoped_refptr.114, %"class.base::WeakPtrFactory.109", %"class.content::ChildThread" }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.mojo::core::ScopedIPCSupport"* }
%"class.mojo::core::ScopedIPCSupport" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.IPC::SyncChannel"* }
%"class.IPC::SyncChannel" = type opaque
%class.scoped_refptr.73 = type { %"class.IPC::SyncMessageFilter"* }
%"class.IPC::SyncMessageFilter" = type opaque
%"class.content::ChildThreadImpl::ChildThreadMessageRouter" = type { %"class.IPC::MessageRouter", %"class.IPC::Sender"* }
%"class.IPC::MessageRouter" = type { %"class.IPC::Listener", %"class.IPC::Sender", %"class.base::IDMap" }
%"class.IPC::Sender" = type { i32 (...)** }
%"class.base::IDMap" = type <{ i32, [4 x i8], %"class.base::internal::flat_tree", i32, [4 x i8], %"class.std::__1::unordered_map", i8, [7 x i8] }>
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.74" }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { i32*, i32*, %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { i32* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.81", %"class.std::__1::__compressed_pair.89", %"class.std::__1::__compressed_pair.94", %"class.std::__1::__compressed_pair.96", [4 x i8] }>
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83", %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.tracing::BackgroundTracingAgentProviderImpl"* }
%"class.tracing::BackgroundTracingAgentProviderImpl" = type opaque
%"class.variations::ChildProcessFieldTrialSyncer" = type { %"class.base::FieldTrialList::Observer", %"class.base::ThreadLocalBoolean", %"class.base::RepeatingCallback.105" }
%"class.base::FieldTrialList::Observer" = type { i32 (...)** }
%"class.base::ThreadLocalBoolean" = type { %"class.base::ThreadLocalPointer" }
%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.base::RepeatingCallback.105" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.base::WeakPtrFactory.109"* }
%"class.mojo::SharedRemote" = type { %class.scoped_refptr.113 }
%class.scoped_refptr.113 = type { %"class.mojo::SharedRemoteBase"* }
%"class.mojo::SharedRemoteBase" = type opaque
%class.scoped_refptr.114 = type { %"class.content::ChildThreadImpl::IOThreadState"* }
%"class.content::ChildThreadImpl::IOThreadState" = type opaque
%"class.base::WeakPtrFactory.109" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.content::ChildThread" = type { %"class.IPC::Sender" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon.142 }
%union.anon.142 = type { %"class.base::HighResolutionTimerManager" }
%"class.base::HighResolutionTimerManager" = type <{ %"class.base::PowerSuspendObserver", %"class.base::PowerStateObserver", i8, [7 x i8] }>
%"class.base::PowerSuspendObserver" = type { i32 (...)** }
%"class.base::PowerStateObserver" = type { i32 (...)** }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.icu_69::TimeZone" = type { %"class.icu_69::UObject", %"class.icu_69::UnicodeString" }
%"struct.base::ThreadPoolInstance::InitParams" = type { i32, i32, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.content::ContentClient" = type { i32 (...)**, %"class.content::ContentBrowserClient"*, %"class.content::ContentGpuClient"*, %"class.content::ContentRendererClient"*, %"class.content::ContentUtilityClient"* }
%"class.content::ContentBrowserClient" = type opaque
%"class.content::ContentGpuClient" = type opaque
%"class.content::ContentRendererClient" = type opaque
%"class.content::ContentUtilityClient" = type { i32 (...)** }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.23", [4 x i8] }>
%"class.content::UtilityThreadImpl" = type { %"class.content::UtilityThread", %"class.content::ChildThreadImpl.base", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.136" }
%"class.content::UtilityThread" = type { %"class.content::ChildThread" }
%"class.content::ChildThreadImpl.base" = type { %"class.IPC::Listener", %"class.base::Thread", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %class.scoped_refptr.73, %"class.content::ChildThreadImpl::ChildThreadMessageRouter", i8, %class.scoped_refptr.22, %"class.base::RepeatingCallback", %"class.std::__1::unique_ptr.99", %class.scoped_refptr.22, %"class.variations::ChildProcessFieldTrialSyncer"*, %"class.std::__1::unique_ptr.106", %class.scoped_refptr.22, %"class.mojo::SharedRemote", %class.scoped_refptr.114, %"class.base::WeakPtrFactory.109" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Platform"* }
%"class.blink::Platform" = type { i32 (...)** }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.content::UtilityServiceFactory"* }
%"class.content::UtilityServiceFactory" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.mojo::ServiceFactory"* }
%"class.mojo::ServiceFactory" = type opaque
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZN4base8internal7InvokerINS0_9BindStateIPFbN7sandbox6policy12SandboxLinux7OptionsEEJEEES7_E7RunOnceEPNS0_13BindStateBaseEOS6_ = comdat any

$_ZN4base8internal9BindStateIPFbN7sandbox6policy12SandboxLinux7OptionsEEJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZZN7content8internal21PartitionAllocSupport3GetEvE9singleton = comdat any

$_ZGVZN7content8internal21PartitionAllocSupport3GetEvE9singleton = comdat any

@_ZN8switches18kMessageLoopTypeUiE = external constant [0 x i8], align 1
@_ZN8switches19kTimeZoneForTestingE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [14 x i8] c"CrUtilityMain\00", align 1
@_ZN8switches21kUtilityStartupDialogE = external constant [0 x i8], align 1
@_ZN8switches15kUtilitySubTypeE = external constant [0 x i8], align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"Utility\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"ContentChild\00", align 1
@_ZN8switches15kUtilityProcessE = external constant [0 x i8], align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"UtilityMain\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"../../content/utility/utility_main.cc\00", align 1
@_ZZN7content8internal21PartitionAllocSupport3GetEvE9singleton = linkonce_odr hidden local_unnamed_addr global %"class.content::internal::PartitionAllocSupport"* null, comdat, align 8
@_ZGVZN7content8internal21PartitionAllocSupport3GetEvE9singleton = linkonce_odr hidden global i64 0, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7content11UtilityMainERKNS_18MainFunctionParamsE(%"struct.content::MainFunctionParams"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.icu_69::UnicodeString", align 8
  %4 = alloca %"class.base::SingleThreadTaskExecutor", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.base::OnceCallback.24", align 8
  %10 = alloca %"class.base::OnceCallback.24", align 8
  %11 = alloca %"class.base::OnceCallback.24", align 8
  %12 = alloca %"class.base::OnceCallback.24", align 8
  %13 = alloca %"class.base::OnceCallback.24", align 8
  %14 = alloca %"class.base::OnceCallback.24", align 8
  %15 = alloca i64, align 8
  %16 = bitcast i64* %15 to %"struct.sandbox::policy::SandboxLinux::Options"*
  %17 = alloca %"class.content::ChildProcess", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.base::RunLoop", align 8
  %20 = alloca %"class.base::RepeatingCallback", align 8
  %21 = alloca %"class.absl::optional", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.base::Location", align 8
  %24 = getelementptr inbounds %"struct.content::MainFunctionParams", %"struct.content::MainFunctionParams"* %0, i64 0, i32 0
  %25 = load %"class.base::CommandLine"*, %"class.base::CommandLine"** %24, align 8
  %26 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %25, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches18kMessageLoopTypeUiE, i64 0, i64 0)) #10
  %27 = zext i1 %26 to i32
  %28 = load %"class.base::CommandLine"*, %"class.base::CommandLine"** %24, align 8
  %29 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %28, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches19kTimeZoneForTestingE, i64 0, i64 0)) #10
  br i1 %29, label %30, label %49

30:                                               ; preds = %1
  %31 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 24, i1 false)
  %34 = load %"class.base::CommandLine"*, %"class.base::CommandLine"** %24, align 8
  %35 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches19kTimeZoneForTestingE, i64 0, i64 0)) #10
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.base::CommandLine"* %34, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches19kTimeZoneForTestingE, i64 0, i64 0), i64 %35) #10
  %36 = bitcast %"class.icu_69::UnicodeString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %36) #10
  %37 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = load i8*, i8** %32, align 8
  %42 = select i1 %40, i8* %41, i8* %31
  call void @_ZN6icu_6913UnicodeStringC1EPKc(%"class.icu_69::UnicodeString"* nonnull %3, i8* %42) #10
  %43 = call %"class.icu_69::TimeZone"* @_ZN6icu_698TimeZone14createTimeZoneERKNS_13UnicodeStringE(%"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %3) #10
  call void @_ZN6icu_698TimeZone12adoptDefaultEPS0_(%"class.icu_69::TimeZone"* %43) #10
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %36) #10
  %44 = load i8, i8* %38, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %30
  %47 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %30, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br label %49

49:                                               ; preds = %48, %1
  %50 = bitcast %"class.base::SingleThreadTaskExecutor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %50) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 48, i1 false)
  call void @_ZN4base24SingleThreadTaskExecutorC1ENS_15MessagePumpTypeE(%"class.base::SingleThreadTaskExecutor"* nonnull %4, i32 %27) #10
  %51 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #10
  %52 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  store i8 13, i8* %53, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i64 13, i1 false) #10
  %54 = getelementptr inbounds i8, i8* %51, i64 13
  store i8 0, i8* %54, align 1
  call void @_ZN4base14PlatformThread7SetNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #10
  %55 = load i8, i8* %53, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #11
  br label %60

60:                                               ; preds = %49, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #10
  %61 = load %"class.base::CommandLine"*, %"class.base::CommandLine"** %24, align 8
  %62 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %61, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches21kUtilityStartupDialogE, i64 0, i64 0)) #10
  br i1 %62, label %63, label %157

63:                                               ; preds = %60
  %64 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #10
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 24, i1 false)
  %68 = load %"class.base::CommandLine"*, %"class.base::CommandLine"** %24, align 8
  %69 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches21kUtilityStartupDialogE, i64 0, i64 0)) #10
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.base::CommandLine"* %68, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches21kUtilityStartupDialogE, i64 0, i64 0), i64 %69) #10
  %70 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #10
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 24, i1 false)
  %74 = load %"class.base::CommandLine"*, %"class.base::CommandLine"** %24, align 8
  %75 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches15kUtilitySubTypeE, i64 0, i64 0)) #10
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %7, %"class.base::CommandLine"* %74, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches15kUtilitySubTypeE, i64 0, i64 0), i64 %75) #10
  %76 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  %80 = load i64, i64* %66, align 8
  %81 = zext i8 %78 to i64
  %82 = select i1 %79, i64 %80, i64 %81
  %83 = icmp eq i64 %82, 0
  %84 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  br i1 %83, label %87, label %90

87:                                               ; preds = %63
  %88 = load i64, i64* %72, align 8
  %89 = zext i8 %86 to i64
  br label %120

90:                                               ; preds = %63
  %91 = icmp slt i8 %86, 0
  %92 = load i64, i64* %72, align 8
  %93 = zext i8 %86 to i64
  %94 = select i1 %91, i64 %92, i64 %93
  %95 = icmp eq i64 %82, %94
  br i1 %95, label %96, label %146

96:                                               ; preds = %90
  %97 = load i8*, i8** %65, align 8
  %98 = load i8*, i8** %71, align 8
  %99 = select i1 %91, i8* %98, i8* %70
  br i1 %79, label %117, label %100

100:                                              ; preds = %96
  %101 = ptrtoint i8* %97 to i64
  %102 = trunc i64 %101 to i8
  %103 = load i8, i8* %99, align 1
  %104 = icmp eq i8 %103, %102
  br i1 %104, label %105, label %146

105:                                              ; preds = %100, %112
  %106 = phi i64 [ %109, %112 ], [ %81, %100 ]
  %107 = phi i8* [ %110, %112 ], [ %64, %100 ]
  %108 = phi i8* [ %113, %112 ], [ %99, %100 ]
  %109 = add i64 %106, -1
  %110 = getelementptr inbounds i8, i8* %107, i64 1
  %111 = icmp eq i64 %109, 0
  br i1 %111, label %120, label %112

112:                                              ; preds = %105
  %113 = getelementptr inbounds i8, i8* %108, i64 1
  %114 = load i8, i8* %110, align 1
  %115 = load i8, i8* %113, align 1
  %116 = icmp eq i8 %114, %115
  br i1 %116, label %105, label %146

117:                                              ; preds = %96
  %118 = call i32 @bcmp(i8* %97, i8* %99, i64 %82) #10
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %146

120:                                              ; preds = %105, %87, %117
  %121 = phi i64 [ %89, %87 ], [ %93, %117 ], [ %93, %105 ]
  %122 = phi i64 [ %88, %87 ], [ %92, %117 ], [ %92, %105 ]
  %123 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #10
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %125 = icmp slt i8 %86, 0
  %126 = select i1 %125, i64 %122, i64 %121
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %132

128:                                              ; preds = %120
  %129 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  store i8 7, i8* %130, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %123, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #10
  %131 = getelementptr inbounds i8, i8* %123, i64 7
  store i8 0, i8* %131, align 1
  br label %136

132:                                              ; preds = %120
  br i1 %125, label %134, label %133

133:                                              ; preds = %132
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %123, i8* nonnull align 8 %70, i64 24, i1 false) #10
  br label %136

134:                                              ; preds = %132
  %135 = load i8*, i8** %71, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %135, i64 %122) #10
  br label %136

136:                                              ; preds = %134, %133, %128
  call void @_ZN7content15WaitForDebuggerERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #10
  %137 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %137, i64 0, i32 1, i32 0
  %139 = load i8, i8* %138, align 1
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %144

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  call void @_ZdlPv(i8* %143) #11
  br label %144

144:                                              ; preds = %136, %141
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #10
  %145 = load i8, i8* %124, align 1
  br label %146

146:                                              ; preds = %112, %100, %90, %144, %117
  %147 = phi i8 [ %86, %90 ], [ %145, %144 ], [ %86, %117 ], [ %86, %100 ], [ %86, %112 ]
  %148 = icmp slt i8 %147, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %146
  %150 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %150) #11
  br label %151

151:                                              ; preds = %146, %149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #10
  %152 = load i8, i8* %77, align 1
  %153 = icmp slt i8 %152, 0
  br i1 %153, label %154, label %156

154:                                              ; preds = %151
  %155 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %155) #11
  br label %156

156:                                              ; preds = %151, %154
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #10
  br label %157

157:                                              ; preds = %156, %60
  %158 = load %"class.base::CommandLine"*, %"class.base::CommandLine"** %24, align 8
  %159 = call i32 @_ZN7sandbox6policy26SandboxTypeFromCommandLineERKN4base11CommandLineE(%"class.base::CommandLine"* dereferenceable(56) %158) #10
  %160 = bitcast %"class.base::OnceCallback.24"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %160) #10
  %161 = getelementptr inbounds %"class.base::OnceCallback.24", %"class.base::OnceCallback.24"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %161, align 8
  switch i32 %159, label %205 [
    i32 6, label %162
    i32 8, label %172
    i32 10, label %182
    i32 12, label %192
  ]

162:                                              ; preds = %157
  %163 = bitcast %"class.base::OnceCallback.24"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #10
  %164 = call i8* @_Znwm(i64 48) #11, !noalias !2
  %165 = bitcast i8* %164 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %165, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"struct.sandbox::policy::SandboxLinux::Options"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbN7sandbox6policy12SandboxLinux7OptionsEEJEEES7_E7RunOnceEPNS0_13BindStateBaseEOS6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbN7sandbox6policy12SandboxLinux7OptionsEEJEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !2
  %166 = getelementptr inbounds i8, i8* %164, i64 32
  %167 = bitcast i8* %166 to i64*
  store i64 ptrtoint (i1 (i64)* @_ZN7network21NetworkPreSandboxHookEN7sandbox6policy12SandboxLinux7OptionsE to i64), i64* %167, align 8, !noalias !2
  %168 = bitcast %"class.base::OnceCallback.24"* %10 to i8**
  store i8* %164, i8** %168, align 8, !alias.scope !2
  %169 = getelementptr inbounds %"class.base::OnceCallback.24", %"class.base::OnceCallback.24"* %9, i64 0, i32 0
  %170 = getelementptr inbounds %"class.base::OnceCallback.24", %"class.base::OnceCallback.24"* %10, i64 0, i32 0
  %171 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* nonnull %169, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %170) #10
  br label %202

172:                                              ; preds = %157
  %173 = bitcast %"class.base::OnceCallback.24"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #10
  %174 = call i8* @_Znwm(i64 48) #11, !noalias !7
  %175 = bitcast i8* %174 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %175, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"struct.sandbox::policy::SandboxLinux::Options"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbN7sandbox6policy12SandboxLinux7OptionsEEJEEES7_E7RunOnceEPNS0_13BindStateBaseEOS6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbN7sandbox6policy12SandboxLinux7OptionsEEJEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !7
  %176 = getelementptr inbounds i8, i8* %174, i64 32
  %177 = bitcast i8* %176 to i64*
  store i64 ptrtoint (i1 (i64)* @_ZN8printing26PrintBackendPreSandboxHookEN7sandbox6policy12SandboxLinux7OptionsE to i64), i64* %177, align 8, !noalias !7
  %178 = bitcast %"class.base::OnceCallback.24"* %11 to i8**
  store i8* %174, i8** %178, align 8, !alias.scope !7
  %179 = getelementptr inbounds %"class.base::OnceCallback.24", %"class.base::OnceCallback.24"* %9, i64 0, i32 0
  %180 = getelementptr inbounds %"class.base::OnceCallback.24", %"class.base::OnceCallback.24"* %11, i64 0, i32 0
  %181 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* nonnull %179, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %180) #10
  br label %202

182:                                              ; preds = %157
  %183 = bitcast %"class.base::OnceCallback.24"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #10
  %184 = call i8* @_Znwm(i64 48) #11, !noalias !12
  %185 = bitcast i8* %184 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %185, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"struct.sandbox::policy::SandboxLinux::Options"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbN7sandbox6policy12SandboxLinux7OptionsEEJEEES7_E7RunOnceEPNS0_13BindStateBaseEOS6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbN7sandbox6policy12SandboxLinux7OptionsEEJEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !12
  %186 = getelementptr inbounds i8, i8* %184, i64 32
  %187 = bitcast i8* %186 to i64*
  store i64 ptrtoint (i1 (i64)* @_ZN5audio19AudioPreSandboxHookEN7sandbox6policy12SandboxLinux7OptionsE to i64), i64* %187, align 8, !noalias !12
  %188 = bitcast %"class.base::OnceCallback.24"* %12 to i8**
  store i8* %184, i8** %188, align 8, !alias.scope !12
  %189 = getelementptr inbounds %"class.base::OnceCallback.24", %"class.base::OnceCallback.24"* %9, i64 0, i32 0
  %190 = getelementptr inbounds %"class.base::OnceCallback.24", %"class.base::OnceCallback.24"* %12, i64 0, i32 0
  %191 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* nonnull %189, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %190) #10
  br label %202

192:                                              ; preds = %157
  %193 = bitcast %"class.base::OnceCallback.24"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #10
  %194 = call i8* @_Znwm(i64 48) #11, !noalias !17
  %195 = bitcast i8* %194 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %195, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"struct.sandbox::policy::SandboxLinux::Options"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbN7sandbox6policy12SandboxLinux7OptionsEEJEEES7_E7RunOnceEPNS0_13BindStateBaseEOS6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbN7sandbox6policy12SandboxLinux7OptionsEEJEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !17
  %196 = getelementptr inbounds i8, i8* %194, i64 32
  %197 = bitcast i8* %196 to i64*
  store i64 ptrtoint (i1 (i64)* @_ZN6speech31SpeechRecognitionPreSandboxHookEN7sandbox6policy12SandboxLinux7OptionsE to i64), i64* %197, align 8, !noalias !17
  %198 = bitcast %"class.base::OnceCallback.24"* %13 to i8**
  store i8* %194, i8** %198, align 8, !alias.scope !17
  %199 = getelementptr inbounds %"class.base::OnceCallback.24", %"class.base::OnceCallback.24"* %9, i64 0, i32 0
  %200 = getelementptr inbounds %"class.base::OnceCallback.24", %"class.base::OnceCallback.24"* %13, i64 0, i32 0
  %201 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* nonnull %199, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %200) #10
  br label %202

202:                                              ; preds = %162, %172, %182, %192
  %203 = phi %"class.base::internal::CallbackBase"* [ %200, %192 ], [ %190, %182 ], [ %180, %172 ], [ %170, %162 ]
  %204 = phi i8* [ %193, %192 ], [ %183, %182 ], [ %173, %172 ], [ %163, %162 ]
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %203) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %204) #10
  br label %205

205:                                              ; preds = %202, %157
  %206 = getelementptr inbounds %"struct.content::MainFunctionParams", %"struct.content::MainFunctionParams"* %0, i64 0, i32 1
  %207 = load i8, i8* %206, align 8, !range !22
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %212, label %209

209:                                              ; preds = %205
  %210 = bitcast %"class.base::OnceCallback.24"* %9 to i64*
  %211 = load i64, i64* %210, align 8
  br label %217

212:                                              ; preds = %205
  %213 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %161, align 8
  %214 = icmp eq %"class.base::internal::BindStateBase"* %213, null
  br i1 %214, label %223, label %215

215:                                              ; preds = %212
  %216 = ptrtoint %"class.base::internal::BindStateBase"* %213 to i64
  br label %217

217:                                              ; preds = %215, %209
  %218 = phi i64 [ %211, %209 ], [ %216, %215 ]
  %219 = bitcast %"class.base::OnceCallback.24"* %14 to i64*
  store i64 %218, i64* %219, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %161, align 8
  %220 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #10
  store i64 72057594037927936, i64* %15, align 8
  %221 = call zeroext i1 @_ZN7sandbox6policy7Sandbox10InitializeENS0_11SandboxTypeEN4base12OnceCallbackIFbNS0_12SandboxLinux7OptionsEEEERKS6_(i32 %159, %"class.base::OnceCallback.24"* nonnull %14, %"struct.sandbox::policy::SandboxLinux::Options"* nonnull dereferenceable(8) %16) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #10
  %222 = getelementptr inbounds %"class.base::OnceCallback.24", %"class.base::OnceCallback.24"* %14, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %222) #10
  br label %223

223:                                              ; preds = %217, %212
  %224 = bitcast %"class.content::ChildProcess"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %224) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %224, i8 -86, i64 248, i1 false)
  %225 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %225) #10
  %226 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %227 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %226, i64 0, i32 1, i32 0
  store i8 12, i8* %227, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %225, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i64 12, i1 false) #10
  %228 = getelementptr inbounds i8, i8* %225, i64 12
  store i8 0, i8* %228, align 4
  call void @_ZN7content12ChildProcessC1EN4base14ThreadPriorityERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10unique_ptrINS1_18ThreadPoolInstance10InitParamsENS3_14default_deleteISE_EEEE(%"class.content::ChildProcess"* nonnull %17, i32 1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %18, %"struct.base::ThreadPoolInstance::InitParams"* null) #10
  %229 = load i8, i8* %227, align 1
  %230 = icmp slt i8 %229, 0
  br i1 %230, label %231, label %234

231:                                              ; preds = %223
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load i8*, i8** %232, align 8
  call void @_ZdlPv(i8* %233) #11
  br label %234

234:                                              ; preds = %223, %231
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %225) #10
  %235 = call %"class.content::ContentClient"* @_ZN7content16GetContentClientEv() #10
  %236 = getelementptr inbounds %"class.content::ContentClient", %"class.content::ContentClient"* %235, i64 0, i32 4
  %237 = load %"class.content::ContentUtilityClient"*, %"class.content::ContentUtilityClient"** %236, align 8
  %238 = getelementptr inbounds %"class.content::ChildProcess", %"class.content::ChildProcess"* %17, i64 0, i32 4, i32 11, i32 0, i32 0, i32 0
  %239 = load %"class.base::Thread::Delegate"*, %"class.base::Thread::Delegate"** %238, align 8
  %240 = icmp eq %"class.base::Thread::Delegate"* %239, null
  br i1 %240, label %256, label %241

241:                                              ; preds = %234
  %242 = bitcast %"class.base::Thread::Delegate"* %239 to %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)***
  %243 = load %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)*** %242, align 8
  %244 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)** %243, i64 2
  %245 = load %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)** %244, align 8
  %246 = call %"class.base::SingleThreadTaskRunner"* %245(%"class.base::Thread::Delegate"* nonnull %239) #10
  %247 = icmp eq %"class.base::SingleThreadTaskRunner"* %246, null
  br i1 %247, label %256, label %248

248:                                              ; preds = %241
  %249 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %246, i64 0, i32 0, i32 0, i32 1
  %250 = getelementptr inbounds %"class.base::RefCountedThreadSafe.23", %"class.base::RefCountedThreadSafe.23"* %249, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = atomicrmw sub i32* %250, i32 1 acq_rel
  %252 = icmp eq i32 %251, 1
  br i1 %252, label %253, label %256

253:                                              ; preds = %248
  %254 = getelementptr inbounds %"class.base::RefCountedThreadSafe.23", %"class.base::RefCountedThreadSafe.23"* %249, i64 -2
  %255 = bitcast %"class.base::RefCountedThreadSafe.23"* %254 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %255) #10
  br label %256

256:                                              ; preds = %234, %241, %248, %253
  %257 = phi %"class.base::SingleThreadTaskRunner"* [ null, %241 ], [ %246, %248 ], [ %246, %253 ], [ null, %234 ]
  %258 = bitcast %"class.content::ContentUtilityClient"* %237 to void (%"class.content::ContentUtilityClient"*, %"class.base::SingleThreadTaskRunner"*)***
  %259 = load void (%"class.content::ContentUtilityClient"*, %"class.base::SingleThreadTaskRunner"*)**, void (%"class.content::ContentUtilityClient"*, %"class.base::SingleThreadTaskRunner"*)*** %258, align 8
  %260 = getelementptr inbounds void (%"class.content::ContentUtilityClient"*, %"class.base::SingleThreadTaskRunner"*)*, void (%"class.content::ContentUtilityClient"*, %"class.base::SingleThreadTaskRunner"*)** %259, i64 5
  %261 = load void (%"class.content::ContentUtilityClient"*, %"class.base::SingleThreadTaskRunner"*)*, void (%"class.content::ContentUtilityClient"*, %"class.base::SingleThreadTaskRunner"*)** %260, align 8
  call void %261(%"class.content::ContentUtilityClient"* %237, %"class.base::SingleThreadTaskRunner"* %257) #10
  %262 = bitcast %"class.base::RunLoop"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %262) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %262, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %19, i32 0) #10
  %263 = call i8* @_Znwm(i64 472) #11
  %264 = bitcast i8* %263 to %"class.content::UtilityThreadImpl"*
  call void @_ZN4base7RunLoop11QuitClosureEv(%"class.base::RepeatingCallback"* nonnull sret %20, %"class.base::RunLoop"* nonnull %19) #10
  call void @_ZN7content17UtilityThreadImplC1EN4base17RepeatingCallbackIFvvEEE(%"class.content::UtilityThreadImpl"* nonnull %264, %"class.base::RepeatingCallback"* nonnull %20) #10
  %265 = getelementptr inbounds i8, i8* %263, i64 8
  %266 = bitcast i8* %265 to %"class.content::ChildThreadImpl"*
  call void @_ZN7content12ChildProcess15set_main_threadEPNS_15ChildThreadImplE(%"class.content::ChildProcess"* nonnull %17, %"class.content::ChildThreadImpl"* %266) #10
  %267 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %20, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %267) #10
  %268 = load i8, i8* %206, align 8, !range !22
  %269 = icmp eq i8 %268, 0
  br i1 %269, label %271, label %270

270:                                              ; preds = %256
  call void @_ZN7tracing28EnableStartupTracingIfNeededEv() #10
  br label %271

271:                                              ; preds = %256, %270
  %272 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %272) #10
  %273 = bitcast %"class.absl::optional"* %21 to i64*
  store i64 -6148914691236517206, i64* %273, align 8
  store i8 0, i8* %272, align 8
  %274 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %21, i64 0, i32 0, i32 0, i32 0, i32 2
  %275 = bitcast %union.anon.142* %274 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %275, i8 0, i64 24, i1 false) #10
  %276 = call zeroext i1 @_ZN4base12PowerMonitor13IsInitializedEv() #10
  br i1 %276, label %277, label %284

277:                                              ; preds = %271
  %278 = load i8, i8* %272, align 8, !range !22
  %279 = icmp eq i8 %278, 0
  br i1 %279, label %282, label %280

280:                                              ; preds = %277
  %281 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %21, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN4base26HighResolutionTimerManagerD1Ev(%"class.base::HighResolutionTimerManager"* %281) #10
  store i8 0, i8* %272, align 8
  br label %282

282:                                              ; preds = %277, %280
  %283 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %21, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN4base26HighResolutionTimerManagerC1Ev(%"class.base::HighResolutionTimerManager"* %283) #10
  store i8 1, i8* %272, align 8
  br label %284

284:                                              ; preds = %282, %271
  %285 = load atomic i8, i8* bitcast (i64* @_ZGVZN7content8internal21PartitionAllocSupport3GetEvE9singleton to i8*) acquire, align 8
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %287, label %293, !prof !23

287:                                              ; preds = %284
  %288 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN7content8internal21PartitionAllocSupport3GetEvE9singleton) #10
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %293, label %290

290:                                              ; preds = %287
  %291 = call i8* @_Znwm(i64 80) #11
  %292 = bitcast i8* %291 to %"class.content::internal::PartitionAllocSupport"*
  call void @_ZN7content8internal21PartitionAllocSupportC1Ev(%"class.content::internal::PartitionAllocSupport"* nonnull %292) #10
  store i8* %291, i8** bitcast (%"class.content::internal::PartitionAllocSupport"** @_ZZN7content8internal21PartitionAllocSupport3GetEvE9singleton to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN7content8internal21PartitionAllocSupport3GetEvE9singleton) #10
  br label %293

293:                                              ; preds = %284, %287, %290
  %294 = load %"class.content::internal::PartitionAllocSupport"*, %"class.content::internal::PartitionAllocSupport"** @_ZZN7content8internal21PartitionAllocSupport3GetEvE9singleton, align 8
  %295 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %295) #10
  %296 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches15kUtilityProcessE, i64 0, i64 0)) #10
  %297 = icmp ugt i64 %296, -17
  br i1 %297, label %298, label %300

298:                                              ; preds = %293
  %299 = bitcast %"class.std::__1::basic_string"* %22 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %299) #12
  unreachable

300:                                              ; preds = %293
  %301 = icmp ult i64 %296, 23
  br i1 %301, label %311, label %302

302:                                              ; preds = %300
  %303 = add nuw i64 %296, 16
  %304 = and i64 %303, -16
  %305 = call i8* @_Znwm(i64 %304) #11
  %306 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %305, i8** %306, align 8
  %307 = or i64 %304, -9223372036854775808
  %308 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %307, i64* %308, align 8
  %309 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %296, i64* %309, align 8
  %310 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %316

311:                                              ; preds = %300
  %312 = trunc i64 %296 to i8
  %313 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %314 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %313, i64 0, i32 1, i32 0
  store i8 %312, i8* %314, align 1
  %315 = icmp eq i64 %296, 0
  br i1 %315, label %319, label %316

316:                                              ; preds = %311, %302
  %317 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %313, %311 ], [ %310, %302 ]
  %318 = phi i8* [ %295, %311 ], [ %305, %302 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %318, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches15kUtilityProcessE, i64 0, i64 0), i64 %296, i1 false) #10
  br label %319

319:                                              ; preds = %311, %316
  %320 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %313, %311 ], [ %317, %316 ]
  %321 = phi i8* [ %295, %311 ], [ %318, %316 ]
  %322 = getelementptr inbounds i8, i8* %321, i64 %296
  store i8 0, i8* %322, align 1
  call void @_ZN7content8internal21PartitionAllocSupport30ReconfigureAfterTaskRunnerInitERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.content::internal::PartitionAllocSupport"* %294, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %22) #10
  %323 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %320, i64 0, i32 1, i32 0
  %324 = load i8, i8* %323, align 1
  %325 = icmp slt i8 %324, 0
  br i1 %325, label %326, label %329

326:                                              ; preds = %319
  %327 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %328 = load i8*, i8** %327, align 8
  call void @_ZdlPv(i8* %328) #11
  br label %329

329:                                              ; preds = %319, %326
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %295) #10
  %330 = bitcast %"class.base::Location"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %330) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %23, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i32 235) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %19, %"class.base::Location"* nonnull dereferenceable(32) %23) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %330) #10
  %331 = load i8, i8* %272, align 8, !range !22
  %332 = icmp eq i8 %331, 0
  br i1 %332, label %335, label %333

333:                                              ; preds = %329
  %334 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %21, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN4base26HighResolutionTimerManagerD1Ev(%"class.base::HighResolutionTimerManager"* %334) #10
  store i8 0, i8* %272, align 8
  br label %335

335:                                              ; preds = %329, %333
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %272) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %19) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %262) #10
  call void @_ZN7content12ChildProcessD1Ev(%"class.content::ChildProcess"* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %224) #10
  %336 = getelementptr inbounds %"class.base::OnceCallback.24", %"class.base::OnceCallback.24"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %336) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160) #10
  call void @_ZN4base24SingleThreadTaskExecutorD1Ev(%"class.base::SingleThreadTaskExecutor"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %50) #10
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #2

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN6icu_698TimeZone12adoptDefaultEPS0_(%"class.icu_69::TimeZone"*) local_unnamed_addr #2

declare %"class.icu_69::TimeZone"* @_ZN6icu_698TimeZone14createTimeZoneERKNS_13UnicodeStringE(%"class.icu_69::UnicodeString"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN6icu_6913UnicodeStringC1EPKc(%"class.icu_69::UnicodeString"*, i8*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base24SingleThreadTaskExecutorC1ENS_15MessagePumpTypeE(%"class.base::SingleThreadTaskExecutor"*, i32) unnamed_addr #2

declare void @_ZN4base14PlatformThread7SetNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN7content15WaitForDebuggerERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare i32 @_ZN7sandbox6policy26SandboxTypeFromCommandLineERKN4base11CommandLineE(%"class.base::CommandLine"* dereferenceable(56)) local_unnamed_addr #2

declare zeroext i1 @_ZN7network21NetworkPreSandboxHookEN7sandbox6policy12SandboxLinux7OptionsE(i64) #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare zeroext i1 @_ZN8printing26PrintBackendPreSandboxHookEN7sandbox6policy12SandboxLinux7OptionsE(i64) #2

declare zeroext i1 @_ZN5audio19AudioPreSandboxHookEN7sandbox6policy12SandboxLinux7OptionsE(i64) #2

declare zeroext i1 @_ZN6speech31SpeechRecognitionPreSandboxHookEN7sandbox6policy12SandboxLinux7OptionsE(i64) #2

declare zeroext i1 @_ZN7sandbox6policy7Sandbox10InitializeENS0_11SandboxTypeEN4base12OnceCallbackIFbNS0_12SandboxLinux7OptionsEEEERKS6_(i32, %"class.base::OnceCallback.24"*, %"struct.sandbox::policy::SandboxLinux::Options"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN7content12ChildProcessC1EN4base14ThreadPriorityERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10unique_ptrINS1_18ThreadPoolInstance10InitParamsENS3_14default_deleteISE_EEEE(%"class.content::ChildProcess"*, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.base::ThreadPoolInstance::InitParams"*) unnamed_addr #2

declare %"class.content::ContentClient"* @_ZN7content16GetContentClientEv() local_unnamed_addr #2

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #2

declare void @_ZN7content12ChildProcess15set_main_threadEPNS_15ChildThreadImplE(%"class.content::ChildProcess"*, %"class.content::ChildThreadImpl"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN4base7RunLoop11QuitClosureEv(%"class.base::RepeatingCallback"* sret, %"class.base::RunLoop"*) local_unnamed_addr #2

declare void @_ZN7content17UtilityThreadImplC1EN4base17RepeatingCallbackIFvvEEE(%"class.content::UtilityThreadImpl"*, %"class.base::RepeatingCallback"*) unnamed_addr #2

declare void @_ZN7tracing28EnableStartupTracingIfNeededEv() local_unnamed_addr #2

declare zeroext i1 @_ZN4base12PowerMonitor13IsInitializedEv() local_unnamed_addr #2

declare void @_ZN7content8internal21PartitionAllocSupport30ReconfigureAfterTaskRunnerInitERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.content::internal::PartitionAllocSupport"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7content12ChildProcessD1Ev(%"class.content::ChildProcess"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base24SingleThreadTaskExecutorD1Ev(%"class.base::SingleThreadTaskExecutor"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

declare void @_ZN7content8internal21PartitionAllocSupportC1Ev(%"class.content::internal::PartitionAllocSupport"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base26HighResolutionTimerManagerD1Ev(%"class.base::HighResolutionTimerManager"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIPFbN7sandbox6policy12SandboxLinux7OptionsEEJEEES7_E7RunOnceEPNS0_13BindStateBaseEOS6_(%"class.base::internal::BindStateBase"*, %"struct.sandbox::policy::SandboxLinux::Options"* dereferenceable(8)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to i1 (i64)**
  %5 = load i1 (i64)*, i1 (i64)** %4, align 8
  %6 = bitcast %"struct.sandbox::policy::SandboxLinux::Options"* %1 to i64*
  %7 = load i64, i64* %6, align 1
  %8 = tail call zeroext i1 %5(i64 %7) #10
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFbN7sandbox6policy12SandboxLinux7OptionsEEJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

declare void @_ZN4base26HighResolutionTimerManagerC1Ev(%"class.base::HighResolutionTimerManager"*) unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFbN7sandbox6policy12SandboxLinux7OptionsEEJEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFbN7sandbox6policy12SandboxLinux7OptionsEEJEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIPFbN7sandbox6policy12SandboxLinux7OptionsEEJEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIPFbN7sandbox6policy12SandboxLinux7OptionsEEJEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFbN7sandbox6policy12SandboxLinux7OptionsEEJEEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFbN7sandbox6policy12SandboxLinux7OptionsEEJEEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIPFbN7sandbox6policy12SandboxLinux7OptionsEEJEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIPFbN7sandbox6policy12SandboxLinux7OptionsEEJEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFbN7sandbox6policy12SandboxLinux7OptionsEEJEEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFbN7sandbox6policy12SandboxLinux7OptionsEEJEEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIPFbN7sandbox6policy12SandboxLinux7OptionsEEJEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIPFbN7sandbox6policy12SandboxLinux7OptionsEEJEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFbN7sandbox6policy12SandboxLinux7OptionsEEJEEEDcOT0_DpOT1_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFbN7sandbox6policy12SandboxLinux7OptionsEEJEEEDcOT0_DpOT1_"}
!20 = distinct !{!20, !21, !"_ZN4base8BindOnceIPFbN7sandbox6policy12SandboxLinux7OptionsEEJEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8BindOnceIPFbN7sandbox6policy12SandboxLinux7OptionsEEJEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!22 = !{i8 0, i8 2}
!23 = !{!"branch_weights", i32 1, i32 1048575}
