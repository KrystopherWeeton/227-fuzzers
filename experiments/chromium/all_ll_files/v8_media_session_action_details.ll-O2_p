; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_media_session_action_details.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_media_session_action_details.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.76", i32, [4 x i8], %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.212", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.228", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.246", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.253", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.120", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.192", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.112" = type { %"struct.std::__1::__atomic_base.113" }
%"struct.std::__1::__atomic_base.113" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__cxx_atomic_impl.115" }
%"struct.std::__1::__cxx_atomic_impl.115" = type { %"struct.std::__1::__cxx_atomic_base_impl.116" }
%"struct.std::__1::__cxx_atomic_base_impl.116" = type { i64 }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::Worklist.123"* }
%"class.blink::Worklist.123" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::Worklist.130"* }
%"class.blink::Worklist.130" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::Worklist.137"* }
%"class.blink::Worklist.137" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::Worklist.144"* }
%"class.blink::Worklist.144" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::Worklist.151"* }
%"class.blink::Worklist.151" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::Worklist.158"* }
%"class.blink::Worklist.158" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::Worklist.165"* }
%"class.blink::Worklist.165" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.172", %"class.std::__1::__compressed_pair.179", %"class.std::__1::__compressed_pair.184", %"class.std::__1::__compressed_pair.186", [4 x i8] }>
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174", %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { i64 }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { float }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.195", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.204" }
%"class.WTF::Vector.204" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.220" }
%"class.WTF::VectorBuffer.220" = type { %"class.WTF::VectorBufferBase.221" }
%"class.WTF::VectorBufferBase.221" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.234" }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.123"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.130"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.137"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.144"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.151"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.284" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.252 }
%class.scoped_refptr.252 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.253" = type { %"struct.std::__1::__atomic_base.254" }
%"struct.std::__1::__atomic_base.254" = type { %"struct.std::__1::__cxx_atomic_impl.255" }
%"struct.std::__1::__cxx_atomic_impl.255" = type { %"struct.std::__1::__cxx_atomic_base_impl.256" }
%"struct.std::__1::__cxx_atomic_base_impl.256" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.v8::Value" = type { i8 }
%"class.blink::MediaSessionActionDetails" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.23", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.70", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.257", %"class.std::__1::unique_ptr.262", %"class.blink::Persistent.268", %"class.blink::Persistent.272", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.7", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.17", i32, i32 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.23" = type { %"class.WTF::HashTable.24" }
%"class.WTF::HashTable.24" = type <{ %"struct.WTF::KeyValuePair.27"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.27" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.36", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.31", i8* }
%"class.WTF::HashMap.31" = type { %"class.WTF::HashTable.32" }
%"class.WTF::HashTable.32" = type <{ %"struct.WTF::KeyValuePair.35"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.35" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.36" = type { %"class.v8::PersistentValueMapBase.37" }
%"class.v8::PersistentValueMapBase.37" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.38", i8* }
%"class.WTF::HashMap.38" = type { %"class.WTF::HashTable.39" }
%"class.WTF::HashTable.39" = type <{ %"struct.WTF::KeyValuePair.42"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.42" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.43" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.54", %"class.WTF::Vector.60", i8, i32 }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.60" = type { %"class.WTF::VectorBuffer.61" }
%"class.WTF::VectorBuffer.61" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.291, %"class.blink::Member.310", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.291 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.292", i32, i32, %"class.blink::Persistent.294" }
%"class.WTF::RefCounted.292" = type { %"class.base::RefCounted.293" }
%"class.base::RefCounted.293" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.294" = type { %"class.blink::PersistentBase.295" }
%"class.blink::PersistentBase.295" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.300" }
%"class.WTF::HashMap.300" = type { %"class.WTF::HashTable.301" }
%"class.WTF::HashTable.301" = type <{ %"struct.WTF::KeyValuePair.303"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.303" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.307" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.304" }
%"class.blink::MemberBase.304" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.307" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.307" = type { %"class.v8::TracedReference.308" }
%"class.v8::TracedReference.308" = type { %"class.v8::BasicTracedReference.309" }
%"class.v8::BasicTracedReference.309" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.310" = type { %"class.blink::MemberBase.311" }
%"class.blink::MemberBase.311" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.257" = type { %"class.WTF::VectorBuffer.258" }
%"class.WTF::VectorBuffer.258" = type { %"class.WTF::VectorBufferBase.259" }
%"class.WTF::VectorBufferBase.259" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.268" = type { %"class.blink::PersistentBase.269" }
%"class.blink::PersistentBase.269" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.272" = type { %"class.blink::PersistentBase.273" }
%"class.blink::PersistentBase.273" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.278" }
%"class.WTF::Vector.278" = type { %"class.WTF::VectorBuffer.279" }
%"class.WTF::VectorBuffer.279" = type { %"class.WTF::VectorBufferBase.280" }
%"class.WTF::VectorBufferBase.280" = type { %"struct.std::__1::pair.281"*, i32, i32 }
%"struct.std::__1::pair.281" = type { %"class.blink::UntracedMember", %"class.blink::Member" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase.282" }
%"class.blink::MemberBase.282" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.312" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.v8::Int32" = type { i8 }

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [36 x i8] c"Missing required member(s): action.\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@.str.2 = private unnamed_addr constant [37 x i8] c"required member action is undefined.\00", align 1
@_ZZN5blink27V8MediaSessionActionDetails6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_25MediaSessionActionDetailsERNS_14ExceptionStateEE12kValidValues = internal constant [12 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0)], align 16
@.str.3 = private unnamed_addr constant [5 x i8] c"play\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"pause\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"previoustrack\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"nexttrack\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"seekbackward\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"seekforward\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"skipad\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"stop\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"seekto\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"togglemicrophone\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"togglecamera\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"hangup\00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"MediaSessionAction\00", align 1
@_ZZN5blinkL38eternalV8MediaSessionActionDetailsKeysEPN2v87IsolateEE5kKeys = internal constant [1 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i32 0, i32 0)], align 8
@.str.16 = private unnamed_addr constant [7 x i8] c"action\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 1, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @_ZZN5blinkL38eternalV8MediaSessionActionDetailsKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.18 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.19 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27V8MediaSessionActionDetails6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_25MediaSessionActionDetailsERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::MediaSessionActionDetails"* nocapture, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.blink::V8StringResource", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = icmp eq %"class.v8::Value"* %1, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.v8::Value"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 3
  %15 = icmp eq i64 %14, 1
  br i1 %15, label %16, label %33

16:                                               ; preds = %11
  %17 = add i64 %13, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = and i64 %13, -4294967296
  %21 = zext i32 %19 to i64
  %22 = or i64 %20, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load i16, i16* %24, align 2
  %26 = icmp eq i16 %25, 67
  br i1 %26, label %27, label %33

27:                                               ; preds = %16
  %28 = add i64 %13, 23
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = ashr i32 %30, 1
  switch i32 %31, label %33 [
    i32 5, label %32
    i32 3, label %32
  ]

32:                                               ; preds = %27, %27, %4
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0)) #7
  br label %302

33:                                               ; preds = %27, %16, %11
  %34 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #7
  br i1 %34, label %36, label %35

35:                                               ; preds = %33
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0)) #7
  br label %302

36:                                               ; preds = %33
  %37 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %38 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %39 = add i64 %38, 8
  %40 = inttoptr i64 %39 to %"class.blink::V8PerIsolateData"**
  %41 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %40, align 8
  %42 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %41, i8* bitcast ([1 x i8*]* @_ZZN5blinkL38eternalV8MediaSessionActionDetailsKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.312"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.312"*)) #7
  %43 = extractvalue { i64, %"class.v8::Eternal"* } %42, 1
  %44 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %44) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %0) #7
  %45 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #7
  %46 = bitcast %"class.v8::Eternal"* %43 to %"class.v8::Value"**
  %47 = load %"class.v8::Value"*, %"class.v8::Value"** %46, align 8
  %48 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %37, %"class.v8::Context"* %45, %"class.v8::Value"* %47) #7
  %49 = icmp eq %"class.v8::Value"* %48, null
  br i1 %49, label %50, label %56

50:                                               ; preds = %36
  %51 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #7
  %52 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %53 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %53, i64 5
  %55 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %54, align 8
  call void %55(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %51) #7
  br label %301

56:                                               ; preds = %36
  %57 = bitcast %"class.v8::Value"* %48 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 3
  %60 = icmp eq i64 %59, 1
  br i1 %60, label %61, label %79

61:                                               ; preds = %56
  %62 = add i64 %58, -1
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = and i64 %58, -4294967296
  %66 = zext i32 %64 to i64
  %67 = or i64 %65, %66
  %68 = add i64 %67, 7
  %69 = inttoptr i64 %68 to i16*
  %70 = load i16, i16* %69, align 2
  %71 = icmp eq i16 %70, 67
  br i1 %71, label %72, label %79

72:                                               ; preds = %61
  %73 = add i64 %58, 23
  %74 = inttoptr i64 %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = and i32 %75, -2
  %77 = icmp eq i32 %76, 10
  br i1 %77, label %78, label %79

78:                                               ; preds = %72
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0)) #7
  br label %301

79:                                               ; preds = %61, %56, %72
  %80 = bitcast %"class.blink::V8StringResource"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %80) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 152, i1 false)
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %48, %"class.v8::Value"** %81, align 8
  %82 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 1
  store i32 0, i32* %82, align 8
  %83 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %83, align 8
  %84 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 3, i32 1
  %85 = bitcast %"class.std::__1::unique_ptr"* %84 to i64*
  store i64 0, i64* %85, align 8
  %86 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %7) #7
  br i1 %86, label %103, label %87

87:                                               ; preds = %79
  %88 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #7
  %89 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %89) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 48, i1 false) #7
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %88) #7
  %90 = load %"class.v8::Value"*, %"class.v8::Value"** %81, align 8
  %91 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %88) #7
  %92 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %90, %"class.v8::Context"* %91) #7
  %93 = ptrtoint %"class.v8::String"* %92 to i64
  %94 = bitcast %"class.blink::V8StringResource"* %7 to i64*
  store i64 %93, i64* %94, align 8
  %95 = icmp eq %"class.v8::String"* %92, null
  br i1 %95, label %97, label %96

96:                                               ; preds = %87
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %89) #7
  br label %103

97:                                               ; preds = %87
  %98 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %99 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %100 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %100, i64 5
  %102 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %101, align 8
  call void %102(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %98) #7
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %89) #7
  br label %279

103:                                              ; preds = %79, %96
  %104 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #7
  %105 = load %"class.v8::Value"*, %"class.v8::Value"** %81, align 8
  %106 = icmp eq %"class.v8::Value"* %105, null
  br i1 %106, label %111, label %107, !prof !2

107:                                              ; preds = %103
  %108 = bitcast %"class.v8::Value"* %105 to %"class.v8::String"*
  %109 = load i32, i32* %82, align 8
  %110 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %108, i32 %109) #7
  br label %131

111:                                              ; preds = %103
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %131, label %114

114:                                              ; preds = %111
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %131

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i33
  %123 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %122, i33 1) #7
  %124 = extractvalue { i33, i1 } %123, 1
  %125 = extractvalue { i33, i1 } %123, 0
  %126 = icmp slt i33 %125, 0
  %127 = or i1 %124, %126
  br i1 %127, label %128, label %129, !prof !2

128:                                              ; preds = %119
  call void @llvm.trap() #7
  unreachable

129:                                              ; preds = %119
  %130 = trunc i33 %125 to i32
  store i32 %130, i32* %120, align 4
  br label %131

131:                                              ; preds = %107, %111, %114, %129
  %132 = phi %"class.WTF::StringImpl"* [ %110, %107 ], [ null, %111 ], [ %112, %114 ], [ %112, %129 ]
  %133 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %132, %"class.WTF::StringImpl"** %133, align 8
  %134 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i64 0, i64 0), i64 18) #7
  %135 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %8, i8** getelementptr inbounds ([12 x i8*], [12 x i8*]* @_ZZN5blink27V8MediaSessionActionDetails6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_25MediaSessionActionDetailsERNS_14ExceptionStateEE12kValidValues, i64 0, i64 0), i64 12, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %136 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %152, label %139

139:                                              ; preds = %131
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  br i1 %143, label %146, label %148

146:                                              ; preds = %139
  %147 = add i32 %145, -1
  store i32 %147, i32* %144, align 4
  br label %148

148:                                              ; preds = %146, %139
  %149 = phi i32 [ %147, %146 ], [ %145, %139 ]
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %148
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %137) #7
  br label %152

152:                                              ; preds = %131, %148, %151
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #7
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %152
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #7
  br label %168

168:                                              ; preds = %152, %164, %167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #7
  br i1 %135, label %169, label %279

169:                                              ; preds = %168
  %170 = load %"class.v8::Value"*, %"class.v8::Value"** %81, align 8
  %171 = icmp eq %"class.v8::Value"* %170, null
  br i1 %171, label %172, label %196, !prof !2

172:                                              ; preds = %169
  %173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %174 = icmp eq %"class.WTF::StringImpl"* %173, null
  br i1 %174, label %175, label %177

175:                                              ; preds = %172
  %176 = getelementptr inbounds %"class.blink::MediaSessionActionDetails", %"class.blink::MediaSessionActionDetails"* %2, i64 0, i32 1
  br label %221

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %194

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  %185 = zext i32 %184 to i33
  %186 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %185, i33 1) #7
  %187 = extractvalue { i33, i1 } %186, 1
  %188 = extractvalue { i33, i1 } %186, 0
  %189 = icmp slt i33 %188, 0
  %190 = or i1 %187, %189
  br i1 %190, label %191, label %192, !prof !2

191:                                              ; preds = %182
  call void @llvm.trap() #7
  unreachable

192:                                              ; preds = %182
  %193 = trunc i33 %188 to i32
  store i32 %193, i32* %183, align 4
  br label %194

194:                                              ; preds = %177, %192
  %195 = getelementptr inbounds %"class.blink::MediaSessionActionDetails", %"class.blink::MediaSessionActionDetails"* %2, i64 0, i32 1
  br label %202

196:                                              ; preds = %169
  %197 = bitcast %"class.v8::Value"* %170 to %"class.v8::String"*
  %198 = load i32, i32* %82, align 8
  %199 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %197, i32 %198) #7
  %200 = getelementptr inbounds %"class.blink::MediaSessionActionDetails", %"class.blink::MediaSessionActionDetails"* %2, i64 0, i32 1
  %201 = icmp eq %"class.WTF::StringImpl"* %199, null
  br i1 %201, label %221, label %202

202:                                              ; preds = %194, %196
  %203 = phi %"class.WTF::String"* [ %195, %194 ], [ %200, %196 ]
  %204 = phi %"class.WTF::StringImpl"* [ %173, %194 ], [ %199, %196 ]
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load atomic i32, i32* %205 monotonic, align 4
  %207 = and i32 %206, 2
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %221

209:                                              ; preds = %202
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  %212 = zext i32 %211 to i33
  %213 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %212, i33 1) #7
  %214 = extractvalue { i33, i1 } %213, 1
  %215 = extractvalue { i33, i1 } %213, 0
  %216 = icmp slt i33 %215, 0
  %217 = or i1 %214, %216
  br i1 %217, label %218, label %219, !prof !2

218:                                              ; preds = %209
  call void @llvm.trap() #7
  unreachable

219:                                              ; preds = %209
  %220 = trunc i33 %215 to i32
  store i32 %220, i32* %210, align 4
  br label %221

221:                                              ; preds = %175, %219, %202, %196
  %222 = phi i1 [ false, %219 ], [ false, %202 ], [ true, %196 ], [ true, %175 ]
  %223 = phi %"class.WTF::String"* [ %203, %219 ], [ %203, %202 ], [ %200, %196 ], [ %176, %175 ]
  %224 = phi %"class.WTF::StringImpl"* [ %204, %219 ], [ %204, %202 ], [ null, %196 ], [ null, %175 ]
  %225 = ptrtoint %"class.WTF::StringImpl"* %224 to i64
  %226 = bitcast %"class.WTF::String"* %223 to i64*
  %227 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %223, i64 0, i32 0, i32 0
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  store i64 %225, i64* %226, align 8
  %229 = icmp eq %"class.WTF::StringImpl"* %228, null
  br i1 %229, label %243, label %230

230:                                              ; preds = %221
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = and i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  br i1 %234, label %237, label %239

237:                                              ; preds = %230
  %238 = add i32 %236, -1
  store i32 %238, i32* %235, align 4
  br label %239

239:                                              ; preds = %237, %230
  %240 = phi i32 [ %238, %237 ], [ %236, %230 ]
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %243

242:                                              ; preds = %239
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %228) #7
  br label %243

243:                                              ; preds = %221, %239, %242
  br i1 %222, label %257, label %244

244:                                              ; preds = %243
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 0
  %250 = load i32, i32* %249, align 4
  br i1 %248, label %251, label %253

251:                                              ; preds = %244
  %252 = add i32 %250, -1
  store i32 %252, i32* %249, align 4
  br label %253

253:                                              ; preds = %251, %244
  %254 = phi i32 [ %252, %251 ], [ %250, %244 ]
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %253
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %224) #7
  br label %257

257:                                              ; preds = %243, %253, %256
  %258 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %259 = load i8*, i8** %258, align 8
  store i8* null, i8** %258, align 8
  %260 = icmp eq i8* %259, null
  br i1 %260, label %262, label %261

261:                                              ; preds = %257
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %259) #7
  br label %262

262:                                              ; preds = %261, %257
  %263 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %264 = icmp eq %"class.WTF::StringImpl"* %263, null
  br i1 %264, label %278, label %265

265:                                              ; preds = %262
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = load atomic i32, i32* %266 monotonic, align 4
  %268 = and i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 0
  %271 = load i32, i32* %270, align 4
  br i1 %269, label %272, label %274

272:                                              ; preds = %265
  %273 = add i32 %271, -1
  store i32 %273, i32* %270, align 4
  br label %274

274:                                              ; preds = %272, %265
  %275 = phi i32 [ %273, %272 ], [ %271, %265 ]
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %278

277:                                              ; preds = %274
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %263) #7
  br label %278

278:                                              ; preds = %262, %274, %277
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %80) #7
  br label %301

279:                                              ; preds = %97, %168
  %280 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %281 = load i8*, i8** %280, align 8
  store i8* null, i8** %280, align 8
  %282 = icmp eq i8* %281, null
  br i1 %282, label %284, label %283

283:                                              ; preds = %279
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %281) #7
  br label %284

284:                                              ; preds = %283, %279
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %284
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #7
  br label %300

300:                                              ; preds = %284, %296, %299
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %80) #7
  br label %301

301:                                              ; preds = %300, %278, %78, %50
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %44) #7
  br label %302

302:                                              ; preds = %301, %32, %35
  ret void
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), i8**, i64, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink25MediaSessionActionDetails8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::MediaSessionActionDetails"* nocapture readonly, %"class.v8::Object"* nocapture readnone, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #7
  %6 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %7 = add i64 %6, 8
  %8 = inttoptr i64 %7 to %"class.blink::V8PerIsolateData"**
  %9 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %8, align 8
  %10 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %9, i8* bitcast ([1 x i8*]* @_ZZN5blinkL38eternalV8MediaSessionActionDetailsKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.312"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.312"*)) #7
  %11 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #7
  %12 = getelementptr inbounds %"class.blink::MediaSessionActionDetails", %"class.blink::MediaSessionActionDetails"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %37, label %15

15:                                               ; preds = %3
  %16 = extractvalue { i64, %"class.v8::Eternal"* } %10, 1
  %17 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #7
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %23 = bitcast i8** %22 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %20, i32* %24, align 8
  %25 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #7
  %26 = bitcast %"class.v8::String"* %25 to %"class.v8::Value"*
  %27 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %16, i64 0, i32 0
  %28 = load %"class.v8::Name"*, %"class.v8::Name"** %27, align 8
  %29 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %5, %"class.v8::Context"* %11, %"class.v8::Name"* %28, %"class.v8::Value"* %26) #7
  %30 = trunc i16 %29 to i8
  %31 = icmp ne i8 %30, 0
  %32 = icmp ugt i16 %29, 255
  %33 = and i1 %32, %31
  br i1 %33, label %37, label %34

34:                                               ; preds = %15
  %35 = add i64 %6, 160
  %36 = inttoptr i64 %35 to %"class.v8::Value"*
  br label %39

37:                                               ; preds = %3, %15
  %38 = bitcast %"class.v8::Object"* %5 to %"class.v8::Value"*
  br label %39

39:                                               ; preds = %37, %34
  %40 = phi %"class.v8::Value"* [ %38, %37 ], [ %36, %34 ]
  ret %"class.v8::Value"* %40
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink29toV8MediaSessionActionDetailsEPKNS_25MediaSessionActionDetailsEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::MediaSessionActionDetails"* nocapture readonly, %"class.v8::Object"*, %"class.v8::Object"* nocapture readnone, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %7 = add i64 %6, 8
  %8 = inttoptr i64 %7 to %"class.blink::V8PerIsolateData"**
  %9 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %8, align 8
  %10 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %9, i8* bitcast ([1 x i8*]* @_ZZN5blinkL38eternalV8MediaSessionActionDetailsKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.312"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.312"*)) #7
  %11 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #7
  %12 = getelementptr inbounds %"class.blink::MediaSessionActionDetails", %"class.blink::MediaSessionActionDetails"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %34, label %15

15:                                               ; preds = %4
  %16 = extractvalue { i64, %"class.v8::Eternal"* } %10, 1
  %17 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #7
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %23 = bitcast i8** %22 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %20, i32* %24, align 8
  %25 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #7
  %26 = bitcast %"class.v8::String"* %25 to %"class.v8::Value"*
  %27 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %16, i64 0, i32 0
  %28 = load %"class.v8::Name"*, %"class.v8::Name"** %27, align 8
  %29 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %28, %"class.v8::Value"* %26) #7
  %30 = trunc i16 %29 to i8
  %31 = icmp ne i8 %30, 0
  %32 = icmp ugt i16 %29, 255
  %33 = and i1 %32, %31
  br i1 %33, label %34, label %35

34:                                               ; preds = %4, %15
  br label %35

35:                                               ; preds = %15, %34
  %36 = phi i1 [ true, %34 ], [ false, %15 ]
  ret i1 %36
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #7
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #7
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #7
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !2

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #7
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MediaSessionActionDetails"* @_ZN5blink17NativeValueTraitsINS_25MediaSessionActionDetailsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 16) #7
  %5 = bitcast i8* %4 to %"class.blink::MediaSessionActionDetails"*
  tail call void @_ZN5blink25MediaSessionActionDetailsC1Ev(%"class.blink::MediaSessionActionDetails"* %5) #7
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink27V8MediaSessionActionDetails6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_25MediaSessionActionDetailsERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::MediaSessionActionDetails"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::MediaSessionActionDetails"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.312"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink25MediaSessionActionDetailsC1Ev(%"class.blink::MediaSessionActionDetails"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !3

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !4

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #7
  br i1 %22, label %23, label %80, !prof !4

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #7
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #7
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #7
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #7
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #7
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #7
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2146410443, i32 1073205}
!4 = !{!"branch_weights", i32 2000, i32 1}
