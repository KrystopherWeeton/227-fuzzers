; ModuleID = '../../v8/src/ast/scopes.cc'
source_filename = "../../v8/src/ast/scopes.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.1290" = type { %"struct.std::__1::__atomic_base.1291" }
%"struct.std::__1::__atomic_base.1291" = type { %"struct.std::__1::__atomic_base.1292" }
%"struct.std::__1::__atomic_base.1292" = type { %"struct.std::__1::__cxx_atomic_impl.1293" }
%"struct.std::__1::__cxx_atomic_impl.1293" = type { %"struct.std::__1::__cxx_atomic_base_impl.1294" }
%"struct.std::__1::__cxx_atomic_base_impl.1294" = type { i32 }
%"class.v8::internal::VariableMap" = type { %"class.v8::base::PointerTemplateHashMapImpl" }
%"class.v8::base::PointerTemplateHashMapImpl" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::internal::ZoneAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::internal::ZoneAllocationPolicy>::Impl" = type { %"class.v8::internal::ZoneAllocationPolicy", %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"class.v8::internal::ZoneAllocationPolicy" = type { %"class.v8::internal::Zone"* }
%"struct.v8::base::TemplateHashMapEntry" = type <{ i8*, i8*, i32, [4 x i8] }>
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.11" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::set.11" = type { %"class.std::__1::__tree.12" }
%"class.std::__1::__tree.12" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::Scope" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::VariableMap", %"class.v8::base::ThreadedListBase", %"class.v8::base::ThreadedListBase.18", %"class.v8::base::ThreadedListBase.20", %"class.v8::internal::Handle.21", i32, i32, i32, i32, i8, i16, [5 x i8] }>
%"class.v8::base::ThreadedListBase" = type { %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** }
%"class.v8::internal::Variable" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, i32, i32, i16, [6 x i8] }>
%"class.v8::internal::AstRawString" = type <{ %union.anon.19, %"class.v8::internal::Vector", i32, i8, [3 x i8] }>
%union.anon.19 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::base::ThreadedListBase.18" = type { %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** }
%"class.v8::internal::VariableProxy" = type { %"class.v8::internal::Expression", %union.anon, %"class.v8::internal::VariableProxy"* }
%"class.v8::internal::Expression" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::AstNode" = type { i32, i32 }
%union.anon = type { %"class.v8::internal::AstRawString"* }
%"class.v8::base::ThreadedListBase.20" = type { %"class.v8::internal::Declaration"*, %"class.v8::internal::Declaration"** }
%"class.v8::internal::Declaration" = type { %"class.v8::internal::AstNode", %"class.v8::internal::Variable"*, %"class.v8::internal::Declaration"* }
%"class.v8::internal::Handle.21" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::DeclarationScope" = type <{ %"class.v8::internal::Scope.base", i16, i8, [2 x i8], i32, [4 x i8], %"class.v8::internal::ZoneList", %"class.v8::base::ThreadedListBase.22", %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::PreparseDataBuilder"*, %"struct.v8::internal::DeclarationScope::RareData"* }>
%"class.v8::internal::Scope.base" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::VariableMap", %"class.v8::base::ThreadedListBase", %"class.v8::base::ThreadedListBase.18", %"class.v8::base::ThreadedListBase.20", %"class.v8::internal::Handle.21", i32, i32, i32, i32, i8, i16 }>
%"class.v8::internal::ZoneList" = type { %"class.v8::internal::Variable"**, i32, i32 }
%"class.v8::base::ThreadedListBase.22" = type { %"class.v8::internal::SloppyBlockFunctionStatement"*, %"class.v8::internal::SloppyBlockFunctionStatement"** }
%"class.v8::internal::SloppyBlockFunctionStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::Variable"*, %"class.v8::internal::Statement"*, %"class.v8::internal::SloppyBlockFunctionStatement"* }
%"class.v8::internal::Statement" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::PreparseDataBuilder" = type <{ %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder::ByteData", %union.anon.30, %"class.v8::internal::DeclarationScope"*, i32, i32, i32, i8, [3 x i8] }>
%"class.v8::internal::PreparseDataBuilder::ByteData" = type <{ %union.anon.23, i8, [7 x i8] }>
%union.anon.23 = type { %struct.anon }
%struct.anon = type { %"class.std::__1::vector"*, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i8* }
%union.anon.30 = type { %"class.v8::internal::ScopedList" }
%"class.v8::internal::ScopedList" = type { %"class.std::__1::vector.31"*, i64, i64 }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { i8**, i8**, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i8** }
%"struct.v8::internal::DeclarationScope::RareData" = type { %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"* }
%"class.v8::internal::AstValueFactory" = type { %"class.v8::base::TemplateHashMapImpl.982", %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"**, %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstConsString"*, [128 x %"class.v8::internal::AstRawString"*], %"class.v8::internal::Zone"*, i64 }
%"class.v8::base::TemplateHashMapImpl.982" = type { %"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry.983"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry.983" = type <{ %union.anon.1281, i32, [4 x i8] }>
%union.anon.1281 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::AstStringConstants" = type { %"class.v8::internal::Zone", %"class.v8::base::TemplateHashMapImpl.982", i64, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"* }
%"class.v8::internal::AstConsString" = type { %"class.v8::internal::Handle", %"struct.v8::internal::AstConsString::Segment" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"struct.v8::internal::AstConsString::Segment" = type { %"class.v8::internal::AstRawString"*, %"struct.v8::internal::AstConsString::Segment"* }
%"class.v8::internal::ModuleScope" = type { %"class.v8::internal::DeclarationScope", %"class.v8::internal::SourceTextModuleDescriptor"* }
%"class.v8::internal::SourceTextModuleDescriptor" = type { %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneMultimap", %"class.v8::internal::ZoneMap.1230" }
%"class.v8::internal::ZoneSet" = type { %"class.std::__1::set.1210" }
%"class.std::__1::set.1210" = type { %"class.std::__1::__tree.1211" }
%"class.std::__1::__tree.1211" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1212", %"class.std::__1::__compressed_pair.1215" }
%"class.std::__1::__compressed_pair.1212" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.1213" }
%"struct.std::__1::__compressed_pair_elem.1213" = type { %"class.v8::internal::ZoneAllocator.1214" }
%"class.v8::internal::ZoneAllocator.1214" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector.1217" }
%"class.std::__1::vector.1217" = type { %"class.std::__1::__vector_base.1218" }
%"class.std::__1::__vector_base.1218" = type { %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**, %"class.std::__1::__compressed_pair.1219" }
%"struct.v8::internal::SourceTextModuleDescriptor::Entry" = type { %"struct.v8::internal::Scanner::Location", %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, i32, i32 }
%"struct.v8::internal::Scanner::Location" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1219" = type { %"struct.std::__1::__compressed_pair_elem.1220", %"struct.std::__1::__compressed_pair_elem.1221" }
%"struct.std::__1::__compressed_pair_elem.1220" = type { %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** }
%"struct.std::__1::__compressed_pair_elem.1221" = type { %"class.v8::internal::ZoneAllocator.1222" }
%"class.v8::internal::ZoneAllocator.1222" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneMultimap" = type { %"class.std::__1::multimap" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.1223" }
%"class.std::__1::__tree.1223" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1224", %"class.std::__1::__compressed_pair.1227" }
%"class.std::__1::__compressed_pair.1224" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.1225" }
%"struct.std::__1::__compressed_pair_elem.1225" = type { %"class.v8::internal::ZoneAllocator.1226" }
%"class.v8::internal::ZoneAllocator.1226" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1227" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::ZoneMap.1230" = type { %"class.std::__1::map.1231" }
%"class.std::__1::map.1231" = type { %"class.std::__1::__tree.1223" }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.45", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.675", %"class.std::__1::unique_ptr.696", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.706", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.840", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.853", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.863", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.875", %"struct.std::__1::atomic.200", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.950", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.995"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1004", i32, i8, i8, i32, i32, %"class.std::__1::vector.1010", %"class.std::__1::vector.1010", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1017", i64, %"class.std::__1::unordered_map.1018", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.571", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.208", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1074", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1112", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1146", %"class.std::__1::vector.1150", %"class.std::__1::vector.1150", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.39", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl.41" }
%"struct.std::__1::__cxx_atomic_impl.41" = type { %"struct.std::__1::__cxx_atomic_base_impl.42" }
%"struct.std::__1::__cxx_atomic_base_impl.42" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.43", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.43" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.74", %"class.std::__1::vector.78", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.209", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.213", %"class.std::__1::vector.213", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.356", %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.368", %"class.std::__1::unique_ptr.407", %"class.std::__1::unique_ptr.446", %"class.std::__1::unique_ptr.476", %"class.std::__1::unique_ptr.482", %"class.std::__1::unique_ptr.492", %"class.std::__1::unique_ptr.498", %"class.std::__1::unique_ptr.498", %"class.std::__1::unique_ptr.504", %"class.std::__1::unique_ptr.510", %"class.std::__1::unique_ptr.510", %"class.std::__1::unique_ptr.516", %"class.std::__1::unique_ptr.522", %"class.std::__1::shared_ptr.528", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.533", %"class.std::__1::unique_ptr.559", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.565", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.578", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.378", i8, [7 x i8], %"class.std::__1::unordered_map.584", %"class.std::__1::unordered_map.610", %"class.std::__1::unordered_map.584", %"class.std::__1::unordered_map.634", %"class.std::__1::vector.662", i8, %"class.std::__1::unique_ptr.669", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.51", %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.66", [4 x i8] }>
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53", %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.69", %"struct.std::__1::atomic.69", %"struct.std::__1::atomic.69" }
%"struct.std::__1::atomic.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl.72" }
%"struct.std::__1::__cxx_atomic_impl.72" = type { %"struct.std::__1::__cxx_atomic_base_impl.73" }
%"struct.std::__1::__cxx_atomic_base_impl.73" = type { i64 }
%"struct.std::__1::atomic.74" = type { %"struct.std::__1::__atomic_base.75" }
%"struct.std::__1::__atomic_base.75" = type { %"struct.std::__1::__cxx_atomic_impl.76" }
%"struct.std::__1::__cxx_atomic_impl.76" = type { %"struct.std::__1::__cxx_atomic_base_impl.77" }
%"struct.std::__1::__cxx_atomic_base_impl.77" = type { i32 }
%"class.std::__1::vector.78" = type { %"class.std::__1::__vector_base.79" }
%"class.std::__1::__vector_base.79" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.80" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.151" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.145" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.85", %"class.std::__1::vector.85", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.87" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.110", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.69", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.126"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.134", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.69", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.69", %"struct.std::__1::atomic.115", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.115" = type { %"struct.std::__1::__atomic_base.116" }
%"struct.std::__1::__atomic_base.116" = type { %"struct.std::__1::__cxx_atomic_impl.117" }
%"struct.std::__1::__cxx_atomic_impl.117" = type { %"struct.std::__1::__cxx_atomic_base_impl.118" }
%"struct.std::__1::__cxx_atomic_base_impl.118" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.119" }
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.121" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.126" = type { %"class.std::__1::__tree.127" }
%"class.std::__1::__tree.127" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::atomic.134" = type { %"struct.std::__1::__atomic_base.135" }
%"struct.std::__1::__atomic_base.135" = type { %"struct.std::__1::__cxx_atomic_impl.136" }
%"struct.std::__1::__cxx_atomic_impl.136" = type { %"struct.std::__1::__cxx_atomic_base_impl.137" }
%"struct.std::__1::__cxx_atomic_base_impl.137" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.138", i8, [7 x i8] }>
%"class.std::__1::vector.138" = type { %"class.std::__1::__vector_base.139" }
%"class.std::__1::__vector_base.139" = type { i64*, i64*, %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.151" = type { %"class.std::__1::__vector_base.152" }
%"class.std::__1::__vector_base.152" = type { %"struct.std::__1::pair.153"*, %"struct.std::__1::pair.153"*, %"class.std::__1::__compressed_pair.154" }
%"struct.std::__1::pair.153" = type { i32, i64 }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"struct.std::__1::pair.153"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.159" }
%"class.std::__1::unordered_map.159" = type { %"class.std::__1::__hash_table.160" }
%"class.std::__1::__hash_table.160" = type <{ %"class.std::__1::unique_ptr.161", %"class.std::__1::__compressed_pair.171", %"class.std::__1::__compressed_pair.176", %"class.std::__1::__compressed_pair.181", [4 x i8] }>
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163", %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"struct.std::__1::__hash_node_base.164"** }
%"struct.std::__1::__hash_node_base.164" = type { %"struct.std::__1::__hash_node_base.164"* }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.std::__1::__bucket_list_deallocator.166" }
%"class.std::__1::__bucket_list_deallocator.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"struct.std::__1::__hash_node_base.164" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.187", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.189" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1079", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1083", %"class.std::__1::unique_ptr.1089", %"class.std::__1::unique_ptr.522", %"class.std::__1::vector.1095", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1079" = type { %"struct.std::__1::__atomic_base.1080" }
%"struct.std::__1::__atomic_base.1080" = type { %"struct.std::__1::__cxx_atomic_impl.1081" }
%"struct.std::__1::__cxx_atomic_impl.1081" = type { %"struct.std::__1::__cxx_atomic_base_impl.1082" }
%"struct.std::__1::__cxx_atomic_base_impl.1082" = type { i32 }
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.833" }
%"class.std::__1::vector.833" = type { %"class.std::__1::__vector_base.834" }
%"class.std::__1::__vector_base.834" = type { i64**, i64**, %"class.std::__1::__compressed_pair.835" }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.836" }
%"struct.std::__1::__compressed_pair_elem.836" = type { i64** }
%"class.std::__1::unique_ptr.1089" = type { %"class.std::__1::__compressed_pair.1090" }
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.1091" }
%"struct.std::__1::__compressed_pair_elem.1091" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.833", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1095" = type { %"class.std::__1::__vector_base.1096" }
%"class.std::__1::__vector_base.1096" = type { %"struct.std::__1::pair.1097"*, %"struct.std::__1::pair.1097"*, %"class.std::__1::__compressed_pair.1098" }
%"struct.std::__1::pair.1097" = type opaque
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"struct.std::__1::pair.1097"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.200", %"struct.std::__1::atomic.204", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.204" = type { %"struct.std::__1::__atomic_base.205" }
%"struct.std::__1::__atomic_base.205" = type { %"struct.std::__1::__cxx_atomic_impl.206" }
%"struct.std::__1::__cxx_atomic_impl.206" = type { %"struct.std::__1::__cxx_atomic_base_impl.207" }
%"struct.std::__1::__cxx_atomic_base_impl.207" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.208" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.209" = type { %"struct.std::__1::__atomic_base.210" }
%"struct.std::__1::__atomic_base.210" = type { %"struct.std::__1::__cxx_atomic_impl.211" }
%"struct.std::__1::__cxx_atomic_impl.211" = type { %"struct.std::__1::__cxx_atomic_base_impl.212" }
%"struct.std::__1::__cxx_atomic_base_impl.212" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.215" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.268", %"class.std::__1::unique_ptr.274", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.328", %"class.std::__1::vector.328", %"class.std::__1::vector.328", %"class.std::__1::vector.335", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.229", %"class.std::__1::vector.230", %"class.std::__1::vector.237", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.229" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.230" = type { %"class.std::__1::__vector_base.231" }
%"class.std::__1::__vector_base.231" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.232" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.237" = type { %"class.std::__1::__vector_base.238" }
%"class.std::__1::__vector_base.238" = type { %"class.std::__1::unique_ptr.239"*, %"class.std::__1::unique_ptr.239"*, %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::unique_ptr.239" = type opaque
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.std::__1::unique_ptr.239"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.245", %"class.v8::internal::Worklist.247", %"class.v8::internal::Worklist.247", %"class.v8::internal::Worklist.247", %"class.v8::internal::Worklist.249", %"class.v8::internal::Worklist.251", %"class.v8::internal::Worklist.253", %"class.v8::internal::Worklist.255", %"class.v8::internal::Worklist.257", %"class.v8::internal::Worklist.259" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.245" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.247" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.249" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.251" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.253" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.255" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.257" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.259" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.261", i8, i64 }
%"class.std::__1::vector.261" = type { %"class.std::__1::__vector_base.262" }
%"class.std::__1::__vector_base.262" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.277" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.229"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.277" = type { %"class.std::__1::__hash_table.278" }
%"class.std::__1::__hash_table.278" = type <{ %"class.std::__1::unique_ptr.279", %"class.std::__1::__compressed_pair.289", %"class.std::__1::__compressed_pair.294", %"class.std::__1::__compressed_pair.297", [4 x i8] }>
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281", %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"struct.std::__1::__hash_node_base.282"** }
%"struct.std::__1::__hash_node_base.282" = type { %"struct.std::__1::__hash_node_base.282"* }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.std::__1::__bucket_list_deallocator.284" }
%"class.std::__1::__bucket_list_deallocator.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"struct.std::__1::__hash_node_base.282" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.304" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::vector.328" = type { %"class.std::__1::__vector_base.329" }
%"class.std::__1::__vector_base.329" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.335" = type { %"class.std::__1::__vector_base.336" }
%"class.std::__1::__vector_base.336" = type { %"struct.std::__1::pair.337"*, %"struct.std::__1::pair.337"*, %"class.std::__1::__compressed_pair.338" }
%"struct.std::__1::pair.337" = type opaque
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"struct.std::__1::pair.337"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.343", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.328"], [3 x %"class.std::__1::vector.328"], i8, %"struct.std::__1::atomic.200", [6 x i8], %"class.std::__1::vector.328", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.353"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.328", %"class.std::__1::vector.328", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.353" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.356" = type { %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.378", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.371"], %"class.std::__1::unique_ptr.343" }
%"class.std::__1::vector.371" = type { %"class.std::__1::__vector_base.372" }
%"class.std::__1::__vector_base.372" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.410", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.414", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.419" }
%"struct.std::__1::atomic.410" = type { %"struct.std::__1::__atomic_base.411" }
%"struct.std::__1::__atomic_base.411" = type { %"struct.std::__1::__cxx_atomic_impl.412" }
%"struct.std::__1::__cxx_atomic_impl.412" = type { %"struct.std::__1::__cxx_atomic_base_impl.413" }
%"struct.std::__1::__cxx_atomic_base_impl.413" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.414" = type { %"struct.std::__1::__atomic_base.415" }
%"struct.std::__1::__atomic_base.415" = type { %"struct.std::__1::__cxx_atomic_impl.416" }
%"struct.std::__1::__cxx_atomic_impl.416" = type { %"struct.std::__1::__cxx_atomic_base_impl.417" }
%"struct.std::__1::__cxx_atomic_base_impl.417" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.419" = type { %"class.std::__1::__hash_table.420" }
%"class.std::__1::__hash_table.420" = type <{ %"class.std::__1::unique_ptr.421", %"class.std::__1::__compressed_pair.431", %"class.std::__1::__compressed_pair.436", %"class.std::__1::__compressed_pair.439", [4 x i8] }>
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423", %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"struct.std::__1::__hash_node_base.424"** }
%"struct.std::__1::__hash_node_base.424" = type { %"struct.std::__1::__hash_node_base.424"* }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.std::__1::__bucket_list_deallocator.426" }
%"class.std::__1::__bucket_list_deallocator.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"struct.std::__1::__hash_node_base.424" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.343", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.200", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.449", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.449" = type { %"class.std::__1::__hash_table.450" }
%"class.std::__1::__hash_table.450" = type <{ %"class.std::__1::unique_ptr.451", %"class.std::__1::__compressed_pair.461", %"class.std::__1::__compressed_pair.466", %"class.std::__1::__compressed_pair.469", [4 x i8] }>
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453", %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"struct.std::__1::__hash_node_base.454"** }
%"struct.std::__1::__hash_node_base.454" = type { %"struct.std::__1::__hash_node_base.454"* }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.std::__1::__bucket_list_deallocator.456" }
%"class.std::__1::__bucket_list_deallocator.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"struct.std::__1::__hash_node_base.454" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.485" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.528" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.529", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.2", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.529" = type { %"struct.std::__1::__atomic_base.530" }
%"struct.std::__1::__atomic_base.530" = type { %"struct.std::__1::__cxx_atomic_impl.531" }
%"struct.std::__1::__cxx_atomic_impl.531" = type { %"struct.std::__1::__cxx_atomic_base_impl.532" }
%"struct.std::__1::__cxx_atomic_base_impl.532" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.533" = type { %"class.std::__1::__hash_table.534" }
%"class.std::__1::__hash_table.534" = type <{ %"class.std::__1::unique_ptr.535", %"class.std::__1::__compressed_pair.545", %"class.std::__1::__compressed_pair.550", %"class.std::__1::__compressed_pair.553", [4 x i8] }>
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537", %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"struct.std::__1::__hash_node_base.538"** }
%"struct.std::__1::__hash_node_base.538" = type { %"struct.std::__1::__hash_node_base.538"* }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.std::__1::__bucket_list_deallocator.540" }
%"class.std::__1::__bucket_list_deallocator.540" = type { %"class.std::__1::__compressed_pair.541" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"struct.std::__1::__hash_node_base.538" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::unique_ptr.559" = type { %"class.std::__1::__compressed_pair.560" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.565" = type { %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.571", %"class.std::__1::vector.571" }
%"class.std::__1::unique_ptr.578" = type { %"class.std::__1::__compressed_pair.579" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.378" = type { %"class.std::__1::__hash_table.379" }
%"class.std::__1::__hash_table.379" = type <{ %"class.std::__1::unique_ptr.380", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", %"class.std::__1::__compressed_pair.399", [4 x i8] }>
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382", %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.std::__1::__hash_node_base.383"** }
%"struct.std::__1::__hash_node_base.383" = type { %"struct.std::__1::__hash_node_base.383"* }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"class.std::__1::__bucket_list_deallocator.385" }
%"class.std::__1::__bucket_list_deallocator.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"struct.std::__1::__hash_node_base.383" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::unordered_map.610" = type { %"class.std::__1::__hash_table.611" }
%"class.std::__1::__hash_table.611" = type <{ %"class.std::__1::unique_ptr.612", %"class.std::__1::__compressed_pair.622", %"class.std::__1::__compressed_pair.627", %"class.std::__1::__compressed_pair.630", [4 x i8] }>
%"class.std::__1::unique_ptr.612" = type { %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.614", %"struct.std::__1::__compressed_pair_elem.616" }
%"struct.std::__1::__compressed_pair_elem.614" = type { %"struct.std::__1::__hash_node_base.615"** }
%"struct.std::__1::__hash_node_base.615" = type { %"struct.std::__1::__hash_node_base.615"* }
%"struct.std::__1::__compressed_pair_elem.616" = type { %"class.std::__1::__bucket_list_deallocator.617" }
%"class.std::__1::__bucket_list_deallocator.617" = type { %"class.std::__1::__compressed_pair.618" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"struct.std::__1::__hash_node_base.615" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::unordered_map.584" = type { %"class.std::__1::__hash_table.585" }
%"class.std::__1::__hash_table.585" = type <{ %"class.std::__1::unique_ptr.586", %"class.std::__1::__compressed_pair.596", %"class.std::__1::__compressed_pair.601", %"class.std::__1::__compressed_pair.604", [4 x i8] }>
%"class.std::__1::unique_ptr.586" = type { %"class.std::__1::__compressed_pair.587" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588", %"struct.std::__1::__compressed_pair_elem.590" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"struct.std::__1::__hash_node_base.589"** }
%"struct.std::__1::__hash_node_base.589" = type { %"struct.std::__1::__hash_node_base.589"* }
%"struct.std::__1::__compressed_pair_elem.590" = type { %"class.std::__1::__bucket_list_deallocator.591" }
%"class.std::__1::__bucket_list_deallocator.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"struct.std::__1::__hash_node_base.589" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::unordered_map.634" = type { %"class.std::__1::__hash_table.635" }
%"class.std::__1::__hash_table.635" = type <{ %"class.std::__1::unique_ptr.636", %"class.std::__1::__compressed_pair.646", %"class.std::__1::__compressed_pair.651", %"class.std::__1::__compressed_pair.656", [4 x i8] }>
%"class.std::__1::unique_ptr.636" = type { %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638", %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"struct.std::__1::__hash_node_base.639"** }
%"struct.std::__1::__hash_node_base.639" = type { %"struct.std::__1::__hash_node_base.639"* }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.std::__1::__bucket_list_deallocator.641" }
%"class.std::__1::__bucket_list_deallocator.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"struct.std::__1::__hash_node_base.639" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::vector.662" = type { %"class.std::__1::__vector_base.663" }
%"class.std::__1::__vector_base.663" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.664" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.669" = type { %"class.std::__1::__compressed_pair.670" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.571" }
%"class.std::__1::shared_ptr.675" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.187", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.676", %"class.std::__1::unique_ptr.690" }
%"class.std::__1::unique_ptr.676" = type { %"class.std::__1::__compressed_pair.677" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.678" }
%"struct.std::__1::__compressed_pair_elem.678" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.679" }
%"class.std::__1::vector.679" = type { %"class.std::__1::__vector_base.680" }
%"class.std::__1::__vector_base.680" = type { %"class.std::__1::unique_ptr.681"*, %"class.std::__1::unique_ptr.681"*, %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::unique_ptr.681" = type { %"class.std::__1::__compressed_pair.1284" }
%"class.std::__1::__compressed_pair.1284" = type { %"struct.std::__1::__compressed_pair_elem.1285" }
%"struct.std::__1::__compressed_pair_elem.1285" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.std::__1::unique_ptr.681"* }
%"class.std::__1::unique_ptr.690" = type { %"class.std::__1::__compressed_pair.691" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.699", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.699" = type { %"struct.std::__1::__atomic_base.700" }
%"struct.std::__1::__atomic_base.700" = type { %"struct.std::__1::__cxx_atomic_impl.701" }
%"struct.std::__1::__cxx_atomic_impl.701" = type { %"struct.std::__1::__cxx_atomic_base_impl.702" }
%"struct.std::__1::__cxx_atomic_base_impl.702" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.706" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.707", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.707" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.708", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.708" = type { %"class.std::__1::__vector_base.709" }
%"class.std::__1::__vector_base.709" = type { %"class.std::__1::unique_ptr.710"*, %"class.std::__1::unique_ptr.710"*, %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::unique_ptr.710" = type opaque
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.std::__1::unique_ptr.710"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.716 }
%union.anon.716 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.717", %"class.std::__1::unique_ptr.723", %"struct.std::__1::atomic.200", %"class.std::__1::unique_ptr.729", %"class.std::__1::unique_ptr.735", %"class.std::__1::unique_ptr.741", %"class.std::__1::unique_ptr.747", %"class.std::__1::unique_ptr.753", %"class.std::__1::set.759", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.735" = type { %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.741" = type { %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.759" = type { %"class.std::__1::__tree.760" }
%"class.std::__1::__tree.760" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.761", %"class.std::__1::__compressed_pair.765" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.768" }
%"class.v8::internal::TaggedImpl.768" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.767" }
%"class.v8::internal::TaggedImpl.767" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.769", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.769" = type { %"class.std::__1::__compressed_pair.770" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.771" }
%"struct.std::__1::__compressed_pair_elem.771" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.775", %"class.v8::internal::DetachableVector.776", %"class.v8::internal::DetachableVector.775", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.776" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.775" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.777", %"class.std::__1::vector.783", %"class.std::__1::unique_ptr.790", %"class.std::__1::vector.797", %"class.std::__1::unique_ptr.804", i64, %"class.std::__1::vector.810", %"class.std::__1::vector.818", %"class.std::__1::vector.826", i8, i8, i32 }
%"class.std::__1::unique_ptr.777" = type { %"class.std::__1::__compressed_pair.778" }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.779" }
%"struct.std::__1::__compressed_pair_elem.779" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.783" = type { %"class.std::__1::__vector_base.784" }
%"class.std::__1::__vector_base.784" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.785" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.790" = type { %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"class.v8::internal::GlobalHandles::NodeSpace.793"* }
%"class.v8::internal::GlobalHandles::NodeSpace.793" = type opaque
%"class.std::__1::vector.797" = type { %"class.std::__1::__vector_base.798" }
%"class.std::__1::__vector_base.798" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.799" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.804" = type { %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.810" = type { %"class.std::__1::__vector_base.811" }
%"class.std::__1::__vector_base.811" = type { %"struct.std::__1::pair.812"*, %"struct.std::__1::pair.812"*, %"class.std::__1::__compressed_pair.813" }
%"struct.std::__1::pair.812" = type opaque
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { %"struct.std::__1::pair.812"* }
%"class.std::__1::vector.818" = type { %"class.std::__1::__vector_base.819" }
%"class.std::__1::__vector_base.819" = type { %"struct.std::__1::pair.820"*, %"struct.std::__1::pair.820"*, %"class.std::__1::__compressed_pair.821" }
%"struct.std::__1::pair.820" = type opaque
%"class.std::__1::__compressed_pair.821" = type { %"struct.std::__1::__compressed_pair_elem.822" }
%"struct.std::__1::__compressed_pair_elem.822" = type { %"struct.std::__1::pair.820"* }
%"class.std::__1::vector.826" = type { %"class.std::__1::__vector_base.827" }
%"class.std::__1::__vector_base.827" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.828" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.833", %"class.std::__1::vector.840" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.847" }
%"class.std::__1::unique_ptr.847" = type { %"class.std::__1::__compressed_pair.848" }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.849" }
%"struct.std::__1::__compressed_pair_elem.849" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.840" = type { %"class.std::__1::__vector_base.841" }
%"class.std::__1::__vector_base.841" = type { i32*, i32*, %"class.std::__1::__compressed_pair.842" }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.843" }
%"struct.std::__1::__compressed_pair_elem.843" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.853" = type { %"struct.std::__1::__atomic_base.854" }
%"struct.std::__1::__atomic_base.854" = type { %"struct.std::__1::__cxx_atomic_impl.855" }
%"struct.std::__1::__cxx_atomic_impl.855" = type { %"struct.std::__1::__cxx_atomic_base_impl.856" }
%"struct.std::__1::__cxx_atomic_base_impl.856" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.863" = type { %"struct.std::__1::__atomic_base.864" }
%"struct.std::__1::__atomic_base.864" = type { %"struct.std::__1::__cxx_atomic_impl.865" }
%"struct.std::__1::__cxx_atomic_impl.865" = type { %"struct.std::__1::__cxx_atomic_base_impl.866" }
%"struct.std::__1::__cxx_atomic_base_impl.866" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.870 }
%union.anon.870 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.875" = type { %"class.std::__1::__hash_table.876" }
%"class.std::__1::__hash_table.876" = type <{ %"class.std::__1::unique_ptr.877", %"class.std::__1::__compressed_pair.887", %"class.std::__1::__compressed_pair.892", %"class.std::__1::__compressed_pair.895", [4 x i8] }>
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879", %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"struct.std::__1::__hash_node_base.880"** }
%"struct.std::__1::__hash_node_base.880" = type { %"struct.std::__1::__hash_node_base.880"* }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"class.std::__1::__bucket_list_deallocator.882" }
%"class.std::__1::__bucket_list_deallocator.882" = type { %"class.std::__1::__compressed_pair.883" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.888" }
%"struct.std::__1::__compressed_pair_elem.888" = type { %"struct.std::__1::__hash_node_base.880" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::atomic.200" = type { %"struct.std::__1::__atomic_base.201" }
%"struct.std::__1::__atomic_base.201" = type { %"struct.std::__1::__cxx_atomic_impl.202" }
%"struct.std::__1::__cxx_atomic_impl.202" = type { %"struct.std::__1::__cxx_atomic_base_impl.203" }
%"struct.std::__1::__cxx_atomic_base_impl.203" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.901", %"class.v8::internal::Handle.907", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.908", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.901" = type { %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.907" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.908" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"class.std::__1::unique_ptr.923", %"class.std::__1::unique_ptr.929", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.935", %"class.std::__1::vector.941", %"struct.std::__1::pair.949" }
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"class.std::__1::unique_ptr.917"*, %"class.std::__1::unique_ptr.917"*, %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::unique_ptr.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"class.std::__1::unique_ptr.917"* }
%"class.std::__1::unique_ptr.923" = type { %"class.std::__1::__compressed_pair.924" }
%"class.std::__1::__compressed_pair.924" = type { %"struct.std::__1::__compressed_pair_elem.925" }
%"struct.std::__1::__compressed_pair_elem.925" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.937" }
%"struct.std::__1::__compressed_pair_elem.937" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.941" = type { %"class.std::__1::__vector_base.942" }
%"class.std::__1::__vector_base.942" = type { %"struct.std::__1::pair.943"*, %"struct.std::__1::pair.943"*, %"class.std::__1::__compressed_pair.944" }
%"struct.std::__1::pair.943" = type opaque
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.945" }
%"struct.std::__1::__compressed_pair_elem.945" = type { %"struct.std::__1::pair.943"* }
%"struct.std::__1::pair.949" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.44"*, i16, i8*)*, i8* }
%"class.v8::Local.44" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.950" = type { %"class.std::__1::__compressed_pair.951" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.953", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.953" = type { %"class.std::__1::__hash_table.954" }
%"class.std::__1::__hash_table.954" = type <{ %"class.std::__1::unique_ptr.955", %"class.std::__1::__compressed_pair.965", %"class.std::__1::__compressed_pair.970", %"class.std::__1::__compressed_pair.974", [4 x i8] }>
%"class.std::__1::unique_ptr.955" = type { %"class.std::__1::__compressed_pair.956" }
%"class.std::__1::__compressed_pair.956" = type { %"struct.std::__1::__compressed_pair_elem.957", %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.957" = type { %"struct.std::__1::__hash_node_base.958"** }
%"struct.std::__1::__hash_node_base.958" = type { %"struct.std::__1::__hash_node_base.958"* }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"class.std::__1::__bucket_list_deallocator.960" }
%"class.std::__1::__bucket_list_deallocator.960" = type { %"class.std::__1::__compressed_pair.961" }
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.966" }
%"struct.std::__1::__compressed_pair_elem.966" = type { %"struct.std::__1::__hash_node_base.958" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.974" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.990" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.984"**, %"struct.std::__1::pair.984"**, %"struct.std::__1::pair.984"**, %"class.std::__1::__compressed_pair.985" }
%"struct.std::__1::pair.984" = type opaque
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"struct.std::__1::pair.984"** }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.995" = type { %"class.std::__1::__vector_base.996" }
%"class.std::__1::__vector_base.996" = type { %"class.v8::internal::Handle.997"*, %"class.v8::internal::Handle.997"*, %"class.std::__1::__compressed_pair.998" }
%"class.v8::internal::Handle.997" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"class.v8::internal::Handle.997"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector.1003", [128 x i8] }
%"class.v8::internal::Vector.1003" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.858", i32, %"class.v8::Local.44" }
%"class.v8::Local.858" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1004" = type { %"class.std::__1::__compressed_pair.1005" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1010" = type { %"class.std::__1::__vector_base.1011" }
%"class.std::__1::__vector_base.1011" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1012" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.1013" }
%"struct.std::__1::__compressed_pair_elem.1013" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1017" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1018" = type { %"class.std::__1::__hash_table.1019" }
%"class.std::__1::__hash_table.1019" = type <{ %"class.std::__1::unique_ptr.1020", %"class.std::__1::__compressed_pair.1030", %"class.std::__1::__compressed_pair.1035", %"class.std::__1::__compressed_pair.1038", [4 x i8] }>
%"class.std::__1::unique_ptr.1020" = type { %"class.std::__1::__compressed_pair.1021" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.1022", %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1022" = type { %"struct.std::__1::__hash_node_base.1023"** }
%"struct.std::__1::__hash_node_base.1023" = type { %"struct.std::__1::__hash_node_base.1023"* }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.std::__1::__bucket_list_deallocator.1025" }
%"class.std::__1::__bucket_list_deallocator.1025" = type { %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.1031" }
%"struct.std::__1::__compressed_pair_elem.1031" = type { %"struct.std::__1::__hash_node_base.1023" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.571" = type { %"class.std::__1::__vector_base.572" }
%"class.std::__1::__vector_base.572" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.208" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1042", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1071", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1072", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1042" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1067, %union.anon.1069, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1067 = type { i64 }
%union.anon.1069 = type { i64 }
%"class.std::__1::weak_ptr.1071" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1072" = type { %"class.v8::PersistentBase.1073" }
%"class.v8::PersistentBase.1073" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1043", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1043" = type { %"class.std::__1::__hash_table.1044" }
%"class.std::__1::__hash_table.1044" = type <{ %"class.std::__1::unique_ptr.1045", %"class.std::__1::__compressed_pair.1055", %"class.std::__1::__compressed_pair.1060", %"class.std::__1::__compressed_pair.1063", [4 x i8] }>
%"class.std::__1::unique_ptr.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047", %"struct.std::__1::__compressed_pair_elem.1049" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"struct.std::__1::__hash_node_base.1048"** }
%"struct.std::__1::__hash_node_base.1048" = type { %"struct.std::__1::__hash_node_base.1048"* }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"class.std::__1::__bucket_list_deallocator.1050" }
%"class.std::__1::__bucket_list_deallocator.1050" = type { %"class.std::__1::__compressed_pair.1051" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"struct.std::__1::__hash_node_base.1048" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1103", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1103" = type { %"class.std::__1::__compressed_pair.1104" }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.1105" }
%"struct.std::__1::__compressed_pair_elem.1105" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1112" = type { %"class.std::__1::__compressed_pair.1113" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.1114" }
%"struct.std::__1::__compressed_pair_elem.1114" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.859", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.859" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1120" }
%"class.std::__1::unordered_map.1120" = type { %"class.std::__1::__hash_table.1121" }
%"class.std::__1::__hash_table.1121" = type <{ %"class.std::__1::unique_ptr.1122", %"class.std::__1::__compressed_pair.1132", %"class.std::__1::__compressed_pair.1137", %"class.std::__1::__compressed_pair.1140", [4 x i8] }>
%"class.std::__1::unique_ptr.1122" = type { %"class.std::__1::__compressed_pair.1123" }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124", %"struct.std::__1::__compressed_pair_elem.1126" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.std::__1::__hash_node_base.1125"** }
%"struct.std::__1::__hash_node_base.1125" = type { %"struct.std::__1::__hash_node_base.1125"* }
%"struct.std::__1::__compressed_pair_elem.1126" = type { %"class.std::__1::__bucket_list_deallocator.1127" }
%"class.std::__1::__bucket_list_deallocator.1127" = type { %"class.std::__1::__compressed_pair.1128" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.1133" }
%"struct.std::__1::__compressed_pair_elem.1133" = type { %"struct.std::__1::__hash_node_base.1125" }
%"class.std::__1::__compressed_pair.1137" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1140" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::atomic.1146" = type { %"struct.std::__1::__atomic_base.1147" }
%"struct.std::__1::__atomic_base.1147" = type { %"struct.std::__1::__cxx_atomic_impl.1148" }
%"struct.std::__1::__cxx_atomic_impl.1148" = type { %"struct.std::__1::__cxx_atomic_base_impl.1149" }
%"struct.std::__1::__cxx_atomic_base_impl.1149" = type { %"class.std::__1::vector.1150"* }
%"class.std::__1::vector.1150" = type { %"class.std::__1::__vector_base.1151" }
%"class.std::__1::__vector_base.1151" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1152" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::ClassScope" = type <{ %"class.v8::internal::Scope.base", [5 x i8], %"class.v8::internal::PointerWithPayload", %"class.v8::internal::Variable"*, i8, i8, i8, i8, [4 x i8] }>
%"class.v8::internal::PointerWithPayload" = type { i64 }
%"class.v8::internal::PrivateNameScopeIterator" = type { i8, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"* }
%"class.v8::internal::ScopeInfo" = type { %"class.v8::internal::TorqueGeneratedScopeInfo" }
%"class.v8::internal::TorqueGeneratedScopeInfo" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::VariableLookupResult" = type { i32, i32, i8, i8, i8, i8, i8 }
%"class.v8::internal::ParseInfo" = type <{ %"class.v8::internal::UnoptimizedCompileFlags", [4 x i8], %"class.v8::internal::UnoptimizedCompileState"*, %"class.std::__1::unique_ptr.1178", %"class.v8::Extension"*, %"class.v8::internal::DeclarationScope"*, i64, i32, i32, %"class.std::__1::unique_ptr.1184", %"class.std::__1::unique_ptr.1190", %"class.std::__1::unique_ptr.1196", %"class.v8::internal::AstRawString"*, %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::SourceRangeMap"*, %"class.v8::internal::FunctionLiteral"*, i8, [7 x i8] }>
%"class.v8::internal::UnoptimizedCompileFlags" = type <{ i32, i32, i8, i8, [2 x i8] }>
%"class.v8::internal::UnoptimizedCompileState" = type { i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::PendingCompilationErrorHandler", %"class.v8::internal::Logger"*, %"class.std::__1::unique_ptr.1163" }
%"class.v8::internal::PendingCompilationErrorHandler" = type { i8, i8, i8, [5 x i8], %"class.v8::internal::PendingCompilationErrorHandler::MessageDetails", %"class.std::__1::forward_list" }
%"class.v8::internal::PendingCompilationErrorHandler::MessageDetails" = type <{ i32, i32, i32, [4 x i8], %union.anon.1157, i32, [4 x i8] }>
%union.anon.1157 = type { %"class.v8::internal::AstRawString"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.1158" }
%"class.std::__1::__compressed_pair.1158" = type { %"struct.std::__1::__compressed_pair_elem.1159" }
%"struct.std::__1::__compressed_pair_elem.1159" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.v8::internal::PendingCompilationErrorHandler::MessageDetails" }
%"class.std::__1::unique_ptr.1163" = type { %"class.std::__1::__compressed_pair.1164" }
%"class.std::__1::__compressed_pair.1164" = type { %"struct.std::__1::__compressed_pair_elem.1165" }
%"struct.std::__1::__compressed_pair_elem.1165" = type { %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* }
%"class.v8::internal::UnoptimizedCompileState::ParallelTasks" = type { %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::forward_list.1166" }
%"class.std::__1::forward_list.1166" = type { %"class.std::__1::__forward_list_base.1167" }
%"class.std::__1::__forward_list_base.1167" = type { %"class.std::__1::__compressed_pair.1168" }
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.1169" }
%"struct.std::__1::__compressed_pair_elem.1169" = type { %"struct.std::__1::__forward_begin_node.1170" }
%"struct.std::__1::__forward_begin_node.1170" = type { %"struct.std::__1::__forward_list_node.1171"* }
%"struct.std::__1::__forward_list_node.1171" = type { %"struct.std::__1::__forward_begin_node.1170", %"struct.std::__1::pair.1283" }
%"struct.std::__1::pair.1283" = type { %"class.v8::internal::FunctionLiteral"*, i64 }
%"class.std::__1::unique_ptr.1178" = type { %"class.std::__1::__compressed_pair.1179" }
%"class.std::__1::__compressed_pair.1179" = type { %"struct.std::__1::__compressed_pair_elem.1180" }
%"struct.std::__1::__compressed_pair_elem.1180" = type { %"class.v8::internal::Zone"* }
%"class.v8::Extension" = type <{ i32 (...)**, i8*, i64, %"class.v8::String::ExternalOneByteStringResource"*, i32, [4 x i8], i8**, i8, [7 x i8] }>
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1184" = type { %"class.std::__1::__compressed_pair.1185" }
%"class.std::__1::__compressed_pair.1185" = type { %"struct.std::__1::__compressed_pair_elem.1186" }
%"struct.std::__1::__compressed_pair_elem.1186" = type { %"class.v8::internal::Utf16CharacterStream"* }
%"class.v8::internal::Utf16CharacterStream" = type <{ i32 (...)**, i16*, i16*, i16*, i64, %"class.v8::internal::RuntimeCallStats"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1190" = type { %"class.std::__1::__compressed_pair.1191" }
%"class.std::__1::__compressed_pair.1191" = type { %"struct.std::__1::__compressed_pair_elem.1192" }
%"struct.std::__1::__compressed_pair_elem.1192" = type { %"class.v8::internal::ConsumedPreparseData"* }
%"class.v8::internal::ConsumedPreparseData" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1196" = type { %"class.std::__1::__compressed_pair.1197" }
%"class.std::__1::__compressed_pair.1197" = type { %"struct.std::__1::__compressed_pair_elem.1198" }
%"struct.std::__1::__compressed_pair_elem.1198" = type { %"class.v8::internal::AstValueFactory"* }
%"class.v8::internal::SourceRangeMap" = type { %"class.v8::internal::ZoneMap" }
%"class.v8::internal::ZoneMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.1202" }
%"class.std::__1::__tree.1202" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1203", %"class.std::__1::__compressed_pair.1205" }
%"class.std::__1::__compressed_pair.1203" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.1204" }
%"struct.std::__1::__compressed_pair_elem.1204" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1205" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::FunctionLiteral" = type { %"class.v8::internal::Expression", i32, i32, i32, i32, i32, i32, %"class.v8::internal::AstConsString"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::ZoneList.1209", %"class.v8::internal::AstConsString"*, %"class.v8::internal::Handle", %"class.v8::internal::ProducedPreparseData"* }
%"class.v8::internal::ZoneList.1209" = type { %"class.v8::internal::Statement"**, i32, i32 }
%"class.v8::internal::ProducedPreparseData" = type { i32 (...)** }
%"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef" = type { %"class.v8::internal::ScopeInfo" }
%"struct.v8::internal::ClassScope::RareData" = type { %"class.v8::base::ThreadedListBase.18", %"class.v8::internal::VariableMap", %"class.v8::internal::Variable"* }
%"class.v8::internal::AstNodeFactory" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::EmptyStatement"*, %"class.v8::internal::ThisExpression"*, %"class.v8::internal::FailureExpression"* }
%"class.v8::internal::EmptyStatement" = type { %"class.v8::internal::Statement" }
%"class.v8::internal::ThisExpression" = type { %"class.v8::internal::Expression" }
%"class.v8::internal::FailureExpression" = type { %"class.v8::internal::Expression" }
%"class.v8::internal::VariableDeclaration" = type { %"class.v8::internal::Declaration" }
%"class.v8::internal::Assignment" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"* }
%"class.v8::internal::ExpressionStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::Expression"* }
%"class.v8::internal::BinaryOperation" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"* }
%"class.v8::internal::CompoundAssignment" = type { %"class.v8::internal::Assignment", %"class.v8::internal::BinaryOperation"* }
%"class.v8::internal::RuntimeCallTimerScope" = type { %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }
%"class.v8::internal::Scope::Snapshot" = type { %"class.v8::internal::PointerWithPayload.1237", %"class.v8::internal::Scope"*, %"class.v8::base::ThreadedListBase<v8::internal::VariableProxy, v8::base::EmptyBase, v8::internal::VariableProxy::UnresolvedNext>::Iterator", %"class.v8::base::ThreadedListBase<v8::internal::Variable, v8::base::EmptyBase, v8::base::ThreadedListTraits<v8::internal::Variable> >::Iterator" }
%"class.v8::internal::PointerWithPayload.1237" = type { i64 }
%"class.v8::base::ThreadedListBase<v8::internal::VariableProxy, v8::base::EmptyBase, v8::internal::VariableProxy::UnresolvedNext>::Iterator" = type { %"class.v8::internal::VariableProxy"** }
%"class.v8::base::ThreadedListBase<v8::internal::Variable, v8::base::EmptyBase, v8::base::ThreadedListTraits<v8::internal::Variable> >::Iterator" = type { %"class.v8::internal::Variable"** }
%"class.v8::internal::Handle.1243" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Parser" = type <{ %"class.v8::internal::ParserBase.base", [6 x i8], %"class.v8::internal::ParseInfo"*, %"class.v8::internal::Scanner", %"class.v8::internal::Zone", %"class.v8::internal::PreParser"*, i32, [4 x i8], %"class.v8::internal::MaybeHandle.1274", %"class.v8::internal::SourceRangeMap"*, i32, i32, [113 x i32], i32, i8, i8, [6 x i8], %"class.v8::internal::ConsumedPreparseData"*, %"class.std::__1::vector", i32, [4 x i8] }>
%"class.v8::internal::ParserBase.base" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::ParserBase<v8::internal::Parser>::FunctionState"*, %"class.v8::Extension"*, %"class.v8::internal::FuncNameInferrer", %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::AstNodeFactory", %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::Logger"*, i8, [7 x i8], i64, %"class.v8::internal::PendingCompilationErrorHandler"*, %"class.v8::internal::Zone"*, %"class.v8::internal::ExpressionScope"*, %"class.std::__1::vector.31", %"class.std::__1::vector.1260", %"class.v8::internal::Scanner"*, %"class.v8::internal::UnoptimizedCompileFlags", i32, i8, [7 x i8], %"struct.v8::internal::ParserFormalParameters"*, %"struct.v8::internal::ParserBase<v8::internal::Parser>::NextArrowFunctionInfo", i8, i8 }>
%"class.v8::internal::ParserBase<v8::internal::Parser>::FunctionState" = type <{ %"class.v8::internal::ParserBase<v8::internal::Parser>::BlockState", i32, i32, i32, [4 x i8], %"class.v8::internal::ParserBase<v8::internal::Parser>::FunctionState"**, %"class.v8::internal::ParserBase<v8::internal::Parser>::FunctionState"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::ParserBase<v8::internal::Parser>::Target"*, i8, i8, i8, i8, [4 x i8] }>
%"class.v8::internal::ParserBase<v8::internal::Parser>::BlockState" = type { %"class.v8::internal::Scope"**, %"class.v8::internal::Scope"* }
%"class.v8::internal::ParserBase<v8::internal::Parser>::Target" = type opaque
%"class.v8::internal::FuncNameInferrer" = type { %"class.v8::internal::AstValueFactory"*, %"class.std::__1::vector.1245", %"class.std::__1::vector.1253", i64 }
%"class.std::__1::vector.1245" = type { %"class.std::__1::__vector_base.1246" }
%"class.std::__1::__vector_base.1246" = type { %"struct.v8::internal::FuncNameInferrer::Name"*, %"struct.v8::internal::FuncNameInferrer::Name"*, %"class.std::__1::__compressed_pair.1248" }
%"struct.v8::internal::FuncNameInferrer::Name" = type { %"class.v8::internal::PointerWithPayload.1247" }
%"class.v8::internal::PointerWithPayload.1247" = type { i64 }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.1249" }
%"struct.std::__1::__compressed_pair_elem.1249" = type { %"struct.v8::internal::FuncNameInferrer::Name"* }
%"class.std::__1::vector.1253" = type { %"class.std::__1::__vector_base.1254" }
%"class.std::__1::__vector_base.1254" = type { %"class.v8::internal::FunctionLiteral"**, %"class.v8::internal::FunctionLiteral"**, %"class.std::__1::__compressed_pair.1255" }
%"class.std::__1::__compressed_pair.1255" = type { %"struct.std::__1::__compressed_pair_elem.1256" }
%"struct.std::__1::__compressed_pair_elem.1256" = type { %"class.v8::internal::FunctionLiteral"** }
%"class.v8::internal::ExpressionScope" = type <{ %"class.v8::internal::Parser"*, %"class.v8::internal::ExpressionScope"*, i8, i8, i8, [5 x i8] }>
%"class.std::__1::vector.1260" = type { %"class.std::__1::__vector_base.1261" }
%"class.std::__1::__vector_base.1261" = type { %"struct.std::__1::pair.1262"*, %"struct.std::__1::pair.1262"*, %"class.std::__1::__compressed_pair.1263" }
%"struct.std::__1::pair.1262" = type <{ %"class.v8::internal::VariableProxy"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1263" = type { %"struct.std::__1::__compressed_pair_elem.1264" }
%"struct.std::__1::__compressed_pair_elem.1264" = type { %"struct.std::__1::pair.1262"* }
%"struct.v8::internal::ParserFormalParameters" = type <{ %"struct.v8::internal::FormalParametersBase.base", [4 x i8], %"class.v8::base::ThreadedListBase.1268", %"struct.v8::internal::Scanner::Location", %"struct.v8::internal::Scanner::Location", i32, [4 x i8] }>
%"struct.v8::internal::FormalParametersBase.base" = type <{ %"class.v8::internal::DeclarationScope"*, i8, i8, [2 x i8], i32, i32 }>
%"class.v8::base::ThreadedListBase.1268" = type { %"struct.v8::internal::ParserFormalParameters::Parameter"*, %"struct.v8::internal::ParserFormalParameters::Parameter"** }
%"struct.v8::internal::ParserFormalParameters::Parameter" = type { %"class.v8::internal::PointerWithPayload.1269", %"class.v8::internal::Expression"*, i32, i32, %"struct.v8::internal::ParserFormalParameters::Parameter"* }
%"class.v8::internal::PointerWithPayload.1269" = type { i64 }
%"struct.v8::internal::ParserBase<v8::internal::Parser>::NextArrowFunctionInfo" = type { %"struct.v8::internal::Scanner::Location", i32, %"class.v8::internal::DeclarationScope"* }
%"class.v8::internal::Scanner" = type { %"class.v8::internal::UnoptimizedCompileFlags", %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"*, %"class.v8::internal::Utf16CharacterStream"*, i32, [4 x i8], [3 x %"struct.v8::internal::Scanner::TokenDesc"], i8, [7 x i8], %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer", %"struct.v8::internal::Scanner::Location", i32, i32, %"struct.v8::internal::Scanner::Location" }
%"struct.v8::internal::Scanner::TokenDesc" = type <{ %"struct.v8::internal::Scanner::Location", %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer", i8, [3 x i8], i32, %"struct.v8::internal::Scanner::Location", i32, i8, [3 x i8] }>
%"class.v8::internal::LiteralBuffer" = type <{ %"class.v8::internal::Vector.29", i32, i8, [3 x i8] }>
%"class.v8::internal::Vector.29" = type { i8*, i64 }
%"class.v8::internal::PreParser" = type { %"class.v8::internal::ParserBase.base.1273", i32*, %"class.v8::internal::PreParserLogger", %"class.v8::internal::PreparseDataBuilder"*, %"class.std::__1::vector.31" }
%"class.v8::internal::ParserBase.base.1273" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::ParserBase<v8::internal::PreParser>::FunctionState"*, %"class.v8::Extension"*, %"class.v8::internal::PreParserFuncNameInferrer", [7 x i8], %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::PreParserFactory", %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::Logger"*, i8, [7 x i8], i64, %"class.v8::internal::PendingCompilationErrorHandler"*, %"class.v8::internal::Zone"*, %"class.v8::internal::ExpressionScope.1271"*, %"class.std::__1::vector.31", %"class.std::__1::vector.1260", %"class.v8::internal::Scanner"*, %"class.v8::internal::UnoptimizedCompileFlags", i32, i8, [7 x i8], %"class.v8::internal::PreParserFormalParameters"*, %"struct.v8::internal::ParserBase<v8::internal::PreParser>::NextArrowFunctionInfo", i8, i8 }>
%"class.v8::internal::ParserBase<v8::internal::PreParser>::FunctionState" = type <{ %"class.v8::internal::ParserBase<v8::internal::PreParser>::BlockState", i32, i32, i32, [4 x i8], %"class.v8::internal::ParserBase<v8::internal::PreParser>::FunctionState"**, %"class.v8::internal::ParserBase<v8::internal::PreParser>::FunctionState"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::ParserBase<v8::internal::PreParser>::Target"*, i8, i8, i8, i8, [4 x i8] }>
%"class.v8::internal::ParserBase<v8::internal::PreParser>::BlockState" = type { %"class.v8::internal::Scope"**, %"class.v8::internal::Scope"* }
%"class.v8::internal::ParserBase<v8::internal::PreParser>::Target" = type { %"class.v8::internal::ParserBase<v8::internal::PreParser>::Target"**, %"class.v8::internal::PreParserStatement", %"class.v8::internal::ZoneList.1289"*, %"class.v8::internal::ZoneList.1289"*, i32, %"class.v8::internal::ParserBase<v8::internal::PreParser>::Target"* }
%"class.v8::internal::PreParserStatement" = type { i32 }
%"class.v8::internal::ZoneList.1289" = type { %"class.v8::internal::AstRawString"**, i32, i32 }
%"class.v8::internal::PreParserFuncNameInferrer" = type { i8 }
%"class.v8::internal::PreParserFactory" = type { %"class.v8::internal::AstNodeFactory", %"class.v8::internal::Zone"* }
%"class.v8::internal::ExpressionScope.1271" = type <{ %"class.v8::internal::PreParser"*, %"class.v8::internal::ExpressionScope.1271"*, i8, i8, i8, [5 x i8] }>
%"class.v8::internal::PreParserFormalParameters" = type { %"struct.v8::internal::FormalParametersBase.base", i8, i8, [2 x i8] }
%"struct.v8::internal::ParserBase<v8::internal::PreParser>::NextArrowFunctionInfo" = type { %"struct.v8::internal::Scanner::Location", i32, %"class.v8::internal::DeclarationScope"* }
%"class.v8::internal::PreParserLogger" = type { i32, i32, i32, i32 }
%"class.v8::internal::MaybeHandle.1274" = type { i64* }

$_ZN2v88internal5Scope6LookupILNS1_15ScopeLookupModeE0EEEPNS0_8VariableEPNS0_13VariableProxyEPS1_S8_S8_b = comdat any

$_ZN2v88internal5Scope6LookupILNS1_15ScopeLookupModeE1EEEPNS0_8VariableEPNS0_13VariableProxyEPS1_S8_S8_b = comdat any

$_ZN2v88internal5Scope29AllocateScopeInfosRecursivelyINS0_7IsolateEEEvPT_NS0_11MaybeHandleINS0_9ScopeInfoEEE = comdat any

$_ZN2v88internal5Scope29AllocateScopeInfosRecursivelyINS0_12LocalIsolateEEEvPT_NS0_11MaybeHandleINS0_9ScopeInfoEEE = comdat any

$_ZN2v88internal16DeclarationScope18AllocateScopeInfosINS0_7IsolateEEEvPNS0_9ParseInfoEPT_ = comdat any

$_ZN2v88internal16DeclarationScope18AllocateScopeInfosINS0_12LocalIsolateEEEvPNS0_9ParseInfoEPT_ = comdat any

$_ZN2v88internal14AstNodeFactory13NewAssignmentENS0_5Token5ValueEPNS0_10ExpressionES5_i = comdat any

$_ZN2v88internal8Variable16SetMaybeAssignedEv = comdat any

$_ZN2v84base16ThreadedListBaseINS_8internal13VariableProxyENS0_9EmptyBaseENS3_14UnresolvedNextEE6RemoveEPS3_ = comdat any

$_ZN2v88internal4Zone3NewINS0_10ClassScope8RareDataEJPS1_EEEPT_DpOT0_ = comdat any

$_ZN2v88internal5Scope14RecordEvalCallEv = comdat any

$_ZN2v84base19TemplateHashMapImplIPvS2_NS0_18KeyEqualityMatcherIS2_EENS_8internal20ZoneAllocationPolicyEE6ResizeEv = comdat any

@_ZN2v88internal12TracingFlags13runtime_statsE = external local_unnamed_addr global %"struct.std::__1::atomic.1290", align 4
@.str = private unnamed_addr constant [35 x i8] c"Out of memory: HashMap::Initialize\00", align 1

@_ZN2v88internal11VariableMapC1EPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::VariableMap"*, %"class.v8::internal::Zone"*), void (%"class.v8::internal::VariableMap"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal11VariableMapC2EPNS0_4ZoneE
@_ZN2v88internal11VariableMapC1ERKS1_PNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::VariableMap"*, %"class.v8::internal::VariableMap"*, %"class.v8::internal::Zone"*), void (%"class.v8::internal::VariableMap"*, %"class.v8::internal::VariableMap"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal11VariableMapC2ERKS1_PNS0_4ZoneE
@_ZN2v88internal5ScopeC1EPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::Scope"*, %"class.v8::internal::Zone"*), void (%"class.v8::internal::Scope"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal5ScopeC2EPNS0_4ZoneE
@_ZN2v88internal5ScopeC1EPNS0_4ZoneEPS1_NS0_9ScopeTypeE = hidden unnamed_addr alias void (%"class.v8::internal::Scope"*, %"class.v8::internal::Zone"*, %"class.v8::internal::Scope"*, i8), void (%"class.v8::internal::Scope"*, %"class.v8::internal::Zone"*, %"class.v8::internal::Scope"*, i8)* @_ZN2v88internal5ScopeC2EPNS0_4ZoneEPS1_NS0_9ScopeTypeE
@_ZN2v88internal16DeclarationScopeC1EPNS0_4ZoneEPNS0_15AstValueFactoryENS0_8REPLModeE = hidden unnamed_addr alias void (%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::Zone"*, %"class.v8::internal::AstValueFactory"*, i32), void (%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::Zone"*, %"class.v8::internal::AstValueFactory"*, i32)* @_ZN2v88internal16DeclarationScopeC2EPNS0_4ZoneEPNS0_15AstValueFactoryENS0_8REPLModeE
@_ZN2v88internal16DeclarationScopeC1EPNS0_4ZoneEPNS0_5ScopeENS0_9ScopeTypeENS0_12FunctionKindE = hidden unnamed_addr alias void (%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::Zone"*, %"class.v8::internal::Scope"*, i8, i8), void (%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::Zone"*, %"class.v8::internal::Scope"*, i8, i8)* @_ZN2v88internal16DeclarationScopeC2EPNS0_4ZoneEPNS0_5ScopeENS0_9ScopeTypeENS0_12FunctionKindE
@_ZN2v88internal11ModuleScopeC1EPNS0_16DeclarationScopeEPNS0_15AstValueFactoryE = hidden unnamed_addr alias void (%"class.v8::internal::ModuleScope"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstValueFactory"*), void (%"class.v8::internal::ModuleScope"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstValueFactory"*)* @_ZN2v88internal11ModuleScopeC2EPNS0_16DeclarationScopeEPNS0_15AstValueFactoryE
@_ZN2v88internal11ModuleScopeC1EPNS0_7IsolateENS0_6HandleINS0_9ScopeInfoEEEPNS0_15AstValueFactoryE = hidden unnamed_addr alias void (%"class.v8::internal::ModuleScope"*, %"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::AstValueFactory"*), void (%"class.v8::internal::ModuleScope"*, %"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::AstValueFactory"*)* @_ZN2v88internal11ModuleScopeC2EPNS0_7IsolateENS0_6HandleINS0_9ScopeInfoEEEPNS0_15AstValueFactoryE
@_ZN2v88internal10ClassScopeC1EPNS0_4ZoneEPNS0_5ScopeEb = hidden unnamed_addr alias void (%"class.v8::internal::ClassScope"*, %"class.v8::internal::Zone"*, %"class.v8::internal::Scope"*, i1), void (%"class.v8::internal::ClassScope"*, %"class.v8::internal::Zone"*, %"class.v8::internal::Scope"*, i1)* @_ZN2v88internal10ClassScopeC2EPNS0_4ZoneEPNS0_5ScopeEb
@_ZN2v88internal10ClassScopeC1EPNS0_7IsolateEPNS0_4ZoneEPNS0_15AstValueFactoryENS0_6HandleINS0_9ScopeInfoEEE = hidden unnamed_addr alias void (%"class.v8::internal::ClassScope"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, %"class.v8::internal::AstValueFactory"*, i64*), void (%"class.v8::internal::ClassScope"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, %"class.v8::internal::AstValueFactory"*, i64*)* @_ZN2v88internal10ClassScopeC2EPNS0_7IsolateEPNS0_4ZoneEPNS0_15AstValueFactoryENS0_6HandleINS0_9ScopeInfoEEE
@_ZN2v88internal5ScopeC1EPNS0_4ZoneENS0_9ScopeTypeEPNS0_15AstValueFactoryENS0_6HandleINS0_9ScopeInfoEEE = hidden unnamed_addr alias void (%"class.v8::internal::Scope"*, %"class.v8::internal::Zone"*, i8, %"class.v8::internal::AstValueFactory"*, i64*), void (%"class.v8::internal::Scope"*, %"class.v8::internal::Zone"*, i8, %"class.v8::internal::AstValueFactory"*, i64*)* @_ZN2v88internal5ScopeC2EPNS0_4ZoneENS0_9ScopeTypeEPNS0_15AstValueFactoryENS0_6HandleINS0_9ScopeInfoEEE
@_ZN2v88internal16DeclarationScopeC1EPNS0_4ZoneENS0_9ScopeTypeEPNS0_15AstValueFactoryENS0_6HandleINS0_9ScopeInfoEEE = hidden unnamed_addr alias void (%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::Zone"*, i8, %"class.v8::internal::AstValueFactory"*, i64*), void (%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::Zone"*, i8, %"class.v8::internal::AstValueFactory"*, i64*)* @_ZN2v88internal16DeclarationScopeC2EPNS0_4ZoneENS0_9ScopeTypeEPNS0_15AstValueFactoryENS0_6HandleINS0_9ScopeInfoEEE
@_ZN2v88internal5ScopeC1EPNS0_4ZoneEPKNS0_12AstRawStringENS0_17MaybeAssignedFlagENS0_6HandleINS0_9ScopeInfoEEE = hidden unnamed_addr alias void (%"class.v8::internal::Scope"*, %"class.v8::internal::Zone"*, %"class.v8::internal::AstRawString"*, i8, i64*), void (%"class.v8::internal::Scope"*, %"class.v8::internal::Zone"*, %"class.v8::internal::AstRawString"*, i8, i64*)* @_ZN2v88internal5ScopeC2EPNS0_4ZoneEPKNS0_12AstRawStringENS0_17MaybeAssignedFlagENS0_6HandleINS0_9ScopeInfoEEE
@_ZN2v88internal24PrivateNameScopeIteratorC1EPNS0_5ScopeE = hidden unnamed_addr alias void (%"class.v8::internal::PrivateNameScopeIterator"*, %"class.v8::internal::Scope"*), void (%"class.v8::internal::PrivateNameScopeIterator"*, %"class.v8::internal::Scope"*)* @_ZN2v88internal24PrivateNameScopeIteratorC2EPNS0_5ScopeE

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.v8::internal::Variable"* @_ZN2v88internal5Scope6LookupILNS1_15ScopeLookupModeE0EEEPNS0_8VariableEPNS0_13VariableProxyEPS1_S8_S8_b(%"class.v8::internal::VariableProxy"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca i8, align 1
  %7 = zext i1 %4 to i8
  %8 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 256
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %union.anon, %union.anon* %12, i64 0, i32 0
  br i1 %11, label %23, label %14

14:                                               ; preds = %5
  %15 = bitcast %union.anon* %12 to %"class.v8::internal::Variable"**
  %16 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %16, i64 0, i32 1
  %18 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %18, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = bitcast %"class.v8::internal::AstRawString"* %18 to i8*
  %22 = lshr i32 %20, 2
  br label %98

23:                                               ; preds = %5
  %24 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %13, align 8
  %25 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %24, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = bitcast %"class.v8::internal::AstRawString"* %24 to %"class.v8::internal::Variable"*
  %28 = bitcast %"class.v8::internal::AstRawString"* %24 to i8*
  %29 = lshr i32 %26, 2
  br label %30

30:                                               ; preds = %23, %91
  %31 = phi i8 [ %94, %91 ], [ %7, %23 ]
  %32 = phi %"class.v8::internal::Scope"* [ %80, %91 ], [ %1, %23 ]
  %33 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %32, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = add i32 %34, -1
  %36 = and i32 %35, %29
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %32, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %39 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %38, align 8
  %40 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 %37
  %41 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %40, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  %44 = icmp eq i8* %42, %28
  %45 = or i1 %43, %44
  br i1 %45, label %58, label %46

46:                                               ; preds = %30
  %47 = zext i32 %35 to i64
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i64 [ %37, %46 ], [ %51, %48 ]
  %50 = add nuw nsw i64 %49, 1
  %51 = and i64 %50, %47
  %52 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 %51
  %53 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %52, i64 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = icmp eq i8* %54, null
  %56 = icmp eq i8* %54, %28
  %57 = or i1 %55, %56
  br i1 %57, label %58, label %48

58:                                               ; preds = %48, %30
  %59 = phi i8* [ %42, %30 ], [ %54, %48 ]
  %60 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %40, %30 ], [ %52, %48 ]
  %61 = icmp eq i8* %59, null
  %62 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %60, null
  %63 = or i1 %61, %62
  br i1 %63, label %78, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %60, i64 0, i32 1
  %66 = bitcast i8** %65 to %"class.v8::internal::Variable"**
  %67 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %66, align 8
  %68 = icmp eq %"class.v8::internal::Variable"* %67, null
  br i1 %68, label %78, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %32, i64 0, i32 12
  %71 = load i8, i8* %70, align 8
  %72 = icmp eq i8 %71, 1
  br i1 %72, label %73, label %146

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %67, i64 0, i32 6
  %75 = load i16, i16* %74, align 8
  %76 = and i16 %75, 15
  %77 = icmp eq i16 %76, 4
  br i1 %77, label %78, label %146

78:                                               ; preds = %73, %64, %58
  %79 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %32, i64 0, i32 0
  %80 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %79, align 8
  %81 = icmp eq %"class.v8::internal::Scope"* %80, %2
  %82 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %32, i64 0, i32 12
  %83 = load i8, i8* %82, align 8
  br i1 %81, label %209, label %84

84:                                               ; preds = %78
  %85 = icmp eq i8 %83, 7
  br i1 %85, label %168, label %86, !prof !2

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %32, i64 0, i32 13
  %88 = load i16, i16* %87, align 1
  %89 = and i16 %88, 260
  %90 = icmp eq i16 %89, 260
  br i1 %90, label %179, label %91, !prof !3

91:                                               ; preds = %86
  %92 = icmp eq i8 %83, 2
  %93 = zext i1 %92 to i8
  %94 = or i8 %31, %93
  %95 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %80, i64 0, i32 7, i32 0, i32 0
  %96 = load i64*, i64** %95, align 8
  %97 = icmp eq i64* %96, null
  br i1 %97, label %30, label %192

98:                                               ; preds = %14, %185
  %99 = phi i8 [ %188, %185 ], [ %7, %14 ]
  %100 = phi %"class.v8::internal::Scope"* [ %162, %185 ], [ %1, %14 ]
  %101 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %100, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %102 = load i32, i32* %101, align 8
  %103 = add i32 %102, -1
  %104 = and i32 %103, %22
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %100, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %107 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %106, align 8
  %108 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %107, i64 %105
  %109 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %108, i64 0, i32 0
  %110 = load i8*, i8** %109, align 8
  %111 = icmp eq i8* %110, null
  %112 = icmp eq i8* %110, %21
  %113 = or i1 %111, %112
  br i1 %113, label %126, label %114

114:                                              ; preds = %98
  %115 = zext i32 %103 to i64
  br label %116

116:                                              ; preds = %116, %114
  %117 = phi i64 [ %105, %114 ], [ %119, %116 ]
  %118 = add nuw nsw i64 %117, 1
  %119 = and i64 %118, %115
  %120 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %107, i64 %119
  %121 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %120, i64 0, i32 0
  %122 = load i8*, i8** %121, align 8
  %123 = icmp eq i8* %122, null
  %124 = icmp eq i8* %122, %21
  %125 = or i1 %123, %124
  br i1 %125, label %126, label %116

126:                                              ; preds = %116, %98
  %127 = phi i8* [ %110, %98 ], [ %122, %116 ]
  %128 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %108, %98 ], [ %120, %116 ]
  %129 = icmp eq i8* %127, null
  %130 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %128, null
  %131 = or i1 %129, %130
  br i1 %131, label %160, label %132

132:                                              ; preds = %126
  %133 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %128, i64 0, i32 1
  %134 = bitcast i8** %133 to %"class.v8::internal::Variable"**
  %135 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %134, align 8
  %136 = icmp eq %"class.v8::internal::Variable"* %135, null
  br i1 %136, label %160, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %100, i64 0, i32 12
  %139 = load i8, i8* %138, align 8
  %140 = icmp eq i8 %139, 1
  br i1 %140, label %141, label %146

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %135, i64 0, i32 6
  %143 = load i16, i16* %142, align 8
  %144 = and i16 %143, 15
  %145 = icmp eq i16 %144, 4
  br i1 %145, label %160, label %146

146:                                              ; preds = %141, %137, %69, %73
  %147 = phi i8 [ %31, %73 ], [ %31, %69 ], [ %99, %137 ], [ %99, %141 ]
  %148 = phi %"class.v8::internal::Variable"* [ %67, %73 ], [ %67, %69 ], [ %135, %137 ], [ %135, %141 ]
  %149 = and i8 %147, 1
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %222, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %148, i64 0, i32 6
  %153 = load i16, i16* %152, align 8
  %154 = trunc i16 %153 to i8
  %155 = and i8 %154, 15
  %156 = add nsw i8 %155, -4
  %157 = icmp ult i8 %156, 3
  br i1 %157, label %222, label %158

158:                                              ; preds = %151
  %159 = or i16 %153, 1024
  store i16 %159, i16* %152, align 8
  br label %222

160:                                              ; preds = %126, %132, %141
  %161 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %100, i64 0, i32 0
  %162 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %161, align 8
  %163 = icmp eq %"class.v8::internal::Scope"* %162, %2
  %164 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %100, i64 0, i32 12
  %165 = load i8, i8* %164, align 8
  br i1 %163, label %209, label %166

166:                                              ; preds = %160
  %167 = icmp eq i8 %165, 7
  br i1 %167, label %168, label %174, !prof !2

168:                                              ; preds = %166, %84
  %169 = phi i8 [ %31, %84 ], [ %99, %166 ]
  %170 = phi %"class.v8::internal::Scope"* [ %32, %84 ], [ %100, %166 ]
  %171 = and i8 %169, 1
  %172 = icmp ne i8 %171, 0
  %173 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope10LookupWithEPNS0_13VariableProxyEPS1_S4_S4_b(%"class.v8::internal::VariableProxy"* %0, %"class.v8::internal::Scope"* %170, %"class.v8::internal::Scope"* %2, %"class.v8::internal::Scope"* %3, i1 zeroext %172)
  br label %222

174:                                              ; preds = %166
  %175 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %100, i64 0, i32 13
  %176 = load i16, i16* %175, align 1
  %177 = and i16 %176, 260
  %178 = icmp eq i16 %177, 260
  br i1 %178, label %179, label %185, !prof !3

179:                                              ; preds = %174, %86
  %180 = phi i8 [ %31, %86 ], [ %99, %174 ]
  %181 = phi %"class.v8::internal::Scope"* [ %32, %86 ], [ %100, %174 ]
  %182 = and i8 %180, 1
  %183 = icmp ne i8 %182, 0
  %184 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope16LookupSloppyEvalEPNS0_13VariableProxyEPS1_S4_S4_b(%"class.v8::internal::VariableProxy"* %0, %"class.v8::internal::Scope"* %181, %"class.v8::internal::Scope"* %2, %"class.v8::internal::Scope"* %3, i1 zeroext %183)
  br label %222

185:                                              ; preds = %174
  %186 = icmp eq i8 %165, 2
  %187 = zext i1 %186 to i8
  %188 = or i8 %99, %187
  %189 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %162, i64 0, i32 7, i32 0, i32 0
  %190 = load i64*, i64** %189, align 8
  %191 = icmp eq i64* %190, null
  br i1 %191, label %98, label %192

192:                                              ; preds = %185, %91
  %193 = phi %"class.v8::internal::Scope"* [ %80, %91 ], [ %162, %185 ]
  br label %194

194:                                              ; preds = %192, %204
  %195 = phi %"class.v8::internal::Scope"* [ %206, %204 ], [ %193, %192 ]
  %196 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %195, i64 0, i32 13
  %197 = load i16, i16* %196, align 1
  %198 = and i16 %197, 256
  %199 = icmp eq i16 %198, 0
  br i1 %199, label %204, label %200

200:                                              ; preds = %194
  %201 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %195, i64 0, i32 12
  %202 = load i8, i8* %201, align 8
  %203 = icmp eq i8 %202, 1
  br i1 %203, label %204, label %207

204:                                              ; preds = %200, %194
  %205 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %195, i64 0, i32 0
  %206 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %205, align 8
  br label %194

207:                                              ; preds = %200
  %208 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope6LookupILNS1_15ScopeLookupModeE1EEEPNS0_8VariableEPNS0_13VariableProxyEPS1_S8_S8_b(%"class.v8::internal::VariableProxy"* %0, %"class.v8::internal::Scope"* %193, %"class.v8::internal::Scope"* %2, %"class.v8::internal::Scope"* %195, i1 zeroext false)
  br label %222

209:                                              ; preds = %160, %78
  %210 = phi %"class.v8::internal::Variable"* [ %27, %78 ], [ %16, %160 ]
  %211 = phi i8 [ %83, %78 ], [ %165, %160 ]
  %212 = phi %"class.v8::internal::Scope"* [ %32, %78 ], [ %100, %160 ]
  %213 = icmp eq i8 %211, 4
  br i1 %213, label %214, label %222

214:                                              ; preds = %209
  %215 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %210, i64 0, i32 1
  %216 = select i1 %11, %"class.v8::internal::AstRawString"** %13, %"class.v8::internal::AstRawString"** %215
  %217 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %216, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #10
  %218 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %212, i64 0, i32 3
  %219 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %212, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %219, align 8
  %221 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %218, %"class.v8::internal::Zone"* %220, %"class.v8::internal::Scope"* %212, %"class.v8::internal::AstRawString"* %217, i8 zeroext 5, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #10
  br label %222

222:                                              ; preds = %151, %158, %146, %207, %179, %168, %209, %214
  %223 = phi %"class.v8::internal::Variable"* [ %221, %214 ], [ null, %209 ], [ %148, %151 ], [ %148, %158 ], [ %148, %146 ], [ %208, %207 ], [ %184, %179 ], [ %173, %168 ]
  ret %"class.v8::internal::Variable"* %223
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal5Scope10LookupWithEPNS0_13VariableProxyEPS1_S4_S4_b(%"class.v8::internal::VariableProxy"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca i8, align 1
  %7 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 0
  %8 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %8, i64 0, i32 7, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp eq i64* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %5
  %13 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope6LookupILNS1_15ScopeLookupModeE0EEEPNS0_8VariableEPNS0_13VariableProxyEPS1_S8_S8_b(%"class.v8::internal::VariableProxy"* %0, %"class.v8::internal::Scope"* %8, %"class.v8::internal::Scope"* %2, %"class.v8::internal::Scope"* null, i1 zeroext %4)
  br label %16

14:                                               ; preds = %5
  %15 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope6LookupILNS1_15ScopeLookupModeE1EEEPNS0_8VariableEPNS0_13VariableProxyEPS1_S8_S8_b(%"class.v8::internal::VariableProxy"* %0, %"class.v8::internal::Scope"* %8, %"class.v8::internal::Scope"* %2, %"class.v8::internal::Scope"* %3, i1 zeroext false)
  br label %16

16:                                               ; preds = %14, %12
  %17 = phi %"class.v8::internal::Variable"* [ %13, %12 ], [ %15, %14 ]
  %18 = icmp eq %"class.v8::internal::Variable"* %17, null
  br i1 %18, label %69, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %17, i64 0, i32 6
  %21 = load i16, i16* %20, align 8
  %22 = trunc i16 %21 to i8
  %23 = and i8 %22, 15
  %24 = add nsw i8 %23, -4
  %25 = icmp ugt i8 %24, 2
  %26 = and i16 %21, 896
  %27 = icmp eq i16 %26, 0
  %28 = and i1 %27, %25
  br i1 %28, label %29, label %36

29:                                               ; preds = %19
  %30 = or i16 %21, 3072
  store i16 %30, i16* %20, align 8
  %31 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %0, i64 0, i32 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = trunc i32 %32 to i8
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %29
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* nonnull %17)
  br label %36

36:                                               ; preds = %19, %29, %35
  %37 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 13
  %38 = load i16, i16* %37, align 1
  %39 = and i16 %38, 4096
  %40 = icmp eq i16 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 3
  tail call void @_ZN2v88internal11VariableMap6RemoveEPNS0_8VariableE(%"class.v8::internal::VariableMap"* %42, %"class.v8::internal::Variable"* nonnull %17)
  br label %43

43:                                               ; preds = %36, %41
  %44 = phi %"class.v8::internal::Scope"* [ %3, %41 ], [ %1, %36 ]
  %45 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %0, i64 0, i32 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 256
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %0, i64 0, i32 1
  br i1 %48, label %54, label %50

50:                                               ; preds = %43
  %51 = bitcast %union.anon* %49 to %"class.v8::internal::Variable"**
  %52 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %52, i64 0, i32 1
  br label %56

54:                                               ; preds = %43
  %55 = getelementptr inbounds %union.anon, %union.anon* %49, i64 0, i32 0
  br label %56

56:                                               ; preds = %50, %54
  %57 = phi %"class.v8::internal::AstRawString"** [ %53, %50 ], [ %55, %54 ]
  %58 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %57, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #10
  %59 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %44, i64 0, i32 3
  %60 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %44, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %59, %"class.v8::internal::Zone"* %61, %"class.v8::internal::Scope"* %44, %"class.v8::internal::AstRawString"* %58, i8 zeroext 4, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8* nonnull %6) #10
  %63 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %62, i64 0, i32 6
  %64 = load i16, i16* %63, align 8
  %65 = and i16 %64, -897
  %66 = or i16 %65, 512
  store i16 %66, i16* %63, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %62, i64 0, i32 4
  store i32 -1, i32* %67, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #10
  %68 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %62, i64 0, i32 2
  store %"class.v8::internal::Variable"* %17, %"class.v8::internal::Variable"** %68, align 8
  br label %69

69:                                               ; preds = %16, %56
  %70 = phi %"class.v8::internal::Variable"* [ %62, %56 ], [ null, %16 ]
  ret %"class.v8::internal::Variable"* %70
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope18AsDeclarationScopeEv(%"class.v8::internal::Scope"* readnone) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.v8::internal::Scope"* %0 to %"class.v8::internal::DeclarationScope"*
  ret %"class.v8::internal::DeclarationScope"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal5Scope16LookupSloppyEvalEPNS0_13VariableProxyEPS1_S4_S4_b(%"class.v8::internal::VariableProxy"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = icmp eq %"class.v8::internal::Scope"* %3, null
  br i1 %8, label %9, label %22

9:                                                ; preds = %5, %21
  %10 = phi %"class.v8::internal::Scope"* [ %12, %21 ], [ %1, %5 ]
  %11 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %10, i64 0, i32 0
  %12 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %12, i64 0, i32 13
  %14 = load i16, i16* %13, align 1
  %15 = and i16 %14, 256
  %16 = icmp eq i16 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %12, i64 0, i32 12
  %19 = load i8, i8* %18, align 8
  %20 = icmp eq i8 %19, 1
  br i1 %20, label %21, label %22

21:                                               ; preds = %17, %9
  br label %9

22:                                               ; preds = %17, %5
  %23 = phi %"class.v8::internal::Scope"* [ %3, %5 ], [ %12, %17 ]
  %24 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 0
  %25 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %25, i64 0, i32 7, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i64* %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %22
  %30 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope6LookupILNS1_15ScopeLookupModeE0EEEPNS0_8VariableEPNS0_13VariableProxyEPS1_S8_S8_b(%"class.v8::internal::VariableProxy"* %0, %"class.v8::internal::Scope"* %25, %"class.v8::internal::Scope"* %2, %"class.v8::internal::Scope"* null, i1 zeroext %4)
  br label %33

31:                                               ; preds = %22
  %32 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope6LookupILNS1_15ScopeLookupModeE1EEEPNS0_8VariableEPNS0_13VariableProxyEPS1_S8_S8_b(%"class.v8::internal::VariableProxy"* %0, %"class.v8::internal::Scope"* %25, %"class.v8::internal::Scope"* %2, %"class.v8::internal::Scope"* %23, i1 zeroext false)
  br label %33

33:                                               ; preds = %31, %29
  %34 = phi %"class.v8::internal::Variable"* [ %30, %29 ], [ %32, %31 ]
  %35 = icmp eq %"class.v8::internal::Variable"* %34, null
  br i1 %35, label %109, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 13
  %38 = load i16, i16* %37, align 1
  %39 = and i16 %38, 4096
  %40 = icmp eq i16 %39, 0
  %41 = select i1 %40, %"class.v8::internal::Scope"* %1, %"class.v8::internal::Scope"* %3
  %42 = tail call zeroext i1 @_ZNK2v88internal8Variable22IsGlobalObjectPropertyEv(%"class.v8::internal::Variable"* nonnull %34) #10
  br i1 %42, label %46, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %34, i64 0, i32 6
  %45 = load i16, i16* %44, align 8
  br label %72

46:                                               ; preds = %36
  %47 = icmp eq %"class.v8::internal::Scope"* %41, null
  %48 = select i1 %47, %"class.v8::internal::Scope"* %1, %"class.v8::internal::Scope"* %41
  %49 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %0, i64 0, i32 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = and i32 %50, 256
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %0, i64 0, i32 1
  br i1 %52, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast %union.anon* %53 to %"class.v8::internal::Variable"**
  %56 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %56, i64 0, i32 1
  br label %60

58:                                               ; preds = %46
  %59 = getelementptr inbounds %union.anon, %union.anon* %53, i64 0, i32 0
  br label %60

60:                                               ; preds = %54, %58
  %61 = phi %"class.v8::internal::AstRawString"** [ %57, %54 ], [ %59, %58 ]
  %62 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #10
  %63 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %48, i64 0, i32 3
  %64 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %48, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %64, align 8
  %66 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %63, %"class.v8::internal::Zone"* %65, %"class.v8::internal::Scope"* %48, %"class.v8::internal::AstRawString"* %62, i8 zeroext 5, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8* nonnull %7) #10
  %67 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %66, i64 0, i32 6
  %68 = load i16, i16* %67, align 8
  %69 = and i16 %68, -897
  %70 = or i16 %69, 512
  store i16 %70, i16* %67, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %66, i64 0, i32 4
  store i32 -1, i32* %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #10
  br label %72

72:                                               ; preds = %43, %60
  %73 = phi i16 [ %70, %60 ], [ %45, %43 ]
  %74 = phi %"class.v8::internal::Variable"* [ %66, %60 ], [ %34, %43 ]
  %75 = trunc i16 %73 to i8
  %76 = and i8 %75, 15
  %77 = add nsw i8 %76, -4
  %78 = icmp ult i8 %77, 3
  br i1 %78, label %109, label %79

79:                                               ; preds = %72
  %80 = icmp eq %"class.v8::internal::Scope"* %41, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %79
  %82 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %41, i64 0, i32 3
  tail call void @_ZN2v88internal11VariableMap6RemoveEPNS0_8VariableE(%"class.v8::internal::VariableMap"* %82, %"class.v8::internal::Variable"* %74)
  br label %83

83:                                               ; preds = %79, %81
  %84 = select i1 %80, %"class.v8::internal::Scope"* %1, %"class.v8::internal::Scope"* %41
  %85 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %0, i64 0, i32 0, i32 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = and i32 %86, 256
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %0, i64 0, i32 1
  br i1 %88, label %94, label %90

90:                                               ; preds = %83
  %91 = bitcast %union.anon* %89 to %"class.v8::internal::Variable"**
  %92 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %92, i64 0, i32 1
  br label %96

94:                                               ; preds = %83
  %95 = getelementptr inbounds %union.anon, %union.anon* %89, i64 0, i32 0
  br label %96

96:                                               ; preds = %90, %94
  %97 = phi %"class.v8::internal::AstRawString"** [ %93, %90 ], [ %95, %94 ]
  %98 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %97, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #10
  %99 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %84, i64 0, i32 3
  %100 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %84, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %100, align 8
  %102 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %99, %"class.v8::internal::Zone"* %101, %"class.v8::internal::Scope"* %84, %"class.v8::internal::AstRawString"* %98, i8 zeroext 6, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8* nonnull %6) #10
  %103 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %102, i64 0, i32 6
  %104 = load i16, i16* %103, align 8
  %105 = and i16 %104, -897
  %106 = or i16 %105, 512
  store i16 %106, i16* %103, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %102, i64 0, i32 4
  store i32 -1, i32* %107, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #10
  %108 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %102, i64 0, i32 2
  store %"class.v8::internal::Variable"* %74, %"class.v8::internal::Variable"** %108, align 8
  br label %109

109:                                              ; preds = %72, %33, %96
  %110 = phi %"class.v8::internal::Variable"* [ %102, %96 ], [ null, %33 ], [ %74, %72 ]
  ret %"class.v8::internal::Variable"* %110
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope26GetNonEvalDeclarationScopeEv(%"class.v8::internal::Scope"* readonly) local_unnamed_addr #3 align 2 {
  br label %2

2:                                                ; preds = %12, %1
  %3 = phi %"class.v8::internal::Scope"* [ %0, %1 ], [ %14, %12 ]
  %4 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 13
  %5 = load i16, i16* %4, align 1
  %6 = and i16 %5, 256
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 12
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 0
  %14 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %13, align 8
  br label %2

15:                                               ; preds = %8
  %16 = bitcast %"class.v8::internal::Scope"* %3 to %"class.v8::internal::DeclarationScope"*
  ret %"class.v8::internal::DeclarationScope"* %16
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.v8::internal::Variable"* @_ZN2v88internal5Scope6LookupILNS1_15ScopeLookupModeE1EEEPNS0_8VariableEPNS0_13VariableProxyEPS1_S8_S8_b(%"class.v8::internal::VariableProxy"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = zext i1 %4 to i8
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 13
  %10 = load i16, i16* %9, align 1
  %11 = and i16 %10, 4096
  %12 = icmp eq i16 %11, 0
  br i1 %12, label %68, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 256
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %0, i64 0, i32 1
  br i1 %17, label %23, label %19

19:                                               ; preds = %13
  %20 = bitcast %union.anon* %18 to %"class.v8::internal::Variable"**
  %21 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %21, i64 0, i32 1
  br label %25

23:                                               ; preds = %13
  %24 = getelementptr inbounds %union.anon, %union.anon* %18, i64 0, i32 0
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi %"class.v8::internal::AstRawString"** [ %22, %19 ], [ %24, %23 ]
  %27 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %26, align 8
  %28 = bitcast %"class.v8::internal::AstRawString"* %27 to i8*
  %29 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %27, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, -1
  %35 = and i32 %34, %31
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %38 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %37, align 8
  %39 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %38, i64 %36
  %40 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  %43 = icmp eq i8* %41, %28
  %44 = or i1 %42, %43
  br i1 %44, label %57, label %45

45:                                               ; preds = %25
  %46 = zext i32 %34 to i64
  br label %47

47:                                               ; preds = %47, %45
  %48 = phi i64 [ %36, %45 ], [ %50, %47 ]
  %49 = add nuw nsw i64 %48, 1
  %50 = and i64 %49, %46
  %51 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %38, i64 %50
  %52 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %51, i64 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, null
  %55 = icmp eq i8* %53, %28
  %56 = or i1 %54, %55
  br i1 %56, label %57, label %47

57:                                               ; preds = %47, %25
  %58 = phi i8* [ %41, %25 ], [ %53, %47 ]
  %59 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %39, %25 ], [ %51, %47 ]
  %60 = icmp eq i8* %58, null
  %61 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %59, null
  %62 = or i1 %60, %61
  br i1 %62, label %68, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %59, i64 0, i32 1
  %65 = bitcast i8** %64 to %"class.v8::internal::Variable"**
  %66 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %65, align 8
  %67 = icmp eq %"class.v8::internal::Variable"* %66, null
  br i1 %67, label %68, label %224

68:                                               ; preds = %5, %57, %63
  %69 = and i16 %10, 32
  %70 = icmp eq i16 %69, 0
  br i1 %70, label %71, label %76, !prof !4

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %0, i64 0, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %0, i64 0, i32 1
  %74 = bitcast %union.anon* %73 to %"class.v8::internal::Variable"**
  %75 = getelementptr inbounds %union.anon, %union.anon* %73, i64 0, i32 0
  br label %100

76:                                               ; preds = %202, %68
  %77 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %0, i64 0, i32 0, i32 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = and i32 %78, 256
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %0, i64 0, i32 1
  br i1 %80, label %86, label %82

82:                                               ; preds = %76
  %83 = bitcast %union.anon* %81 to %"class.v8::internal::Variable"**
  %84 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %84, i64 0, i32 1
  br label %88

86:                                               ; preds = %76
  %87 = getelementptr inbounds %union.anon, %union.anon* %81, i64 0, i32 0
  br label %88

88:                                               ; preds = %82, %86
  %89 = phi %"class.v8::internal::AstRawString"** [ %85, %82 ], [ %87, %86 ]
  %90 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %89, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #10
  %91 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 3
  %92 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %92, align 8
  %94 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %91, %"class.v8::internal::Zone"* %93, %"class.v8::internal::Scope"* %3, %"class.v8::internal::AstRawString"* %90, i8 zeroext 4, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8* nonnull %7) #10
  %95 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %94, i64 0, i32 6
  %96 = load i16, i16* %95, align 8
  %97 = and i16 %96, -897
  %98 = or i16 %97, 512
  store i16 %98, i16* %95, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %94, i64 0, i32 4
  store i32 -1, i32* %99, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #10
  br label %224

100:                                              ; preds = %71, %202
  %101 = phi i16 [ %10, %71 ], [ %207, %202 ]
  %102 = phi i16* [ %9, %71 ], [ %206, %202 ]
  %103 = phi %"class.v8::internal::Scope"* [ %1, %71 ], [ %179, %202 ]
  %104 = phi i8 [ %8, %71 ], [ %205, %202 ]
  %105 = and i16 %101, 4096
  %106 = icmp ne i16 %105, 0
  %107 = load i32, i32* %72, align 4
  %108 = and i32 %107, 256
  br i1 %106, label %157, label %109

109:                                              ; preds = %100
  %110 = icmp eq i32 %108, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %109
  %112 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %74, align 8
  %113 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %112, i64 0, i32 1
  br label %114

114:                                              ; preds = %109, %111
  %115 = phi %"class.v8::internal::AstRawString"** [ %113, %111 ], [ %75, %109 ]
  %116 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %115, align 8
  %117 = bitcast %"class.v8::internal::AstRawString"* %116 to i8*
  %118 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %116, i64 0, i32 2
  %119 = load i32, i32* %118, align 8
  %120 = lshr i32 %119, 2
  %121 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %103, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %122 = load i32, i32* %121, align 8
  %123 = add i32 %122, -1
  %124 = and i32 %123, %120
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %103, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %127 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %126, align 8
  %128 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %127, i64 %125
  %129 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %128, i64 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = icmp eq i8* %130, null
  %132 = icmp eq i8* %130, %117
  %133 = or i1 %131, %132
  br i1 %133, label %146, label %134

134:                                              ; preds = %114
  %135 = zext i32 %123 to i64
  br label %136

136:                                              ; preds = %136, %134
  %137 = phi i64 [ %125, %134 ], [ %139, %136 ]
  %138 = add nuw nsw i64 %137, 1
  %139 = and i64 %138, %135
  %140 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %127, i64 %139
  %141 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %140, i64 0, i32 0
  %142 = load i8*, i8** %141, align 8
  %143 = icmp eq i8* %142, null
  %144 = icmp eq i8* %142, %117
  %145 = or i1 %143, %144
  br i1 %145, label %146, label %136

146:                                              ; preds = %136, %114
  %147 = phi i8* [ %130, %114 ], [ %142, %136 ]
  %148 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %128, %114 ], [ %140, %136 ]
  %149 = icmp eq i8* %147, null
  %150 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %148, null
  %151 = or i1 %149, %150
  br i1 %151, label %157, label %152

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %148, i64 0, i32 1
  %154 = bitcast i8** %153 to %"class.v8::internal::Variable"**
  %155 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %154, align 8
  %156 = icmp eq %"class.v8::internal::Variable"* %155, null
  br i1 %156, label %157, label %224

157:                                              ; preds = %100, %146, %152
  %158 = icmp eq i32 %108, 0
  br i1 %158, label %162, label %159

159:                                              ; preds = %157
  %160 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %74, align 8
  %161 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %160, i64 0, i32 1
  br label %162

162:                                              ; preds = %157, %159
  %163 = phi %"class.v8::internal::AstRawString"** [ %161, %159 ], [ %75, %157 ]
  %164 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %163, align 8
  %165 = select i1 %106, %"class.v8::internal::Scope"* %3, %"class.v8::internal::Scope"* %103
  %166 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope17LookupInScopeInfoEPKNS0_12AstRawStringEPS1_(%"class.v8::internal::Scope"* %103, %"class.v8::internal::AstRawString"* %164, %"class.v8::internal::Scope"* %165)
  %167 = icmp eq %"class.v8::internal::Variable"* %166, null
  br i1 %167, label %177, label %168

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %103, i64 0, i32 12
  %170 = load i8, i8* %169, align 8
  %171 = icmp eq i8 %170, 1
  br i1 %171, label %172, label %224

172:                                              ; preds = %168
  %173 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %166, i64 0, i32 6
  %174 = load i16, i16* %173, align 8
  %175 = and i16 %174, 15
  %176 = icmp eq i16 %175, 4
  br i1 %176, label %177, label %224

177:                                              ; preds = %162, %172
  %178 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %103, i64 0, i32 0
  %179 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %178, align 8
  %180 = icmp eq %"class.v8::internal::Scope"* %179, %2
  br i1 %180, label %210, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %103, i64 0, i32 12
  %183 = load i8, i8* %182, align 8
  %184 = icmp eq i8 %183, 7
  br i1 %184, label %185, label %189, !prof !2

185:                                              ; preds = %181
  %186 = and i8 %104, 1
  %187 = icmp ne i8 %186, 0
  %188 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope10LookupWithEPNS0_13VariableProxyEPS1_S4_S4_b(%"class.v8::internal::VariableProxy"* %0, %"class.v8::internal::Scope"* %103, %"class.v8::internal::Scope"* %2, %"class.v8::internal::Scope"* %3, i1 zeroext %187)
  br label %224

189:                                              ; preds = %181
  %190 = load i16, i16* %102, align 1
  %191 = and i16 %190, 256
  %192 = icmp eq i16 %191, 0
  br i1 %192, label %202, label %193

193:                                              ; preds = %189
  %194 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %103, i64 0, i32 13
  %195 = load i16, i16* %194, align 1
  %196 = and i16 %195, 4
  %197 = icmp eq i16 %196, 0
  br i1 %197, label %202, label %198, !prof !4

198:                                              ; preds = %193
  %199 = and i8 %104, 1
  %200 = icmp ne i8 %199, 0
  %201 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope16LookupSloppyEvalEPNS0_13VariableProxyEPS1_S4_S4_b(%"class.v8::internal::VariableProxy"* %0, %"class.v8::internal::Scope"* %103, %"class.v8::internal::Scope"* %2, %"class.v8::internal::Scope"* %3, i1 zeroext %200)
  br label %224

202:                                              ; preds = %193, %189
  %203 = icmp eq i8 %183, 2
  %204 = zext i1 %203 to i8
  %205 = or i8 %104, %204
  %206 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %179, i64 0, i32 13
  %207 = load i16, i16* %206, align 1
  %208 = and i16 %207, 32
  %209 = icmp eq i16 %208, 0
  br i1 %209, label %100, label %76, !prof !4

210:                                              ; preds = %177
  %211 = load i32, i32* %72, align 4
  %212 = and i32 %211, 256
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %217, label %214

214:                                              ; preds = %210
  %215 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %74, align 8
  %216 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %215, i64 0, i32 1
  br label %217

217:                                              ; preds = %210, %214
  %218 = phi %"class.v8::internal::AstRawString"** [ %216, %214 ], [ %75, %210 ]
  %219 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %218, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #10
  %220 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 3
  %221 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %103, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %221, align 8
  %223 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %220, %"class.v8::internal::Zone"* %222, %"class.v8::internal::Scope"* %103, %"class.v8::internal::AstRawString"* %219, i8 zeroext 5, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #10
  br label %224

224:                                              ; preds = %152, %168, %172, %198, %185, %63, %217, %88
  %225 = phi %"class.v8::internal::Variable"* [ %94, %88 ], [ %223, %217 ], [ %66, %63 ], [ %201, %198 ], [ %188, %185 ], [ %155, %152 ], [ %166, %172 ], [ %166, %168 ]
  ret %"class.v8::internal::Variable"* %225
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal16DeclarationScope20DeclareDynamicGlobalEPKNS0_12AstRawStringENS0_12VariableKindEPNS0_5ScopeE(%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstRawString"*, i8 zeroext, %"class.v8::internal::Scope"*) local_unnamed_addr #0 align 2 {
  %5 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 3
  %7 = bitcast %"class.v8::internal::DeclarationScope"* %0 to %"class.v8::internal::Scope"*
  %8 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8, align 8
  %10 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %6, %"class.v8::internal::Zone"* %9, %"class.v8::internal::Scope"* %7, %"class.v8::internal::AstRawString"* %1, i8 zeroext 5, i8 zeroext %2, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #10
  ret %"class.v8::internal::Variable"* %10
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap6LookupEPKNS0_12AstRawStringE(%"class.v8::internal::VariableMap"* nocapture readonly, %"class.v8::internal::AstRawString"*) local_unnamed_addr #4 align 2 {
  %3 = bitcast %"class.v8::internal::AstRawString"* %1 to i8*
  %4 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = lshr i32 %5, 2
  %7 = getelementptr inbounds %"class.v8::internal::VariableMap", %"class.v8::internal::VariableMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = and i32 %9, %6
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.v8::internal::VariableMap", %"class.v8::internal::VariableMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %12, align 8
  %14 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %13, i64 %11
  %15 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %14, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  %18 = icmp eq i8* %16, %3
  %19 = or i1 %17, %18
  br i1 %19, label %32, label %20

20:                                               ; preds = %2
  %21 = zext i32 %9 to i64
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi i64 [ %11, %20 ], [ %25, %22 ]
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, %21
  %26 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %13, i64 %25
  %27 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %26, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  %30 = icmp eq i8* %28, %3
  %31 = or i1 %29, %30
  br i1 %31, label %32, label %22

32:                                               ; preds = %22, %2
  %33 = phi i8* [ %16, %2 ], [ %28, %22 ]
  %34 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %14, %2 ], [ %26, %22 ]
  %35 = icmp eq i8* %33, null
  %36 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %34, null
  %37 = or i1 %35, %36
  br i1 %37, label %42, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %34, i64 0, i32 1
  %40 = bitcast i8** %39 to %"class.v8::internal::Variable"**
  %41 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %40, align 8
  br label %42

42:                                               ; preds = %32, %38
  %43 = phi %"class.v8::internal::Variable"* [ %41, %38 ], [ null, %32 ]
  ret %"class.v8::internal::Variable"* %43
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal5Scope8NonLocalEPKNS0_12AstRawStringENS0_12VariableModeE(%"class.v8::internal::Scope"*, %"class.v8::internal::AstRawString"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %6, align 8
  %8 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %5, %"class.v8::internal::Zone"* %7, %"class.v8::internal::Scope"* %0, %"class.v8::internal::AstRawString"* %1, i8 zeroext %2, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8* nonnull %4)
  %9 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %8, i64 0, i32 6
  %10 = load i16, i16* %9, align 8
  %11 = and i16 %10, -897
  %12 = or i16 %11, 512
  store i16 %12, i16* %9, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %8, i64 0, i32 4
  store i32 -1, i32* %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  ret %"class.v8::internal::Variable"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal5Scope17LookupInScopeInfoEPKNS0_12AstRawStringEPS1_(%"class.v8::internal::Scope"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::Scope"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::ScopeInfo", align 8
  %5 = alloca %"struct.v8::internal::VariableLookupResult", align 4
  %6 = alloca i8, align 1
  %7 = bitcast %"class.v8::internal::AstRawString"* %1 to i64**
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.v8::internal::ScopeInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 7, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %13, i64* %14, align 8
  %15 = bitcast %"struct.v8::internal::VariableLookupResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #10
  %16 = call i32 @_ZN2v88internal9ScopeInfo16ContextSlotIndexES1_NS0_6StringEPNS0_20VariableLookupResultE(i64 %13, i64 %9, %"struct.v8::internal::VariableLookupResult"* nonnull %5) #10
  %17 = icmp sgt i32 %16, -1
  %18 = lshr i32 %16, 31
  %19 = trunc i32 %18 to i8
  %20 = xor i8 %19, 1
  br i1 %17, label %32, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 12
  %23 = load i8, i8* %22, align 8
  %24 = icmp eq i8 %23, 3
  br i1 %24, label %25, label %32

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.v8::internal::VariableLookupResult", %"struct.v8::internal::VariableLookupResult"* %5, i64 0, i32 4
  %27 = getelementptr inbounds %"struct.v8::internal::VariableLookupResult", %"struct.v8::internal::VariableLookupResult"* %5, i64 0, i32 5
  %28 = getelementptr inbounds %"struct.v8::internal::VariableLookupResult", %"struct.v8::internal::VariableLookupResult"* %5, i64 0, i32 6
  %29 = call i32 @_ZN2v88internal9ScopeInfo11ModuleIndexENS0_6StringEPNS0_12VariableModeEPNS0_18InitializationFlagEPNS0_17MaybeAssignedFlagE(%"class.v8::internal::ScopeInfo"* nonnull %4, i64 %9, i8* %26, i8* %27, i8* %28) #10
  %30 = icmp ne i32 %29, 0
  %31 = zext i1 %30 to i8
  br label %32

32:                                               ; preds = %25, %21, %3
  %33 = phi i32 [ %16, %3 ], [ %29, %25 ], [ %16, %21 ]
  %34 = phi i16 [ 384, %3 ], [ 640, %25 ], [ 384, %21 ]
  %35 = phi i8 [ %20, %3 ], [ %31, %25 ], [ %20, %21 ]
  %36 = and i8 %35, 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %88

38:                                               ; preds = %32
  %39 = call i32 @_ZNK2v88internal9ScopeInfo24FunctionContextSlotIndexENS0_6StringE(%"class.v8::internal::ScopeInfo"* nonnull %4, i64 %9) #10
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %104, label %41

41:                                               ; preds = %38
  %42 = bitcast %"class.v8::internal::Scope"* %0 to %"class.v8::internal::DeclarationScope"*
  %43 = call %"class.v8::internal::Variable"* @_ZN2v88internal16DeclarationScope18DeclareFunctionVarEPKNS0_12AstRawStringEPNS0_5ScopeE(%"class.v8::internal::DeclarationScope"* %42, %"class.v8::internal::AstRawString"* %1, %"class.v8::internal::Scope"* %2)
  %44 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %43, i64 0, i32 6
  %45 = load i16, i16* %44, align 8
  %46 = and i16 %45, -897
  %47 = or i16 %46, 384
  store i16 %47, i16* %44, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %43, i64 0, i32 4
  store i32 %39, i32* %48, align 8
  %49 = bitcast %"class.v8::internal::AstRawString"* %1 to i8*
  %50 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1, i64 0, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = lshr i32 %51, 2
  %53 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 8
  %55 = add i32 %54, -1
  %56 = and i32 %55, %52
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %59 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %58, align 8
  %60 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %59, i64 %57
  %61 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %60, i64 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = icmp eq i8* %62, null
  %64 = icmp eq i8* %62, %49
  %65 = or i1 %63, %64
  br i1 %65, label %78, label %66

66:                                               ; preds = %41
  %67 = zext i32 %55 to i64
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi i64 [ %57, %66 ], [ %71, %68 ]
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, %67
  %72 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %59, i64 %71
  %73 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %72, i64 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = icmp eq i8* %74, null
  %76 = icmp eq i8* %74, %49
  %77 = or i1 %75, %76
  br i1 %77, label %78, label %68

78:                                               ; preds = %68, %41
  %79 = phi i8* [ %62, %41 ], [ %74, %68 ]
  %80 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %60, %41 ], [ %72, %68 ]
  %81 = icmp eq i8* %79, null
  %82 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %80, null
  %83 = or i1 %81, %82
  br i1 %83, label %104, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %80, i64 0, i32 1
  %86 = bitcast i8** %85 to %"class.v8::internal::Variable"**
  %87 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %86, align 8
  br label %104

88:                                               ; preds = %32
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #10
  %89 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %2, i64 0, i32 3
  %90 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %90, align 8
  %92 = getelementptr inbounds %"struct.v8::internal::VariableLookupResult", %"struct.v8::internal::VariableLookupResult"* %5, i64 0, i32 4
  %93 = load i8, i8* %92, align 2
  %94 = getelementptr inbounds %"struct.v8::internal::VariableLookupResult", %"struct.v8::internal::VariableLookupResult"* %5, i64 0, i32 5
  %95 = load i8, i8* %94, align 1
  %96 = getelementptr inbounds %"struct.v8::internal::VariableLookupResult", %"struct.v8::internal::VariableLookupResult"* %5, i64 0, i32 6
  %97 = load i8, i8* %96, align 4
  %98 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %89, %"class.v8::internal::Zone"* %91, %"class.v8::internal::Scope"* %0, %"class.v8::internal::AstRawString"* %1, i8 zeroext %93, i8 zeroext 0, i8 zeroext %95, i8 zeroext %97, i8 zeroext 0, i8* nonnull %6)
  %99 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %98, i64 0, i32 6
  %100 = load i16, i16* %99, align 8
  %101 = and i16 %100, -897
  %102 = or i16 %101, %34
  store i16 %102, i16* %99, align 8
  %103 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %98, i64 0, i32 4
  store i32 %33, i32* %103, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #10
  br label %104

104:                                              ; preds = %84, %78, %38, %88
  %105 = phi %"class.v8::internal::Variable"* [ %98, %88 ], [ null, %38 ], [ %87, %84 ], [ null, %78 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  ret %"class.v8::internal::Variable"* %105
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal5Scope29AllocateScopeInfosRecursivelyINS0_7IsolateEEEvPT_NS0_11MaybeHandleINS0_9ScopeInfoEEE(%"class.v8::internal::Scope"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 12
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 2
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 11
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %20

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %12, align 8
  %14 = tail call i64* @_ZN2v88internal9ScopeInfo6CreateINS0_7IsolateEEENS0_6HandleIS1_EEPT_PNS0_4ZoneEPNS0_5ScopeENS0_11MaybeHandleIS1_EE(%"class.v8::internal::Isolate"* %1, %"class.v8::internal::Zone"* %13, %"class.v8::internal::Scope"* %0, i64* %2) #10
  %15 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 7, i32 0, i32 0
  store i64* %14, i64** %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 11
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, 0
  %19 = select i1 %18, i64* %14, i64* %2
  br label %20

20:                                               ; preds = %11, %7
  %21 = phi i64* [ %2, %7 ], [ %19, %11 ]
  %22 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 1
  %23 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %22, align 8
  %24 = icmp eq %"class.v8::internal::Scope"* %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %38, %20
  ret void

26:                                               ; preds = %20, %38
  %27 = phi %"class.v8::internal::Scope"* [ %40, %38 ], [ %23, %20 ]
  %28 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %27, i64 0, i32 12
  %29 = load i8, i8* %28, align 8
  %30 = icmp eq i8 %29, 2
  br i1 %30, label %31, label %37

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %27, i64 0, i32 14
  %33 = bitcast [5 x i8]* %32 to i16*
  %34 = load i16, i16* %33, align 1
  %35 = and i16 %34, 68
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %31, %26
  tail call void @_ZN2v88internal5Scope29AllocateScopeInfosRecursivelyINS0_7IsolateEEEvPT_NS0_11MaybeHandleINS0_9ScopeInfoEEE(%"class.v8::internal::Scope"* nonnull %27, %"class.v8::internal::Isolate"* %1, i64* %21)
  br label %38

38:                                               ; preds = %31, %37
  %39 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %27, i64 0, i32 2
  %40 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %39, align 8
  %41 = icmp eq %"class.v8::internal::Scope"* %40, null
  br i1 %41, label %25, label %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal5Scope14NeedsScopeInfoEv(%"class.v8::internal::Scope"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 12
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 2
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 11
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ %8, %5 ], [ true, %1 ]
  ret i1 %10
}

declare i64* @_ZN2v88internal9ScopeInfo6CreateINS0_7IsolateEEENS0_6HandleIS1_EEPT_PNS0_4ZoneEPNS0_5ScopeENS0_11MaybeHandleIS1_EE(%"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, %"class.v8::internal::Scope"*, i64*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal5Scope29AllocateScopeInfosRecursivelyINS0_12LocalIsolateEEEvPT_NS0_11MaybeHandleINS0_9ScopeInfoEEE(%"class.v8::internal::Scope"*, %"class.v8::internal::LocalIsolate"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 12
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 2
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 11
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %20

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %12, align 8
  %14 = tail call i64* @_ZN2v88internal9ScopeInfo6CreateINS0_12LocalIsolateEEENS0_6HandleIS1_EEPT_PNS0_4ZoneEPNS0_5ScopeENS0_11MaybeHandleIS1_EE(%"class.v8::internal::LocalIsolate"* %1, %"class.v8::internal::Zone"* %13, %"class.v8::internal::Scope"* %0, i64* %2) #10
  %15 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 7, i32 0, i32 0
  store i64* %14, i64** %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 11
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, 0
  %19 = select i1 %18, i64* %14, i64* %2
  br label %20

20:                                               ; preds = %11, %7
  %21 = phi i64* [ %2, %7 ], [ %19, %11 ]
  %22 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 1
  %23 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %22, align 8
  %24 = icmp eq %"class.v8::internal::Scope"* %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %38, %20
  ret void

26:                                               ; preds = %20, %38
  %27 = phi %"class.v8::internal::Scope"* [ %40, %38 ], [ %23, %20 ]
  %28 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %27, i64 0, i32 12
  %29 = load i8, i8* %28, align 8
  %30 = icmp eq i8 %29, 2
  br i1 %30, label %31, label %37

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %27, i64 0, i32 14
  %33 = bitcast [5 x i8]* %32 to i16*
  %34 = load i16, i16* %33, align 1
  %35 = and i16 %34, 68
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %31, %26
  tail call void @_ZN2v88internal5Scope29AllocateScopeInfosRecursivelyINS0_12LocalIsolateEEEvPT_NS0_11MaybeHandleINS0_9ScopeInfoEEE(%"class.v8::internal::Scope"* nonnull %27, %"class.v8::internal::LocalIsolate"* %1, i64* %21)
  br label %38

38:                                               ; preds = %31, %37
  %39 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %27, i64 0, i32 2
  %40 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %39, align 8
  %41 = icmp eq %"class.v8::internal::Scope"* %40, null
  br i1 %41, label %25, label %26
}

declare i64* @_ZN2v88internal9ScopeInfo6CreateINS0_12LocalIsolateEEENS0_6HandleIS1_EEPT_PNS0_4ZoneEPNS0_5ScopeENS0_11MaybeHandleIS1_EE(%"class.v8::internal::LocalIsolate"*, %"class.v8::internal::Zone"*, %"class.v8::internal::Scope"*, i64*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal16DeclarationScope18AllocateScopeInfosINS0_7IsolateEEEvPNS0_9ParseInfoEPT_(%"class.v8::internal::ParseInfo"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 15
  %4 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %4, i64 0, i32 8
  %6 = load %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::DeclarationScope"** %5, align 8
  %7 = bitcast %"class.v8::internal::DeclarationScope"* %6 to %"class.v8::internal::Scope"*
  %8 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %6, i64 0, i32 0, i32 0
  %9 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %8, align 8
  %10 = icmp eq %"class.v8::internal::Scope"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %9, i64 0, i32 7, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  br label %14

14:                                               ; preds = %2, %11
  %15 = phi i64* [ null, %2 ], [ %13, %11 ]
  %16 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %6, i64 0, i32 1
  %17 = load i16, i16* %16, align 1
  %18 = and i16 %17, 8192
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %71, label %20

20:                                               ; preds = %14, %69
  %21 = phi %"class.v8::internal::Scope"* [ %70, %69 ], [ %7, %14 ]
  %22 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %21, i64 0, i32 0
  %23 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %22, align 8
  %24 = icmp eq %"class.v8::internal::Scope"* %23, null
  br i1 %24, label %47, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %23, i64 0, i32 11
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %23, i64 0, i32 13
  %31 = load i16, i16* %30, align 1
  %32 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %21, i64 0, i32 13
  %33 = and i16 %31, 512
  %34 = load i16, i16* %32, align 1
  %35 = and i16 %34, -513
  %36 = or i16 %35, %33
  store i16 %36, i16* %32, align 1
  br label %37

37:                                               ; preds = %29, %25
  %38 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %21, i64 0, i32 12
  %39 = load i8, i8* %38, align 8
  %40 = icmp eq i8 %39, 2
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %21, i64 0, i32 14
  %43 = bitcast [5 x i8]* %42 to i16*
  %44 = load i16, i16* %43, align 1
  %45 = and i16 %44, 68
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %41, %37, %20
  %48 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %21, i64 0, i32 1
  %49 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %48, align 8
  %50 = icmp eq %"class.v8::internal::Scope"* %49, null
  br i1 %50, label %51, label %69

51:                                               ; preds = %47, %41
  %52 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %21, i64 0, i32 2
  %53 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %52, align 8
  %54 = icmp eq %"class.v8::internal::Scope"* %53, null
  %55 = icmp eq %"class.v8::internal::Scope"* %21, %7
  br i1 %54, label %56, label %66

56:                                               ; preds = %51, %59
  %57 = phi i1 [ %65, %59 ], [ %55, %51 ]
  %58 = phi %"class.v8::internal::Scope"* [ %61, %59 ], [ %21, %51 ]
  br i1 %57, label %71, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %58, i64 0, i32 0
  %61 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %61, i64 0, i32 2
  %63 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %62, align 8
  %64 = icmp eq %"class.v8::internal::Scope"* %63, null
  %65 = icmp eq %"class.v8::internal::Scope"* %61, %7
  br i1 %64, label %56, label %66

66:                                               ; preds = %59, %51
  %67 = phi %"class.v8::internal::Scope"* [ %53, %51 ], [ %63, %59 ]
  %68 = phi i1 [ %55, %51 ], [ %65, %59 ]
  br i1 %68, label %71, label %69

69:                                               ; preds = %66, %47
  %70 = phi %"class.v8::internal::Scope"* [ %49, %47 ], [ %67, %66 ]
  br label %20

71:                                               ; preds = %66, %56, %14
  tail call void @_ZN2v88internal5Scope29AllocateScopeInfosRecursivelyINS0_7IsolateEEEvPT_NS0_11MaybeHandleINS0_9ScopeInfoEEE(%"class.v8::internal::Scope"* %7, %"class.v8::internal::Isolate"* %1, i64* %15)
  %72 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %6, i64 0, i32 0, i32 7, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = icmp eq i64* %73, null
  br i1 %74, label %75, label %79

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %6, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %76, align 8
  %78 = tail call i64* @_ZN2v88internal9ScopeInfo6CreateINS0_7IsolateEEENS0_6HandleIS1_EEPT_PNS0_4ZoneEPNS0_5ScopeENS0_11MaybeHandleIS1_EE(%"class.v8::internal::Isolate"* %1, %"class.v8::internal::Zone"* %77, %"class.v8::internal::Scope"* %7, i64* %15) #10
  store i64* %78, i64** %72, align 8
  br label %79

79:                                               ; preds = %75, %71
  %80 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 5
  %81 = load %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::DeclarationScope"** %80, align 8
  %82 = icmp eq %"class.v8::internal::DeclarationScope"* %81, null
  br i1 %82, label %89, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %81, i64 0, i32 0, i32 7, i32 0, i32 0
  %85 = load i64*, i64** %84, align 8
  %86 = icmp eq i64* %85, null
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 28
  store i64* %88, i64** %84, align 8
  br label %89

89:                                               ; preds = %79, %87, %83
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal16DeclarationScope29RecalcPrivateNameContextChainEv(%"class.v8::internal::DeclarationScope"*) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.v8::internal::DeclarationScope"* %0 to %"class.v8::internal::Scope"*
  br label %3

3:                                                ; preds = %52, %1
  %4 = phi %"class.v8::internal::Scope"* [ %2, %1 ], [ %53, %52 ]
  %5 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 0
  %6 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %5, align 8
  %7 = icmp eq %"class.v8::internal::Scope"* %6, null
  br i1 %7, label %30, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %6, i64 0, i32 11
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %20, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %6, i64 0, i32 13
  %14 = load i16, i16* %13, align 1
  %15 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 13
  %16 = and i16 %14, 512
  %17 = load i16, i16* %15, align 1
  %18 = and i16 %17, -513
  %19 = or i16 %18, %16
  store i16 %19, i16* %15, align 1
  br label %20

20:                                               ; preds = %12, %8
  %21 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 12
  %22 = load i8, i8* %21, align 8
  %23 = icmp eq i8 %22, 2
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 14
  %26 = bitcast [5 x i8]* %25 to i16*
  %27 = load i16, i16* %26, align 1
  %28 = and i16 %27, 68
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %24, %20, %3
  %31 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 1
  %32 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %31, align 8
  %33 = icmp eq %"class.v8::internal::Scope"* %32, null
  br i1 %33, label %34, label %52

34:                                               ; preds = %30, %24
  %35 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 2
  %36 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %35, align 8
  %37 = icmp eq %"class.v8::internal::Scope"* %36, null
  %38 = icmp eq %"class.v8::internal::Scope"* %4, %2
  br i1 %37, label %39, label %49

39:                                               ; preds = %34, %42
  %40 = phi i1 [ %48, %42 ], [ %38, %34 ]
  %41 = phi %"class.v8::internal::Scope"* [ %44, %42 ], [ %4, %34 ]
  br i1 %40, label %54, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %41, i64 0, i32 0
  %44 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %44, i64 0, i32 2
  %46 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %45, align 8
  %47 = icmp eq %"class.v8::internal::Scope"* %46, null
  %48 = icmp eq %"class.v8::internal::Scope"* %44, %2
  br i1 %47, label %39, label %49

49:                                               ; preds = %42, %34
  %50 = phi %"class.v8::internal::Scope"* [ %36, %34 ], [ %46, %42 ]
  %51 = phi i1 [ %38, %34 ], [ %48, %42 ]
  br i1 %51, label %54, label %52

52:                                               ; preds = %49, %30
  %53 = phi %"class.v8::internal::Scope"* [ %32, %30 ], [ %50, %49 ]
  br label %3

54:                                               ; preds = %49, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal16DeclarationScope18AllocateScopeInfosINS0_12LocalIsolateEEEvPNS0_9ParseInfoEPT_(%"class.v8::internal::ParseInfo"*, %"class.v8::internal::LocalIsolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 15
  %4 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %4, i64 0, i32 8
  %6 = load %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::DeclarationScope"** %5, align 8
  %7 = bitcast %"class.v8::internal::DeclarationScope"* %6 to %"class.v8::internal::Scope"*
  %8 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %6, i64 0, i32 0, i32 0
  %9 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %8, align 8
  %10 = icmp eq %"class.v8::internal::Scope"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %9, i64 0, i32 7, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  br label %14

14:                                               ; preds = %2, %11
  %15 = phi i64* [ null, %2 ], [ %13, %11 ]
  %16 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %6, i64 0, i32 1
  %17 = load i16, i16* %16, align 1
  %18 = and i16 %17, 8192
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %71, label %20

20:                                               ; preds = %14, %69
  %21 = phi %"class.v8::internal::Scope"* [ %70, %69 ], [ %7, %14 ]
  %22 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %21, i64 0, i32 0
  %23 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %22, align 8
  %24 = icmp eq %"class.v8::internal::Scope"* %23, null
  br i1 %24, label %47, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %23, i64 0, i32 11
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %23, i64 0, i32 13
  %31 = load i16, i16* %30, align 1
  %32 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %21, i64 0, i32 13
  %33 = and i16 %31, 512
  %34 = load i16, i16* %32, align 1
  %35 = and i16 %34, -513
  %36 = or i16 %35, %33
  store i16 %36, i16* %32, align 1
  br label %37

37:                                               ; preds = %29, %25
  %38 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %21, i64 0, i32 12
  %39 = load i8, i8* %38, align 8
  %40 = icmp eq i8 %39, 2
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %21, i64 0, i32 14
  %43 = bitcast [5 x i8]* %42 to i16*
  %44 = load i16, i16* %43, align 1
  %45 = and i16 %44, 68
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %41, %37, %20
  %48 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %21, i64 0, i32 1
  %49 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %48, align 8
  %50 = icmp eq %"class.v8::internal::Scope"* %49, null
  br i1 %50, label %51, label %69

51:                                               ; preds = %47, %41
  %52 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %21, i64 0, i32 2
  %53 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %52, align 8
  %54 = icmp eq %"class.v8::internal::Scope"* %53, null
  %55 = icmp eq %"class.v8::internal::Scope"* %21, %7
  br i1 %54, label %56, label %66

56:                                               ; preds = %51, %59
  %57 = phi i1 [ %65, %59 ], [ %55, %51 ]
  %58 = phi %"class.v8::internal::Scope"* [ %61, %59 ], [ %21, %51 ]
  br i1 %57, label %71, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %58, i64 0, i32 0
  %61 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %61, i64 0, i32 2
  %63 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %62, align 8
  %64 = icmp eq %"class.v8::internal::Scope"* %63, null
  %65 = icmp eq %"class.v8::internal::Scope"* %61, %7
  br i1 %64, label %56, label %66

66:                                               ; preds = %59, %51
  %67 = phi %"class.v8::internal::Scope"* [ %53, %51 ], [ %63, %59 ]
  %68 = phi i1 [ %55, %51 ], [ %65, %59 ]
  br i1 %68, label %71, label %69

69:                                               ; preds = %66, %47
  %70 = phi %"class.v8::internal::Scope"* [ %49, %47 ], [ %67, %66 ]
  br label %20

71:                                               ; preds = %66, %56, %14
  tail call void @_ZN2v88internal5Scope29AllocateScopeInfosRecursivelyINS0_12LocalIsolateEEEvPT_NS0_11MaybeHandleINS0_9ScopeInfoEEE(%"class.v8::internal::Scope"* %7, %"class.v8::internal::LocalIsolate"* %1, i64* %15)
  %72 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %6, i64 0, i32 0, i32 7, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = icmp eq i64* %73, null
  br i1 %74, label %75, label %79

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %6, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %76, align 8
  %78 = tail call i64* @_ZN2v88internal9ScopeInfo6CreateINS0_12LocalIsolateEEENS0_6HandleIS1_EEPT_PNS0_4ZoneEPNS0_5ScopeENS0_11MaybeHandleIS1_EE(%"class.v8::internal::LocalIsolate"* %1, %"class.v8::internal::Zone"* %77, %"class.v8::internal::Scope"* %7, i64* %15) #10
  store i64* %78, i64** %72, align 8
  br label %79

79:                                               ; preds = %75, %71
  %80 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 5
  %81 = load %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::DeclarationScope"** %80, align 8
  %82 = icmp eq %"class.v8::internal::DeclarationScope"* %81, null
  br i1 %82, label %91, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %81, i64 0, i32 0, i32 7, i32 0, i32 0
  %85 = load i64*, i64** %84, align 8
  %86 = icmp eq i64* %85, null
  br i1 %86, label %87, label %91

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i64*, i64** %88, align 8
  %90 = getelementptr inbounds i64, i64* %89, i64 28
  store i64* %90, i64** %84, align 8
  br label %91

91:                                               ; preds = %79, %87, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11VariableMapC2EPNS0_4ZoneE(%"class.v8::internal::VariableMap"* nocapture, %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %4 = bitcast %"class.v8::internal::VariableMap"* %0 to i64*
  store i64 %3, i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::VariableMap", %"class.v8::internal::VariableMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.v8::base::TemplateHashMapEntry"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #10
  %7 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %10, %8
  %12 = icmp ult i64 %11, 192
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %2
  %14 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 192) #10
  br label %17

15:                                               ; preds = %2
  %16 = add i64 %8, 192
  store i64 %16, i64* %7, align 8
  br label %17

17:                                               ; preds = %15, %13
  %18 = phi i64 [ %14, %13 ], [ %8, %15 ]
  %19 = inttoptr i64 %18 to %"struct.v8::base::TemplateHashMapEntry"*
  store %"struct.v8::base::TemplateHashMapEntry"* %19, %"struct.v8::base::TemplateHashMapEntry"** %5, align 8
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0)) #11
  unreachable

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.v8::internal::VariableMap", %"class.v8::internal::VariableMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 8, i32* %23, align 8
  %24 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %19, i64 0, i32 0
  store i8* null, i8** %24, align 8
  %25 = load i32, i32* %23, align 8
  %26 = icmp ugt i32 %25, 1
  br i1 %26, label %27, label %35

27:                                               ; preds = %22, %27
  %28 = phi i64 [ %31, %27 ], [ 1, %22 ]
  %29 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %5, align 8
  %30 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %29, i64 %28, i32 0
  store i8* null, i8** %30, align 8
  %31 = add nuw nsw i64 %28, 1
  %32 = load i32, i32* %23, align 8
  %33 = zext i32 %32 to i64
  %34 = icmp ult i64 %31, %33
  br i1 %34, label %27, label %35

35:                                               ; preds = %27, %22
  %36 = getelementptr inbounds %"class.v8::internal::VariableMap", %"class.v8::internal::VariableMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  store i32 0, i32* %36, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11VariableMapC2ERKS1_PNS0_4ZoneE(%"class.v8::internal::VariableMap"* nocapture, %"class.v8::internal::VariableMap"* nocapture readonly dereferenceable(24), %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.v8::internal::Zone"* %2 to i64
  %5 = bitcast %"class.v8::internal::VariableMap"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::VariableMap", %"class.v8::internal::VariableMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.v8::base::TemplateHashMapEntry"** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #10
  %8 = getelementptr inbounds %"class.v8::internal::VariableMap", %"class.v8::internal::VariableMap"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::VariableMap", %"class.v8::internal::VariableMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %9, i32* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::VariableMap", %"class.v8::internal::VariableMap"* %1, i64 0, i32 0, i32 0, i32 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.v8::internal::VariableMap", %"class.v8::internal::VariableMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  store i32 %12, i32* %13, align 4
  %14 = zext i32 %9 to i64
  %15 = mul nuw nsw i64 %14, 24
  %16 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %17
  %21 = icmp ugt i64 %15, %20
  br i1 %21, label %22, label %24, !prof !2

22:                                               ; preds = %3
  %23 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 %15) #10
  br label %26

24:                                               ; preds = %3
  %25 = add i64 %17, %15
  store i64 %25, i64* %16, align 8
  br label %26

26:                                               ; preds = %22, %24
  %27 = phi i64 [ %23, %22 ], [ %17, %24 ]
  %28 = inttoptr i64 %27 to %"struct.v8::base::TemplateHashMapEntry"*
  store %"struct.v8::base::TemplateHashMapEntry"* %28, %"struct.v8::base::TemplateHashMapEntry"** %6, align 8
  %29 = inttoptr i64 %27 to i8*
  %30 = getelementptr inbounds %"class.v8::internal::VariableMap", %"class.v8::internal::VariableMap"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast %"struct.v8::base::TemplateHashMapEntry"** %30 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = load i32, i32* %10, align 8
  %34 = zext i32 %33 to i64
  %35 = mul nuw nsw i64 %34, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %32, i64 %35, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"*, %"class.v8::internal::Zone"*, %"class.v8::internal::Scope"*, %"class.v8::internal::AstRawString"*, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i8* nocapture) local_unnamed_addr #0 align 2 {
  %11 = ptrtoint %"class.v8::internal::Scope"* %2 to i64
  %12 = ptrtoint %"class.v8::internal::AstRawString"* %3 to i64
  %13 = getelementptr inbounds %"class.v8::internal::VariableMap", %"class.v8::internal::VariableMap"* %0, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %3, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = getelementptr inbounds %"class.v8::internal::VariableMap", %"class.v8::internal::VariableMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, -1
  %20 = and i32 %19, %16
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.v8::internal::VariableMap", %"class.v8::internal::VariableMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %23 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %22, align 8
  %24 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %23, i64 %21
  %25 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %24, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  %28 = bitcast %"class.v8::internal::AstRawString"* %3 to i8*
  %29 = icmp eq i8* %26, %28
  %30 = or i1 %27, %29
  br i1 %30, label %43, label %31

31:                                               ; preds = %10
  %32 = zext i32 %19 to i64
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi i64 [ %21, %31 ], [ %36, %33 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = and i64 %35, %32
  %37 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %23, i64 %36
  %38 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %37, i64 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  %41 = icmp eq i8* %39, %28
  %42 = or i1 %40, %41
  br i1 %42, label %43, label %33

43:                                               ; preds = %33, %10
  %44 = phi i8* [ %26, %10 ], [ %39, %33 ]
  %45 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %24, %10 ], [ %37, %33 ]
  %46 = icmp eq i8* %44, null
  br i1 %46, label %47, label %83

47:                                               ; preds = %43
  %48 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %45 to i64*
  store i64 %12, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %45, i64 0, i32 1
  %50 = bitcast i8** %49 to i64*
  store i64 0, i64* %50, align 8
  %51 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %45, i64 0, i32 2
  store i32 %16, i32* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::VariableMap", %"class.v8::internal::VariableMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = add i32 %53, 1
  store i32 %54, i32* %52, align 4
  %55 = lshr i32 %54, 2
  %56 = add i32 %55, %54
  %57 = load i32, i32* %17, align 8
  %58 = icmp ult i32 %56, %57
  br i1 %58, label %83, label %59

59:                                               ; preds = %47
  tail call void @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_18KeyEqualityMatcherIS2_EENS_8internal20ZoneAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl"* %13) #10
  %60 = load i32, i32* %17, align 8
  %61 = add i32 %60, -1
  %62 = and i32 %61, %16
  %63 = zext i32 %62 to i64
  %64 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %22, align 8
  %65 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %64, i64 %63
  %66 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %65, i64 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = icmp eq i8* %67, null
  %69 = icmp eq i8* %67, %28
  %70 = or i1 %68, %69
  br i1 %70, label %83, label %71

71:                                               ; preds = %59
  %72 = zext i32 %61 to i64
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ %63, %71 ], [ %76, %73 ]
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, %72
  %77 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %64, i64 %76
  %78 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %77, i64 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = icmp eq i8* %79, null
  %81 = icmp eq i8* %79, %28
  %82 = or i1 %80, %81
  br i1 %82, label %83, label %73

83:                                               ; preds = %73, %43, %47, %59
  %84 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %45, %43 ], [ %45, %47 ], [ %65, %59 ], [ %77, %73 ]
  %85 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %84, i64 0, i32 1
  %86 = load i8*, i8** %85, align 8
  %87 = icmp eq i8* %86, null
  %88 = zext i1 %87 to i8
  store i8 %88, i8* %9, align 1
  br i1 %87, label %92, label %89

89:                                               ; preds = %83
  %90 = bitcast i8** %85 to %"class.v8::internal::Variable"**
  %91 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %90, align 8
  br label %128

92:                                               ; preds = %83
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %96, %94
  %98 = icmp ult i64 %97, 48
  br i1 %98, label %99, label %101, !prof !2

99:                                               ; preds = %92
  %100 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 48) #10
  br label %103

101:                                              ; preds = %92
  %102 = add i64 %94, 48
  store i64 %102, i64* %93, align 8
  br label %103

103:                                              ; preds = %99, %101
  %104 = phi i64 [ %100, %99 ], [ %94, %101 ]
  %105 = inttoptr i64 %104 to %"class.v8::internal::Variable"*
  %106 = inttoptr i64 %104 to i64*
  store i64 %11, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %105, i64 0, i32 1
  %108 = bitcast %"class.v8::internal::AstRawString"** %107 to i64*
  store i64 %12, i64* %108, align 8
  %109 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %105, i64 0, i32 2
  %110 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %105, i64 0, i32 4
  %111 = bitcast %"class.v8::internal::Variable"** %109 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 16, i1 false) #10
  store i32 -1, i32* %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %105, i64 0, i32 5
  store i32 -1, i32* %112, align 4
  %113 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %105, i64 0, i32 6
  %114 = zext i8 %7 to i16
  %115 = shl i16 %114, 14
  %116 = zext i8 %6 to i16
  %117 = shl i16 %116, 12
  %118 = zext i8 %4 to i16
  %119 = zext i8 %5 to i16
  %120 = shl nuw nsw i16 %119, 4
  %121 = zext i8 %8 to i16
  %122 = shl i16 %121, 15
  %123 = or i16 %120, %118
  %124 = or i16 %123, %117
  %125 = or i16 %124, %115
  %126 = or i16 %125, %122
  store i16 %126, i16* %113, align 8
  %127 = bitcast i8** %85 to %"class.v8::internal::Variable"**
  store %"class.v8::internal::Variable"* %105, %"class.v8::internal::Variable"** %127, align 8
  br label %128

128:                                              ; preds = %89, %103
  %129 = phi %"class.v8::internal::Variable"* [ %91, %89 ], [ %105, %103 ]
  ret %"class.v8::internal::Variable"* %129
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11VariableMap6RemoveEPNS0_8VariableE(%"class.v8::internal::VariableMap"* nocapture, %"class.v8::internal::Variable"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %3, align 8
  %5 = bitcast %"class.v8::internal::AstRawString"* %4 to i8*
  %6 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %4, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = getelementptr inbounds %"class.v8::internal::VariableMap", %"class.v8::internal::VariableMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = and i32 %11, %8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.v8::internal::VariableMap", %"class.v8::internal::VariableMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %15 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %14, align 8
  %16 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %15, i64 %13
  %17 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  %20 = icmp eq i8* %18, %5
  %21 = or i1 %19, %20
  br i1 %21, label %34, label %22

22:                                               ; preds = %2
  %23 = zext i32 %11 to i64
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi i64 [ %13, %22 ], [ %27, %24 ]
  %26 = add nuw nsw i64 %25, 1
  %27 = and i64 %26, %23
  %28 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %15, i64 %27
  %29 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %28, i64 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  %32 = icmp eq i8* %30, %5
  %33 = or i1 %31, %32
  br i1 %33, label %34, label %24

34:                                               ; preds = %24, %2
  %35 = phi i8* [ %18, %2 ], [ %30, %24 ]
  %36 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %16, %2 ], [ %28, %24 ]
  %37 = icmp eq i8* %35, null
  br i1 %37, label %92, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %36, i64 1
  %40 = zext i32 %10 to i64
  %41 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %15, i64 %40
  %42 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %39, %41
  %43 = select i1 %42, %"struct.v8::base::TemplateHashMapEntry"* %15, %"struct.v8::base::TemplateHashMapEntry"* %39
  %44 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %43, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %86, label %47

47:                                               ; preds = %38, %74
  %48 = phi i32 [ %75, %74 ], [ %10, %38 ]
  %49 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %76, %74 ], [ %15, %38 ]
  %50 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %82, %74 ], [ %43, %38 ]
  %51 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %77, %74 ], [ %36, %38 ]
  %52 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %50, i64 0, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = add i32 %48, -1
  %55 = and i32 %53, %54
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %49, i64 %56
  %58 = icmp ugt %"struct.v8::base::TemplateHashMapEntry"* %50, %51
  br i1 %58, label %59, label %63

59:                                               ; preds = %47
  %60 = icmp ule %"struct.v8::base::TemplateHashMapEntry"* %57, %51
  %61 = icmp ugt %"struct.v8::base::TemplateHashMapEntry"* %57, %50
  %62 = or i1 %60, %61
  br i1 %62, label %69, label %63

63:                                               ; preds = %59, %47
  %64 = icmp ult %"struct.v8::base::TemplateHashMapEntry"* %50, %51
  %65 = icmp ule %"struct.v8::base::TemplateHashMapEntry"* %57, %51
  %66 = and i1 %64, %65
  %67 = icmp ugt %"struct.v8::base::TemplateHashMapEntry"* %57, %50
  %68 = and i1 %67, %66
  br i1 %68, label %69, label %74

69:                                               ; preds = %63, %59
  %70 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %51 to i8*
  %71 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 20, i1 false) #10
  %72 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %14, align 8
  %73 = load i32, i32* %9, align 8
  br label %74

74:                                               ; preds = %69, %63
  %75 = phi i32 [ %73, %69 ], [ %48, %63 ]
  %76 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %72, %69 ], [ %49, %63 ]
  %77 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %50, %69 ], [ %51, %63 ]
  %78 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %50, i64 1
  %79 = zext i32 %75 to i64
  %80 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %76, i64 %79
  %81 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %78, %80
  %82 = select i1 %81, %"struct.v8::base::TemplateHashMapEntry"* %76, %"struct.v8::base::TemplateHashMapEntry"* %78
  %83 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %82, i64 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = icmp eq i8* %84, null
  br i1 %85, label %86, label %47

86:                                               ; preds = %74, %38
  %87 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %36, %38 ], [ %77, %74 ]
  %88 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %87, i64 0, i32 0
  store i8* null, i8** %88, align 8
  %89 = getelementptr inbounds %"class.v8::internal::VariableMap", %"class.v8::internal::VariableMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %90 = load i32, i32* %89, align 4
  %91 = add i32 %90, -1
  store i32 %91, i32* %89, align 4
  br label %92

92:                                               ; preds = %34, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11VariableMap3AddEPNS0_8VariableE(%"class.v8::internal::VariableMap"*, %"class.v8::internal::Variable"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::VariableMap", %"class.v8::internal::VariableMap"* %0, i64 0, i32 0, i32 0
  %6 = bitcast %"class.v8::internal::AstRawString"* %4 to i8*
  %7 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %4, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = lshr i32 %8, 2
  %10 = getelementptr inbounds %"class.v8::internal::VariableMap", %"class.v8::internal::VariableMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, -1
  %13 = and i32 %12, %9
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.v8::internal::VariableMap", %"class.v8::internal::VariableMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %15, align 8
  %17 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %16, i64 %14
  %18 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %17, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  %21 = icmp eq i8* %19, %6
  %22 = or i1 %20, %21
  br i1 %22, label %35, label %23

23:                                               ; preds = %2
  %24 = zext i32 %12 to i64
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi i64 [ %14, %23 ], [ %28, %25 ]
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, %24
  %29 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %16, i64 %28
  %30 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %29, i64 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  %33 = icmp eq i8* %31, %6
  %34 = or i1 %32, %33
  br i1 %34, label %35, label %25

35:                                               ; preds = %25, %2
  %36 = phi i8* [ %19, %2 ], [ %31, %25 ]
  %37 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %17, %2 ], [ %29, %25 ]
  %38 = icmp eq i8* %36, null
  br i1 %38, label %39, label %76

39:                                               ; preds = %35
  %40 = ptrtoint %"class.v8::internal::AstRawString"* %4 to i64
  %41 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %37 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %37, i64 0, i32 1
  %43 = bitcast i8** %42 to i64*
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %37, i64 0, i32 2
  store i32 %9, i32* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::VariableMap", %"class.v8::internal::VariableMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %45, align 4
  %48 = lshr i32 %47, 2
  %49 = add i32 %48, %47
  %50 = load i32, i32* %10, align 8
  %51 = icmp ult i32 %49, %50
  br i1 %51, label %76, label %52

52:                                               ; preds = %39
  tail call void @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_18KeyEqualityMatcherIS2_EENS_8internal20ZoneAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl"* %5) #10
  %53 = load i32, i32* %10, align 8
  %54 = add i32 %53, -1
  %55 = and i32 %54, %9
  %56 = zext i32 %55 to i64
  %57 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %15, align 8
  %58 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %57, i64 %56
  %59 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %58, i64 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, null
  %62 = icmp eq i8* %60, %6
  %63 = or i1 %61, %62
  br i1 %63, label %76, label %64

64:                                               ; preds = %52
  %65 = zext i32 %54 to i64
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ %56, %64 ], [ %69, %66 ]
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, %65
  %70 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %57, i64 %69
  %71 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %70, i64 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = icmp eq i8* %72, null
  %74 = icmp eq i8* %72, %6
  %75 = or i1 %73, %74
  br i1 %75, label %76, label %66

76:                                               ; preds = %66, %35, %39, %52
  %77 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %37, %35 ], [ %37, %39 ], [ %58, %52 ], [ %70, %66 ]
  %78 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %77, i64 0, i32 1
  %79 = bitcast i8** %78 to %"class.v8::internal::Variable"**
  store %"class.v8::internal::Variable"* %1, %"class.v8::internal::Variable"** %79, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5ScopeC2EPNS0_4ZoneE(%"class.v8::internal::Scope"*, %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 0
  store %"class.v8::internal::Scope"* null, %"class.v8::internal::Scope"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3
  %5 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %6 = bitcast %"class.v8::internal::VariableMap"* %4 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.v8::base::TemplateHashMapEntry"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #10
  %9 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %10
  %14 = icmp ult i64 %13, 192
  br i1 %14, label %15, label %17, !prof !2

15:                                               ; preds = %2
  %16 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 192) #10
  br label %19

17:                                               ; preds = %2
  %18 = add i64 %10, 192
  store i64 %18, i64* %9, align 8
  br label %19

19:                                               ; preds = %17, %15
  %20 = phi i64 [ %16, %15 ], [ %10, %17 ]
  %21 = inttoptr i64 %20 to %"struct.v8::base::TemplateHashMapEntry"*
  store %"struct.v8::base::TemplateHashMapEntry"* %21, %"struct.v8::base::TemplateHashMapEntry"** %7, align 8
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %19
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0)) #11
  unreachable

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store i32 8, i32* %25, align 8
  %26 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %21, i64 0, i32 0
  store i8* null, i8** %26, align 8
  %27 = load i32, i32* %25, align 8
  %28 = icmp ugt i32 %27, 1
  br i1 %28, label %29, label %37

29:                                               ; preds = %24, %29
  %30 = phi i64 [ %33, %29 ], [ 1, %24 ]
  %31 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %7, align 8
  %32 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %31, i64 %30, i32 0
  store i8* null, i8** %32, align 8
  %33 = add nuw nsw i64 %30, 1
  %34 = load i32, i32* %25, align 8
  %35 = zext i32 %34 to i64
  %36 = icmp ult i64 %33, %35
  br i1 %36, label %29, label %37

37:                                               ; preds = %29, %24
  %38 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 3
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 4, i32 0
  store %"class.v8::internal::Variable"* null, %"class.v8::internal::Variable"** %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 4, i32 1
  store %"class.v8::internal::Variable"** %39, %"class.v8::internal::Variable"*** %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 5, i32 0
  %42 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 5, i32 1
  %43 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 6, i32 0
  store %"class.v8::internal::Declaration"* null, %"class.v8::internal::Declaration"** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 6, i32 1
  store %"class.v8::internal::Declaration"** %43, %"class.v8::internal::Declaration"*** %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 12
  store i8 4, i8* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 1
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %41, align 8
  %48 = bitcast %"class.v8::internal::Scope"** %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #10
  store %"class.v8::internal::VariableProxy"** %41, %"class.v8::internal::VariableProxy"*** %42, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 8
  %50 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 13
  %51 = load i16, i16* %50, align 1
  %52 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 2>, <4 x i32>* %52, align 8
  %53 = and i16 %51, -32768
  store i16 %53, i16* %50, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal5Scope11SetDefaultsEv(%"class.v8::internal::Scope"*) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 5, i32 0
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 5, i32 1
  %5 = bitcast %"class.v8::internal::Scope"** %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  store %"class.v8::internal::VariableProxy"** %3, %"class.v8::internal::VariableProxy"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 8
  store i32 -1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 9
  store i32 -1, i32* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 13
  %9 = load i16, i16* %8, align 1
  %10 = and i16 %9, -32767
  store i16 %10, i16* %8, align 1
  %11 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 10
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 12
  %13 = load i8, i8* %12, align 8
  switch i8 %13, label %15 [
    i8 3, label %14
    i8 7, label %14
  ]

14:                                               ; preds = %1, %1
  br label %15

15:                                               ; preds = %1, %14
  %16 = phi i32 [ 3, %14 ], [ 2, %1 ]
  %17 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 11
  store i32 %16, i32* %17, align 4
  %18 = and i16 %9, -32768
  store i16 %18, i16* %8, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5ScopeC2EPNS0_4ZoneEPS1_NS0_9ScopeTypeE(%"class.v8::internal::Scope"*, %"class.v8::internal::Zone"*, %"class.v8::internal::Scope"*, i8 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 0
  store %"class.v8::internal::Scope"* %2, %"class.v8::internal::Scope"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3
  %7 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %8 = bitcast %"class.v8::internal::VariableMap"* %6 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.v8::base::TemplateHashMapEntry"** %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #10
  %11 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %12
  %16 = icmp ult i64 %15, 192
  br i1 %16, label %17, label %19, !prof !2

17:                                               ; preds = %4
  %18 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 192) #10
  br label %21

19:                                               ; preds = %4
  %20 = add i64 %12, 192
  store i64 %20, i64* %11, align 8
  br label %21

21:                                               ; preds = %19, %17
  %22 = phi i64 [ %18, %17 ], [ %12, %19 ]
  %23 = inttoptr i64 %22 to %"struct.v8::base::TemplateHashMapEntry"*
  store %"struct.v8::base::TemplateHashMapEntry"* %23, %"struct.v8::base::TemplateHashMapEntry"** %9, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %21
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0)) #11
  unreachable

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store i32 8, i32* %27, align 8
  %28 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %23, i64 0, i32 0
  store i8* null, i8** %28, align 8
  %29 = load i32, i32* %27, align 8
  %30 = icmp ugt i32 %29, 1
  br i1 %30, label %31, label %39

31:                                               ; preds = %26, %31
  %32 = phi i64 [ %35, %31 ], [ 1, %26 ]
  %33 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %9, align 8
  %34 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %33, i64 %32, i32 0
  store i8* null, i8** %34, align 8
  %35 = add nuw nsw i64 %32, 1
  %36 = load i32, i32* %27, align 8
  %37 = zext i32 %36 to i64
  %38 = icmp ult i64 %35, %37
  br i1 %38, label %31, label %39

39:                                               ; preds = %31, %26
  %40 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 3
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 4, i32 0
  store %"class.v8::internal::Variable"* null, %"class.v8::internal::Variable"** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 4, i32 1
  store %"class.v8::internal::Variable"** %41, %"class.v8::internal::Variable"*** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 5, i32 0
  %44 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 5, i32 1
  %45 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 6, i32 0
  store %"class.v8::internal::Declaration"* null, %"class.v8::internal::Declaration"** %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 6, i32 1
  store %"class.v8::internal::Declaration"** %45, %"class.v8::internal::Declaration"*** %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 12
  store i8 %3, i8* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 1
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %43, align 8
  %50 = bitcast %"class.v8::internal::Scope"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 16, i1 false) #10
  store %"class.v8::internal::VariableProxy"** %43, %"class.v8::internal::VariableProxy"*** %44, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 8
  store i32 -1, i32* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 9
  store i32 -1, i32* %52, align 4
  %53 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 13
  %54 = load i16, i16* %53, align 1
  %55 = and i16 %54, -32767
  store i16 %55, i16* %53, align 1
  %56 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 10
  store i32 0, i32* %56, align 8
  switch i8 %3, label %58 [
    i8 3, label %57
    i8 7, label %57
  ]

57:                                               ; preds = %39, %39
  br label %58

58:                                               ; preds = %39, %57
  %59 = phi i32 [ 3, %57 ], [ 2, %39 ]
  %60 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 11
  store i32 %59, i32* %60, align 4
  %61 = and i16 %54, -32768
  store i16 %61, i16* %53, align 1
  %62 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %2, i64 0, i32 13
  %63 = load i16, i16* %62, align 1
  %64 = and i16 %63, 1
  %65 = or i16 %64, %61
  store i16 %65, i16* %53, align 1
  %66 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %2, i64 0, i32 12
  %67 = load i8, i8* %66, align 8
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %76

69:                                               ; preds = %58
  %70 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %2, i64 1
  %71 = bitcast %"class.v8::internal::Scope"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = trunc i64 %72 to i16
  %74 = shl i16 %73, 9
  %75 = and i16 %74, 512
  br label %76

76:                                               ; preds = %69, %58
  %77 = phi i16 [ 0, %58 ], [ %75, %69 ]
  %78 = or i16 %77, %65
  store i16 %78, i16* %53, align 1
  %79 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %5, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %79, i64 0, i32 1
  %81 = bitcast %"class.v8::internal::Scope"** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 2
  %84 = bitcast %"class.v8::internal::Scope"** %83 to i64*
  store i64 %82, i64* %84, align 8
  store %"class.v8::internal::Scope"* %0, %"class.v8::internal::Scope"** %80, align 8
  store %"class.v8::internal::Scope"* %79, %"class.v8::internal::Scope"** %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.v8::internal::ClassScope"* @_ZN2v88internal5Scope12AsClassScopeEv(%"class.v8::internal::Scope"* readnone) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.v8::internal::Scope"* %0 to %"class.v8::internal::ClassScope"*
  ret %"class.v8::internal::ClassScope"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal5Scope25DeclareHomeObjectVariableEPNS0_15AstValueFactoryE(%"class.v8::internal::Scope"*, %"class.v8::internal::AstValueFactory"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #10
  %4 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %1, i64 0, i32 3
  %7 = load %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstStringConstants"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %7, i64 0, i32 21
  %9 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3
  %11 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %10, %"class.v8::internal::Zone"* %5, %"class.v8::internal::Scope"* %0, %"class.v8::internal::AstRawString"* %9, i8 zeroext 1, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8* nonnull %3) #10
  %12 = load i8, i8* %3, align 1, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 4, i32 1
  %16 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %15, align 8
  store %"class.v8::internal::Variable"* %11, %"class.v8::internal::Variable"** %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %11, i64 0, i32 3
  store %"class.v8::internal::Variable"** %17, %"class.v8::internal::Variable"*** %15, align 8
  br label %18

18:                                               ; preds = %2, %14
  %19 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %11, i64 0, i32 6
  %20 = load i16, i16* %19, align 8
  %21 = or i16 %20, 3072
  store i16 %21, i16* %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #10
  ret %"class.v8::internal::Variable"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal5Scope31DeclareStaticHomeObjectVariableEPNS0_15AstValueFactoryE(%"class.v8::internal::Scope"*, %"class.v8::internal::AstValueFactory"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #10
  %4 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %1, i64 0, i32 3
  %7 = load %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstStringConstants"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %7, i64 0, i32 24
  %9 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3
  %11 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %10, %"class.v8::internal::Zone"* %5, %"class.v8::internal::Scope"* %0, %"class.v8::internal::AstRawString"* %9, i8 zeroext 1, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8* nonnull %3) #10
  %12 = load i8, i8* %3, align 1, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 4, i32 1
  %16 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %15, align 8
  store %"class.v8::internal::Variable"* %11, %"class.v8::internal::Variable"** %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %11, i64 0, i32 3
  store %"class.v8::internal::Variable"** %17, %"class.v8::internal::Variable"*** %15, align 8
  br label %18

18:                                               ; preds = %2, %14
  %19 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %11, i64 0, i32 6
  %20 = load i16, i16* %19, align 8
  %21 = or i16 %20, 3072
  store i16 %21, i16* %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #10
  ret %"class.v8::internal::Variable"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16DeclarationScopeC2EPNS0_4ZoneEPNS0_15AstValueFactoryENS0_8REPLModeE(%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::Zone"*, %"class.v8::internal::AstValueFactory"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %5 = alloca i8, align 1
  %6 = bitcast %"class.v8::internal::DeclarationScope"* %0 to %"class.v8::internal::Scope"*
  %7 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 0
  store %"class.v8::internal::Scope"* null, %"class.v8::internal::Scope"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3
  %9 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %10 = bitcast %"class.v8::internal::VariableMap"* %8 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"struct.v8::base::TemplateHashMapEntry"** %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #10
  %13 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %14
  %18 = icmp ult i64 %17, 192
  br i1 %18, label %19, label %21, !prof !2

19:                                               ; preds = %4
  %20 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 192) #10
  br label %23

21:                                               ; preds = %4
  %22 = add i64 %14, 192
  store i64 %22, i64* %13, align 8
  br label %23

23:                                               ; preds = %21, %19
  %24 = phi i64 [ %20, %19 ], [ %14, %21 ]
  %25 = inttoptr i64 %24 to %"struct.v8::base::TemplateHashMapEntry"*
  store %"struct.v8::base::TemplateHashMapEntry"* %25, %"struct.v8::base::TemplateHashMapEntry"** %11, align 8
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0)) #11
  unreachable

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store i32 8, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %25, i64 0, i32 0
  store i8* null, i8** %30, align 8
  %31 = load i32, i32* %29, align 8
  %32 = icmp ugt i32 %31, 1
  br i1 %32, label %33, label %41

33:                                               ; preds = %28, %33
  %34 = phi i64 [ %37, %33 ], [ 1, %28 ]
  %35 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %11, align 8
  %36 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %35, i64 %34, i32 0
  store i8* null, i8** %36, align 8
  %37 = add nuw nsw i64 %34, 1
  %38 = load i32, i32* %29, align 8
  %39 = zext i32 %38 to i64
  %40 = icmp ult i64 %37, %39
  br i1 %40, label %33, label %41

41:                                               ; preds = %33, %28
  %42 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 3
  store i32 0, i32* %42, align 4
  %43 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 4, i32 0
  store %"class.v8::internal::Variable"* null, %"class.v8::internal::Variable"** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 4, i32 1
  store %"class.v8::internal::Variable"** %43, %"class.v8::internal::Variable"*** %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 5, i32 0
  %46 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 5, i32 1
  %47 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 6, i32 0
  store %"class.v8::internal::Declaration"* null, %"class.v8::internal::Declaration"** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 6, i32 1
  store %"class.v8::internal::Declaration"** %47, %"class.v8::internal::Declaration"*** %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  store i64* null, i64** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 12
  store i8 4, i8* %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 1
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %45, align 8
  %52 = bitcast %"class.v8::internal::Scope"** %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #10
  store %"class.v8::internal::VariableProxy"** %45, %"class.v8::internal::VariableProxy"*** %46, align 8
  %53 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 8
  %54 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 13
  %55 = load i16, i16* %54, align 1
  %56 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 2>, <4 x i32>* %56, align 8
  %57 = and i16 %55, -32768
  store i16 %57, i16* %54, align 1
  %58 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 2
  %59 = icmp eq i32 %3, 0
  %60 = select i1 %59, i8 13, i8 0
  store i8 %60, i8* %58, align 1
  %61 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 4
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 6, i32 0
  store %"class.v8::internal::Variable"** null, %"class.v8::internal::Variable"*** %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 6, i32 1
  store i32 4, i32* %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 6, i32 2
  store i32 0, i32* %64, align 4
  %65 = load i64, i64* %13, align 8
  %66 = load i64, i64* %15, align 8
  %67 = sub i64 %66, %65
  %68 = icmp ult i64 %67, 32
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %41
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 32) #10
  br label %73

71:                                               ; preds = %41
  %72 = add i64 %65, 32
  store i64 %72, i64* %13, align 8
  br label %73

73:                                               ; preds = %69, %71
  %74 = phi i64 [ %70, %69 ], [ %65, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::Variable"**
  store %"class.v8::internal::Variable"** %75, %"class.v8::internal::Variable"*** %62, align 8
  %76 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 7, i32 0
  store %"class.v8::internal::SloppyBlockFunctionStatement"* null, %"class.v8::internal::SloppyBlockFunctionStatement"** %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 7, i32 1
  store %"class.v8::internal::SloppyBlockFunctionStatement"** %76, %"class.v8::internal::SloppyBlockFunctionStatement"*** %77, align 8
  %78 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 13
  store %"struct.v8::internal::DeclarationScope::RareData"* null, %"struct.v8::internal::DeclarationScope::RareData"** %78, align 8
  %79 = load i16, i16* %54, align 1
  %80 = or i16 %79, 256
  store i16 %80, i16* %54, align 1
  %81 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 1
  %82 = load i16, i16* %81, align 1
  %83 = and i16 %82, -3128
  %84 = or i16 %83, 1
  store i16 %84, i16* %81, align 1
  %85 = load i8, i8* %50, align 8
  %86 = icmp eq i8 %85, 2
  br i1 %86, label %87, label %91

87:                                               ; preds = %73
  %88 = load i8, i8* %58, align 1
  %89 = add i8 %88, -11
  %90 = icmp ult i8 %89, 2
  br i1 %90, label %91, label %95

91:                                               ; preds = %87, %73
  %92 = icmp eq i8 %85, 3
  %93 = zext i1 %92 to i16
  %94 = shl nuw nsw i16 %93, 12
  br label %95

95:                                               ; preds = %87, %91
  %96 = phi i16 [ 4096, %87 ], [ %94, %91 ]
  %97 = and i16 %84, -15871
  %98 = or i16 %96, %97
  %99 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 8
  store %"struct.v8::internal::DeclarationScope::RareData"* null, %"struct.v8::internal::DeclarationScope::RareData"** %78, align 8
  %100 = bitcast %"class.v8::internal::Variable"** %99 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 32, i1 false) #10
  store i16 %98, i16* %81, align 1
  %101 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 12
  store %"class.v8::internal::PreparseDataBuilder"* null, %"class.v8::internal::PreparseDataBuilder"** %101, align 8
  %102 = zext i1 %59 to i16
  %103 = shl nuw nsw i16 %102, 11
  %104 = and i16 %80, -2049
  %105 = or i16 %104, %103
  store i16 %105, i16* %54, align 1
  %106 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %2, i64 0, i32 3
  %107 = load %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstStringConstants"** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %107, i64 0, i32 52
  %109 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %108, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #10
  %110 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %110, align 8
  %112 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %8, %"class.v8::internal::Zone"* %111, %"class.v8::internal::Scope"* %6, %"class.v8::internal::AstRawString"* %109, i8 zeroext 5, i8 zeroext 2, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #10
  store %"class.v8::internal::Variable"* %112, %"class.v8::internal::Variable"** %99, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal16DeclarationScope11SetDefaultsEv(%"class.v8::internal::DeclarationScope"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 13
  %3 = load i16, i16* %2, align 1
  %4 = or i16 %3, 256
  store i16 %4, i16* %2, align 1
  %5 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 1
  %6 = load i16, i16* %5, align 1
  %7 = and i16 %6, -3128
  %8 = or i16 %7, 1
  store i16 %8, i16* %5, align 1
  %9 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 12
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 2
  br i1 %11, label %12, label %17

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 2
  %14 = load i8, i8* %13, align 1
  %15 = add i8 %14, -11
  %16 = icmp ult i8 %15, 2
  br i1 %16, label %17, label %21

17:                                               ; preds = %12, %1
  %18 = icmp eq i8 %10, 3
  %19 = zext i1 %18 to i16
  %20 = shl nuw nsw i16 %19, 12
  br label %21

21:                                               ; preds = %17, %12
  %22 = phi i16 [ 4096, %12 ], [ %20, %17 ]
  %23 = and i16 %8, -15871
  %24 = or i16 %22, %23
  %25 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 8
  %26 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 13
  store %"struct.v8::internal::DeclarationScope::RareData"* null, %"struct.v8::internal::DeclarationScope::RareData"** %26, align 8
  %27 = bitcast %"class.v8::internal::Variable"** %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false)
  store i16 %24, i16* %5, align 1
  %28 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 12
  store %"class.v8::internal::PreparseDataBuilder"* null, %"class.v8::internal::PreparseDataBuilder"** %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16DeclarationScopeC2EPNS0_4ZoneEPNS0_5ScopeENS0_9ScopeTypeENS0_12FunctionKindE(%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::Zone"*, %"class.v8::internal::Scope"*, i8 zeroext, i8 zeroext) unnamed_addr #0 align 2 {
  %6 = bitcast %"class.v8::internal::DeclarationScope"* %0 to %"class.v8::internal::Scope"*
  tail call void @_ZN2v88internal5ScopeC2EPNS0_4ZoneEPS1_NS0_9ScopeTypeE(%"class.v8::internal::Scope"* %6, %"class.v8::internal::Zone"* %1, %"class.v8::internal::Scope"* %2, i8 zeroext %3)
  %7 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 2
  store i8 %4, i8* %7, align 1
  %8 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 4
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 6, i32 0
  store %"class.v8::internal::Variable"** null, %"class.v8::internal::Variable"*** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 6, i32 1
  store i32 4, i32* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 6, i32 2
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %13
  %17 = icmp ult i64 %16, 32
  br i1 %17, label %18, label %20, !prof !2

18:                                               ; preds = %5
  %19 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 32) #10
  br label %22

20:                                               ; preds = %5
  %21 = add i64 %13, 32
  store i64 %21, i64* %12, align 8
  br label %22

22:                                               ; preds = %18, %20
  %23 = phi i64 [ %19, %18 ], [ %13, %20 ]
  %24 = inttoptr i64 %23 to %"class.v8::internal::Variable"**
  store %"class.v8::internal::Variable"** %24, %"class.v8::internal::Variable"*** %9, align 8
  %25 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 7, i32 0
  store %"class.v8::internal::SloppyBlockFunctionStatement"* null, %"class.v8::internal::SloppyBlockFunctionStatement"** %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 7, i32 1
  store %"class.v8::internal::SloppyBlockFunctionStatement"** %25, %"class.v8::internal::SloppyBlockFunctionStatement"*** %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 13
  store %"struct.v8::internal::DeclarationScope::RareData"* null, %"struct.v8::internal::DeclarationScope::RareData"** %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 13
  %29 = load i16, i16* %28, align 1
  %30 = or i16 %29, 256
  store i16 %30, i16* %28, align 1
  %31 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 1
  %32 = load i16, i16* %31, align 1
  %33 = and i16 %32, -3128
  %34 = or i16 %33, 1
  store i16 %34, i16* %31, align 1
  %35 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 12
  %36 = load i8, i8* %35, align 8
  %37 = icmp eq i8 %36, 2
  br i1 %37, label %38, label %42

38:                                               ; preds = %22
  %39 = load i8, i8* %7, align 1
  %40 = add i8 %39, -11
  %41 = icmp ult i8 %40, 2
  br i1 %41, label %42, label %46

42:                                               ; preds = %38, %22
  %43 = icmp eq i8 %36, 3
  %44 = zext i1 %43 to i16
  %45 = shl nuw nsw i16 %44, 12
  br label %46

46:                                               ; preds = %38, %42
  %47 = phi i16 [ 4096, %38 ], [ %45, %42 ]
  %48 = and i16 %34, -15871
  %49 = or i16 %47, %48
  %50 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 8
  store %"struct.v8::internal::DeclarationScope::RareData"* null, %"struct.v8::internal::DeclarationScope::RareData"** %27, align 8
  %51 = bitcast %"class.v8::internal::Variable"** %50 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 32, i1 false) #10
  store i16 %49, i16* %31, align 1
  %52 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 12
  store %"class.v8::internal::PreparseDataBuilder"* null, %"class.v8::internal::PreparseDataBuilder"** %52, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11ModuleScopeC2EPNS0_16DeclarationScopeEPNS0_15AstValueFactoryE(%"class.v8::internal::ModuleScope"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstValueFactory"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %2, i64 0, i32 6
  %5 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %4, align 8
  %6 = bitcast %"class.v8::internal::DeclarationScope"* %1 to %"class.v8::internal::Scope"*
  %7 = bitcast %"class.v8::internal::ModuleScope"* %0 to %"class.v8::internal::Scope"*
  tail call void @_ZN2v88internal5ScopeC2EPNS0_4ZoneEPS1_NS0_9ScopeTypeE(%"class.v8::internal::Scope"* %7, %"class.v8::internal::Zone"* %5, %"class.v8::internal::Scope"* %6, i8 zeroext 3) #10
  %8 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 0, i32 2
  store i8 1, i8* %8, align 1
  %9 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 0, i32 4
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 0, i32 6, i32 0
  store %"class.v8::internal::Variable"** null, %"class.v8::internal::Variable"*** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 0, i32 6, i32 1
  store i32 4, i32* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 0, i32 6, i32 2
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %14
  %18 = icmp ult i64 %17, 32
  br i1 %18, label %19, label %21, !prof !2

19:                                               ; preds = %3
  %20 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %5, i64 32) #10
  br label %23

21:                                               ; preds = %3
  %22 = add i64 %14, 32
  store i64 %22, i64* %13, align 8
  br label %23

23:                                               ; preds = %21, %19
  %24 = phi i64 [ %20, %19 ], [ %14, %21 ]
  %25 = inttoptr i64 %24 to %"class.v8::internal::Variable"**
  store %"class.v8::internal::Variable"** %25, %"class.v8::internal::Variable"*** %10, align 8
  %26 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 0, i32 7, i32 0
  store %"class.v8::internal::SloppyBlockFunctionStatement"* null, %"class.v8::internal::SloppyBlockFunctionStatement"** %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 0, i32 7, i32 1
  store %"class.v8::internal::SloppyBlockFunctionStatement"** %26, %"class.v8::internal::SloppyBlockFunctionStatement"*** %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 0, i32 13
  store %"struct.v8::internal::DeclarationScope::RareData"* null, %"struct.v8::internal::DeclarationScope::RareData"** %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 0, i32 0, i32 13
  %30 = load i16, i16* %29, align 1
  %31 = or i16 %30, 256
  store i16 %31, i16* %29, align 1
  %32 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 0, i32 1
  %33 = load i16, i16* %32, align 1
  %34 = and i16 %33, -3128
  %35 = or i16 %34, 1
  store i16 %35, i16* %32, align 1
  %36 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 0, i32 0, i32 12
  %37 = load i8, i8* %36, align 8
  %38 = icmp eq i8 %37, 2
  br i1 %38, label %39, label %43

39:                                               ; preds = %23
  %40 = load i8, i8* %8, align 1
  %41 = add i8 %40, -11
  %42 = icmp ult i8 %41, 2
  br i1 %42, label %43, label %47

43:                                               ; preds = %39, %23
  %44 = icmp eq i8 %37, 3
  %45 = zext i1 %44 to i16
  %46 = shl nuw nsw i16 %45, 12
  br label %47

47:                                               ; preds = %39, %43
  %48 = phi i16 [ 4096, %39 ], [ %46, %43 ]
  %49 = and i16 %35, -15871
  %50 = or i16 %48, %49
  %51 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 0, i32 8
  store %"struct.v8::internal::DeclarationScope::RareData"* null, %"struct.v8::internal::DeclarationScope::RareData"** %28, align 8
  %52 = bitcast %"class.v8::internal::Variable"** %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 32, i1 false) #10
  store i16 %50, i16* %32, align 1
  %53 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 0, i32 12
  store %"class.v8::internal::PreparseDataBuilder"* null, %"class.v8::internal::PreparseDataBuilder"** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 1
  %55 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %4, align 8
  %56 = ptrtoint %"class.v8::internal::Zone"* %55 to i64
  %57 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %55, i64 0, i32 2
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %55, i64 0, i32 3
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %60, %58
  %62 = icmp ult i64 %61, 160
  br i1 %62, label %63, label %65, !prof !2

63:                                               ; preds = %47
  %64 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %55, i64 160) #10
  br label %67

65:                                               ; preds = %47
  %66 = add i64 %58, 160
  store i64 %66, i64* %57, align 8
  br label %67

67:                                               ; preds = %63, %65
  %68 = phi i64 [ %64, %63 ], [ %58, %65 ]
  %69 = inttoptr i64 %68 to %"class.v8::internal::SourceTextModuleDescriptor"*
  %70 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %69, i64 0, i32 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %69, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %72 = bitcast %"struct.std::__1::__compressed_pair_elem.1213"* %71 to i64*
  %73 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %69, i64 0, i32 0, i32 0, i32 0, i32 1
  %74 = bitcast %"class.std::__1::__compressed_pair.1212"* %73 to i64*
  store i64 0, i64* %74, align 8
  store i64 %56, i64* %72, align 8
  %75 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %69, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %69, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %76, %"class.std::__1::__tree_end_node"** %70, align 8
  %77 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %69, i64 0, i32 1
  %78 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %69, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %79 = bitcast %"struct.std::__1::__compressed_pair_elem.1221"* %78 to i64*
  %80 = bitcast %"class.v8::internal::ZoneVector"* %77 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #10
  store i64 %56, i64* %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %69, i64 0, i32 2
  %82 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %69, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %83 = bitcast %"struct.std::__1::__compressed_pair_elem.1221"* %82 to i64*
  %84 = bitcast %"class.v8::internal::ZoneVector"* %81 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #10
  store i64 %56, i64* %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %69, i64 0, i32 3, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %69, i64 0, i32 3, i32 0, i32 0, i32 1, i32 1
  %87 = bitcast %"struct.std::__1::__compressed_pair_elem.1225"* %86 to i64*
  %88 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %69, i64 0, i32 3, i32 0, i32 0, i32 1
  %89 = bitcast %"class.std::__1::__compressed_pair.1224"* %88 to i64*
  store i64 0, i64* %89, align 8
  store i64 %56, i64* %87, align 8
  %90 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %69, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %90, align 8
  %91 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %69, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %91, %"class.std::__1::__tree_end_node"** %85, align 8
  %92 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %69, i64 0, i32 4, i32 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %69, i64 0, i32 4, i32 0, i32 0, i32 1, i32 1
  %94 = bitcast %"struct.std::__1::__compressed_pair_elem.1225"* %93 to i64*
  %95 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %69, i64 0, i32 4, i32 0, i32 0, i32 1
  %96 = bitcast %"class.std::__1::__compressed_pair.1224"* %95 to i64*
  store i64 0, i64* %96, align 8
  store i64 %56, i64* %94, align 8
  %97 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %69, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %97, align 8
  %98 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %69, i64 0, i32 4, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %98, %"class.std::__1::__tree_end_node"** %92, align 8
  store %"class.v8::internal::SourceTextModuleDescriptor"* %69, %"class.v8::internal::SourceTextModuleDescriptor"** %54, align 8
  %99 = load i16, i16* %29, align 1
  %100 = or i16 %99, 1
  store i16 %100, i16* %29, align 1
  %101 = load i8, i8* %8, align 1
  %102 = add i8 %101, -5
  %103 = icmp ult i8 %102, 2
  %104 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %104, align 8
  %106 = ptrtoint %"class.v8::internal::ModuleScope"* %0 to i64
  %107 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %2, i64 0, i32 3
  %108 = load %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstStringConstants"** %107, align 8
  %109 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %108, i64 0, i32 52
  %110 = bitcast %"class.v8::internal::AstRawString"** %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = xor i1 %103, true
  %113 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %105, i64 0, i32 2
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %105, i64 0, i32 3
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %116, %114
  %118 = icmp ult i64 %117, 48
  br i1 %118, label %119, label %121, !prof !2

119:                                              ; preds = %67
  %120 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %105, i64 48) #10
  br label %123

121:                                              ; preds = %67
  %122 = add i64 %114, 48
  store i64 %122, i64* %113, align 8
  br label %123

123:                                              ; preds = %119, %121
  %124 = phi i64 [ %120, %119 ], [ %114, %121 ]
  %125 = inttoptr i64 %124 to %"class.v8::internal::Variable"*
  %126 = inttoptr i64 %124 to i64*
  store i64 %106, i64* %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %125, i64 0, i32 1
  %128 = bitcast %"class.v8::internal::AstRawString"** %127 to i64*
  store i64 %111, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %125, i64 0, i32 2
  %130 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %125, i64 0, i32 4
  %131 = bitcast %"class.v8::internal::Variable"** %129 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %131, i8 0, i64 16, i1 false) #10
  store i32 -1, i32* %130, align 8
  %132 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %125, i64 0, i32 5
  store i32 -1, i32* %132, align 4
  %133 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %125, i64 0, i32 6
  %134 = zext i1 %112 to i16
  %135 = shl nuw nsw i16 %134, 12
  %136 = select i1 %103, i16 33, i16 34
  %137 = or i16 %135, %136
  store i16 %137, i16* %133, align 8
  store %"class.v8::internal::Variable"* %125, %"class.v8::internal::Variable"** %51, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16DeclarationScope11DeclareThisEPNS0_15AstValueFactoryE(%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstValueFactory"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = add i8 %4, -5
  %6 = icmp ult i8 %5, 2
  %7 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %7, align 8
  %9 = ptrtoint %"class.v8::internal::DeclarationScope"* %0 to i64
  %10 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %1, i64 0, i32 3
  %11 = load %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstStringConstants"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %11, i64 0, i32 52
  %13 = bitcast %"class.v8::internal::AstRawString"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = xor i1 %6, true
  %16 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8, i64 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %17
  %21 = icmp ult i64 %20, 48
  br i1 %21, label %22, label %24, !prof !2

22:                                               ; preds = %2
  %23 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %8, i64 48) #10
  br label %26

24:                                               ; preds = %2
  %25 = add i64 %17, 48
  store i64 %25, i64* %16, align 8
  br label %26

26:                                               ; preds = %22, %24
  %27 = phi i64 [ %23, %22 ], [ %17, %24 ]
  %28 = inttoptr i64 %27 to %"class.v8::internal::Variable"*
  %29 = inttoptr i64 %27 to i64*
  store i64 %9, i64* %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %28, i64 0, i32 1
  %31 = bitcast %"class.v8::internal::AstRawString"** %30 to i64*
  store i64 %14, i64* %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %28, i64 0, i32 2
  %33 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %28, i64 0, i32 4
  %34 = bitcast %"class.v8::internal::Variable"** %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #10
  store i32 -1, i32* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %28, i64 0, i32 5
  store i32 -1, i32* %35, align 4
  %36 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %28, i64 0, i32 6
  %37 = zext i1 %15 to i16
  %38 = shl nuw nsw i16 %37, 12
  %39 = select i1 %6, i16 33, i16 34
  %40 = or i16 %38, %39
  store i16 %40, i16* %36, align 8
  %41 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 8
  store %"class.v8::internal::Variable"* %28, %"class.v8::internal::Variable"** %41, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11ModuleScopeC2EPNS0_7IsolateENS0_6HandleINS0_9ScopeInfoEEEPNS0_15AstValueFactoryE(%"class.v8::internal::ModuleScope"*, %"class.v8::internal::Isolate"* nocapture readnone, i64*, %"class.v8::internal::AstValueFactory"* nocapture readonly) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %3, i64 0, i32 6
  %7 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %6, align 8
  tail call void @_ZN2v88internal16DeclarationScopeC2EPNS0_4ZoneENS0_9ScopeTypeEPNS0_15AstValueFactoryENS0_6HandleINS0_9ScopeInfoEEE(%"class.v8::internal::DeclarationScope"* %5, %"class.v8::internal::Zone"* %7, i8 zeroext 3, %"class.v8::internal::AstValueFactory"* %3, i64* %2)
  %8 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 1
  store %"class.v8::internal::SourceTextModuleDescriptor"* null, %"class.v8::internal::SourceTextModuleDescriptor"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 0, i32 0, i32 13
  %10 = load i16, i16* %9, align 1
  %11 = or i16 %10, 1
  store i16 %11, i16* %9, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16DeclarationScopeC2EPNS0_4ZoneENS0_9ScopeTypeEPNS0_15AstValueFactoryENS0_6HandleINS0_9ScopeInfoEEE(%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::Zone"*, i8 zeroext, %"class.v8::internal::AstValueFactory"* nocapture readonly, i64*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", align 8
  %8 = bitcast %"class.v8::internal::DeclarationScope"* %0 to %"class.v8::internal::Scope"*
  tail call void @_ZN2v88internal5ScopeC2EPNS0_4ZoneENS0_9ScopeTypeEPNS0_15AstValueFactoryENS0_6HandleINS0_9ScopeInfoEEE(%"class.v8::internal::Scope"* %8, %"class.v8::internal::Zone"* %1, i8 zeroext %2, %"class.v8::internal::AstValueFactory"* %3, i64* %4)
  %9 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 2
  %10 = bitcast %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %6, i64 0, i32 0
  %14 = call zeroext i8 @_ZNK2v88internal9ScopeInfo13function_kindEv(%"class.v8::internal::ScopeInfo"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  store i8 %14, i8* %9, align 1
  %15 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 4
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 6, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 7, i32 0
  %18 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 7, i32 1
  %19 = bitcast %"class.v8::internal::Variable"*** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false)
  store %"class.v8::internal::SloppyBlockFunctionStatement"** %17, %"class.v8::internal::SloppyBlockFunctionStatement"*** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 13
  store %"struct.v8::internal::DeclarationScope::RareData"* null, %"struct.v8::internal::DeclarationScope::RareData"** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 13
  %22 = load i16, i16* %21, align 1
  %23 = or i16 %22, 256
  store i16 %23, i16* %21, align 1
  %24 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 1
  %25 = load i16, i16* %24, align 1
  %26 = and i16 %25, -3128
  %27 = or i16 %26, 1
  store i16 %27, i16* %24, align 1
  %28 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 12
  %29 = load i8, i8* %28, align 8
  %30 = icmp ne i8 %29, 2
  %31 = add i8 %14, -11
  %32 = icmp ult i8 %31, 2
  %33 = or i1 %32, %30
  br i1 %33, label %34, label %38

34:                                               ; preds = %5
  %35 = icmp eq i8 %29, 3
  %36 = zext i1 %35 to i16
  %37 = shl nuw nsw i16 %36, 12
  br label %38

38:                                               ; preds = %5, %34
  %39 = phi i16 [ %37, %34 ], [ 4096, %5 ]
  %40 = and i16 %27, -15871
  %41 = or i16 %39, %40
  %42 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 8
  store %"struct.v8::internal::DeclarationScope::RareData"* null, %"struct.v8::internal::DeclarationScope::RareData"** %20, align 8
  %43 = bitcast %"class.v8::internal::Variable"** %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 32, i1 false) #10
  store i16 %41, i16* %24, align 1
  %44 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 12
  store %"class.v8::internal::PreparseDataBuilder"* null, %"class.v8::internal::PreparseDataBuilder"** %44, align 8
  %45 = bitcast %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #10
  %46 = load i64, i64* %4, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %7, i64 0, i32 0
  %49 = call zeroext i1 @_ZNK2v88internal9ScopeInfo23SloppyEvalCanExtendVarsEv(%"class.v8::internal::ScopeInfo"* nonnull %48) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #10
  br i1 %49, label %50, label %53

50:                                               ; preds = %38
  %51 = load i16, i16* %21, align 1
  %52 = or i16 %51, 4
  store i16 %52, i16* %21, align 1
  br label %53

53:                                               ; preds = %50, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10ClassScopeC2EPNS0_4ZoneEPNS0_5ScopeEb(%"class.v8::internal::ClassScope"*, %"class.v8::internal::Zone"*, %"class.v8::internal::Scope"*, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = bitcast %"class.v8::internal::ClassScope"* %0 to %"class.v8::internal::Scope"*
  tail call void @_ZN2v88internal5ScopeC2EPNS0_4ZoneEPS1_NS0_9ScopeTypeE(%"class.v8::internal::Scope"* %6, %"class.v8::internal::Zone"* %1, %"class.v8::internal::Scope"* %2, i8 zeroext 0)
  %7 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 2, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 6
  %9 = bitcast i64* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 18, i1 false)
  store i8 %5, i8* %8, align 2
  %10 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 7
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 0, i32 13
  %12 = load i16, i16* %11, align 1
  %13 = or i16 %12, 1
  store i16 %13, i16* %11, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10ClassScopeC2EPNS0_7IsolateEPNS0_4ZoneEPNS0_15AstValueFactoryENS0_6HandleINS0_9ScopeInfoEEE(%"class.v8::internal::ClassScope"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, %"class.v8::internal::AstValueFactory"*, i64*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::Zone"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", align 8
  %11 = alloca %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", align 8
  %12 = bitcast %"class.v8::internal::ClassScope"* %0 to %"class.v8::internal::Scope"*
  tail call void @_ZN2v88internal5ScopeC2EPNS0_4ZoneENS0_9ScopeTypeEPNS0_15AstValueFactoryENS0_6HandleINS0_9ScopeInfoEEE(%"class.v8::internal::Scope"* %12, %"class.v8::internal::Zone"* %2, i8 zeroext 0, %"class.v8::internal::AstValueFactory"* %3, i64* %4)
  %13 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 2, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 0, i32 13
  %16 = bitcast i64* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false)
  %17 = load i16, i16* %15, align 1
  %18 = or i16 %17, 1
  store i16 %18, i16* %15, align 1
  %19 = bitcast %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = load i64, i64* %4, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %8, i64 0, i32 0
  %23 = call zeroext i1 @_ZNK2v88internal9ScopeInfo13HasClassBrandEv(%"class.v8::internal::ScopeInfo"* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  br i1 %23, label %24, label %46

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %3, i64 0, i32 3
  %26 = load %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstStringConstants"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %26, i64 0, i32 13
  %28 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %27, align 8
  %29 = call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope17LookupInScopeInfoEPKNS0_12AstRawStringEPS1_(%"class.v8::internal::Scope"* %12, %"class.v8::internal::AstRawString"* %28, %"class.v8::internal::Scope"* %12)
  %30 = load i64, i64* %13, align 8
  %31 = icmp ult i64 %30, 2
  br i1 %31, label %32, label %41

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %33, align 8
  %35 = bitcast %"class.v8::internal::Zone"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  store %"class.v8::internal::Zone"* %34, %"class.v8::internal::Zone"** %6, align 8
  %36 = call %"struct.v8::internal::ClassScope::RareData"* @_ZN2v88internal4Zone3NewINS0_10ClassScope8RareDataEJPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"* %34, %"class.v8::internal::Zone"** nonnull dereferenceable(8) %6) #10
  %37 = ptrtoint %"struct.v8::internal::ClassScope::RareData"* %36 to i64
  %38 = load i64, i64* %13, align 8
  %39 = and i64 %38, 1
  %40 = or i64 %39, %37
  store i64 %40, i64* %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  br label %41

41:                                               ; preds = %24, %32
  %42 = phi i64 [ %40, %32 ], [ %30, %24 ]
  %43 = and i64 %42, -2
  %44 = inttoptr i64 %43 to %"struct.v8::internal::ClassScope::RareData"*
  %45 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %44, i64 0, i32 2
  store %"class.v8::internal::Variable"* %29, %"class.v8::internal::Variable"** %45, align 8
  br label %46

46:                                               ; preds = %41, %5
  %47 = bitcast %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  %48 = load i64, i64* %4, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %9, i64 0, i32 0
  %51 = call zeroext i1 @_ZNK2v88internal9ScopeInfo26HasSavedClassVariableIndexEv(%"class.v8::internal::ScopeInfo"* nonnull %50) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  br i1 %51, label %52, label %111

52:                                               ; preds = %46
  %53 = bitcast %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #10
  %54 = load i64, i64* %4, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %10, i64 0, i32 0
  %57 = call i32 @_ZNK2v88internal9ScopeInfo35SavedClassVariableContextLocalIndexEv(%"class.v8::internal::ScopeInfo"* nonnull %56) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #10
  %58 = bitcast %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #10
  %59 = load i64, i64* %4, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %11, i64 0, i32 0
  %62 = call i64 @_ZNK2v88internal9ScopeInfo16ContextLocalNameEi(%"class.v8::internal::ScopeInfo"* nonnull %61, i32 %57) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #10
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %64 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %63, align 8
  %65 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %52
  %67 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %64, i64 %62) #10
  br label %81

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %70 = load i64*, i64** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %72 = load i64*, i64** %71, align 8
  %73 = icmp eq i64* %70, %72
  br i1 %73, label %74, label %76

74:                                               ; preds = %68
  %75 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #10
  br label %76

76:                                               ; preds = %74, %68
  %77 = phi i64* [ %75, %74 ], [ %70, %68 ]
  %78 = ptrtoint i64* %77 to i64
  %79 = add i64 %78, 8
  %80 = inttoptr i64 %79 to i64*
  store i64* %80, i64** %69, align 8
  store i64 %62, i64* %77, align 8
  br label %81

81:                                               ; preds = %66, %76
  %82 = phi i64* [ %67, %66 ], [ %77, %76 ]
  %83 = call %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory9GetStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::AstValueFactory"* %3, i64* %82) #10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #10
  %84 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %84, align 8
  %86 = icmp eq %"class.v8::internal::AstRawString"* %83, null
  br i1 %86, label %87, label %92

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %3, i64 0, i32 3
  %89 = load %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstStringConstants"** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %89, i64 0, i32 17
  %91 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %90, align 8
  br label %92

92:                                               ; preds = %87, %81
  %93 = phi %"class.v8::internal::AstRawString"* [ %91, %87 ], [ %83, %81 ]
  %94 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 0, i32 3
  %95 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %94, %"class.v8::internal::Zone"* %85, %"class.v8::internal::Scope"* %12, %"class.v8::internal::AstRawString"* %93, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0, i8* nonnull %7) #10
  %96 = load i8, i8* %7, align 1, !range !5
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %102, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 0, i32 4, i32 1
  %100 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %99, align 8
  store %"class.v8::internal::Variable"* %95, %"class.v8::internal::Variable"** %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %95, i64 0, i32 3
  store %"class.v8::internal::Variable"** %101, %"class.v8::internal::Variable"*** %99, align 8
  br label %102

102:                                              ; preds = %92, %98
  store %"class.v8::internal::Variable"* %95, %"class.v8::internal::Variable"** %14, align 8
  %103 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %95, i64 0, i32 5
  store i32 -1, i32* %103, align 4
  %104 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #10
  %105 = add nsw i32 %57, 2
  %106 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %104, i64 0, i32 6
  %107 = load i16, i16* %106, align 8
  %108 = and i16 %107, -897
  %109 = or i16 %108, 384
  store i16 %109, i16* %106, align 8
  %110 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %104, i64 0, i32 4
  store i32 %105, i32* %110, align 8
  br label %111

111:                                              ; preds = %102, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5ScopeC2EPNS0_4ZoneENS0_9ScopeTypeEPNS0_15AstValueFactoryENS0_6HandleINS0_9ScopeInfoEEE(%"class.v8::internal::Scope"*, %"class.v8::internal::Zone"*, i8 zeroext, %"class.v8::internal::AstValueFactory"* nocapture readonly, i64*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", align 8
  %8 = alloca %"struct.v8::internal::VariableLookupResult", align 4
  %9 = ptrtoint i64* %4 to i64
  %10 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 0
  store %"class.v8::internal::Scope"* null, %"class.v8::internal::Scope"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3
  %12 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %13 = bitcast %"class.v8::internal::VariableMap"* %11 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %"struct.v8::base::TemplateHashMapEntry"** %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #10
  %16 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %17
  %21 = icmp ult i64 %20, 192
  br i1 %21, label %22, label %24, !prof !2

22:                                               ; preds = %5
  %23 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 192) #10
  br label %26

24:                                               ; preds = %5
  %25 = add i64 %17, 192
  store i64 %25, i64* %16, align 8
  br label %26

26:                                               ; preds = %24, %22
  %27 = phi i64 [ %23, %22 ], [ %17, %24 ]
  %28 = inttoptr i64 %27 to %"struct.v8::base::TemplateHashMapEntry"*
  store %"struct.v8::base::TemplateHashMapEntry"* %28, %"struct.v8::base::TemplateHashMapEntry"** %14, align 8
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0)) #11
  unreachable

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store i32 8, i32* %32, align 8
  %33 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %28, i64 0, i32 0
  store i8* null, i8** %33, align 8
  %34 = load i32, i32* %32, align 8
  %35 = icmp ugt i32 %34, 1
  br i1 %35, label %36, label %44

36:                                               ; preds = %31, %36
  %37 = phi i64 [ %40, %36 ], [ 1, %31 ]
  %38 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %14, align 8
  %39 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %38, i64 %37, i32 0
  store i8* null, i8** %39, align 8
  %40 = add nuw nsw i64 %37, 1
  %41 = load i32, i32* %32, align 8
  %42 = zext i32 %41 to i64
  %43 = icmp ult i64 %40, %42
  br i1 %43, label %36, label %44

44:                                               ; preds = %36, %31
  %45 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 3
  store i32 0, i32* %45, align 4
  %46 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 4, i32 0
  store %"class.v8::internal::Variable"* null, %"class.v8::internal::Variable"** %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 4, i32 1
  store %"class.v8::internal::Variable"** %46, %"class.v8::internal::Variable"*** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 5, i32 0
  %49 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 5, i32 1
  %50 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 6, i32 0
  store %"class.v8::internal::Declaration"* null, %"class.v8::internal::Declaration"** %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 6, i32 1
  store %"class.v8::internal::Declaration"** %50, %"class.v8::internal::Declaration"*** %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 7
  %53 = bitcast %"class.v8::internal::Handle.21"* %52 to i64*
  store i64 %9, i64* %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 12
  store i8 %2, i8* %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 1
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %48, align 8
  %56 = bitcast %"class.v8::internal::Scope"** %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 16, i1 false) #10
  store %"class.v8::internal::VariableProxy"** %48, %"class.v8::internal::VariableProxy"*** %49, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 8
  store i32 -1, i32* %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 9
  store i32 -1, i32* %58, align 4
  %59 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 13
  %60 = load i16, i16* %59, align 1
  %61 = and i16 %60, -32767
  store i16 %61, i16* %59, align 1
  %62 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 10
  store i32 0, i32* %62, align 8
  switch i8 %2, label %64 [
    i8 3, label %63
    i8 7, label %63
  ]

63:                                               ; preds = %44, %44
  br label %64

64:                                               ; preds = %44, %63
  %65 = phi i32 [ 3, %63 ], [ 2, %44 ]
  %66 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 11
  store i32 %65, i32* %66, align 4
  %67 = and i16 %60, -32768
  store i16 %67, i16* %59, align 1
  %68 = bitcast %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #10
  %69 = load i64, i64* %4, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %6, i64 0, i32 0
  %72 = call zeroext i1 @_ZNK2v88internal9ScopeInfo13language_modeEv(%"class.v8::internal::ScopeInfo"* nonnull %71) #10
  %73 = zext i1 %72 to i16
  %74 = load i16, i16* %59, align 1
  %75 = and i16 %74, -2
  %76 = or i16 %75, %73
  store i16 %76, i16* %59, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #10
  %77 = bitcast %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #10
  %78 = load i64, i64* %4, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %7, i64 0, i32 0
  %81 = call zeroext i1 @_ZNK2v88internal9ScopeInfo32PrivateNameLookupSkipsOuterClassEv(%"class.v8::internal::ScopeInfo"* nonnull %80) #10
  %82 = zext i1 %81 to i16
  %83 = load i16, i16* %59, align 1
  %84 = shl nuw nsw i16 %82, 9
  %85 = and i16 %83, -1537
  %86 = or i16 %85, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #10
  %87 = or i16 %86, 1024
  store i16 %87, i16* %59, align 1
  %88 = icmp eq i8 %2, 6
  br i1 %88, label %89, label %105

89:                                               ; preds = %64
  %90 = bitcast %"struct.v8::internal::VariableLookupResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #10
  %91 = load i64, i64* %4, align 8
  %92 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %3, i64 0, i32 3
  %93 = load %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstStringConstants"** %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %93, i64 0, i32 21
  %95 = bitcast %"class.v8::internal::AstRawString"** %94 to i64***
  %96 = load i64**, i64*** %95, align 8
  %97 = load i64*, i64** %96, align 8
  %98 = load i64, i64* %97, align 8
  %99 = call i32 @_ZN2v88internal9ScopeInfo16ContextSlotIndexES1_NS0_6StringEPNS0_20VariableLookupResultE(i64 %91, i64 %98, %"struct.v8::internal::VariableLookupResult"* nonnull %8) #10
  %100 = icmp sgt i32 %99, -1
  br i1 %100, label %101, label %104

101:                                              ; preds = %89
  %102 = load i16, i16* %59, align 1
  %103 = or i16 %102, 16384
  store i16 %103, i16* %59, align 1
  br label %104

104:                                              ; preds = %101, %89
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #10
  br label %105

105:                                              ; preds = %104, %64
  ret void
}

declare zeroext i1 @_ZNK2v88internal9ScopeInfo13HasClassBrandEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK2v88internal9ScopeInfo26HasSavedClassVariableIndexEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #5

declare i32 @_ZNK2v88internal9ScopeInfo35SavedClassVariableContextLocalIndexEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #5

declare i64 @_ZNK2v88internal9ScopeInfo16ContextLocalNameEi(%"class.v8::internal::ScopeInfo"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal10ClassScope20DeclareClassVariableEPNS0_15AstValueFactoryEPKNS0_12AstRawStringEi(%"class.v8::internal::ClassScope"*, %"class.v8::internal::AstValueFactory"* nocapture readonly, %"class.v8::internal::AstRawString"*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #10
  %6 = bitcast %"class.v8::internal::ClassScope"* %0 to %"class.v8::internal::Scope"*
  %7 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %7, align 8
  %9 = icmp eq %"class.v8::internal::AstRawString"* %2, null
  br i1 %9, label %10, label %15

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %1, i64 0, i32 3
  %12 = load %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstStringConstants"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %12, i64 0, i32 17
  %14 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %13, align 8
  br label %15

15:                                               ; preds = %4, %10
  %16 = phi %"class.v8::internal::AstRawString"* [ %14, %10 ], [ %2, %4 ]
  %17 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 0, i32 3
  %18 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %17, %"class.v8::internal::Zone"* %8, %"class.v8::internal::Scope"* %6, %"class.v8::internal::AstRawString"* %16, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0, i8* nonnull %5) #10
  %19 = load i8, i8* %5, align 1, !range !5
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 0, i32 4, i32 1
  %23 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %22, align 8
  store %"class.v8::internal::Variable"* %18, %"class.v8::internal::Variable"** %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %18, i64 0, i32 3
  store %"class.v8::internal::Variable"** %24, %"class.v8::internal::Variable"*** %22, align 8
  br label %25

25:                                               ; preds = %15, %21
  %26 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 3
  store %"class.v8::internal::Variable"* %18, %"class.v8::internal::Variable"** %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %18, i64 0, i32 5
  store i32 %3, i32* %27, align 4
  %28 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #10
  ret %"class.v8::internal::Variable"* %28
}

declare %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory9GetStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::AstValueFactory"*, i64*) local_unnamed_addr #5

declare zeroext i1 @_ZNK2v88internal9ScopeInfo13language_modeEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK2v88internal9ScopeInfo32PrivateNameLookupSkipsOuterClassEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #5

declare i32 @_ZN2v88internal9ScopeInfo16ContextSlotIndexES1_NS0_6StringEPNS0_20VariableLookupResultE(i64, i64, %"struct.v8::internal::VariableLookupResult"*) local_unnamed_addr #5

declare zeroext i8 @_ZNK2v88internal9ScopeInfo13function_kindEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK2v88internal9ScopeInfo23SloppyEvalCanExtendVarsEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5ScopeC2EPNS0_4ZoneEPKNS0_12AstRawStringENS0_17MaybeAssignedFlagENS0_6HandleINS0_9ScopeInfoEEE(%"class.v8::internal::Scope"*, %"class.v8::internal::Zone"*, %"class.v8::internal::AstRawString"*, i8 zeroext, i64*) unnamed_addr #0 align 2 {
  %6 = alloca i8, align 1
  %7 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 0
  store %"class.v8::internal::Scope"* null, %"class.v8::internal::Scope"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3
  %9 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %10 = bitcast %"class.v8::internal::VariableMap"* %8 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"struct.v8::base::TemplateHashMapEntry"** %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #10
  %13 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %14
  %18 = icmp ult i64 %17, 192
  br i1 %18, label %19, label %21, !prof !2

19:                                               ; preds = %5
  %20 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 192) #10
  br label %23

21:                                               ; preds = %5
  %22 = add i64 %14, 192
  store i64 %22, i64* %13, align 8
  br label %23

23:                                               ; preds = %21, %19
  %24 = phi i64 [ %20, %19 ], [ %14, %21 ]
  %25 = inttoptr i64 %24 to %"struct.v8::base::TemplateHashMapEntry"*
  store %"struct.v8::base::TemplateHashMapEntry"* %25, %"struct.v8::base::TemplateHashMapEntry"** %11, align 8
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0)) #11
  unreachable

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store i32 8, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %25, i64 0, i32 0
  store i8* null, i8** %30, align 8
  %31 = load i32, i32* %29, align 8
  %32 = icmp ugt i32 %31, 1
  br i1 %32, label %33, label %41

33:                                               ; preds = %28, %33
  %34 = phi i64 [ %37, %33 ], [ 1, %28 ]
  %35 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %11, align 8
  %36 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %35, i64 %34, i32 0
  store i8* null, i8** %36, align 8
  %37 = add nuw nsw i64 %34, 1
  %38 = load i32, i32* %29, align 8
  %39 = zext i32 %38 to i64
  %40 = icmp ult i64 %37, %39
  br i1 %40, label %33, label %41

41:                                               ; preds = %33, %28
  %42 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 3
  store i32 0, i32* %42, align 4
  %43 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 4, i32 0
  store %"class.v8::internal::Variable"* null, %"class.v8::internal::Variable"** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 4, i32 1
  store %"class.v8::internal::Variable"** %43, %"class.v8::internal::Variable"*** %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 5, i32 0
  %46 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 5, i32 1
  %47 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 6, i32 0
  store %"class.v8::internal::Declaration"* null, %"class.v8::internal::Declaration"** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 6, i32 1
  store %"class.v8::internal::Declaration"** %47, %"class.v8::internal::Declaration"*** %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 7, i32 0, i32 0
  store i64* %4, i64** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 12
  store i8 5, i8* %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 1
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %45, align 8
  %52 = bitcast %"class.v8::internal::Scope"** %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #10
  store %"class.v8::internal::VariableProxy"** %45, %"class.v8::internal::VariableProxy"*** %46, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 8
  %54 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 13
  %55 = load i16, i16* %54, align 1
  %56 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 11
  %57 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 -1, i32 0, i32 2>, <4 x i32>* %57, align 8
  %58 = and i16 %55, -32768
  store i16 %58, i16* %54, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #10
  %59 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %8, %"class.v8::internal::Zone"* %1, %"class.v8::internal::Scope"* %0, %"class.v8::internal::AstRawString"* %2, i8 zeroext 2, i8 zeroext 0, i8 zeroext 1, i8 zeroext %3, i8 zeroext 0, i8* nonnull %6) #10
  %60 = load i8, i8* %6, align 1, !range !5
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %41
  %63 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %44, align 8
  store %"class.v8::internal::Variable"* %59, %"class.v8::internal::Variable"** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %59, i64 0, i32 3
  store %"class.v8::internal::Variable"** %64, %"class.v8::internal::Variable"*** %44, align 8
  br label %65

65:                                               ; preds = %41, %62
  %66 = load i32, i32* %56, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %56, align 4
  %68 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %59, i64 0, i32 6
  %69 = load i16, i16* %68, align 8
  %70 = and i16 %69, -897
  %71 = or i16 %70, 384
  store i16 %71, i16* %68, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %59, i64 0, i32 4
  store i32 %66, i32* %72, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Scope19HasSimpleParametersEv(%"class.v8::internal::Scope"* nocapture readonly) local_unnamed_addr #3 align 2 {
  br label %2

2:                                                ; preds = %11, %1
  %3 = phi %"class.v8::internal::Scope"* [ %0, %1 ], [ %13, %11 ]
  %4 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 13
  %5 = load i16, i16* %4, align 1
  %6 = and i16 %5, 256
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 12
  %10 = load i8, i8* %9, align 8
  switch i8 %10, label %20 [
    i8 6, label %11
    i8 0, label %11
    i8 2, label %14
  ]

11:                                               ; preds = %8, %8, %2
  %12 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 0
  %13 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %12, align 8
  br label %2

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 14
  %16 = bitcast [5 x i8]* %15 to i16*
  %17 = load i16, i16* %16, align 1
  %18 = and i16 %17, 1
  %19 = icmp ne i16 %18, 0
  br label %20

20:                                               ; preds = %8, %14
  %21 = phi i1 [ %19, %14 ], [ true, %8 ]
  ret i1 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope15GetClosureScopeEv(%"class.v8::internal::Scope"* readonly) local_unnamed_addr #3 align 2 {
  br label %2

2:                                                ; preds = %11, %1
  %3 = phi %"class.v8::internal::Scope"* [ %0, %1 ], [ %13, %11 ]
  %4 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 13
  %5 = load i16, i16* %4, align 1
  %6 = and i16 %5, 256
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 12
  %10 = load i8, i8* %9, align 8
  switch i8 %10, label %14 [
    i8 6, label %11
    i8 0, label %11
  ]

11:                                               ; preds = %2, %8, %8
  %12 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 0
  %13 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %12, align 8
  br label %2

14:                                               ; preds = %8
  %15 = bitcast %"class.v8::internal::Scope"* %3 to %"class.v8::internal::DeclarationScope"*
  ret %"class.v8::internal::DeclarationScope"* %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal16DeclarationScope24set_should_eager_compileEv(%"class.v8::internal::DeclarationScope"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 1
  %3 = load i16, i16* %2, align 1
  %4 = lshr i16 %3, 1
  %5 = and i16 %4, 64
  %6 = and i16 %3, -65
  %7 = or i16 %5, %6
  %8 = xor i16 %7, 64
  store i16 %8, i16* %2, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal16DeclarationScope17set_is_asm_moduleEv(%"class.v8::internal::DeclarationScope"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 1
  %3 = load i16, i16* %2, align 1
  %4 = or i16 %3, 2
  store i16 %4, i16* %2, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal5Scope11IsAsmModuleEv(%"class.v8::internal::Scope"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 12
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 2
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 14
  %7 = bitcast [5 x i8]* %6 to i16*
  %8 = load i16, i16* %7, align 1
  %9 = and i16 %8, 2
  %10 = icmp ne i16 %9, 0
  br label %11

11:                                               ; preds = %5, %1
  %12 = phi i1 [ false, %1 ], [ %10, %5 ]
  ret i1 %12
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.v8::internal::DeclarationScope"* @_ZNK2v88internal5Scope18AsDeclarationScopeEv(%"class.v8::internal::Scope"* readnone) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.v8::internal::Scope"* %0 to %"class.v8::internal::DeclarationScope"*
  ret %"class.v8::internal::DeclarationScope"* %2
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal5Scope17ContainsAsmModuleEv(%"class.v8::internal::Scope"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 12
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 2
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 14
  %7 = bitcast [5 x i8]* %6 to i16*
  %8 = load i16, i16* %7, align 1
  %9 = and i16 %8, 2
  %10 = icmp eq i16 %9, 0
  br i1 %10, label %11, label %32

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %12, align 8
  %14 = icmp eq %"class.v8::internal::Scope"* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %11, %28
  %16 = phi %"class.v8::internal::Scope"* [ %30, %28 ], [ %13, %11 ]
  %17 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %16, i64 0, i32 12
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 2
  br i1 %19, label %20, label %26

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %16, i64 0, i32 14
  %22 = bitcast [5 x i8]* %21 to i16*
  %23 = load i16, i16* %22, align 1
  %24 = and i16 %23, 68
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %20, %15
  %27 = tail call zeroext i1 @_ZNK2v88internal5Scope17ContainsAsmModuleEv(%"class.v8::internal::Scope"* nonnull %16)
  br i1 %27, label %32, label %28

28:                                               ; preds = %20, %26
  %29 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %16, i64 0, i32 2
  %30 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %29, align 8
  %31 = icmp eq %"class.v8::internal::Scope"* %30, null
  br i1 %31, label %32, label %15

32:                                               ; preds = %26, %28, %11, %5
  %33 = phi i1 [ true, %5 ], [ false, %11 ], [ true, %26 ], [ false, %28 ]
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Scope"* @_ZN2v88internal5Scope21DeserializeScopeChainEPNS0_7IsolateEPNS0_4ZoneENS0_9ScopeInfoEPNS0_16DeclarationScopeEPNS0_15AstValueFactoryENS1_19DeserializationModeE(%"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, i64, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstValueFactory"*, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::ScopeInfo", align 8
  %8 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  %9 = trunc i64 %2 to i32
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %425, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %15 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %16 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %17 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %4, i64 0, i32 6
  %18 = icmp eq i32 %5, 1
  br label %19

19:                                               ; preds = %11, %421
  %20 = phi %"class.v8::internal::Scope"* [ null, %11 ], [ %386, %421 ]
  %21 = phi %"class.v8::internal::Scope"* [ null, %11 ], [ %418, %421 ]
  %22 = phi i8 [ 0, %11 ], [ %407, %421 ]
  %23 = call zeroext i8 @_ZNK2v88internal9ScopeInfo10scope_typeEv(%"class.v8::internal::ScopeInfo"* nonnull %7) #10
  %24 = icmp eq i8 %23, 7
  br i1 %24, label %25, label %88

25:                                               ; preds = %19
  %26 = call zeroext i1 @_ZNK2v88internal9ScopeInfo20IsDebugEvaluateScopeEv(%"class.v8::internal::ScopeInfo"* nonnull %7) #10
  %27 = load i64, i64* %8, align 8
  %28 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %29 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %28, null
  br i1 %26, label %30, label %61

30:                                               ; preds = %25
  br i1 %29, label %33, label %31

31:                                               ; preds = %30
  %32 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %28, i64 %27) #10
  br label %44

33:                                               ; preds = %30
  %34 = load i64*, i64** %13, align 8
  %35 = load i64*, i64** %14, align 8
  %36 = icmp eq i64* %34, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %33
  %38 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #10
  br label %39

39:                                               ; preds = %37, %33
  %40 = phi i64* [ %38, %37 ], [ %34, %33 ]
  %41 = ptrtoint i64* %40 to i64
  %42 = add i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  store i64* %43, i64** %13, align 8
  store i64 %27, i64* %40, align 8
  br label %44

44:                                               ; preds = %31, %39
  %45 = phi i64* [ %32, %31 ], [ %40, %39 ]
  %46 = load i64, i64* %15, align 8
  %47 = load i64, i64* %16, align 8
  %48 = sub i64 %47, %46
  %49 = icmp ult i64 %48, 216
  br i1 %49, label %50, label %52, !prof !2

50:                                               ; preds = %44
  %51 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 216) #10
  br label %54

52:                                               ; preds = %44
  %53 = add i64 %46, 216
  store i64 %53, i64* %15, align 8
  br label %54

54:                                               ; preds = %50, %52
  %55 = phi i64 [ %51, %50 ], [ %46, %52 ]
  %56 = inttoptr i64 %55 to %"class.v8::internal::DeclarationScope"*
  call void @_ZN2v88internal16DeclarationScopeC2EPNS0_4ZoneENS0_9ScopeTypeEPNS0_15AstValueFactoryENS0_6HandleINS0_9ScopeInfoEEE(%"class.v8::internal::DeclarationScope"* %56, %"class.v8::internal::Zone"* %1, i8 zeroext 2, %"class.v8::internal::AstValueFactory"* %4, i64* %45) #10
  %57 = inttoptr i64 %55 to %"class.v8::internal::Scope"*
  %58 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %57, i64 0, i32 13
  %59 = load i16, i16* %58, align 1
  %60 = or i16 %59, 32
  store i16 %60, i16* %58, align 1
  br label %385

61:                                               ; preds = %25
  br i1 %29, label %64, label %62

62:                                               ; preds = %61
  %63 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %28, i64 %27) #10
  br label %75

64:                                               ; preds = %61
  %65 = load i64*, i64** %13, align 8
  %66 = load i64*, i64** %14, align 8
  %67 = icmp eq i64* %65, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %64
  %69 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #10
  br label %70

70:                                               ; preds = %68, %64
  %71 = phi i64* [ %69, %68 ], [ %65, %64 ]
  %72 = ptrtoint i64* %71 to i64
  %73 = add i64 %72, 8
  %74 = inttoptr i64 %73 to i64*
  store i64* %74, i64** %13, align 8
  store i64 %27, i64* %71, align 8
  br label %75

75:                                               ; preds = %62, %70
  %76 = phi i64* [ %63, %62 ], [ %71, %70 ]
  %77 = load i64, i64* %15, align 8
  %78 = load i64, i64* %16, align 8
  %79 = sub i64 %78, %77
  %80 = icmp ult i64 %79, 128
  br i1 %80, label %81, label %83, !prof !2

81:                                               ; preds = %75
  %82 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 128) #10
  br label %85

83:                                               ; preds = %75
  %84 = add i64 %77, 128
  store i64 %84, i64* %15, align 8
  br label %85

85:                                               ; preds = %81, %83
  %86 = phi i64 [ %82, %81 ], [ %77, %83 ]
  %87 = inttoptr i64 %86 to %"class.v8::internal::Scope"*
  call void @_ZN2v88internal5ScopeC2EPNS0_4ZoneENS0_9ScopeTypeEPNS0_15AstValueFactoryENS0_6HandleINS0_9ScopeInfoEEE(%"class.v8::internal::Scope"* %87, %"class.v8::internal::Zone"* %1, i8 zeroext 7, %"class.v8::internal::AstValueFactory"* %4, i64* %76) #10
  br label %385

88:                                               ; preds = %19
  %89 = call zeroext i8 @_ZNK2v88internal9ScopeInfo10scope_typeEv(%"class.v8::internal::ScopeInfo"* nonnull %7) #10
  %90 = icmp eq i8 %89, 4
  br i1 %90, label %91, label %119

91:                                               ; preds = %88
  %92 = icmp eq i32 %5, 0
  br i1 %92, label %93, label %113

93:                                               ; preds = %91
  %94 = load i64, i64* %8, align 8
  %95 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %96 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %93
  %98 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %95, i64 %94) #10
  br label %110

99:                                               ; preds = %93
  %100 = load i64*, i64** %13, align 8
  %101 = load i64*, i64** %14, align 8
  %102 = icmp eq i64* %100, %101
  br i1 %102, label %103, label %105

103:                                              ; preds = %99
  %104 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #10
  br label %105

105:                                              ; preds = %103, %99
  %106 = phi i64* [ %104, %103 ], [ %100, %99 ]
  %107 = ptrtoint i64* %106 to i64
  %108 = add i64 %107, 8
  %109 = inttoptr i64 %108 to i64*
  store i64* %109, i64** %13, align 8
  store i64 %94, i64* %106, align 8
  br label %110

110:                                              ; preds = %97, %105
  %111 = phi i64* [ %98, %97 ], [ %106, %105 ]
  %112 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  store i64* %111, i64** %112, align 8
  br label %113

113:                                              ; preds = %110, %91
  %114 = call zeroext i1 @_ZNK2v88internal9ScopeInfo15IsReplModeScopeEv(%"class.v8::internal::ScopeInfo"* nonnull %7) #10
  br i1 %114, label %115, label %425

115:                                              ; preds = %113
  %116 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %3, i64 0, i32 0, i32 13
  %117 = load i16, i16* %116, align 1
  %118 = or i16 %117, 2048
  store i16 %118, i16* %116, align 1
  br label %425

119:                                              ; preds = %88
  %120 = call zeroext i8 @_ZNK2v88internal9ScopeInfo10scope_typeEv(%"class.v8::internal::ScopeInfo"* nonnull %7) #10
  %121 = icmp eq i8 %120, 2
  br i1 %121, label %122, label %164

122:                                              ; preds = %119
  %123 = load i64, i64* %8, align 8
  %124 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %125 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %124, null
  br i1 %125, label %128, label %126

126:                                              ; preds = %122
  %127 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %124, i64 %123) #10
  br label %139

128:                                              ; preds = %122
  %129 = load i64*, i64** %13, align 8
  %130 = load i64*, i64** %14, align 8
  %131 = icmp eq i64* %129, %130
  br i1 %131, label %132, label %134

132:                                              ; preds = %128
  %133 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #10
  br label %134

134:                                              ; preds = %132, %128
  %135 = phi i64* [ %133, %132 ], [ %129, %128 ]
  %136 = ptrtoint i64* %135 to i64
  %137 = add i64 %136, 8
  %138 = inttoptr i64 %137 to i64*
  store i64* %138, i64** %13, align 8
  store i64 %123, i64* %135, align 8
  br label %139

139:                                              ; preds = %126, %134
  %140 = phi i64* [ %127, %126 ], [ %135, %134 ]
  %141 = load i64, i64* %15, align 8
  %142 = load i64, i64* %16, align 8
  %143 = sub i64 %142, %141
  %144 = icmp ult i64 %143, 216
  br i1 %144, label %145, label %147, !prof !2

145:                                              ; preds = %139
  %146 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 216) #10
  br label %149

147:                                              ; preds = %139
  %148 = add i64 %141, 216
  store i64 %148, i64* %15, align 8
  br label %149

149:                                              ; preds = %145, %147
  %150 = phi i64 [ %146, %145 ], [ %141, %147 ]
  %151 = inttoptr i64 %150 to %"class.v8::internal::DeclarationScope"*
  call void @_ZN2v88internal16DeclarationScopeC2EPNS0_4ZoneENS0_9ScopeTypeEPNS0_15AstValueFactoryENS0_6HandleINS0_9ScopeInfoEEE(%"class.v8::internal::DeclarationScope"* %151, %"class.v8::internal::Zone"* %1, i8 zeroext 2, %"class.v8::internal::AstValueFactory"* %4, i64* %140) #10
  %152 = inttoptr i64 %150 to %"class.v8::internal::Scope"*
  %153 = load i64, i64* %8, align 8
  %154 = add i64 %153, 3
  %155 = inttoptr i64 %154 to i32*
  %156 = load i32, i32* %155, align 4
  %157 = lshr i32 %156, 1
  %158 = trunc i32 %157 to i16
  %159 = icmp slt i16 %158, 0
  br i1 %159, label %160, label %385

160:                                              ; preds = %149
  %161 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %151, i64 0, i32 1
  %162 = load i16, i16* %161, align 1
  %163 = or i16 %162, 2
  store i16 %163, i16* %161, align 1
  br label %385

164:                                              ; preds = %119
  %165 = call zeroext i8 @_ZNK2v88internal9ScopeInfo10scope_typeEv(%"class.v8::internal::ScopeInfo"* nonnull %7) #10
  %166 = icmp eq i8 %165, 1
  br i1 %166, label %167, label %198

167:                                              ; preds = %164
  %168 = load i64, i64* %8, align 8
  %169 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %170 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %169, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %167
  %172 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %169, i64 %168) #10
  br label %184

173:                                              ; preds = %167
  %174 = load i64*, i64** %13, align 8
  %175 = load i64*, i64** %14, align 8
  %176 = icmp eq i64* %174, %175
  br i1 %176, label %177, label %179

177:                                              ; preds = %173
  %178 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #10
  br label %179

179:                                              ; preds = %177, %173
  %180 = phi i64* [ %178, %177 ], [ %174, %173 ]
  %181 = ptrtoint i64* %180 to i64
  %182 = add i64 %181, 8
  %183 = inttoptr i64 %182 to i64*
  store i64* %183, i64** %13, align 8
  store i64 %168, i64* %180, align 8
  br label %184

184:                                              ; preds = %171, %179
  %185 = phi i64* [ %172, %171 ], [ %180, %179 ]
  %186 = load i64, i64* %15, align 8
  %187 = load i64, i64* %16, align 8
  %188 = sub i64 %187, %186
  %189 = icmp ult i64 %188, 216
  br i1 %189, label %190, label %192, !prof !2

190:                                              ; preds = %184
  %191 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 216) #10
  br label %194

192:                                              ; preds = %184
  %193 = add i64 %186, 216
  store i64 %193, i64* %15, align 8
  br label %194

194:                                              ; preds = %190, %192
  %195 = phi i64 [ %191, %190 ], [ %186, %192 ]
  %196 = inttoptr i64 %195 to %"class.v8::internal::DeclarationScope"*
  call void @_ZN2v88internal16DeclarationScopeC2EPNS0_4ZoneENS0_9ScopeTypeEPNS0_15AstValueFactoryENS0_6HandleINS0_9ScopeInfoEEE(%"class.v8::internal::DeclarationScope"* %196, %"class.v8::internal::Zone"* %1, i8 zeroext 1, %"class.v8::internal::AstValueFactory"* %4, i64* %185) #10
  %197 = inttoptr i64 %195 to %"class.v8::internal::Scope"*
  br label %385

198:                                              ; preds = %164
  %199 = call zeroext i8 @_ZNK2v88internal9ScopeInfo10scope_typeEv(%"class.v8::internal::ScopeInfo"* nonnull %7) #10
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %201, label %232

201:                                              ; preds = %198
  %202 = load i64, i64* %8, align 8
  %203 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %204 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %203, null
  br i1 %204, label %207, label %205

205:                                              ; preds = %201
  %206 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %203, i64 %202) #10
  br label %218

207:                                              ; preds = %201
  %208 = load i64*, i64** %13, align 8
  %209 = load i64*, i64** %14, align 8
  %210 = icmp eq i64* %208, %209
  br i1 %210, label %211, label %213

211:                                              ; preds = %207
  %212 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #10
  br label %213

213:                                              ; preds = %211, %207
  %214 = phi i64* [ %212, %211 ], [ %208, %207 ]
  %215 = ptrtoint i64* %214 to i64
  %216 = add i64 %215, 8
  %217 = inttoptr i64 %216 to i64*
  store i64* %217, i64** %13, align 8
  store i64 %202, i64* %214, align 8
  br label %218

218:                                              ; preds = %205, %213
  %219 = phi i64* [ %206, %205 ], [ %214, %213 ]
  %220 = load i64, i64* %15, align 8
  %221 = load i64, i64* %16, align 8
  %222 = sub i64 %221, %220
  %223 = icmp ult i64 %222, 152
  br i1 %223, label %224, label %226, !prof !2

224:                                              ; preds = %218
  %225 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 152) #10
  br label %228

226:                                              ; preds = %218
  %227 = add i64 %220, 152
  store i64 %227, i64* %15, align 8
  br label %228

228:                                              ; preds = %224, %226
  %229 = phi i64 [ %225, %224 ], [ %220, %226 ]
  %230 = inttoptr i64 %229 to %"class.v8::internal::ClassScope"*
  call void @_ZN2v88internal10ClassScopeC2EPNS0_7IsolateEPNS0_4ZoneEPNS0_15AstValueFactoryENS0_6HandleINS0_9ScopeInfoEEE(%"class.v8::internal::ClassScope"* %230, %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Zone"* %1, %"class.v8::internal::AstValueFactory"* %4, i64* %219) #10
  %231 = inttoptr i64 %229 to %"class.v8::internal::Scope"*
  br label %385

232:                                              ; preds = %198
  %233 = call zeroext i8 @_ZNK2v88internal9ScopeInfo10scope_typeEv(%"class.v8::internal::ScopeInfo"* nonnull %7) #10
  %234 = icmp eq i8 %233, 6
  br i1 %234, label %235, label %295

235:                                              ; preds = %232
  %236 = call zeroext i1 @_ZNK2v88internal9ScopeInfo20is_declaration_scopeEv(%"class.v8::internal::ScopeInfo"* nonnull %7) #10
  %237 = load i64, i64* %8, align 8
  %238 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %239 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %238, null
  br i1 %236, label %240, label %268

240:                                              ; preds = %235
  br i1 %239, label %243, label %241

241:                                              ; preds = %240
  %242 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %238, i64 %237) #10
  br label %254

243:                                              ; preds = %240
  %244 = load i64*, i64** %13, align 8
  %245 = load i64*, i64** %14, align 8
  %246 = icmp eq i64* %244, %245
  br i1 %246, label %247, label %249

247:                                              ; preds = %243
  %248 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #10
  br label %249

249:                                              ; preds = %247, %243
  %250 = phi i64* [ %248, %247 ], [ %244, %243 ]
  %251 = ptrtoint i64* %250 to i64
  %252 = add i64 %251, 8
  %253 = inttoptr i64 %252 to i64*
  store i64* %253, i64** %13, align 8
  store i64 %237, i64* %250, align 8
  br label %254

254:                                              ; preds = %241, %249
  %255 = phi i64* [ %242, %241 ], [ %250, %249 ]
  %256 = load i64, i64* %15, align 8
  %257 = load i64, i64* %16, align 8
  %258 = sub i64 %257, %256
  %259 = icmp ult i64 %258, 216
  br i1 %259, label %260, label %262, !prof !2

260:                                              ; preds = %254
  %261 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 216) #10
  br label %264

262:                                              ; preds = %254
  %263 = add i64 %256, 216
  store i64 %263, i64* %15, align 8
  br label %264

264:                                              ; preds = %260, %262
  %265 = phi i64 [ %261, %260 ], [ %256, %262 ]
  %266 = inttoptr i64 %265 to %"class.v8::internal::DeclarationScope"*
  call void @_ZN2v88internal16DeclarationScopeC2EPNS0_4ZoneENS0_9ScopeTypeEPNS0_15AstValueFactoryENS0_6HandleINS0_9ScopeInfoEEE(%"class.v8::internal::DeclarationScope"* %266, %"class.v8::internal::Zone"* %1, i8 zeroext 6, %"class.v8::internal::AstValueFactory"* %4, i64* %255) #10
  %267 = inttoptr i64 %265 to %"class.v8::internal::Scope"*
  br label %385

268:                                              ; preds = %235
  br i1 %239, label %271, label %269

269:                                              ; preds = %268
  %270 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %238, i64 %237) #10
  br label %282

271:                                              ; preds = %268
  %272 = load i64*, i64** %13, align 8
  %273 = load i64*, i64** %14, align 8
  %274 = icmp eq i64* %272, %273
  br i1 %274, label %275, label %277

275:                                              ; preds = %271
  %276 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #10
  br label %277

277:                                              ; preds = %275, %271
  %278 = phi i64* [ %276, %275 ], [ %272, %271 ]
  %279 = ptrtoint i64* %278 to i64
  %280 = add i64 %279, 8
  %281 = inttoptr i64 %280 to i64*
  store i64* %281, i64** %13, align 8
  store i64 %237, i64* %278, align 8
  br label %282

282:                                              ; preds = %269, %277
  %283 = phi i64* [ %270, %269 ], [ %278, %277 ]
  %284 = load i64, i64* %15, align 8
  %285 = load i64, i64* %16, align 8
  %286 = sub i64 %285, %284
  %287 = icmp ult i64 %286, 128
  br i1 %287, label %288, label %290, !prof !2

288:                                              ; preds = %282
  %289 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 128) #10
  br label %292

290:                                              ; preds = %282
  %291 = add i64 %284, 128
  store i64 %291, i64* %15, align 8
  br label %292

292:                                              ; preds = %288, %290
  %293 = phi i64 [ %289, %288 ], [ %284, %290 ]
  %294 = inttoptr i64 %293 to %"class.v8::internal::Scope"*
  call void @_ZN2v88internal5ScopeC2EPNS0_4ZoneENS0_9ScopeTypeEPNS0_15AstValueFactoryENS0_6HandleINS0_9ScopeInfoEEE(%"class.v8::internal::Scope"* %294, %"class.v8::internal::Zone"* %1, i8 zeroext 6, %"class.v8::internal::AstValueFactory"* %4, i64* %283) #10
  br label %385

295:                                              ; preds = %232
  %296 = call zeroext i8 @_ZNK2v88internal9ScopeInfo10scope_typeEv(%"class.v8::internal::ScopeInfo"* nonnull %7) #10
  %297 = icmp eq i8 %296, 3
  br i1 %297, label %298, label %335

298:                                              ; preds = %295
  %299 = load i64, i64* %8, align 8
  %300 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %301 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %300, null
  br i1 %301, label %304, label %302

302:                                              ; preds = %298
  %303 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %300, i64 %299) #10
  br label %315

304:                                              ; preds = %298
  %305 = load i64*, i64** %13, align 8
  %306 = load i64*, i64** %14, align 8
  %307 = icmp eq i64* %305, %306
  br i1 %307, label %308, label %310

308:                                              ; preds = %304
  %309 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #10
  br label %310

310:                                              ; preds = %308, %304
  %311 = phi i64* [ %309, %308 ], [ %305, %304 ]
  %312 = ptrtoint i64* %311 to i64
  %313 = add i64 %312, 8
  %314 = inttoptr i64 %313 to i64*
  store i64* %314, i64** %13, align 8
  store i64 %299, i64* %311, align 8
  br label %315

315:                                              ; preds = %302, %310
  %316 = phi i64* [ %303, %302 ], [ %311, %310 ]
  %317 = load i64, i64* %15, align 8
  %318 = load i64, i64* %16, align 8
  %319 = sub i64 %318, %317
  %320 = icmp ult i64 %319, 224
  br i1 %320, label %321, label %323, !prof !2

321:                                              ; preds = %315
  %322 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 224) #10
  br label %325

323:                                              ; preds = %315
  %324 = add i64 %317, 224
  store i64 %324, i64* %15, align 8
  br label %325

325:                                              ; preds = %321, %323
  %326 = phi i64 [ %322, %321 ], [ %317, %323 ]
  %327 = inttoptr i64 %326 to %"class.v8::internal::ModuleScope"*
  %328 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %327, i64 0, i32 0
  %329 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %17, align 8
  call void @_ZN2v88internal16DeclarationScopeC2EPNS0_4ZoneENS0_9ScopeTypeEPNS0_15AstValueFactoryENS0_6HandleINS0_9ScopeInfoEEE(%"class.v8::internal::DeclarationScope"* %328, %"class.v8::internal::Zone"* %329, i8 zeroext 3, %"class.v8::internal::AstValueFactory"* %4, i64* %316) #10
  %330 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %327, i64 0, i32 1
  store %"class.v8::internal::SourceTextModuleDescriptor"* null, %"class.v8::internal::SourceTextModuleDescriptor"** %330, align 8
  %331 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %327, i64 0, i32 0, i32 0, i32 13
  %332 = load i16, i16* %331, align 1
  %333 = or i16 %332, 1
  store i16 %333, i16* %331, align 1
  %334 = inttoptr i64 %326 to %"class.v8::internal::Scope"*
  br label %385

335:                                              ; preds = %295
  %336 = call i64 @_ZNK2v88internal9ScopeInfo16ContextLocalNameEi(%"class.v8::internal::ScopeInfo"* nonnull %7, i32 0) #10
  %337 = call zeroext i8 @_ZNK2v88internal9ScopeInfo29ContextLocalMaybeAssignedFlagEi(%"class.v8::internal::ScopeInfo"* nonnull %7, i32 0) #10
  %338 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %339 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %338, null
  br i1 %339, label %342, label %340

340:                                              ; preds = %335
  %341 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %338, i64 %336) #10
  br label %353

342:                                              ; preds = %335
  %343 = load i64*, i64** %13, align 8
  %344 = load i64*, i64** %14, align 8
  %345 = icmp eq i64* %343, %344
  br i1 %345, label %346, label %348

346:                                              ; preds = %342
  %347 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #10
  br label %348

348:                                              ; preds = %346, %342
  %349 = phi i64* [ %347, %346 ], [ %343, %342 ]
  %350 = ptrtoint i64* %349 to i64
  %351 = add i64 %350, 8
  %352 = inttoptr i64 %351 to i64*
  store i64* %352, i64** %13, align 8
  store i64 %336, i64* %349, align 8
  br label %353

353:                                              ; preds = %340, %348
  %354 = phi i64* [ %341, %340 ], [ %349, %348 ]
  %355 = call %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory9GetStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::AstValueFactory"* %4, i64* %354) #10
  %356 = load i64, i64* %8, align 8
  %357 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %358 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %357, null
  br i1 %358, label %361, label %359

359:                                              ; preds = %353
  %360 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %357, i64 %356) #10
  br label %372

361:                                              ; preds = %353
  %362 = load i64*, i64** %13, align 8
  %363 = load i64*, i64** %14, align 8
  %364 = icmp eq i64* %362, %363
  br i1 %364, label %365, label %367

365:                                              ; preds = %361
  %366 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #10
  br label %367

367:                                              ; preds = %365, %361
  %368 = phi i64* [ %366, %365 ], [ %362, %361 ]
  %369 = ptrtoint i64* %368 to i64
  %370 = add i64 %369, 8
  %371 = inttoptr i64 %370 to i64*
  store i64* %371, i64** %13, align 8
  store i64 %356, i64* %368, align 8
  br label %372

372:                                              ; preds = %359, %367
  %373 = phi i64* [ %360, %359 ], [ %368, %367 ]
  %374 = load i64, i64* %15, align 8
  %375 = load i64, i64* %16, align 8
  %376 = sub i64 %375, %374
  %377 = icmp ult i64 %376, 128
  br i1 %377, label %378, label %380, !prof !2

378:                                              ; preds = %372
  %379 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 128) #10
  br label %382

380:                                              ; preds = %372
  %381 = add i64 %374, 128
  store i64 %381, i64* %15, align 8
  br label %382

382:                                              ; preds = %378, %380
  %383 = phi i64 [ %379, %378 ], [ %374, %380 ]
  %384 = inttoptr i64 %383 to %"class.v8::internal::Scope"*
  call void @_ZN2v88internal5ScopeC2EPNS0_4ZoneEPKNS0_12AstRawStringENS0_17MaybeAssignedFlagENS0_6HandleINS0_9ScopeInfoEEE(%"class.v8::internal::Scope"* %384, %"class.v8::internal::Zone"* %1, %"class.v8::internal::AstRawString"* %355, i8 zeroext %337, i64* %373) #10
  br label %385

385:                                              ; preds = %194, %292, %264, %382, %325, %228, %149, %160, %54, %85
  %386 = phi %"class.v8::internal::Scope"* [ %57, %54 ], [ %87, %85 ], [ %152, %160 ], [ %152, %149 ], [ %197, %194 ], [ %231, %228 ], [ %267, %264 ], [ %294, %292 ], [ %334, %325 ], [ %384, %382 ]
  br i1 %18, label %387, label %389

387:                                              ; preds = %385
  %388 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %386, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %388, align 8
  br label %389

389:                                              ; preds = %387, %385
  %390 = and i8 %22, 1
  %391 = icmp eq i8 %390, 0
  %392 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %386, i64 0, i32 13
  %393 = load i16, i16* %392, align 1
  br i1 %391, label %396, label %394

394:                                              ; preds = %389
  %395 = or i16 %393, 4096
  store i16 %395, i16* %392, align 1
  br label %406

396:                                              ; preds = %389
  %397 = and i16 %393, 256
  %398 = icmp eq i16 %397, 0
  br i1 %398, label %403, label %399

399:                                              ; preds = %396
  %400 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %386, i64 0, i32 12
  %401 = load i8, i8* %400, align 8
  %402 = icmp ne i8 %401, 1
  br label %403

403:                                              ; preds = %396, %399
  %404 = phi i1 [ false, %396 ], [ %402, %399 ]
  %405 = zext i1 %404 to i8
  br label %406

406:                                              ; preds = %403, %394
  %407 = phi i8 [ %22, %394 ], [ %405, %403 ]
  %408 = icmp eq %"class.v8::internal::Scope"* %20, null
  br i1 %408, label %416, label %409

409:                                              ; preds = %406
  %410 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %386, i64 0, i32 1
  %411 = bitcast %"class.v8::internal::Scope"** %410 to i64*
  %412 = load i64, i64* %411, align 8
  %413 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %20, i64 0, i32 2
  %414 = bitcast %"class.v8::internal::Scope"** %413 to i64*
  store i64 %412, i64* %414, align 8
  store %"class.v8::internal::Scope"* %20, %"class.v8::internal::Scope"** %410, align 8
  %415 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %20, i64 0, i32 0
  store %"class.v8::internal::Scope"* %386, %"class.v8::internal::Scope"** %415, align 8
  br label %416

416:                                              ; preds = %406, %409
  %417 = icmp eq %"class.v8::internal::Scope"* %21, null
  %418 = select i1 %417, %"class.v8::internal::Scope"* %386, %"class.v8::internal::Scope"* %21
  %419 = call zeroext i1 @_ZNK2v88internal9ScopeInfo17HasOuterScopeInfoEv(%"class.v8::internal::ScopeInfo"* nonnull %7) #10
  br i1 %419, label %421, label %420

420:                                              ; preds = %416
  store i64 0, i64* %8, align 8
  br label %425

421:                                              ; preds = %416
  %422 = call i64 @_ZNK2v88internal9ScopeInfo14OuterScopeInfoEv(%"class.v8::internal::ScopeInfo"* nonnull %7) #10
  store i64 %422, i64* %8, align 8
  %423 = trunc i64 %422 to i32
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %425, label %19

425:                                              ; preds = %421, %420, %6, %113, %115
  %426 = phi %"class.v8::internal::Scope"* [ %21, %113 ], [ %21, %115 ], [ null, %6 ], [ %418, %420 ], [ %418, %421 ]
  %427 = phi %"class.v8::internal::Scope"* [ %20, %113 ], [ %20, %115 ], [ null, %6 ], [ %386, %420 ], [ %386, %421 ]
  %428 = icmp eq i32 %5, 0
  br i1 %428, label %429, label %435

429:                                              ; preds = %425
  %430 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %431 = load i64*, i64** %430, align 8
  %432 = icmp eq i64* %431, null
  br i1 %432, label %433, label %435

433:                                              ; preds = %429
  %434 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 131
  store i64* %434, i64** %430, align 8
  br label %435

435:                                              ; preds = %433, %429, %425
  %436 = icmp eq %"class.v8::internal::Scope"* %426, null
  %437 = bitcast %"class.v8::internal::DeclarationScope"* %3 to %"class.v8::internal::Scope"*
  br i1 %436, label %445, label %438

438:                                              ; preds = %435
  %439 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %3, i64 0, i32 0, i32 1
  %440 = bitcast %"class.v8::internal::Scope"** %439 to i64*
  %441 = load i64, i64* %440, align 8
  %442 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %427, i64 0, i32 2
  %443 = bitcast %"class.v8::internal::Scope"** %442 to i64*
  store i64 %441, i64* %443, align 8
  store %"class.v8::internal::Scope"* %427, %"class.v8::internal::Scope"** %439, align 8
  %444 = bitcast %"class.v8::internal::Scope"* %427 to %"class.v8::internal::DeclarationScope"**
  store %"class.v8::internal::DeclarationScope"* %3, %"class.v8::internal::DeclarationScope"** %444, align 8
  br label %445

445:                                              ; preds = %435, %438
  %446 = phi %"class.v8::internal::Scope"* [ %426, %438 ], [ %437, %435 ]
  ret %"class.v8::internal::Scope"* %446
}

declare zeroext i8 @_ZNK2v88internal9ScopeInfo10scope_typeEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK2v88internal9ScopeInfo20IsDebugEvaluateScopeEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK2v88internal9ScopeInfo15IsReplModeScopeEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK2v88internal9ScopeInfo20is_declaration_scopeEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #5

declare zeroext i8 @_ZNK2v88internal9ScopeInfo29ContextLocalMaybeAssignedFlagEi(%"class.v8::internal::ScopeInfo"*, i32) local_unnamed_addr #5

declare zeroext i1 @_ZNK2v88internal9ScopeInfo17HasOuterScopeInfoEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #5

declare i64 @_ZNK2v88internal9ScopeInfo14OuterScopeInfoEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.v8::internal::ModuleScope"* @_ZN2v88internal5Scope13AsModuleScopeEv(%"class.v8::internal::Scope"* readnone) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.v8::internal::Scope"* %0 to %"class.v8::internal::ModuleScope"*
  ret %"class.v8::internal::ModuleScope"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.v8::internal::ModuleScope"* @_ZNK2v88internal5Scope13AsModuleScopeEv(%"class.v8::internal::Scope"* readnone) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.v8::internal::Scope"* %0 to %"class.v8::internal::ModuleScope"*
  ret %"class.v8::internal::ModuleScope"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.v8::internal::ClassScope"* @_ZNK2v88internal5Scope12AsClassScopeEv(%"class.v8::internal::Scope"* readnone) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.v8::internal::Scope"* %0 to %"class.v8::internal::ClassScope"*
  ret %"class.v8::internal::ClassScope"* %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal16DeclarationScope26DeclareSloppyBlockFunctionEPNS0_28SloppyBlockFunctionStatementE(%"class.v8::internal::DeclarationScope"* nocapture, %"class.v8::internal::SloppyBlockFunctionStatement"*) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 7, i32 1
  %4 = load %"class.v8::internal::SloppyBlockFunctionStatement"**, %"class.v8::internal::SloppyBlockFunctionStatement"*** %3, align 8
  store %"class.v8::internal::SloppyBlockFunctionStatement"* %1, %"class.v8::internal::SloppyBlockFunctionStatement"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::SloppyBlockFunctionStatement", %"class.v8::internal::SloppyBlockFunctionStatement"* %1, i64 0, i32 3
  store %"class.v8::internal::SloppyBlockFunctionStatement"** %5, %"class.v8::internal::SloppyBlockFunctionStatement"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16DeclarationScope25HoistSloppyBlockFunctionsEPNS0_14AstNodeFactoryE(%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstNodeFactory"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 7, i32 0
  %7 = load %"class.v8::internal::SloppyBlockFunctionStatement"*, %"class.v8::internal::SloppyBlockFunctionStatement"** %6, align 8
  %8 = icmp eq %"class.v8::internal::SloppyBlockFunctionStatement"* %7, null
  br i1 %8, label %270, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::internal::DeclarationScope"* %0 to %"class.v8::internal::Scope"*
  br label %11

11:                                               ; preds = %20, %9
  %12 = phi %"class.v8::internal::Scope"* [ %10, %9 ], [ %22, %20 ]
  %13 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %12, i64 0, i32 13
  %14 = load i16, i16* %13, align 1
  %15 = and i16 %14, 256
  %16 = icmp eq i16 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %12, i64 0, i32 12
  %19 = load i8, i8* %18, align 8
  switch i8 %19, label %32 [
    i8 6, label %20
    i8 0, label %20
    i8 2, label %23
  ]

20:                                               ; preds = %17, %17, %11
  %21 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %12, i64 0, i32 0
  %22 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %21, align 8
  br label %11

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %12, i64 0, i32 14
  %25 = bitcast [5 x i8]* %24 to i16*
  %26 = load i16, i16* %25, align 1
  %27 = and i16 %26, 1
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 0
  %31 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %30, align 8
  br label %32

32:                                               ; preds = %17, %23, %29
  %33 = phi %"class.v8::internal::Scope"* [ %31, %29 ], [ %10, %23 ], [ %10, %17 ]
  br label %34

34:                                               ; preds = %44, %32
  %35 = phi %"class.v8::internal::Scope"* [ %10, %32 ], [ %46, %44 ]
  %36 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %35, i64 0, i32 13
  %37 = load i16, i16* %36, align 1
  %38 = and i16 %37, 256
  %39 = icmp eq i16 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %35, i64 0, i32 12
  %42 = load i8, i8* %41, align 8
  %43 = icmp eq i8 %42, 1
  br i1 %43, label %44, label %47

44:                                               ; preds = %40, %34
  %45 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %35, i64 0, i32 0
  %46 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %45, align 8
  br label %34

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %35, i64 0, i32 0
  %49 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 7, i32 1
  %51 = load %"class.v8::internal::SloppyBlockFunctionStatement"**, %"class.v8::internal::SloppyBlockFunctionStatement"*** %50, align 8
  %52 = icmp eq %"class.v8::internal::SloppyBlockFunctionStatement"** %6, %51
  br i1 %52, label %270, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %33, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %55 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %33, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %56 = icmp eq %"class.v8::internal::AstNodeFactory"* %1, null
  %57 = getelementptr inbounds %"class.v8::internal::AstNodeFactory", %"class.v8::internal::AstNodeFactory"* %1, i64 0, i32 0
  br label %58

58:                                               ; preds = %268, %53
  %59 = phi %"class.v8::internal::SloppyBlockFunctionStatement"* [ %7, %53 ], [ %269, %268 ]
  %60 = phi %"class.v8::internal::SloppyBlockFunctionStatement"** [ %6, %53 ], [ %266, %268 ]
  %61 = getelementptr inbounds %"class.v8::internal::SloppyBlockFunctionStatement", %"class.v8::internal::SloppyBlockFunctionStatement"* %59, i64 0, i32 1
  %62 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %62, i64 0, i32 1
  %64 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %63, align 8
  %65 = bitcast %"class.v8::internal::AstRawString"* %64 to i8*
  %66 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %64, i64 0, i32 2
  %67 = load i32, i32* %66, align 8
  %68 = lshr i32 %67, 2
  %69 = load i32, i32* %54, align 8
  %70 = add i32 %69, -1
  %71 = and i32 %70, %68
  %72 = zext i32 %71 to i64
  %73 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %55, align 8
  %74 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %73, i64 %72
  %75 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %74, i64 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %76, null
  %78 = icmp eq i8* %76, %65
  %79 = or i1 %77, %78
  br i1 %79, label %92, label %80

80:                                               ; preds = %58
  %81 = zext i32 %70 to i64
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i64 [ %72, %80 ], [ %85, %82 ]
  %84 = add nuw nsw i64 %83, 1
  %85 = and i64 %84, %81
  %86 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %73, i64 %85
  %87 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %86, i64 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = icmp eq i8* %88, null
  %90 = icmp eq i8* %88, %65
  %91 = or i1 %89, %90
  br i1 %91, label %92, label %82

92:                                               ; preds = %82, %58
  %93 = phi i8* [ %76, %58 ], [ %88, %82 ]
  %94 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %74, %58 ], [ %86, %82 ]
  %95 = icmp eq i8* %93, null
  %96 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %94, null
  %97 = or i1 %95, %96
  br i1 %97, label %108, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %94, i64 0, i32 1
  %100 = bitcast i8** %99 to %"class.v8::internal::Variable"**
  %101 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %100, align 8
  %102 = icmp eq %"class.v8::internal::Variable"* %101, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %101, i64 0, i32 6
  %105 = load i16, i16* %104, align 8
  %106 = and i16 %105, 112
  %107 = icmp eq i16 %106, 16
  br i1 %107, label %264, label %108

108:                                              ; preds = %92, %98, %103
  %109 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %62, i64 0, i32 0
  %110 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %109, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %110, i64 0, i32 0
  %112 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %111, align 8
  br label %113

113:                                              ; preds = %170, %108
  %114 = phi i32 [ %67, %108 ], [ %171, %170 ]
  %115 = phi %"class.v8::internal::Scope"* [ %112, %108 ], [ %168, %170 ]
  %116 = lshr i32 %114, 2
  %117 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %115, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, -1
  %120 = and i32 %119, %116
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %115, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %123 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %122, align 8
  %124 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %123, i64 %121
  %125 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %124, i64 0, i32 0
  %126 = load i8*, i8** %125, align 8
  %127 = icmp eq i8* %126, null
  %128 = icmp eq i8* %126, %65
  %129 = or i1 %127, %128
  br i1 %129, label %142, label %130

130:                                              ; preds = %113
  %131 = zext i32 %119 to i64
  br label %132

132:                                              ; preds = %132, %130
  %133 = phi i64 [ %121, %130 ], [ %135, %132 ]
  %134 = add nuw nsw i64 %133, 1
  %135 = and i64 %134, %131
  %136 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %123, i64 %135
  %137 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %136, i64 0, i32 0
  %138 = load i8*, i8** %137, align 8
  %139 = icmp eq i8* %138, null
  %140 = icmp eq i8* %138, %65
  %141 = or i1 %139, %140
  br i1 %141, label %142, label %132

142:                                              ; preds = %132, %113
  %143 = phi i8* [ %126, %113 ], [ %138, %132 ]
  %144 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %124, %113 ], [ %136, %132 ]
  %145 = icmp eq i8* %143, null
  %146 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %144, null
  %147 = or i1 %145, %146
  br i1 %147, label %153, label %148

148:                                              ; preds = %142
  %149 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %144, i64 0, i32 1
  %150 = bitcast i8** %149 to %"class.v8::internal::Variable"**
  %151 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %150, align 8
  %152 = icmp eq %"class.v8::internal::Variable"* %151, null
  br i1 %152, label %153, label %160

153:                                              ; preds = %148, %142
  %154 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %115, i64 0, i32 7, i32 0, i32 0
  %155 = load i64*, i64** %154, align 8
  %156 = icmp eq i64* %155, null
  br i1 %156, label %166, label %157

157:                                              ; preds = %153
  %158 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope17LookupInScopeInfoEPKNS0_12AstRawStringEPS1_(%"class.v8::internal::Scope"* %115, %"class.v8::internal::AstRawString"* %64, %"class.v8::internal::Scope"* %115) #10
  %159 = icmp eq %"class.v8::internal::Variable"* %158, null
  br i1 %159, label %166, label %160

160:                                              ; preds = %148, %157
  %161 = phi %"class.v8::internal::Variable"* [ %158, %157 ], [ %151, %148 ]
  %162 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %161, i64 0, i32 6
  %163 = load i16, i16* %162, align 8
  %164 = and i16 %163, 14
  %165 = icmp eq i16 %164, 0
  br i1 %165, label %264, label %166

166:                                              ; preds = %153, %157, %160
  %167 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %115, i64 0, i32 0
  %168 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %167, align 8
  %169 = icmp eq %"class.v8::internal::Scope"* %168, %49
  br i1 %169, label %172, label %170

170:                                              ; preds = %166
  %171 = load i32, i32* %66, align 8
  br label %113

172:                                              ; preds = %166
  br i1 %56, label %255, label %173

173:                                              ; preds = %172
  %174 = getelementptr inbounds %"class.v8::internal::SloppyBlockFunctionStatement", %"class.v8::internal::SloppyBlockFunctionStatement"* %59, i64 0, i32 0, i32 0, i32 0
  %175 = load i32, i32* %174, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #10
  store i8 1, i8* %3, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  %176 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %177 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %176, i64 0, i32 2
  %178 = load i64, i64* %177, align 8
  %179 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %176, i64 0, i32 3
  %180 = load i64, i64* %179, align 8
  %181 = sub i64 %180, %178
  %182 = icmp ult i64 %181, 24
  br i1 %182, label %183, label %185, !prof !2

183:                                              ; preds = %173
  %184 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %176, i64 24) #10
  br label %187

185:                                              ; preds = %173
  %186 = add i64 %178, 24
  store i64 %186, i64* %177, align 8
  br label %187

187:                                              ; preds = %183, %185
  %188 = phi i64 [ %184, %183 ], [ %178, %185 ]
  %189 = inttoptr i64 %188 to %"class.v8::internal::VariableDeclaration"*
  %190 = getelementptr inbounds %"class.v8::internal::VariableDeclaration", %"class.v8::internal::VariableDeclaration"* %189, i64 0, i32 0, i32 0, i32 0
  store i32 %175, i32* %190, align 4
  %191 = getelementptr inbounds %"class.v8::internal::VariableDeclaration", %"class.v8::internal::VariableDeclaration"* %189, i64 0, i32 0, i32 0, i32 1
  %192 = getelementptr inbounds %"class.v8::internal::VariableDeclaration", %"class.v8::internal::VariableDeclaration"* %189, i64 0, i32 0, i32 2
  store %"class.v8::internal::Declaration"* null, %"class.v8::internal::Declaration"** %192, align 8
  store i32 0, i32* %191, align 4
  %193 = getelementptr inbounds %"class.v8::internal::VariableDeclaration", %"class.v8::internal::VariableDeclaration"* %189, i64 0, i32 0
  %194 = call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope15DeclareVariableEPNS0_11DeclarationEPKNS0_12AstRawStringEiNS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagEPbSA_SA_(%"class.v8::internal::Scope"* %10, %"class.v8::internal::Declaration"* %193, %"class.v8::internal::AstRawString"* %64, i32 %175, i8 zeroext 2, i8 zeroext 0, i8 zeroext 1, i8* nonnull %4, i8* null, i8* nonnull %3)
  %195 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %61, align 8
  %196 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %197 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %196, i64 0, i32 2
  %198 = load i64, i64* %197, align 8
  %199 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %196, i64 0, i32 3
  %200 = load i64, i64* %199, align 8
  %201 = sub i64 %200, %198
  %202 = icmp ult i64 %201, 24
  br i1 %202, label %203, label %205, !prof !2

203:                                              ; preds = %187
  %204 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %196, i64 24) #10
  br label %207

205:                                              ; preds = %187
  %206 = add i64 %198, 24
  store i64 %206, i64* %197, align 8
  br label %207

207:                                              ; preds = %203, %205
  %208 = phi i64 [ %204, %203 ], [ %198, %205 ]
  %209 = inttoptr i64 %208 to %"class.v8::internal::VariableProxy"*
  tail call void @_ZN2v88internal13VariableProxyC1EPNS0_8VariableEi(%"class.v8::internal::VariableProxy"* %209, %"class.v8::internal::Variable"* %195, i32 -1) #10
  %210 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %211 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %210, i64 0, i32 2
  %212 = load i64, i64* %211, align 8
  %213 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %210, i64 0, i32 3
  %214 = load i64, i64* %213, align 8
  %215 = sub i64 %214, %212
  %216 = icmp ult i64 %215, 24
  br i1 %216, label %217, label %219, !prof !2

217:                                              ; preds = %207
  %218 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %210, i64 24) #10
  br label %221

219:                                              ; preds = %207
  %220 = add i64 %212, 24
  store i64 %220, i64* %211, align 8
  br label %221

221:                                              ; preds = %217, %219
  %222 = phi i64 [ %218, %217 ], [ %212, %219 ]
  %223 = inttoptr i64 %222 to %"class.v8::internal::VariableProxy"*
  tail call void @_ZN2v88internal13VariableProxyC1EPNS0_8VariableEi(%"class.v8::internal::VariableProxy"* %223, %"class.v8::internal::Variable"* %194, i32 -1) #10
  %224 = getelementptr inbounds %"class.v8::internal::SloppyBlockFunctionStatement", %"class.v8::internal::SloppyBlockFunctionStatement"* %59, i64 0, i32 0, i32 0, i32 1
  %225 = load i32, i32* %224, align 4
  %226 = lshr i32 %225, 6
  %227 = trunc i32 %226 to i8
  %228 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %223, i64 0, i32 0
  %229 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %209, i64 0, i32 0
  %230 = tail call %"class.v8::internal::Assignment"* @_ZN2v88internal14AstNodeFactory13NewAssignmentENS0_5Token5ValueEPNS0_10ExpressionES5_i(%"class.v8::internal::AstNodeFactory"* nonnull %1, i8 zeroext %227, %"class.v8::internal::Expression"* %228, %"class.v8::internal::Expression"* %229, i32 %175)
  %231 = getelementptr inbounds %"class.v8::internal::Assignment", %"class.v8::internal::Assignment"* %230, i64 0, i32 0, i32 0, i32 1
  %232 = load i32, i32* %231, align 4
  %233 = or i32 %232, 16384
  store i32 %233, i32* %231, align 4
  %234 = ptrtoint %"class.v8::internal::Assignment"* %230 to i64
  %235 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %236 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %235, i64 0, i32 2
  %237 = load i64, i64* %236, align 8
  %238 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %235, i64 0, i32 3
  %239 = load i64, i64* %238, align 8
  %240 = sub i64 %239, %237
  %241 = icmp ult i64 %240, 16
  br i1 %241, label %242, label %244, !prof !2

242:                                              ; preds = %221
  %243 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %235, i64 16) #10
  br label %246

244:                                              ; preds = %221
  %245 = add i64 %237, 16
  store i64 %245, i64* %236, align 8
  br label %246

246:                                              ; preds = %242, %244
  %247 = phi i64 [ %243, %242 ], [ %237, %244 ]
  %248 = inttoptr i64 %247 to %"class.v8::internal::ExpressionStatement"*
  %249 = getelementptr inbounds %"class.v8::internal::ExpressionStatement", %"class.v8::internal::ExpressionStatement"* %248, i64 0, i32 0, i32 0, i32 0
  store i32 %175, i32* %249, align 4
  %250 = getelementptr inbounds %"class.v8::internal::ExpressionStatement", %"class.v8::internal::ExpressionStatement"* %248, i64 0, i32 0, i32 0, i32 1
  store i32 9, i32* %250, align 4
  %251 = getelementptr inbounds %"class.v8::internal::ExpressionStatement", %"class.v8::internal::ExpressionStatement"* %248, i64 0, i32 1
  %252 = bitcast %"class.v8::internal::Expression"** %251 to i64*
  store i64 %234, i64* %252, align 8
  %253 = getelementptr inbounds %"class.v8::internal::ExpressionStatement", %"class.v8::internal::ExpressionStatement"* %248, i64 0, i32 0
  %254 = getelementptr inbounds %"class.v8::internal::SloppyBlockFunctionStatement", %"class.v8::internal::SloppyBlockFunctionStatement"* %59, i64 0, i32 2
  store %"class.v8::internal::Statement"* %253, %"class.v8::internal::Statement"** %254, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #10
  br label %264

255:                                              ; preds = %172
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #10
  %256 = call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope19DeclareVariableNameEPKNS0_12AstRawStringENS0_12VariableModeEPbNS0_12VariableKindE(%"class.v8::internal::Scope"* %10, %"class.v8::internal::AstRawString"* %64, i8 zeroext 2, i8* nonnull %5, i8 zeroext 0)
  %257 = getelementptr inbounds %"class.v8::internal::SloppyBlockFunctionStatement", %"class.v8::internal::SloppyBlockFunctionStatement"* %59, i64 0, i32 0, i32 0, i32 1
  %258 = load i32, i32* %257, align 4
  %259 = lshr i32 %258, 6
  %260 = trunc i32 %259 to i8
  %261 = icmp eq i8 %260, 17
  br i1 %261, label %262, label %263

262:                                              ; preds = %255
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* %256)
  br label %263

263:                                              ; preds = %262, %255
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #10
  br label %264

264:                                              ; preds = %160, %263, %246, %103
  %265 = load %"class.v8::internal::SloppyBlockFunctionStatement"*, %"class.v8::internal::SloppyBlockFunctionStatement"** %60, align 8
  %266 = getelementptr inbounds %"class.v8::internal::SloppyBlockFunctionStatement", %"class.v8::internal::SloppyBlockFunctionStatement"* %265, i64 0, i32 3
  %267 = icmp eq %"class.v8::internal::SloppyBlockFunctionStatement"** %266, %51
  br i1 %267, label %270, label %268

268:                                              ; preds = %264
  %269 = load %"class.v8::internal::SloppyBlockFunctionStatement"*, %"class.v8::internal::SloppyBlockFunctionStatement"** %266, align 8
  br label %58

270:                                              ; preds = %264, %47, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal5Scope15DeclareVariableEPNS0_11DeclarationEPKNS0_12AstRawStringEiNS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagEPbSA_SA_(%"class.v8::internal::Scope"*, %"class.v8::internal::Declaration"*, %"class.v8::internal::AstRawString"*, i32, i8 zeroext, i8 zeroext, i8 zeroext, i8* nocapture, i8* nocapture, i8* nocapture) local_unnamed_addr #0 align 2 {
  %11 = alloca i8, align 1
  %12 = icmp eq i8 %4, 2
  br i1 %12, label %13, label %28

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 13
  %15 = load i16, i16* %14, align 1
  %16 = and i16 %15, 256
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %28

18:                                               ; preds = %13, %18
  %19 = phi %"class.v8::internal::Scope"* [ %21, %18 ], [ %0, %13 ]
  %20 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %19, i64 0, i32 0
  %21 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %21, i64 0, i32 13
  %23 = load i16, i16* %22, align 1
  %24 = and i16 %23, 256
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %18, label %26

26:                                               ; preds = %18
  %27 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope15DeclareVariableEPNS0_11DeclarationEPKNS0_12AstRawStringEiNS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagEPbSA_SA_(%"class.v8::internal::Scope"* %21, %"class.v8::internal::Declaration"* %1, %"class.v8::internal::AstRawString"* %2, i32 %3, i8 zeroext 2, i8 zeroext %5, i8 zeroext %6, i8* %7, i8* %8, i8* %9)
  br label %132

28:                                               ; preds = %13, %10
  %29 = bitcast %"class.v8::internal::AstRawString"* %2 to i8*
  %30 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %2, i64 0, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = lshr i32 %31, 2
  %33 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = add i32 %34, -1
  %36 = and i32 %35, %32
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %39 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %38, align 8
  %40 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 %37
  %41 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %40, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  %44 = icmp eq i8* %42, %29
  %45 = or i1 %43, %44
  br i1 %45, label %58, label %46

46:                                               ; preds = %28
  %47 = zext i32 %35 to i64
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i64 [ %37, %46 ], [ %51, %48 ]
  %50 = add nuw nsw i64 %49, 1
  %51 = and i64 %50, %47
  %52 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 %51
  %53 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %52, i64 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = icmp eq i8* %54, null
  %56 = icmp eq i8* %54, %29
  %57 = or i1 %55, %56
  br i1 %57, label %58, label %48

58:                                               ; preds = %48, %28
  %59 = phi i8* [ %42, %28 ], [ %54, %48 ]
  %60 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %40, %28 ], [ %52, %48 ]
  %61 = icmp eq i8* %59, null
  %62 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %60, null
  %63 = or i1 %61, %62
  br i1 %63, label %64, label %65

64:                                               ; preds = %58
  store i8 1, i8* %7, align 1
  br label %71

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %60, i64 0, i32 1
  %67 = bitcast i8** %66 to %"class.v8::internal::Variable"**
  %68 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %67, align 8
  %69 = icmp eq %"class.v8::internal::Variable"* %68, null
  %70 = zext i1 %69 to i8
  store i8 %70, i8* %7, align 1
  br i1 %69, label %71, label %113, !prof !4

71:                                               ; preds = %64, %65
  %72 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 12
  %73 = load i8, i8* %72, align 8
  %74 = icmp eq i8 %73, 1
  br i1 %74, label %75, label %91

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 13
  %77 = load i16, i16* %76, align 1
  %78 = and i16 %77, 1
  %79 = icmp eq i16 %78, 0
  %80 = and i1 %12, %79
  br i1 %80, label %81, label %91, !prof !2

81:                                               ; preds = %75
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #10
  %82 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3
  %83 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %83, align 8
  %85 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %82, %"class.v8::internal::Zone"* %84, %"class.v8::internal::Scope"* %0, %"class.v8::internal::AstRawString"* %2, i8 zeroext 4, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8* nonnull %11) #10
  %86 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %85, i64 0, i32 6
  %87 = load i16, i16* %86, align 8
  %88 = and i16 %87, -2945
  %89 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %85, i64 0, i32 4
  store i32 -1, i32* %89, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #10
  %90 = or i16 %88, 2560
  store i16 %90, i16* %86, align 8
  br label %126

91:                                               ; preds = %71, %75
  %92 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3
  %95 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %94, %"class.v8::internal::Zone"* %93, %"class.v8::internal::Scope"* %0, %"class.v8::internal::AstRawString"* %2, i8 zeroext %4, i8 zeroext %5, i8 zeroext %6, i8 zeroext 0, i8 zeroext 0, i8* %7) #10
  %96 = load i8, i8* %7, align 1, !range !5
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %102, label %98

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 4, i32 1
  %100 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %99, align 8
  store %"class.v8::internal::Variable"* %95, %"class.v8::internal::Variable"** %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %95, i64 0, i32 3
  store %"class.v8::internal::Variable"** %101, %"class.v8::internal::Variable"*** %99, align 8
  br label %102

102:                                              ; preds = %98, %91
  %103 = load i8, i8* %72, align 8
  %104 = add i8 %103, -3
  %105 = icmp ult i8 %104, 2
  br i1 %105, label %106, label %126

106:                                              ; preds = %102
  %107 = icmp eq i8 %4, 1
  br i1 %107, label %109, label %108

108:                                              ; preds = %106
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* %95) #10
  br label %109

109:                                              ; preds = %108, %106
  %110 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %95, i64 0, i32 6
  %111 = load i16, i16* %110, align 8
  %112 = or i16 %111, 2048
  store i16 %112, i16* %110, align 8
  br label %126

113:                                              ; preds = %65
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* nonnull %68)
  %114 = icmp ult i8 %4, 2
  %115 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %68, i64 0, i32 6
  %116 = load i16, i16* %115, align 8
  %117 = and i16 %116, 14
  %118 = icmp eq i16 %117, 0
  %119 = or i1 %114, %118
  br i1 %119, label %120, label %126, !prof !6

120:                                              ; preds = %113
  %121 = and i16 %116, 112
  %122 = icmp eq i16 %121, 48
  %123 = icmp eq i8 %5, 3
  %124 = and i1 %123, %122
  %125 = zext i1 %124 to i8
  store i8 %125, i8* %9, align 1
  store i8 %125, i8* %8, align 1
  br label %126

126:                                              ; preds = %113, %109, %102, %120, %81
  %127 = phi %"class.v8::internal::Variable"* [ %85, %81 ], [ %68, %120 ], [ %95, %102 ], [ %95, %109 ], [ %68, %113 ]
  %128 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 6, i32 1
  %129 = load %"class.v8::internal::Declaration"**, %"class.v8::internal::Declaration"*** %128, align 8
  store %"class.v8::internal::Declaration"* %1, %"class.v8::internal::Declaration"** %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::Declaration", %"class.v8::internal::Declaration"* %1, i64 0, i32 2
  store %"class.v8::internal::Declaration"** %130, %"class.v8::internal::Declaration"*** %128, align 8
  %131 = getelementptr inbounds %"class.v8::internal::Declaration", %"class.v8::internal::Declaration"* %1, i64 0, i32 1
  store %"class.v8::internal::Variable"* %127, %"class.v8::internal::Variable"** %131, align 8
  br label %132

132:                                              ; preds = %126, %26
  %133 = phi %"class.v8::internal::Variable"* [ %127, %126 ], [ %27, %26 ]
  ret %"class.v8::internal::Variable"* %133
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::Assignment"* @_ZN2v88internal14AstNodeFactory13NewAssignmentENS0_5Token5ValueEPNS0_10ExpressionES5_i(%"class.v8::internal::AstNodeFactory"*, i8 zeroext, %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"*, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = icmp eq i8 %1, 16
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.v8::internal::AstNodeFactory", %"class.v8::internal::AstNodeFactory"* %0, i64 0, i32 0
  %9 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8, align 8
  br label %28

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %2, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 63
  %14 = icmp eq i32 %13, 52
  br i1 %14, label %15, label %23

15:                                               ; preds = %10
  %16 = or i32 %12, 128
  store i32 %16, i32* %11, align 4
  %17 = and i32 %12, 256
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %2, i64 1
  %21 = bitcast %"class.v8::internal::Expression"* %20 to %"class.v8::internal::Variable"**
  %22 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %21, align 8
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* %22) #10
  br label %23

23:                                               ; preds = %19, %15, %10
  %24 = and i8 %1, -2
  %25 = icmp eq i8 %24, 16
  %26 = getelementptr inbounds %"class.v8::internal::AstNodeFactory", %"class.v8::internal::AstNodeFactory"* %0, i64 0, i32 0
  %27 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %26, align 8
  br i1 %25, label %28, label %43

28:                                               ; preds = %7, %23
  %29 = phi %"class.v8::internal::Zone"* [ %9, %7 ], [ %27, %23 ]
  %30 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %29, i64 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %29, i64 0, i32 3
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %33, %31
  %35 = icmp ult i64 %34, 24
  br i1 %35, label %36, label %38, !prof !2

36:                                               ; preds = %28
  %37 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %29, i64 24) #10
  br label %40

38:                                               ; preds = %28
  %39 = add i64 %31, 24
  store i64 %39, i64* %30, align 8
  br label %40

40:                                               ; preds = %36, %38
  %41 = phi i64 [ %37, %36 ], [ %31, %38 ]
  %42 = inttoptr i64 %41 to %"class.v8::internal::Assignment"*
  tail call void @_ZN2v88internal10AssignmentC1ENS0_7AstNode8NodeTypeENS0_5Token5ValueEPNS0_10ExpressionES7_i(%"class.v8::internal::Assignment"* %42, i8 zeroext 25, i8 zeroext %1, %"class.v8::internal::Expression"* %2, %"class.v8::internal::Expression"* %3, i32 %4) #10
  br label %84

43:                                               ; preds = %23
  %44 = add i8 %1, 16
  %45 = add nsw i32 %4, 1
  %46 = ptrtoint %"class.v8::internal::Expression"* %2 to i64
  %47 = ptrtoint %"class.v8::internal::Expression"* %3 to i64
  %48 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %27, i64 0, i32 2
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %27, i64 0, i32 3
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %51, %49
  %53 = icmp ult i64 %52, 24
  br i1 %53, label %54, label %56, !prof !2

54:                                               ; preds = %43
  %55 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %27, i64 24) #10
  br label %58

56:                                               ; preds = %43
  %57 = add i64 %49, 24
  store i64 %57, i64* %48, align 8
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi i64 [ %55, %54 ], [ %49, %56 ]
  %60 = inttoptr i64 %59 to %"class.v8::internal::BinaryOperation"*
  %61 = getelementptr inbounds %"class.v8::internal::BinaryOperation", %"class.v8::internal::BinaryOperation"* %60, i64 0, i32 0, i32 0, i32 0
  store i32 %45, i32* %61, align 4
  %62 = getelementptr inbounds %"class.v8::internal::BinaryOperation", %"class.v8::internal::BinaryOperation"* %60, i64 0, i32 0, i32 0, i32 1
  %63 = getelementptr inbounds %"class.v8::internal::BinaryOperation", %"class.v8::internal::BinaryOperation"* %60, i64 0, i32 1
  %64 = bitcast %"class.v8::internal::Expression"** %63 to i64*
  store i64 %46, i64* %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::BinaryOperation", %"class.v8::internal::BinaryOperation"* %60, i64 0, i32 2
  %66 = bitcast %"class.v8::internal::Expression"** %65 to i64*
  store i64 %47, i64* %66, align 8
  %67 = zext i8 %44 to i32
  %68 = shl nuw nsw i32 %67, 7
  %69 = or i32 %68, 27
  store i32 %69, i32* %62, align 4
  %70 = load i64, i64* %48, align 8
  %71 = load i64, i64* %50, align 8
  %72 = sub i64 %71, %70
  %73 = icmp ult i64 %72, 32
  br i1 %73, label %74, label %76, !prof !2

74:                                               ; preds = %58
  %75 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %27, i64 32) #10
  br label %78

76:                                               ; preds = %58
  %77 = add i64 %70, 32
  store i64 %77, i64* %48, align 8
  br label %78

78:                                               ; preds = %74, %76
  %79 = phi i64 [ %75, %74 ], [ %70, %76 ]
  %80 = inttoptr i64 %79 to %"class.v8::internal::CompoundAssignment"*
  %81 = getelementptr inbounds %"class.v8::internal::CompoundAssignment", %"class.v8::internal::CompoundAssignment"* %80, i64 0, i32 0
  tail call void @_ZN2v88internal10AssignmentC2ENS0_7AstNode8NodeTypeENS0_5Token5ValueEPNS0_10ExpressionES7_i(%"class.v8::internal::Assignment"* %81, i8 zeroext 34, i8 zeroext %1, %"class.v8::internal::Expression"* %2, %"class.v8::internal::Expression"* %3, i32 %4) #10
  %82 = getelementptr inbounds %"class.v8::internal::CompoundAssignment", %"class.v8::internal::CompoundAssignment"* %80, i64 0, i32 1
  %83 = bitcast %"class.v8::internal::BinaryOperation"** %82 to i64*
  store i64 %59, i64* %83, align 8
  br label %84

84:                                               ; preds = %78, %40
  %85 = phi %"class.v8::internal::Assignment"* [ %42, %40 ], [ %81, %78 ]
  ret %"class.v8::internal::Assignment"* %85
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal5Scope19DeclareVariableNameEPKNS0_12AstRawStringENS0_12VariableModeEPbNS0_12VariableKindE(%"class.v8::internal::Scope"*, %"class.v8::internal::AstRawString"*, i8 zeroext, i8* nocapture, i8 zeroext) local_unnamed_addr #0 align 2 {
  %6 = icmp eq i8 %2, 2
  br i1 %6, label %7, label %12

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 13
  %9 = load i16, i16* %8, align 1
  %10 = and i16 %9, 256
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %56, label %35

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3
  %16 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %15, %"class.v8::internal::Zone"* %14, %"class.v8::internal::Scope"* %0, %"class.v8::internal::AstRawString"* %1, i8 zeroext %2, i8 zeroext %4, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8* %3) #10
  %17 = load i8, i8* %3, align 1, !range !5
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 4, i32 1
  %21 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %20, align 8
  store %"class.v8::internal::Variable"* %16, %"class.v8::internal::Variable"** %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %16, i64 0, i32 3
  store %"class.v8::internal::Variable"** %22, %"class.v8::internal::Variable"*** %20, align 8
  br label %23

23:                                               ; preds = %19, %12
  %24 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 12
  %25 = load i8, i8* %24, align 8
  %26 = add i8 %25, -3
  %27 = icmp ult i8 %26, 2
  br i1 %27, label %28, label %64

28:                                               ; preds = %23
  %29 = icmp eq i8 %2, 1
  br i1 %29, label %31, label %30

30:                                               ; preds = %28
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* %16) #10
  br label %31

31:                                               ; preds = %30, %28
  %32 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %16, i64 0, i32 6
  %33 = load i16, i16* %32, align 8
  %34 = or i16 %33, 2048
  store i16 %34, i16* %32, align 8
  br label %64

35:                                               ; preds = %56, %7
  %36 = phi %"class.v8::internal::Scope"* [ %0, %7 ], [ %59, %56 ]
  %37 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %36, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %36, i64 0, i32 3
  %40 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %39, %"class.v8::internal::Zone"* %38, %"class.v8::internal::Scope"* %36, %"class.v8::internal::AstRawString"* %1, i8 zeroext 2, i8 zeroext %4, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8* %3) #10
  %41 = load i8, i8* %3, align 1, !range !5
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %36, i64 0, i32 4, i32 1
  %45 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %44, align 8
  store %"class.v8::internal::Variable"* %40, %"class.v8::internal::Variable"** %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %40, i64 0, i32 3
  store %"class.v8::internal::Variable"** %46, %"class.v8::internal::Variable"*** %44, align 8
  br label %47

47:                                               ; preds = %43, %35
  %48 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %36, i64 0, i32 12
  %49 = load i8, i8* %48, align 8
  %50 = add i8 %49, -3
  %51 = icmp ult i8 %50, 2
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* %40) #10
  %53 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %40, i64 0, i32 6
  %54 = load i16, i16* %53, align 8
  %55 = or i16 %54, 2048
  store i16 %55, i16* %53, align 8
  br label %64

56:                                               ; preds = %7, %56
  %57 = phi %"class.v8::internal::Scope"* [ %59, %56 ], [ %0, %7 ]
  %58 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %57, i64 0, i32 0
  %59 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %59, i64 0, i32 13
  %61 = load i16, i16* %60, align 1
  %62 = and i16 %61, 256
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %56, label %35

64:                                               ; preds = %52, %47, %31, %23
  %65 = phi i8 [ %2, %23 ], [ %2, %31 ], [ 2, %47 ], [ 2, %52 ]
  %66 = phi %"class.v8::internal::Variable"* [ %16, %23 ], [ %16, %31 ], [ %40, %47 ], [ %40, %52 ]
  %67 = load i8, i8* %3, align 1, !range !5
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %82

69:                                               ; preds = %64
  %70 = icmp ult i8 %65, 2
  %71 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %66, i64 0, i32 6
  %72 = load i16, i16* %71, align 8
  %73 = and i16 %72, 14
  %74 = icmp eq i16 %73, 0
  %75 = or i1 %70, %74
  br i1 %75, label %76, label %81

76:                                               ; preds = %69
  %77 = and i16 %72, 112
  %78 = icmp eq i16 %77, 48
  %79 = icmp eq i8 %4, 3
  %80 = and i1 %79, %78
  br i1 %80, label %81, label %86

81:                                               ; preds = %69, %76
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* %66)
  br label %82

82:                                               ; preds = %64, %81
  %83 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %66, i64 0, i32 6
  %84 = load i16, i16* %83, align 8
  %85 = or i16 %84, 2048
  store i16 %85, i16* %83, align 8
  br label %86

86:                                               ; preds = %82, %76
  %87 = phi %"class.v8::internal::Variable"* [ %66, %82 ], [ null, %76 ]
  ret %"class.v8::internal::Variable"* %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 15
  %5 = icmp eq i16 %4, 1
  br i1 %5, label %33, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %8, i64 0, i32 3
  %10 = load i8, i8* %9, align 4, !range !5
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %8, i64 0, i32 1, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = sdiv i32 %14, 2
  %16 = select i1 %11, i32 %15, i32 %14
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %6
  %19 = tail call zeroext i16 @_ZNK2v88internal12AstRawString14FirstCharacterEv(%"class.v8::internal::AstRawString"* %8) #10
  %20 = icmp eq i16 %19, 35
  br i1 %20, label %33, label %21

21:                                               ; preds = %6, %18
  %22 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %0, i64 0, i32 2
  %23 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %22, align 8
  %24 = icmp eq %"class.v8::internal::Variable"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = load i16, i16* %2, align 8
  %27 = and i16 %26, 16384
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* nonnull %23)
  br label %30

30:                                               ; preds = %21, %25, %29
  %31 = load i16, i16* %2, align 8
  %32 = or i16 %31, 16384
  store i16 %32, i16* %2, align 8
  br label %33

33:                                               ; preds = %18, %1, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal16DeclarationScope7AnalyzeEPNS0_9ParseInfoE(%"class.v8::internal::ParseInfo"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %3 = alloca %"class.v8::internal::AstNodeFactory", align 8
  %4 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 13
  %6 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 40, i1 false) #10
  %8 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1290", %"struct.std::__1::atomic.1290"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  %10 = icmp eq %"class.v8::internal::RuntimeCallStats"* %6, null
  %11 = or i1 %10, %9
  br i1 %11, label %18, label %12, !prof !4

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %2, i64 0, i32 0
  store %"class.v8::internal::RuntimeCallStats"* %6, %"class.v8::internal::RuntimeCallStats"** %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::RuntimeCallStats"* %6, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 1
  %17 = select i1 %16, i32 1245, i32 1244
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* nonnull %6, %"class.v8::internal::RuntimeCallTimer"* %7, i32 %17) #10
  br label %18

18:                                               ; preds = %1, %12
  %19 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 15
  %20 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %20, i64 0, i32 8
  %22 = load %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::DeclarationScope"** %21, align 8
  %23 = bitcast %"class.v8::internal::DeclarationScope"* %22 to %"class.v8::internal::Scope"*
  %24 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %22, i64 0, i32 0, i32 12
  %25 = load i8, i8* %24, align 8
  %26 = icmp eq i8 %25, 1
  br i1 %26, label %27, label %86

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %22, i64 0, i32 0, i32 13
  %29 = load i16, i16* %28, align 1
  %30 = and i16 %29, 1
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %32, label %86

32:                                               ; preds = %27
  %33 = bitcast %"class.v8::internal::AstNodeFactory"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %35 = bitcast %"class.v8::internal::AstValueFactory"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::AstNodeFactory", %"class.v8::internal::AstNodeFactory"* %3, i64 0, i32 0
  store %"class.v8::internal::Zone"* %38, %"class.v8::internal::Zone"** %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::AstNodeFactory", %"class.v8::internal::AstNodeFactory"* %3, i64 0, i32 1
  %41 = bitcast %"class.v8::internal::AstValueFactory"** %40 to i64*
  store i64 %36, i64* %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::AstNodeFactory", %"class.v8::internal::AstNodeFactory"* %3, i64 0, i32 2
  %43 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %38, i64 0, i32 2
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %38, i64 0, i32 3
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %46, %44
  %48 = icmp ult i64 %47, 8
  br i1 %48, label %49, label %51, !prof !2

49:                                               ; preds = %32
  %50 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %38, i64 8) #10
  br label %53

51:                                               ; preds = %32
  %52 = add i64 %44, 8
  store i64 %52, i64* %43, align 8
  br label %53

53:                                               ; preds = %51, %49
  %54 = phi i64 [ %50, %49 ], [ %44, %51 ]
  %55 = inttoptr i64 %54 to %"class.v8::internal::EmptyStatement"*
  %56 = getelementptr inbounds %"class.v8::internal::EmptyStatement", %"class.v8::internal::EmptyStatement"* %55, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %56, align 4
  %57 = getelementptr inbounds %"class.v8::internal::EmptyStatement", %"class.v8::internal::EmptyStatement"* %55, i64 0, i32 0, i32 0, i32 1
  store i32 10, i32* %57, align 4
  store %"class.v8::internal::EmptyStatement"* %55, %"class.v8::internal::EmptyStatement"** %42, align 8
  %58 = getelementptr inbounds %"class.v8::internal::AstNodeFactory", %"class.v8::internal::AstNodeFactory"* %3, i64 0, i32 3
  %59 = load i64, i64* %43, align 8
  %60 = load i64, i64* %45, align 8
  %61 = sub i64 %60, %59
  %62 = icmp ult i64 %61, 8
  br i1 %62, label %63, label %65, !prof !2

63:                                               ; preds = %53
  %64 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %38, i64 8) #10
  br label %67

65:                                               ; preds = %53
  %66 = add i64 %59, 8
  store i64 %66, i64* %43, align 8
  br label %67

67:                                               ; preds = %65, %63
  %68 = phi i64 [ %64, %63 ], [ %59, %65 ]
  %69 = inttoptr i64 %68 to %"class.v8::internal::ThisExpression"*
  %70 = getelementptr inbounds %"class.v8::internal::ThisExpression", %"class.v8::internal::ThisExpression"* %69, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %70, align 4
  %71 = getelementptr inbounds %"class.v8::internal::ThisExpression", %"class.v8::internal::ThisExpression"* %69, i64 0, i32 0, i32 0, i32 1
  store i32 49, i32* %71, align 4
  store %"class.v8::internal::ThisExpression"* %69, %"class.v8::internal::ThisExpression"** %58, align 8
  %72 = getelementptr inbounds %"class.v8::internal::AstNodeFactory", %"class.v8::internal::AstNodeFactory"* %3, i64 0, i32 4
  %73 = load i64, i64* %43, align 8
  %74 = load i64, i64* %45, align 8
  %75 = sub i64 %74, %73
  %76 = icmp ult i64 %75, 8
  br i1 %76, label %77, label %79, !prof !2

77:                                               ; preds = %67
  %78 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %38, i64 8) #10
  br label %81

79:                                               ; preds = %67
  %80 = add i64 %73, 8
  store i64 %80, i64* %43, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi i64 [ %78, %77 ], [ %73, %79 ]
  %83 = inttoptr i64 %82 to %"class.v8::internal::FailureExpression"*
  %84 = getelementptr inbounds %"class.v8::internal::FailureExpression", %"class.v8::internal::FailureExpression"* %83, i64 0, i32 0, i32 0, i32 0
  store i32 -1, i32* %84, align 4
  %85 = getelementptr inbounds %"class.v8::internal::FailureExpression", %"class.v8::internal::FailureExpression"* %83, i64 0, i32 0, i32 0, i32 1
  store i32 55, i32* %85, align 4
  store %"class.v8::internal::FailureExpression"* %83, %"class.v8::internal::FailureExpression"** %72, align 8
  call void @_ZN2v88internal16DeclarationScope25HoistSloppyBlockFunctionsEPNS0_14AstNodeFactoryE(%"class.v8::internal::DeclarationScope"* %22, %"class.v8::internal::AstNodeFactory"* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %33) #10
  br label %86

86:                                               ; preds = %81, %27, %18
  %87 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %22, i64 0, i32 1
  %88 = load i16, i16* %87, align 1
  %89 = lshr i16 %88, 1
  %90 = and i16 %89, 64
  %91 = and i16 %88, -65
  %92 = or i16 %90, %91
  %93 = xor i16 %92, 64
  store i16 %93, i16* %87, align 1
  %94 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %22, i64 0, i32 0, i32 13
  %95 = load i16, i16* %94, align 1
  %96 = and i16 %95, 1024
  %97 = icmp eq i16 %96, 0
  br i1 %97, label %109, label %98

98:                                               ; preds = %86
  %99 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %100 = load %"class.v8::internal::ConsumedPreparseData"*, %"class.v8::internal::ConsumedPreparseData"** %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %102 = load %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::AstValueFactory"** %101, align 8
  %103 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %104 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %103, align 8
  %105 = bitcast %"class.v8::internal::ConsumedPreparseData"* %100 to void (%"class.v8::internal::ConsumedPreparseData"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::Zone"*)***
  %106 = load void (%"class.v8::internal::ConsumedPreparseData"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::Zone"*)**, void (%"class.v8::internal::ConsumedPreparseData"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::Zone"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.v8::internal::ConsumedPreparseData"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::Zone"*)*, void (%"class.v8::internal::ConsumedPreparseData"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::Zone"*)** %106, i64 3
  %108 = load void (%"class.v8::internal::ConsumedPreparseData"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::Zone"*)*, void (%"class.v8::internal::ConsumedPreparseData"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::Zone"*)** %107, align 8
  call void %108(%"class.v8::internal::ConsumedPreparseData"* %100, %"class.v8::internal::DeclarationScope"* %22, %"class.v8::internal::AstValueFactory"* %102, %"class.v8::internal::Zone"* %104) #10
  br label %109

109:                                              ; preds = %86, %98
  %110 = call zeroext i1 @_ZN2v88internal16DeclarationScope17AllocateVariablesEPNS0_9ParseInfoE(%"class.v8::internal::DeclarationScope"* %22, %"class.v8::internal::ParseInfo"* %0)
  br i1 %110, label %111, label %160

111:                                              ; preds = %109
  %112 = load i8, i8* %24, align 8
  %113 = icmp eq i8 %112, 4
  br i1 %113, label %121, label %114

114:                                              ; preds = %111, %114
  %115 = phi %"class.v8::internal::Scope"* [ %117, %114 ], [ %23, %111 ]
  %116 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %115, i64 0, i32 0
  %117 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %116, align 8
  %118 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %117, i64 0, i32 12
  %119 = load i8, i8* %118, align 8
  %120 = icmp eq i8 %119, 4
  br i1 %120, label %121, label %114

121:                                              ; preds = %114, %111
  %122 = phi %"class.v8::internal::Scope"* [ %23, %111 ], [ %117, %114 ]
  %123 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %122, i64 0, i32 13
  %124 = load i16, i16* %123, align 1
  %125 = and i16 %124, 2048
  %126 = icmp eq i16 %125, 0
  br i1 %126, label %160, label %127

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %122, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %129 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %128, align 8
  %130 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %129, i64 -1
  %131 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %122, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %132 = load i32, i32* %131, align 8
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %129, i64 %133
  br label %135

135:                                              ; preds = %139, %127
  %136 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %130, %127 ], [ %137, %139 ]
  %137 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %136, i64 1
  %138 = icmp ult %"struct.v8::base::TemplateHashMapEntry"* %137, %134
  br i1 %138, label %139, label %160

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %137, i64 0, i32 0
  %141 = load i8*, i8** %140, align 8
  %142 = icmp eq i8* %141, null
  br i1 %142, label %135, label %143

143:                                              ; preds = %156, %139
  %144 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %137, %139 ], [ %154, %156 ]
  %145 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %144, i64 0, i32 1
  %146 = bitcast i8** %145 to %"class.v8::internal::Variable"**
  %147 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %146, align 8
  call void @_ZN2v88internal8Variable22RewriteLocationForReplEv(%"class.v8::internal::Variable"* %147) #10
  %148 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %128, align 8
  %149 = load i32, i32* %131, align 8
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %148, i64 %150
  br label %152

152:                                              ; preds = %156, %143
  %153 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %144, %143 ], [ %154, %156 ]
  %154 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %153, i64 1
  %155 = icmp ult %"struct.v8::base::TemplateHashMapEntry"* %154, %151
  br i1 %155, label %156, label %160

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %154, i64 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = icmp eq i8* %158, null
  br i1 %159, label %152, label %143

160:                                              ; preds = %135, %152, %121, %109
  %161 = phi i1 [ false, %109 ], [ true, %121 ], [ true, %152 ], [ true, %135 ]
  %162 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %2, i64 0, i32 0
  %163 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %162, align 8
  %164 = icmp eq %"class.v8::internal::RuntimeCallStats"* %163, null
  br i1 %164, label %166, label %165, !prof !4

165:                                              ; preds = %160
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %163, %"class.v8::internal::RuntimeCallTimer"* %7) #10
  br label %166

166:                                              ; preds = %160, %165
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #10
  ret i1 %161
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal16DeclarationScope17AllocateVariablesEPNS0_9ParseInfoE(%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::ParseInfo"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::internal::DeclarationScope"* %0 to %"class.v8::internal::Scope"*
  %4 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 12
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 3
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.v8::internal::DeclarationScope"* %0 to %"class.v8::internal::ModuleScope"*
  tail call void @_ZN2v88internal11ModuleScope23AllocateModuleVariablesEv(%"class.v8::internal::ModuleScope"* %8)
  %9 = load i8, i8* %4, align 8
  br label %10

10:                                               ; preds = %7, %2
  %11 = phi i8 [ %9, %7 ], [ %5, %2 ]
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 4
  %15 = bitcast i32* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %38, label %19

19:                                               ; preds = %13, %10
  %20 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 0
  %21 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %20, align 8
  %22 = icmp eq %"class.v8::internal::Scope"* %21, null
  br i1 %22, label %44, label %23

23:                                               ; preds = %19, %34
  %24 = phi %"class.v8::internal::Scope"* [ %36, %34 ], [ %21, %19 ]
  %25 = phi %"class.v8::internal::Scope"* [ %24, %34 ], [ %3, %19 ]
  %26 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %24, i64 0, i32 12
  %27 = load i8, i8* %26, align 8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %25, i64 0, i32 13
  %31 = load i16, i16* %30, align 1
  %32 = and i16 %31, 512
  %33 = icmp eq i16 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %29, %23
  %35 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %24, i64 0, i32 0
  %36 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %35, align 8
  %37 = icmp eq %"class.v8::internal::Scope"* %36, null
  br i1 %37, label %44, label %23

38:                                               ; preds = %13
  %39 = icmp eq %"class.v8::internal::DeclarationScope"* %0, null
  br i1 %39, label %44, label %40

40:                                               ; preds = %29, %38
  %41 = phi %"class.v8::internal::Scope"* [ %3, %38 ], [ %24, %29 ]
  %42 = bitcast %"class.v8::internal::Scope"* %41 to %"class.v8::internal::ClassScope"*
  %43 = tail call zeroext i1 @_ZN2v88internal10ClassScope19ResolvePrivateNamesEPNS0_9ParseInfoE(%"class.v8::internal::ClassScope"* %42, %"class.v8::internal::ParseInfo"* %1)
  br i1 %43, label %44, label %53

44:                                               ; preds = %34, %19, %40, %38
  %45 = tail call %"class.v8::internal::DeclarationScope"* @_ZNK2v88internal9ParseInfo5scopeEv(%"class.v8::internal::ParseInfo"* %1) #10
  %46 = bitcast %"class.v8::internal::DeclarationScope"* %45 to %"class.v8::internal::Scope"*
  %47 = tail call zeroext i1 @_ZN2v88internal5Scope27ResolveVariablesRecursivelyEPS1_(%"class.v8::internal::Scope"* %3, %"class.v8::internal::Scope"* %46)
  %48 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 1
  %49 = load i16, i16* %48, align 1
  %50 = trunc i16 %49 to i8
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %44
  tail call void @_ZN2v88internal5Scope28AllocateVariablesRecursivelyEv(%"class.v8::internal::Scope"* %3)
  br label %53

53:                                               ; preds = %44, %52, %40
  %54 = phi i1 [ false, %40 ], [ true, %52 ], [ true, %44 ]
  ret i1 %54
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope14GetScriptScopeEv(%"class.v8::internal::Scope"* readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 12
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 4
  br i1 %4, label %12, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"class.v8::internal::Scope"* [ %8, %5 ], [ %0, %1 ]
  %7 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %6, i64 0, i32 0
  %8 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %8, i64 0, i32 12
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 4
  br i1 %11, label %12, label %5

12:                                               ; preds = %5, %1
  %13 = phi %"class.v8::internal::Scope"* [ %0, %1 ], [ %8, %5 ]
  %14 = bitcast %"class.v8::internal::Scope"* %13 to %"class.v8::internal::DeclarationScope"*
  ret %"class.v8::internal::DeclarationScope"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16DeclarationScope26RewriteReplGlobalVariablesEv(%"class.v8::internal::DeclarationScope"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 13
  %3 = load i16, i16* %2, align 1
  %4 = and i16 %3, 2048
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %43, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %8 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %7, align 8
  %9 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %8, i64 -1
  %10 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %8, i64 %12
  br label %14

14:                                               ; preds = %18, %6
  %15 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %9, %6 ], [ %16, %18 ]
  %16 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %15, i64 1
  %17 = icmp ult %"struct.v8::base::TemplateHashMapEntry"* %16, %13
  br i1 %17, label %18, label %43

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %16, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %14, label %22

22:                                               ; preds = %18
  %23 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %16, null
  br i1 %23, label %43, label %24

24:                                               ; preds = %22, %41
  %25 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %35, %41 ], [ %16, %22 ]
  %26 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %25, i64 0, i32 1
  %27 = bitcast i8** %26 to %"class.v8::internal::Variable"**
  %28 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %27, align 8
  tail call void @_ZN2v88internal8Variable22RewriteLocationForReplEv(%"class.v8::internal::Variable"* %28) #10
  %29 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %7, align 8
  %30 = load i32, i32* %10, align 8
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %29, i64 %31
  br label %33

33:                                               ; preds = %37, %24
  %34 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %25, %24 ], [ %35, %37 ]
  %35 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %34, i64 1
  %36 = icmp ult %"struct.v8::base::TemplateHashMapEntry"* %35, %32
  br i1 %36, label %37, label %43

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %35, i64 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %33, label %41

41:                                               ; preds = %37
  %42 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %35, null
  br i1 %42, label %43, label %24

43:                                               ; preds = %14, %41, %33, %22, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16DeclarationScope16DeclareArgumentsEPNS0_15AstValueFactoryE(%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstValueFactory"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #10
  %4 = bitcast %"class.v8::internal::DeclarationScope"* %0 to %"class.v8::internal::Scope"*
  %5 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %1, i64 0, i32 3
  %8 = load %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstStringConstants"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %8, i64 0, i32 5
  %10 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3
  %12 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %11, %"class.v8::internal::Zone"* %6, %"class.v8::internal::Scope"* %4, %"class.v8::internal::AstRawString"* %10, i8 zeroext 2, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8* nonnull %3) #10
  %13 = load i8, i8* %3, align 1, !range !5
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 4, i32 1
  %17 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %16, align 8
  store %"class.v8::internal::Variable"* %12, %"class.v8::internal::Variable"** %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %12, i64 0, i32 3
  store %"class.v8::internal::Variable"** %18, %"class.v8::internal::Variable"*** %16, align 8
  %19 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 11
  store %"class.v8::internal::Variable"* %12, %"class.v8::internal::Variable"** %19, align 8
  br label %27

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 11
  store %"class.v8::internal::Variable"* %12, %"class.v8::internal::Variable"** %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %12, i64 0, i32 6
  %23 = load i16, i16* %22, align 8
  %24 = and i16 %23, 14
  %25 = icmp eq i16 %24, 0
  %26 = select i1 %25, %"class.v8::internal::Variable"* null, %"class.v8::internal::Variable"* %12
  store %"class.v8::internal::Variable"* %26, %"class.v8::internal::Variable"** %21, align 8
  br label %27

27:                                               ; preds = %20, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16DeclarationScope31DeclareDefaultFunctionVariablesEPNS0_15AstValueFactoryE(%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstValueFactory"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 1
  %6 = add i8 %5, -5
  %7 = icmp ult i8 %6, 2
  %8 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8, align 8
  %10 = ptrtoint %"class.v8::internal::DeclarationScope"* %0 to i64
  %11 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %1, i64 0, i32 3
  %12 = load %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstStringConstants"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %12, i64 0, i32 52
  %14 = bitcast %"class.v8::internal::AstRawString"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = xor i1 %7, true
  %17 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9, i64 0, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %18
  %22 = icmp ult i64 %21, 48
  br i1 %22, label %23, label %25, !prof !2

23:                                               ; preds = %2
  %24 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %9, i64 48) #10
  br label %27

25:                                               ; preds = %2
  %26 = add i64 %18, 48
  store i64 %26, i64* %17, align 8
  br label %27

27:                                               ; preds = %23, %25
  %28 = phi i64 [ %24, %23 ], [ %18, %25 ]
  %29 = inttoptr i64 %28 to %"class.v8::internal::Variable"*
  %30 = inttoptr i64 %28 to i64*
  store i64 %10, i64* %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %29, i64 0, i32 1
  %32 = bitcast %"class.v8::internal::AstRawString"** %31 to i64*
  store i64 %15, i64* %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %29, i64 0, i32 2
  %34 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %29, i64 0, i32 4
  %35 = bitcast %"class.v8::internal::Variable"** %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #10
  store i32 -1, i32* %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %29, i64 0, i32 5
  store i32 -1, i32* %36, align 4
  %37 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %29, i64 0, i32 6
  %38 = zext i1 %16 to i16
  %39 = shl nuw nsw i16 %38, 12
  %40 = select i1 %7, i16 33, i16 34
  %41 = or i16 %39, %40
  store i16 %41, i16* %37, align 8
  %42 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 8
  store %"class.v8::internal::Variable"* %29, %"class.v8::internal::Variable"** %42, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #10
  %43 = bitcast %"class.v8::internal::DeclarationScope"* %0 to %"class.v8::internal::Scope"*
  %44 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8, align 8
  %45 = load %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstStringConstants"** %11, align 8
  %46 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %45, i64 0, i32 38
  %47 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3
  %49 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %48, %"class.v8::internal::Zone"* %44, %"class.v8::internal::Scope"* %43, %"class.v8::internal::AstRawString"* %47, i8 zeroext 1, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8* nonnull %3) #10
  %50 = load i8, i8* %3, align 1, !range !5
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %27
  %53 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 4, i32 1
  %54 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %53, align 8
  store %"class.v8::internal::Variable"* %49, %"class.v8::internal::Variable"** %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %49, i64 0, i32 3
  store %"class.v8::internal::Variable"** %55, %"class.v8::internal::Variable"*** %53, align 8
  br label %56

56:                                               ; preds = %27, %52
  %57 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 10
  store %"class.v8::internal::Variable"* %49, %"class.v8::internal::Variable"** %57, align 8
  %58 = load i8, i8* %4, align 1
  switch i8 %58, label %94 [
    i8 25, label %59
    i8 24, label %59
    i8 23, label %59
    i8 22, label %59
    i8 21, label %59
    i8 20, label %59
    i8 17, label %59
    i8 16, label %59
    i8 15, label %59
    i8 14, label %59
    i8 10, label %59
    i8 9, label %59
    i8 8, label %59
    i8 7, label %59
    i8 6, label %59
    i8 5, label %59
    i8 4, label %59
    i8 3, label %59
  ]

59:                                               ; preds = %56, %56, %56, %56, %56, %56, %56, %56, %56, %56, %56, %56, %56, %56, %56, %56, %56, %56
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8, align 8
  %61 = load %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstStringConstants"** %11, align 8
  %62 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %61, i64 0, i32 53
  %63 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %62, align 8
  %64 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %48, %"class.v8::internal::Zone"* %60, %"class.v8::internal::Scope"* %43, %"class.v8::internal::AstRawString"* %63, i8 zeroext 1, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8* nonnull %3) #10
  %65 = load i8, i8* %3, align 1, !range !5
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %71, label %67

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 4, i32 1
  %69 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %68, align 8
  store %"class.v8::internal::Variable"* %64, %"class.v8::internal::Variable"** %69, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %64, i64 0, i32 3
  store %"class.v8::internal::Variable"** %70, %"class.v8::internal::Variable"*** %68, align 8
  br label %71

71:                                               ; preds = %59, %67
  %72 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 13
  %73 = load %"struct.v8::internal::DeclarationScope::RareData"*, %"struct.v8::internal::DeclarationScope::RareData"** %72, align 8
  %74 = icmp eq %"struct.v8::internal::DeclarationScope::RareData"* %73, null
  br i1 %74, label %75, label %91

75:                                               ; preds = %71
  %76 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %76, i64 0, i32 2
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %76, i64 0, i32 3
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %80, %78
  %82 = icmp ult i64 %81, 16
  br i1 %82, label %83, label %85, !prof !2

83:                                               ; preds = %75
  %84 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %76, i64 16) #10
  br label %87

85:                                               ; preds = %75
  %86 = add i64 %78, 16
  store i64 %86, i64* %77, align 8
  br label %87

87:                                               ; preds = %85, %83
  %88 = phi i64 [ %84, %83 ], [ %78, %85 ]
  %89 = inttoptr i64 %88 to i8*
  %90 = inttoptr i64 %88 to %"struct.v8::internal::DeclarationScope::RareData"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 16, i1 false) #10
  store %"struct.v8::internal::DeclarationScope::RareData"* %90, %"struct.v8::internal::DeclarationScope::RareData"** %72, align 8
  br label %91

91:                                               ; preds = %71, %87
  %92 = phi %"struct.v8::internal::DeclarationScope::RareData"* [ %90, %87 ], [ %73, %71 ]
  %93 = getelementptr inbounds %"struct.v8::internal::DeclarationScope::RareData", %"struct.v8::internal::DeclarationScope::RareData"* %92, i64 0, i32 0
  store %"class.v8::internal::Variable"* %64, %"class.v8::internal::Variable"** %93, align 8
  br label %94

94:                                               ; preds = %56, %91
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal16DeclarationScope18DeclareFunctionVarEPKNS0_12AstRawStringEPNS0_5ScopeE(%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::Scope"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = ptrtoint %"class.v8::internal::AstRawString"* %1 to i64
  %6 = icmp eq %"class.v8::internal::Scope"* %2, null
  %7 = bitcast %"class.v8::internal::DeclarationScope"* %0 to %"class.v8::internal::Scope"*
  %8 = select i1 %6, %"class.v8::internal::Scope"* %7, %"class.v8::internal::Scope"* %2
  %9 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 13
  %10 = load i16, i16* %9, align 1
  %11 = shl i16 %10, 6
  %12 = and i16 %11, 64
  %13 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %13, align 8
  %15 = ptrtoint %"class.v8::internal::DeclarationScope"* %0 to i64
  %16 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %17
  %21 = icmp ult i64 %20, 48
  br i1 %21, label %22, label %24, !prof !2

22:                                               ; preds = %3
  %23 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %14, i64 48) #10
  br label %26

24:                                               ; preds = %3
  %25 = add i64 %17, 48
  store i64 %25, i64* %16, align 8
  br label %26

26:                                               ; preds = %22, %24
  %27 = phi i64 [ %23, %22 ], [ %17, %24 ]
  %28 = inttoptr i64 %27 to %"class.v8::internal::Variable"*
  %29 = inttoptr i64 %27 to i64*
  store i64 %15, i64* %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %28, i64 0, i32 1
  %31 = bitcast %"class.v8::internal::AstRawString"** %30 to i64*
  store i64 %5, i64* %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %28, i64 0, i32 2
  %33 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %28, i64 0, i32 4
  %34 = bitcast %"class.v8::internal::Variable"** %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #10
  store i32 -1, i32* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %28, i64 0, i32 5
  store i32 -1, i32* %35, align 4
  %36 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %28, i64 0, i32 6
  %37 = xor i16 %12, 4161
  store i16 %37, i16* %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 9
  store %"class.v8::internal::Variable"* %28, %"class.v8::internal::Variable"** %38, align 8
  %39 = load i16, i16* %9, align 1
  %40 = and i16 %39, 4
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %52, label %42

42:                                               ; preds = %26
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  %43 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %8, i64 0, i32 3
  %44 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %8, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %44, align 8
  %46 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %43, %"class.v8::internal::Zone"* %45, %"class.v8::internal::Scope"* %8, %"class.v8::internal::AstRawString"* %1, i8 zeroext 4, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8* nonnull %4) #10
  %47 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %46, i64 0, i32 6
  %48 = load i16, i16* %47, align 8
  %49 = and i16 %48, -897
  %50 = or i16 %49, 512
  store i16 %50, i16* %47, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %46, i64 0, i32 4
  store i32 -1, i32* %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  br label %54

52:                                               ; preds = %26
  %53 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %8, i64 0, i32 3
  tail call void @_ZN2v88internal11VariableMap3AddEPNS0_8VariableE(%"class.v8::internal::VariableMap"* %53, %"class.v8::internal::Variable"* %28)
  br label %54

54:                                               ; preds = %52, %42
  %55 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %38, align 8
  ret %"class.v8::internal::Variable"* %55
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal16DeclarationScope25DeclareGeneratorObjectVarEPKNS0_12AstRawStringE(%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstRawString"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::internal::DeclarationScope"* %0 to %"class.v8::internal::Scope"*
  br label %4

4:                                                ; preds = %13, %2
  %5 = phi %"class.v8::internal::Scope"* [ %3, %2 ], [ %15, %13 ]
  %6 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %5, i64 0, i32 13
  %7 = load i16, i16* %6, align 1
  %8 = and i16 %7, 256
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %5, i64 0, i32 12
  %12 = load i8, i8* %11, align 8
  switch i8 %12, label %16 [
    i8 6, label %13
    i8 0, label %13
  ]

13:                                               ; preds = %10, %10, %4
  %14 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %5, i64 0, i32 0
  %15 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %14, align 8
  br label %4

16:                                               ; preds = %10
  %17 = ptrtoint %"class.v8::internal::AstRawString"* %1 to i64
  %18 = ptrtoint %"class.v8::internal::Scope"* %5 to i64
  %19 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %24, %22
  %26 = icmp ult i64 %25, 48
  br i1 %26, label %27, label %29, !prof !2

27:                                               ; preds = %16
  %28 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %20, i64 48) #10
  br label %31

29:                                               ; preds = %16
  %30 = add i64 %22, 48
  store i64 %30, i64* %21, align 8
  br label %31

31:                                               ; preds = %27, %29
  %32 = phi i64 [ %28, %27 ], [ %22, %29 ]
  %33 = inttoptr i64 %32 to %"class.v8::internal::Variable"*
  %34 = inttoptr i64 %32 to i64*
  store i64 %18, i64* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %33, i64 0, i32 1
  %36 = bitcast %"class.v8::internal::AstRawString"** %35 to i64*
  store i64 %17, i64* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %33, i64 0, i32 2
  %38 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %33, i64 0, i32 4
  %39 = bitcast %"class.v8::internal::Variable"** %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #10
  store i32 -1, i32* %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %33, i64 0, i32 5
  store i32 -1, i32* %40, align 4
  %41 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %33, i64 0, i32 6
  store i16 4099, i16* %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %5, i64 0, i32 4, i32 1
  %43 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %42, align 8
  store %"class.v8::internal::Variable"* %33, %"class.v8::internal::Variable"** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %33, i64 0, i32 3
  store %"class.v8::internal::Variable"** %44, %"class.v8::internal::Variable"*** %42, align 8
  %45 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 13
  %46 = load %"struct.v8::internal::DeclarationScope::RareData"*, %"struct.v8::internal::DeclarationScope::RareData"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::DeclarationScope::RareData"* %46, null
  br i1 %47, label %48, label %64

48:                                               ; preds = %31
  %49 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %19, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %49, i64 0, i32 2
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %49, i64 0, i32 3
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %53, %51
  %55 = icmp ult i64 %54, 16
  br i1 %55, label %56, label %58, !prof !2

56:                                               ; preds = %48
  %57 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %49, i64 16) #10
  br label %60

58:                                               ; preds = %48
  %59 = add i64 %51, 16
  store i64 %59, i64* %50, align 8
  br label %60

60:                                               ; preds = %58, %56
  %61 = phi i64 [ %57, %56 ], [ %51, %58 ]
  %62 = inttoptr i64 %61 to i8*
  %63 = inttoptr i64 %61 to %"struct.v8::internal::DeclarationScope::RareData"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 16, i1 false) #10
  store %"struct.v8::internal::DeclarationScope::RareData"* %63, %"struct.v8::internal::DeclarationScope::RareData"** %45, align 8
  br label %64

64:                                               ; preds = %31, %60
  %65 = phi %"struct.v8::internal::DeclarationScope::RareData"* [ %63, %60 ], [ %46, %31 ]
  %66 = getelementptr inbounds %"struct.v8::internal::DeclarationScope::RareData", %"struct.v8::internal::DeclarationScope::RareData"* %65, i64 0, i32 1
  store %"class.v8::internal::Variable"* %33, %"class.v8::internal::Variable"** %66, align 8
  %67 = load i16, i16* %41, align 8
  %68 = or i16 %67, 2048
  store i16 %68, i16* %41, align 8
  ret %"class.v8::internal::Variable"* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal5Scope12NewTemporaryEPKNS0_12AstRawStringENS0_17MaybeAssignedFlagE(%"class.v8::internal::Scope"*, %"class.v8::internal::AstRawString"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  br label %4

4:                                                ; preds = %13, %3
  %5 = phi %"class.v8::internal::Scope"* [ %0, %3 ], [ %15, %13 ]
  %6 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %5, i64 0, i32 13
  %7 = load i16, i16* %6, align 1
  %8 = and i16 %7, 256
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %5, i64 0, i32 12
  %12 = load i8, i8* %11, align 8
  switch i8 %12, label %16 [
    i8 6, label %13
    i8 0, label %13
  ]

13:                                               ; preds = %10, %10, %4
  %14 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %5, i64 0, i32 0
  %15 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %14, align 8
  br label %4

16:                                               ; preds = %10
  %17 = ptrtoint %"class.v8::internal::AstRawString"* %1 to i64
  %18 = ptrtoint %"class.v8::internal::Scope"* %5 to i64
  %19 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %24, %22
  %26 = icmp ult i64 %25, 48
  br i1 %26, label %27, label %29, !prof !2

27:                                               ; preds = %16
  %28 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %20, i64 48) #10
  br label %31

29:                                               ; preds = %16
  %30 = add i64 %22, 48
  store i64 %30, i64* %21, align 8
  br label %31

31:                                               ; preds = %27, %29
  %32 = phi i64 [ %28, %27 ], [ %22, %29 ]
  %33 = inttoptr i64 %32 to %"class.v8::internal::Variable"*
  %34 = inttoptr i64 %32 to i64*
  store i64 %18, i64* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %33, i64 0, i32 1
  %36 = bitcast %"class.v8::internal::AstRawString"** %35 to i64*
  store i64 %17, i64* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %33, i64 0, i32 2
  %38 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %33, i64 0, i32 4
  %39 = bitcast %"class.v8::internal::Variable"** %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #10
  store i32 -1, i32* %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %33, i64 0, i32 5
  store i32 -1, i32* %40, align 4
  %41 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %33, i64 0, i32 6
  store i16 4099, i16* %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %5, i64 0, i32 4, i32 1
  %43 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %42, align 8
  store %"class.v8::internal::Variable"* %33, %"class.v8::internal::Variable"** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %33, i64 0, i32 3
  store %"class.v8::internal::Variable"** %44, %"class.v8::internal::Variable"*** %42, align 8
  %45 = icmp eq i8 %2, 1
  br i1 %45, label %46, label %47

46:                                               ; preds = %31
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* %33)
  br label %47

47:                                               ; preds = %46, %31
  ret %"class.v8::internal::Variable"* %33
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.v8::internal::Scope"* @_ZN2v88internal5Scope18FinalizeBlockScopeEv(%"class.v8::internal::Scope"*) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %97

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 13
  %7 = load i16, i16* %6, align 1
  %8 = and i16 %7, 260
  %9 = icmp eq i16 %8, 260
  br i1 %9, label %97, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 0
  %12 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %12, i64 0, i32 1
  %14 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %13, align 8
  %15 = icmp eq %"class.v8::internal::Scope"* %14, %0
  br i1 %15, label %25, label %16

16:                                               ; preds = %10, %19
  %17 = phi %"class.v8::internal::Scope"* [ %21, %19 ], [ %14, %10 ]
  %18 = icmp eq %"class.v8::internal::Scope"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %17, i64 0, i32 2
  %21 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %20, align 8
  %22 = icmp eq %"class.v8::internal::Scope"* %21, %0
  br i1 %22, label %23, label %16

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %17, i64 0, i32 2
  br label %25

25:                                               ; preds = %10, %23
  %26 = phi %"class.v8::internal::Scope"** [ %24, %23 ], [ %13, %10 ]
  %27 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 2
  %28 = bitcast %"class.v8::internal::Scope"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.v8::internal::Scope"** %26 to i64*
  store i64 %29, i64* %30, align 8
  br label %31

31:                                               ; preds = %16, %25
  %32 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 1
  %33 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %32, align 8
  %34 = icmp eq %"class.v8::internal::Scope"* %33, null
  br i1 %34, label %65, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.v8::internal::Scope"* %0 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.v8::internal::Scope"* %33 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %33, i64 0, i32 2
  %40 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %39, align 8
  %41 = icmp eq %"class.v8::internal::Scope"* %40, null
  %42 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %11, align 8
  br i1 %41, label %53, label %43

43:                                               ; preds = %35, %43
  %44 = phi %"class.v8::internal::Scope"* [ %50, %43 ], [ %42, %35 ]
  %45 = phi %"class.v8::internal::Scope"* [ %48, %43 ], [ %40, %35 ]
  %46 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %45, i64 0, i32 0
  store %"class.v8::internal::Scope"* %44, %"class.v8::internal::Scope"** %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %45, i64 0, i32 2
  %48 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %47, align 8
  %49 = icmp eq %"class.v8::internal::Scope"* %48, null
  %50 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %11, align 8
  br i1 %49, label %51, label %43

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %45, i64 0, i32 2
  br label %53

53:                                               ; preds = %51, %35
  %54 = phi %"class.v8::internal::Scope"** [ %39, %35 ], [ %52, %51 ]
  %55 = phi %"class.v8::internal::Scope"* [ %42, %35 ], [ %50, %51 ]
  %56 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %55, i64 0, i32 1
  %57 = bitcast %"class.v8::internal::Scope"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.v8::internal::Scope"** %54 to i64*
  store i64 %58, i64* %59, align 8
  %60 = bitcast %"class.v8::internal::Scope"** %32 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %11, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %62, i64 0, i32 1
  %64 = bitcast %"class.v8::internal::Scope"** %63 to i64*
  store i64 %61, i64* %64, align 8
  store %"class.v8::internal::Scope"* null, %"class.v8::internal::Scope"** %32, align 8
  br label %65

65:                                               ; preds = %31, %53
  %66 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 5, i32 0
  %67 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %66, align 8
  %68 = icmp eq %"class.v8::internal::VariableProxy"* %67, null
  br i1 %68, label %86, label %69

69:                                               ; preds = %65
  %70 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %11, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %70, i64 0, i32 5
  %72 = getelementptr inbounds %"class.v8::base::ThreadedListBase.18", %"class.v8::base::ThreadedListBase.18"* %71, i64 0, i32 0
  %73 = bitcast %"class.v8::base::ThreadedListBase.18"* %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 5, i32 1
  %76 = bitcast %"class.v8::internal::VariableProxy"*** %75 to i64**
  %77 = load i64*, i64** %76, align 8
  store i64 %74, i64* %77, align 8
  %78 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %72, align 8
  %79 = icmp eq %"class.v8::internal::VariableProxy"* %78, null
  br i1 %79, label %80, label %85

80:                                               ; preds = %69
  %81 = bitcast %"class.v8::internal::VariableProxy"*** %75 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %70, i64 0, i32 5, i32 1
  %84 = bitcast %"class.v8::internal::VariableProxy"*** %83 to i64*
  store i64 %82, i64* %84, align 8
  br label %85

85:                                               ; preds = %69, %80
  store %"class.v8::internal::VariableProxy"* %67, %"class.v8::internal::VariableProxy"** %72, align 8
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %66, align 8
  store %"class.v8::internal::VariableProxy"** %66, %"class.v8::internal::VariableProxy"*** %75, align 8
  br label %86

86:                                               ; preds = %85, %65
  %87 = load i16, i16* %6, align 1
  %88 = and i16 %87, 64
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %95, label %90

90:                                               ; preds = %86
  %91 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %11, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %91, i64 0, i32 13
  %93 = load i16, i16* %92, align 1
  %94 = or i16 %93, 64
  store i16 %94, i16* %92, align 1
  br label %95

95:                                               ; preds = %86, %90
  %96 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 11
  store i32 0, i32* %96, align 4
  br label %97

97:                                               ; preds = %5, %1, %95
  %98 = phi %"class.v8::internal::Scope"* [ null, %95 ], [ %0, %1 ], [ %0, %5 ]
  ret %"class.v8::internal::Scope"* %98
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal16DeclarationScope8AddLocalEPNS0_8VariableE(%"class.v8::internal::DeclarationScope"* nocapture, %"class.v8::internal::Variable"*) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 4, i32 1
  %4 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %3, align 8
  store %"class.v8::internal::Variable"* %1, %"class.v8::internal::Variable"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1, i64 0, i32 3
  store %"class.v8::internal::Variable"** %5, %"class.v8::internal::Variable"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Scope8Snapshot8ReparentEPNS0_16DeclarationScopeE(%"class.v8::internal::Scope::Snapshot"* nocapture, %"class.v8::internal::DeclarationScope"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %1, i64 0, i32 0, i32 2
  %4 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Scope::Snapshot", %"class.v8::internal::Scope::Snapshot"* %0, i64 0, i32 1
  %6 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %5, align 8
  %7 = icmp eq %"class.v8::internal::Scope"* %4, %6
  br i1 %7, label %52, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 2
  %10 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %9, align 8
  %11 = icmp eq %"class.v8::internal::Scope"* %10, %6
  %12 = bitcast %"class.v8::internal::Scope"* %4 to %"class.v8::internal::DeclarationScope"**
  store %"class.v8::internal::DeclarationScope"* %1, %"class.v8::internal::DeclarationScope"** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 13
  %14 = load i16, i16* %13, align 1
  %15 = and i16 %14, 64
  %16 = icmp ne i16 %15, 0
  br i1 %11, label %38, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %1, i64 0, i32 0, i32 13
  br label %19

19:                                               ; preds = %17, %27
  %20 = phi %"class.v8::internal::Scope"* [ %10, %17 ], [ %30, %27 ]
  %21 = phi i1 [ %16, %17 ], [ %37, %27 ]
  %22 = phi %"class.v8::internal::Scope"** [ %9, %17 ], [ %29, %27 ]
  br i1 %21, label %23, label %27

23:                                               ; preds = %19
  %24 = load i16, i16* %18, align 1
  %25 = or i16 %24, 64
  store i16 %25, i16* %18, align 1
  %26 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %22, align 8
  br label %27

27:                                               ; preds = %19, %23
  %28 = phi %"class.v8::internal::Scope"* [ %20, %19 ], [ %26, %23 ]
  %29 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %28, i64 0, i32 2
  %30 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %29, align 8
  %31 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %5, align 8
  %32 = icmp eq %"class.v8::internal::Scope"* %30, %31
  %33 = bitcast %"class.v8::internal::Scope"* %28 to %"class.v8::internal::DeclarationScope"**
  store %"class.v8::internal::DeclarationScope"* %1, %"class.v8::internal::DeclarationScope"** %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %28, i64 0, i32 13
  %35 = load i16, i16* %34, align 1
  %36 = and i16 %35, 64
  %37 = icmp ne i16 %36, 0
  br i1 %32, label %38, label %19

38:                                               ; preds = %27, %8
  %39 = phi %"class.v8::internal::Scope"** [ %9, %8 ], [ %29, %27 ]
  %40 = phi i1 [ %16, %8 ], [ %37, %27 ]
  br i1 %40, label %41, label %45

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %1, i64 0, i32 0, i32 13
  %43 = load i16, i16* %42, align 1
  %44 = or i16 %43, 64
  store i16 %44, i16* %42, align 1
  br label %45

45:                                               ; preds = %41, %38
  %46 = bitcast %"class.v8::internal::Scope"** %3 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %1, i64 0, i32 0, i32 1
  %49 = bitcast %"class.v8::internal::Scope"** %48 to i64*
  store i64 %47, i64* %49, align 8
  store %"class.v8::internal::Scope"* null, %"class.v8::internal::Scope"** %39, align 8
  %50 = bitcast %"class.v8::internal::Scope"** %5 to i64*
  %51 = load i64, i64* %50, align 8
  store i64 %51, i64* %46, align 8
  br label %52

52:                                               ; preds = %2, %45
  %53 = getelementptr inbounds %"class.v8::internal::Scope::Snapshot", %"class.v8::internal::Scope::Snapshot"* %0, i64 0, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = and i64 %54, -2
  %56 = inttoptr i64 %55 to %"class.v8::internal::Scope"*
  %57 = getelementptr inbounds %"class.v8::internal::Scope::Snapshot", %"class.v8::internal::Scope::Snapshot"* %0, i64 0, i32 2, i32 0
  %58 = load %"class.v8::internal::VariableProxy"**, %"class.v8::internal::VariableProxy"*** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %56, i64 0, i32 5, i32 1
  %60 = load %"class.v8::internal::VariableProxy"**, %"class.v8::internal::VariableProxy"*** %59, align 8
  %61 = icmp eq %"class.v8::internal::VariableProxy"** %60, %58
  br i1 %61, label %71, label %62

62:                                               ; preds = %52
  %63 = bitcast %"class.v8::internal::VariableProxy"** %58 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %1, i64 0, i32 0, i32 5, i32 1
  %66 = bitcast %"class.v8::internal::VariableProxy"*** %65 to i64**
  %67 = load i64*, i64** %66, align 8
  store i64 %64, i64* %67, align 8
  %68 = bitcast %"class.v8::internal::VariableProxy"*** %59 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.v8::internal::VariableProxy"*** %65 to i64*
  store i64 %69, i64* %70, align 8
  store %"class.v8::internal::VariableProxy"** %58, %"class.v8::internal::VariableProxy"*** %59, align 8
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %58, align 8
  br label %71

71:                                               ; preds = %52, %62
  br label %72

72:                                               ; preds = %71, %81
  %73 = phi %"class.v8::internal::Scope"* [ %83, %81 ], [ %56, %71 ]
  %74 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %73, i64 0, i32 13
  %75 = load i16, i16* %74, align 1
  %76 = and i16 %75, 256
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %73, i64 0, i32 12
  %80 = load i8, i8* %79, align 8
  switch i8 %80, label %84 [
    i8 6, label %81
    i8 0, label %81
  ]

81:                                               ; preds = %78, %78, %72
  %82 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %73, i64 0, i32 0
  %83 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %82, align 8
  br label %72

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.v8::internal::Scope::Snapshot", %"class.v8::internal::Scope::Snapshot"* %0, i64 0, i32 3, i32 0
  %86 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %73, i64 0, i32 4, i32 1
  %88 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %87, align 8
  %89 = icmp eq %"class.v8::internal::Variable"** %86, %88
  br i1 %89, label %103, label %112

90:                                               ; preds = %112
  %91 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %85, align 8
  %92 = icmp eq %"class.v8::internal::Variable"** %117, %91
  br i1 %92, label %103, label %93

93:                                               ; preds = %90
  %94 = bitcast %"class.v8::internal::Variable"** %91 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %1, i64 0, i32 0, i32 4, i32 1
  %97 = bitcast %"class.v8::internal::Variable"*** %96 to i64**
  %98 = load i64*, i64** %97, align 8
  store i64 %95, i64* %98, align 8
  %99 = bitcast %"class.v8::internal::Variable"*** %87 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.v8::internal::Variable"*** %96 to i64*
  store i64 %100, i64* %101, align 8
  store %"class.v8::internal::Variable"** %91, %"class.v8::internal::Variable"*** %87, align 8
  store %"class.v8::internal::Variable"* null, %"class.v8::internal::Variable"** %91, align 8
  %102 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %85, align 8
  br label %103

103:                                              ; preds = %84, %90, %93
  %104 = phi %"class.v8::internal::Variable"** [ %91, %90 ], [ %102, %93 ], [ %86, %84 ]
  store %"class.v8::internal::Variable"** %104, %"class.v8::internal::Variable"*** %87, align 8
  store %"class.v8::internal::Variable"* null, %"class.v8::internal::Variable"** %104, align 8
  %105 = load i64, i64* %53, align 8
  %106 = and i64 %105, -2
  %107 = inttoptr i64 %106 to %"class.v8::internal::Scope"*
  %108 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %107, i64 0, i32 13
  %109 = load i16, i16* %108, align 1
  %110 = and i16 %109, 2
  %111 = icmp eq i16 %110, 0
  br i1 %111, label %136, label %120

112:                                              ; preds = %84, %112
  %113 = phi %"class.v8::internal::Variable"** [ %117, %112 ], [ %86, %84 ]
  %114 = bitcast %"class.v8::internal::Variable"** %113 to %"class.v8::internal::DeclarationScope"***
  %115 = load %"class.v8::internal::DeclarationScope"**, %"class.v8::internal::DeclarationScope"*** %114, align 8
  store %"class.v8::internal::DeclarationScope"* %1, %"class.v8::internal::DeclarationScope"** %115, align 8
  %116 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %113, align 8
  %117 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %116, i64 0, i32 3
  %118 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %87, align 8
  %119 = icmp eq %"class.v8::internal::Variable"** %117, %118
  br i1 %119, label %90, label %112

120:                                              ; preds = %103
  %121 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %1, i64 0, i32 0, i32 13
  %122 = load i16, i16* %121, align 1
  %123 = or i16 %122, 2
  store i16 %123, i16* %121, align 1
  %124 = and i16 %122, 1
  %125 = icmp eq i16 %124, 0
  br i1 %125, label %126, label %132

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %1, i64 0, i32 0, i32 12
  %128 = load i8, i8* %127, align 8
  switch i8 %128, label %129 [
    i8 4, label %132
    i8 1, label %132
  ]

129:                                              ; preds = %126
  %130 = or i16 %122, 6
  store i16 %130, i16* %121, align 1
  %131 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %1, i64 0, i32 0, i32 11
  store i32 3, i32* %131, align 4
  br label %132

132:                                              ; preds = %120, %126, %126, %129
  %133 = phi i16 [ %123, %120 ], [ %123, %126 ], [ %123, %126 ], [ %130, %129 ]
  %134 = or i16 %133, 64
  store i16 %134, i16* %121, align 1
  %135 = load i64, i64* %53, align 8
  br label %136

136:                                              ; preds = %103, %132
  %137 = phi i64 [ %105, %103 ], [ %135, %132 ]
  %138 = and i64 %137, 1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %145, label %140

140:                                              ; preds = %136
  %141 = and i64 %137, -2
  %142 = inttoptr i64 %141 to %"class.v8::internal::Scope"*
  tail call void @_ZN2v88internal5Scope14RecordEvalCallEv(%"class.v8::internal::Scope"* %142) #10
  %143 = load i64, i64* %53, align 8
  %144 = and i64 %143, 1
  br label %145

145:                                              ; preds = %136, %140
  %146 = phi i64 [ 0, %136 ], [ %144, %140 ]
  store i64 %146, i64* %53, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal5Scope17ReplaceOuterScopeEPS1_(%"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 1
  %6 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %5, align 8
  %7 = icmp eq %"class.v8::internal::Scope"* %6, %0
  br i1 %7, label %17, label %8

8:                                                ; preds = %2, %11
  %9 = phi %"class.v8::internal::Scope"* [ %13, %11 ], [ %6, %2 ]
  %10 = icmp eq %"class.v8::internal::Scope"* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %9, i64 0, i32 2
  %13 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %12, align 8
  %14 = icmp eq %"class.v8::internal::Scope"* %13, %0
  br i1 %14, label %15, label %8

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %9, i64 0, i32 2
  br label %17

17:                                               ; preds = %2, %15
  %18 = phi %"class.v8::internal::Scope"** [ %16, %15 ], [ %5, %2 ]
  %19 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 2
  %20 = bitcast %"class.v8::internal::Scope"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.v8::internal::Scope"** %18 to i64*
  store i64 %21, i64* %22, align 8
  br label %23

23:                                               ; preds = %8, %17
  %24 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 1
  %25 = bitcast %"class.v8::internal::Scope"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 2
  %28 = bitcast %"class.v8::internal::Scope"** %27 to i64*
  store i64 %26, i64* %28, align 8
  store %"class.v8::internal::Scope"* %0, %"class.v8::internal::Scope"** %24, align 8
  store %"class.v8::internal::Scope"* %1, %"class.v8::internal::Scope"** %3, align 8
  ret void
}

declare i32 @_ZN2v88internal9ScopeInfo11ModuleIndexENS0_6StringEPNS0_12VariableModeEPNS0_18InitializationFlagEPNS0_17MaybeAssignedFlagE(%"class.v8::internal::ScopeInfo"*, i64, i8*, i8*, i8*) local_unnamed_addr #5

declare i32 @_ZNK2v88internal9ScopeInfo24FunctionContextSlotIndexENS0_6StringE(%"class.v8::internal::ScopeInfo"*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal16DeclarationScope16DeclareParameterEPKNS0_12AstRawStringENS0_12VariableModeEbbPNS0_15AstValueFactoryEi(%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstRawString"*, i8 zeroext, i1 zeroext, i1 zeroext, %"class.v8::internal::AstValueFactory"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %8 = icmp eq i8 %2, 3
  br i1 %8, label %9, label %52

9:                                                ; preds = %7
  %10 = bitcast %"class.v8::internal::DeclarationScope"* %0 to %"class.v8::internal::Scope"*
  br label %11

11:                                               ; preds = %9, %20
  %12 = phi %"class.v8::internal::Scope"* [ %22, %20 ], [ %10, %9 ]
  %13 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %12, i64 0, i32 13
  %14 = load i16, i16* %13, align 1
  %15 = and i16 %14, 256
  %16 = icmp eq i16 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %12, i64 0, i32 12
  %19 = load i8, i8* %18, align 8
  switch i8 %19, label %23 [
    i8 6, label %20
    i8 0, label %20
  ]

20:                                               ; preds = %17, %17, %11
  %21 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %12, i64 0, i32 0
  %22 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %21, align 8
  br label %11

23:                                               ; preds = %17
  %24 = ptrtoint %"class.v8::internal::AstRawString"* %1 to i64
  %25 = ptrtoint %"class.v8::internal::Scope"* %12 to i64
  %26 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %27, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %27, i64 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %31, %29
  %33 = icmp ult i64 %32, 48
  br i1 %33, label %34, label %36, !prof !2

34:                                               ; preds = %23
  %35 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %27, i64 48) #10
  br label %38

36:                                               ; preds = %23
  %37 = add i64 %29, 48
  store i64 %37, i64* %28, align 8
  br label %38

38:                                               ; preds = %34, %36
  %39 = phi i64 [ %35, %34 ], [ %29, %36 ]
  %40 = inttoptr i64 %39 to %"class.v8::internal::Variable"*
  %41 = inttoptr i64 %39 to i64*
  store i64 %25, i64* %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %40, i64 0, i32 1
  %43 = bitcast %"class.v8::internal::AstRawString"** %42 to i64*
  store i64 %24, i64* %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %40, i64 0, i32 2
  %45 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %40, i64 0, i32 4
  %46 = bitcast %"class.v8::internal::Variable"** %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #10
  store i32 -1, i32* %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %40, i64 0, i32 5
  store i32 -1, i32* %47, align 4
  %48 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %40, i64 0, i32 6
  store i16 4099, i16* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %12, i64 0, i32 4, i32 1
  %50 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %49, align 8
  store %"class.v8::internal::Variable"* %40, %"class.v8::internal::Variable"** %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %40, i64 0, i32 3
  store %"class.v8::internal::Variable"** %51, %"class.v8::internal::Variable"*** %49, align 8
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* %40) #10
  br label %92

52:                                               ; preds = %7
  %53 = bitcast %"class.v8::internal::AstRawString"* %1 to i8*
  %54 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1, i64 0, i32 2
  %55 = load i32, i32* %54, align 8
  %56 = lshr i32 %55, 2
  %57 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 8
  %59 = add i32 %58, -1
  %60 = and i32 %59, %56
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %63 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %62, align 8
  %64 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %63, i64 %61
  %65 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %64, i64 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = icmp eq i8* %66, null
  %68 = icmp eq i8* %66, %53
  %69 = or i1 %67, %68
  br i1 %69, label %82, label %70

70:                                               ; preds = %52
  %71 = zext i32 %59 to i64
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ %61, %70 ], [ %75, %72 ]
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, %71
  %76 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %63, i64 %75
  %77 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %76, i64 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = icmp eq i8* %78, null
  %80 = icmp eq i8* %78, %53
  %81 = or i1 %79, %80
  br i1 %81, label %82, label %72

82:                                               ; preds = %72, %52
  %83 = phi i8* [ %66, %52 ], [ %78, %72 ]
  %84 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %64, %52 ], [ %76, %72 ]
  %85 = icmp eq i8* %83, null
  %86 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %84, null
  %87 = or i1 %85, %86
  br i1 %87, label %92, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %84, i64 0, i32 1
  %90 = bitcast i8** %89 to %"class.v8::internal::Variable"**
  %91 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %90, align 8
  br label %92

92:                                               ; preds = %88, %82, %38
  %93 = phi %"class.v8::internal::Variable"* [ %40, %38 ], [ %91, %88 ], [ null, %82 ]
  %94 = ptrtoint %"class.v8::internal::Variable"* %93 to i64
  %95 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 1
  %96 = zext i1 %4 to i16
  %97 = load i16, i16* %95, align 1
  %98 = shl nuw nsw i16 %96, 3
  %99 = and i16 %97, -9
  %100 = or i16 %99, %98
  store i16 %100, i16* %95, align 1
  %101 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %93, i64 0, i32 5
  store i32 %6, i32* %101, align 4
  %102 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 6
  %103 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 6, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 6, i32 1
  %108 = load i32, i32* %107, align 8
  %109 = icmp slt i32 %106, %108
  br i1 %109, label %110, label %113

110:                                              ; preds = %92
  %111 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %102, i64 0, i32 0
  %112 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %111, align 8
  br label %148

113:                                              ; preds = %92
  %114 = shl nsw i32 %108, 1
  %115 = or i32 %114, 1
  %116 = sext i32 %115 to i64
  %117 = shl nsw i64 %116, 3
  %118 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %104, i64 0, i32 2
  %119 = load i64, i64* %118, align 8
  %120 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %104, i64 0, i32 3
  %121 = load i64, i64* %120, align 8
  %122 = sub i64 %121, %119
  %123 = icmp ugt i64 %117, %122
  br i1 %123, label %124, label %126, !prof !2

124:                                              ; preds = %113
  %125 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %104, i64 %117) #10
  br label %128

126:                                              ; preds = %113
  %127 = add i64 %119, %117
  store i64 %127, i64* %118, align 8
  br label %128

128:                                              ; preds = %126, %124
  %129 = phi i64 [ %125, %124 ], [ %119, %126 ]
  %130 = inttoptr i64 %129 to %"class.v8::internal::Variable"**
  %131 = load i32, i32* %105, align 4
  %132 = icmp sgt i32 %131, 0
  br i1 %132, label %133, label %145

133:                                              ; preds = %128
  %134 = inttoptr i64 %129 to i8*
  %135 = bitcast %"class.v8::internal::ZoneList"* %102 to i8**
  %136 = load i8*, i8** %135, align 8
  %137 = sext i32 %131 to i64
  %138 = shl nsw i64 %137, 3
  switch i64 %138, label %144 [
    i64 16, label %143
    i64 8, label %139
  ]

139:                                              ; preds = %133
  %140 = bitcast i8* %136 to i64*
  %141 = inttoptr i64 %129 to i64*
  %142 = load i64, i64* %140, align 1
  store i64 %142, i64* %141, align 1
  br label %145

143:                                              ; preds = %133
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %134, i8* align 1 %136, i64 16, i1 false) #10
  br label %145

144:                                              ; preds = %133
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %134, i8* align 1 %136, i64 %138, i1 false) #10
  br label %145

145:                                              ; preds = %144, %143, %139, %128
  %146 = getelementptr inbounds %"class.v8::internal::ZoneList", %"class.v8::internal::ZoneList"* %102, i64 0, i32 0
  store %"class.v8::internal::Variable"** %130, %"class.v8::internal::Variable"*** %146, align 8
  store i32 %115, i32* %107, align 8
  %147 = load i32, i32* %105, align 4
  br label %148

148:                                              ; preds = %110, %145
  %149 = phi i32 [ %106, %110 ], [ %147, %145 ]
  %150 = phi %"class.v8::internal::Variable"** [ %112, %110 ], [ %130, %145 ]
  %151 = add nsw i32 %149, 1
  store i32 %151, i32* %105, align 4
  %152 = sext i32 %149 to i64
  %153 = getelementptr inbounds %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %150, i64 %152
  %154 = bitcast %"class.v8::internal::Variable"** %153 to i64*
  store i64 %94, i64* %154, align 8
  br i1 %4, label %159, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 4
  %157 = load i32, i32* %156, align 8
  %158 = add nsw i32 %157, 1
  store i32 %158, i32* %156, align 8
  br label %159

159:                                              ; preds = %155, %148
  %160 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %5, i64 0, i32 3
  %161 = load %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstStringConstants"** %160, align 8
  %162 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %161, i64 0, i32 5
  %163 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %162, align 8
  %164 = icmp eq %"class.v8::internal::AstRawString"* %163, %1
  br i1 %164, label %165, label %168

165:                                              ; preds = %159
  %166 = load i16, i16* %95, align 1
  %167 = or i16 %166, 16
  store i16 %167, i16* %95, align 1
  br label %168

168:                                              ; preds = %165, %159
  %169 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %93, i64 0, i32 6
  %170 = load i16, i16* %169, align 8
  %171 = or i16 %170, 2048
  store i16 %171, i16* %169, align 8
  ret %"class.v8::internal::Variable"* %93
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal5Scope12NewTemporaryEPKNS0_12AstRawStringE(%"class.v8::internal::Scope"*, %"class.v8::internal::AstRawString"*) local_unnamed_addr #0 align 2 {
  br label %3

3:                                                ; preds = %12, %2
  %4 = phi %"class.v8::internal::Scope"* [ %0, %2 ], [ %14, %12 ]
  %5 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 13
  %6 = load i16, i16* %5, align 1
  %7 = and i16 %6, 256
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 12
  %11 = load i8, i8* %10, align 8
  switch i8 %11, label %15 [
    i8 6, label %12
    i8 0, label %12
  ]

12:                                               ; preds = %9, %9, %3
  %13 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 0
  %14 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %13, align 8
  br label %3

15:                                               ; preds = %9
  %16 = ptrtoint %"class.v8::internal::AstRawString"* %1 to i64
  %17 = ptrtoint %"class.v8::internal::Scope"* %4 to i64
  %18 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %19, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %19, i64 0, i32 3
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %23, %21
  %25 = icmp ult i64 %24, 48
  br i1 %25, label %26, label %28, !prof !2

26:                                               ; preds = %15
  %27 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %19, i64 48) #10
  br label %30

28:                                               ; preds = %15
  %29 = add i64 %21, 48
  store i64 %29, i64* %20, align 8
  br label %30

30:                                               ; preds = %26, %28
  %31 = phi i64 [ %27, %26 ], [ %21, %28 ]
  %32 = inttoptr i64 %31 to %"class.v8::internal::Variable"*
  %33 = inttoptr i64 %31 to i64*
  store i64 %17, i64* %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %32, i64 0, i32 1
  %35 = bitcast %"class.v8::internal::AstRawString"** %34 to i64*
  store i64 %16, i64* %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %32, i64 0, i32 2
  %37 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %32, i64 0, i32 4
  %38 = bitcast %"class.v8::internal::Variable"** %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #10
  store i32 -1, i32* %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %32, i64 0, i32 5
  store i32 -1, i32* %39, align 4
  %40 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %32, i64 0, i32 6
  store i16 4099, i16* %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 4, i32 1
  %42 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %41, align 8
  store %"class.v8::internal::Variable"* %32, %"class.v8::internal::Variable"** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %32, i64 0, i32 3
  store %"class.v8::internal::Variable"** %43, %"class.v8::internal::Variable"*** %41, align 8
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* %32) #10
  ret %"class.v8::internal::Variable"* %32
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal16DeclarationScope15RecordParameterEb(%"class.v8::internal::DeclarationScope"* nocapture, i1 zeroext) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 1
  %4 = zext i1 %1 to i16
  %5 = load i16, i16* %3, align 1
  %6 = shl nuw nsw i16 %4, 3
  %7 = and i16 %5, -9
  %8 = or i16 %7, %6
  store i16 %8, i16* %3, align 1
  br i1 %1, label %13, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 8
  br label %13

13:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal5Scope12DeclareLocalEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindEPbNS0_18InitializationFlagE(%"class.v8::internal::Scope"*, %"class.v8::internal::AstRawString"*, i8 zeroext, i8 zeroext, i8* nocapture, i8 zeroext) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3
  %10 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %9, %"class.v8::internal::Zone"* %8, %"class.v8::internal::Scope"* %0, %"class.v8::internal::AstRawString"* %1, i8 zeroext %2, i8 zeroext %3, i8 zeroext %5, i8 zeroext 0, i8 zeroext 0, i8* %4) #10
  %11 = load i8, i8* %4, align 1, !range !5
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 4, i32 1
  %15 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %14, align 8
  store %"class.v8::internal::Variable"* %10, %"class.v8::internal::Variable"** %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %10, i64 0, i32 3
  store %"class.v8::internal::Variable"** %16, %"class.v8::internal::Variable"*** %14, align 8
  br label %17

17:                                               ; preds = %6, %13
  %18 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 12
  %19 = load i8, i8* %18, align 8
  %20 = add i8 %19, -3
  %21 = icmp ult i8 %20, 2
  br i1 %21, label %22, label %29

22:                                               ; preds = %17
  %23 = icmp eq i8 %2, 1
  br i1 %23, label %25, label %24

24:                                               ; preds = %22
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* %10)
  br label %25

25:                                               ; preds = %22, %24
  %26 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %10, i64 0, i32 6
  %27 = load i16, i16* %26, align 8
  %28 = or i16 %27, 2048
  store i16 %28, i16* %26, align 8
  br label %29

29:                                               ; preds = %17, %25
  ret %"class.v8::internal::Variable"* %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope19GetDeclarationScopeEv(%"class.v8::internal::Scope"* readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 13
  %3 = load i16, i16* %2, align 1
  %4 = and i16 %3, 256
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %1, %6
  %7 = phi %"class.v8::internal::Scope"* [ %9, %6 ], [ %0, %1 ]
  %8 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %7, i64 0, i32 0
  %9 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %9, i64 0, i32 13
  %11 = load i16, i16* %10, align 1
  %12 = and i16 %11, 256
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %6, label %14

14:                                               ; preds = %6, %1
  %15 = phi %"class.v8::internal::Scope"* [ %0, %1 ], [ %9, %6 ]
  %16 = bitcast %"class.v8::internal::Scope"* %15 to %"class.v8::internal::DeclarationScope"*
  ret %"class.v8::internal::DeclarationScope"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal5Scope24DeclareCatchVariableNameEPKNS0_12AstRawStringE(%"class.v8::internal::Scope"*, %"class.v8::internal::AstRawString"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #10
  %4 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3
  %7 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %6, %"class.v8::internal::Zone"* %5, %"class.v8::internal::Scope"* %0, %"class.v8::internal::AstRawString"* %1, i8 zeroext 2, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8* nonnull %3) #10
  %8 = load i8, i8* %3, align 1, !range !5
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 4, i32 1
  %12 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %11, align 8
  store %"class.v8::internal::Variable"* %7, %"class.v8::internal::Variable"** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %7, i64 0, i32 3
  store %"class.v8::internal::Variable"** %13, %"class.v8::internal::Variable"*** %11, align 8
  br label %14

14:                                               ; preds = %2, %10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #10
  ret %"class.v8::internal::Variable"* %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal5Scope13AddUnresolvedEPNS0_13VariableProxyE(%"class.v8::internal::Scope"* nocapture, %"class.v8::internal::VariableProxy"*) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 5, i32 1
  %4 = load %"class.v8::internal::VariableProxy"**, %"class.v8::internal::VariableProxy"*** %3, align 8
  store %"class.v8::internal::VariableProxy"* %1, %"class.v8::internal::VariableProxy"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %1, i64 0, i32 2
  %6 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %5, align 8
  %7 = icmp eq %"class.v8::internal::VariableProxy"* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %6, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 512
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %8, %18
  %14 = phi %"class.v8::internal::VariableProxy"* [ %16, %18 ], [ %6, %8 ]
  %15 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %14, i64 0, i32 2
  %16 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %15, align 8
  %17 = icmp eq %"class.v8::internal::VariableProxy"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %16, i64 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 512
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %13

23:                                               ; preds = %18, %13
  %24 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %14, i64 0, i32 2
  br label %25

25:                                               ; preds = %23, %2, %8
  %26 = phi %"class.v8::internal::VariableProxy"** [ %5, %2 ], [ %5, %8 ], [ %24, %23 ]
  store %"class.v8::internal::VariableProxy"** %26, %"class.v8::internal::VariableProxy"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Scope16RemoveUnresolvedEPNS0_13VariableProxyE(%"class.v8::internal::Scope"*, %"class.v8::internal::VariableProxy"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 5
  %4 = tail call zeroext i1 @_ZN2v84base16ThreadedListBaseINS_8internal13VariableProxyENS0_9EmptyBaseENS3_14UnresolvedNextEE6RemoveEPS3_(%"class.v8::base::ThreadedListBase.18"* %3, %"class.v8::internal::VariableProxy"* %1)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v84base16ThreadedListBaseINS_8internal13VariableProxyENS0_9EmptyBaseENS3_14UnresolvedNextEE6RemoveEPS3_(%"class.v8::base::ThreadedListBase.18"*, %"class.v8::internal::VariableProxy"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::base::ThreadedListBase.18", %"class.v8::base::ThreadedListBase.18"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %3, align 8
  %5 = icmp eq %"class.v8::internal::VariableProxy"* %4, %1
  br i1 %5, label %6, label %51

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %1, i64 0, i32 2
  %8 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %7, align 8
  %9 = icmp eq %"class.v8::internal::VariableProxy"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %8, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 512
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %10, %20
  %16 = phi %"class.v8::internal::VariableProxy"* [ %18, %20 ], [ %8, %10 ]
  %17 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %16, i64 0, i32 2
  %18 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %17, align 8
  %19 = icmp eq %"class.v8::internal::VariableProxy"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %18, i64 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, 512
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %15

25:                                               ; preds = %20, %10
  %26 = phi %"class.v8::internal::VariableProxy"* [ %8, %10 ], [ %18, %20 ]
  store %"class.v8::internal::VariableProxy"* %26, %"class.v8::internal::VariableProxy"** %3, align 8
  br label %29

27:                                               ; preds = %15, %6
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %3, align 8
  %28 = getelementptr inbounds %"class.v8::base::ThreadedListBase.18", %"class.v8::base::ThreadedListBase.18"* %0, i64 0, i32 1
  store %"class.v8::internal::VariableProxy"** %3, %"class.v8::internal::VariableProxy"*** %28, align 8
  br label %29

29:                                               ; preds = %27, %25
  %30 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %7, align 8
  %31 = icmp eq %"class.v8::internal::VariableProxy"* %30, null
  br i1 %31, label %49, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %30, i64 0, i32 0, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 512
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %49, label %37

37:                                               ; preds = %32, %42
  %38 = phi %"class.v8::internal::VariableProxy"* [ %40, %42 ], [ %30, %32 ]
  %39 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %38, i64 0, i32 2
  %40 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %39, align 8
  %41 = icmp eq %"class.v8::internal::VariableProxy"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %40, i64 0, i32 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, 512
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %37

47:                                               ; preds = %42, %37
  %48 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %38, i64 0, i32 2
  br label %49

49:                                               ; preds = %47, %29, %32
  %50 = phi %"class.v8::internal::VariableProxy"** [ %7, %29 ], [ %7, %32 ], [ %48, %47 ]
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %50, align 8
  br label %189

51:                                               ; preds = %2, %73
  %52 = phi %"class.v8::internal::VariableProxy"* [ %74, %73 ], [ %4, %2 ]
  %53 = icmp eq %"class.v8::internal::VariableProxy"* %52, null
  br i1 %53, label %189, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %52, i64 0, i32 2
  %56 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %55, align 8
  %57 = icmp eq %"class.v8::internal::VariableProxy"* %56, null
  br i1 %57, label %73, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %56, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = and i32 %60, 512
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %73, label %63

63:                                               ; preds = %58, %68
  %64 = phi %"class.v8::internal::VariableProxy"* [ %66, %68 ], [ %56, %58 ]
  %65 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %64, i64 0, i32 2
  %66 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %65, align 8
  %67 = icmp eq %"class.v8::internal::VariableProxy"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %66, i64 0, i32 0, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = and i32 %70, 512
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %63

73:                                               ; preds = %63, %68, %54, %58
  %74 = phi %"class.v8::internal::VariableProxy"* [ null, %54 ], [ %56, %58 ], [ null, %63 ], [ %66, %68 ]
  %75 = icmp eq %"class.v8::internal::VariableProxy"* %74, %1
  br i1 %75, label %76, label %51

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %52, i64 0, i32 2
  %78 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %1, i64 0, i32 2
  %79 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %78, align 8
  %80 = icmp eq %"class.v8::internal::VariableProxy"* %79, null
  br i1 %80, label %98, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %79, i64 0, i32 0, i32 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, 512
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %98, label %86

86:                                               ; preds = %81, %91
  %87 = phi %"class.v8::internal::VariableProxy"* [ %89, %91 ], [ %79, %81 ]
  %88 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %87, i64 0, i32 2
  %89 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %88, align 8
  %90 = icmp eq %"class.v8::internal::VariableProxy"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %89, i64 0, i32 0, i32 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = and i32 %93, 512
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %86

96:                                               ; preds = %91, %86
  %97 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %87, i64 0, i32 2
  br label %98

98:                                               ; preds = %96, %76, %81
  %99 = phi %"class.v8::internal::VariableProxy"** [ %78, %76 ], [ %78, %81 ], [ %97, %96 ]
  %100 = bitcast %"class.v8::internal::VariableProxy"** %99 to i64*
  %101 = load i64, i64* %100, align 8
  br i1 %57, label %119, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %56, i64 0, i32 0, i32 0, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = and i32 %104, 512
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %119, label %107

107:                                              ; preds = %102, %112
  %108 = phi %"class.v8::internal::VariableProxy"* [ %110, %112 ], [ %56, %102 ]
  %109 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %108, i64 0, i32 2
  %110 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %109, align 8
  %111 = icmp eq %"class.v8::internal::VariableProxy"* %110, null
  br i1 %111, label %117, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %110, i64 0, i32 0, i32 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = and i32 %114, 512
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %107

117:                                              ; preds = %112, %107
  %118 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %108, i64 0, i32 2
  br label %119

119:                                              ; preds = %117, %98, %102
  %120 = phi %"class.v8::internal::VariableProxy"** [ %77, %98 ], [ %77, %102 ], [ %118, %117 ]
  %121 = bitcast %"class.v8::internal::VariableProxy"** %120 to i64*
  store i64 %101, i64* %121, align 8
  %122 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %78, align 8
  %123 = icmp eq %"class.v8::internal::VariableProxy"* %122, null
  br i1 %123, label %141, label %124

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %122, i64 0, i32 0, i32 0, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = and i32 %126, 512
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %141, label %129

129:                                              ; preds = %124, %134
  %130 = phi %"class.v8::internal::VariableProxy"* [ %132, %134 ], [ %122, %124 ]
  %131 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %130, i64 0, i32 2
  %132 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %131, align 8
  %133 = icmp eq %"class.v8::internal::VariableProxy"* %132, null
  br i1 %133, label %139, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %132, i64 0, i32 0, i32 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = and i32 %136, 512
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %129

139:                                              ; preds = %134, %129
  %140 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %130, i64 0, i32 2
  br label %141

141:                                              ; preds = %139, %119, %124
  %142 = phi %"class.v8::internal::VariableProxy"** [ %78, %119 ], [ %78, %124 ], [ %140, %139 ]
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %142, align 8
  %143 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %78, align 8
  %144 = icmp eq %"class.v8::internal::VariableProxy"* %143, null
  br i1 %144, label %162, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %143, i64 0, i32 0, i32 0, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = and i32 %147, 512
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %162, label %150

150:                                              ; preds = %145, %155
  %151 = phi %"class.v8::internal::VariableProxy"* [ %153, %155 ], [ %143, %145 ]
  %152 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %151, i64 0, i32 2
  %153 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %152, align 8
  %154 = icmp eq %"class.v8::internal::VariableProxy"* %153, null
  br i1 %154, label %160, label %155

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %153, i64 0, i32 0, i32 0, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = and i32 %157, 512
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %150

160:                                              ; preds = %155, %150
  %161 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %151, i64 0, i32 2
  br label %162

162:                                              ; preds = %160, %141, %145
  %163 = phi %"class.v8::internal::VariableProxy"** [ %78, %141 ], [ %78, %145 ], [ %161, %160 ]
  %164 = getelementptr inbounds %"class.v8::base::ThreadedListBase.18", %"class.v8::base::ThreadedListBase.18"* %0, i64 0, i32 1
  %165 = load %"class.v8::internal::VariableProxy"**, %"class.v8::internal::VariableProxy"*** %164, align 8
  %166 = icmp eq %"class.v8::internal::VariableProxy"** %163, %165
  br i1 %166, label %167, label %189

167:                                              ; preds = %162
  %168 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %77, align 8
  %169 = icmp eq %"class.v8::internal::VariableProxy"* %168, null
  br i1 %169, label %187, label %170

170:                                              ; preds = %167
  %171 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %168, i64 0, i32 0, i32 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = and i32 %172, 512
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %187, label %175

175:                                              ; preds = %170, %180
  %176 = phi %"class.v8::internal::VariableProxy"* [ %178, %180 ], [ %168, %170 ]
  %177 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %176, i64 0, i32 2
  %178 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %177, align 8
  %179 = icmp eq %"class.v8::internal::VariableProxy"* %178, null
  br i1 %179, label %185, label %180

180:                                              ; preds = %175
  %181 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %178, i64 0, i32 0, i32 0, i32 1
  %182 = load i32, i32* %181, align 4
  %183 = and i32 %182, 512
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %175

185:                                              ; preds = %180, %175
  %186 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %176, i64 0, i32 2
  br label %187

187:                                              ; preds = %185, %167, %170
  %188 = phi %"class.v8::internal::VariableProxy"** [ %77, %167 ], [ %77, %170 ], [ %186, %185 ]
  store %"class.v8::internal::VariableProxy"** %188, %"class.v8::internal::VariableProxy"*** %164, align 8
  br label %189

189:                                              ; preds = %51, %162, %187, %49
  %190 = phi i1 [ true, %49 ], [ true, %187 ], [ true, %162 ], [ false, %51 ]
  ret i1 %190
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal5Scope16DeleteUnresolvedEPNS0_13VariableProxyE(%"class.v8::internal::Scope"* nocapture readnone, %"class.v8::internal::VariableProxy"* nocapture) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = or i32 %4, 512
  store i32 %5, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Declaration"* @_ZN2v88internal16DeclarationScope31CheckConflictingVarDeclarationsEPb(%"class.v8::internal::DeclarationScope"*, i8* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 1
  %4 = load i16, i16* %3, align 1
  %5 = and i16 %4, 1024
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %207

7:                                                ; preds = %2
  %8 = bitcast %"class.v8::internal::DeclarationScope"* %0 to %"class.v8::internal::Scope"*
  %9 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 6, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 6, i32 1
  %11 = load %"class.v8::internal::Declaration"**, %"class.v8::internal::Declaration"*** %10, align 8
  %12 = icmp eq %"class.v8::internal::Declaration"** %9, %11
  br i1 %12, label %95, label %13

13:                                               ; preds = %7, %91
  %14 = phi %"class.v8::internal::Declaration"** [ %93, %91 ], [ %9, %7 ]
  %15 = load %"class.v8::internal::Declaration"*, %"class.v8::internal::Declaration"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Declaration", %"class.v8::internal::Declaration"* %15, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 63
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %91

20:                                               ; preds = %13
  %21 = and i32 %17, 64
  %22 = icmp eq i32 %21, 0
  %23 = icmp eq %"class.v8::internal::Declaration"* %15, null
  %24 = or i1 %23, %22
  br i1 %24, label %91, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.v8::internal::Declaration", %"class.v8::internal::Declaration"* %15, i64 1
  %27 = bitcast %"class.v8::internal::Declaration"* %26 to %"class.v8::internal::Scope"**
  %28 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Declaration", %"class.v8::internal::Declaration"* %15, i64 0, i32 1
  br label %30

30:                                               ; preds = %85, %25
  %31 = phi %"class.v8::internal::Scope"* [ %28, %25 ], [ %87, %85 ]
  %32 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %29, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %32, i64 0, i32 1
  %34 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %33, align 8
  %35 = bitcast %"class.v8::internal::AstRawString"* %34 to i8*
  %36 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %34, i64 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = lshr i32 %37, 2
  %39 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %31, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 8
  %41 = add i32 %40, -1
  %42 = and i32 %41, %38
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %31, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %45 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %44, align 8
  %46 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %45, i64 %43
  %47 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %46, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  %50 = icmp eq i8* %48, %35
  %51 = or i1 %49, %50
  br i1 %51, label %64, label %52

52:                                               ; preds = %30
  %53 = zext i32 %41 to i64
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi i64 [ %43, %52 ], [ %57, %54 ]
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, %53
  %58 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %45, i64 %57
  %59 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %58, i64 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, null
  %62 = icmp eq i8* %60, %35
  %63 = or i1 %61, %62
  br i1 %63, label %64, label %54

64:                                               ; preds = %54, %30
  %65 = phi i8* [ %48, %30 ], [ %60, %54 ]
  %66 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %46, %30 ], [ %58, %54 ]
  %67 = icmp eq i8* %65, null
  %68 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %66, null
  %69 = or i1 %67, %68
  br i1 %69, label %74, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %66, i64 0, i32 1
  %72 = bitcast i8** %71 to %"class.v8::internal::Variable"**
  %73 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %72, align 8
  br label %74

74:                                               ; preds = %64, %70
  %75 = phi %"class.v8::internal::Variable"* [ %73, %70 ], [ null, %64 ]
  %76 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %31, i64 0, i32 12
  %77 = load i8, i8* %76, align 8
  %78 = icmp eq i8 %77, 5
  %79 = icmp ne %"class.v8::internal::Variable"* %75, null
  br i1 %78, label %80, label %84

80:                                               ; preds = %74
  %81 = zext i1 %79 to i8
  %82 = load i8, i8* %1, align 1, !range !5
  %83 = or i8 %82, %81
  store i8 %83, i8* %1, align 1
  br label %85

84:                                               ; preds = %74
  br i1 %79, label %207, label %85

85:                                               ; preds = %84, %80
  %86 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %31, i64 0, i32 0
  %87 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %86, align 8
  %88 = icmp eq %"class.v8::internal::Scope"* %87, %8
  br i1 %88, label %89, label %30

89:                                               ; preds = %85
  %90 = load %"class.v8::internal::Declaration"*, %"class.v8::internal::Declaration"** %14, align 8
  br label %91

91:                                               ; preds = %89, %20, %13
  %92 = phi %"class.v8::internal::Declaration"* [ %90, %89 ], [ %15, %20 ], [ %15, %13 ]
  %93 = getelementptr inbounds %"class.v8::internal::Declaration", %"class.v8::internal::Declaration"* %92, i64 0, i32 2
  %94 = icmp eq %"class.v8::internal::Declaration"** %93, %11
  br i1 %94, label %95, label %13

95:                                               ; preds = %91, %7
  %96 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 12
  %97 = load i8, i8* %96, align 8
  %98 = icmp eq i8 %97, 1
  br i1 %98, label %99, label %207, !prof !2

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 13
  %101 = load i16, i16* %100, align 1
  %102 = and i16 %101, 1
  %103 = icmp eq i16 %102, 0
  br i1 %103, label %104, label %207

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 0
  br label %106

106:                                              ; preds = %117, %104
  %107 = phi %"class.v8::internal::Scope"** [ %105, %104 ], [ %118, %117 ]
  %108 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %107, align 8
  %109 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %108, i64 0, i32 13
  %110 = load i16, i16* %109, align 1
  %111 = and i16 %110, 256
  %112 = icmp eq i16 %111, 0
  br i1 %112, label %117, label %113

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %108, i64 0, i32 12
  %115 = load i8, i8* %114, align 8
  %116 = icmp eq i8 %115, 1
  br i1 %116, label %117, label %119

117:                                              ; preds = %113, %106
  %118 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %108, i64 0, i32 0
  br label %106

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %108, i64 0, i32 0
  %121 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %120, align 8
  %122 = load %"class.v8::internal::Declaration"**, %"class.v8::internal::Declaration"*** %10, align 8
  %123 = icmp eq %"class.v8::internal::Declaration"** %9, %122
  br i1 %123, label %207, label %124

124:                                              ; preds = %119, %203
  %125 = phi %"class.v8::internal::Declaration"** [ %205, %203 ], [ %9, %119 ]
  %126 = load %"class.v8::internal::Declaration"*, %"class.v8::internal::Declaration"** %125, align 8
  %127 = getelementptr inbounds %"class.v8::internal::Declaration", %"class.v8::internal::Declaration"* %126, i64 0, i32 1
  %128 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %128, i64 0, i32 6
  %130 = load i16, i16* %129, align 8
  %131 = and i16 %130, 14
  %132 = icmp eq i16 %131, 0
  br i1 %132, label %203, label %133

133:                                              ; preds = %124
  %134 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %105, align 8
  br label %135

135:                                              ; preds = %201, %133
  %136 = phi %"class.v8::internal::Variable"* [ %128, %133 ], [ %202, %201 ]
  %137 = phi %"class.v8::internal::Scope"* [ %134, %133 ], [ %199, %201 ]
  %138 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %136, i64 0, i32 1
  %139 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %138, align 8
  %140 = bitcast %"class.v8::internal::AstRawString"* %139 to i8*
  %141 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %139, i64 0, i32 2
  %142 = load i32, i32* %141, align 8
  %143 = lshr i32 %142, 2
  %144 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %137, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %145 = load i32, i32* %144, align 8
  %146 = add i32 %145, -1
  %147 = and i32 %146, %143
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %137, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %150 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %149, align 8
  %151 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %150, i64 %148
  %152 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %151, i64 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = icmp eq i8* %153, null
  %155 = icmp eq i8* %153, %140
  %156 = or i1 %154, %155
  br i1 %156, label %169, label %157

157:                                              ; preds = %135
  %158 = zext i32 %146 to i64
  br label %159

159:                                              ; preds = %159, %157
  %160 = phi i64 [ %148, %157 ], [ %162, %159 ]
  %161 = add nuw nsw i64 %160, 1
  %162 = and i64 %161, %158
  %163 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %150, i64 %162
  %164 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %163, i64 0, i32 0
  %165 = load i8*, i8** %164, align 8
  %166 = icmp eq i8* %165, null
  %167 = icmp eq i8* %165, %140
  %168 = or i1 %166, %167
  br i1 %168, label %169, label %159

169:                                              ; preds = %159, %135
  %170 = phi i8* [ %153, %135 ], [ %165, %159 ]
  %171 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %151, %135 ], [ %163, %159 ]
  %172 = icmp eq i8* %170, null
  %173 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %171, null
  %174 = or i1 %172, %173
  br i1 %174, label %180, label %175

175:                                              ; preds = %169
  %176 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %171, i64 0, i32 1
  %177 = bitcast i8** %176 to %"class.v8::internal::Variable"**
  %178 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %177, align 8
  %179 = icmp eq %"class.v8::internal::Variable"* %178, null
  br i1 %179, label %180, label %187

180:                                              ; preds = %175, %169
  %181 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %137, i64 0, i32 7, i32 0, i32 0
  %182 = load i64*, i64** %181, align 8
  %183 = icmp eq i64* %182, null
  br i1 %183, label %197, label %184

184:                                              ; preds = %180
  %185 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope17LookupInScopeInfoEPKNS0_12AstRawStringEPS1_(%"class.v8::internal::Scope"* %137, %"class.v8::internal::AstRawString"* %139, %"class.v8::internal::Scope"* %137) #10
  %186 = icmp eq %"class.v8::internal::Variable"* %185, null
  br i1 %186, label %197, label %187

187:                                              ; preds = %175, %184
  %188 = phi %"class.v8::internal::Variable"* [ %185, %184 ], [ %178, %175 ]
  %189 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %137, i64 0, i32 12
  %190 = load i8, i8* %189, align 8
  %191 = icmp eq i8 %190, 5
  br i1 %191, label %197, label %192

192:                                              ; preds = %187
  %193 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %188, i64 0, i32 6
  %194 = load i16, i16* %193, align 8
  %195 = and i16 %194, 14
  %196 = icmp eq i16 %195, 0
  br i1 %196, label %207, label %203

197:                                              ; preds = %180, %187, %184
  %198 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %137, i64 0, i32 0
  %199 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %198, align 8
  %200 = icmp eq %"class.v8::internal::Scope"* %199, %121
  br i1 %200, label %203, label %201

201:                                              ; preds = %197
  %202 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %127, align 8
  br label %135

203:                                              ; preds = %197, %192, %124
  %204 = load %"class.v8::internal::Declaration"*, %"class.v8::internal::Declaration"** %125, align 8
  %205 = getelementptr inbounds %"class.v8::internal::Declaration", %"class.v8::internal::Declaration"* %204, i64 0, i32 2
  %206 = icmp eq %"class.v8::internal::Declaration"** %205, %122
  br i1 %206, label %207, label %124

207:                                              ; preds = %84, %192, %203, %119, %99, %95, %2
  %208 = phi %"class.v8::internal::Declaration"* [ null, %2 ], [ null, %95 ], [ null, %99 ], [ null, %119 ], [ %126, %192 ], [ null, %203 ], [ %15, %84 ]
  ret %"class.v8::internal::Declaration"* %208
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::AstRawString"* @_ZN2v88internal5Scope22FindVariableDeclaredInEPS1_NS0_12VariableModeE(%"class.v8::internal::Scope"* nocapture readonly, %"class.v8::internal::Scope"* nocapture readonly, i8 zeroext) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %5 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %4, align 8
  %6 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %5, i64 -1
  %7 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %5, i64 %9
  br label %11

11:                                               ; preds = %15, %3
  %12 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %6, %3 ], [ %13, %15 ]
  %13 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %12, i64 1
  %14 = icmp ult %"struct.v8::base::TemplateHashMapEntry"* %13, %10
  br i1 %14, label %15, label %82

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %13, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %11, label %19

19:                                               ; preds = %15
  %20 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %13, null
  br i1 %20, label %82, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = add i32 %23, -1
  %25 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %26 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %25, align 8
  %27 = zext i32 %24 to i64
  br label %28

28:                                               ; preds = %21, %80
  %29 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %13, %21 ], [ %74, %80 ]
  %30 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %29 to %"class.v8::internal::AstRawString"**
  %31 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %30, align 8
  %32 = bitcast %"class.v8::internal::AstRawString"* %31 to i8*
  %33 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %31, i64 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = lshr i32 %34, 2
  %36 = and i32 %24, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %26, i64 %37
  %39 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %38, i64 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = icmp eq i8* %40, null
  %42 = icmp eq i8* %40, %32
  %43 = or i1 %41, %42
  br i1 %43, label %54, label %44

44:                                               ; preds = %28, %44
  %45 = phi i64 [ %47, %44 ], [ %37, %28 ]
  %46 = add nuw nsw i64 %45, 1
  %47 = and i64 %46, %27
  %48 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %26, i64 %47
  %49 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %48, i64 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, null
  %52 = icmp eq i8* %50, %32
  %53 = or i1 %51, %52
  br i1 %53, label %54, label %44

54:                                               ; preds = %44, %28
  %55 = phi i8* [ %40, %28 ], [ %50, %44 ]
  %56 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %38, %28 ], [ %48, %44 ]
  %57 = icmp eq i8* %55, null
  %58 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %56, null
  %59 = or i1 %57, %58
  br i1 %59, label %71, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %56, i64 0, i32 1
  %62 = bitcast i8** %61 to %"class.v8::internal::Variable"**
  %63 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %62, align 8
  %64 = icmp eq %"class.v8::internal::Variable"* %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %63, i64 0, i32 6
  %67 = load i16, i16* %66, align 8
  %68 = trunc i16 %67 to i8
  %69 = and i8 %68, 15
  %70 = icmp ugt i8 %69, %2
  br i1 %70, label %71, label %82

71:                                               ; preds = %54, %60, %65
  br label %72

72:                                               ; preds = %71, %76
  %73 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %74, %76 ], [ %29, %71 ]
  %74 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %73, i64 1
  %75 = icmp ult %"struct.v8::base::TemplateHashMapEntry"* %74, %10
  br i1 %75, label %76, label %82

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %74, i64 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %72, label %80

80:                                               ; preds = %76
  %81 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %74, null
  br i1 %81, label %82, label %28

82:                                               ; preds = %11, %65, %80, %72, %19
  %83 = phi %"class.v8::internal::AstRawString"* [ null, %19 ], [ null, %72 ], [ null, %80 ], [ %31, %65 ], [ null, %11 ]
  ret %"class.v8::internal::AstRawString"* %83
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16DeclarationScope19DeserializeReceiverEPNS0_15AstValueFactoryE(%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstValueFactory"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", align 8
  %4 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 12
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 4
  br i1 %6, label %66, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = add i8 %9, -5
  %11 = icmp ult i8 %10, 2
  %12 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %12, align 8
  %14 = ptrtoint %"class.v8::internal::DeclarationScope"* %0 to i64
  %15 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %1, i64 0, i32 3
  %16 = load %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstStringConstants"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %16, i64 0, i32 52
  %18 = bitcast %"class.v8::internal::AstRawString"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = xor i1 %11, true
  %21 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %13, i64 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %13, i64 0, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %24, %22
  %26 = icmp ult i64 %25, 48
  br i1 %26, label %27, label %29, !prof !2

27:                                               ; preds = %7
  %28 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %13, i64 48) #10
  br label %31

29:                                               ; preds = %7
  %30 = add i64 %22, 48
  store i64 %30, i64* %21, align 8
  br label %31

31:                                               ; preds = %27, %29
  %32 = phi i64 [ %28, %27 ], [ %22, %29 ]
  %33 = inttoptr i64 %32 to %"class.v8::internal::Variable"*
  %34 = inttoptr i64 %32 to i64*
  store i64 %14, i64* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %33, i64 0, i32 1
  %36 = bitcast %"class.v8::internal::AstRawString"** %35 to i64*
  store i64 %19, i64* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %33, i64 0, i32 2
  %38 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %33, i64 0, i32 4
  %39 = bitcast %"class.v8::internal::Variable"** %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #10
  store i32 -1, i32* %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %33, i64 0, i32 5
  store i32 -1, i32* %40, align 4
  %41 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %33, i64 0, i32 6
  %42 = zext i1 %20 to i16
  %43 = shl nuw nsw i16 %42, 12
  %44 = select i1 %11, i16 33, i16 34
  %45 = or i16 %43, %44
  store i16 %45, i16* %41, align 8
  %46 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 8
  store %"class.v8::internal::Variable"* %33, %"class.v8::internal::Variable"** %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 13
  %48 = load i16, i16* %47, align 1
  %49 = and i16 %48, 32
  %50 = icmp eq i16 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %31
  %52 = load i16, i16* %41, align 8
  %53 = and i16 %52, -897
  %54 = or i16 %53, 512
  store i16 %54, i16* %41, align 8
  store i32 -1, i32* %38, align 8
  br label %66

55:                                               ; preds = %31
  %56 = bitcast %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  %57 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ScopeInfo>::ObjectRef"* %3, i64 0, i32 0
  %62 = call i32 @_ZNK2v88internal9ScopeInfo24ReceiverContextSlotIndexEv(%"class.v8::internal::ScopeInfo"* nonnull %61) #10
  %63 = load i16, i16* %41, align 8
  %64 = and i16 %63, -897
  %65 = or i16 %64, 384
  store i16 %65, i16* %41, align 8
  store i32 %62, i32* %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %66

66:                                               ; preds = %2, %55, %51
  ret void
}

declare i32 @_ZNK2v88internal9ScopeInfo24ReceiverContextSlotIndexEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11ModuleScope23AllocateModuleVariablesEv(%"class.v8::internal::ModuleScope"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::SourceTextModuleDescriptor"*, %"class.v8::internal::SourceTextModuleDescriptor"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %3, i64 0, i32 4, i32 0, i32 0, i32 1, i32 0, i32 0
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %5, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  br label %22

11:                                               ; preds = %103
  %12 = load %"class.v8::internal::SourceTextModuleDescriptor"*, %"class.v8::internal::SourceTextModuleDescriptor"** %2, align 8
  br label %13

13:                                               ; preds = %11, %1
  %14 = phi %"class.v8::internal::SourceTextModuleDescriptor"* [ %12, %11 ], [ %3, %1 ]
  %15 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %14, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = icmp eq %"class.std::__1::__tree_end_node"* %16, %17
  br i1 %18, label %106, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %21 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  br label %107

22:                                               ; preds = %8, %103
  %23 = phi %"class.std::__1::__tree_end_node"* [ %5, %8 ], [ %104, %103 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.v8::internal::AstRawString"**
  %26 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %25, align 8
  %27 = bitcast %"class.v8::internal::AstRawString"* %26 to i8*
  %28 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %26, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = lshr i32 %29, 2
  %31 = load i32, i32* %9, align 8
  %32 = add i32 %31, -1
  %33 = and i32 %32, %30
  %34 = zext i32 %33 to i64
  %35 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %10, align 8
  %36 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %35, i64 %34
  %37 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %36, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, null
  %40 = icmp eq i8* %38, %27
  %41 = or i1 %39, %40
  br i1 %41, label %54, label %42

42:                                               ; preds = %22
  %43 = zext i32 %32 to i64
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ %34, %42 ], [ %47, %44 ]
  %46 = add nuw nsw i64 %45, 1
  %47 = and i64 %46, %43
  %48 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %35, i64 %47
  %49 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %48, i64 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, null
  %52 = icmp eq i8* %50, %27
  %53 = or i1 %51, %52
  br i1 %53, label %54, label %44

54:                                               ; preds = %44, %22
  %55 = phi i8* [ %38, %22 ], [ %50, %44 ]
  %56 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %36, %22 ], [ %48, %44 ]
  %57 = icmp eq i8* %55, null
  %58 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %56, null
  %59 = or i1 %57, %58
  br i1 %59, label %64, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %56, i64 0, i32 1
  %62 = bitcast i8** %61 to %"class.v8::internal::Variable"**
  %63 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %62, align 8
  br label %64

64:                                               ; preds = %54, %60
  %65 = phi %"class.v8::internal::Variable"* [ %63, %60 ], [ null, %54 ]
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 5
  %67 = bitcast %"class.std::__1::__tree_end_node"* %66 to %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**
  %68 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %67, align 8
  %69 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %68, i64 0, i32 5
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %65, i64 0, i32 6
  %72 = load i16, i16* %71, align 8
  %73 = and i16 %72, -897
  %74 = or i16 %73, 640
  store i16 %74, i16* %71, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %65, i64 0, i32 4
  store i32 %70, i32* %75, align 8
  %76 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 1, i32 0
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node_base"* %77, null
  br i1 %78, label %79, label %87

79:                                               ; preds = %64
  %80 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"class.std::__1::__tree_node_base"*
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 2
  %82 = bitcast %"class.std::__1::__tree_end_node"* %81 to %"class.std::__1::__tree_end_node"**
  %83 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %83, i64 0, i32 0
  %85 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %84, align 8
  %86 = icmp eq %"class.std::__1::__tree_node_base"* %85, %80
  br i1 %86, label %103, label %94

87:                                               ; preds = %64, %87
  %88 = phi %"class.std::__1::__tree_node_base"* [ %90, %87 ], [ %77, %64 ]
  %89 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %88, i64 0, i32 0, i32 0
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  %91 = icmp eq %"class.std::__1::__tree_node_base"* %90, null
  br i1 %91, label %92, label %87

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %88, i64 0, i32 0
  br label %103

94:                                               ; preds = %79, %94
  %95 = phi %"class.std::__1::__tree_end_node"** [ %98, %94 ], [ %82, %79 ]
  %96 = bitcast %"class.std::__1::__tree_end_node"** %95 to %"class.std::__1::__tree_node_base"**
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %97, i64 0, i32 2
  %99 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %98, align 8
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %99, i64 0, i32 0
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  %102 = icmp eq %"class.std::__1::__tree_node_base"* %101, %97
  br i1 %102, label %103, label %94

103:                                              ; preds = %94, %79, %92
  %104 = phi %"class.std::__1::__tree_end_node"* [ %93, %92 ], [ %83, %79 ], [ %99, %94 ]
  %105 = icmp eq %"class.std::__1::__tree_end_node"* %104, %6
  br i1 %105, label %11, label %22

106:                                              ; preds = %188, %13
  ret void

107:                                              ; preds = %19, %188
  %108 = phi %"class.std::__1::__tree_end_node"* [ %16, %19 ], [ %189, %188 ]
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %108, i64 4
  %110 = bitcast %"class.std::__1::__tree_end_node"* %109 to %"class.v8::internal::AstRawString"**
  %111 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %110, align 8
  %112 = bitcast %"class.v8::internal::AstRawString"* %111 to i8*
  %113 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %111, i64 0, i32 2
  %114 = load i32, i32* %113, align 8
  %115 = lshr i32 %114, 2
  %116 = load i32, i32* %20, align 8
  %117 = add i32 %116, -1
  %118 = and i32 %117, %115
  %119 = zext i32 %118 to i64
  %120 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %21, align 8
  %121 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %120, i64 %119
  %122 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %121, i64 0, i32 0
  %123 = load i8*, i8** %122, align 8
  %124 = icmp eq i8* %123, null
  %125 = icmp eq i8* %123, %112
  %126 = or i1 %124, %125
  br i1 %126, label %139, label %127

127:                                              ; preds = %107
  %128 = zext i32 %117 to i64
  br label %129

129:                                              ; preds = %129, %127
  %130 = phi i64 [ %119, %127 ], [ %132, %129 ]
  %131 = add nuw nsw i64 %130, 1
  %132 = and i64 %131, %128
  %133 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %120, i64 %132
  %134 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %133, i64 0, i32 0
  %135 = load i8*, i8** %134, align 8
  %136 = icmp eq i8* %135, null
  %137 = icmp eq i8* %135, %112
  %138 = or i1 %136, %137
  br i1 %138, label %139, label %129

139:                                              ; preds = %129, %107
  %140 = phi i8* [ %123, %107 ], [ %135, %129 ]
  %141 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %121, %107 ], [ %133, %129 ]
  %142 = icmp eq i8* %140, null
  %143 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %141, null
  %144 = or i1 %142, %143
  br i1 %144, label %149, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %141, i64 0, i32 1
  %147 = bitcast i8** %146 to %"class.v8::internal::Variable"**
  %148 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %147, align 8
  br label %149

149:                                              ; preds = %139, %145
  %150 = phi %"class.v8::internal::Variable"* [ %148, %145 ], [ null, %139 ]
  %151 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %108, i64 5
  %152 = bitcast %"class.std::__1::__tree_end_node"* %151 to %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**
  %153 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %152, align 8
  %154 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %153, i64 0, i32 5
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %150, i64 0, i32 6
  %157 = load i16, i16* %156, align 8
  %158 = and i16 %157, -897
  %159 = or i16 %158, 640
  store i16 %159, i16* %156, align 8
  %160 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %150, i64 0, i32 4
  store i32 %155, i32* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %108, i64 1, i32 0
  %162 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %161, align 8
  %163 = icmp eq %"class.std::__1::__tree_node_base"* %162, null
  br i1 %163, label %164, label %172

164:                                              ; preds = %149
  %165 = bitcast %"class.std::__1::__tree_end_node"* %108 to %"class.std::__1::__tree_node_base"*
  %166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %108, i64 2
  %167 = bitcast %"class.std::__1::__tree_end_node"* %166 to %"class.std::__1::__tree_end_node"**
  %168 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %167, align 8
  %169 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %168, i64 0, i32 0
  %170 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %169, align 8
  %171 = icmp eq %"class.std::__1::__tree_node_base"* %170, %165
  br i1 %171, label %188, label %179

172:                                              ; preds = %149, %172
  %173 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %162, %149 ]
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %173, i64 0, i32 0, i32 0
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %177, label %172

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %173, i64 0, i32 0
  br label %188

179:                                              ; preds = %164, %179
  %180 = phi %"class.std::__1::__tree_end_node"** [ %183, %179 ], [ %167, %164 ]
  %181 = bitcast %"class.std::__1::__tree_end_node"** %180 to %"class.std::__1::__tree_node_base"**
  %182 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %181, align 8
  %183 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %182, i64 0, i32 2
  %184 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %183, align 8
  %185 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %184, i64 0, i32 0
  %186 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %185, align 8
  %187 = icmp eq %"class.std::__1::__tree_node_base"* %186, %182
  br i1 %187, label %188, label %179

188:                                              ; preds = %179, %164, %177
  %189 = phi %"class.std::__1::__tree_end_node"* [ %178, %177 ], [ %168, %164 ], [ %184, %179 ]
  %190 = icmp eq %"class.std::__1::__tree_end_node"* %189, %17
  br i1 %190, label %106, label %107
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10ClassScope19ResolvePrivateNamesEPNS0_9ParseInfoE(%"class.v8::internal::ClassScope"*, %"class.v8::internal::ParseInfo"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 2, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -2
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %107, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"struct.v8::internal::ClassScope::RareData"*
  %9 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %9, align 8
  %11 = icmp eq %"class.v8::internal::VariableProxy"* %10, null
  br i1 %11, label %107, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %10, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 512
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %30, label %17

17:                                               ; preds = %12, %22
  %18 = phi %"class.v8::internal::VariableProxy"* [ %20, %22 ], [ %10, %12 ]
  %19 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %18, i64 0, i32 2
  %20 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %19, align 8
  %21 = icmp eq %"class.v8::internal::VariableProxy"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %20, i64 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 512
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %17

27:                                               ; preds = %22, %17
  %28 = phi %"class.v8::internal::VariableProxy"* [ null, %17 ], [ %20, %22 ]
  %29 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %18, i64 0, i32 2
  br label %30

30:                                               ; preds = %27, %12
  %31 = phi %"class.v8::internal::VariableProxy"* [ %10, %12 ], [ %28, %27 ]
  %32 = phi %"class.v8::internal::VariableProxy"** [ %9, %12 ], [ %29, %27 ]
  %33 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %8, i64 0, i32 0, i32 1
  %34 = load %"class.v8::internal::VariableProxy"**, %"class.v8::internal::VariableProxy"*** %33, align 8
  %35 = icmp eq %"class.v8::internal::VariableProxy"** %32, %34
  br i1 %35, label %106, label %36

36:                                               ; preds = %30, %99
  %37 = phi %"class.v8::internal::VariableProxy"* [ %100, %99 ], [ %31, %30 ]
  %38 = phi %"class.v8::internal::VariableProxy"** [ %101, %99 ], [ %32, %30 ]
  %39 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal10ClassScope17LookupPrivateNameEPNS0_13VariableProxyE(%"class.v8::internal::ClassScope"* %0, %"class.v8::internal::VariableProxy"* %37)
  %40 = icmp eq %"class.v8::internal::Variable"* %39, null
  br i1 %40, label %41, label %76

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %37, i64 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %37, i64 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, 256
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %37, i64 0, i32 1
  br i1 %47, label %53, label %49

49:                                               ; preds = %41
  %50 = bitcast %union.anon* %48 to %"class.v8::internal::Variable"**
  %51 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %51, i64 0, i32 1
  br label %55

53:                                               ; preds = %41
  %54 = getelementptr inbounds %union.anon, %union.anon* %48, i64 0, i32 0
  br label %55

55:                                               ; preds = %49, %53
  %56 = phi %"class.v8::internal::AstRawString"** [ %52, %49 ], [ %54, %53 ]
  %57 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %57, i64 0, i32 3
  %59 = load i8, i8* %58, align 4, !range !5
  %60 = icmp eq i8 %59, 0
  %61 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %57, i64 0, i32 1, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = trunc i64 %62 to i32
  %64 = sdiv i32 %63, 2
  %65 = select i1 %60, i32 %64, i32 %63
  %66 = add nsw i32 %65, %43
  %67 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %1, i64 0, i32 2
  %68 = load %"class.v8::internal::UnoptimizedCompileState"*, %"class.v8::internal::UnoptimizedCompileState"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %68, i64 0, i32 3
  br i1 %47, label %74, label %70

70:                                               ; preds = %55
  %71 = bitcast %union.anon* %48 to %"class.v8::internal::Variable"**
  %72 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %72, i64 0, i32 1
  br label %103

74:                                               ; preds = %55
  %75 = getelementptr inbounds %union.anon, %union.anon* %48, i64 0, i32 0
  br label %103

76:                                               ; preds = %36
  tail call void @_ZN2v88internal13VariableProxy6BindToEPNS0_8VariableE(%"class.v8::internal::VariableProxy"* %37, %"class.v8::internal::Variable"* nonnull %39) #10
  %77 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %38, align 8
  %78 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %77, i64 0, i32 2
  %79 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %78, align 8
  %80 = icmp eq %"class.v8::internal::VariableProxy"* %79, null
  br i1 %80, label %99, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %79, i64 0, i32 0, i32 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, 512
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %99, label %86

86:                                               ; preds = %81, %91
  %87 = phi %"class.v8::internal::VariableProxy"* [ %89, %91 ], [ %79, %81 ]
  %88 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %87, i64 0, i32 2
  %89 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %88, align 8
  %90 = icmp eq %"class.v8::internal::VariableProxy"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %89, i64 0, i32 0, i32 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = and i32 %93, 512
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %86

96:                                               ; preds = %91, %86
  %97 = phi %"class.v8::internal::VariableProxy"* [ null, %86 ], [ %89, %91 ]
  %98 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %87, i64 0, i32 2
  br label %99

99:                                               ; preds = %96, %76, %81
  %100 = phi %"class.v8::internal::VariableProxy"* [ null, %76 ], [ %79, %81 ], [ %97, %96 ]
  %101 = phi %"class.v8::internal::VariableProxy"** [ %78, %76 ], [ %78, %81 ], [ %98, %96 ]
  %102 = icmp eq %"class.v8::internal::VariableProxy"** %101, %34
  br i1 %102, label %106, label %36

103:                                              ; preds = %70, %74
  %104 = phi %"class.v8::internal::AstRawString"** [ %73, %70 ], [ %75, %74 ]
  %105 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %104, align 8
  tail call void @_ZN2v88internal30PendingCompilationErrorHandler15ReportMessageAtEiiNS0_15MessageTemplateEPKNS0_12AstRawStringE(%"class.v8::internal::PendingCompilationErrorHandler"* %69, i32 %43, i32 %66, i32 274, %"class.v8::internal::AstRawString"* %105) #10
  br label %107

106:                                              ; preds = %99, %30
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %9, align 8
  store %"class.v8::internal::VariableProxy"** %9, %"class.v8::internal::VariableProxy"*** %33, align 8
  br label %107

107:                                              ; preds = %103, %106, %2, %7
  %108 = phi i1 [ true, %7 ], [ true, %2 ], [ true, %106 ], [ false, %103 ]
  ret i1 %108
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Scope27ResolveVariablesRecursivelyEPS1_(%"class.v8::internal::Scope"*, %"class.v8::internal::Scope"* readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 13
  %4 = load i16, i16* %3, align 1
  %5 = and i16 %4, 256
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %158, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 14
  %9 = bitcast [5 x i8]* %8 to i16*
  %10 = load i16, i16* %9, align 1
  %11 = trunc i16 %10 to i8
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %158

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 12
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 4
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 0
  %19 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %18, align 8
  br label %20

20:                                               ; preds = %17, %13
  %21 = phi %"class.v8::internal::Scope"* [ %1, %13 ], [ %19, %17 ]
  %22 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 5, i32 0
  %23 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %22, align 8
  %24 = icmp eq %"class.v8::internal::VariableProxy"* %23, null
  br i1 %24, label %43, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %23, i64 0, i32 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 512
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %43, label %30

30:                                               ; preds = %25, %35
  %31 = phi %"class.v8::internal::VariableProxy"* [ %33, %35 ], [ %23, %25 ]
  %32 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %31, i64 0, i32 2
  %33 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %32, align 8
  %34 = icmp eq %"class.v8::internal::VariableProxy"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %33, i64 0, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 512
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %30

40:                                               ; preds = %35, %30
  %41 = phi %"class.v8::internal::VariableProxy"* [ null, %30 ], [ %33, %35 ]
  %42 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %31, i64 0, i32 2
  br label %43

43:                                               ; preds = %40, %20, %25
  %44 = phi %"class.v8::internal::VariableProxy"* [ null, %20 ], [ %23, %25 ], [ %41, %40 ]
  %45 = phi %"class.v8::internal::VariableProxy"** [ %22, %20 ], [ %22, %25 ], [ %42, %40 ]
  %46 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 5, i32 1
  %47 = load %"class.v8::internal::VariableProxy"**, %"class.v8::internal::VariableProxy"*** %46, align 8
  %48 = icmp eq %"class.v8::internal::VariableProxy"** %45, %47
  br i1 %48, label %226, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 0
  br label %51

51:                                               ; preds = %49, %154
  %52 = phi %"class.v8::internal::VariableProxy"* [ %44, %49 ], [ %155, %154 ]
  %53 = phi %"class.v8::internal::VariableProxy"** [ %45, %49 ], [ %156, %154 ]
  %54 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %50, align 8
  %55 = icmp eq %"class.v8::internal::Scope"* %54, %21
  br i1 %55, label %131, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %52, i64 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %52, i64 0, i32 1
  %59 = bitcast %union.anon* %58 to %"class.v8::internal::Variable"**
  %60 = getelementptr inbounds %union.anon, %union.anon* %58, i64 0, i32 0
  br label %61

61:                                               ; preds = %127, %56
  %62 = phi %"class.v8::internal::Scope"* [ %54, %56 ], [ %129, %127 ]
  %63 = load i32, i32* %57, align 4
  %64 = and i32 %63, 256
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %61
  %67 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %59, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %67, i64 0, i32 1
  br label %69

69:                                               ; preds = %66, %61
  %70 = phi %"class.v8::internal::AstRawString"** [ %68, %66 ], [ %60, %61 ]
  %71 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %70, align 8
  %72 = bitcast %"class.v8::internal::AstRawString"* %71 to i8*
  %73 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %71, i64 0, i32 2
  %74 = load i32, i32* %73, align 8
  %75 = lshr i32 %74, 2
  %76 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %62, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %77 = load i32, i32* %76, align 8
  %78 = add i32 %77, -1
  %79 = and i32 %78, %75
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %62, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %82 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %81, align 8
  %83 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %82, i64 %80
  %84 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %83, i64 0, i32 0
  %85 = load i8*, i8** %84, align 8
  %86 = icmp eq i8* %85, null
  %87 = icmp eq i8* %85, %72
  %88 = or i1 %86, %87
  br i1 %88, label %101, label %89

89:                                               ; preds = %69
  %90 = zext i32 %78 to i64
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ %80, %89 ], [ %94, %91 ]
  %93 = add nuw nsw i64 %92, 1
  %94 = and i64 %93, %90
  %95 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %82, i64 %94
  %96 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %95, i64 0, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = icmp eq i8* %97, null
  %99 = icmp eq i8* %97, %72
  %100 = or i1 %98, %99
  br i1 %100, label %101, label %91

101:                                              ; preds = %91, %69
  %102 = phi i8* [ %85, %69 ], [ %97, %91 ]
  %103 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %83, %69 ], [ %95, %91 ]
  %104 = icmp eq i8* %102, null
  %105 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %103, null
  %106 = or i1 %104, %105
  br i1 %106, label %127, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %103, i64 0, i32 1
  %109 = bitcast i8** %108 to %"class.v8::internal::Variable"**
  %110 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %109, align 8
  %111 = icmp eq %"class.v8::internal::Variable"* %110, null
  br i1 %111, label %127, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %110, i64 0, i32 6
  %114 = load i16, i16* %113, align 8
  %115 = or i16 %114, 2048
  store i16 %115, i16* %113, align 8
  %116 = trunc i16 %114 to i8
  %117 = and i8 %116, 15
  %118 = add nsw i8 %117, -4
  %119 = icmp ult i8 %118, 3
  br i1 %119, label %127, label %120

120:                                              ; preds = %112
  %121 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %110, i64 0, i32 6
  %122 = or i16 %114, 3072
  store i16 %122, i16* %121, align 8
  %123 = load i32, i32* %57, align 4
  %124 = trunc i32 %123 to i8
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %131

126:                                              ; preds = %120
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* nonnull %110) #10
  br label %131

127:                                              ; preds = %112, %107, %101
  %128 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %62, i64 0, i32 0
  %129 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %128, align 8
  %130 = icmp eq %"class.v8::internal::Scope"* %129, %21
  br i1 %130, label %131, label %61

131:                                              ; preds = %127, %51, %120, %126
  %132 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %53, align 8
  %133 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %132, i64 0, i32 2
  %134 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %133, align 8
  %135 = icmp eq %"class.v8::internal::VariableProxy"* %134, null
  br i1 %135, label %154, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %134, i64 0, i32 0, i32 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = and i32 %138, 512
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %154, label %141

141:                                              ; preds = %136, %146
  %142 = phi %"class.v8::internal::VariableProxy"* [ %144, %146 ], [ %134, %136 ]
  %143 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %142, i64 0, i32 2
  %144 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %143, align 8
  %145 = icmp eq %"class.v8::internal::VariableProxy"* %144, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %144, i64 0, i32 0, i32 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = and i32 %148, 512
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %141

151:                                              ; preds = %146, %141
  %152 = phi %"class.v8::internal::VariableProxy"* [ null, %141 ], [ %144, %146 ]
  %153 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %142, i64 0, i32 2
  br label %154

154:                                              ; preds = %151, %131, %136
  %155 = phi %"class.v8::internal::VariableProxy"* [ null, %131 ], [ %134, %136 ], [ %152, %151 ]
  %156 = phi %"class.v8::internal::VariableProxy"** [ %133, %131 ], [ %133, %136 ], [ %153, %151 ]
  %157 = icmp eq %"class.v8::internal::VariableProxy"** %156, %47
  br i1 %157, label %226, label %51

158:                                              ; preds = %2, %7
  %159 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 5, i32 0
  %160 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %159, align 8
  %161 = icmp eq %"class.v8::internal::VariableProxy"* %160, null
  br i1 %161, label %180, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %160, i64 0, i32 0, i32 0, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = and i32 %164, 512
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %180, label %167

167:                                              ; preds = %162, %172
  %168 = phi %"class.v8::internal::VariableProxy"* [ %170, %172 ], [ %160, %162 ]
  %169 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %168, i64 0, i32 2
  %170 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %169, align 8
  %171 = icmp eq %"class.v8::internal::VariableProxy"* %170, null
  br i1 %171, label %177, label %172

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %170, i64 0, i32 0, i32 0, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = and i32 %174, 512
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %167

177:                                              ; preds = %172, %167
  %178 = phi %"class.v8::internal::VariableProxy"* [ null, %167 ], [ %170, %172 ]
  %179 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %168, i64 0, i32 2
  br label %180

180:                                              ; preds = %177, %158, %162
  %181 = phi %"class.v8::internal::VariableProxy"* [ null, %158 ], [ %160, %162 ], [ %178, %177 ]
  %182 = phi %"class.v8::internal::VariableProxy"** [ %159, %158 ], [ %159, %162 ], [ %179, %177 ]
  %183 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 5, i32 1
  %184 = load %"class.v8::internal::VariableProxy"**, %"class.v8::internal::VariableProxy"*** %183, align 8
  %185 = icmp eq %"class.v8::internal::VariableProxy"** %182, %184
  br i1 %185, label %186, label %190

186:                                              ; preds = %216, %180
  %187 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 1
  %188 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %187, align 8
  %189 = icmp eq %"class.v8::internal::Scope"* %188, null
  br i1 %189, label %226, label %220

190:                                              ; preds = %180, %216
  %191 = phi %"class.v8::internal::VariableProxy"* [ %217, %216 ], [ %181, %180 ]
  %192 = phi %"class.v8::internal::VariableProxy"** [ %218, %216 ], [ %182, %180 ]
  %193 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope6LookupILNS1_15ScopeLookupModeE0EEEPNS0_8VariableEPNS0_13VariableProxyEPS1_S8_S8_b(%"class.v8::internal::VariableProxy"* %191, %"class.v8::internal::Scope"* %0, %"class.v8::internal::Scope"* null, %"class.v8::internal::Scope"* null, i1 zeroext false) #10
  tail call void @_ZN2v88internal5Scope9ResolveToEPNS0_13VariableProxyEPNS0_8VariableE(%"class.v8::internal::Scope"* %0, %"class.v8::internal::VariableProxy"* %191, %"class.v8::internal::Variable"* %193) #10
  %194 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %192, align 8
  %195 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %194, i64 0, i32 2
  %196 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %195, align 8
  %197 = icmp eq %"class.v8::internal::VariableProxy"* %196, null
  br i1 %197, label %216, label %198

198:                                              ; preds = %190
  %199 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %196, i64 0, i32 0, i32 0, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = and i32 %200, 512
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %216, label %203

203:                                              ; preds = %198, %208
  %204 = phi %"class.v8::internal::VariableProxy"* [ %206, %208 ], [ %196, %198 ]
  %205 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %204, i64 0, i32 2
  %206 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %205, align 8
  %207 = icmp eq %"class.v8::internal::VariableProxy"* %206, null
  br i1 %207, label %213, label %208

208:                                              ; preds = %203
  %209 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %206, i64 0, i32 0, i32 0, i32 1
  %210 = load i32, i32* %209, align 4
  %211 = and i32 %210, 512
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %203

213:                                              ; preds = %208, %203
  %214 = phi %"class.v8::internal::VariableProxy"* [ null, %203 ], [ %206, %208 ]
  %215 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %204, i64 0, i32 2
  br label %216

216:                                              ; preds = %213, %190, %198
  %217 = phi %"class.v8::internal::VariableProxy"* [ null, %190 ], [ %196, %198 ], [ %214, %213 ]
  %218 = phi %"class.v8::internal::VariableProxy"** [ %195, %190 ], [ %195, %198 ], [ %215, %213 ]
  %219 = icmp eq %"class.v8::internal::VariableProxy"** %218, %184
  br i1 %219, label %186, label %190

220:                                              ; preds = %186, %220
  %221 = phi %"class.v8::internal::Scope"* [ %224, %220 ], [ %188, %186 ]
  %222 = tail call zeroext i1 @_ZN2v88internal5Scope27ResolveVariablesRecursivelyEPS1_(%"class.v8::internal::Scope"* nonnull %221, %"class.v8::internal::Scope"* %1)
  %223 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %221, i64 0, i32 2
  %224 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %223, align 8
  %225 = icmp eq %"class.v8::internal::Scope"* %224, null
  br i1 %225, label %226, label %220

226:                                              ; preds = %154, %220, %43, %186
  ret i1 true
}

declare %"class.v8::internal::DeclarationScope"* @_ZNK2v88internal9ParseInfo5scopeEv(%"class.v8::internal::ParseInfo"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Scope28AllocateVariablesRecursivelyEv(%"class.v8::internal::Scope"*) local_unnamed_addr #0 align 2 {
  br label %2

2:                                                ; preds = %568, %1
  %3 = phi %"class.v8::internal::Scope"* [ %0, %1 ], [ %569, %568 ]
  %4 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 13
  %5 = load i16, i16* %4, align 1
  %6 = and i16 %5, 256
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %301, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 14
  %10 = bitcast [5 x i8]* %9 to i16*
  %11 = load i16, i16* %10, align 1
  %12 = trunc i16 %11 to i8
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %550, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 12
  %16 = load i8, i8* %15, align 8
  %17 = icmp eq i8 %16, 2
  br i1 %17, label %18, label %226

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 1, i32 5
  %20 = bitcast %"class.v8::base::ThreadedListBase.18"* %19 to %"class.v8::internal::Variable"**
  %21 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %20, align 8
  %22 = icmp eq %"class.v8::internal::Variable"* %21, null
  br i1 %22, label %63, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %21, i64 0, i32 1
  %25 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %25, i64 0, i32 1, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  %29 = icmp eq i32 %28, 0
  %30 = and i16 %5, 64
  %31 = icmp eq i16 %30, 0
  %32 = or i1 %31, %29
  br i1 %32, label %44, label %33

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %21, i64 0, i32 6
  %35 = load i16, i16* %34, align 8
  %36 = or i16 %35, 2048
  store i16 %36, i16* %34, align 8
  %37 = load i16, i16* %4, align 1
  %38 = and i16 %37, 64
  %39 = icmp eq i16 %38, 0
  %40 = and i16 %35, 112
  %41 = icmp eq i16 %40, 32
  %42 = or i1 %41, %39
  br i1 %42, label %44, label %43

43:                                               ; preds = %33
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* nonnull %21) #10
  br label %44

44:                                               ; preds = %43, %33, %23
  %45 = tail call zeroext i1 @_ZNK2v88internal8Variable22IsGlobalObjectPropertyEv(%"class.v8::internal::Variable"* nonnull %21) #10
  br i1 %45, label %62, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %21, i64 0, i32 6
  %48 = load i16, i16* %47, align 8
  %49 = and i16 %48, 2048
  %50 = icmp eq i16 %49, 0
  br i1 %50, label %62, label %51

51:                                               ; preds = %46
  %52 = load i16, i16* %10, align 1
  %53 = and i16 %52, 16
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %62

55:                                               ; preds = %51
  %56 = load i16, i16* %4, align 1
  %57 = and i16 %56, 1
  %58 = icmp eq i16 %57, 0
  %59 = and i16 %52, 1
  %60 = icmp ne i16 %59, 0
  %61 = and i1 %60, %58
  br label %63

62:                                               ; preds = %51, %46, %44
  store %"class.v8::internal::Variable"* null, %"class.v8::internal::Variable"** %20, align 8
  br label %63

63:                                               ; preds = %62, %55, %18
  %64 = phi i1 [ false, %62 ], [ %61, %55 ], [ false, %18 ]
  %65 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 1
  %66 = bitcast %"class.v8::internal::Scope"* %65 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %69, label %226

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 1, i32 1
  %71 = bitcast %"class.v8::internal::Scope"** %70 to %"class.v8::internal::Variable"***
  %72 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 11
  %73 = sext i32 %67 to i64
  br i1 %64, label %74, label %151

74:                                               ; preds = %69, %149
  %75 = phi i64 [ %76, %149 ], [ %73, %69 ]
  %76 = add nsw i64 %75, -1
  %77 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %71, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %77, i64 %76
  %79 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %79, i64 0, i32 6
  %81 = load i16, i16* %80, align 8
  %82 = or i16 %81, 2048
  store i16 %82, i16* %80, align 8
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* %79) #10
  %83 = load i16, i16* %80, align 8
  %84 = or i16 %83, 1024
  store i16 %84, i16* %80, align 8
  %85 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %79, i64 0, i32 1
  %86 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %86, i64 0, i32 1, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = trunc i64 %88 to i32
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %108, label %91

91:                                               ; preds = %74
  %92 = load i16, i16* %4, align 1
  %93 = and i16 %92, 64
  %94 = icmp eq i16 %93, 0
  br i1 %94, label %95, label %99

95:                                               ; preds = %91
  %96 = load i8, i8* %15, align 8
  %97 = and i8 %96, -2
  %98 = icmp eq i8 %97, 4
  br i1 %98, label %99, label %108

99:                                               ; preds = %95, %91
  %100 = or i16 %83, 3072
  store i16 %100, i16* %80, align 8
  %101 = load i16, i16* %4, align 1
  %102 = and i16 %101, 64
  %103 = icmp eq i16 %102, 0
  %104 = and i16 %83, 112
  %105 = icmp eq i16 %104, 32
  %106 = or i1 %105, %103
  br i1 %106, label %108, label %107

107:                                              ; preds = %99
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* %79) #10
  br label %108

108:                                              ; preds = %107, %99, %95, %74
  %109 = tail call zeroext i1 @_ZNK2v88internal8Variable22IsGlobalObjectPropertyEv(%"class.v8::internal::Variable"* %79) #10
  br i1 %109, label %149, label %110

110:                                              ; preds = %108
  %111 = load i16, i16* %80, align 8
  %112 = and i16 %111, 2048
  %113 = icmp eq i16 %112, 0
  br i1 %113, label %149, label %114

114:                                              ; preds = %110
  %115 = load i16, i16* %4, align 1
  %116 = trunc i16 %115 to i8
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %139, label %118

118:                                              ; preds = %114
  %119 = trunc i16 %111 to i8
  %120 = and i8 %119, 15
  %121 = icmp eq i8 %120, 3
  br i1 %121, label %131, label %122

122:                                              ; preds = %118
  %123 = load i8, i8* %15, align 8
  switch i8 %123, label %126 [
    i8 5, label %139
    i8 4, label %124
    i8 1, label %124
  ]

124:                                              ; preds = %122, %122
  %125 = icmp ult i8 %120, 2
  br i1 %125, label %139, label %126

126:                                              ; preds = %124, %122
  %127 = and i16 %111, 1024
  %128 = and i16 %115, 64
  %129 = or i16 %128, %127
  %130 = icmp eq i16 %129, 0
  br i1 %130, label %131, label %139

131:                                              ; preds = %126, %118
  %132 = and i16 %111, 896
  %133 = icmp eq i16 %132, 0
  br i1 %133, label %134, label %149

134:                                              ; preds = %131
  %135 = and i16 %111, -897
  %136 = or i16 %135, 128
  store i16 %136, i16* %80, align 8
  %137 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %79, i64 0, i32 4
  %138 = trunc i64 %76 to i32
  store i32 %138, i32* %137, align 8
  br label %149

139:                                              ; preds = %126, %124, %122, %114
  %140 = and i16 %111, 896
  %141 = icmp eq i16 %140, 0
  br i1 %141, label %142, label %149

142:                                              ; preds = %139
  %143 = load i32, i32* %72, align 4
  %144 = add nsw i32 %143, 1
  store i32 %144, i32* %72, align 4
  %145 = load i16, i16* %80, align 8
  %146 = and i16 %145, -897
  %147 = or i16 %146, 384
  store i16 %147, i16* %80, align 8
  %148 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %79, i64 0, i32 4
  store i32 %143, i32* %148, align 8
  br label %149

149:                                              ; preds = %142, %139, %134, %131, %110, %108
  %150 = icmp sgt i64 %76, 0
  br i1 %150, label %74, label %226

151:                                              ; preds = %69, %224
  %152 = phi i64 [ %153, %224 ], [ %73, %69 ]
  %153 = add nsw i64 %152, -1
  %154 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %71, align 8
  %155 = getelementptr inbounds %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %154, i64 %153
  %156 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %155, align 8
  %157 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %156, i64 0, i32 1
  %158 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %157, align 8
  %159 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %158, i64 0, i32 1, i32 1
  %160 = load i64, i64* %159, align 8
  %161 = trunc i64 %160 to i32
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %182, label %163

163:                                              ; preds = %151
  %164 = load i16, i16* %4, align 1
  %165 = and i16 %164, 64
  %166 = icmp eq i16 %165, 0
  br i1 %166, label %167, label %171

167:                                              ; preds = %163
  %168 = load i8, i8* %15, align 8
  %169 = and i8 %168, -2
  %170 = icmp eq i8 %169, 4
  br i1 %170, label %171, label %182

171:                                              ; preds = %167, %163
  %172 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %156, i64 0, i32 6
  %173 = load i16, i16* %172, align 8
  %174 = or i16 %173, 2048
  store i16 %174, i16* %172, align 8
  %175 = load i16, i16* %4, align 1
  %176 = and i16 %175, 64
  %177 = icmp eq i16 %176, 0
  %178 = and i16 %173, 112
  %179 = icmp eq i16 %178, 32
  %180 = or i1 %179, %177
  br i1 %180, label %182, label %181

181:                                              ; preds = %171
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* %156) #10
  br label %182

182:                                              ; preds = %181, %171, %167, %151
  %183 = tail call zeroext i1 @_ZNK2v88internal8Variable22IsGlobalObjectPropertyEv(%"class.v8::internal::Variable"* %156) #10
  br i1 %183, label %224, label %184

184:                                              ; preds = %182
  %185 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %156, i64 0, i32 6
  %186 = load i16, i16* %185, align 8
  %187 = and i16 %186, 2048
  %188 = icmp eq i16 %187, 0
  br i1 %188, label %224, label %189

189:                                              ; preds = %184
  %190 = load i16, i16* %4, align 1
  %191 = trunc i16 %190 to i8
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %206, label %193

193:                                              ; preds = %189
  %194 = trunc i16 %186 to i8
  %195 = and i8 %194, 15
  %196 = icmp eq i8 %195, 3
  br i1 %196, label %216, label %197

197:                                              ; preds = %193
  %198 = load i8, i8* %15, align 8
  switch i8 %198, label %201 [
    i8 5, label %206
    i8 4, label %199
    i8 1, label %199
  ]

199:                                              ; preds = %197, %197
  %200 = icmp ult i8 %195, 2
  br i1 %200, label %206, label %201

201:                                              ; preds = %199, %197
  %202 = and i16 %186, 1024
  %203 = and i16 %190, 64
  %204 = or i16 %203, %202
  %205 = icmp eq i16 %204, 0
  br i1 %205, label %216, label %206

206:                                              ; preds = %201, %199, %197, %189
  %207 = and i16 %186, 896
  %208 = icmp eq i16 %207, 0
  br i1 %208, label %209, label %224

209:                                              ; preds = %206
  %210 = load i32, i32* %72, align 4
  %211 = add nsw i32 %210, 1
  store i32 %211, i32* %72, align 4
  %212 = load i16, i16* %185, align 8
  %213 = and i16 %212, -897
  %214 = or i16 %213, 384
  store i16 %214, i16* %185, align 8
  %215 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %156, i64 0, i32 4
  store i32 %210, i32* %215, align 8
  br label %224

216:                                              ; preds = %201, %193
  %217 = and i16 %186, 896
  %218 = icmp eq i16 %217, 0
  br i1 %218, label %219, label %224

219:                                              ; preds = %216
  %220 = and i16 %186, -897
  %221 = or i16 %220, 128
  store i16 %221, i16* %185, align 8
  %222 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %156, i64 0, i32 4
  %223 = trunc i64 %153 to i32
  store i32 %223, i32* %222, align 8
  br label %224

224:                                              ; preds = %219, %216, %209, %206, %184, %182
  %225 = icmp sgt i64 %153, 0
  br i1 %225, label %151, label %226

226:                                              ; preds = %224, %149, %63, %14
  %227 = load i16, i16* %10, align 1
  %228 = and i16 %227, 4096
  %229 = icmp eq i16 %228, 0
  br i1 %229, label %301, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 1, i32 3, i32 0, i32 0, i32 0, i32 2
  %232 = bitcast i32* %231 to %"class.v8::internal::Variable"**
  %233 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %232, align 8
  %234 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %233, i64 0, i32 1
  %235 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %234, align 8
  %236 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %235, i64 0, i32 1, i32 1
  %237 = load i64, i64* %236, align 8
  %238 = trunc i64 %237 to i32
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %259, label %240

240:                                              ; preds = %230
  %241 = load i16, i16* %4, align 1
  %242 = and i16 %241, 64
  %243 = icmp eq i16 %242, 0
  br i1 %243, label %244, label %248

244:                                              ; preds = %240
  %245 = load i8, i8* %15, align 8
  %246 = and i8 %245, -2
  %247 = icmp eq i8 %246, 4
  br i1 %247, label %248, label %259

248:                                              ; preds = %244, %240
  %249 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %233, i64 0, i32 6
  %250 = load i16, i16* %249, align 8
  %251 = or i16 %250, 2048
  store i16 %251, i16* %249, align 8
  %252 = load i16, i16* %4, align 1
  %253 = and i16 %252, 64
  %254 = icmp eq i16 %253, 0
  %255 = and i16 %250, 112
  %256 = icmp eq i16 %255, 32
  %257 = or i1 %256, %254
  br i1 %257, label %259, label %258

258:                                              ; preds = %248
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* %233) #10
  br label %259

259:                                              ; preds = %258, %248, %244, %230
  %260 = tail call zeroext i1 @_ZNK2v88internal8Variable22IsGlobalObjectPropertyEv(%"class.v8::internal::Variable"* %233) #10
  br i1 %260, label %301, label %261

261:                                              ; preds = %259
  %262 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %233, i64 0, i32 6
  %263 = load i16, i16* %262, align 8
  %264 = and i16 %263, 2048
  %265 = icmp eq i16 %264, 0
  br i1 %265, label %301, label %266

266:                                              ; preds = %261
  %267 = load i16, i16* %4, align 1
  %268 = trunc i16 %267 to i8
  %269 = icmp slt i8 %268, 0
  br i1 %269, label %283, label %270

270:                                              ; preds = %266
  %271 = trunc i16 %263 to i8
  %272 = and i8 %271, 15
  %273 = icmp eq i8 %272, 3
  br i1 %273, label %294, label %274

274:                                              ; preds = %270
  %275 = load i8, i8* %15, align 8
  switch i8 %275, label %278 [
    i8 5, label %283
    i8 4, label %276
    i8 1, label %276
  ]

276:                                              ; preds = %274, %274
  %277 = icmp ult i8 %272, 2
  br i1 %277, label %283, label %278

278:                                              ; preds = %276, %274
  %279 = and i16 %263, 1024
  %280 = and i16 %267, 64
  %281 = or i16 %280, %279
  %282 = icmp eq i16 %281, 0
  br i1 %282, label %294, label %283

283:                                              ; preds = %278, %276, %274, %266
  %284 = and i16 %263, 896
  %285 = icmp eq i16 %284, 0
  br i1 %285, label %286, label %301

286:                                              ; preds = %283
  %287 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 11
  %288 = load i32, i32* %287, align 4
  %289 = add nsw i32 %288, 1
  store i32 %289, i32* %287, align 4
  %290 = load i16, i16* %262, align 8
  %291 = and i16 %290, -897
  %292 = or i16 %291, 384
  store i16 %292, i16* %262, align 8
  %293 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %233, i64 0, i32 4
  store i32 %288, i32* %293, align 8
  br label %301

294:                                              ; preds = %278, %270
  %295 = and i16 %263, 896
  %296 = icmp eq i16 %295, 0
  br i1 %296, label %297, label %301

297:                                              ; preds = %294
  %298 = and i16 %263, -897
  %299 = or i16 %298, 128
  store i16 %299, i16* %262, align 8
  %300 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %233, i64 0, i32 4
  store i32 -1, i32* %300, align 8
  br label %301

301:                                              ; preds = %297, %294, %286, %283, %261, %259, %226, %2
  %302 = load i16, i16* %4, align 1
  %303 = and i16 %302, 256
  %304 = icmp eq i16 %303, 0
  br i1 %304, label %348, label %305

305:                                              ; preds = %301
  %306 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 12
  %307 = load i8, i8* %306, align 8
  %308 = icmp eq i8 %307, 2
  br i1 %308, label %309, label %348

309:                                              ; preds = %305
  %310 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 14, i64 2
  %311 = load i8, i8* %310, align 1
  %312 = add i8 %311, -11
  %313 = icmp ult i8 %312, 2
  br i1 %313, label %314, label %348

314:                                              ; preds = %309
  %315 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 4, i32 0
  %316 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 4, i32 1
  %317 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %316, align 8
  %318 = icmp eq %"class.v8::internal::Variable"** %315, %317
  br i1 %318, label %359, label %322

319:                                              ; preds = %331
  %320 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %316, align 8
  %321 = icmp eq %"class.v8::internal::Variable"** %315, %320
  br i1 %321, label %359, label %335

322:                                              ; preds = %314, %331
  %323 = phi %"class.v8::internal::Variable"** [ %333, %331 ], [ %315, %314 ]
  %324 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %323, align 8
  %325 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %324, i64 0, i32 6
  %326 = load i16, i16* %325, align 8
  %327 = and i16 %326, 15
  %328 = icmp eq i16 %327, 3
  br i1 %328, label %331, label %329

329:                                              ; preds = %322
  tail call void @_ZN2v88internal5Scope25AllocateNonParameterLocalEPNS0_8VariableE(%"class.v8::internal::Scope"* %3, %"class.v8::internal::Variable"* %324) #10
  %330 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %323, align 8
  br label %331

331:                                              ; preds = %329, %322
  %332 = phi %"class.v8::internal::Variable"* [ %324, %322 ], [ %330, %329 ]
  %333 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %332, i64 0, i32 3
  %334 = icmp eq %"class.v8::internal::Variable"** %333, %317
  br i1 %334, label %319, label %322

335:                                              ; preds = %319, %344
  %336 = phi %"class.v8::internal::Variable"** [ %346, %344 ], [ %315, %319 ]
  %337 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %336, align 8
  %338 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %337, i64 0, i32 6
  %339 = load i16, i16* %338, align 8
  %340 = and i16 %339, 15
  %341 = icmp eq i16 %340, 3
  br i1 %341, label %342, label %344

342:                                              ; preds = %335
  tail call void @_ZN2v88internal5Scope25AllocateNonParameterLocalEPNS0_8VariableE(%"class.v8::internal::Scope"* %3, %"class.v8::internal::Variable"* %337) #10
  %343 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %336, align 8
  br label %344

344:                                              ; preds = %342, %335
  %345 = phi %"class.v8::internal::Variable"* [ %343, %342 ], [ %337, %335 ]
  %346 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %345, i64 0, i32 3
  %347 = icmp eq %"class.v8::internal::Variable"** %346, %320
  br i1 %347, label %359, label %335

348:                                              ; preds = %309, %305, %301
  %349 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 4, i32 0
  %350 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 4, i32 1
  %351 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %350, align 8
  %352 = icmp eq %"class.v8::internal::Variable"** %349, %351
  br i1 %352, label %359, label %353

353:                                              ; preds = %348, %353
  %354 = phi %"class.v8::internal::Variable"** [ %357, %353 ], [ %349, %348 ]
  %355 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %354, align 8
  tail call void @_ZN2v88internal5Scope25AllocateNonParameterLocalEPNS0_8VariableE(%"class.v8::internal::Scope"* %3, %"class.v8::internal::Variable"* %355) #10
  %356 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %354, align 8
  %357 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %356, i64 0, i32 3
  %358 = icmp eq %"class.v8::internal::Variable"** %357, %351
  br i1 %358, label %359, label %353

359:                                              ; preds = %344, %353, %348, %319, %314
  %360 = load i16, i16* %4, align 1
  %361 = and i16 %360, 256
  %362 = icmp eq i16 %361, 0
  br i1 %362, label %487, label %363

363:                                              ; preds = %359
  %364 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 1, i32 4, i32 0
  %365 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %364, align 8
  %366 = icmp eq %"class.v8::internal::Variable"* %365, null
  br i1 %366, label %402, label %367

367:                                              ; preds = %363
  %368 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %365, i64 0, i32 1
  %369 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %368, align 8
  %370 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %369, i64 0, i32 1, i32 1
  %371 = load i64, i64* %370, align 8
  %372 = trunc i64 %371 to i32
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %393, label %374

374:                                              ; preds = %367
  %375 = and i16 %360, 64
  %376 = icmp eq i16 %375, 0
  br i1 %376, label %377, label %382

377:                                              ; preds = %374
  %378 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 12
  %379 = load i8, i8* %378, align 8
  %380 = and i8 %379, -2
  %381 = icmp eq i8 %380, 4
  br i1 %381, label %382, label %393

382:                                              ; preds = %377, %374
  %383 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %365, i64 0, i32 6
  %384 = load i16, i16* %383, align 8
  %385 = or i16 %384, 2048
  store i16 %385, i16* %383, align 8
  %386 = load i16, i16* %4, align 1
  %387 = and i16 %386, 64
  %388 = icmp eq i16 %387, 0
  %389 = and i16 %384, 112
  %390 = icmp eq i16 %389, 32
  %391 = or i1 %390, %388
  br i1 %391, label %393, label %392

392:                                              ; preds = %382
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* nonnull %365) #10
  br label %393

393:                                              ; preds = %392, %382, %377, %367
  %394 = tail call zeroext i1 @_ZNK2v88internal8Variable22IsGlobalObjectPropertyEv(%"class.v8::internal::Variable"* nonnull %365) #10
  br i1 %394, label %402, label %395

395:                                              ; preds = %393
  %396 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %365, i64 0, i32 6
  %397 = load i16, i16* %396, align 8
  %398 = and i16 %397, 2048
  %399 = icmp eq i16 %398, 0
  br i1 %399, label %402, label %400

400:                                              ; preds = %395
  %401 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %364, align 8
  tail call void @_ZN2v88internal5Scope25AllocateNonParameterLocalEPNS0_8VariableE(%"class.v8::internal::Scope"* %3, %"class.v8::internal::Variable"* %401) #10
  br label %403

402:                                              ; preds = %395, %393, %363
  store %"class.v8::internal::Variable"* null, %"class.v8::internal::Variable"** %364, align 8
  br label %403

403:                                              ; preds = %402, %400
  %404 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 1, i32 4, i32 1
  %405 = bitcast %"class.v8::internal::Variable"*** %404 to %"class.v8::internal::Variable"**
  %406 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %405, align 8
  %407 = icmp eq %"class.v8::internal::Variable"* %406, null
  br i1 %407, label %443, label %408

408:                                              ; preds = %403
  %409 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %406, i64 0, i32 1
  %410 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %409, align 8
  %411 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %410, i64 0, i32 1, i32 1
  %412 = load i64, i64* %411, align 8
  %413 = trunc i64 %412 to i32
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %435, label %415

415:                                              ; preds = %408
  %416 = load i16, i16* %4, align 1
  %417 = and i16 %416, 64
  %418 = icmp eq i16 %417, 0
  br i1 %418, label %419, label %424

419:                                              ; preds = %415
  %420 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 12
  %421 = load i8, i8* %420, align 8
  %422 = and i8 %421, -2
  %423 = icmp eq i8 %422, 4
  br i1 %423, label %424, label %435

424:                                              ; preds = %419, %415
  %425 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %406, i64 0, i32 6
  %426 = load i16, i16* %425, align 8
  %427 = or i16 %426, 2048
  store i16 %427, i16* %425, align 8
  %428 = load i16, i16* %4, align 1
  %429 = and i16 %428, 64
  %430 = icmp eq i16 %429, 0
  %431 = and i16 %426, 112
  %432 = icmp eq i16 %431, 32
  %433 = or i1 %432, %430
  br i1 %433, label %435, label %434

434:                                              ; preds = %424
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* nonnull %406) #10
  br label %435

435:                                              ; preds = %434, %424, %419, %408
  %436 = tail call zeroext i1 @_ZNK2v88internal8Variable22IsGlobalObjectPropertyEv(%"class.v8::internal::Variable"* nonnull %406) #10
  br i1 %436, label %442, label %437

437:                                              ; preds = %435
  %438 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %406, i64 0, i32 6
  %439 = load i16, i16* %438, align 8
  %440 = and i16 %439, 2048
  %441 = icmp eq i16 %440, 0
  br i1 %441, label %442, label %443

442:                                              ; preds = %437, %435
  store %"class.v8::internal::Variable"* null, %"class.v8::internal::Variable"** %405, align 8
  br label %443

443:                                              ; preds = %442, %437, %403
  %444 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 1, i32 6
  %445 = bitcast %"class.v8::base::ThreadedListBase.20"* %444 to %"struct.v8::internal::DeclarationScope::RareData"**
  %446 = load %"struct.v8::internal::DeclarationScope::RareData"*, %"struct.v8::internal::DeclarationScope::RareData"** %445, align 8
  %447 = icmp eq %"struct.v8::internal::DeclarationScope::RareData"* %446, null
  br i1 %447, label %487, label %448, !prof !4

448:                                              ; preds = %443
  %449 = getelementptr inbounds %"struct.v8::internal::DeclarationScope::RareData", %"struct.v8::internal::DeclarationScope::RareData"* %446, i64 0, i32 0
  %450 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %449, align 8
  %451 = icmp eq %"class.v8::internal::Variable"* %450, null
  br i1 %451, label %487, label %452

452:                                              ; preds = %448
  %453 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %450, i64 0, i32 1
  %454 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %453, align 8
  %455 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %454, i64 0, i32 1, i32 1
  %456 = load i64, i64* %455, align 8
  %457 = trunc i64 %456 to i32
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %479, label %459

459:                                              ; preds = %452
  %460 = load i16, i16* %4, align 1
  %461 = and i16 %460, 64
  %462 = icmp eq i16 %461, 0
  br i1 %462, label %463, label %468

463:                                              ; preds = %459
  %464 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 12
  %465 = load i8, i8* %464, align 8
  %466 = and i8 %465, -2
  %467 = icmp eq i8 %466, 4
  br i1 %467, label %468, label %479

468:                                              ; preds = %463, %459
  %469 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %450, i64 0, i32 6
  %470 = load i16, i16* %469, align 8
  %471 = or i16 %470, 2048
  store i16 %471, i16* %469, align 8
  %472 = load i16, i16* %4, align 1
  %473 = and i16 %472, 64
  %474 = icmp eq i16 %473, 0
  %475 = and i16 %470, 112
  %476 = icmp eq i16 %475, 32
  %477 = or i1 %476, %474
  br i1 %477, label %479, label %478

478:                                              ; preds = %468
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* nonnull %450) #10
  br label %479

479:                                              ; preds = %478, %468, %463, %452
  %480 = tail call zeroext i1 @_ZNK2v88internal8Variable22IsGlobalObjectPropertyEv(%"class.v8::internal::Variable"* nonnull %450) #10
  br i1 %480, label %486, label %481

481:                                              ; preds = %479
  %482 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %450, i64 0, i32 6
  %483 = load i16, i16* %482, align 8
  %484 = and i16 %483, 2048
  %485 = icmp eq i16 %484, 0
  br i1 %485, label %486, label %487

486:                                              ; preds = %481, %479
  store %"class.v8::internal::Variable"* null, %"class.v8::internal::Variable"** %449, align 8
  br label %487

487:                                              ; preds = %486, %481, %448, %443, %359
  %488 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 12
  %489 = load i8, i8* %488, align 8
  switch i8 %489, label %496 [
    i8 7, label %518
    i8 3, label %518
    i8 2, label %490
    i8 4, label %521
  ]

490:                                              ; preds = %487
  %491 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 14
  %492 = bitcast [5 x i8]* %491 to i16*
  %493 = load i16, i16* %492, align 1
  %494 = and i16 %493, 2
  %495 = icmp eq i16 %494, 0
  br i1 %495, label %507, label %523

496:                                              ; preds = %487
  %497 = load i16, i16* %4, align 1
  %498 = and i16 %497, 1
  %499 = icmp ne i16 %498, 0
  %500 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 0
  %501 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %500, align 8
  %502 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %501, i64 0, i32 13
  %503 = load i16, i16* %502, align 1
  %504 = and i16 %503, 1
  %505 = icmp eq i16 %504, 0
  %506 = and i1 %499, %505
  br i1 %506, label %521, label %511

507:                                              ; preds = %490
  %508 = load i16, i16* %4, align 1
  %509 = and i16 %508, 4
  %510 = icmp eq i16 %509, 0
  br i1 %510, label %521, label %523

511:                                              ; preds = %496
  switch i8 %489, label %521 [
    i8 6, label %512
    i8 0, label %512
  ]

512:                                              ; preds = %511, %511
  %513 = and i16 %497, 260
  %514 = icmp eq i16 %513, 260
  %515 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 11
  %516 = load i32, i32* %515, align 4
  %517 = icmp eq i8 %489, 3
  br i1 %517, label %534, label %527

518:                                              ; preds = %487, %487
  %519 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 11
  %520 = load i32, i32* %519, align 4
  br label %534

521:                                              ; preds = %511, %507, %496, %487
  %522 = phi i1 [ false, %487 ], [ false, %511 ], [ true, %496 ], [ false, %507 ]
  br label %523

523:                                              ; preds = %490, %507, %521
  %524 = phi i1 [ %522, %521 ], [ true, %507 ], [ true, %490 ]
  %525 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 11
  %526 = load i32, i32* %525, align 4
  br label %527

527:                                              ; preds = %523, %512
  %528 = phi i32 [ %516, %512 ], [ %526, %523 ]
  %529 = phi i32* [ %515, %512 ], [ %525, %523 ]
  %530 = phi i1 [ %514, %512 ], [ %524, %523 ]
  %531 = load i16, i16* %4, align 1
  %532 = and i16 %531, 4
  %533 = icmp eq i16 %532, 0
  br i1 %533, label %538, label %534

534:                                              ; preds = %527, %518, %512
  %535 = phi i32 [ %528, %527 ], [ %516, %512 ], [ %520, %518 ]
  %536 = phi i32* [ %529, %527 ], [ %515, %512 ], [ %519, %518 ]
  %537 = phi i1 [ %530, %527 ], [ %514, %512 ], [ true, %518 ]
  br label %538

538:                                              ; preds = %534, %527
  %539 = phi i32 [ %535, %534 ], [ %528, %527 ]
  %540 = phi i32* [ %536, %534 ], [ %529, %527 ]
  %541 = phi i1 [ %537, %534 ], [ %530, %527 ]
  %542 = phi i32 [ 3, %534 ], [ 2, %527 ]
  %543 = icmp ne i32 %539, %542
  %544 = or i1 %541, %543
  br i1 %544, label %546, label %545

545:                                              ; preds = %538
  store i32 0, i32* %540, align 4
  br label %546

546:                                              ; preds = %545, %538
  %547 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 1
  %548 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %547, align 8
  %549 = icmp eq %"class.v8::internal::Scope"* %548, null
  br i1 %549, label %550, label %568

550:                                              ; preds = %546, %8
  %551 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 2
  %552 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %551, align 8
  %553 = icmp eq %"class.v8::internal::Scope"* %552, null
  %554 = icmp eq %"class.v8::internal::Scope"* %3, %0
  br i1 %553, label %555, label %565

555:                                              ; preds = %550, %558
  %556 = phi i1 [ %564, %558 ], [ %554, %550 ]
  %557 = phi %"class.v8::internal::Scope"* [ %560, %558 ], [ %3, %550 ]
  br i1 %556, label %570, label %558

558:                                              ; preds = %555
  %559 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %557, i64 0, i32 0
  %560 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %559, align 8
  %561 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %560, i64 0, i32 2
  %562 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %561, align 8
  %563 = icmp eq %"class.v8::internal::Scope"* %562, null
  %564 = icmp eq %"class.v8::internal::Scope"* %560, %0
  br i1 %563, label %555, label %565

565:                                              ; preds = %558, %550
  %566 = phi %"class.v8::internal::Scope"* [ %552, %550 ], [ %562, %558 ]
  %567 = phi i1 [ %554, %550 ], [ %564, %558 ]
  br i1 %567, label %570, label %568

568:                                              ; preds = %565, %546
  %569 = phi %"class.v8::internal::Scope"* [ %548, %546 ], [ %566, %565 ]
  br label %2

570:                                              ; preds = %565, %555
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal5Scope16HasThisReferenceEv(%"class.v8::internal::Scope"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 13
  %3 = load i16, i16* %2, align 1
  %4 = and i16 %3, 256
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 14
  %8 = bitcast [5 x i8]* %7 to i16*
  %9 = load i16, i16* %8, align 1
  %10 = and i16 %9, 2048
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %12, label %34

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 1
  %14 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %13, align 8
  %15 = icmp eq %"class.v8::internal::Scope"* %14, null
  br i1 %15, label %34, label %16

16:                                               ; preds = %12, %30
  %17 = phi %"class.v8::internal::Scope"* [ %32, %30 ], [ %14, %12 ]
  %18 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %17, i64 0, i32 13
  %19 = load i16, i16* %18, align 1
  %20 = and i16 %19, 256
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %17, i64 0, i32 14
  %24 = bitcast [5 x i8]* %23 to i16*
  %25 = load i16, i16* %24, align 1
  %26 = and i16 %25, 4096
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22, %16
  %29 = tail call zeroext i1 @_ZNK2v88internal5Scope16HasThisReferenceEv(%"class.v8::internal::Scope"* nonnull %17)
  br i1 %29, label %34, label %30

30:                                               ; preds = %22, %28
  %31 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %17, i64 0, i32 2
  %32 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %31, align 8
  %33 = icmp eq %"class.v8::internal::Scope"* %32, null
  br i1 %33, label %34, label %16

34:                                               ; preds = %28, %30, %12, %6
  %35 = phi i1 [ true, %6 ], [ false, %12 ], [ true, %28 ], [ false, %30 ]
  ret i1 %35
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal5Scope43AllowsLazyParsingWithoutUnresolvedVariablesEPKS1_(%"class.v8::internal::Scope"* readonly, %"class.v8::internal::Scope"* readnone) local_unnamed_addr #3 align 2 {
  %3 = icmp eq %"class.v8::internal::Scope"* %0, %1
  br i1 %3, label %17, label %4

4:                                                ; preds = %2, %13
  %5 = phi %"class.v8::internal::Scope"* [ %15, %13 ], [ %0, %2 ]
  %6 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %5, i64 0, i32 12
  %7 = load i8, i8* %6, align 8
  switch i8 %7, label %17 [
    i8 1, label %8
    i8 5, label %13
    i8 7, label %13
  ]

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %5, i64 0, i32 13
  %10 = load i16, i16* %9, align 1
  %11 = and i16 %10, 1
  %12 = icmp eq i16 %11, 0
  br label %17

13:                                               ; preds = %4, %4
  %14 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %5, i64 0, i32 0
  %15 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %14, align 8
  %16 = icmp eq %"class.v8::internal::Scope"* %15, %1
  br i1 %16, label %17, label %4

17:                                               ; preds = %13, %4, %2, %8
  %18 = phi i1 [ %12, %8 ], [ true, %2 ], [ true, %13 ], [ false, %4 ]
  ret i1 %18
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal16DeclarationScope21AllowsLazyCompilationEv(%"class.v8::internal::DeclarationScope"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 1
  %3 = load i16, i16* %2, align 1
  %4 = and i16 %3, 4
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = and i8 %8, -2
  %10 = icmp ne i8 %9, 24
  br label %11

11:                                               ; preds = %1, %6
  %12 = phi i1 [ false, %1 ], [ %10, %6 ]
  ret i1 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal5Scope18ContextChainLengthEPS1_(%"class.v8::internal::Scope"* readonly, %"class.v8::internal::Scope"* readnone) local_unnamed_addr #3 align 2 {
  %3 = icmp eq %"class.v8::internal::Scope"* %0, %1
  br i1 %3, label %4, label %6

4:                                                ; preds = %6, %2
  %5 = phi i32 [ 0, %2 ], [ %13, %6 ]
  ret i32 %5

6:                                                ; preds = %2, %6
  %7 = phi %"class.v8::internal::Scope"* [ %15, %6 ], [ %0, %2 ]
  %8 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %7, i64 0, i32 11
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  %12 = zext i1 %11 to i32
  %13 = add nuw nsw i32 %8, %12
  %14 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %7, i64 0, i32 0
  %15 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %14, align 8
  %16 = icmp eq %"class.v8::internal::Scope"* %15, %1
  br i1 %16, label %4, label %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal5Scope42ContextChainLengthUntilOutermostSloppyEvalEv(%"class.v8::internal::Scope"* readonly) local_unnamed_addr #3 align 2 {
  %2 = icmp eq %"class.v8::internal::Scope"* %0, null
  br i1 %2, label %3, label %5

3:                                                ; preds = %22, %1
  %4 = phi i32 [ 0, %1 ], [ %23, %22 ]
  ret i32 %4

5:                                                ; preds = %1, %22
  %6 = phi %"class.v8::internal::Scope"* [ %26, %22 ], [ %0, %1 ]
  %7 = phi i32 [ %24, %22 ], [ 0, %1 ]
  %8 = phi i32 [ %23, %22 ], [ 0, %1 ]
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %6, i64 0, i32 11
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %22

12:                                               ; preds = %5
  %13 = add nsw i32 %7, 1
  %14 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %6, i64 0, i32 13
  %15 = load i16, i16* %14, align 1
  %16 = and i16 %15, 256
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %12
  %19 = and i16 %15, 4
  %20 = icmp eq i16 %19, 0
  %21 = select i1 %20, i32 %8, i32 %13
  br label %22

22:                                               ; preds = %12, %18, %5
  %23 = phi i32 [ %8, %12 ], [ %8, %5 ], [ %21, %18 ]
  %24 = phi i32 [ %13, %12 ], [ %7, %5 ], [ %13, %18 ]
  %25 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %6, i64 0, i32 0
  %26 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %25, align 8
  %27 = icmp eq %"class.v8::internal::Scope"* %26, null
  br i1 %27, label %3, label %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::DeclarationScope"* @_ZNK2v88internal5Scope15GetClosureScopeEv(%"class.v8::internal::Scope"* readonly) local_unnamed_addr #3 align 2 {
  br label %2

2:                                                ; preds = %11, %1
  %3 = phi %"class.v8::internal::Scope"* [ %0, %1 ], [ %13, %11 ]
  %4 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 13
  %5 = load i16, i16* %4, align 1
  %6 = and i16 %5, 256
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 12
  %10 = load i8, i8* %9, align 8
  switch i8 %10, label %14 [
    i8 6, label %11
    i8 0, label %11
  ]

11:                                               ; preds = %2, %8, %8
  %12 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 0
  %13 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %12, align 8
  br label %2

14:                                               ; preds = %8
  %15 = bitcast %"class.v8::internal::Scope"* %3 to %"class.v8::internal::DeclarationScope"*
  ret %"class.v8::internal::DeclarationScope"* %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Scope18ShouldBanArgumentsEv(%"class.v8::internal::Scope"* nocapture readonly) local_unnamed_addr #3 align 2 {
  br label %2

2:                                                ; preds = %18, %1
  %3 = phi %"class.v8::internal::Scope"* [ %0, %1 ], [ %20, %18 ]
  %4 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 13
  %5 = load i16, i16* %4, align 1
  %6 = and i16 %5, 256
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %18, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 12
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 4
  br i1 %11, label %21, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 14
  %14 = bitcast [5 x i8]* %13 to i16*
  %15 = load i16, i16* %14, align 1
  %16 = and i16 %15, 4096
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %12, %2
  %19 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 0
  %20 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %19, align 8
  br label %2

21:                                               ; preds = %8, %12
  %22 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 14, i64 2
  %23 = load i8, i8* %22, align 1
  %24 = and i8 %23, -2
  %25 = icmp eq i8 %24, 24
  ret i1 %25
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::DeclarationScope"* @_ZN2v88internal5Scope16GetReceiverScopeEv(%"class.v8::internal::Scope"* readonly) local_unnamed_addr #3 align 2 {
  br label %2

2:                                                ; preds = %18, %1
  %3 = phi %"class.v8::internal::Scope"* [ %0, %1 ], [ %20, %18 ]
  %4 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 13
  %5 = load i16, i16* %4, align 1
  %6 = and i16 %5, 256
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %18, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 12
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 4
  br i1 %11, label %21, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 14
  %14 = bitcast [5 x i8]* %13 to i16*
  %15 = load i16, i16* %14, align 1
  %16 = and i16 %15, 4096
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 0
  %20 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %19, align 8
  br label %2

21:                                               ; preds = %8, %12
  %22 = bitcast %"class.v8::internal::Scope"* %3 to %"class.v8::internal::DeclarationScope"*
  ret %"class.v8::internal::DeclarationScope"* %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::Scope"* @_ZN2v88internal5Scope18GetHomeObjectScopeEv(%"class.v8::internal::Scope"* readonly) local_unnamed_addr #3 align 2 {
  %2 = icmp eq %"class.v8::internal::Scope"* %0, null
  br i1 %2, label %31, label %3

3:                                                ; preds = %1, %28
  %4 = phi %"class.v8::internal::Scope"* [ %29, %28 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 12
  %6 = load i8, i8* %5, align 8
  switch i8 %6, label %18 [
    i8 0, label %31
    i8 6, label %7
    i8 2, label %12
  ]

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 13
  %9 = load i16, i16* %8, align 1
  %10 = and i16 %9, 16384
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %18, label %31

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 14, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = add i8 %14, -11
  %16 = icmp ult i8 %15, 2
  br i1 %16, label %18, label %17

17:                                               ; preds = %12
  switch i8 %14, label %31 [
    i8 25, label %18
    i8 24, label %18
    i8 23, label %18
    i8 22, label %18
    i8 21, label %18
    i8 20, label %18
    i8 17, label %18
    i8 16, label %18
    i8 15, label %18
    i8 14, label %18
    i8 10, label %18
    i8 9, label %18
    i8 8, label %18
    i8 7, label %18
    i8 6, label %18
    i8 5, label %18
    i8 4, label %18
    i8 3, label %18
  ]

18:                                               ; preds = %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %3, %7, %12
  %19 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 13
  %20 = load i16, i16* %19, align 1
  %21 = and i16 %20, 512
  %22 = icmp eq i16 %21, 0
  %23 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 0
  %24 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %23, align 8
  br i1 %22, label %28, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %24, i64 0, i32 0
  %27 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %26, align 8
  br label %28

28:                                               ; preds = %18, %25
  %29 = phi %"class.v8::internal::Scope"* [ %27, %25 ], [ %24, %18 ]
  %30 = icmp eq %"class.v8::internal::Scope"* %29, null
  br i1 %30, label %31, label %3

31:                                               ; preds = %28, %7, %3, %17, %1
  %32 = phi %"class.v8::internal::Scope"* [ null, %1 ], [ null, %17 ], [ %4, %3 ], [ %4, %7 ], [ null, %28 ]
  ret %"class.v8::internal::Scope"* %32
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::Scope"* @_ZN2v88internal5Scope24GetOuterScopeWithContextEv(%"class.v8::internal::Scope"* nocapture readonly) local_unnamed_addr #3 align 2 {
  br label %2

2:                                                ; preds = %7, %1
  %3 = phi %"class.v8::internal::Scope"* [ %0, %1 ], [ %5, %7 ]
  %4 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 0
  %5 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %4, align 8
  %6 = icmp eq %"class.v8::internal::Scope"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %5, i64 0, i32 11
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %2, label %11

11:                                               ; preds = %2, %7
  ret %"class.v8::internal::Scope"* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal5Scope14IsOuterScopeOfEPS1_(%"class.v8::internal::Scope"* readnone, %"class.v8::internal::Scope"* readonly) local_unnamed_addr #3 align 2 {
  %3 = icmp eq %"class.v8::internal::Scope"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2, %7
  %5 = phi %"class.v8::internal::Scope"* [ %9, %7 ], [ %1, %2 ]
  %6 = icmp eq %"class.v8::internal::Scope"* %5, %0
  br i1 %6, label %11, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %5, i64 0, i32 0
  %9 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %8, align 8
  %10 = icmp eq %"class.v8::internal::Scope"* %9, null
  br i1 %10, label %11, label %4

11:                                               ; preds = %4, %7, %2
  %12 = phi i1 [ false, %2 ], [ false, %7 ], [ true, %4 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Scope16CollectNonLocalsEPNS0_16DeclarationScopeEPNS0_7IsolateEPNS0_6HandleINS0_9StringSetEEE(%"class.v8::internal::Scope"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1243"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %1, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::Handle.1243", %"class.v8::internal::Handle.1243"* %3, i64 0, i32 0, i32 0
  br label %7

7:                                                ; preds = %195, %4
  %8 = phi %"class.v8::internal::Scope"* [ %0, %4 ], [ %196, %195 ]
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %8, i64 0, i32 12
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 3
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = bitcast %"class.v8::internal::Scope"* %8 to %"class.v8::internal::ModuleScope"*
  tail call void @_ZN2v88internal11ModuleScope23AllocateModuleVariablesEv(%"class.v8::internal::ModuleScope"* %13) #10
  br label %14

14:                                               ; preds = %12, %7
  %15 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %8, i64 0, i32 13
  %16 = load i16, i16* %15, align 1
  %17 = and i16 %16, 256
  %18 = icmp eq i16 %17, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %8, i64 0, i32 14
  %21 = bitcast [5 x i8]* %20 to i16*
  %22 = load i16, i16* %21, align 1
  %23 = trunc i16 %22 to i8
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %8, i64 0, i32 0
  %27 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %26, align 8
  br label %28

28:                                               ; preds = %25, %19, %14
  %29 = phi %"class.v8::internal::Scope"* [ %27, %25 ], [ %8, %19 ], [ %8, %14 ]
  %30 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %8, i64 0, i32 5, i32 0
  %31 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %30, align 8
  %32 = icmp eq %"class.v8::internal::VariableProxy"* %31, null
  br i1 %32, label %51, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %31, i64 0, i32 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, 512
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %51, label %38

38:                                               ; preds = %33, %43
  %39 = phi %"class.v8::internal::VariableProxy"* [ %41, %43 ], [ %31, %33 ]
  %40 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %39, i64 0, i32 2
  %41 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %40, align 8
  %42 = icmp eq %"class.v8::internal::VariableProxy"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %41, i64 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, 512
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %38

48:                                               ; preds = %43, %38
  %49 = phi %"class.v8::internal::VariableProxy"* [ null, %38 ], [ %41, %43 ]
  %50 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %39, i64 0, i32 2
  br label %51

51:                                               ; preds = %48, %33, %28
  %52 = phi %"class.v8::internal::VariableProxy"* [ null, %28 ], [ %31, %33 ], [ %49, %48 ]
  %53 = phi %"class.v8::internal::VariableProxy"** [ %30, %28 ], [ %30, %33 ], [ %50, %48 ]
  %54 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %8, i64 0, i32 5, i32 1
  %55 = load %"class.v8::internal::VariableProxy"**, %"class.v8::internal::VariableProxy"*** %54, align 8
  %56 = icmp eq %"class.v8::internal::VariableProxy"** %53, %55
  br i1 %56, label %173, label %57

57:                                               ; preds = %51
  %58 = icmp eq %"class.v8::internal::Scope"* %29, %8
  br i1 %58, label %59, label %112

59:                                               ; preds = %57, %108
  %60 = phi %"class.v8::internal::VariableProxy"* [ %109, %108 ], [ %52, %57 ]
  %61 = phi %"class.v8::internal::VariableProxy"** [ %110, %108 ], [ %53, %57 ]
  %62 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %5, align 8
  %63 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope6LookupILNS1_15ScopeLookupModeE0EEEPNS0_8VariableEPNS0_13VariableProxyEPS1_S8_S8_b(%"class.v8::internal::VariableProxy"* %60, %"class.v8::internal::Scope"* %8, %"class.v8::internal::Scope"* %62, %"class.v8::internal::Scope"* null, i1 zeroext false) #10
  %64 = icmp eq %"class.v8::internal::Variable"* %63, null
  br i1 %64, label %66, label %65

65:                                               ; preds = %59
  tail call void @_ZN2v88internal5Scope9ResolveToEPNS0_13VariableProxyEPNS0_8VariableE(%"class.v8::internal::Scope"* %8, %"class.v8::internal::VariableProxy"* %60, %"class.v8::internal::Variable"* nonnull %63) #10
  br label %85

66:                                               ; preds = %59
  %67 = load i64*, i64** %6, align 8
  %68 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %60, i64 0, i32 0, i32 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = and i32 %69, 256
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %60, i64 0, i32 1
  br i1 %71, label %77, label %73

73:                                               ; preds = %66
  %74 = bitcast %union.anon* %72 to %"class.v8::internal::Variable"**
  %75 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %75, i64 0, i32 1
  br label %79

77:                                               ; preds = %66
  %78 = getelementptr inbounds %union.anon, %union.anon* %72, i64 0, i32 0
  br label %79

79:                                               ; preds = %77, %73
  %80 = phi %"class.v8::internal::AstRawString"** [ %76, %73 ], [ %78, %77 ]
  %81 = bitcast %"class.v8::internal::AstRawString"** %80 to i64***
  %82 = load i64**, i64*** %81, align 8
  %83 = load i64*, i64** %82, align 8
  %84 = tail call i64* @_ZN2v88internal9StringSet3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEE(%"class.v8::internal::Isolate"* %2, i64* %67, i64* %83) #10
  store i64* %84, i64** %6, align 8
  br label %85

85:                                               ; preds = %79, %65
  %86 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %61, align 8
  %87 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %86, i64 0, i32 2
  %88 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %87, align 8
  %89 = icmp eq %"class.v8::internal::VariableProxy"* %88, null
  br i1 %89, label %108, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %88, i64 0, i32 0, i32 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = and i32 %92, 512
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %90, %100
  %96 = phi %"class.v8::internal::VariableProxy"* [ %98, %100 ], [ %88, %90 ]
  %97 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %96, i64 0, i32 2
  %98 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %97, align 8
  %99 = icmp eq %"class.v8::internal::VariableProxy"* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %98, i64 0, i32 0, i32 0, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = and i32 %102, 512
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %95

105:                                              ; preds = %100, %95
  %106 = phi %"class.v8::internal::VariableProxy"* [ null, %95 ], [ %98, %100 ]
  %107 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %96, i64 0, i32 2
  br label %108

108:                                              ; preds = %105, %90, %85
  %109 = phi %"class.v8::internal::VariableProxy"* [ null, %85 ], [ %88, %90 ], [ %106, %105 ]
  %110 = phi %"class.v8::internal::VariableProxy"** [ %87, %85 ], [ %87, %90 ], [ %107, %105 ]
  %111 = icmp eq %"class.v8::internal::VariableProxy"** %110, %55
  br i1 %111, label %173, label %59

112:                                              ; preds = %57, %169
  %113 = phi %"class.v8::internal::VariableProxy"* [ %170, %169 ], [ %52, %57 ]
  %114 = phi %"class.v8::internal::VariableProxy"** [ %171, %169 ], [ %53, %57 ]
  %115 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %5, align 8
  %116 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope6LookupILNS1_15ScopeLookupModeE0EEEPNS0_8VariableEPNS0_13VariableProxyEPS1_S8_S8_b(%"class.v8::internal::VariableProxy"* %113, %"class.v8::internal::Scope"* %29, %"class.v8::internal::Scope"* %115, %"class.v8::internal::Scope"* null, i1 zeroext false) #10
  %117 = icmp eq %"class.v8::internal::Variable"* %116, null
  br i1 %117, label %118, label %137

118:                                              ; preds = %112
  %119 = load i64*, i64** %6, align 8
  %120 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %113, i64 0, i32 0, i32 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = and i32 %121, 256
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %113, i64 0, i32 1
  br i1 %123, label %129, label %125

125:                                              ; preds = %118
  %126 = bitcast %union.anon* %124 to %"class.v8::internal::Variable"**
  %127 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %126, align 8
  %128 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %127, i64 0, i32 1
  br label %131

129:                                              ; preds = %118
  %130 = getelementptr inbounds %union.anon, %union.anon* %124, i64 0, i32 0
  br label %131

131:                                              ; preds = %129, %125
  %132 = phi %"class.v8::internal::AstRawString"** [ %128, %125 ], [ %130, %129 ]
  %133 = bitcast %"class.v8::internal::AstRawString"** %132 to i64***
  %134 = load i64**, i64*** %133, align 8
  %135 = load i64*, i64** %134, align 8
  %136 = tail call i64* @_ZN2v88internal9StringSet3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEE(%"class.v8::internal::Isolate"* %2, i64* %119, i64* %135) #10
  store i64* %136, i64** %6, align 8
  br label %146

137:                                              ; preds = %112
  tail call void @_ZN2v88internal5Scope9ResolveToEPNS0_13VariableProxyEPNS0_8VariableE(%"class.v8::internal::Scope"* %8, %"class.v8::internal::VariableProxy"* %113, %"class.v8::internal::Variable"* nonnull %116) #10
  %138 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %116, i64 0, i32 6
  %139 = load i16, i16* %138, align 8
  %140 = trunc i16 %139 to i8
  %141 = and i8 %140, 15
  %142 = add nsw i8 %141, -4
  %143 = icmp ult i8 %142, 3
  br i1 %143, label %146, label %144

144:                                              ; preds = %137
  %145 = or i16 %139, 1024
  store i16 %145, i16* %138, align 8
  br label %146

146:                                              ; preds = %144, %137, %131
  %147 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %114, align 8
  %148 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %147, i64 0, i32 2
  %149 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %148, align 8
  %150 = icmp eq %"class.v8::internal::VariableProxy"* %149, null
  br i1 %150, label %169, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %149, i64 0, i32 0, i32 0, i32 1
  %153 = load i32, i32* %152, align 4
  %154 = and i32 %153, 512
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %169, label %156

156:                                              ; preds = %151, %161
  %157 = phi %"class.v8::internal::VariableProxy"* [ %159, %161 ], [ %149, %151 ]
  %158 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %157, i64 0, i32 2
  %159 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %158, align 8
  %160 = icmp eq %"class.v8::internal::VariableProxy"* %159, null
  br i1 %160, label %166, label %161

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %159, i64 0, i32 0, i32 0, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = and i32 %163, 512
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %156

166:                                              ; preds = %161, %156
  %167 = phi %"class.v8::internal::VariableProxy"* [ null, %156 ], [ %159, %161 ]
  %168 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %157, i64 0, i32 2
  br label %169

169:                                              ; preds = %166, %151, %146
  %170 = phi %"class.v8::internal::VariableProxy"* [ null, %146 ], [ %149, %151 ], [ %167, %166 ]
  %171 = phi %"class.v8::internal::VariableProxy"** [ %148, %146 ], [ %148, %151 ], [ %168, %166 ]
  %172 = icmp eq %"class.v8::internal::VariableProxy"** %171, %55
  br i1 %172, label %173, label %112

173:                                              ; preds = %169, %108, %51
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %30, align 8
  store %"class.v8::internal::VariableProxy"** %30, %"class.v8::internal::VariableProxy"*** %54, align 8
  %174 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %8, i64 0, i32 1
  %175 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %174, align 8
  %176 = icmp eq %"class.v8::internal::Scope"* %175, null
  br i1 %176, label %177, label %195

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %8, i64 0, i32 2
  %179 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %178, align 8
  %180 = icmp eq %"class.v8::internal::Scope"* %179, null
  %181 = icmp eq %"class.v8::internal::Scope"* %8, %0
  br i1 %180, label %182, label %192

182:                                              ; preds = %177, %185
  %183 = phi i1 [ %191, %185 ], [ %181, %177 ]
  %184 = phi %"class.v8::internal::Scope"* [ %187, %185 ], [ %8, %177 ]
  br i1 %183, label %197, label %185

185:                                              ; preds = %182
  %186 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %184, i64 0, i32 0
  %187 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %186, align 8
  %188 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %187, i64 0, i32 2
  %189 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %188, align 8
  %190 = icmp eq %"class.v8::internal::Scope"* %189, null
  %191 = icmp eq %"class.v8::internal::Scope"* %187, %0
  br i1 %190, label %182, label %192

192:                                              ; preds = %185, %177
  %193 = phi %"class.v8::internal::Scope"* [ %179, %177 ], [ %189, %185 ]
  %194 = phi i1 [ %181, %177 ], [ %191, %185 ]
  br i1 %194, label %197, label %195

195:                                              ; preds = %192, %173
  %196 = phi %"class.v8::internal::Scope"* [ %175, %173 ], [ %193, %192 ]
  br label %7

197:                                              ; preds = %192, %182
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Scope16AnalyzePartiallyEPNS0_16DeclarationScopeEPNS0_14AstNodeFactoryEPNS_4base16ThreadedListBaseINS0_13VariableProxyENS6_9EmptyBaseENS8_14UnresolvedNextEEEb(%"class.v8::internal::Scope"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstNodeFactory"*, %"class.v8::base::ThreadedListBase.18"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %1, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::AstNodeFactory", %"class.v8::internal::AstNodeFactory"* %2, i64 0, i32 0
  %8 = getelementptr inbounds %"class.v8::base::ThreadedListBase.18", %"class.v8::base::ThreadedListBase.18"* %3, i64 0, i32 1
  br label %9

9:                                                ; preds = %163, %5
  %10 = phi %"class.v8::internal::Scope"* [ %0, %5 ], [ %164, %163 ]
  %11 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %10, i64 0, i32 5, i32 0
  %12 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %11, align 8
  %13 = icmp eq %"class.v8::internal::VariableProxy"* %12, null
  br i1 %13, label %140, label %14

14:                                               ; preds = %9
  br i1 %4, label %80, label %15

15:                                               ; preds = %14, %76
  %16 = phi %"class.v8::internal::VariableProxy"* [ %78, %76 ], [ %12, %14 ]
  %17 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %16, i64 0, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 512
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %76

21:                                               ; preds = %15
  %22 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %6, align 8
  %23 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope6LookupILNS1_15ScopeLookupModeE0EEEPNS0_8VariableEPNS0_13VariableProxyEPS1_S8_S8_b(%"class.v8::internal::VariableProxy"* nonnull %16, %"class.v8::internal::Scope"* %10, %"class.v8::internal::Scope"* %22, %"class.v8::internal::Scope"* null, i1 zeroext false) #10
  %24 = icmp eq %"class.v8::internal::Variable"* %23, null
  br i1 %24, label %33, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %23, i64 0, i32 6
  %27 = load i16, i16* %26, align 8
  %28 = or i16 %27, 2048
  store i16 %28, i16* %26, align 8
  %29 = load i32, i32* %17, align 4
  %30 = trunc i32 %29 to i8
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %76

32:                                               ; preds = %25
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* nonnull %23) #10
  br label %76

33:                                               ; preds = %21
  %34 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %6, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %34, i64 0, i32 12
  %36 = load i8, i8* %35, align 8
  %37 = icmp eq i8 %36, 4
  br i1 %37, label %76, label %38

38:                                               ; preds = %33
  %39 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %7, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %39, i64 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %39, i64 0, i32 3
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %43, %41
  %45 = icmp ult i64 %44, 24
  br i1 %45, label %48, label %46, !prof !2

46:                                               ; preds = %38
  %47 = add i64 %41, 24
  store i64 %47, i64* %40, align 8
  br label %50

48:                                               ; preds = %38
  %49 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %39, i64 24) #10
  br label %50

50:                                               ; preds = %48, %46
  %51 = phi i64 [ %49, %48 ], [ %41, %46 ]
  %52 = inttoptr i64 %51 to %"class.v8::internal::VariableProxy"*
  tail call void @_ZN2v88internal13VariableProxyC1EPKS1_(%"class.v8::internal::VariableProxy"* %52, %"class.v8::internal::VariableProxy"* nonnull %16) #10
  %53 = load %"class.v8::internal::VariableProxy"**, %"class.v8::internal::VariableProxy"*** %8, align 8
  store %"class.v8::internal::VariableProxy"* %52, %"class.v8::internal::VariableProxy"** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %52, i64 0, i32 2
  %55 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %54, align 8
  %56 = icmp eq %"class.v8::internal::VariableProxy"* %55, null
  br i1 %56, label %74, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %55, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = and i32 %59, 512
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %74, label %62

62:                                               ; preds = %57, %67
  %63 = phi %"class.v8::internal::VariableProxy"* [ %65, %67 ], [ %55, %57 ]
  %64 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %63, i64 0, i32 2
  %65 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %64, align 8
  %66 = icmp eq %"class.v8::internal::VariableProxy"* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %65, i64 0, i32 0, i32 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = and i32 %69, 512
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %62

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %63, i64 0, i32 2
  br label %74

74:                                               ; preds = %72, %57, %50
  %75 = phi %"class.v8::internal::VariableProxy"** [ %54, %50 ], [ %54, %57 ], [ %73, %72 ]
  store %"class.v8::internal::VariableProxy"** %75, %"class.v8::internal::VariableProxy"*** %8, align 8
  br label %76

76:                                               ; preds = %74, %33, %32, %25, %15
  %77 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %16, i64 0, i32 2
  %78 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %77, align 8
  %79 = icmp eq %"class.v8::internal::VariableProxy"* %78, null
  br i1 %79, label %140, label %15

80:                                               ; preds = %14, %136
  %81 = phi %"class.v8::internal::VariableProxy"* [ %138, %136 ], [ %12, %14 ]
  %82 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %81, i64 0, i32 0, i32 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, 512
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %136

86:                                               ; preds = %80
  %87 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %6, align 8
  %88 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope6LookupILNS1_15ScopeLookupModeE0EEEPNS0_8VariableEPNS0_13VariableProxyEPS1_S8_S8_b(%"class.v8::internal::VariableProxy"* nonnull %81, %"class.v8::internal::Scope"* %10, %"class.v8::internal::Scope"* %87, %"class.v8::internal::Scope"* null, i1 zeroext false) #10
  %89 = icmp eq %"class.v8::internal::Variable"* %88, null
  br i1 %89, label %90, label %128

90:                                               ; preds = %86
  %91 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %7, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %91, i64 0, i32 2
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %91, i64 0, i32 3
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 %95, %93
  %97 = icmp ult i64 %96, 24
  br i1 %97, label %98, label %100, !prof !2

98:                                               ; preds = %90
  %99 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %91, i64 24) #10
  br label %102

100:                                              ; preds = %90
  %101 = add i64 %93, 24
  store i64 %101, i64* %92, align 8
  br label %102

102:                                              ; preds = %100, %98
  %103 = phi i64 [ %99, %98 ], [ %93, %100 ]
  %104 = inttoptr i64 %103 to %"class.v8::internal::VariableProxy"*
  tail call void @_ZN2v88internal13VariableProxyC1EPKS1_(%"class.v8::internal::VariableProxy"* %104, %"class.v8::internal::VariableProxy"* nonnull %81) #10
  %105 = load %"class.v8::internal::VariableProxy"**, %"class.v8::internal::VariableProxy"*** %8, align 8
  store %"class.v8::internal::VariableProxy"* %104, %"class.v8::internal::VariableProxy"** %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %104, i64 0, i32 2
  %107 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %106, align 8
  %108 = icmp eq %"class.v8::internal::VariableProxy"* %107, null
  br i1 %108, label %126, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %107, i64 0, i32 0, i32 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = and i32 %111, 512
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %126, label %114

114:                                              ; preds = %109, %119
  %115 = phi %"class.v8::internal::VariableProxy"* [ %117, %119 ], [ %107, %109 ]
  %116 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %115, i64 0, i32 2
  %117 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %116, align 8
  %118 = icmp eq %"class.v8::internal::VariableProxy"* %117, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %117, i64 0, i32 0, i32 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = and i32 %121, 512
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %114

124:                                              ; preds = %119, %114
  %125 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %115, i64 0, i32 2
  br label %126

126:                                              ; preds = %124, %109, %102
  %127 = phi %"class.v8::internal::VariableProxy"** [ %106, %102 ], [ %106, %109 ], [ %125, %124 ]
  store %"class.v8::internal::VariableProxy"** %127, %"class.v8::internal::VariableProxy"*** %8, align 8
  br label %136

128:                                              ; preds = %86
  %129 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %88, i64 0, i32 6
  %130 = load i16, i16* %129, align 8
  %131 = or i16 %130, 2048
  store i16 %131, i16* %129, align 8
  %132 = load i32, i32* %82, align 4
  %133 = trunc i32 %132 to i8
  %134 = icmp slt i8 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %128
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* nonnull %88) #10
  br label %136

136:                                              ; preds = %135, %128, %126, %80
  %137 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %81, i64 0, i32 2
  %138 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %137, align 8
  %139 = icmp eq %"class.v8::internal::VariableProxy"* %138, null
  br i1 %139, label %140, label %80

140:                                              ; preds = %76, %136, %9
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %11, align 8
  %141 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %10, i64 0, i32 5, i32 1
  store %"class.v8::internal::VariableProxy"** %11, %"class.v8::internal::VariableProxy"*** %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %10, i64 0, i32 1
  %143 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %142, align 8
  %144 = icmp eq %"class.v8::internal::Scope"* %143, null
  br i1 %144, label %145, label %163

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %10, i64 0, i32 2
  %147 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %146, align 8
  %148 = icmp eq %"class.v8::internal::Scope"* %147, null
  %149 = icmp eq %"class.v8::internal::Scope"* %10, %0
  br i1 %148, label %150, label %160

150:                                              ; preds = %145, %153
  %151 = phi i1 [ %159, %153 ], [ %149, %145 ]
  %152 = phi %"class.v8::internal::Scope"* [ %155, %153 ], [ %10, %145 ]
  br i1 %151, label %165, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %152, i64 0, i32 0
  %155 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %154, align 8
  %156 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %155, i64 0, i32 2
  %157 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %156, align 8
  %158 = icmp eq %"class.v8::internal::Scope"* %157, null
  %159 = icmp eq %"class.v8::internal::Scope"* %155, %0
  br i1 %158, label %150, label %160

160:                                              ; preds = %153, %145
  %161 = phi %"class.v8::internal::Scope"* [ %147, %145 ], [ %157, %153 ]
  %162 = phi i1 [ %149, %145 ], [ %159, %153 ]
  br i1 %162, label %165, label %163

163:                                              ; preds = %160, %140
  %164 = phi %"class.v8::internal::Scope"* [ %143, %140 ], [ %161, %160 ]
  br label %9

165:                                              ; preds = %160, %150
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16DeclarationScope16CollectNonLocalsEPNS0_7IsolateENS0_6HandleINS0_9StringSetEEE(%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Handle.1243", align 8
  %5 = getelementptr inbounds %"class.v8::internal::Handle.1243", %"class.v8::internal::Handle.1243"* %4, i64 0, i32 0, i32 0
  store i64* %2, i64** %5, align 8
  %6 = bitcast %"class.v8::internal::DeclarationScope"* %0 to %"class.v8::internal::Scope"*
  call void @_ZN2v88internal5Scope16CollectNonLocalsEPNS0_16DeclarationScopeEPNS0_7IsolateEPNS0_6HandleINS0_9StringSetEEE(%"class.v8::internal::Scope"* %6, %"class.v8::internal::DeclarationScope"* %0, %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Handle.1243"* nonnull %4)
  %7 = load i64*, i64** %5, align 8
  ret i64* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16DeclarationScope20ResetAfterPreparsingEPNS0_15AstValueFactoryEb(%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::AstValueFactory"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 6
  %5 = bitcast %"class.v8::internal::ZoneList"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #10
  %6 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 6, i32 0
  store %"class.v8::internal::Declaration"* null, %"class.v8::internal::Declaration"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 6, i32 1
  store %"class.v8::internal::Declaration"** %6, %"class.v8::internal::Declaration"*** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 4, i32 0
  store %"class.v8::internal::Variable"* null, %"class.v8::internal::Variable"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 4, i32 1
  store %"class.v8::internal::Variable"** %8, %"class.v8::internal::Variable"*** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 1
  store %"class.v8::internal::Scope"* null, %"class.v8::internal::Scope"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 5, i32 0
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 5, i32 1
  store %"class.v8::internal::VariableProxy"** %11, %"class.v8::internal::VariableProxy"*** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 7, i32 0
  store %"class.v8::internal::SloppyBlockFunctionStatement"* null, %"class.v8::internal::SloppyBlockFunctionStatement"** %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 7, i32 1
  store %"class.v8::internal::SloppyBlockFunctionStatement"** %13, %"class.v8::internal::SloppyBlockFunctionStatement"*** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 13
  store %"struct.v8::internal::DeclarationScope::RareData"* null, %"struct.v8::internal::DeclarationScope::RareData"** %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 1
  %17 = load i16, i16* %16, align 1
  %18 = and i16 %17, -9
  store i16 %18, i16* %16, align 1
  %19 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 9
  store %"class.v8::internal::Variable"* null, %"class.v8::internal::Variable"** %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3
  %23 = bitcast %"class.v8::internal::VariableMap"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #10
  tail call void @_ZN2v88internal4Zone13ReleaseMemoryEv(%"class.v8::internal::Zone"* %21) #10
  br i1 %2, label %24, label %64

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %1, i64 0, i32 6
  %26 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %25, align 8
  %27 = ptrtoint %"class.v8::internal::Zone"* %26 to i64
  %28 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %26, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %26, i64 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %31, %29
  %33 = icmp ult i64 %32, 192
  br i1 %33, label %34, label %36, !prof !2

34:                                               ; preds = %24
  %35 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %26, i64 192) #10
  br label %38

36:                                               ; preds = %24
  %37 = add i64 %29, 192
  store i64 %37, i64* %28, align 8
  br label %38

38:                                               ; preds = %36, %34
  %39 = phi i64 [ %35, %34 ], [ %29, %36 ]
  %40 = inttoptr i64 %39 to %"struct.v8::base::TemplateHashMapEntry"*
  %41 = icmp eq i64 %39, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0)) #11
  unreachable

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %40, i64 0, i32 0
  store i8* null, i8** %44, align 8
  %45 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %40, i64 1, i32 0
  store i8* null, i8** %45, align 8
  %46 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %40, i64 2, i32 0
  store i8* null, i8** %46, align 8
  %47 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %40, i64 3, i32 0
  store i8* null, i8** %47, align 8
  %48 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %40, i64 4, i32 0
  store i8* null, i8** %48, align 8
  %49 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %40, i64 5, i32 0
  store i8* null, i8** %49, align 8
  %50 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %40, i64 6, i32 0
  store i8* null, i8** %50, align 8
  %51 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %40, i64 7, i32 0
  store i8* null, i8** %51, align 8
  %52 = bitcast %"class.v8::internal::VariableMap"* %22 to i64*
  store i64 %27, i64* %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %54 = bitcast %"struct.v8::base::TemplateHashMapEntry"** %53 to i64*
  store i64 %39, i64* %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  store i32 8, i32* %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 3
  store i32 0, i32* %56, align 4
  %57 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 2
  %58 = load i8, i8* %57, align 1
  %59 = add i8 %58, -11
  %60 = icmp ult i8 %59, 2
  br i1 %60, label %64, label %61

61:                                               ; preds = %43
  %62 = load i16, i16* %16, align 1
  %63 = or i16 %62, 1
  store i16 %63, i16* %16, align 1
  tail call void @_ZN2v88internal16DeclarationScope31DeclareDefaultFunctionVariablesEPNS0_15AstValueFactoryE(%"class.v8::internal::DeclarationScope"* %0, %"class.v8::internal::AstValueFactory"* %1)
  br label %64

64:                                               ; preds = %43, %61, %3
  %65 = xor i1 %2, true
  %66 = zext i1 %65 to i16
  %67 = load i16, i16* %16, align 1
  %68 = shl nuw nsw i16 %66, 7
  %69 = and i16 %67, -129
  %70 = or i16 %69, %68
  store i16 %70, i16* %16, align 1
  ret void
}

declare void @_ZN2v88internal4Zone13ReleaseMemoryEv(%"class.v8::internal::Zone"*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Scope24IsSkippableFunctionScopeEv(%"class.v8::internal::Scope"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 12
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 2
  br i1 %4, label %5, label %15

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 14, i64 2
  %7 = load i8, i8* %6, align 1
  %8 = add i8 %7, -11
  %9 = icmp ult i8 %8, 2
  br i1 %9, label %15, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 1, i32 5, i32 1
  %12 = bitcast %"class.v8::internal::VariableProxy"*** %11 to %"class.v8::internal::PreparseDataBuilder"**
  %13 = load %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %12, align 8
  %14 = icmp ne %"class.v8::internal::PreparseDataBuilder"* %13, null
  br label %15

15:                                               ; preds = %5, %10, %1
  %16 = phi i1 [ false, %1 ], [ false, %5 ], [ %14, %10 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Scope16SavePreparseDataEPNS0_6ParserE(%"class.v8::internal::Scope"*, %"class.v8::internal::Parser"*) local_unnamed_addr #0 align 2 {
  br label %3

3:                                                ; preds = %42, %2
  %4 = phi %"class.v8::internal::Scope"* [ %0, %2 ], [ %43, %42 ]
  %5 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 12
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 2
  br i1 %7, label %8, label %20

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 14, i64 2
  %10 = load i8, i8* %9, align 1
  %11 = add i8 %10, -11
  %12 = icmp ult i8 %11, 2
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 1, i32 5, i32 1
  %15 = bitcast %"class.v8::internal::VariableProxy"*** %14 to %"class.v8::internal::PreparseDataBuilder"**
  %16 = load %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %15, align 8
  %17 = icmp eq %"class.v8::internal::PreparseDataBuilder"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::internal::Scope"* %4 to %"class.v8::internal::DeclarationScope"*
  tail call void @_ZN2v88internal19PreparseDataBuilder23SaveScopeAllocationDataEPNS0_16DeclarationScopeEPNS0_6ParserE(%"class.v8::internal::PreparseDataBuilder"* nonnull %16, %"class.v8::internal::DeclarationScope"* %19, %"class.v8::internal::Parser"* %1) #10
  br label %20

20:                                               ; preds = %18, %13, %8, %3
  %21 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 1
  %22 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %21, align 8
  %23 = icmp eq %"class.v8::internal::Scope"* %22, null
  br i1 %23, label %24, label %42

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 2
  %26 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %25, align 8
  %27 = icmp eq %"class.v8::internal::Scope"* %26, null
  %28 = icmp eq %"class.v8::internal::Scope"* %4, %0
  br i1 %27, label %29, label %39

29:                                               ; preds = %24, %32
  %30 = phi i1 [ %38, %32 ], [ %28, %24 ]
  %31 = phi %"class.v8::internal::Scope"* [ %34, %32 ], [ %4, %24 ]
  br i1 %30, label %44, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %31, i64 0, i32 0
  %34 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %34, i64 0, i32 2
  %36 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %35, align 8
  %37 = icmp eq %"class.v8::internal::Scope"* %36, null
  %38 = icmp eq %"class.v8::internal::Scope"* %34, %0
  br i1 %37, label %29, label %39

39:                                               ; preds = %32, %24
  %40 = phi %"class.v8::internal::Scope"* [ %26, %24 ], [ %36, %32 ]
  %41 = phi i1 [ %28, %24 ], [ %38, %32 ]
  br i1 %41, label %44, label %42

42:                                               ; preds = %39, %20
  %43 = phi %"class.v8::internal::Scope"* [ %22, %20 ], [ %40, %39 ]
  br label %3

44:                                               ; preds = %39, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16DeclarationScope35SavePreparseDataForDeclarationScopeEPNS0_6ParserE(%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::Parser"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 12
  %4 = load %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %3, align 8
  %5 = icmp eq %"class.v8::internal::PreparseDataBuilder"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN2v88internal19PreparseDataBuilder23SaveScopeAllocationDataEPNS0_16DeclarationScopeEPNS0_6ParserE(%"class.v8::internal::PreparseDataBuilder"* nonnull %4, %"class.v8::internal::DeclarationScope"* %0, %"class.v8::internal::Parser"* %1) #10
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

declare void @_ZN2v88internal19PreparseDataBuilder23SaveScopeAllocationDataEPNS0_16DeclarationScopeEPNS0_6ParserE(%"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::Parser"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16DeclarationScope16AnalyzePartiallyEPNS0_6ParserEPNS0_14AstNodeFactoryEb(%"class.v8::internal::DeclarationScope"*, %"class.v8::internal::Parser"*, %"class.v8::internal::AstNodeFactory"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::base::ThreadedListBase.18", align 8
  %6 = bitcast %"class.v8::base::ThreadedListBase.18"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.v8::base::ThreadedListBase.18", %"class.v8::base::ThreadedListBase.18"* %5, i64 0, i32 0
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::base::ThreadedListBase.18", %"class.v8::base::ThreadedListBase.18"* %5, i64 0, i32 1
  store %"class.v8::internal::VariableProxy"** %7, %"class.v8::internal::VariableProxy"*** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 2
  %10 = load i8, i8* %9, align 1
  %11 = add i8 %10, -11
  %12 = icmp ult i8 %11, 2
  br i1 %12, label %89, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.v8::internal::DeclarationScope"* %0 to %"class.v8::internal::Scope"*
  %15 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 0
  %16 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %16, i64 0, i32 12
  %18 = load i8, i8* %17, align 8
  %19 = icmp ne i8 %18, 4
  %20 = or i1 %19, %3
  br i1 %20, label %27, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 12
  %23 = load %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %22, align 8
  %24 = icmp eq %"class.v8::internal::PreparseDataBuilder"* %23, null
  br i1 %24, label %89, label %25

25:                                               ; preds = %21
  %26 = call zeroext i1 @_ZNK2v88internal19PreparseDataBuilder17HasInnerFunctionsEv(%"class.v8::internal::PreparseDataBuilder"* nonnull %23) #10
  br i1 %26, label %27, label %89

27:                                               ; preds = %13, %25
  call void @_ZN2v88internal5Scope16AnalyzePartiallyEPNS0_16DeclarationScopeEPNS0_14AstNodeFactoryEPNS_4base16ThreadedListBaseINS0_13VariableProxyENS6_9EmptyBaseENS8_14UnresolvedNextEEEb(%"class.v8::internal::Scope"* %14, %"class.v8::internal::DeclarationScope"* %0, %"class.v8::internal::AstNodeFactory"* %2, %"class.v8::base::ThreadedListBase.18"* nonnull %5, i1 zeroext %3)
  %28 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 9
  %29 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %28, align 8
  %30 = icmp eq %"class.v8::internal::Variable"* %29, null
  br i1 %30, label %47, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.v8::internal::AstNodeFactory", %"class.v8::internal::AstNodeFactory"* %2, i64 0, i32 0
  %33 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %33, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %33, i64 0, i32 3
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %37, %35
  %39 = icmp ult i64 %38, 48
  br i1 %39, label %40, label %42, !prof !2

40:                                               ; preds = %31
  %41 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %33, i64 48) #10
  br label %44

42:                                               ; preds = %31
  %43 = add i64 %35, 48
  store i64 %43, i64* %34, align 8
  br label %44

44:                                               ; preds = %40, %42
  %45 = phi i64 [ %41, %40 ], [ %35, %42 ]
  %46 = inttoptr i64 %45 to %"class.v8::internal::Variable"*
  call void @_ZN2v88internal8VariableC1EPS1_(%"class.v8::internal::Variable"* %46, %"class.v8::internal::Variable"* nonnull %29) #10
  store %"class.v8::internal::Variable"* %46, %"class.v8::internal::Variable"** %28, align 8
  br label %47

47:                                               ; preds = %27, %44
  br label %48

48:                                               ; preds = %87, %47
  %49 = phi %"class.v8::internal::Scope"* [ %14, %47 ], [ %88, %87 ]
  %50 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %49, i64 0, i32 12
  %51 = load i8, i8* %50, align 8
  %52 = icmp eq i8 %51, 2
  br i1 %52, label %53, label %65

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %49, i64 0, i32 14, i64 2
  %55 = load i8, i8* %54, align 1
  %56 = add i8 %55, -11
  %57 = icmp ult i8 %56, 2
  br i1 %57, label %65, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %49, i64 1, i32 5, i32 1
  %60 = bitcast %"class.v8::internal::VariableProxy"*** %59 to %"class.v8::internal::PreparseDataBuilder"**
  %61 = load %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder"** %60, align 8
  %62 = icmp eq %"class.v8::internal::PreparseDataBuilder"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %58
  %64 = bitcast %"class.v8::internal::Scope"* %49 to %"class.v8::internal::DeclarationScope"*
  call void @_ZN2v88internal19PreparseDataBuilder23SaveScopeAllocationDataEPNS0_16DeclarationScopeEPNS0_6ParserE(%"class.v8::internal::PreparseDataBuilder"* nonnull %61, %"class.v8::internal::DeclarationScope"* %64, %"class.v8::internal::Parser"* %1) #10
  br label %65

65:                                               ; preds = %63, %58, %53, %48
  %66 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %49, i64 0, i32 1
  %67 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %66, align 8
  %68 = icmp eq %"class.v8::internal::Scope"* %67, null
  br i1 %68, label %69, label %87

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %49, i64 0, i32 2
  %71 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %70, align 8
  %72 = icmp eq %"class.v8::internal::Scope"* %71, null
  %73 = icmp eq %"class.v8::internal::Scope"* %49, %14
  br i1 %72, label %74, label %84

74:                                               ; preds = %69, %77
  %75 = phi i1 [ %83, %77 ], [ %73, %69 ]
  %76 = phi %"class.v8::internal::Scope"* [ %79, %77 ], [ %49, %69 ]
  br i1 %75, label %89, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %76, i64 0, i32 0
  %79 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %79, i64 0, i32 2
  %81 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %80, align 8
  %82 = icmp eq %"class.v8::internal::Scope"* %81, null
  %83 = icmp eq %"class.v8::internal::Scope"* %79, %14
  br i1 %82, label %74, label %84

84:                                               ; preds = %77, %69
  %85 = phi %"class.v8::internal::Scope"* [ %71, %69 ], [ %81, %77 ]
  %86 = phi i1 [ %73, %69 ], [ %83, %77 ]
  br i1 %86, label %89, label %87

87:                                               ; preds = %84, %65
  %88 = phi %"class.v8::internal::Scope"* [ %67, %65 ], [ %85, %84 ]
  br label %48

89:                                               ; preds = %84, %74, %21, %25, %4
  %90 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 6
  %91 = bitcast %"class.v8::internal::ZoneList"* %90 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 16, i1 false) #10
  %92 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 6, i32 0
  store %"class.v8::internal::Declaration"* null, %"class.v8::internal::Declaration"** %92, align 8
  %93 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 6, i32 1
  store %"class.v8::internal::Declaration"** %92, %"class.v8::internal::Declaration"*** %93, align 8
  %94 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 4, i32 0
  store %"class.v8::internal::Variable"* null, %"class.v8::internal::Variable"** %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 4, i32 1
  store %"class.v8::internal::Variable"** %94, %"class.v8::internal::Variable"*** %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 1
  store %"class.v8::internal::Scope"* null, %"class.v8::internal::Scope"** %96, align 8
  %97 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 5, i32 0
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %97, align 8
  %98 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 5, i32 1
  store %"class.v8::internal::VariableProxy"** %97, %"class.v8::internal::VariableProxy"*** %98, align 8
  %99 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 7, i32 0
  store %"class.v8::internal::SloppyBlockFunctionStatement"* null, %"class.v8::internal::SloppyBlockFunctionStatement"** %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 7, i32 1
  store %"class.v8::internal::SloppyBlockFunctionStatement"** %99, %"class.v8::internal::SloppyBlockFunctionStatement"*** %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 13
  store %"struct.v8::internal::DeclarationScope::RareData"* null, %"struct.v8::internal::DeclarationScope::RareData"** %101, align 8
  %102 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 1
  %103 = load i16, i16* %102, align 1
  %104 = and i16 %103, -9
  store i16 %104, i16* %102, align 1
  %105 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 9
  store %"class.v8::internal::Variable"* null, %"class.v8::internal::Variable"** %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 3
  %109 = bitcast %"class.v8::internal::VariableMap"* %108 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 24, i1 false) #10
  call void @_ZN2v88internal4Zone13ReleaseMemoryEv(%"class.v8::internal::Zone"* %107) #10
  %110 = load i16, i16* %102, align 1
  %111 = or i16 %110, 128
  store i16 %111, i16* %102, align 1
  %112 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %0, i64 0, i32 0, i32 5
  %113 = bitcast %"class.v8::base::ThreadedListBase.18"* %5 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.v8::base::ThreadedListBase.18"* %112 to i64*
  store i64 %114, i64* %115, align 8
  %116 = icmp eq i64 %114, 0
  %117 = load %"class.v8::internal::VariableProxy"**, %"class.v8::internal::VariableProxy"*** %8, align 8
  %118 = getelementptr inbounds %"class.v8::base::ThreadedListBase.18", %"class.v8::base::ThreadedListBase.18"* %112, i64 0, i32 0
  %119 = select i1 %116, %"class.v8::internal::VariableProxy"** %118, %"class.v8::internal::VariableProxy"** %117
  store %"class.v8::internal::VariableProxy"** %119, %"class.v8::internal::VariableProxy"*** %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret void
}

declare zeroext i1 @_ZNK2v88internal19PreparseDataBuilder17HasInnerFunctionsEv(%"class.v8::internal::PreparseDataBuilder"*) local_unnamed_addr #5

declare void @_ZN2v88internal8Variable22RewriteLocationForReplEv(%"class.v8::internal::Variable"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK2v88internal8Variable22IsGlobalObjectPropertyEv(%"class.v8::internal::Variable"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Scope15ResolveVariableEPNS0_13VariableProxyE(%"class.v8::internal::Scope"*, %"class.v8::internal::VariableProxy"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal5Scope6LookupILNS1_15ScopeLookupModeE0EEEPNS0_8VariableEPNS0_13VariableProxyEPS1_S8_S8_b(%"class.v8::internal::VariableProxy"* %1, %"class.v8::internal::Scope"* %0, %"class.v8::internal::Scope"* null, %"class.v8::internal::Scope"* null, i1 zeroext false)
  tail call void @_ZN2v88internal5Scope9ResolveToEPNS0_13VariableProxyEPNS0_8VariableE(%"class.v8::internal::Scope"* %0, %"class.v8::internal::VariableProxy"* %1, %"class.v8::internal::Variable"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Scope9ResolveToEPNS0_13VariableProxyEPNS0_8VariableE(%"class.v8::internal::Scope"* readonly, %"class.v8::internal::VariableProxy"*, %"class.v8::internal::Variable"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %2, i64 0, i32 6
  %5 = load i16, i16* %4, align 8
  %6 = and i16 %5, 15
  %7 = icmp eq i16 %6, 6
  br i1 %7, label %8, label %18

8:                                                ; preds = %3, %8
  %9 = phi %"class.v8::internal::Variable"* [ %11, %8 ], [ %2, %3 ]
  %10 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %9, i64 0, i32 2
  %11 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %11, i64 0, i32 6
  %13 = load i16, i16* %12, align 8
  %14 = and i16 %13, 15
  %15 = icmp eq i16 %14, 6
  br i1 %15, label %8, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %11, i64 0, i32 6
  br label %18

18:                                               ; preds = %16, %3
  %19 = phi %"class.v8::internal::Variable"* [ %2, %3 ], [ %11, %16 ]
  %20 = phi i16* [ %4, %3 ], [ %17, %16 ]
  %21 = phi i16 [ %5, %3 ], [ %13, %16 ]
  %22 = and i16 %21, 4096
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %24, label %89

24:                                               ; preds = %18
  %25 = and i16 %21, 896
  %26 = icmp eq i16 %25, 640
  br i1 %26, label %27, label %37

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %19, i64 0, i32 4
  %29 = load i32, i32* %28, align 8
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %1, i64 0, i32 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, -2049
  store i32 %34, i32* %32, align 4
  %35 = load i16, i16* %20, align 8
  %36 = or i16 %35, 8192
  store i16 %36, i16* %20, align 8
  br label %89

37:                                               ; preds = %27, %24
  %38 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %19, i64 0, i32 0
  %39 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %38, align 8
  br label %40

40:                                               ; preds = %49, %37
  %41 = phi %"class.v8::internal::Scope"* [ %39, %37 ], [ %51, %49 ]
  %42 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %41, i64 0, i32 13
  %43 = load i16, i16* %42, align 1
  %44 = and i16 %43, 256
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %41, i64 0, i32 12
  %48 = load i8, i8* %47, align 8
  switch i8 %48, label %52 [
    i8 6, label %49
    i8 0, label %49
  ]

49:                                               ; preds = %46, %46, %40
  %50 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %41, i64 0, i32 0
  %51 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %50, align 8
  br label %40

52:                                               ; preds = %46, %61
  %53 = phi %"class.v8::internal::Scope"* [ %63, %61 ], [ %0, %46 ]
  %54 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %53, i64 0, i32 13
  %55 = load i16, i16* %54, align 1
  %56 = and i16 %55, 256
  %57 = icmp eq i16 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %53, i64 0, i32 12
  %60 = load i8, i8* %59, align 8
  switch i8 %60, label %64 [
    i8 6, label %61
    i8 0, label %61
  ]

61:                                               ; preds = %58, %58, %52
  %62 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %53, i64 0, i32 0
  %63 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %62, align 8
  br label %52

64:                                               ; preds = %58
  %65 = icmp eq %"class.v8::internal::Scope"* %41, %53
  br i1 %65, label %72, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %1, i64 0, i32 0, i32 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = and i32 %68, -2049
  store i32 %69, i32* %67, align 4
  %70 = load i16, i16* %20, align 8
  %71 = or i16 %70, 8192
  store i16 %71, i16* %20, align 8
  br label %89

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %39, i64 0, i32 13
  %74 = load i16, i16* %73, align 1
  %75 = and i16 %74, 8
  %76 = icmp eq i16 %75, 0
  br i1 %76, label %77, label %83

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %19, i64 0, i32 5
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %1, i64 0, i32 0, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp slt i32 %79, %81
  br i1 %82, label %89, label %83

83:                                               ; preds = %77, %72
  %84 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %1, i64 0, i32 0, i32 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = and i32 %85, -2049
  store i32 %86, i32* %84, align 4
  %87 = load i16, i16* %20, align 8
  %88 = or i16 %87, 8192
  store i16 %88, i16* %20, align 8
  br label %89

89:                                               ; preds = %18, %31, %66, %77, %83
  tail call void @_ZN2v88internal13VariableProxy6BindToEPNS0_8VariableE(%"class.v8::internal::VariableProxy"* %1, %"class.v8::internal::Variable"* %2) #10
  ret void
}

declare void @_ZN2v88internal13VariableProxy6BindToEPNS0_8VariableE(%"class.v8::internal::VariableProxy"*, %"class.v8::internal::Variable"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Scope24ResolvePreparsedVariableEPNS0_13VariableProxyEPS1_S4_(%"class.v8::internal::VariableProxy"* nocapture readonly, %"class.v8::internal::Scope"* readonly, %"class.v8::internal::Scope"* readnone) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.v8::internal::Scope"* %1, %2
  br i1 %4, label %80, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %0, i64 0, i32 1
  %8 = bitcast %union.anon* %7 to %"class.v8::internal::Variable"**
  %9 = getelementptr inbounds %union.anon, %union.anon* %7, i64 0, i32 0
  br label %10

10:                                               ; preds = %5, %76
  %11 = phi %"class.v8::internal::Scope"* [ %1, %5 ], [ %78, %76 ]
  %12 = load i32, i32* %6, align 4
  %13 = and i32 %12, 256
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %8, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %16, i64 0, i32 1
  br label %18

18:                                               ; preds = %10, %15
  %19 = phi %"class.v8::internal::AstRawString"** [ %17, %15 ], [ %9, %10 ]
  %20 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %19, align 8
  %21 = bitcast %"class.v8::internal::AstRawString"* %20 to i8*
  %22 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %20, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = lshr i32 %23, 2
  %25 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %11, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = add i32 %26, -1
  %28 = and i32 %27, %24
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %11, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %31 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %30, align 8
  %32 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %31, i64 %29
  %33 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %32, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, null
  %36 = icmp eq i8* %34, %21
  %37 = or i1 %35, %36
  br i1 %37, label %50, label %38

38:                                               ; preds = %18
  %39 = zext i32 %27 to i64
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ %29, %38 ], [ %43, %40 ]
  %42 = add nuw nsw i64 %41, 1
  %43 = and i64 %42, %39
  %44 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %31, i64 %43
  %45 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %44, i64 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, null
  %48 = icmp eq i8* %46, %21
  %49 = or i1 %47, %48
  br i1 %49, label %50, label %40

50:                                               ; preds = %40, %18
  %51 = phi i8* [ %34, %18 ], [ %46, %40 ]
  %52 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %32, %18 ], [ %44, %40 ]
  %53 = icmp eq i8* %51, null
  %54 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %52, null
  %55 = or i1 %53, %54
  br i1 %55, label %76, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %52, i64 0, i32 1
  %58 = bitcast i8** %57 to %"class.v8::internal::Variable"**
  %59 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %58, align 8
  %60 = icmp eq %"class.v8::internal::Variable"* %59, null
  br i1 %60, label %76, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %59, i64 0, i32 6
  %63 = load i16, i16* %62, align 8
  %64 = or i16 %63, 2048
  store i16 %64, i16* %62, align 8
  %65 = trunc i16 %63 to i8
  %66 = and i8 %65, 15
  %67 = add nsw i8 %66, -4
  %68 = icmp ult i8 %67, 3
  br i1 %68, label %76, label %69

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %59, i64 0, i32 6
  %71 = or i16 %63, 3072
  store i16 %71, i16* %70, align 8
  %72 = load i32, i32* %6, align 4
  %73 = trunc i32 %72 to i8
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %80

75:                                               ; preds = %69
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* nonnull %59)
  br label %80

76:                                               ; preds = %50, %56, %61
  %77 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %11, i64 0, i32 0
  %78 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %77, align 8
  %79 = icmp eq %"class.v8::internal::Scope"* %78, %2
  br i1 %79, label %80, label %10

80:                                               ; preds = %76, %3, %69, %75
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Scope12MustAllocateEPNS0_8VariableE(%"class.v8::internal::Scope"* nocapture readonly, %"class.v8::internal::Variable"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %4, i64 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %6 to i32
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %30, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 13
  %11 = load i16, i16* %10, align 1
  %12 = and i16 %11, 64
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 12
  %16 = load i8, i8* %15, align 8
  %17 = and i8 %16, -2
  %18 = icmp eq i8 %17, 4
  br i1 %18, label %19, label %30

19:                                               ; preds = %14, %9
  %20 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1, i64 0, i32 6
  %21 = load i16, i16* %20, align 8
  %22 = or i16 %21, 2048
  store i16 %22, i16* %20, align 8
  %23 = load i16, i16* %10, align 1
  %24 = and i16 %23, 64
  %25 = icmp eq i16 %24, 0
  %26 = and i16 %21, 112
  %27 = icmp eq i16 %26, 32
  %28 = or i1 %27, %25
  br i1 %28, label %30, label %29

29:                                               ; preds = %19
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* %1)
  br label %30

30:                                               ; preds = %14, %19, %29, %2
  %31 = tail call zeroext i1 @_ZNK2v88internal8Variable22IsGlobalObjectPropertyEv(%"class.v8::internal::Variable"* %1) #10
  br i1 %31, label %37, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1, i64 0, i32 6
  %34 = load i16, i16* %33, align 8
  %35 = and i16 %34, 2048
  %36 = icmp ne i16 %35, 0
  br label %37

37:                                               ; preds = %32, %30
  %38 = phi i1 [ false, %30 ], [ %36, %32 ]
  ret i1 %38
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal5Scope21MustAllocateInContextEPNS0_8VariableE(%"class.v8::internal::Scope"* nocapture readonly, %"class.v8::internal::Variable"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1, i64 0, i32 6
  %4 = load i16, i16* %3, align 8
  %5 = trunc i16 %4 to i8
  %6 = and i8 %5, 15
  %7 = icmp eq i8 %6, 3
  br i1 %7, label %21, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 12
  %10 = load i8, i8* %9, align 8
  switch i8 %10, label %13 [
    i8 5, label %21
    i8 4, label %11
    i8 1, label %11
  ]

11:                                               ; preds = %8, %8
  %12 = icmp ult i8 %6, 2
  br i1 %12, label %21, label %13

13:                                               ; preds = %8, %11
  %14 = and i16 %4, 1024
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 13
  %18 = load i16, i16* %17, align 1
  %19 = and i16 %18, 64
  %20 = icmp ne i16 %19, 0
  br label %21

21:                                               ; preds = %13, %8, %16, %11, %2
  %22 = phi i1 [ false, %2 ], [ true, %8 ], [ true, %11 ], [ true, %13 ], [ %20, %16 ]
  ret i1 %22
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN2v88internal5Scope17AllocateStackSlotEPNS0_8VariableE(%"class.v8::internal::Scope"* nocapture, %"class.v8::internal::Variable"* nocapture) local_unnamed_addr #7 align 2 {
  br label %3

3:                                                ; preds = %14, %2
  %4 = phi %"class.v8::internal::Scope"* [ %0, %2 ], [ %15, %14 ]
  %5 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 12
  %6 = load i8, i8* %5, align 8
  switch i8 %6, label %24 [
    i8 6, label %7
    i8 0, label %7
  ]

7:                                                ; preds = %3, %3
  %8 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 0
  %9 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %9, i64 0, i32 13
  %11 = load i16, i16* %10, align 1
  %12 = and i16 %11, 256
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %16, %7
  %15 = phi %"class.v8::internal::Scope"* [ %9, %7 ], [ %19, %16 ]
  br label %3

16:                                               ; preds = %7, %16
  %17 = phi %"class.v8::internal::Scope"* [ %19, %16 ], [ %9, %7 ]
  %18 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %17, i64 0, i32 0
  %19 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %19, i64 0, i32 13
  %21 = load i16, i16* %20, align 1
  %22 = and i16 %21, 256
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %16, label %14

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %4, i64 0, i32 10
  %26 = load i32, i32* %25, align 8
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %25, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1, i64 0, i32 6
  %29 = load i16, i16* %28, align 8
  %30 = and i16 %29, -897
  %31 = or i16 %30, 256
  store i16 %31, i16* %28, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1, i64 0, i32 4
  store i32 %26, i32* %32, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5Scope25AllocateNonParameterLocalEPNS0_8VariableE(%"class.v8::internal::Scope"* nocapture, %"class.v8::internal::Variable"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1, i64 0, i32 6
  %4 = load i16, i16* %3, align 8
  %5 = and i16 %4, 896
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %94

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1, i64 0, i32 1
  %9 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %9, i64 0, i32 1, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %33, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 13
  %16 = load i16, i16* %15, align 1
  %17 = and i16 %16, 64
  %18 = icmp eq i16 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 12
  %21 = load i8, i8* %20, align 8
  %22 = and i8 %21, -2
  %23 = icmp eq i8 %22, 4
  br i1 %23, label %24, label %33

24:                                               ; preds = %19, %14
  %25 = or i16 %4, 2048
  store i16 %25, i16* %3, align 8
  %26 = load i16, i16* %15, align 1
  %27 = and i16 %26, 64
  %28 = icmp eq i16 %27, 0
  %29 = and i16 %4, 112
  %30 = icmp eq i16 %29, 32
  %31 = or i1 %30, %28
  br i1 %31, label %33, label %32

32:                                               ; preds = %24
  tail call void @_ZN2v88internal8Variable16SetMaybeAssignedEv(%"class.v8::internal::Variable"* %1) #10
  br label %33

33:                                               ; preds = %32, %24, %19, %7
  %34 = tail call zeroext i1 @_ZNK2v88internal8Variable22IsGlobalObjectPropertyEv(%"class.v8::internal::Variable"* %1) #10
  br i1 %34, label %94, label %35

35:                                               ; preds = %33
  %36 = load i16, i16* %3, align 8
  %37 = and i16 %36, 2048
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %94, label %39

39:                                               ; preds = %35
  %40 = trunc i16 %36 to i8
  %41 = and i8 %40, 15
  %42 = icmp eq i8 %41, 3
  br i1 %42, label %43, label %44

43:                                               ; preds = %52, %39
  br label %65

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 12
  %46 = load i8, i8* %45, align 8
  switch i8 %46, label %49 [
    i8 5, label %57
    i8 4, label %47
    i8 1, label %47
  ]

47:                                               ; preds = %44, %44
  %48 = icmp ult i8 %41, 2
  br i1 %48, label %57, label %49

49:                                               ; preds = %47, %44
  %50 = and i16 %36, 1024
  %51 = icmp eq i16 %50, 0
  br i1 %51, label %52, label %57

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 13
  %54 = load i16, i16* %53, align 1
  %55 = and i16 %54, 64
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %43, label %57

57:                                               ; preds = %52, %49, %47, %44
  %58 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 11
  %59 = load i32, i32* %58, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %58, align 4
  %61 = load i16, i16* %3, align 8
  %62 = and i16 %61, -897
  %63 = or i16 %62, 384
  store i16 %63, i16* %3, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1, i64 0, i32 4
  store i32 %59, i32* %64, align 8
  br label %94

65:                                               ; preds = %76, %43
  %66 = phi %"class.v8::internal::Scope"* [ %0, %43 ], [ %77, %76 ]
  %67 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %66, i64 0, i32 12
  %68 = load i8, i8* %67, align 8
  switch i8 %68, label %86 [
    i8 6, label %69
    i8 0, label %69
  ]

69:                                               ; preds = %65, %65
  %70 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %66, i64 0, i32 0
  %71 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %71, i64 0, i32 13
  %73 = load i16, i16* %72, align 1
  %74 = and i16 %73, 256
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %78, %69
  %77 = phi %"class.v8::internal::Scope"* [ %71, %69 ], [ %81, %78 ]
  br label %65

78:                                               ; preds = %69, %78
  %79 = phi %"class.v8::internal::Scope"* [ %81, %78 ], [ %71, %69 ]
  %80 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %79, i64 0, i32 0
  %81 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %81, i64 0, i32 13
  %83 = load i16, i16* %82, align 1
  %84 = and i16 %83, 256
  %85 = icmp eq i16 %84, 0
  br i1 %85, label %78, label %76

86:                                               ; preds = %65
  %87 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %66, i64 0, i32 10
  %88 = load i32, i32* %87, align 8
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %87, align 8
  %90 = load i16, i16* %3, align 8
  %91 = and i16 %90, -897
  %92 = or i16 %91, 256
  store i16 %92, i16* %3, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1, i64 0, i32 4
  store i32 %88, i32* %93, align 8
  br label %94

94:                                               ; preds = %35, %33, %57, %86, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal16DeclarationScope40RecordNeedsPrivateNameContextChainRecalcEv(%"class.v8::internal::DeclarationScope"*) local_unnamed_addr #6 align 2 {
  %2 = icmp eq %"class.v8::internal::DeclarationScope"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1, %26
  %4 = phi %"class.v8::internal::DeclarationScope"* [ %27, %26 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %4, i64 0, i32 1
  %6 = load i16, i16* %5, align 1
  %7 = and i16 %6, 8192
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %29

9:                                                ; preds = %3
  %10 = or i16 %6, 8192
  store i16 %10, i16* %5, align 1
  %11 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %4, i64 0, i32 0, i32 0
  %12 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %11, align 8
  %13 = icmp eq %"class.v8::internal::Scope"* %12, null
  br i1 %13, label %29, label %14

14:                                               ; preds = %9, %23
  %15 = phi %"class.v8::internal::Scope"* [ %25, %23 ], [ %12, %9 ]
  %16 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %15, i64 0, i32 13
  %17 = load i16, i16* %16, align 1
  %18 = and i16 %17, 256
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %15, i64 0, i32 12
  %22 = load i8, i8* %21, align 8
  switch i8 %22, label %26 [
    i8 6, label %23
    i8 0, label %23
  ]

23:                                               ; preds = %20, %20, %14
  %24 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %15, i64 0, i32 0
  %25 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %24, align 8
  br label %14

26:                                               ; preds = %20
  %27 = bitcast %"class.v8::internal::Scope"* %15 to %"class.v8::internal::DeclarationScope"*
  %28 = icmp eq %"class.v8::internal::Scope"* %15, null
  br i1 %28, label %29, label %3

29:                                               ; preds = %9, %3, %26, %1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal5Scope17ContextLocalCountEv(%"class.v8::internal::Scope"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 11
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 12
  %7 = load i8, i8* %6, align 8
  switch i8 %7, label %18 [
    i8 2, label %8
    i8 3, label %24
    i8 7, label %24
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 1, i32 4, i32 0
  %10 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %9, align 8
  %11 = icmp eq %"class.v8::internal::Variable"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %10, i64 0, i32 6
  %14 = load i16, i16* %13, align 8
  %15 = and i16 %14, 896
  %16 = icmp eq i16 %15, 384
  %17 = zext i1 %16 to i32
  br label %18

18:                                               ; preds = %5, %12, %8
  %19 = phi i32 [ %17, %12 ], [ 0, %8 ], [ 0, %5 ]
  %20 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 13
  %21 = load i16, i16* %20, align 1
  %22 = and i16 %21, 4
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %5, %5, %18
  %25 = phi i32 [ %19, %18 ], [ 0, %5 ], [ 0, %5 ]
  br label %26

26:                                               ; preds = %18, %24
  %27 = phi i32 [ %25, %24 ], [ %19, %18 ]
  %28 = phi i32 [ -3, %24 ], [ -2, %18 ]
  %29 = sub nuw i32 %3, %27
  %30 = add i32 %29, %28
  br label %31

31:                                               ; preds = %1, %26
  %32 = phi i32 [ %30, %26 ], [ 0, %1 ]
  ret i32 %32
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal27IsComplementaryAccessorPairENS0_12VariableModeES1_(i8 zeroext, i8 zeroext) local_unnamed_addr #2 {
  switch i8 %0, label %7 [
    i8 9, label %3
    i8 8, label %5
  ]

3:                                                ; preds = %2
  %4 = icmp eq i8 %1, 8
  br label %7

5:                                                ; preds = %2
  %6 = icmp eq i8 %1, 9
  br label %7

7:                                                ; preds = %2, %5, %3
  %8 = phi i1 [ %6, %5 ], [ %4, %3 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal10ClassScope18DeclarePrivateNameEPKNS0_12AstRawStringENS0_12VariableModeENS0_12IsStaticFlagEPb(%"class.v8::internal::ClassScope"*, %"class.v8::internal::AstRawString"*, i8 zeroext, i8 zeroext, i8* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::Zone"*, align 8
  %7 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 2, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 2
  br i1 %9, label %10, label %19

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %11, align 8
  %13 = bitcast %"class.v8::internal::Zone"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  store %"class.v8::internal::Zone"* %12, %"class.v8::internal::Zone"** %6, align 8
  %14 = call %"struct.v8::internal::ClassScope::RareData"* @_ZN2v88internal4Zone3NewINS0_10ClassScope8RareDataEJPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"* %12, %"class.v8::internal::Zone"** nonnull dereferenceable(8) %6) #10
  %15 = ptrtoint %"struct.v8::internal::ClassScope::RareData"* %14 to i64
  %16 = load i64, i64* %7, align 8
  %17 = and i64 %16, 1
  %18 = or i64 %17, %15
  store i64 %18, i64* %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  br label %19

19:                                               ; preds = %5, %10
  %20 = phi i64 [ %18, %10 ], [ %8, %5 ]
  %21 = and i64 %20, -2
  %22 = inttoptr i64 %21 to %"struct.v8::internal::ClassScope::RareData"*
  %23 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %22, i64 0, i32 1
  %24 = bitcast %"class.v8::internal::ClassScope"* %0 to %"class.v8::internal::Scope"*
  %25 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %25, align 8
  %27 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %23, %"class.v8::internal::Zone"* %26, %"class.v8::internal::Scope"* %24, %"class.v8::internal::AstRawString"* %1, i8 zeroext %2, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, i8 zeroext %3, i8* %4)
  %28 = load i8, i8* %4, align 1, !range !5
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %49, label %30

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 0, i32 4, i32 1
  %32 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %31, align 8
  store %"class.v8::internal::Variable"* %27, %"class.v8::internal::Variable"** %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %27, i64 0, i32 3
  store %"class.v8::internal::Variable"** %33, %"class.v8::internal::Variable"*** %31, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %27, i64 0, i32 6
  %35 = load i16, i16* %34, align 8
  %36 = icmp slt i16 %35, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %30
  %38 = trunc i16 %35 to i8
  %39 = and i8 %38, 15
  %40 = add nsw i8 %39, -7
  %41 = icmp ult i8 %40, 4
  %42 = zext i1 %41 to i8
  br label %43

43:                                               ; preds = %37, %30
  %44 = phi i8 [ 0, %30 ], [ %42, %37 ]
  %45 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 4
  %46 = load i8, i8* %45, align 8, !range !5
  %47 = or i8 %46, %44
  store i8 %47, i8* %45, align 8
  %48 = load i16, i16* %34, align 8
  br label %66

49:                                               ; preds = %19
  %50 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %27, i64 0, i32 6
  %51 = load i16, i16* %50, align 8
  %52 = trunc i16 %51 to i8
  %53 = and i8 %52, 15
  switch i8 %53, label %66 [
    i8 9, label %56
    i8 8, label %54
  ]

54:                                               ; preds = %49
  %55 = icmp eq i8 %2, 9
  br i1 %55, label %58, label %66

56:                                               ; preds = %49
  %57 = icmp eq i8 %2, 8
  br i1 %57, label %58, label %66

58:                                               ; preds = %54, %56
  %59 = lshr i16 %51, 15
  %60 = trunc i16 %59 to i8
  %61 = icmp eq i8 %60, %3
  br i1 %61, label %62, label %66

62:                                               ; preds = %58
  store i8 1, i8* %4, align 1
  %63 = load i16, i16* %50, align 8
  %64 = and i16 %63, -16
  %65 = or i16 %64, 10
  store i16 %65, i16* %50, align 8
  br label %66

66:                                               ; preds = %49, %54, %56, %58, %62, %43
  %67 = phi i16 [ %51, %49 ], [ %51, %54 ], [ %51, %56 ], [ %51, %58 ], [ %65, %62 ], [ %48, %43 ]
  %68 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %27, i64 0, i32 6
  %69 = or i16 %67, 1024
  store i16 %69, i16* %68, align 8
  ret %"class.v8::internal::Variable"* %27
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal10ClassScope22LookupLocalPrivateNameEPKNS0_12AstRawStringE(%"class.v8::internal::ClassScope"* nocapture readonly, %"class.v8::internal::AstRawString"* readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 2, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -2
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %48, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"struct.v8::internal::ClassScope::RareData"*
  %9 = bitcast %"class.v8::internal::AstRawString"* %1 to i8*
  %10 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = lshr i32 %11, 2
  %13 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = and i32 %15, %12
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %19 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %18, align 8
  %20 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %19, i64 %17
  %21 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %20, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  %24 = icmp eq i8* %22, %9
  %25 = or i1 %23, %24
  br i1 %25, label %38, label %26

26:                                               ; preds = %7
  %27 = zext i32 %15 to i64
  br label %28

28:                                               ; preds = %28, %26
  %29 = phi i64 [ %17, %26 ], [ %31, %28 ]
  %30 = add nuw nsw i64 %29, 1
  %31 = and i64 %30, %27
  %32 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %19, i64 %31
  %33 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %32, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, null
  %36 = icmp eq i8* %34, %9
  %37 = or i1 %35, %36
  br i1 %37, label %38, label %28

38:                                               ; preds = %28, %7
  %39 = phi i8* [ %22, %7 ], [ %34, %28 ]
  %40 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %20, %7 ], [ %32, %28 ]
  %41 = icmp eq i8* %39, null
  %42 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %40, null
  %43 = or i1 %41, %42
  br i1 %43, label %48, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %40, i64 0, i32 1
  %46 = bitcast i8** %45 to %"class.v8::internal::Variable"**
  %47 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %46, align 8
  br label %48

48:                                               ; preds = %44, %38, %2
  %49 = phi %"class.v8::internal::Variable"* [ null, %2 ], [ %47, %44 ], [ null, %38 ]
  ret %"class.v8::internal::Variable"* %49
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::VariableProxy"** @_ZN2v88internal10ClassScope28GetUnresolvedPrivateNameTailEv(%"class.v8::internal::ClassScope"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 2, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -2
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = inttoptr i64 %4 to %"struct.v8::internal::ClassScope::RareData"*
  %8 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %7, i64 0, i32 0, i32 1
  %9 = load %"class.v8::internal::VariableProxy"**, %"class.v8::internal::VariableProxy"*** %8, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi %"class.v8::internal::VariableProxy"** [ %9, %6 ], [ null, %1 ]
  ret %"class.v8::internal::VariableProxy"** %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10ClassScope30ResetUnresolvedPrivateNameTailENS_4base16ThreadedListBaseINS0_13VariableProxyENS2_9EmptyBaseENS4_14UnresolvedNextEE8IteratorE(%"class.v8::internal::ClassScope"* nocapture readonly, %"class.v8::internal::VariableProxy"**) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 2, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -2
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %17, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"struct.v8::internal::ClassScope::RareData"*
  %9 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %8, i64 0, i32 0, i32 1
  %10 = load %"class.v8::internal::VariableProxy"**, %"class.v8::internal::VariableProxy"*** %9, align 8
  %11 = icmp eq %"class.v8::internal::VariableProxy"** %10, %1
  br i1 %11, label %17, label %12

12:                                               ; preds = %7
  %13 = icmp eq %"class.v8::internal::VariableProxy"** %1, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %8, i64 0, i32 0, i32 0
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %15, align 8
  store %"class.v8::internal::VariableProxy"** %15, %"class.v8::internal::VariableProxy"*** %9, align 8
  br label %17

16:                                               ; preds = %12
  store %"class.v8::internal::VariableProxy"** %1, %"class.v8::internal::VariableProxy"*** %9, align 8
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %1, align 8
  br label %17

17:                                               ; preds = %2, %14, %16, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10ClassScope32MigrateUnresolvedPrivateNameTailEPNS0_14AstNodeFactoryENS_4base16ThreadedListBaseINS0_13VariableProxyENS4_9EmptyBaseENS6_14UnresolvedNextEE8IteratorE(%"class.v8::internal::ClassScope"* nocapture readonly, %"class.v8::internal::AstNodeFactory"* nocapture readonly, %"class.v8::internal::VariableProxy"**) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::base::ThreadedListBase.18", align 8
  %5 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 2, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -2
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %129, label %9

9:                                                ; preds = %3
  %10 = inttoptr i64 %7 to %"struct.v8::internal::ClassScope::RareData"*
  %11 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %10, i64 0, i32 0, i32 1
  %12 = load %"class.v8::internal::VariableProxy"**, %"class.v8::internal::VariableProxy"*** %11, align 8
  %13 = icmp eq %"class.v8::internal::VariableProxy"** %12, %2
  br i1 %13, label %129, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.v8::base::ThreadedListBase.18"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.v8::base::ThreadedListBase.18", %"class.v8::base::ThreadedListBase.18"* %4, i64 0, i32 0
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %16, align 8
  %17 = getelementptr inbounds %"class.v8::base::ThreadedListBase.18", %"class.v8::base::ThreadedListBase.18"* %4, i64 0, i32 1
  store %"class.v8::internal::VariableProxy"** %16, %"class.v8::internal::VariableProxy"*** %17, align 8
  %18 = icmp eq %"class.v8::internal::VariableProxy"** %2, null
  br i1 %18, label %19, label %40

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %10, i64 0, i32 0, i32 0
  %21 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %20, align 8
  %22 = icmp eq %"class.v8::internal::VariableProxy"* %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %21, i64 0, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 512
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %40, label %28

28:                                               ; preds = %23, %33
  %29 = phi %"class.v8::internal::VariableProxy"* [ %31, %33 ], [ %21, %23 ]
  %30 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %29, i64 0, i32 2
  %31 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %30, align 8
  %32 = icmp eq %"class.v8::internal::VariableProxy"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %31, i64 0, i32 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, 512
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %28

38:                                               ; preds = %28, %33
  %39 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %29, i64 0, i32 2
  br label %40

40:                                               ; preds = %38, %23, %19, %14
  %41 = phi %"class.v8::internal::VariableProxy"** [ %2, %14 ], [ %20, %19 ], [ %20, %23 ], [ %39, %38 ]
  %42 = load %"class.v8::internal::VariableProxy"**, %"class.v8::internal::VariableProxy"*** %11, align 8
  %43 = icmp eq %"class.v8::internal::VariableProxy"** %41, %42
  br i1 %43, label %114, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.v8::internal::AstNodeFactory", %"class.v8::internal::AstNodeFactory"* %1, i64 0, i32 0
  %46 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %41, align 8
  br label %47

47:                                               ; preds = %44, %109
  %48 = phi %"class.v8::internal::VariableProxy"* [ %46, %44 ], [ %110, %109 ]
  %49 = phi %"class.v8::internal::VariableProxy"** [ %41, %44 ], [ %111, %109 ]
  %50 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %45, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 2
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 3
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %54, %52
  %56 = icmp ult i64 %55, 24
  br i1 %56, label %57, label %59, !prof !2

57:                                               ; preds = %47
  %58 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %50, i64 24) #10
  br label %61

59:                                               ; preds = %47
  %60 = add i64 %52, 24
  store i64 %60, i64* %51, align 8
  br label %61

61:                                               ; preds = %57, %59
  %62 = phi i64 [ %58, %57 ], [ %52, %59 ]
  %63 = inttoptr i64 %62 to %"class.v8::internal::VariableProxy"*
  call void @_ZN2v88internal13VariableProxyC1EPKS1_(%"class.v8::internal::VariableProxy"* %63, %"class.v8::internal::VariableProxy"* %48) #10
  %64 = load %"class.v8::internal::VariableProxy"**, %"class.v8::internal::VariableProxy"*** %17, align 8
  store %"class.v8::internal::VariableProxy"* %63, %"class.v8::internal::VariableProxy"** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %63, i64 0, i32 2
  %66 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %65, align 8
  %67 = icmp eq %"class.v8::internal::VariableProxy"* %66, null
  br i1 %67, label %85, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %66, i64 0, i32 0, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = and i32 %70, 512
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %85, label %73

73:                                               ; preds = %68, %78
  %74 = phi %"class.v8::internal::VariableProxy"* [ %76, %78 ], [ %66, %68 ]
  %75 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %74, i64 0, i32 2
  %76 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %75, align 8
  %77 = icmp eq %"class.v8::internal::VariableProxy"* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %76, i64 0, i32 0, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = and i32 %80, 512
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %73

83:                                               ; preds = %78, %73
  %84 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %74, i64 0, i32 2
  br label %85

85:                                               ; preds = %83, %61, %68
  %86 = phi %"class.v8::internal::VariableProxy"** [ %65, %61 ], [ %65, %68 ], [ %84, %83 ]
  store %"class.v8::internal::VariableProxy"** %86, %"class.v8::internal::VariableProxy"*** %17, align 8
  %87 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %49, align 8
  %88 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %87, i64 0, i32 2
  %89 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %88, align 8
  %90 = icmp eq %"class.v8::internal::VariableProxy"* %89, null
  br i1 %90, label %109, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %89, i64 0, i32 0, i32 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = and i32 %93, 512
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %109, label %96

96:                                               ; preds = %91, %101
  %97 = phi %"class.v8::internal::VariableProxy"* [ %99, %101 ], [ %89, %91 ]
  %98 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %97, i64 0, i32 2
  %99 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %98, align 8
  %100 = icmp eq %"class.v8::internal::VariableProxy"* %99, null
  br i1 %100, label %106, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %99, i64 0, i32 0, i32 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = and i32 %103, 512
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %96

106:                                              ; preds = %101, %96
  %107 = phi %"class.v8::internal::VariableProxy"* [ null, %96 ], [ %99, %101 ]
  %108 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %97, i64 0, i32 2
  br label %109

109:                                              ; preds = %106, %85, %91
  %110 = phi %"class.v8::internal::VariableProxy"* [ null, %85 ], [ %89, %91 ], [ %107, %106 ]
  %111 = phi %"class.v8::internal::VariableProxy"** [ %88, %85 ], [ %88, %91 ], [ %108, %106 ]
  %112 = load %"class.v8::internal::VariableProxy"**, %"class.v8::internal::VariableProxy"*** %11, align 8
  %113 = icmp eq %"class.v8::internal::VariableProxy"** %111, %112
  br i1 %113, label %114, label %47

114:                                              ; preds = %109, %40
  br i1 %18, label %115, label %117

115:                                              ; preds = %114
  %116 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %10, i64 0, i32 0, i32 0
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %116, align 8
  store %"class.v8::internal::VariableProxy"** %116, %"class.v8::internal::VariableProxy"*** %11, align 8
  br label %118

117:                                              ; preds = %114
  store %"class.v8::internal::VariableProxy"** %2, %"class.v8::internal::VariableProxy"*** %11, align 8
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %2, align 8
  br label %118

118:                                              ; preds = %117, %115
  %119 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %16, align 8
  %120 = icmp eq %"class.v8::internal::VariableProxy"* %119, null
  br i1 %120, label %128, label %121

121:                                              ; preds = %118
  %122 = ptrtoint %"class.v8::internal::VariableProxy"* %119 to i64
  %123 = bitcast %"class.v8::internal::VariableProxy"*** %11 to i64**
  %124 = load i64*, i64** %123, align 8
  store i64 %122, i64* %124, align 8
  %125 = bitcast %"class.v8::internal::VariableProxy"*** %17 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.v8::internal::VariableProxy"*** %11 to i64*
  store i64 %126, i64* %127, align 8
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %16, align 8
  store %"class.v8::internal::VariableProxy"** %16, %"class.v8::internal::VariableProxy"*** %17, align 8
  br label %128

128:                                              ; preds = %118, %121
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #10
  br label %129

129:                                              ; preds = %3, %9, %128
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal10ClassScope28LookupPrivateNameInScopeInfoEPKNS0_12AstRawStringE(%"class.v8::internal::ClassScope"*, %"class.v8::internal::AstRawString"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.v8::internal::VariableLookupResult", align 4
  %4 = alloca i8, align 1
  %5 = bitcast %"class.v8::internal::AstRawString"* %1 to i64**
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"struct.v8::internal::VariableLookupResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = load i64, i64* %10, align 8
  %12 = call i32 @_ZN2v88internal9ScopeInfo16ContextSlotIndexES1_NS0_6StringEPNS0_20VariableLookupResultE(i64 %11, i64 %7, %"struct.v8::internal::VariableLookupResult"* nonnull %3) #10
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  %15 = getelementptr inbounds %"struct.v8::internal::VariableLookupResult", %"struct.v8::internal::VariableLookupResult"* %3, i64 0, i32 4
  %16 = load i8, i8* %15, align 2
  %17 = getelementptr inbounds %"struct.v8::internal::VariableLookupResult", %"struct.v8::internal::VariableLookupResult"* %3, i64 0, i32 3
  %18 = load i8, i8* %17, align 1
  %19 = call %"class.v8::internal::Variable"* @_ZN2v88internal10ClassScope18DeclarePrivateNameEPKNS0_12AstRawStringENS0_12VariableModeENS0_12IsStaticFlagEPb(%"class.v8::internal::ClassScope"* %0, %"class.v8::internal::AstRawString"* %1, i8 zeroext %16, i8 zeroext %18, i8* nonnull %4)
  %20 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %19, i64 0, i32 6
  %21 = load i16, i16* %20, align 8
  %22 = and i16 %21, -897
  %23 = or i16 %22, 384
  store i16 %23, i16* %20, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %19, i64 0, i32 4
  store i32 %12, i32* %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  br label %25

25:                                               ; preds = %2, %14
  %26 = phi %"class.v8::internal::Variable"* [ %19, %14 ], [ null, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  ret %"class.v8::internal::Variable"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal10ClassScope17LookupPrivateNameEPNS0_13VariableProxyE(%"class.v8::internal::ClassScope"*, %"class.v8::internal::VariableProxy"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.v8::internal::VariableLookupResult", align 4
  %4 = alloca i8, align 1
  %5 = bitcast %"class.v8::internal::ClassScope"* %0 to %"class.v8::internal::Scope"*
  %6 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 0, i32 12
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 2, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %33, label %14

14:                                               ; preds = %9, %2
  %15 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 0, i32 0
  %16 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %15, align 8
  %17 = icmp eq %"class.v8::internal::Scope"* %16, null
  br i1 %17, label %150, label %18

18:                                               ; preds = %14, %29
  %19 = phi %"class.v8::internal::Scope"* [ %31, %29 ], [ %16, %14 ]
  %20 = phi %"class.v8::internal::Scope"* [ %19, %29 ], [ %5, %14 ]
  %21 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %19, i64 0, i32 12
  %22 = load i8, i8* %21, align 8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %20, i64 0, i32 13
  %26 = load i16, i16* %25, align 1
  %27 = and i16 %26, 512
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24, %18
  %30 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %19, i64 0, i32 0
  %31 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %30, align 8
  %32 = icmp eq %"class.v8::internal::Scope"* %31, null
  br i1 %32, label %150, label %18

33:                                               ; preds = %9
  %34 = icmp eq %"class.v8::internal::ClassScope"* %0, null
  br i1 %34, label %150, label %35

35:                                               ; preds = %24, %33
  %36 = phi %"class.v8::internal::Scope"* [ %5, %33 ], [ %19, %24 ]
  %37 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %1, i64 0, i32 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %1, i64 0, i32 1
  %39 = bitcast %union.anon* %38 to %"class.v8::internal::Variable"**
  %40 = getelementptr inbounds %union.anon, %union.anon* %38, i64 0, i32 0
  %41 = bitcast %"struct.v8::internal::VariableLookupResult"* %3 to i8*
  %42 = getelementptr inbounds %"struct.v8::internal::VariableLookupResult", %"struct.v8::internal::VariableLookupResult"* %3, i64 0, i32 4
  %43 = getelementptr inbounds %"struct.v8::internal::VariableLookupResult", %"struct.v8::internal::VariableLookupResult"* %3, i64 0, i32 3
  br label %44

44:                                               ; preds = %141, %35
  %45 = phi %"class.v8::internal::Scope"* [ %36, %35 ], [ %136, %141 ]
  %46 = bitcast %"class.v8::internal::Scope"* %45 to %"class.v8::internal::ClassScope"*
  %47 = load i32, i32* %37, align 4
  %48 = and i32 %47, 256
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %39, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %51, i64 0, i32 1
  br label %53

53:                                               ; preds = %44, %50
  %54 = phi %"class.v8::internal::AstRawString"** [ %52, %50 ], [ %40, %44 ]
  %55 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %45, i64 1
  %57 = bitcast %"class.v8::internal::Scope"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, -2
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %103, label %61

61:                                               ; preds = %53
  %62 = inttoptr i64 %59 to %"struct.v8::internal::ClassScope::RareData"*
  %63 = bitcast %"class.v8::internal::AstRawString"* %55 to i8*
  %64 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %55, i64 0, i32 2
  %65 = load i32, i32* %64, align 8
  %66 = lshr i32 %65, 2
  %67 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %62, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %68 = load i32, i32* %67, align 8
  %69 = add i32 %68, -1
  %70 = and i32 %69, %66
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %62, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %73 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %72, align 8
  %74 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %73, i64 %71
  %75 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %74, i64 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %76, null
  %78 = icmp eq i8* %76, %63
  %79 = or i1 %77, %78
  br i1 %79, label %92, label %80

80:                                               ; preds = %61
  %81 = zext i32 %69 to i64
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i64 [ %71, %80 ], [ %85, %82 ]
  %84 = add nuw nsw i64 %83, 1
  %85 = and i64 %84, %81
  %86 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %73, i64 %85
  %87 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %86, i64 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = icmp eq i8* %88, null
  %90 = icmp eq i8* %88, %63
  %91 = or i1 %89, %90
  br i1 %91, label %92, label %82

92:                                               ; preds = %82, %61
  %93 = phi i8* [ %76, %61 ], [ %88, %82 ]
  %94 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %74, %61 ], [ %86, %82 ]
  %95 = icmp eq i8* %93, null
  %96 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %94, null
  %97 = or i1 %95, %96
  br i1 %97, label %103, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %94, i64 0, i32 1
  %100 = bitcast i8** %99 to %"class.v8::internal::Variable"**
  %101 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %100, align 8
  %102 = icmp eq %"class.v8::internal::Variable"* %101, null
  br i1 %102, label %103, label %150

103:                                              ; preds = %92, %53, %98
  %104 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %45, i64 0, i32 7, i32 0, i32 0
  %105 = load i64*, i64** %104, align 8
  %106 = icmp eq i64* %105, null
  br i1 %106, label %131, label %107

107:                                              ; preds = %103
  br i1 %49, label %111, label %108

108:                                              ; preds = %107
  %109 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %39, align 8
  %110 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %109, i64 0, i32 1
  br label %111

111:                                              ; preds = %107, %108
  %112 = phi %"class.v8::internal::AstRawString"** [ %110, %108 ], [ %40, %107 ]
  %113 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %112, align 8
  %114 = bitcast %"class.v8::internal::AstRawString"* %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #10
  %117 = load i64, i64* %105, align 8
  %118 = call i32 @_ZN2v88internal9ScopeInfo16ContextSlotIndexES1_NS0_6StringEPNS0_20VariableLookupResultE(i64 %117, i64 %116, %"struct.v8::internal::VariableLookupResult"* nonnull %3) #10
  %119 = icmp slt i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %111
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #10
  br label %131

121:                                              ; preds = %111
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  %122 = load i8, i8* %42, align 2
  %123 = load i8, i8* %43, align 1
  %124 = call %"class.v8::internal::Variable"* @_ZN2v88internal10ClassScope18DeclarePrivateNameEPKNS0_12AstRawStringENS0_12VariableModeENS0_12IsStaticFlagEPb(%"class.v8::internal::ClassScope"* nonnull %46, %"class.v8::internal::AstRawString"* %113, i8 zeroext %122, i8 zeroext %123, i8* nonnull %4) #10
  %125 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %124, i64 0, i32 6
  %126 = load i16, i16* %125, align 8
  %127 = and i16 %126, -897
  %128 = or i16 %127, 384
  store i16 %128, i16* %125, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %124, i64 0, i32 4
  store i32 %118, i32* %129, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #10
  %130 = icmp eq %"class.v8::internal::Variable"* %124, null
  br i1 %130, label %131, label %150

131:                                              ; preds = %103, %120, %121
  %132 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %45, i64 0, i32 0
  %133 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %132, align 8
  %134 = icmp eq %"class.v8::internal::Scope"* %133, null
  br i1 %134, label %150, label %135

135:                                              ; preds = %131, %146
  %136 = phi %"class.v8::internal::Scope"* [ %148, %146 ], [ %133, %131 ]
  %137 = phi %"class.v8::internal::Scope"* [ %136, %146 ], [ %45, %131 ]
  %138 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %136, i64 0, i32 12
  %139 = load i8, i8* %138, align 8
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %141, label %146

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %137, i64 0, i32 13
  %143 = load i16, i16* %142, align 1
  %144 = and i16 %143, 512
  %145 = icmp eq i16 %144, 0
  br i1 %145, label %44, label %146

146:                                              ; preds = %141, %135
  %147 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %136, i64 0, i32 0
  %148 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %147, align 8
  %149 = icmp eq %"class.v8::internal::Scope"* %148, null
  br i1 %149, label %150, label %135

150:                                              ; preds = %29, %131, %121, %98, %146, %14, %33
  %151 = phi %"class.v8::internal::Variable"* [ null, %33 ], [ null, %14 ], [ null, %146 ], [ null, %131 ], [ %101, %98 ], [ %124, %121 ], [ null, %29 ]
  ret %"class.v8::internal::Variable"* %151
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal24PrivateNameScopeIterator4NextEv(%"class.v8::internal::PrivateNameScopeIterator"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PrivateNameScopeIterator", %"class.v8::internal::PrivateNameScopeIterator"* %0, i64 0, i32 2
  %3 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %3, i64 0, i32 0
  %5 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %4, align 8
  %6 = icmp eq %"class.v8::internal::Scope"* %5, null
  br i1 %6, label %25, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::PrivateNameScopeIterator", %"class.v8::internal::PrivateNameScopeIterator"* %0, i64 0, i32 0
  br label %9

9:                                                ; preds = %7, %21
  %10 = phi %"class.v8::internal::Scope"* [ %5, %7 ], [ %23, %21 ]
  %11 = phi %"class.v8::internal::Scope"* [ %3, %7 ], [ %10, %21 ]
  %12 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %10, i64 0, i32 12
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %11, i64 0, i32 13
  %17 = load i16, i16* %16, align 1
  %18 = and i16 %17, 512
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  store i8 1, i8* %8, align 8
  br label %21

21:                                               ; preds = %20, %9
  %22 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %10, i64 0, i32 0
  %23 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %22, align 8
  %24 = icmp eq %"class.v8::internal::Scope"* %23, null
  br i1 %24, label %25, label %9

25:                                               ; preds = %21, %15, %1
  %26 = phi %"class.v8::internal::Scope"* [ null, %1 ], [ %10, %15 ], [ null, %21 ]
  store %"class.v8::internal::Scope"* %26, %"class.v8::internal::Scope"** %2, align 8
  ret void
}

declare void @_ZN2v88internal30PendingCompilationErrorHandler15ReportMessageAtEiiNS0_15MessageTemplateEPKNS0_12AstRawStringE(%"class.v8::internal::PendingCompilationErrorHandler"*, i32, i32, i32, %"class.v8::internal::AstRawString"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::VariableProxy"* @_ZN2v88internal10ClassScope28ResolvePrivateNamesPartiallyEv(%"class.v8::internal::ClassScope"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::PrivateNameScopeIterator", align 8
  %3 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 2, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -2
  %6 = inttoptr i64 %5 to %"struct.v8::internal::ClassScope::RareData"*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %185, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %6, i64 0, i32 0
  %10 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %6, i64 0, i32 0, i32 0
  %11 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %10, align 8
  %12 = icmp eq %"class.v8::internal::VariableProxy"* %11, null
  br i1 %12, label %185, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.v8::internal::PrivateNameScopeIterator", %"class.v8::internal::PrivateNameScopeIterator"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #10
  %15 = bitcast %"class.v8::internal::ClassScope"* %0 to %"class.v8::internal::Scope"*
  store i8 0, i8* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::PrivateNameScopeIterator", %"class.v8::internal::PrivateNameScopeIterator"* %2, i64 0, i32 1
  %17 = bitcast %"class.v8::internal::Scope"** %16 to %"class.v8::internal::ClassScope"**
  store %"class.v8::internal::ClassScope"* %0, %"class.v8::internal::ClassScope"** %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::PrivateNameScopeIterator", %"class.v8::internal::PrivateNameScopeIterator"* %2, i64 0, i32 2
  %19 = bitcast %"class.v8::internal::Scope"** %18 to %"class.v8::internal::ClassScope"**
  store %"class.v8::internal::ClassScope"* %0, %"class.v8::internal::ClassScope"** %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 0, i32 12
  %21 = load i8, i8* %20, align 8
  %22 = icmp eq i8 %21, 0
  %23 = and i64 %4, 1
  %24 = icmp eq i64 %23, 0
  %25 = and i1 %22, %24
  br i1 %25, label %53, label %26

26:                                               ; preds = %13
  %27 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 0, i32 0
  %28 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %27, align 8
  %29 = icmp eq %"class.v8::internal::Scope"* %28, null
  br i1 %29, label %50, label %30

30:                                               ; preds = %26, %42
  %31 = phi i8 [ %43, %42 ], [ 0, %26 ]
  %32 = phi %"class.v8::internal::Scope"* [ %45, %42 ], [ %28, %26 ]
  %33 = phi %"class.v8::internal::Scope"* [ %32, %42 ], [ %15, %26 ]
  %34 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %32, i64 0, i32 12
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %33, i64 0, i32 13
  %39 = load i16, i16* %38, align 1
  %40 = and i16 %39, 512
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %37, %30
  %43 = phi i8 [ %31, %30 ], [ 1, %37 ]
  %44 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %32, i64 0, i32 0
  %45 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %44, align 8
  %46 = icmp eq %"class.v8::internal::Scope"* %45, null
  br i1 %46, label %47, label %30

47:                                               ; preds = %37, %42
  %48 = phi i8 [ %31, %37 ], [ %43, %42 ]
  %49 = phi %"class.v8::internal::Scope"* [ %32, %37 ], [ null, %42 ]
  store i8 %48, i8* %14, align 8
  br label %50

50:                                               ; preds = %47, %26
  %51 = phi i8 [ 0, %26 ], [ %48, %47 ]
  %52 = phi %"class.v8::internal::Scope"* [ null, %26 ], [ %49, %47 ]
  store %"class.v8::internal::Scope"* %52, %"class.v8::internal::Scope"** %18, align 8
  br label %53

53:                                               ; preds = %13, %50
  %54 = phi i8 [ %51, %50 ], [ 0, %13 ]
  %55 = phi %"class.v8::internal::Scope"* [ %52, %50 ], [ %15, %13 ]
  %56 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %55, i64 0, i32 0
  %57 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %56, align 8
  %58 = icmp eq %"class.v8::internal::Scope"* %57, null
  br i1 %58, label %79, label %59

59:                                               ; preds = %53, %71
  %60 = phi i8 [ %72, %71 ], [ %54, %53 ]
  %61 = phi %"class.v8::internal::Scope"* [ %74, %71 ], [ %57, %53 ]
  %62 = phi %"class.v8::internal::Scope"* [ %61, %71 ], [ %55, %53 ]
  %63 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %61, i64 0, i32 12
  %64 = load i8, i8* %63, align 8
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %71

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %62, i64 0, i32 13
  %68 = load i16, i16* %67, align 1
  %69 = and i16 %68, 512
  %70 = icmp eq i16 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %66, %59
  %72 = phi i8 [ %60, %59 ], [ 1, %66 ]
  %73 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %61, i64 0, i32 0
  %74 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %73, align 8
  %75 = icmp eq %"class.v8::internal::Scope"* %74, null
  br i1 %75, label %76, label %59

76:                                               ; preds = %71, %66
  %77 = phi i8 [ %72, %71 ], [ %60, %66 ]
  %78 = phi %"class.v8::internal::Scope"* [ null, %71 ], [ %61, %66 ]
  store i8 %77, i8* %14, align 8
  br label %79

79:                                               ; preds = %76, %53
  %80 = phi %"class.v8::internal::Scope"* [ null, %53 ], [ %78, %76 ]
  store %"class.v8::internal::Scope"* %80, %"class.v8::internal::Scope"** %18, align 8
  %81 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %82 = load i32, i32* %81, align 8
  %83 = icmp ne i32 %82, 0
  %84 = xor i1 %83, true
  %85 = icmp eq %"class.v8::internal::Scope"* %80, null
  %86 = and i1 %85, %84
  %87 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %10, align 8
  br i1 %86, label %183, label %88

88:                                               ; preds = %79
  %89 = icmp eq %"class.v8::internal::VariableProxy"* %87, null
  br i1 %89, label %183, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 5
  br i1 %83, label %92, label %176

92:                                               ; preds = %90, %174
  %93 = phi %"class.v8::internal::VariableProxy"* [ %95, %174 ], [ %87, %90 ]
  %94 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %93, i64 0, i32 2
  %95 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %94, align 8
  %96 = tail call zeroext i1 @_ZN2v84base16ThreadedListBaseINS_8internal13VariableProxyENS0_9EmptyBaseENS3_14UnresolvedNextEE6RemoveEPS3_(%"class.v8::base::ThreadedListBase.18"* %9, %"class.v8::internal::VariableProxy"* nonnull %93)
  %97 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %93, i64 0, i32 0, i32 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = and i32 %98, 256
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %93, i64 0, i32 1
  br i1 %100, label %106, label %102

102:                                              ; preds = %92
  %103 = bitcast %union.anon* %101 to %"class.v8::internal::Variable"**
  %104 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %104, i64 0, i32 1
  br label %108

106:                                              ; preds = %92
  %107 = getelementptr inbounds %union.anon, %union.anon* %101, i64 0, i32 0
  br label %108

108:                                              ; preds = %106, %102
  %109 = phi %"class.v8::internal::AstRawString"** [ %105, %102 ], [ %107, %106 ]
  %110 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %109, align 8
  %111 = load i64, i64* %3, align 8
  %112 = and i64 %111, -2
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %172, label %114

114:                                              ; preds = %108
  %115 = inttoptr i64 %112 to %"struct.v8::internal::ClassScope::RareData"*
  %116 = bitcast %"class.v8::internal::AstRawString"* %110 to i8*
  %117 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %110, i64 0, i32 2
  %118 = load i32, i32* %117, align 8
  %119 = lshr i32 %118, 2
  %120 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %115, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %121 = load i32, i32* %120, align 8
  %122 = add i32 %121, -1
  %123 = and i32 %122, %119
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %115, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %126 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %125, align 8
  %127 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %126, i64 %124
  %128 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %127, i64 0, i32 0
  %129 = load i8*, i8** %128, align 8
  %130 = icmp eq i8* %129, null
  %131 = icmp eq i8* %129, %116
  %132 = or i1 %130, %131
  br i1 %132, label %145, label %133

133:                                              ; preds = %114
  %134 = zext i32 %122 to i64
  br label %135

135:                                              ; preds = %135, %133
  %136 = phi i64 [ %124, %133 ], [ %138, %135 ]
  %137 = add nuw nsw i64 %136, 1
  %138 = and i64 %137, %134
  %139 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %126, i64 %138
  %140 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %139, i64 0, i32 0
  %141 = load i8*, i8** %140, align 8
  %142 = icmp eq i8* %141, null
  %143 = icmp eq i8* %141, %116
  %144 = or i1 %142, %143
  br i1 %144, label %145, label %135

145:                                              ; preds = %135, %114
  %146 = phi i8* [ %129, %114 ], [ %141, %135 ]
  %147 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %127, %114 ], [ %139, %135 ]
  %148 = icmp eq i8* %146, null
  %149 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %147, null
  %150 = or i1 %148, %149
  br i1 %150, label %172, label %151

151:                                              ; preds = %145
  %152 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %147, i64 0, i32 1
  %153 = bitcast i8** %152 to %"class.v8::internal::Variable"**
  %154 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %153, align 8
  %155 = icmp eq %"class.v8::internal::Variable"* %154, null
  br i1 %155, label %172, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %154, i64 0, i32 6
  %158 = load i16, i16* %157, align 8
  %159 = or i16 %158, 2048
  store i16 %159, i16* %157, align 8
  tail call void @_ZN2v88internal13VariableProxy6BindToEPNS0_8VariableE(%"class.v8::internal::VariableProxy"* nonnull %93, %"class.v8::internal::Variable"* nonnull %154) #10
  %160 = load i16, i16* %157, align 8
  %161 = icmp slt i16 %160, 0
  br i1 %161, label %162, label %167

162:                                              ; preds = %156
  %163 = trunc i16 %160 to i8
  %164 = and i8 %163, 15
  %165 = add nsw i8 %164, -7
  %166 = icmp ult i8 %165, 4
  br label %167

167:                                              ; preds = %162, %156
  %168 = phi i1 [ false, %156 ], [ %166, %162 ]
  %169 = zext i1 %168 to i8
  %170 = load i8, i8* %91, align 1, !range !5
  %171 = or i8 %170, %169
  store i8 %171, i8* %91, align 1
  br label %174

172:                                              ; preds = %151, %145, %108
  br i1 %85, label %183, label %173

173:                                              ; preds = %172
  call void @_ZN2v88internal24PrivateNameScopeIterator24AddUnresolvedPrivateNameEPNS0_13VariableProxyE(%"class.v8::internal::PrivateNameScopeIterator"* nonnull %2, %"class.v8::internal::VariableProxy"* nonnull %93)
  br label %174

174:                                              ; preds = %173, %167
  %175 = icmp eq %"class.v8::internal::VariableProxy"* %95, null
  br i1 %175, label %183, label %92

176:                                              ; preds = %90, %181
  %177 = phi %"class.v8::internal::VariableProxy"* [ %179, %181 ], [ %87, %90 ]
  %178 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %177, i64 0, i32 2
  %179 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %178, align 8
  %180 = tail call zeroext i1 @_ZN2v84base16ThreadedListBaseINS_8internal13VariableProxyENS0_9EmptyBaseENS3_14UnresolvedNextEE6RemoveEPS3_(%"class.v8::base::ThreadedListBase.18"* %9, %"class.v8::internal::VariableProxy"* nonnull %177)
  br i1 %85, label %183, label %181

181:                                              ; preds = %176
  call void @_ZN2v88internal24PrivateNameScopeIterator24AddUnresolvedPrivateNameEPNS0_13VariableProxyE(%"class.v8::internal::PrivateNameScopeIterator"* nonnull %2, %"class.v8::internal::VariableProxy"* nonnull %177)
  %182 = icmp eq %"class.v8::internal::VariableProxy"* %179, null
  br i1 %182, label %183, label %176

183:                                              ; preds = %181, %176, %174, %172, %79, %88
  %184 = phi %"class.v8::internal::VariableProxy"* [ null, %88 ], [ %87, %79 ], [ null, %174 ], [ %93, %172 ], [ null, %181 ], [ %87, %176 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #10
  br label %185

185:                                              ; preds = %1, %8, %183
  %186 = phi %"class.v8::internal::VariableProxy"* [ %184, %183 ], [ null, %8 ], [ null, %1 ]
  ret %"class.v8::internal::VariableProxy"* %186
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal24PrivateNameScopeIterator24AddUnresolvedPrivateNameEPNS0_13VariableProxyE(%"class.v8::internal::PrivateNameScopeIterator"* nocapture readonly, %"class.v8::internal::VariableProxy"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Zone"*, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PrivateNameScopeIterator", %"class.v8::internal::PrivateNameScopeIterator"* %0, i64 0, i32 2
  %5 = bitcast %"class.v8::internal::Scope"** %4 to %"class.v8::internal::ClassScope"**
  %6 = load %"class.v8::internal::ClassScope"*, %"class.v8::internal::ClassScope"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %6, i64 0, i32 2, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 2
  br i1 %9, label %10, label %19

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %6, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %11, align 8
  %13 = bitcast %"class.v8::internal::Zone"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  store %"class.v8::internal::Zone"* %12, %"class.v8::internal::Zone"** %3, align 8
  %14 = call %"struct.v8::internal::ClassScope::RareData"* @_ZN2v88internal4Zone3NewINS0_10ClassScope8RareDataEJPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"* %12, %"class.v8::internal::Zone"** nonnull dereferenceable(8) %3) #10
  %15 = ptrtoint %"struct.v8::internal::ClassScope::RareData"* %14 to i64
  %16 = load i64, i64* %7, align 8
  %17 = and i64 %16, 1
  %18 = or i64 %17, %15
  store i64 %18, i64* %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  br label %19

19:                                               ; preds = %2, %10
  %20 = phi i64 [ %18, %10 ], [ %8, %2 ]
  %21 = and i64 %20, -2
  %22 = inttoptr i64 %21 to %"struct.v8::internal::ClassScope::RareData"*
  %23 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %22, i64 0, i32 0, i32 1
  %24 = load %"class.v8::internal::VariableProxy"**, %"class.v8::internal::VariableProxy"*** %23, align 8
  store %"class.v8::internal::VariableProxy"* %1, %"class.v8::internal::VariableProxy"** %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %1, i64 0, i32 2
  %26 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %25, align 8
  %27 = icmp eq %"class.v8::internal::VariableProxy"* %26, null
  br i1 %27, label %45, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %26, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 512
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %45, label %33

33:                                               ; preds = %28, %38
  %34 = phi %"class.v8::internal::VariableProxy"* [ %36, %38 ], [ %26, %28 ]
  %35 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %34, i64 0, i32 2
  %36 = load %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** %35, align 8
  %37 = icmp eq %"class.v8::internal::VariableProxy"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %36, i64 0, i32 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, 512
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %33

43:                                               ; preds = %38, %33
  %44 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %34, i64 0, i32 2
  br label %45

45:                                               ; preds = %43, %19, %28
  %46 = phi %"class.v8::internal::VariableProxy"** [ %25, %19 ], [ %25, %28 ], [ %44, %43 ]
  store %"class.v8::internal::VariableProxy"** %46, %"class.v8::internal::VariableProxy"*** %23, align 8
  %47 = getelementptr inbounds %"class.v8::internal::PrivateNameScopeIterator", %"class.v8::internal::PrivateNameScopeIterator"* %0, i64 0, i32 0
  %48 = load i8, i8* %47, align 8, !range !5
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %92, label %50, !prof !4

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.v8::internal::PrivateNameScopeIterator", %"class.v8::internal::PrivateNameScopeIterator"* %0, i64 0, i32 1
  br label %52

52:                                               ; preds = %62, %50
  %53 = phi %"class.v8::internal::Scope"** [ %51, %50 ], [ %63, %62 ]
  %54 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %54, i64 0, i32 13
  %56 = load i16, i16* %55, align 1
  %57 = and i16 %56, 256
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %54, i64 0, i32 12
  %61 = load i8, i8* %60, align 8
  switch i8 %61, label %64 [
    i8 6, label %62
    i8 0, label %62
  ]

62:                                               ; preds = %59, %59, %52
  %63 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %54, i64 0, i32 0
  br label %52

64:                                               ; preds = %59
  %65 = icmp eq %"class.v8::internal::Scope"* %54, null
  br i1 %65, label %92, label %66

66:                                               ; preds = %64, %90
  %67 = phi %"class.v8::internal::Scope"* [ %79, %90 ], [ %54, %64 ]
  %68 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %67, i64 0, i32 14
  %69 = bitcast [5 x i8]* %68 to i16*
  %70 = load i16, i16* %69, align 1
  %71 = and i16 %70, 8192
  %72 = icmp eq i16 %71, 0
  br i1 %72, label %73, label %92

73:                                               ; preds = %66
  %74 = or i16 %70, 8192
  store i16 %74, i16* %69, align 1
  %75 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %67, i64 0, i32 0
  %76 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %75, align 8
  %77 = icmp eq %"class.v8::internal::Scope"* %76, null
  br i1 %77, label %92, label %78

78:                                               ; preds = %73, %87
  %79 = phi %"class.v8::internal::Scope"* [ %89, %87 ], [ %76, %73 ]
  %80 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %79, i64 0, i32 13
  %81 = load i16, i16* %80, align 1
  %82 = and i16 %81, 256
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %79, i64 0, i32 12
  %86 = load i8, i8* %85, align 8
  switch i8 %86, label %90 [
    i8 6, label %87
    i8 0, label %87
  ]

87:                                               ; preds = %84, %84, %78
  %88 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %79, i64 0, i32 0
  %89 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %88, align 8
  br label %78

90:                                               ; preds = %84
  %91 = icmp eq %"class.v8::internal::Scope"* %79, null
  br i1 %91, label %92, label %66

92:                                               ; preds = %90, %73, %66, %64, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Variable"* @_ZN2v88internal10ClassScope20DeclareBrandVariableEPNS0_15AstValueFactoryENS0_12IsStaticFlagEi(%"class.v8::internal::ClassScope"*, %"class.v8::internal::AstValueFactory"* nocapture readonly, i8 zeroext, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Zone"*, align 8
  %6 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #10
  %7 = bitcast %"class.v8::internal::ClassScope"* %0 to %"class.v8::internal::Scope"*
  %8 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::AstValueFactory", %"class.v8::internal::AstValueFactory"* %1, i64 0, i32 3
  %11 = load %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstStringConstants"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::AstStringConstants", %"class.v8::internal::AstStringConstants"* %11, i64 0, i32 13
  %13 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 0, i32 3
  %15 = call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap7DeclareEPNS0_4ZoneEPNS0_5ScopeEPKNS0_12AstRawStringENS0_12VariableModeENS0_12VariableKindENS0_18InitializationFlagENS0_17MaybeAssignedFlagENS0_12IsStaticFlagEPb(%"class.v8::internal::VariableMap"* %14, %"class.v8::internal::Zone"* %9, %"class.v8::internal::Scope"* %7, %"class.v8::internal::AstRawString"* %13, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, i8* nonnull %6) #10
  %16 = load i8, i8* %6, align 1, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 0, i32 4, i32 1
  %20 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %19, align 8
  store %"class.v8::internal::Variable"* %15, %"class.v8::internal::Variable"** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %15, i64 0, i32 3
  store %"class.v8::internal::Variable"** %21, %"class.v8::internal::Variable"*** %19, align 8
  br label %22

22:                                               ; preds = %4, %18
  %23 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %15, i64 0, i32 6
  %24 = load i16, i16* %23, align 8
  %25 = and i16 %24, 29695
  %26 = zext i8 %2 to i16
  %27 = shl i16 %26, 15
  %28 = or i16 %27, %25
  %29 = or i16 %28, 3072
  store i16 %29, i16* %23, align 8
  %30 = getelementptr inbounds %"class.v8::internal::ClassScope", %"class.v8::internal::ClassScope"* %0, i64 0, i32 2, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = icmp ult i64 %31, 2
  br i1 %32, label %33, label %41

33:                                               ; preds = %22
  %34 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8, align 8
  %35 = bitcast %"class.v8::internal::Zone"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  store %"class.v8::internal::Zone"* %34, %"class.v8::internal::Zone"** %5, align 8
  %36 = call %"struct.v8::internal::ClassScope::RareData"* @_ZN2v88internal4Zone3NewINS0_10ClassScope8RareDataEJPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"* %34, %"class.v8::internal::Zone"** nonnull dereferenceable(8) %5) #10
  %37 = ptrtoint %"struct.v8::internal::ClassScope::RareData"* %36 to i64
  %38 = load i64, i64* %30, align 8
  %39 = and i64 %38, 1
  %40 = or i64 %39, %37
  store i64 %40, i64* %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  br label %41

41:                                               ; preds = %22, %33
  %42 = phi i64 [ %40, %33 ], [ %31, %22 ]
  %43 = and i64 %42, -2
  %44 = inttoptr i64 %43 to %"struct.v8::internal::ClassScope::RareData"*
  %45 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %44, i64 0, i32 2
  store %"class.v8::internal::Variable"* %15, %"class.v8::internal::Variable"** %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %15, i64 0, i32 5
  store i32 %3, i32* %46, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #10
  ret %"class.v8::internal::Variable"* %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal24PrivateNameScopeIteratorC2EPNS0_5ScopeE(%"class.v8::internal::PrivateNameScopeIterator"* nocapture, %"class.v8::internal::Scope"*) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::PrivateNameScopeIterator", %"class.v8::internal::PrivateNameScopeIterator"* %0, i64 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PrivateNameScopeIterator", %"class.v8::internal::PrivateNameScopeIterator"* %0, i64 0, i32 1
  store %"class.v8::internal::Scope"* %1, %"class.v8::internal::Scope"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::PrivateNameScopeIterator", %"class.v8::internal::PrivateNameScopeIterator"* %0, i64 0, i32 2
  store %"class.v8::internal::Scope"* %1, %"class.v8::internal::Scope"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 12
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 1
  %11 = bitcast %"class.v8::internal::Scope"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %37, label %15

15:                                               ; preds = %9, %2
  %16 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1, i64 0, i32 0
  %17 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %16, align 8
  %18 = icmp eq %"class.v8::internal::Scope"* %17, null
  br i1 %18, label %35, label %19

19:                                               ; preds = %15, %31
  %20 = phi %"class.v8::internal::Scope"* [ %33, %31 ], [ %17, %15 ]
  %21 = phi %"class.v8::internal::Scope"* [ %20, %31 ], [ %1, %15 ]
  %22 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %20, i64 0, i32 12
  %23 = load i8, i8* %22, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %21, i64 0, i32 13
  %27 = load i16, i16* %26, align 1
  %28 = and i16 %27, 512
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  store i8 1, i8* %3, align 8
  br label %31

31:                                               ; preds = %30, %19
  %32 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %20, i64 0, i32 0
  %33 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %32, align 8
  %34 = icmp eq %"class.v8::internal::Scope"* %33, null
  br i1 %34, label %35, label %19

35:                                               ; preds = %25, %31, %15
  %36 = phi %"class.v8::internal::Scope"* [ null, %15 ], [ null, %31 ], [ %20, %25 ]
  store %"class.v8::internal::Scope"* %36, %"class.v8::internal::Scope"** %5, align 8
  br label %37

37:                                               ; preds = %9, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.v8::internal::ClassScope::RareData"* @_ZN2v88internal4Zone3NewINS0_10ClassScope8RareDataEJPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %6, %4
  %8 = icmp ult i64 %7, 48
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %2
  %10 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 48) #10
  br label %13

11:                                               ; preds = %2
  %12 = add i64 %4, 48
  store i64 %12, i64* %3, align 8
  br label %13

13:                                               ; preds = %9, %11
  %14 = phi i64 [ %10, %9 ], [ %4, %11 ]
  %15 = inttoptr i64 %14 to %"struct.v8::internal::ClassScope::RareData"*
  %16 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1, align 8
  %17 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %15, i64 0, i32 0, i32 0
  store %"class.v8::internal::VariableProxy"* null, %"class.v8::internal::VariableProxy"** %17, align 8
  %18 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %15, i64 0, i32 0, i32 1
  store %"class.v8::internal::VariableProxy"** %17, %"class.v8::internal::VariableProxy"*** %18, align 8
  %19 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %15, i64 0, i32 1
  %20 = ptrtoint %"class.v8::internal::Zone"* %16 to i64
  %21 = bitcast %"class.v8::internal::VariableMap"* %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %"struct.v8::base::TemplateHashMapEntry"** %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #10
  %24 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %16, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %16, i64 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %27, %25
  %29 = icmp ult i64 %28, 192
  br i1 %29, label %30, label %32, !prof !2

30:                                               ; preds = %13
  %31 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %16, i64 192) #10
  br label %34

32:                                               ; preds = %13
  %33 = add i64 %25, 192
  store i64 %33, i64* %24, align 8
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi i64 [ %31, %30 ], [ %25, %32 ]
  %36 = inttoptr i64 %35 to %"struct.v8::base::TemplateHashMapEntry"*
  store %"struct.v8::base::TemplateHashMapEntry"* %36, %"struct.v8::base::TemplateHashMapEntry"** %22, align 8
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %34
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0)) #11
  unreachable

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store i32 8, i32* %40, align 8
  %41 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %36, i64 0, i32 0
  store i8* null, i8** %41, align 8
  %42 = load i32, i32* %40, align 8
  %43 = icmp ugt i32 %42, 1
  br i1 %43, label %44, label %52

44:                                               ; preds = %39, %44
  %45 = phi i64 [ %48, %44 ], [ 1, %39 ]
  %46 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %22, align 8
  %47 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %46, i64 %45, i32 0
  store i8* null, i8** %47, align 8
  %48 = add nuw nsw i64 %45, 1
  %49 = load i32, i32* %40, align 8
  %50 = zext i32 %49 to i64
  %51 = icmp ult i64 %48, %50
  br i1 %51, label %44, label %52

52:                                               ; preds = %44, %39
  %53 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 3
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds %"struct.v8::internal::ClassScope::RareData", %"struct.v8::internal::ClassScope::RareData"* %15, i64 0, i32 2
  store %"class.v8::internal::Variable"* null, %"class.v8::internal::Variable"** %54, align 8
  ret %"struct.v8::internal::ClassScope::RareData"* %15
}

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #5

declare void @_ZN2v88internal13VariableProxyC1EPNS0_8VariableEi(%"class.v8::internal::VariableProxy"*, %"class.v8::internal::Variable"*, i32) unnamed_addr #5

declare void @_ZN2v88internal10AssignmentC1ENS0_7AstNode8NodeTypeENS0_5Token5ValueEPNS0_10ExpressionES7_i(%"class.v8::internal::Assignment"*, i8 zeroext, i8 zeroext, %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"*, i32) unnamed_addr #5

declare void @_ZN2v88internal10AssignmentC2ENS0_7AstNode8NodeTypeENS0_5Token5ValueEPNS0_10ExpressionES7_i(%"class.v8::internal::Assignment"*, i8 zeroext, i8 zeroext, %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"*, i32) unnamed_addr #5

declare zeroext i16 @_ZNK2v88internal12AstRawString14FirstCharacterEv(%"class.v8::internal::AstRawString"*) local_unnamed_addr #5

declare void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*, i32) local_unnamed_addr #5

declare void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal5Scope14RecordEvalCallEv(%"class.v8::internal::Scope"*) local_unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 13
  %3 = load i16, i16* %2, align 1
  %4 = or i16 %3, 2
  store i16 %4, i16* %2, align 1
  %5 = and i16 %3, 256
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %1, %7
  %8 = phi %"class.v8::internal::Scope"* [ %10, %7 ], [ %0, %1 ]
  %9 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %8, i64 0, i32 0
  %10 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %10, i64 0, i32 13
  %12 = load i16, i16* %11, align 1
  %13 = and i16 %12, 256
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %7, label %15

15:                                               ; preds = %7, %1
  %16 = phi i16 [ %4, %1 ], [ %12, %7 ]
  %17 = phi %"class.v8::internal::Scope"* [ %0, %1 ], [ %10, %7 ]
  %18 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %17, i64 0, i32 13
  %19 = or i16 %16, 2
  store i16 %19, i16* %18, align 1
  %20 = and i16 %16, 1
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %17, i64 0, i32 12
  %24 = load i8, i8* %23, align 8
  switch i8 %24, label %25 [
    i8 4, label %28
    i8 1, label %28
  ]

25:                                               ; preds = %22
  %26 = or i16 %16, 6
  store i16 %26, i16* %18, align 1
  %27 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %17, i64 0, i32 11
  store i32 3, i32* %27, align 4
  br label %28

28:                                               ; preds = %15, %22, %22, %25
  %29 = load i16, i16* %2, align 1
  %30 = or i16 %29, 64
  store i16 %30, i16* %2, align 1
  %31 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %0, i64 0, i32 0
  %32 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %31, align 8
  %33 = icmp eq %"class.v8::internal::Scope"* %32, null
  br i1 %33, label %45, label %34

34:                                               ; preds = %28, %40
  %35 = phi %"class.v8::internal::Scope"* [ %43, %40 ], [ %32, %28 ]
  %36 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %35, i64 0, i32 13
  %37 = load i16, i16* %36, align 1
  %38 = and i16 %37, 64
  %39 = icmp eq i16 %38, 0
  br i1 %39, label %40, label %45

40:                                               ; preds = %34
  %41 = or i16 %37, 64
  store i16 %41, i16* %36, align 1
  %42 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %35, i64 0, i32 0
  %43 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %42, align 8
  %44 = icmp eq %"class.v8::internal::Scope"* %43, null
  br i1 %44, label %45, label %34

45:                                               ; preds = %34, %40, %28
  br label %46

46:                                               ; preds = %45, %62
  %47 = phi %"class.v8::internal::Scope"* [ %64, %62 ], [ %0, %45 ]
  %48 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %47, i64 0, i32 13
  %49 = load i16, i16* %48, align 1
  %50 = and i16 %49, 256
  %51 = icmp eq i16 %50, 0
  br i1 %51, label %62, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %47, i64 0, i32 12
  %54 = load i8, i8* %53, align 8
  %55 = icmp eq i8 %54, 4
  br i1 %55, label %65, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %47, i64 0, i32 14
  %58 = bitcast [5 x i8]* %57 to i16*
  %59 = load i16, i16* %58, align 1
  %60 = and i16 %59, 4096
  %61 = icmp eq i16 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %56, %46
  %63 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %47, i64 0, i32 0
  %64 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %63, align 8
  br label %46

65:                                               ; preds = %52, %56
  %66 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %47, i64 0, i32 14, i64 2
  %67 = load i8, i8* %66, align 1
  switch i8 %67, label %109 [
    i8 25, label %68
    i8 24, label %68
    i8 23, label %68
    i8 22, label %68
    i8 21, label %68
    i8 20, label %68
    i8 17, label %68
    i8 16, label %68
    i8 15, label %68
    i8 14, label %68
    i8 10, label %68
    i8 9, label %68
    i8 8, label %68
    i8 7, label %68
    i8 6, label %68
    i8 5, label %68
    i8 4, label %68
    i8 3, label %68
  ]

68:                                               ; preds = %65, %65, %65, %65, %65, %65, %65, %65, %65, %65, %65, %65, %65, %65, %65, %65, %65, %65
  %69 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %47, i64 0, i32 14
  %70 = bitcast [5 x i8]* %69 to i16*
  %71 = load i16, i16* %70, align 1
  %72 = or i16 %71, 32
  store i16 %72, i16* %70, align 1
  %73 = icmp eq %"class.v8::internal::Scope"* %47, null
  br i1 %73, label %104, label %74

74:                                               ; preds = %68, %101
  %75 = phi i8 [ %103, %101 ], [ %54, %68 ]
  %76 = phi %"class.v8::internal::Scope"* [ %99, %101 ], [ %47, %68 ]
  switch i8 %75, label %88 [
    i8 0, label %104
    i8 6, label %77
    i8 2, label %82
  ]

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %76, i64 0, i32 13
  %79 = load i16, i16* %78, align 1
  %80 = and i16 %79, 16384
  %81 = icmp eq i16 %80, 0
  br i1 %81, label %88, label %104

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %76, i64 0, i32 14, i64 2
  %84 = load i8, i8* %83, align 1
  %85 = add i8 %84, -11
  %86 = icmp ult i8 %85, 2
  br i1 %86, label %88, label %87

87:                                               ; preds = %82
  switch i8 %84, label %104 [
    i8 25, label %88
    i8 24, label %88
    i8 23, label %88
    i8 22, label %88
    i8 21, label %88
    i8 20, label %88
    i8 17, label %88
    i8 16, label %88
    i8 15, label %88
    i8 14, label %88
    i8 10, label %88
    i8 9, label %88
    i8 8, label %88
    i8 7, label %88
    i8 6, label %88
    i8 5, label %88
    i8 4, label %88
    i8 3, label %88
  ]

88:                                               ; preds = %87, %87, %87, %87, %87, %87, %87, %87, %87, %87, %87, %87, %87, %87, %87, %87, %87, %87, %82, %77, %74
  %89 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %76, i64 0, i32 13
  %90 = load i16, i16* %89, align 1
  %91 = and i16 %90, 512
  %92 = icmp eq i16 %91, 0
  %93 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %76, i64 0, i32 0
  %94 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %93, align 8
  br i1 %92, label %98, label %95

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %94, i64 0, i32 0
  %97 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %96, align 8
  br label %98

98:                                               ; preds = %95, %88
  %99 = phi %"class.v8::internal::Scope"* [ %97, %95 ], [ %94, %88 ]
  %100 = icmp eq %"class.v8::internal::Scope"* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %99, i64 0, i32 12
  %103 = load i8, i8* %102, align 8
  br label %74

104:                                              ; preds = %74, %77, %87, %98, %68
  %105 = phi %"class.v8::internal::Scope"* [ null, %68 ], [ null, %87 ], [ %76, %74 ], [ %76, %77 ], [ null, %98 ]
  %106 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %105, i64 0, i32 13
  %107 = load i16, i16* %106, align 1
  %108 = or i16 %107, 8192
  store i16 %108, i16* %106, align 1
  br label %109

109:                                              ; preds = %65, %104
  ret void
}

declare void @_ZN2v88internal8VariableC1EPS1_(%"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*) unnamed_addr #5

declare void @_ZN2v88internal13VariableProxyC1EPKS1_(%"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"*) unnamed_addr #5

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #5

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_18KeyEqualityMatcherIS2_EENS_8internal20ZoneAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 1
  %3 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = shl i32 %5, 1
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %10, align 8
  %12 = mul nuw nsw i64 %9, 24
  %13 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %11, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %11, i64 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %14
  %18 = icmp ugt i64 %12, %17
  br i1 %18, label %19, label %21, !prof !2

19:                                               ; preds = %1
  %20 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %11, i64 %12) #10
  br label %23

21:                                               ; preds = %1
  %22 = add i64 %14, %12
  store i64 %22, i64* %13, align 8
  br label %23

23:                                               ; preds = %21, %19
  %24 = phi i64 [ %20, %19 ], [ %14, %21 ]
  %25 = inttoptr i64 %24 to %"struct.v8::base::TemplateHashMapEntry"*
  store %"struct.v8::base::TemplateHashMapEntry"* %25, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0)) #11
  unreachable

28:                                               ; preds = %23
  store i32 %8, i32* %4, align 8
  %29 = icmp eq i32 %8, 0
  br i1 %29, label %42, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %25, i64 0, i32 0
  store i8* null, i8** %31, align 8
  %32 = load i32, i32* %4, align 8
  %33 = icmp ugt i32 %32, 1
  br i1 %33, label %34, label %42

34:                                               ; preds = %30, %34
  %35 = phi i64 [ %38, %34 ], [ 1, %30 ]
  %36 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %37 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %36, i64 %35, i32 0
  store i8* null, i8** %37, align 8
  %38 = add nuw nsw i64 %35, 1
  %39 = load i32, i32* %4, align 8
  %40 = zext i32 %39 to i64
  %41 = icmp ult i64 %38, %40
  br i1 %41, label %34, label %42

42:                                               ; preds = %34, %30, %28
  %43 = phi i32 [ %32, %30 ], [ 0, %28 ], [ %39, %34 ]
  store i32 0, i32* %6, align 4
  %44 = icmp eq i32 %7, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %119, %42
  ret void

46:                                               ; preds = %42, %119
  %47 = phi i32 [ %120, %119 ], [ %43, %42 ]
  %48 = phi i32 [ %121, %119 ], [ %7, %42 ]
  %49 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %122, %119 ], [ %3, %42 ]
  %50 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %49, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %119, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %49, i64 0, i32 2
  %55 = load i32, i32* %54, align 8
  %56 = add i32 %47, -1
  %57 = and i32 %56, %55
  %58 = zext i32 %57 to i64
  %59 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %60 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %59, i64 %58
  %61 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %60, i64 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = icmp eq i8* %62, null
  %64 = icmp eq i8* %51, %62
  %65 = or i1 %63, %64
  br i1 %65, label %78, label %66

66:                                               ; preds = %53
  %67 = zext i32 %56 to i64
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi i64 [ %58, %66 ], [ %71, %68 ]
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, %67
  %72 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %59, i64 %71
  %73 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %72, i64 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = icmp eq i8* %74, null
  %76 = icmp eq i8* %51, %74
  %77 = or i1 %75, %76
  br i1 %77, label %78, label %68

78:                                               ; preds = %68, %53
  %79 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %60, %53 ], [ %72, %68 ]
  %80 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %49, i64 0, i32 1
  %81 = bitcast i8** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %79, i64 0, i32 0
  store i8* %51, i8** %83, align 8
  %84 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %79, i64 0, i32 1
  %85 = bitcast i8** %84 to i64*
  store i64 %82, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %79, i64 0, i32 2
  store i32 %55, i32* %86, align 8
  %87 = load i32, i32* %6, align 4
  %88 = add i32 %87, 1
  store i32 %88, i32* %6, align 4
  %89 = lshr i32 %88, 2
  %90 = add i32 %89, %88
  %91 = load i32, i32* %4, align 8
  %92 = icmp ult i32 %90, %91
  br i1 %92, label %116, label %93

93:                                               ; preds = %78
  tail call void @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_18KeyEqualityMatcherIS2_EENS_8internal20ZoneAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl"* %0) #10
  %94 = load i32, i32* %4, align 8
  %95 = add i32 %94, -1
  %96 = and i32 %95, %55
  %97 = zext i32 %96 to i64
  %98 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %99 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %98, i64 %97, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = icmp eq i8* %100, null
  %102 = load i8*, i8** %50, align 8
  %103 = icmp eq i8* %102, %100
  %104 = or i1 %101, %103
  br i1 %104, label %116, label %105

105:                                              ; preds = %93
  %106 = zext i32 %95 to i64
  br label %107

107:                                              ; preds = %107, %105
  %108 = phi i64 [ %97, %105 ], [ %110, %107 ]
  %109 = add nuw nsw i64 %108, 1
  %110 = and i64 %109, %106
  %111 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %98, i64 %110, i32 0
  %112 = load i8*, i8** %111, align 8
  %113 = icmp eq i8* %112, null
  %114 = icmp eq i8* %102, %112
  %115 = or i1 %113, %114
  br i1 %115, label %116, label %107

116:                                              ; preds = %107, %93, %78
  %117 = phi i32 [ %94, %93 ], [ %91, %78 ], [ %94, %107 ]
  %118 = add i32 %48, -1
  br label %119

119:                                              ; preds = %46, %116
  %120 = phi i32 [ %117, %116 ], [ %47, %46 ]
  %121 = phi i32 [ %118, %116 ], [ %48, %46 ]
  %122 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %49, i64 1
  %123 = icmp eq i32 %121, 0
  br i1 %123, label %45, label %46
}

declare i64* @_ZN2v88internal9StringSet3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 1, i32 4001}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{i8 0, i8 2}
!6 = !{!"branch_weights", i32 4001, i32 4000000}
