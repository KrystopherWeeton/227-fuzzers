; ModuleID = '../../third_party/skia/src/gpu/SkGpuDevice_drawTexture.cpp'
source_filename = "../../third_party/skia/src/gpu/SkGpuDevice_drawTexture.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkCubicResampler = type { float, float }
%class.SkOverrideDeviceMatrixProvider = type { %class.SkMatrixProvider, %class.SkMatrixProvider* }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkM44 = type { [16 x float] }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkPreConcatMatrixProvider = type { %class.SkMatrixProvider, %class.SkMatrixProvider*, %class.SkMatrix }
%class.GrShape = type { %union.anon.324, i8, i8, i8, i8, [4 x i8] }
%union.anon.324 = type { %class.SkRRect, [4 x i8] }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%class.SkStrokeRec = type { float, float, float, i32 }
%class.sk_sp.236 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkTLazy.325 = type { [16 x i8], %class.SkPath* }
%class.SkPath = type <{ %class.sk_sp.204, i32, %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", i8, i8 }>
%class.sk_sp.204 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.205, %struct.SkRect, [4 x i8], %class.SkTDArray.206, %class.SkTDArray.207, %class.SkTDArray.208, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.205 = type { %"struct.std::__1::atomic" }
%class.SkTDArray.206 = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.207 = type { i8*, i32, i32 }
%class.SkTDArray.208 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.209 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.209 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.19", [3 x i8] }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl.21" }
%"struct.std::__1::__cxx_atomic_impl.21" = type { %"struct.std::__1::__cxx_atomic_base_impl.22" }
%"struct.std::__1::__cxx_atomic_base_impl.22" = type { i8 }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkRGBA4f.300 = type { float, float, float, float }
%struct.DrawQuad = type { %class.GrQuad, %class.GrQuad, i32 }
%class.GrQuad = type { [4 x float], [4 x float], [4 x float], i32 }
%class.GrStyle = type { %class.SkStrokeRec, %class.sk_sp.236, %"struct.GrStyle::DashInfo" }
%"struct.GrStyle::DashInfo" = type { i32, float, %class.SkAutoSTArray }
%class.SkAutoSTArray = type { i32, float*, [16 x i8] }
%class.SkGpuDevice = type { %class.SkBaseGpuDevice, %class.sk_sp.6, %"class.std::__1::unique_ptr.194", [8 x i8], %class.GrClipStack }
%class.SkBaseGpuDevice = type { %class.SkBaseDevice }
%class.SkBaseDevice = type { %class.SkRefCnt.base, %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 }
%class.SkMarkerStack = type opaque
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%class.sk_sp.6 = type { %class.GrRecordingContext* }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.23", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.188" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.7 }
%class.sk_sp.7 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type <{ %class.SkNVRefCnt.8, i32, %struct.GrContextOptions, i32, [4 x i8], %class.sk_sp.9, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.12", %class.sk_sp.18, %"struct.std::__1::atomic.19", [7 x i8] }>
%class.SkNVRefCnt.8 = type { %"struct.std::__1::atomic" }
%struct.GrContextOptions = type { i8, i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, i64, float, float, i32, i8, i8, i32, i32, i8, i8, i32, %"class.GrContextOptions::PersistentCache"*, i32, %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds }
%class.SkExecutor = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.9 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.10, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.10 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrTextBlobCache* }
%class.GrTextBlobCache = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.GrThreadSafeCache* }
%class.GrThreadSafeCache = type opaque
%class.sk_sp.18 = type { %class.GrThreadSafePipelineBuilder* }
%class.GrThreadSafePipelineBuilder = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.33, %class.SkTArray.42, %class.SkTArray.44, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.26"*, i64 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.44, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.45 }
%class.sk_sp.45 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.27" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.33 = type { %class.SkTHashTable.34 }
%class.SkTHashTable.34 = type { i32, i32, %class.SkAutoTArray.35 }
%class.SkAutoTArray.35 = type { %"class.std::__1::unique_ptr.36" }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.317" }
%"struct.std::__1::pair.317" = type { i32, %class.SkTArray.318* }
%class.SkTArray.318 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.42 = type { %"class.std::__1::unique_ptr.43"*, i64 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.318, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.44 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.58 }
%class.SkFibBlockSizes.58 = type { i32 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.65, %class.SkTArray.74, %class.GrOpsTask*, %class.SkSTArray.153, %class.SkSTArray.156, %"class.std::__1::unique_ptr.158", %class.sk_sp.174, %class.GrTokenTracker, i8, i8, %class.SkTArray.175, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.65 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.66", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.69, i8, [7 x i8] }>
%class.sk_sp.69 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.70, i8*, i64 }
%class.GrBuffer = type { i32 (...)** }
%class.GrNonAtomicRef.70 = type { i32 }
%class.SkTArray.74 = type { %class.sk_sp.75*, i64 }
%class.sk_sp.75 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray, %class.SkTArray.120, i32, i32, %class.SkSTArray.127, %class.SkSTArray.127, %class.GrTextureResolveRenderTask* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.76 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.76 = type { %class.sk_sp.77*, i64 }
%class.sk_sp.77 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.78, %class.sk_sp.79, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.115" }
%class.SkNVRefCnt.78 = type { %"struct.std::__1::atomic" }
%class.sk_sp.79 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.82 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.80, i8* }
%class.sk_sp.80 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.81, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.81 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.82 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.83, void (i8*)*, i8* }
%class.SkNVRefCnt.83 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.84, i32, [4 x i8] }
%union.anon.84 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.79, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.9, %class.sk_sp.114, %class.sk_sp.114 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.94, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.105, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.86 }
%class.SkTHashTable.86 = type { i32, i32, %class.SkAutoTArray.87 }
%class.SkAutoTArray.87 = type { %"class.std::__1::unique_ptr.88" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.94 = type { %class.SkTHashTable.95 }
%class.SkTHashTable.95 = type { i32, i32, %class.SkAutoTArray.96 }
%class.SkAutoTArray.96 = type { %"class.std::__1::unique_ptr.97" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.103, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.103 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.104, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.104 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.105 = type { %class.SkTHashTable.106 }
%class.SkTHashTable.106 = type { i32, i32, %class.SkAutoTArray.107 }
%class.SkAutoTArray.107 = type { %"class.std::__1::unique_ptr.108" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.114 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.115" = type { %"struct.std::__1::__atomic_base.116" }
%"struct.std::__1::__atomic_base.116" = type { %"struct.std::__1::__atomic_base.117" }
%"struct.std::__1::__atomic_base.117" = type { %"struct.std::__1::__cxx_atomic_impl.118" }
%"struct.std::__1::__cxx_atomic_impl.118" = type { %"struct.std::__1::__cxx_atomic_base_impl.119" }
%"struct.std::__1::__cxx_atomic_base_impl.119" = type { i64 }
%class.SkTArray.120 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.121", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.127 = type { %class.SkAlignedSTStorage.128, %class.SkTArray.129 }
%class.SkAlignedSTStorage.128 = type { [8 x i8] }
%class.SkTArray.129 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.130, %class.sk_sp.150, %class.SkTArray.152, %struct.SkRect, %struct.SkIRect }
%class.GrSwizzle = type { i16 }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.130 = type { %class.SkAlignedSTStorage.131, %class.SkTArray.132 }
%class.SkAlignedSTStorage.131 = type { [2000 x i8] }
%class.SkTArray.132 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.133", %class.GrOp* }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.133", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.77, i32, %class.GrSwizzle, [2 x i8] }>
%struct.SkIPoint = type { i32, i32 }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.141" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.139 }
%union.anon.139 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.140, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.140 = type { i32 }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.144, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.144 = type { %class.SkAlignedSTStorage.145, %class.SkTArray.146 }
%class.SkAlignedSTStorage.145 = type { [8 x i8] }
%class.SkTArray.146 = type { %"class.std::__1::unique_ptr.141"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.sk_sp.150 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.151, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.151 = type { %"struct.std::__1::atomic" }
%class.SkTArray.152 = type { %class.GrSurfaceProxy**, i64 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkSTArray.153 = type { %class.SkAlignedSTStorage.154, %class.SkTArray.155 }
%class.SkAlignedSTStorage.154 = type { [32 x i8] }
%class.SkTArray.155 = type { i32*, i64 }
%class.SkSTArray.156 = type { %class.SkAlignedSTStorage.157, %class.SkTArray.74 }
%class.SkAlignedSTStorage.157 = type { [32 x i8] }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.161, %"class.std::__1::unique_ptr.165", %class.GrPathRenderer* }
%class.SkSTArray.161 = type { %class.SkAlignedSTStorage.162, %class.SkTArray.163 }
%class.SkAlignedSTStorage.162 = type { [64 x i8] }
%class.SkTArray.163 = type { %class.sk_sp.164*, i64 }
%class.sk_sp.164 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.174 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.175 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.176, i32, %class.GrRenderTask** }
%class.SkTHashMap.176 = type { %class.SkTHashTable.177 }
%class.SkTHashTable.177 = type { i32, i32, %class.SkAutoTArray.178 }
%class.SkAutoTArray.178 = type { %"class.std::__1::unique_ptr.179" }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %class.GrProxyProvider* }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %class.GrSurfaceDrawContext* }
%class.GrSurfaceDrawContext = type { %class.GrSurfaceFillContext.base, %class.SkSurfaceProps, i8, i8, i32, %class.SkGlyphRunListPainter }
%class.GrSurfaceFillContext.base = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.198, i8 }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.GrColorInfo = type { %class.sk_sp, %class.sk_sp.197, i32, i32 }
%class.sk_sp.197 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.sk_sp.198 = type { %class.GrOpsTask* }
%class.SkGlyphRunListPainter = type { %class.SkSurfaceProps, %class.SkSurfaceProps, i32, i32, %class.SkStrikeForGPUCacheInterface*, %class.SkDrawableGlyphBuffer, %class.SkSourceGlyphBuffer }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray.199, %class.SkAutoTMalloc }
%class.SkAutoTArray.199 = type { %"class.std::__1::unique_ptr.200" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon.203 }
%union.anon.203 = type { %class.SkGlyph* }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%struct.SkPackedGlyphID = type { i32 }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.213" }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %struct.SkPoint* }
%class.SkSourceGlyphBuffer = type { %class.SkZip, i64, i32, i32, %class.SkZip.218, %class.SkSTArray.223, %class.SkSTArray.226 }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.217" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.217" = type { %struct.SkPoint* }
%class.SkZip.218 = type { %"class.std::__1::tuple.219", i64 }
%"class.std::__1::tuple.219" = type { %"struct.std::__1::__tuple_impl.220" }
%"struct.std::__1::__tuple_impl.220" = type { %"class.std::__1::__tuple_leaf.221", %"class.std::__1::__tuple_leaf.222" }
%"class.std::__1::__tuple_leaf.221" = type { i16* }
%"class.std::__1::__tuple_leaf.222" = type { %struct.SkPoint* }
%class.SkSTArray.223 = type { %class.SkAlignedSTStorage.224, %class.SkTArray.225 }
%class.SkAlignedSTStorage.224 = type { [8 x i8] }
%class.SkTArray.225 = type { i16*, i64 }
%class.SkSTArray.226 = type { %class.SkAlignedSTStorage.227, %class.SkTArray.228 }
%class.SkAlignedSTStorage.227 = type { [32 x i8] }
%class.SkTArray.228 = type { %struct.SkPoint*, i64 }
%class.GrClipStack = type <{ %class.GrClip, [8 x i8], %class.GrTBlockList, %class.GrTBlockList.232, %class.GrTBlockList.234, %class.GrProxyProvider*, %struct.SkIRect, %class.SkMatrixProvider*, i8, [15 x i8] }>
%class.GrClip = type { i32 (...)** }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [256 x i8] }
%class.GrTBlockList.232 = type { %class.GrSBlockAllocator.233 }
%class.GrSBlockAllocator.233 = type { [192 x i8] }
%class.GrTBlockList.234 = type { %class.GrSBlockAllocator.235 }
%class.GrSBlockAllocator.235 = type { [128 x i8] }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%class.SkPaint = type <{ %class.sk_sp.236, %class.sk_sp.237, %class.sk_sp.238, %class.sk_sp.239, %class.sk_sp.240, %struct.SkRGBA4f, float, float, %union.anon.241, [4 x i8] }>
%class.sk_sp.237 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.238 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.239 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.240 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.241 = type { %struct.anon.242 }
%struct.anon.242 = type { i32 }
%class.SkImage_Gpu = type { %class.SkImage_GpuBase, %"class.SkImage_Gpu::ProxyChooser", %class.GrSwizzle, i32 }
%class.SkImage_GpuBase = type { %class.SkImage_Base.base, %class.sk_sp.243 }
%class.SkImage_Base.base = type { %class.SkImage.base, %"struct.std::__1::atomic.19" }
%class.SkImage.base = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32 }>
%class.sk_sp.243 = type { %class.GrImageContext* }
%class.GrImageContext = type <{ %class.GrContext_Base, %class.GrSingleOwner, [7 x i8] }>
%"class.SkImage_Gpu::ProxyChooser" = type <{ %class.SkSpinlock, [7 x i8], %class.sk_sp.77, %class.sk_sp.77, %class.sk_sp.75, i32, [4 x i8] }>
%class.SkSpinlock = type { %"struct.std::__1::atomic.19" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkImage_Base = type { %class.SkImage.base, %"struct.std::__1::atomic.19", [3 x i8] }
%"class.std::__1::tuple.304" = type { %"struct.std::__1::__tuple_impl.305" }
%"struct.std::__1::__tuple_impl.305" = type { %"class.std::__1::__tuple_leaf.306", %"class.std::__1::__tuple_leaf.307", [4 x i8] }
%"class.std::__1::__tuple_leaf.306" = type { %class.GrSurfaceProxyView }
%"class.std::__1::__tuple_leaf.307" = type { i32 }
%class.GrPaint = type <{ %class.GrXPFactory*, %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.141", i8, [3 x i8], %struct.SkRGBA4f.300, [4 x i8] }>
%class.GrXPFactory = type { i32 (...)** }
%class.GrStyledShape = type { %class.GrShape, %class.GrStyle, i32, i8, i8, %class.SkTLazy.325, %class.SkAutoSTArray.326 }
%class.SkAutoSTArray.326 = type { i32, i32*, [32 x i8] }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkMaskFilterBase = type { %class.SkMaskFilter.base, [4 x i8] }
%class.SkMaskFilter.base = type { %class.SkFlattenable.base }
%class.GrRenderTargetProxy = type <{ i32 (...)**, i8, i8, i8, i8, %struct.SkIRect, [4 x i8], %class.sk_sp.150, [4 x i8], [4 x i8], %class.GrSurfaceProxy }>
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.SkBitmap = type { %class.sk_sp.244, %class.SkPixmap, %class.sk_sp.245 }
%class.sk_sp.244 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.245 = type { %class.SkMipmap* }
%class.SkMipmap = type <{ %class.SkCachedData.base, [6 x i8], %class.sk_sp, %"struct.SkMipmap::Level"*, i32, [4 x i8] }>
%class.SkCachedData.base = type <{ i32 (...)**, %class.SkMutex, %union.anon.246, i8*, i64, i32, i32, i8, i8 }>
%union.anon.246 = type { %class.SkDiscardableMemory* }
%class.SkDiscardableMemory = type opaque
%"struct.SkMipmap::Level" = type { %class.SkPixmap, %struct.SkSize }
%struct.SkSize = type { float, float }
%class.sk_sp.327 = type { %class.SkImage* }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.253", %class.sk_sp.259, %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.266", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.283", %"class.std::__1::unique_ptr.289" }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.259 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %class.GrResourceCache* }
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %class.GrResourceProvider* }
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type <{ %"class.SkMessageBus<GrClientMappedBufferManager::BufferFinishedMessage, GrDirectContext::DirectContextID, false>::Inbox", %"class.std::__1::forward_list", i8, [7 x i8] }>
%"class.SkMessageBus<GrClientMappedBufferManager::BufferFinishedMessage, GrDirectContext::DirectContextID, false>::Inbox" = type <{ %class.SkTArray.275, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.275 = type { %"struct.GrClientMappedBufferManager::BufferFinishedMessage"*, i64 }
%"struct.GrClientMappedBufferManager::BufferFinishedMessage" = type <{ %class.sk_sp.276, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.sk_sp.276 = type { %class.GrGpuBuffer* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type opaque
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.289" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%"struct.SkCanvas::ImageSetEntry" = type <{ %class.sk_sp.295, %struct.SkRect, %struct.SkRect, i32, float, i32, i8, [3 x i8] }>
%class.sk_sp.295 = type { %class.SkImage* }
%class.SkTCopyOnFirstWrite = type { %class.SkPaint*, %class.SkTLazy }
%class.SkTLazy = type { [72 x i8], %class.SkPaint* }
%class.SkAutoTArray.296 = type { %"class.std::__1::unique_ptr.297" }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"struct.GrSurfaceDrawContext::TextureSetEntry"* }
%"struct.GrSurfaceDrawContext::TextureSetEntry" = type <{ %class.GrSurfaceProxyView, i32, %struct.SkRect, %struct.SkRect, [4 x i8], %struct.SkPoint*, %class.SkMatrix*, %struct.SkRGBA4f.300, i32, [4 x i8] }>
%class.anon = type { i32*, %"struct.SkCanvas::ImageSetEntry"**, i32*, %class.SkGpuDevice*, %class.SkAutoTArray.296*, i32*, i32*, i32*, i32* }

$_ZN12SkAutoTArrayIN20GrSurfaceDrawContext15TextureSetEntryEEC2Ei = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

$_ZN30SkOverrideDeviceMatrixProviderD0Ev = comdat any

$_ZNK30SkOverrideDeviceMatrixProvider16getLocalToMarkerEjP5SkM44 = comdat any

$_ZNK30SkOverrideDeviceMatrixProvider29localToDeviceHitsPixelCentersEv = comdat any

$_ZN16SkMatrixProviderD2Ev = comdat any

$_ZN13GrStyledShapeD2Ev = comdat any

$_ZN13GrStyledShapeC2ERK6SkRectNS_10DoSimplifyE = comdat any

$_ZN20GrSurfaceDrawContext15drawTextureQuadEPK6GrClip18GrSurfaceProxyView11GrColorType11SkAlphaType12SkFilterMode12SkMipmapMode11SkBlendModeRK8SkRGBA4fILS5_2EEPK7SkPointSF_4GrAA13GrQuadAAFlagsPK6SkRectRK8SkMatrix5sk_spI17GrColorSpaceXformE = comdat any

$_ZN13GrStyledShapeC2ERK6SkPathRK7GrStyleNS_10DoSimplifyE = comdat any

$_ZN7GrStyleD2Ev = comdat any

$_ZN25SkPreConcatMatrixProviderD0Ev = comdat any

$_ZNK25SkPreConcatMatrixProvider16getLocalToMarkerEjP5SkM44 = comdat any

$_ZNK25SkPreConcatMatrixProvider29localToDeviceHitsPixelCentersEv = comdat any

$_ZTV30SkOverrideDeviceMatrixProvider = comdat any

$_ZZN7GrStyle10SimpleFillEvE5kFill = comdat any

$_ZGVZN7GrStyle10SimpleFillEvE5kFill = comdat any

$_ZTV25SkPreConcatMatrixProvider = comdat any

@__const._ZN11SkGpuDevice11drawSpecialEP14SkSpecialImageRK8SkMatrixRK17SkSamplingOptionsRK7SkPaint.sampling = private unnamed_addr constant { i8, [3 x i8], %struct.SkCubicResampler, i32, i32 } { i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkCubicResampler { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766 }, align 4
@__const._ZN11SkGpuDevice11drawSpecialEP14SkSpecialImageRK8SkMatrixRK17SkSamplingOptionsRK7SkPaint.matrixProvider = private unnamed_addr constant %class.SkOverrideDeviceMatrixProvider { %class.SkMatrixProvider { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkM44 { [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, %class.SkMatrixProvider* inttoptr (i64 -6148914691236517206 to %class.SkMatrixProvider*) }, align 8
@__const._ZN11SkGpuDevice13drawImageQuadEPK7SkImagePK6SkRectS5_PK7SkPoint4GrAA13GrQuadAAFlagsPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintN8SkCanvas17SrcRectConstraintE.matrixProvider = private unnamed_addr constant %class.SkPreConcatMatrixProvider { %class.SkMatrixProvider { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkM44 { [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, %class.SkMatrixProvider* inttoptr (i64 -6148914691236517206 to %class.SkMatrixProvider*), %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, align 8
@.str = private unnamed_addr constant [5 x i8] c"aaaa\00", align 1
@_ZTV30SkOverrideDeviceMatrixProvider = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD2Ev to i8*), i8* bitcast (void (%class.SkOverrideDeviceMatrixProvider*)* @_ZN30SkOverrideDeviceMatrixProviderD0Ev to i8*), i8* bitcast (i1 (%class.SkOverrideDeviceMatrixProvider*, i32, %class.SkM44*)* @_ZNK30SkOverrideDeviceMatrixProvider16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkOverrideDeviceMatrixProvider*)* @_ZNK30SkOverrideDeviceMatrixProvider29localToDeviceHitsPixelCentersEv to i8*)] }, comdat, align 8
@__const._ZN12_GLOBAL__N_110draw_imageEP18GrRecordingContextP20GrSurfaceDrawContextPK6GrClipRK16SkMatrixProviderRK7SkPaintRK12SkImage_BaseRK6SkRectSI_PK7SkPointRK8SkMatrix4GrAA13GrQuadAAFlagsN8SkCanvas17SrcRectConstraintE17SkSamplingOptions10SkTileMode.shape = private unnamed_addr constant { %class.GrShape, { %class.SkStrokeRec, %class.sk_sp.236, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } }, i32, i8, i8, [2 x i8], %class.SkTLazy.325, { i32, [4 x i8], i32*, [32 x i8] } } { %class.GrShape { %union.anon.324 { %class.SkRRect { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x %struct.SkPoint] [%struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }], i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }, i8 -86, i8 -86, i8 -86, i8 -86, [4 x i8] c"\AA\AA\AA\AA" }, { %class.SkStrokeRec, %class.sk_sp.236, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } } { %class.SkStrokeRec { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766 }, %class.sk_sp.236 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } { i32 -1431655766, float 0xFFFFFFFFE0000000, { i32, [4 x i8], float*, [16 x i8] } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", float* inttoptr (i64 -6148914691236517206 to float*), [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } } }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %class.SkTLazy.325 { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", %class.SkPath* inttoptr (i64 -6148914691236517206 to %class.SkPath*) }, { i32, [4 x i8], i32*, [32 x i8] } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i32* inttoptr (i64 -6148914691236517206 to i32*), [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, align 8
@_ZL17SK_PMColor4fWHITE = internal unnamed_addr constant %struct.SkRGBA4f.300 { float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00 }, align 4
@__const._ZN20GrSurfaceDrawContext18fillRectWithEdgeAAEPK6GrClipO7GrPaint4GrAA13GrQuadAAFlagsRK8SkMatrixRK6SkRectPSB_.quad = private unnamed_addr constant %struct.DrawQuad { %class.GrQuad { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, %class.GrQuad { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, i32 -1431655766 }, align 4
@_ZZN7GrStyle10SimpleFillEvE5kFill = linkonce_odr hidden global %class.GrStyle zeroinitializer, comdat, align 8
@_ZGVZN7GrStyle10SimpleFillEvE5kFill = linkonce_odr hidden global i64 0, comdat, align 8
@__dso_handle = external hidden global i8
@_ZTV25SkPreConcatMatrixProvider = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD2Ev to i8*), i8* bitcast (void (%class.SkPreConcatMatrixProvider*)* @_ZN25SkPreConcatMatrixProviderD0Ev to i8*), i8* bitcast (i1 (%class.SkPreConcatMatrixProvider*, i32, %class.SkM44*)* @_ZNK25SkPreConcatMatrixProvider16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkPreConcatMatrixProvider*)* @_ZNK25SkPreConcatMatrixProvider29localToDeviceHitsPixelCentersEv to i8*)] }, comdat, align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"rgba\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkGpuDevice11drawSpecialEP14SkSpecialImageRK8SkMatrixRK17SkSamplingOptionsRK7SkPaint(%class.SkGpuDevice*, %class.SkSpecialImage*, %class.SkMatrix* nocapture readonly dereferenceable(40), %struct.SkSamplingOptions* nocapture readonly dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRect*
  %10 = alloca %class.SkMatrix, align 16
  %11 = alloca %class.GrSurfaceProxyView, align 8
  %12 = alloca %class.SkImage_Gpu, align 8
  %13 = alloca %class.sk_sp.243, align 8
  %14 = alloca %class.GrSurfaceProxyView, align 8
  %15 = alloca %class.SkColorInfo, align 8
  %16 = alloca %class.SkOverrideDeviceMatrixProvider, align 8
  %17 = alloca %struct.SkSamplingOptions, align 8
  %18 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #12
  %19 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %1, i64 0, i32 2, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = sitofp i32 %20 to float
  %22 = insertelement <2 x float> undef, float %21, i32 0
  %23 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %1, i64 0, i32 2, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = sitofp i32 %24 to float
  %26 = insertelement <2 x float> %22, float %25, i32 1
  %27 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %1, i64 0, i32 2, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = sitofp i32 %28 to float
  %30 = insertelement <2 x float> undef, float %29, i32 0
  %31 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %1, i64 0, i32 2, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = sitofp i32 %32 to float
  %34 = insertelement <2 x float> %30, float %33, i32 1
  %35 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %26, <2 x float>* %35, align 8
  %36 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %34, <2 x float>* %36, align 8
  %37 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #12
  %38 = sub i32 %28, %20
  %39 = sitofp i32 %38 to float
  %40 = sub i32 %32, %24
  %41 = sitofp i32 %40 to float
  %42 = insertelement <2 x float> undef, float %39, i32 0
  %43 = insertelement <2 x float> %42, float %41, i32 1
  %44 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %44, align 8
  %45 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  store <2 x float> %43, <2 x float>* %45, align 8
  %46 = bitcast %class.SkMatrix* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %46) #12
  %47 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 1
  %48 = bitcast %class.SkMatrix* %10 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %48, align 16, !alias.scope !2
  %49 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 4
  %50 = bitcast float* %49 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %50, align 16, !alias.scope !2
  %51 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %51, align 16, !alias.scope !2
  store i32 16, i32* %47, align 4, !alias.scope !2
  %52 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* nonnull %10, %struct.SkRect* nonnull dereferenceable(16) %7, %struct.SkRect* nonnull dereferenceable(16) %9, i32 0) #12
  %53 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %3, i64 0, i32 0
  %54 = load i8, i8* %53, align 4, !range !7
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %62

56:                                               ; preds = %5
  %57 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %3, i64 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %3, i64 0, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %56, %5
  br label %63

63:                                               ; preds = %56, %62
  %64 = phi i32 [ 1, %62 ], [ %58, %56 ]
  %65 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %4, i64 0, i32 8, i32 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %76

70:                                               ; preds = %63
  %71 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %65, align 8
  %72 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %71, i64 0, i32 1, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %77, label %76

76:                                               ; preds = %70, %63
  br label %77

77:                                               ; preds = %70, %76
  %78 = phi i1 [ true, %76 ], [ false, %70 ]
  %79 = phi i32 [ 15, %76 ], [ 0, %70 ]
  %80 = bitcast %class.SkSpecialImage* %1 to i32 (%class.SkSpecialImage*)***
  %81 = load i32 (%class.SkSpecialImage*)**, i32 (%class.SkSpecialImage*)*** %80, align 8
  %82 = getelementptr inbounds i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %81, i64 4
  %83 = load i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %82, align 8
  %84 = call i32 %83(%class.SkSpecialImage* %1) #12
  %85 = load i32 (%class.SkSpecialImage*)**, i32 (%class.SkSpecialImage*)*** %80, align 8
  %86 = getelementptr inbounds i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %85, i64 3
  %87 = load i32 (%class.SkSpecialImage*)*, i32 (%class.SkSpecialImage*)** %86, align 8
  %88 = call i32 %87(%class.SkSpecialImage* %1) #12
  %89 = call %class.SkColorSpace* @_ZNK14SkSpecialImage13getColorSpaceEv(%class.SkSpecialImage* %1) #12
  %90 = icmp eq %class.SkColorSpace* %89, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %77
  %92 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = atomicrmw add i32* %92, i32 1 monotonic, !noalias !8
  br label %94

94:                                               ; preds = %91, %77
  %95 = ptrtoint %class.SkColorSpace* %89 to i64
  %96 = zext i32 %84 to i64
  %97 = zext i32 %88 to i64
  %98 = shl nuw i64 %97, 32
  %99 = or i64 %98, %96
  %100 = bitcast %class.GrSurfaceProxyView* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100) #12
  %101 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 1
  %103 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 2, i32 0
  %104 = bitcast %class.SkGpuDevice* %0 to %class.GrRecordingContext* (%class.SkGpuDevice*)***
  %105 = bitcast %class.GrSurfaceProxyView* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 -86, i64 16, i1 false)
  %106 = load %class.GrRecordingContext* (%class.SkGpuDevice*)**, %class.GrRecordingContext* (%class.SkGpuDevice*)*** %104, align 16
  %107 = getelementptr inbounds %class.GrRecordingContext* (%class.SkGpuDevice*)*, %class.GrRecordingContext* (%class.SkGpuDevice*)** %106, i64 8
  %108 = load %class.GrRecordingContext* (%class.SkGpuDevice*)*, %class.GrRecordingContext* (%class.SkGpuDevice*)** %107, align 8
  %109 = call %class.GrRecordingContext* %108(%class.SkGpuDevice* %0) #12
  call void @_ZNK14SkSpecialImage4viewEP18GrRecordingContext(%class.GrSurfaceProxyView* nonnull sret %11, %class.SkSpecialImage* %1, %class.GrRecordingContext* %109) #12
  %110 = bitcast %class.SkImage_Gpu* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %110) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 -86, i64 104, i1 false)
  %111 = call %class.GrRecordingContext* @_ZNK14SkSpecialImage10getContextEv(%class.SkSpecialImage* %1) #12
  %112 = icmp eq %class.GrRecordingContext* %111, null
  br i1 %112, label %116, label %113

113:                                              ; preds = %94
  %114 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = atomicrmw add i32* %114, i32 1 monotonic, !noalias !11
  br label %116

116:                                              ; preds = %94, %113
  %117 = ptrtoint %class.GrRecordingContext* %111 to i64
  %118 = bitcast %class.sk_sp.243* %13 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %1, i64 0, i32 3
  %120 = load i32, i32* %119, align 4
  %121 = bitcast %class.GrSurfaceProxyView* %11 to i64*
  %122 = load i64, i64* %121, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %101, align 8
  %123 = bitcast %class.GrSurfaceProxyView* %14 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %14, i64 0, i32 1
  %125 = load i32, i32* %102, align 8
  store i32 %125, i32* %124, align 8
  %126 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %14, i64 0, i32 2, i32 0
  %127 = load i16, i16* %103, align 4
  store i16 %127, i16* %126, align 4
  %128 = bitcast %class.SkColorInfo* %15 to i64*
  store i64 %95, i64* %128, align 8
  %129 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %15, i64 0, i32 1
  %130 = bitcast i32* %129 to i64*
  store i64 %99, i64* %130, align 8
  call void @_ZN11SkImage_GpuC1E5sk_spI14GrImageContextEj18GrSurfaceProxyView11SkColorInfo(%class.SkImage_Gpu* nonnull %12, %class.sk_sp.243* nonnull %13, i32 %120, %class.GrSurfaceProxyView* nonnull %14, %class.SkColorInfo* nonnull %15) #12
  %131 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %15, i64 0, i32 0, i32 0
  %132 = load %class.SkColorSpace*, %class.SkColorSpace** %131, align 8
  %133 = icmp eq %class.SkColorSpace* %132, null
  br i1 %133, label %140, label %134

134:                                              ; preds = %116
  %135 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = atomicrmw add i32* %135, i32 -1 acq_rel
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %138, label %140

138:                                              ; preds = %134
  %139 = bitcast %class.SkColorSpace* %132 to i8*
  call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %116, %134, %138
  %141 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %14, i64 0, i32 0, i32 0
  %142 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %141, align 8
  %143 = icmp eq %class.GrSurfaceProxy* %142, null
  br i1 %143, label %156, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %142, i64 0, i32 1
  %146 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %156

149:                                              ; preds = %144
  %150 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %145, i64 -2
  %151 = bitcast %class.SkNVRefCnt.78* %150 to %class.GrSurfaceProxy*
  %152 = bitcast %class.SkNVRefCnt.78* %150 to void (%class.GrSurfaceProxy*)***
  %153 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %152, align 8
  %154 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %153, i64 1
  %155 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %154, align 8
  call void %155(%class.GrSurfaceProxy* nonnull %151) #12
  br label %156

156:                                              ; preds = %140, %144, %149
  %157 = getelementptr inbounds %class.sk_sp.243, %class.sk_sp.243* %13, i64 0, i32 0
  %158 = load %class.GrImageContext*, %class.GrImageContext** %157, align 8
  %159 = icmp eq %class.GrImageContext* %158, null
  br i1 %159, label %170, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds %class.GrImageContext, %class.GrImageContext* %158, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = atomicrmw add i32* %161, i32 -1 acq_rel
  %163 = icmp eq i32 %162, 1
  br i1 %163, label %164, label %170

164:                                              ; preds = %160
  %165 = bitcast %class.GrImageContext* %158 to %class.SkRefCntBase*
  %166 = bitcast %class.GrImageContext* %158 to void (%class.SkRefCntBase*)***
  %167 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %166, align 8
  %168 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %167, i64 2
  %169 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %168, align 8
  call void %169(%class.SkRefCntBase* nonnull %165) #12
  br label %170

170:                                              ; preds = %164, %160, %156
  %171 = bitcast %class.SkOverrideDeviceMatrixProvider* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %171) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %171, i8* align 8 bitcast (%class.SkOverrideDeviceMatrixProvider* @__const._ZN11SkGpuDevice11drawSpecialEP14SkSpecialImageRK8SkMatrixRK17SkSamplingOptionsRK7SkPaint.matrixProvider to i8*), i64 112, i1 false)
  %172 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %0, i64 0, i32 0, i32 0, i32 1
  %173 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %16, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %16, i64 0, i32 0, i32 1
  %175 = bitcast %class.SkMatrix* %2 to i32*
  %176 = load i32, i32* %175, align 4
  %177 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 1
  %178 = bitcast float* %177 to i32*
  %179 = load i32, i32* %178, align 4
  %180 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 2
  %181 = bitcast float* %180 to i32*
  %182 = load i32, i32* %181, align 4
  %183 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 3
  %184 = bitcast float* %183 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 4
  %187 = bitcast float* %186 to i32*
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 5
  %190 = bitcast float* %189 to i32*
  %191 = load i32, i32* %190, align 4
  %192 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 6
  %193 = bitcast float* %192 to i32*
  %194 = load i32, i32* %193, align 4
  %195 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 7
  %196 = bitcast float* %195 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 8
  %199 = bitcast float* %198 to i32*
  %200 = load i32, i32* %199, align 4
  %201 = bitcast %class.SkM44* %174 to i32*
  store i32 %176, i32* %201, align 8
  %202 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %16, i64 0, i32 0, i32 1, i32 0, i64 1
  %203 = bitcast float* %202 to i32*
  store i32 %185, i32* %203, align 4
  %204 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %16, i64 0, i32 0, i32 1, i32 0, i64 2
  store float 0.000000e+00, float* %204, align 8
  %205 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %16, i64 0, i32 0, i32 1, i32 0, i64 3
  %206 = bitcast float* %205 to i32*
  store i32 %194, i32* %206, align 4
  %207 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %16, i64 0, i32 0, i32 1, i32 0, i64 4
  %208 = bitcast float* %207 to i32*
  store i32 %179, i32* %208, align 8
  %209 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %16, i64 0, i32 0, i32 1, i32 0, i64 5
  %210 = bitcast float* %209 to i32*
  store i32 %188, i32* %210, align 4
  %211 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %16, i64 0, i32 0, i32 1, i32 0, i64 6
  store float 0.000000e+00, float* %211, align 8
  %212 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %16, i64 0, i32 0, i32 1, i32 0, i64 7
  %213 = bitcast float* %212 to i32*
  store i32 %197, i32* %213, align 4
  %214 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %16, i64 0, i32 0, i32 1, i32 0, i64 8
  %215 = bitcast float* %214 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %215, align 8
  %216 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %16, i64 0, i32 0, i32 1, i32 0, i64 12
  %217 = bitcast float* %216 to i32*
  store i32 %182, i32* %217, align 8
  %218 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %16, i64 0, i32 0, i32 1, i32 0, i64 13
  %219 = bitcast float* %218 to i32*
  store i32 %191, i32* %219, align 4
  %220 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %16, i64 0, i32 0, i32 1, i32 0, i64 14
  store float 0.000000e+00, float* %220, align 8
  %221 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %16, i64 0, i32 0, i32 1, i32 0, i64 15
  %222 = bitcast float* %221 to i32*
  store i32 %200, i32* %222, align 4
  %223 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %16, i64 0, i32 0, i32 2
  %224 = bitcast %class.SkMatrix* %223 to i8*
  %225 = bitcast %class.SkMatrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %224, i8* align 4 %225, i64 40, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV30SkOverrideDeviceMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %173, align 8
  %226 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %16, i64 0, i32 1
  store %class.SkMatrixProvider* %172, %class.SkMatrixProvider** %226, align 8
  %227 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %0, i64 0, i32 1, i32 0
  %228 = load %class.GrRecordingContext*, %class.GrRecordingContext** %227, align 8
  %229 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %65, align 8
  %230 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %0, i64 0, i32 4, i32 0
  %231 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %16, i64 0, i32 0
  %232 = bitcast %class.SkImage_Gpu* %12 to %class.SkImage_Base*
  %233 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %17, i64 0, i32 0
  store i8 0, i8* %233, align 8
  %234 = getelementptr inbounds i8, i8* %233, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %234, i8* nonnull align 1 getelementptr inbounds ({ i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }, { i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }* @__const._ZN11SkGpuDevice11drawSpecialEP14SkSpecialImageRK8SkMatrixRK17SkSamplingOptionsRK7SkPaint.sampling, i64 0, i32 1, i64 0), i64 3, i1 false)
  %235 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %17, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %235, align 4
  %236 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %17, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %236, align 8
  %237 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %17, i64 0, i32 2
  store i32 %64, i32* %237, align 4
  %238 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %17, i64 0, i32 3
  store i32 0, i32* %238, align 8
  call fastcc void @_ZN12_GLOBAL__N_110draw_imageEP18GrRecordingContextP20GrSurfaceDrawContextPK6GrClipRK16SkMatrixProviderRK7SkPaintRK12SkImage_BaseRK6SkRectSI_PK7SkPointRK8SkMatrix4GrAA13GrQuadAAFlagsN8SkCanvas17SrcRectConstraintE17SkSamplingOptions10SkTileMode(%class.GrRecordingContext* %228, %class.GrSurfaceDrawContext* %229, %class.GrClip* %230, %class.SkMatrixProvider* nonnull dereferenceable(112) %231, %class.SkPaint* dereferenceable(72) %4, %class.SkImage_Base* nonnull dereferenceable(48) %232, %struct.SkRect* nonnull dereferenceable(16) %7, %struct.SkRect* nonnull dereferenceable(16) %9, %struct.SkPoint* null, %class.SkMatrix* nonnull dereferenceable(40) %10, i1 zeroext %78, i32 %79, i32 0, %struct.SkSamplingOptions* nonnull byval(%struct.SkSamplingOptions) align 8 %17, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %171) #12
  call void @_ZN11SkImage_GpuD1Ev(%class.SkImage_Gpu* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %110) #12
  %239 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %101, align 8
  %240 = icmp eq %class.GrSurfaceProxy* %239, null
  br i1 %240, label %253, label %241

241:                                              ; preds = %170
  %242 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %239, i64 0, i32 1
  %243 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %242, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = atomicrmw add i32* %243, i32 -1 acq_rel
  %245 = icmp eq i32 %244, 1
  br i1 %245, label %246, label %253

246:                                              ; preds = %241
  %247 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %242, i64 -2
  %248 = bitcast %class.SkNVRefCnt.78* %247 to %class.GrSurfaceProxy*
  %249 = bitcast %class.SkNVRefCnt.78* %247 to void (%class.GrSurfaceProxy*)***
  %250 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %249, align 8
  %251 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %250, i64 1
  %252 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %251, align 8
  call void %252(%class.GrSurfaceProxy* nonnull %248) #12
  br label %253

253:                                              ; preds = %246, %241, %170
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %class.SkColorSpace* @_ZNK14SkSpecialImage13getColorSpaceEv(%class.SkSpecialImage*) local_unnamed_addr #2

declare void @_ZNK14SkSpecialImage4viewEP18GrRecordingContext(%class.GrSurfaceProxyView* sret, %class.SkSpecialImage*, %class.GrRecordingContext*) local_unnamed_addr #2

declare %class.GrRecordingContext* @_ZNK14SkSpecialImage10getContextEv(%class.SkSpecialImage*) local_unnamed_addr #2

declare void @_ZN11SkImage_GpuC1E5sk_spI14GrImageContextEj18GrSurfaceProxyView11SkColorInfo(%class.SkImage_Gpu*, %class.sk_sp.243*, i32, %class.GrSurfaceProxyView*, %class.SkColorInfo*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_110draw_imageEP18GrRecordingContextP20GrSurfaceDrawContextPK6GrClipRK16SkMatrixProviderRK7SkPaintRK12SkImage_BaseRK6SkRectSI_PK7SkPointRK8SkMatrix4GrAA13GrQuadAAFlagsN8SkCanvas17SrcRectConstraintE17SkSamplingOptions10SkTileMode(%class.GrRecordingContext*, %class.GrSurfaceDrawContext*, %class.GrClip*, %class.SkMatrixProvider* dereferenceable(112), %class.SkPaint* dereferenceable(72), %class.SkImage_Base* dereferenceable(48), %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkPoint*, %class.SkMatrix* dereferenceable(40), i1 zeroext, i32, i32, %struct.SkSamplingOptions* nocapture readonly byval(%struct.SkSamplingOptions) align 8, i32) unnamed_addr #3 {
  %16 = alloca %struct.DrawQuad, align 4
  %17 = alloca %struct.DrawQuad, align 4
  %18 = alloca %class.SkMatrix, align 16
  %19 = alloca <4 x float>, align 16
  %20 = bitcast <4 x float>* %19 to %struct.SkRect*
  %21 = alloca <4 x float>, align 16
  %22 = bitcast <4 x float>* %21 to %struct.SkRect*
  %23 = alloca <4 x i32>, align 16
  %24 = alloca <4 x i32>, align 16
  %25 = alloca %struct.SkRect, align 8
  %26 = alloca %class.SkMatrix, align 16
  %27 = alloca %class.GrSwizzle, align 2
  %28 = alloca %class.sk_sp.197, align 8
  %29 = alloca { <2 x float>, <2 x float> }, align 8
  %30 = alloca [4 x %struct.SkPoint], align 16
  %31 = alloca %class.GrSurfaceProxyView, align 8
  %32 = alloca %class.sk_sp.197, align 8
  %33 = alloca %class.GrSurfaceProxyView, align 8
  %34 = alloca %class.sk_sp.197, align 8
  %35 = alloca %class.sk_sp, align 8
  %36 = alloca %"class.std::__1::tuple.304", align 8
  %37 = alloca %class.GrColorInfo, align 8
  %38 = alloca %class.GrColorInfo, align 8
  %39 = alloca %class.SkMatrix, align 16
  %40 = alloca %class.SkMatrix, align 16
  %41 = alloca [2 x i32], align 4
  %42 = alloca %class.GrColorInfo, align 8
  %43 = alloca %class.GrPaint, align 8
  %44 = alloca [4 x %struct.SkPoint], align 16
  %45 = alloca %class.GrStyledShape, align 8
  %46 = alloca %class.SkPath, align 8
  %47 = alloca %class.GrStyledShape, align 8
  %48 = alloca %class.GrStyledShape, align 8
  %49 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %3, i64 0, i32 2
  %50 = icmp eq i32 %14, 0
  br i1 %50, label %51, label %441

51:                                               ; preds = %15
  %52 = bitcast %class.SkImage_Base* %5 to i1 (%class.SkImage_Base*)***
  %53 = load i1 (%class.SkImage_Base*)**, i1 (%class.SkImage_Base*)*** %52, align 8
  %54 = getelementptr inbounds i1 (%class.SkImage_Base*)*, i1 (%class.SkImage_Base*)** %53, i64 12
  %55 = load i1 (%class.SkImage_Base*)*, i1 (%class.SkImage_Base*)** %54, align 8
  %56 = tail call zeroext i1 %55(%class.SkImage_Base* %5) #12
  br i1 %56, label %441, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %13, i64 0, i32 0
  %59 = load i8, i8* %58, align 8, !range !7
  %60 = icmp eq i8 %59, 0
  %61 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %13, i64 0, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %4, i64 0, i32 3, i32 0
  %64 = load %class.SkColorFilter*, %class.SkColorFilter** %63, align 8
  %65 = icmp eq %class.SkColorFilter* %64, null
  br i1 %65, label %66, label %441

66:                                               ; preds = %57
  %67 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %4, i64 0, i32 1, i32 0
  %68 = load %class.SkShader*, %class.SkShader** %67, align 8
  %69 = icmp eq %class.SkShader* %68, null
  br i1 %69, label %70, label %441

70:                                               ; preds = %66
  %71 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %4, i64 0, i32 2, i32 0
  %72 = load %class.SkMaskFilter*, %class.SkMaskFilter** %71, align 8
  %73 = icmp eq %class.SkMaskFilter* %72, null
  br i1 %73, label %74, label %441

74:                                               ; preds = %70
  %75 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %4, i64 0, i32 4, i32 0
  %76 = load %class.SkImageFilter*, %class.SkImageFilter** %75, align 8
  %77 = icmp eq %class.SkImageFilter* %76, null
  %78 = icmp eq i32 %62, 0
  %79 = and i1 %60, %78
  %80 = and i1 %79, %77
  br i1 %80, label %81, label %441

81:                                               ; preds = %74
  %82 = bitcast %"class.std::__1::tuple.304"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #12
  %83 = getelementptr inbounds %"class.std::__1::tuple.304", %"class.std::__1::tuple.304"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.std::__1::tuple.304", %"class.std::__1::tuple.304"* %36, i64 0, i32 0, i32 0, i32 0, i32 1
  %85 = getelementptr inbounds %"class.std::__1::tuple.304", %"class.std::__1::tuple.304"* %36, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %86 = bitcast %"class.std::__1::tuple.304"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false)
  call void @_ZNK12SkImage_Base6asViewEP18GrRecordingContext11GrMipmapped19GrImageTexGenPolicy(%"class.std::__1::tuple.304"* nonnull sret %36, %class.SkImage_Base* %5, %class.GrRecordingContext* %0, i1 zeroext false, i32 0) #12
  %87 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %83, align 8
  %88 = icmp eq %class.GrSurfaceProxy* %87, null
  br i1 %88, label %440, label %89

89:                                               ; preds = %81
  %90 = getelementptr inbounds %"class.std::__1::tuple.304", %"class.std::__1::tuple.304"* %36, i64 0, i32 0, i32 1, i32 0
  %91 = bitcast %class.GrColorInfo* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #12
  %92 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %37, i64 0, i32 0, i32 0
  %93 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %37, i64 0, i32 1, i32 0
  %94 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %37, i64 0, i32 2
  %95 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %37, i64 0, i32 3
  %96 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %5, i64 0, i32 0, i32 2, i32 0
  %97 = bitcast %class.GrColorInfo* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 -86, i64 24, i1 false)
  call void @_ZN11GrColorInfoC1ERK11SkColorInfo(%class.GrColorInfo* nonnull %37, %class.SkColorInfo* dereferenceable(16) %96) #12
  %98 = bitcast %class.GrColorInfo* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #12
  %99 = load i32, i32* %90, align 8
  %100 = bitcast %class.sk_sp* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100)
  %101 = load i32, i32* %95, align 4, !noalias !14
  %102 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %35, i64 0, i32 0
  %103 = load %class.SkColorSpace*, %class.SkColorSpace** %92, align 8, !noalias !17
  %104 = icmp eq %class.SkColorSpace* %103, null
  br i1 %104, label %108, label %105

105:                                              ; preds = %89
  %106 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = atomicrmw add i32* %106, i32 1 monotonic, !noalias !20
  br label %108

108:                                              ; preds = %105, %89
  store %class.SkColorSpace* %103, %class.SkColorSpace** %102, align 8, !alias.scope !20, !noalias !14
  call void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo* nonnull %38, i32 %99, i32 %101, %class.sk_sp* nonnull %35) #12
  %109 = load %class.SkColorSpace*, %class.SkColorSpace** %102, align 8, !noalias !14
  %110 = icmp eq %class.SkColorSpace* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = atomicrmw add i32* %112, i32 -1 acq_rel
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %115, label %117

115:                                              ; preds = %111
  %116 = bitcast %class.SkColorSpace* %109 to i8*
  call void @_ZdlPv(i8* %116) #13
  br label %117

117:                                              ; preds = %108, %111, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100)
  %118 = call dereferenceable(24) %class.GrColorInfo* @_ZN11GrColorInfoaSERKS_(%class.GrColorInfo* nonnull %37, %class.GrColorInfo* nonnull dereferenceable(24) %38) #12
  %119 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %38, i64 0, i32 1, i32 0
  %120 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %119, align 8
  %121 = icmp eq %class.GrColorSpaceXform* %120, null
  br i1 %121, label %132, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %120, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw add i32* %123, i32 -1 acq_rel
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %132

126:                                              ; preds = %122
  %127 = bitcast %class.GrColorSpaceXform* %120 to %class.SkRefCntBase*
  %128 = bitcast %class.GrColorSpaceXform* %120 to void (%class.SkRefCntBase*)***
  %129 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %128, align 8
  %130 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %129, i64 2
  %131 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %130, align 8
  call void %131(%class.SkRefCntBase* nonnull %127) #12
  br label %132

132:                                              ; preds = %126, %122, %117
  %133 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %38, i64 0, i32 0, i32 0
  %134 = load %class.SkColorSpace*, %class.SkColorSpace** %133, align 8
  %135 = icmp eq %class.SkColorSpace* %134, null
  br i1 %135, label %142, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = atomicrmw add i32* %137, i32 -1 acq_rel
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %140, label %142

140:                                              ; preds = %136
  %141 = bitcast %class.SkColorSpace* %134 to i8*
  call void @_ZdlPv(i8* %141) #13
  br label %142

142:                                              ; preds = %132, %136, %140
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #12
  %143 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %13, i64 0, i32 2
  %144 = load i32, i32* %143, align 4
  %145 = bitcast %"class.std::__1::tuple.304"* %36 to i64*
  %146 = load i64, i64* %145, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %83, align 8
  %147 = load i32, i32* %84, align 8
  %148 = load i16, i16* %85, align 4
  %149 = bitcast %class.GrSwizzle* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %149)
  %150 = bitcast %class.GrSurfaceProxyView* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %150)
  %151 = bitcast %class.sk_sp.197* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151)
  %152 = bitcast %class.GrSurfaceProxyView* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %152)
  %153 = bitcast %class.sk_sp.197* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %153)
  %154 = bitcast { <2 x float>, <2 x float> }* %29 to %struct.SkRGBA4f.300*
  %155 = load i32, i32* %94, align 8
  switch i32 %155, label %156 [
    i32 0, label %205
    i32 1, label %157
    i32 2, label %205
    i32 3, label %205
    i32 4, label %205
    i32 5, label %205
    i32 6, label %205
    i32 7, label %205
    i32 8, label %205
    i32 9, label %205
    i32 10, label %205
    i32 11, label %205
    i32 12, label %205
    i32 13, label %157
    i32 14, label %205
    i32 15, label %205
    i32 16, label %205
    i32 21, label %157
    i32 22, label %157
    i32 23, label %205
    i32 17, label %157
    i32 18, label %205
    i32 20, label %205
    i32 19, label %205
    i32 24, label %205
    i32 25, label %205
    i32 26, label %205
    i32 27, label %205
    i32 28, label %205
    i32 30, label %205
    i32 29, label %205
  ]

156:                                              ; preds = %142
  call void @llvm.trap() #12
  unreachable

157:                                              ; preds = %142, %142, %142, %142, %142
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #12
  %158 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %27, i64 0, i32 0
  %159 = load i16, i16* %158, align 2, !noalias !21
  %160 = zext i16 %159 to i32
  %161 = zext i16 %148 to i32
  %162 = and i32 %160, 15
  switch i32 %162, label %163 [
    i32 4, label %169
    i32 5, label %168
  ]

163:                                              ; preds = %157
  %164 = shl nuw nsw i32 %162, 2
  %165 = lshr i32 %161, %164
  %166 = trunc i32 %165 to i16
  %167 = and i16 %166, 15
  br label %169

168:                                              ; preds = %157
  br label %169

169:                                              ; preds = %168, %163, %157
  %170 = phi i16 [ %167, %163 ], [ 4, %157 ], [ 5, %168 ]
  %171 = lshr i32 %160, 4
  %172 = and i32 %171, 15
  switch i32 %172, label %174 [
    i32 4, label %180
    i32 5, label %173
  ]

173:                                              ; preds = %169
  br label %180

174:                                              ; preds = %169
  %175 = shl nuw nsw i32 %172, 2
  %176 = lshr i32 %161, %175
  %177 = trunc i32 %176 to i16
  %178 = shl i16 %177, 4
  %179 = and i16 %178, 240
  br label %180

180:                                              ; preds = %174, %173, %169
  %181 = phi i16 [ %179, %174 ], [ 64, %169 ], [ 80, %173 ]
  %182 = or i16 %181, %170
  %183 = lshr i32 %160, 8
  %184 = and i32 %183, 15
  switch i32 %184, label %186 [
    i32 4, label %192
    i32 5, label %185
  ]

185:                                              ; preds = %180
  br label %192

186:                                              ; preds = %180
  %187 = shl nuw nsw i32 %184, 2
  %188 = lshr i32 %161, %187
  %189 = trunc i32 %188 to i16
  %190 = shl i16 %189, 8
  %191 = and i16 %190, 3840
  br label %192

192:                                              ; preds = %186, %185, %180
  %193 = phi i16 [ %191, %186 ], [ 1024, %180 ], [ 1280, %185 ]
  %194 = or i16 %182, %193
  %195 = lshr i32 %160, 12
  switch i32 %195, label %197 [
    i32 4, label %202
    i32 5, label %196
  ]

196:                                              ; preds = %192
  br label %202

197:                                              ; preds = %192
  %198 = shl nuw nsw i32 %195, 2
  %199 = lshr i32 %161, %198
  %200 = trunc i32 %199 to i16
  %201 = shl i16 %200, 12
  br label %202

202:                                              ; preds = %197, %196, %192
  %203 = phi i16 [ %201, %197 ], [ 16384, %192 ], [ 20480, %196 ]
  %204 = or i16 %194, %203
  br label %205

205:                                              ; preds = %202, %142, %142, %142, %142, %142, %142, %142, %142, %142, %142, %142, %142, %142, %142, %142, %142, %142, %142, %142, %142, %142, %142, %142, %142, %142, %142
  %206 = phi i16 [ %204, %202 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ], [ %148, %142 ]
  %207 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %1, i64 0, i32 0, i32 0, i32 3
  %208 = bitcast %class.sk_sp.197* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #12
  %209 = getelementptr inbounds %class.sk_sp.197, %class.sk_sp.197* %28, i64 0, i32 0
  store %class.GrColorSpaceXform* inttoptr (i64 -6148914691236517206 to %class.GrColorSpaceXform*), %class.GrColorSpaceXform** %209, align 8
  call void @_ZN17GrColorSpaceXform4MakeERK11GrColorInfoS2_(%class.sk_sp.197* nonnull sret %28, %class.GrColorInfo* nonnull dereferenceable(24) %37, %class.GrColorInfo* dereferenceable(24) %207) #12
  %210 = inttoptr i64 %146 to %class.GrSurfaceProxy*
  %211 = icmp eq i32 %12, 0
  br i1 %211, label %256, label %212

212:                                              ; preds = %205
  %213 = call zeroext i1 @_ZNK14GrSurfaceProxy19isFunctionallyExactEv(%class.GrSurfaceProxy* %210) #12
  br i1 %213, label %256, label %214

214:                                              ; preds = %212
  %215 = uitofp i1 %10 to float
  %216 = fmul float %215, 5.000000e-01
  %217 = icmp eq i32 %144, 1
  %218 = uitofp i1 %217 to float
  %219 = fmul float %218, 5.000000e-01
  %220 = fadd float %216, %219
  %221 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %210, i64 0, i32 6
  %222 = bitcast %struct.SkISize* %221 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = trunc i64 %223 to i32
  %225 = lshr i64 %223, 32
  %226 = trunc i64 %225 to i32
  %227 = sitofp i32 %224 to float
  %228 = sitofp i32 %226 to float
  %229 = fadd float %220, 0.000000e+00
  %230 = fsub float %227, %220
  %231 = fsub float %228, %220
  %232 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 0
  %233 = load float, float* %232, align 4
  %234 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 2
  %235 = load float, float* %234, align 4
  %236 = fcmp olt float %233, %235
  br i1 %236, label %237, label %256

237:                                              ; preds = %214
  %238 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 1
  %239 = load float, float* %238, align 4
  %240 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 3
  %241 = load float, float* %240, align 4
  %242 = fcmp olt float %239, %241
  %243 = fcmp olt float %229, %230
  %244 = and i1 %243, %242
  br i1 %244, label %245, label %256

245:                                              ; preds = %237
  %246 = fcmp uge float %229, %231
  %247 = fcmp ugt float %229, %233
  %248 = or i1 %247, %246
  br i1 %248, label %256, label %249

249:                                              ; preds = %245
  %250 = fcmp ole float %229, %239
  %251 = fcmp oge float %230, %235
  %252 = fcmp oge float %231, %241
  %253 = and i1 %251, %250
  %254 = and i1 %252, %253
  %255 = select i1 %254, i32 %12, i32 0
  br label %256

256:                                              ; preds = %249, %245, %237, %214, %212, %205
  %257 = phi i32 [ %12, %212 ], [ 0, %205 ], [ 0, %245 ], [ 0, %237 ], [ 0, %214 ], [ %255, %249 ]
  %258 = bitcast { <2 x float>, <2 x float> }* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %258) #12
  %259 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %4, i64 0, i32 5, i32 2
  %260 = bitcast float* %259 to <2 x float>*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %258, i8 -1, i64 16, i1 false) #12
  %261 = load <2 x float>, <2 x float>* %260, align 8
  %262 = load i32, i32* %94, align 8
  %263 = extractelement <2 x float> %261, i32 1
  switch i32 %262, label %264 [
    i32 0, label %282
    i32 1, label %265
    i32 2, label %282
    i32 3, label %282
    i32 4, label %282
    i32 5, label %282
    i32 6, label %282
    i32 7, label %282
    i32 8, label %282
    i32 9, label %282
    i32 10, label %282
    i32 11, label %282
    i32 12, label %282
    i32 13, label %265
    i32 14, label %282
    i32 15, label %282
    i32 16, label %282
    i32 21, label %265
    i32 22, label %265
    i32 23, label %282
    i32 17, label %265
    i32 18, label %282
    i32 20, label %282
    i32 19, label %282
    i32 24, label %282
    i32 25, label %282
    i32 26, label %282
    i32 27, label %282
    i32 28, label %282
    i32 30, label %282
    i32 29, label %282
  ]

264:                                              ; preds = %256
  call void @llvm.trap() #12
  unreachable

265:                                              ; preds = %256, %256, %256, %256, %256
  %266 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %4, i64 0, i32 5
  %267 = bitcast %struct.SkRGBA4f* %266 to <2 x float>*
  %268 = load <2 x float>, <2 x float>* %267, align 8
  %269 = call { <2 x float>, <2 x float> } @_Z19SkColor4fPrepForDst8SkRGBA4fIL11SkAlphaType3EERK11GrColorInfo(<2 x float> %268, <2 x float> %261, %class.GrColorInfo* dereferenceable(24) %207) #12
  %270 = extractvalue { <2 x float>, <2 x float> } %269, 0
  %271 = extractvalue { <2 x float>, <2 x float> } %269, 1
  %272 = extractelement <2 x float> %270, i32 0
  %273 = extractelement <2 x float> %271, i32 1
  %274 = fmul float %272, %273
  %275 = insertelement <2 x float> undef, float %274, i32 0
  %276 = extractelement <2 x float> %270, i32 1
  %277 = fmul float %273, %276
  %278 = insertelement <2 x float> %275, float %277, i32 1
  %279 = extractelement <2 x float> %271, i32 0
  %280 = fmul float %273, %279
  %281 = insertelement <2 x float> %271, float %280, i32 0
  br label %289

282:                                              ; preds = %256, %256, %256, %256, %256, %256, %256, %256, %256, %256, %256, %256, %256, %256, %256, %256, %256, %256, %256, %256, %256, %256, %256, %256, %256, %256
  %283 = fcmp ogt float %263, 1.000000e+00
  %284 = select i1 %283, float 1.000000e+00, float %263
  %285 = fcmp ogt float %284, 0.000000e+00
  %286 = select i1 %285, float %284, float 0.000000e+00
  %287 = insertelement <2 x float> undef, float %286, i32 0
  %288 = shufflevector <2 x float> %287, <2 x float> undef, <2 x i32> zeroinitializer
  br label %289

289:                                              ; preds = %282, %265
  %290 = phi <2 x float> [ %278, %265 ], [ %288, %282 ]
  %291 = phi <2 x float> [ %281, %265 ], [ %288, %282 ]
  %292 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %29, i64 0, i32 0
  store <2 x float> %290, <2 x float>* %292, align 8
  %293 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %29, i64 0, i32 1
  store <2 x float> %291, <2 x float>* %293, align 8
  %294 = icmp eq %struct.SkPoint* %8, null
  br i1 %294, label %349, label %295

295:                                              ; preds = %289
  %296 = bitcast [4 x %struct.SkPoint]* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %296) #12
  %297 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %30, i64 0, i64 0
  %298 = bitcast %class.SkMatrix* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %296, i8 -1, i64 32, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %298) #12
  %299 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %26, i64 0, i32 1
  %300 = bitcast %class.SkMatrix* %26 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %300, align 16, !alias.scope !24
  %301 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %26, i64 0, i32 0, i64 4
  %302 = bitcast float* %301 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %302, align 16, !alias.scope !24
  %303 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %26, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %303, align 16, !alias.scope !24
  store i32 16, i32* %299, align 4, !alias.scope !24
  %304 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* nonnull %26, %struct.SkRect* dereferenceable(16) %7, %struct.SkRect* dereferenceable(16) %6, i32 0) #12
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %26, %struct.SkPoint* nonnull %297, %struct.SkPoint* nonnull %8, i32 4) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %298) #12
  %305 = bitcast %class.GrSurfaceProxyView* %31 to i64*
  store i64 %146, i64* %305, align 8
  %306 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %31, i64 0, i32 1
  store i32 %147, i32* %306, align 8
  %307 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %31, i64 0, i32 2, i32 0
  store i16 %206, i16* %307, align 4
  %308 = load i32, i32* %94, align 8
  %309 = load i32, i32* %95, align 4
  %310 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %4, i64 0, i32 8, i32 0, i32 0
  %311 = load i32, i32* %310, align 8
  %312 = lshr i32 %311, 10
  %313 = and i32 %312, 255
  %314 = icmp eq i32 %257, 0
  %315 = select i1 %314, %struct.SkRect* %6, %struct.SkRect* null
  %316 = bitcast %class.sk_sp.197* %28 to i64*
  %317 = load i64, i64* %316, align 8
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %209, align 8
  %318 = bitcast %class.sk_sp.197* %32 to i64*
  store i64 %317, i64* %318, align 8
  call void @_ZN20GrSurfaceDrawContext15drawTextureQuadEPK6GrClip18GrSurfaceProxyView11GrColorType11SkAlphaType12SkFilterMode12SkMipmapMode11SkBlendModeRK8SkRGBA4fILS5_2EEPK7SkPointSF_4GrAA13GrQuadAAFlagsPK6SkRectRK8SkMatrix5sk_spI17GrColorSpaceXformE(%class.GrSurfaceDrawContext* %1, %class.GrClip* %2, %class.GrSurfaceProxyView* nonnull %31, i32 %308, i32 %309, i32 %144, i32 0, i32 %313, %struct.SkRGBA4f.300* nonnull dereferenceable(16) %154, %struct.SkPoint* nonnull %297, %struct.SkPoint* nonnull %8, i1 zeroext %10, i32 %11, %struct.SkRect* %315, %class.SkMatrix* dereferenceable(40) %49, %class.sk_sp.197* nonnull %32) #12
  %319 = getelementptr inbounds %class.sk_sp.197, %class.sk_sp.197* %32, i64 0, i32 0
  %320 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %319, align 8
  %321 = icmp eq %class.GrColorSpaceXform* %320, null
  br i1 %321, label %332, label %322

322:                                              ; preds = %295
  %323 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %320, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = atomicrmw add i32* %323, i32 -1 acq_rel
  %325 = icmp eq i32 %324, 1
  br i1 %325, label %326, label %332

326:                                              ; preds = %322
  %327 = bitcast %class.GrColorSpaceXform* %320 to %class.SkRefCntBase*
  %328 = bitcast %class.GrColorSpaceXform* %320 to void (%class.SkRefCntBase*)***
  %329 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %328, align 8
  %330 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %329, i64 2
  %331 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %330, align 8
  call void %331(%class.SkRefCntBase* nonnull %327) #12
  br label %332

332:                                              ; preds = %326, %322, %295
  %333 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %31, i64 0, i32 0, i32 0
  %334 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %333, align 8
  %335 = icmp eq %class.GrSurfaceProxy* %334, null
  br i1 %335, label %348, label %336

336:                                              ; preds = %332
  %337 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %334, i64 0, i32 1
  %338 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %337, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %339 = atomicrmw add i32* %338, i32 -1 acq_rel
  %340 = icmp eq i32 %339, 1
  br i1 %340, label %341, label %348

341:                                              ; preds = %336
  %342 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %337, i64 -2
  %343 = bitcast %class.SkNVRefCnt.78* %342 to %class.GrSurfaceProxy*
  %344 = bitcast %class.SkNVRefCnt.78* %342 to void (%class.GrSurfaceProxy*)***
  %345 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %344, align 8
  %346 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %345, i64 1
  %347 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %346, align 8
  call void %347(%class.GrSurfaceProxy* nonnull %343) #12
  br label %348

348:                                              ; preds = %341, %336, %332
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %296) #12
  br label %390

349:                                              ; preds = %289
  %350 = bitcast %class.GrSurfaceProxyView* %33 to i64*
  store i64 %146, i64* %350, align 8
  %351 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %33, i64 0, i32 1
  store i32 %147, i32* %351, align 8
  %352 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %33, i64 0, i32 2, i32 0
  store i16 %206, i16* %352, align 4
  %353 = load i32, i32* %95, align 4
  %354 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %4, i64 0, i32 8, i32 0, i32 0
  %355 = load i32, i32* %354, align 8
  %356 = lshr i32 %355, 10
  %357 = and i32 %356, 255
  %358 = bitcast %class.sk_sp.197* %28 to i64*
  %359 = load i64, i64* %358, align 8
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %209, align 8
  %360 = bitcast %class.sk_sp.197* %34 to i64*
  store i64 %359, i64* %360, align 8
  call void @_ZN20GrSurfaceDrawContext11drawTextureEPK6GrClip18GrSurfaceProxyView11SkAlphaType12SkFilterMode12SkMipmapMode11SkBlendModeRK8SkRGBA4fILS4_2EERK6SkRectSE_4GrAA13GrQuadAAFlagsN8SkCanvas17SrcRectConstraintERK8SkMatrix5sk_spI17GrColorSpaceXformE(%class.GrSurfaceDrawContext* %1, %class.GrClip* %2, %class.GrSurfaceProxyView* nonnull %33, i32 %353, i32 %144, i32 0, i32 %357, %struct.SkRGBA4f.300* nonnull dereferenceable(16) %154, %struct.SkRect* dereferenceable(16) %6, %struct.SkRect* dereferenceable(16) %7, i1 zeroext %10, i32 %11, i32 %257, %class.SkMatrix* dereferenceable(40) %49, %class.sk_sp.197* nonnull %34) #12
  %361 = getelementptr inbounds %class.sk_sp.197, %class.sk_sp.197* %34, i64 0, i32 0
  %362 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %361, align 8
  %363 = icmp eq %class.GrColorSpaceXform* %362, null
  br i1 %363, label %374, label %364

364:                                              ; preds = %349
  %365 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %362, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %366 = atomicrmw add i32* %365, i32 -1 acq_rel
  %367 = icmp eq i32 %366, 1
  br i1 %367, label %368, label %374

368:                                              ; preds = %364
  %369 = bitcast %class.GrColorSpaceXform* %362 to %class.SkRefCntBase*
  %370 = bitcast %class.GrColorSpaceXform* %362 to void (%class.SkRefCntBase*)***
  %371 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %370, align 8
  %372 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %371, i64 2
  %373 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %372, align 8
  call void %373(%class.SkRefCntBase* nonnull %369) #12
  br label %374

374:                                              ; preds = %368, %364, %349
  %375 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %33, i64 0, i32 0, i32 0
  %376 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %375, align 8
  %377 = icmp eq %class.GrSurfaceProxy* %376, null
  br i1 %377, label %390, label %378

378:                                              ; preds = %374
  %379 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %376, i64 0, i32 1
  %380 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %379, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %381 = atomicrmw add i32* %380, i32 -1 acq_rel
  %382 = icmp eq i32 %381, 1
  br i1 %382, label %383, label %390

383:                                              ; preds = %378
  %384 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %379, i64 -2
  %385 = bitcast %class.SkNVRefCnt.78* %384 to %class.GrSurfaceProxy*
  %386 = bitcast %class.SkNVRefCnt.78* %384 to void (%class.GrSurfaceProxy*)***
  %387 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %386, align 8
  %388 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %387, i64 1
  %389 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %388, align 8
  call void %389(%class.GrSurfaceProxy* nonnull %385) #12
  br label %390

390:                                              ; preds = %383, %378, %374, %348
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %258) #12
  %391 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %209, align 8
  %392 = icmp eq %class.GrColorSpaceXform* %391, null
  br i1 %392, label %403, label %393

393:                                              ; preds = %390
  %394 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %391, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %395 = atomicrmw add i32* %394, i32 -1 acq_rel
  %396 = icmp eq i32 %395, 1
  br i1 %396, label %397, label %403

397:                                              ; preds = %393
  %398 = bitcast %class.GrColorSpaceXform* %391 to %class.SkRefCntBase*
  %399 = bitcast %class.GrColorSpaceXform* %391 to void (%class.SkRefCntBase*)***
  %400 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %399, align 8
  %401 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %400, i64 2
  %402 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %401, align 8
  call void %402(%class.SkRefCntBase* nonnull %398) #12
  br label %403

403:                                              ; preds = %397, %393, %390
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #12
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %149)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %150)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %152)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %153)
  %404 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %93, align 8
  %405 = icmp eq %class.GrColorSpaceXform* %404, null
  br i1 %405, label %416, label %406

406:                                              ; preds = %403
  %407 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %404, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %408 = atomicrmw add i32* %407, i32 -1 acq_rel
  %409 = icmp eq i32 %408, 1
  br i1 %409, label %410, label %416

410:                                              ; preds = %406
  %411 = bitcast %class.GrColorSpaceXform* %404 to %class.SkRefCntBase*
  %412 = bitcast %class.GrColorSpaceXform* %404 to void (%class.SkRefCntBase*)***
  %413 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %412, align 8
  %414 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %413, i64 2
  %415 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %414, align 8
  call void %415(%class.SkRefCntBase* nonnull %411) #12
  br label %416

416:                                              ; preds = %410, %406, %403
  %417 = load %class.SkColorSpace*, %class.SkColorSpace** %92, align 8
  %418 = icmp eq %class.SkColorSpace* %417, null
  br i1 %418, label %425, label %419

419:                                              ; preds = %416
  %420 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %417, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %421 = atomicrmw add i32* %420, i32 -1 acq_rel
  %422 = icmp eq i32 %421, 1
  br i1 %422, label %423, label %425

423:                                              ; preds = %419
  %424 = bitcast %class.SkColorSpace* %417 to i8*
  call void @_ZdlPv(i8* %424) #13
  br label %425

425:                                              ; preds = %423, %419, %416
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #12
  %426 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %83, align 8
  %427 = icmp eq %class.GrSurfaceProxy* %426, null
  br i1 %427, label %440, label %428

428:                                              ; preds = %425
  %429 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %426, i64 0, i32 1
  %430 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %429, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %431 = atomicrmw add i32* %430, i32 -1 acq_rel
  %432 = icmp eq i32 %431, 1
  br i1 %432, label %433, label %440

433:                                              ; preds = %428
  %434 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %429, i64 -2
  %435 = bitcast %class.SkNVRefCnt.78* %434 to %class.GrSurfaceProxy*
  %436 = bitcast %class.SkNVRefCnt.78* %434 to void (%class.GrSurfaceProxy*)***
  %437 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %436, align 8
  %438 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %437, i64 1
  %439 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %438, align 8
  call void %439(%class.GrSurfaceProxy* nonnull %435) #12
  br label %440

440:                                              ; preds = %81, %425, %428, %433
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #12
  br label %794

441:                                              ; preds = %57, %66, %70, %74, %51, %15
  %442 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %4, i64 0, i32 2, i32 0
  %443 = load %class.SkMaskFilter*, %class.SkMaskFilter** %442, align 8
  %444 = bitcast %class.SkImage_Base* %5 to %class.SkImage*
  %445 = tail call zeroext i1 @_ZNK7SkImage11isAlphaOnlyEv(%class.SkImage* %444) #12
  br i1 %445, label %448, label %446

446:                                              ; preds = %441
  %447 = icmp eq %class.SkMaskFilter* %443, null
  br i1 %447, label %458, label %454

448:                                              ; preds = %441
  %449 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %4, i64 0, i32 1, i32 0
  %450 = load %class.SkShader*, %class.SkShader** %449, align 8
  %451 = icmp eq %class.SkShader* %450, null
  %452 = icmp eq %class.SkMaskFilter* %443, null
  %453 = and i1 %452, %451
  br i1 %452, label %458, label %454

454:                                              ; preds = %448, %446
  %455 = bitcast %class.SkMaskFilter* %443 to %class.SkMaskFilterBase*
  %456 = tail call zeroext i1 @_ZNK16SkMaskFilterBase20hasFragmentProcessorEv(%class.SkMaskFilterBase* %455) #12
  %457 = select i1 %456, %class.SkMaskFilter* null, %class.SkMaskFilter* %443
  br label %458

458:                                              ; preds = %448, %446, %454
  %459 = phi i1 [ false, %454 ], [ true, %446 ], [ %453, %448 ]
  %460 = phi %class.SkMaskFilter* [ %457, %454 ], [ null, %446 ], [ null, %448 ]
  %461 = icmp eq i32 %12, 0
  %462 = icmp eq i32 %11, 0
  %463 = icmp eq %class.SkMaskFilter* %460, null
  %464 = and i1 %462, %463
  %465 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %13, i64 0, i32 0
  %466 = load i8, i8* %465, align 8, !range !7
  %467 = icmp eq i8 %466, 0
  br i1 %467, label %468, label %604

468:                                              ; preds = %458
  %469 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %13, i64 0, i32 2
  %470 = load i32, i32* %469, align 4
  %471 = icmp ne i32 %470, 1
  %472 = xor i1 %461, true
  %473 = or i1 %471, %472
  br i1 %473, label %604, label %474

474:                                              ; preds = %468
  %475 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %13, i64 0, i32 3
  %476 = load i32, i32* %475, align 8
  %477 = icmp ne i32 %476, 0
  %478 = xor i1 %464, true
  %479 = or i1 %477, %478
  br i1 %479, label %604, label %480

480:                                              ; preds = %474
  %481 = bitcast %class.SkImage_Base* %5 to i1 (%class.SkImage_Base*)***
  %482 = load i1 (%class.SkImage_Base*)**, i1 (%class.SkImage_Base*)*** %481, align 8
  %483 = getelementptr inbounds i1 (%class.SkImage_Base*)*, i1 (%class.SkImage_Base*)** %482, i64 12
  %484 = load i1 (%class.SkImage_Base*)*, i1 (%class.SkImage_Base*)** %483, align 8
  %485 = tail call zeroext i1 %484(%class.SkImage_Base* %5) #12
  br i1 %485, label %604, label %486

486:                                              ; preds = %480
  %487 = bitcast %class.SkMatrix* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %487) #12
  %488 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %39, i64 0, i32 1
  %489 = bitcast %class.SkMatrix* %39 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %489, align 16
  %490 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %39, i64 0, i32 0, i64 4
  %491 = bitcast float* %490 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %491, align 16
  %492 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %39, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %492, align 16
  store i32 16, i32* %488, align 4
  %493 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %39, %class.SkMatrix* dereferenceable(40) %49, %class.SkMatrix* dereferenceable(40) %9) #12
  %494 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %495 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %494, align 8
  %496 = icmp eq %class.GrSurfaceProxy* %495, null
  br i1 %496, label %503, label %497

497:                                              ; preds = %486
  %498 = bitcast %class.GrSurfaceProxy* %495 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  %499 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %498, align 8
  %500 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %499, i64 5
  %501 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %500, align 8
  %502 = call %class.GrRenderTargetProxy* %501(%class.GrSurfaceProxy* nonnull %495) #12
  br label %503

503:                                              ; preds = %486, %497
  %504 = phi %class.GrRenderTargetProxy* [ %502, %497 ], [ null, %486 ]
  %505 = getelementptr inbounds %class.GrRenderTargetProxy, %class.GrRenderTargetProxy* %504, i64 0, i32 1
  %506 = load i8, i8* %505, align 8
  %507 = load i32, i32* %488, align 4
  %508 = trunc i32 %507 to i8
  %509 = icmp slt i8 %508, 0
  br i1 %509, label %510, label %513

510:                                              ; preds = %503
  %511 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %39) #12
  %512 = zext i8 %511 to i32
  store i32 %512, i32* %488, align 4
  br label %513

513:                                              ; preds = %510, %503
  %514 = phi i32 [ %512, %510 ], [ %507, %503 ]
  %515 = and i32 %514, 16
  %516 = icmp eq i32 %515, 0
  br i1 %516, label %602, label %517

517:                                              ; preds = %513
  %518 = bitcast %struct.SkRect* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %518) #12
  %519 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %25, i64 0, i32 2
  %520 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %25, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %518, i8 -1, i64 16, i1 false) #12
  %521 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %39, %struct.SkRect* nonnull %25, %struct.SkRect* dereferenceable(16) %6, i32 1) #12
  %522 = bitcast %struct.SkRect* %25 to <2 x float>*
  %523 = load <2 x float>, <2 x float>* %522, align 8
  %524 = extractelement <2 x float> %523, i32 0
  %525 = fadd float %524, 5.000000e-01
  %526 = call float @llvm.floor.f32(float %525) #12
  %527 = fsub float %526, %524
  %528 = call float @llvm.fabs.f32(float %527) #12
  %529 = fcmp olt float %528, 0x3F50624DE0000000
  br i1 %529, label %530, label %559

530:                                              ; preds = %517
  %531 = extractelement <2 x float> %523, i32 1
  %532 = fadd float %531, 5.000000e-01
  %533 = call float @llvm.floor.f32(float %532) #12
  %534 = fsub float %533, %531
  %535 = call float @llvm.fabs.f32(float %534) #12
  %536 = fcmp olt float %535, 0x3F50624DE0000000
  br i1 %536, label %537, label %559

537:                                              ; preds = %530
  %538 = load float, float* %519, align 8
  %539 = fsub float %538, %524
  %540 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 2
  %541 = load float, float* %540, align 4
  %542 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 0
  %543 = load float, float* %542, align 4
  %544 = fsub float %541, %543
  %545 = fsub float %539, %544
  %546 = call float @llvm.fabs.f32(float %545) #12
  %547 = fcmp olt float %546, 0x3F50624DE0000000
  br i1 %547, label %548, label %559

548:                                              ; preds = %537
  %549 = load float, float* %520, align 4
  %550 = fsub float %549, %531
  %551 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 3
  %552 = load float, float* %551, align 4
  %553 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 1
  %554 = load float, float* %553, align 4
  %555 = fsub float %552, %554
  %556 = fsub float %550, %555
  %557 = call float @llvm.fabs.f32(float %556) #12
  %558 = fcmp olt float %557, 0x3F50624DE0000000
  br i1 %558, label %599, label %559

559:                                              ; preds = %548, %537, %530, %517
  %560 = bitcast <4 x float>* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %560) #12
  %561 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %560, i8* align 4 %561, i64 16, i1 false) #12
  %562 = bitcast <4 x float>* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %562) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %562, i8 -1, i64 16, i1 false) #12
  %563 = load float, float* %519, align 8
  %564 = load float, float* %520, align 4
  %565 = icmp sgt i8 %506, 1
  %566 = insertelement <2 x i1> undef, i1 %565, i32 0
  %567 = shufflevector <2 x i1> %566, <2 x i1> undef, <2 x i32> zeroinitializer
  %568 = select <2 x i1> %567, <2 x float> <float 1.000000e+00, float -1.000000e+00>, <2 x float> <float 5.000000e-01, float -5.000000e-01>
  %569 = shufflevector <2 x float> %568, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %570 = load <4 x float>, <4 x float>* %19, align 16
  %571 = fadd <4 x float> %570, %569
  store <4 x float> %571, <4 x float>* %19, align 16
  %572 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %39, %struct.SkRect* nonnull %22, %struct.SkRect* nonnull dereferenceable(16) %20, i32 1) #12
  %573 = insertelement <4 x float> undef, float %524, i32 0
  %574 = extractelement <2 x float> %523, i32 1
  %575 = insertelement <4 x float> %573, float %574, i32 1
  %576 = insertelement <4 x float> %575, float %563, i32 2
  %577 = insertelement <4 x float> %576, float %564, i32 3
  %578 = fadd <4 x float> %577, <float 0x3F50624DE0000000, float 0x3F50624DE0000000, float 0xBF50624DE0000000, float 0xBF50624DE0000000>
  %579 = load <4 x float>, <4 x float>* %21, align 16
  %580 = fadd <4 x float> %579, <float 0xBF50624DE0000000, float 0xBF50624DE0000000, float 0x3F50624DE0000000, float 0x3F50624DE0000000>
  store <4 x float> %580, <4 x float>* %21, align 16
  %581 = bitcast <4 x i32>* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %581) #12
  %582 = bitcast <4 x i32>* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %582) #12
  %583 = fadd <4 x float> %578, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %584 = call <4 x float> @llvm.floor.v4f32(<4 x float> %583)
  %585 = fcmp olt <4 x float> %584, <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %586 = select <4 x i1> %585, <4 x float> %584, <4 x float> <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %587 = fcmp ogt <4 x float> %586, <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %588 = select <4 x i1> %587, <4 x float> %586, <4 x float> <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %589 = fptosi <4 x float> %588 to <4 x i32>
  store <4 x i32> %589, <4 x i32>* %23, align 16
  %590 = fadd <4 x float> %580, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %591 = call <4 x float> @llvm.floor.v4f32(<4 x float> %590)
  %592 = fcmp olt <4 x float> %591, <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %593 = select <4 x i1> %592, <4 x float> %591, <4 x float> <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %594 = fcmp ogt <4 x float> %593, <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %595 = select <4 x i1> %594, <4 x float> %593, <4 x float> <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %596 = fptosi <4 x float> %595 to <4 x i32>
  store <4 x i32> %596, <4 x i32>* %24, align 16
  %597 = call i32 @bcmp(i8* nonnull %582, i8* nonnull %581, i64 16) #12
  %598 = icmp eq i32 %597, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %582) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %581) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %562) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %560) #12
  br i1 %598, label %599, label %600

599:                                              ; preds = %559, %548
  br label %600

600:                                              ; preds = %559, %599
  %601 = phi i1 [ false, %599 ], [ %461, %559 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %518) #12
  br label %602

602:                                              ; preds = %600, %513
  %603 = phi i1 [ %461, %513 ], [ %601, %600 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %487) #12
  br label %604

604:                                              ; preds = %474, %468, %458, %602, %480
  %605 = phi i1 [ %461, %458 ], [ %461, %480 ], [ %603, %602 ], [ %461, %474 ], [ %461, %468 ]
  %606 = bitcast %class.SkMatrix* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %606) #12
  %607 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %40, i64 0, i32 1
  %608 = bitcast %class.SkMatrix* %40 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %608, align 16
  %609 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %40, i64 0, i32 0, i64 4
  %610 = bitcast float* %609 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %610, align 16
  %611 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %40, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %611, align 16
  store i32 16, i32* %607, align 4
  br i1 %459, label %612, label %615

612:                                              ; preds = %604
  %613 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #12
  %614 = bitcast %class.SkMatrix* %613 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %606, i8* align 4 %614, i64 40, i1 false)
  br label %631

615:                                              ; preds = %604
  %616 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 1
  %617 = load i32, i32* %616, align 4
  %618 = trunc i32 %617 to i8
  %619 = icmp slt i8 %618, 0
  br i1 %619, label %620, label %623

620:                                              ; preds = %615
  %621 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %9) #12
  %622 = zext i8 %621 to i32
  store i32 %622, i32* %616, align 4
  br label %623

623:                                              ; preds = %620, %615
  %624 = phi i32 [ %622, %620 ], [ %617, %615 ]
  %625 = and i32 %624, 15
  %626 = icmp eq i32 %625, 0
  br i1 %626, label %627, label %629

627:                                              ; preds = %623
  %628 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %40) #12
  br label %631

629:                                              ; preds = %623
  %630 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %9, %class.SkMatrix* nonnull %40) #12
  br i1 %630, label %631, label %793

631:                                              ; preds = %627, %629, %612
  %632 = select i1 %605, %struct.SkRect* %6, %struct.SkRect* null
  %633 = select i1 %464, %struct.SkRect* %6, %struct.SkRect* null
  %634 = bitcast [2 x i32]* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %634) #12
  %635 = getelementptr inbounds [2 x i32], [2 x i32]* %41, i64 0, i64 0
  %636 = getelementptr inbounds [2 x i32], [2 x i32]* %41, i64 0, i64 1
  store i32 %14, i32* %635, align 4
  store i32 %14, i32* %636, align 4
  %637 = call %class.GrFragmentProcessor* @_ZNK12SkImage_Base19asFragmentProcessorEP18GrRecordingContext17SkSamplingOptionsPK10SkTileModeRK8SkMatrixPK6SkRectSB_(%class.SkImage_Base* %5, %class.GrRecordingContext* %0, %struct.SkSamplingOptions* nonnull byval(%struct.SkSamplingOptions) align 8 %13, i32* nonnull %635, %class.SkMatrix* nonnull dereferenceable(40) %40, %struct.SkRect* %632, %struct.SkRect* %633) #12
  %638 = bitcast %class.GrColorInfo* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %638) #12
  %639 = getelementptr inbounds %class.SkImage_Base, %class.SkImage_Base* %5, i64 0, i32 0, i32 2, i32 0
  call void @_ZN11GrColorInfoC1ERK11SkColorInfo(%class.GrColorInfo* nonnull %42, %class.SkColorInfo* dereferenceable(16) %639) #12
  %640 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %1, i64 0, i32 0, i32 0, i32 3
  %641 = call %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEERK11GrColorInfoS8_(%class.GrFragmentProcessor* %637, %class.GrColorInfo* nonnull dereferenceable(24) %42, %class.GrColorInfo* dereferenceable(24) %640) #12
  %642 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %42, i64 0, i32 1, i32 0
  %643 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %642, align 8
  %644 = icmp eq %class.GrColorSpaceXform* %643, null
  br i1 %644, label %655, label %645

645:                                              ; preds = %631
  %646 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %643, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %647 = atomicrmw add i32* %646, i32 -1 acq_rel
  %648 = icmp eq i32 %647, 1
  br i1 %648, label %649, label %655

649:                                              ; preds = %645
  %650 = bitcast %class.GrColorSpaceXform* %643 to %class.SkRefCntBase*
  %651 = bitcast %class.GrColorSpaceXform* %643 to void (%class.SkRefCntBase*)***
  %652 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %651, align 8
  %653 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %652, i64 2
  %654 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %653, align 8
  call void %654(%class.SkRefCntBase* nonnull %650) #12
  br label %655

655:                                              ; preds = %649, %645, %631
  %656 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %42, i64 0, i32 0, i32 0
  %657 = load %class.SkColorSpace*, %class.SkColorSpace** %656, align 8
  %658 = icmp eq %class.SkColorSpace* %657, null
  br i1 %658, label %665, label %659

659:                                              ; preds = %655
  %660 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %657, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %661 = atomicrmw add i32* %660, i32 -1 acq_rel
  %662 = icmp eq i32 %661, 1
  br i1 %662, label %663, label %665

663:                                              ; preds = %659
  %664 = bitcast %class.SkColorSpace* %657 to i8*
  call void @_ZdlPv(i8* %664) #13
  br label %665

665:                                              ; preds = %655, %659, %663
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %638) #12
  %666 = call zeroext i1 @_ZNK7SkImage11isAlphaOnlyEv(%class.SkImage* %444) #12
  %667 = select i1 %666, i32 6, i32 5
  %668 = call %class.GrFragmentProcessor* @_ZN24GrBlendFragmentProcessor4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEES5_11SkBlendModeNS_13BlendBehaviorE(%class.GrFragmentProcessor* %641, %class.GrFragmentProcessor* null, i32 %667, i32 0) #12
  %669 = bitcast %class.GrPaint* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %669) #12
  %670 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %43, i64 0, i32 1, i32 0, i32 0, i32 0
  %671 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %43, i64 0, i32 2, i32 0, i32 0, i32 0
  %672 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %43, i64 0, i32 3
  %673 = bitcast %class.GrPaint* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %673, i8 -86, i64 28, i1 false)
  %674 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %43, i64 0, i32 6, i64 0
  %675 = bitcast i8* %674 to i32*
  store i32 -1431655766, i32* %675, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %669, i8 0, i64 24, i1 false) #12
  store i8 1, i8* %672, align 8
  %676 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %43, i64 0, i32 5
  %677 = bitcast %struct.SkRGBA4f.300* %676 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %677, i8* align 4 bitcast (%struct.SkRGBA4f.300* @_ZL17SK_PMColor4fWHITE to i8*), i64 16, i1 false) #12
  %678 = call zeroext i1 @_ZNK7SkImage11isAlphaOnlyEv(%class.SkImage* %444) #12
  %679 = call zeroext i1 @_Z27SkPaintToGrPaintWithTextureP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderNSt3__110unique_ptrI19GrFragmentProcessorNSA_14default_deleteISC_EEEEbP7GrPaint(%class.GrRecordingContext* %0, %class.GrColorInfo* dereferenceable(24) %640, %class.SkPaint* dereferenceable(72) %4, %class.SkMatrixProvider* dereferenceable(112) %3, %class.GrFragmentProcessor* %668, i1 zeroext %678, %class.GrPaint* nonnull %43) #12
  br i1 %679, label %680, label %776

680:                                              ; preds = %665
  br i1 %463, label %681, label %744

681:                                              ; preds = %680
  %682 = icmp eq %struct.SkPoint* %8, null
  br i1 %682, label %704, label %683

683:                                              ; preds = %681
  %684 = bitcast [4 x %struct.SkPoint]* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %684) #12
  %685 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %44, i64 0, i64 0
  %686 = bitcast [4 x %struct.SkPoint]* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %686, i8 -1, i64 32, i1 false)
  br i1 %459, label %687, label %695

687:                                              ; preds = %683
  %688 = bitcast %class.SkMatrix* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %688) #12
  %689 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %18, i64 0, i32 1
  %690 = bitcast %class.SkMatrix* %18 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %690, align 16, !alias.scope !29
  %691 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %18, i64 0, i32 0, i64 4
  %692 = bitcast float* %691 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %692, align 16, !alias.scope !29
  %693 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %18, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %693, align 16, !alias.scope !29
  store i32 16, i32* %689, align 4, !alias.scope !29
  %694 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* nonnull %18, %struct.SkRect* dereferenceable(16) %7, %struct.SkRect* dereferenceable(16) %6, i32 0) #12
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %18, %struct.SkPoint* nonnull %685, %struct.SkPoint* nonnull %8, i32 4) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %688) #12
  br label %695

695:                                              ; preds = %687, %683
  %696 = phi %struct.SkPoint* [ %685, %687 ], [ null, %683 ]
  %697 = icmp eq %struct.SkPoint* %696, null
  %698 = select i1 %697, %struct.SkPoint* %8, %struct.SkPoint* %696
  %699 = bitcast %struct.DrawQuad* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 108, i8* nonnull %699) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %699, i8* align 4 bitcast (%struct.DrawQuad* @__const._ZN20GrSurfaceDrawContext18fillRectWithEdgeAAEPK6GrClipO7GrPaint4GrAA13GrQuadAAFlagsRK8SkMatrixRK6SkRectPSB_.quad to i8*), i64 108, i1 false) #12
  %700 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %17, i64 0, i32 0
  call void @_ZN6GrQuad14MakeFromSkQuadEPK7SkPointRK8SkMatrix(%class.GrQuad* nonnull sret %700, %struct.SkPoint* nonnull %8, %class.SkMatrix* dereferenceable(40) %49) #12
  %701 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %17, i64 0, i32 1
  %702 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #12
  call void @_ZN6GrQuad14MakeFromSkQuadEPK7SkPointRK8SkMatrix(%class.GrQuad* sret %701, %struct.SkPoint* %698, %class.SkMatrix* dereferenceable(40) %702) #12
  %703 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %17, i64 0, i32 2
  store i32 %11, i32* %703, align 4
  call void @_ZN20GrSurfaceDrawContext14drawFilledQuadEPK6GrClipO7GrPaint4GrAAP8DrawQuadPK21GrUserStencilSettings(%class.GrSurfaceDrawContext* %1, %class.GrClip* %2, %class.GrPaint* nonnull dereferenceable(48) %43, i1 zeroext %10, %struct.DrawQuad* nonnull %17, %struct.GrUserStencilSettings* null) #12
  call void @llvm.lifetime.end.p0i8(i64 108, i8* nonnull %699) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %684) #12
  br label %776

704:                                              ; preds = %681
  %705 = select i1 %459, %struct.SkRect* %6, %struct.SkRect* null
  %706 = icmp eq i32 %11, 15
  %707 = icmp eq %struct.SkRect* %705, null
  %708 = select i1 %707, %struct.SkRect* %7, %struct.SkRect* %705
  br i1 %706, label %709, label %710

709:                                              ; preds = %704
  call void @_ZN20GrSurfaceDrawContext14fillRectToRectEPK6GrClipO7GrPaint4GrAARK8SkMatrixRK6SkRectSB_(%class.GrSurfaceDrawContext* %1, %class.GrClip* %2, %class.GrPaint* nonnull dereferenceable(48) %43, i1 zeroext %10, %class.SkMatrix* dereferenceable(40) %49, %struct.SkRect* dereferenceable(16) %7, %struct.SkRect* dereferenceable(16) %708) #12
  br label %776

710:                                              ; preds = %704
  %711 = bitcast %struct.DrawQuad* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 108, i8* nonnull %711) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %711, i8* align 4 bitcast (%struct.DrawQuad* @__const._ZN20GrSurfaceDrawContext18fillRectWithEdgeAAEPK6GrClipO7GrPaint4GrAA13GrQuadAAFlagsRK8SkMatrixRK6SkRectPSB_.quad to i8*), i64 108, i1 false) #12
  %712 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %16, i64 0, i32 0
  call void @_ZN6GrQuad12MakeFromRectERK6SkRectRK8SkMatrix(%class.GrQuad* nonnull sret %712, %struct.SkRect* dereferenceable(16) %7, %class.SkMatrix* dereferenceable(40) %49) #12
  %713 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %16, i64 0, i32 1
  %714 = bitcast %struct.SkRect* %708 to i32*
  %715 = load i32, i32* %714, align 4
  %716 = bitcast %class.GrQuad* %713 to i32*
  store i32 %715, i32* %716, align 4
  %717 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %16, i64 0, i32 1, i32 0, i64 1
  %718 = bitcast float* %717 to i32*
  store i32 %715, i32* %718, align 4
  %719 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %16, i64 0, i32 1, i32 0, i64 2
  %720 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %708, i64 0, i32 2
  %721 = bitcast float* %720 to i32*
  %722 = load i32, i32* %721, align 4
  %723 = bitcast float* %719 to i32*
  store i32 %722, i32* %723, align 4
  %724 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %16, i64 0, i32 1, i32 0, i64 3
  %725 = bitcast float* %724 to i32*
  store i32 %722, i32* %725, align 4
  %726 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %16, i64 0, i32 1, i32 1, i64 0
  %727 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %708, i64 0, i32 1
  %728 = bitcast float* %727 to i32*
  %729 = load i32, i32* %728, align 4
  %730 = bitcast float* %726 to i32*
  store i32 %729, i32* %730, align 4
  %731 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %16, i64 0, i32 1, i32 1, i64 1
  %732 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %708, i64 0, i32 3
  %733 = bitcast float* %732 to i32*
  %734 = load i32, i32* %733, align 4
  %735 = bitcast float* %731 to i32*
  store i32 %734, i32* %735, align 4
  %736 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %16, i64 0, i32 1, i32 1, i64 2
  %737 = bitcast float* %736 to i32*
  store i32 %729, i32* %737, align 4
  %738 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %16, i64 0, i32 1, i32 1, i64 3
  %739 = bitcast float* %738 to i32*
  store i32 %734, i32* %739, align 4
  %740 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %16, i64 0, i32 1, i32 2, i64 0
  %741 = bitcast float* %740 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %741, align 4
  %742 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %16, i64 0, i32 1, i32 3
  store i32 0, i32* %742, align 4
  %743 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %16, i64 0, i32 2
  store i32 %11, i32* %743, align 4
  call void @_ZN20GrSurfaceDrawContext14drawFilledQuadEPK6GrClipO7GrPaint4GrAAP8DrawQuadPK21GrUserStencilSettings(%class.GrSurfaceDrawContext* %1, %class.GrClip* %2, %class.GrPaint* nonnull dereferenceable(48) %43, i1 zeroext %10, %struct.DrawQuad* nonnull %16, %struct.GrUserStencilSettings* null) #12
  call void @llvm.lifetime.end.p0i8(i64 108, i8* nonnull %711) #12
  br label %776

744:                                              ; preds = %680
  %745 = bitcast %class.GrStyledShape* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %745) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %745, i8* align 8 bitcast ({ %class.GrShape, { %class.SkStrokeRec, %class.sk_sp.236, { i32, float, { i32, [4 x i8], float*, [16 x i8] } } }, i32, i8, i8, [2 x i8], %class.SkTLazy.325, { i32, [4 x i8], i32*, [32 x i8] } }* @__const._ZN12_GLOBAL__N_110draw_imageEP18GrRecordingContextP20GrSurfaceDrawContextPK6GrClipRK16SkMatrixProviderRK7SkPaintRK12SkImage_BaseRK6SkRectSI_PK7SkPointRK8SkMatrix4GrAA13GrQuadAAFlagsN8SkCanvas17SrcRectConstraintE17SkSamplingOptions10SkTileMode.shape to i8*), i64 208, i1 false)
  %746 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %45, i64 0, i32 0, i32 1
  store i8 0, i8* %746, align 8
  %747 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %45, i64 0, i32 1, i32 0
  call void @_ZN11SkStrokeRecC1ENS_9InitStyleE(%class.SkStrokeRec* %747, i32 1) #12
  %748 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %45, i64 0, i32 1, i32 1, i32 0
  %749 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %45, i64 0, i32 1, i32 2, i32 2, i32 1
  store float* null, float** %749, align 8
  %750 = bitcast %class.SkPathEffect** %748 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %750, i8 0, i64 20, i1 false) #12
  %751 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %45, i64 0, i32 2
  store i32 0, i32* %751, align 8
  %752 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %45, i64 0, i32 3
  store i8 0, i8* %752, align 4
  %753 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %45, i64 0, i32 4
  store i8 0, i8* %753, align 1
  %754 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %45, i64 0, i32 5, i32 1
  store %class.SkPath* null, %class.SkPath** %754, align 8
  %755 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %45, i64 0, i32 6, i32 1
  store i32* null, i32** %755, align 8
  %756 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %45, i64 0, i32 6, i32 0
  store i32 0, i32* %756, align 8
  %757 = icmp eq %struct.SkPoint* %8, null
  br i1 %757, label %772, label %758

758:                                              ; preds = %744
  %759 = bitcast %class.SkPath* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %759) #12
  %760 = bitcast %class.SkPath* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %760, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %46) #12
  %761 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPolyEPK7SkPointib(%class.SkPath* nonnull %46, %struct.SkPoint* nonnull %8, i32 4, i1 zeroext true) #12
  %762 = bitcast %class.GrStyledShape* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %762) #12
  %763 = load atomic i8, i8* bitcast (i64* @_ZGVZN7GrStyle10SimpleFillEvE5kFill to i8*) acquire, align 8
  %764 = icmp eq i8 %763, 0
  br i1 %764, label %765, label %770, !prof !34

765:                                              ; preds = %758
  %766 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN7GrStyle10SimpleFillEvE5kFill) #12
  %767 = icmp eq i32 %766, 0
  br i1 %767, label %770, label %768

768:                                              ; preds = %765
  call void @_ZN11SkStrokeRecC1ENS_9InitStyleE(%class.SkStrokeRec* getelementptr inbounds (%class.GrStyle, %class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill, i64 0, i32 0), i32 1) #12
  store float* null, float** getelementptr inbounds (%class.GrStyle, %class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill, i64 0, i32 2, i32 2, i32 1), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%class.SkPathEffect** getelementptr inbounds (%class.GrStyle, %class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill, i64 0, i32 1, i32 0) to i8*), i8 0, i64 20, i1 false) #12
  %769 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.GrStyle*)* @_ZN7GrStyleD2Ev to void (i8*)*), i8* bitcast (%class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill to i8*), i8* nonnull @__dso_handle) #12
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN7GrStyle10SimpleFillEvE5kFill) #12
  br label %770

770:                                              ; preds = %758, %765, %768
  call void @_ZN13GrStyledShapeC2ERK6SkPathRK7GrStyleNS_10DoSimplifyE(%class.GrStyledShape* nonnull %47, %class.SkPath* nonnull dereferenceable(16) %46, %class.GrStyle* nonnull dereferenceable(64) @_ZZN7GrStyle10SimpleFillEvE5kFill, i1 zeroext true) #12
  %771 = call dereferenceable(208) %class.GrStyledShape* @_ZN13GrStyledShapeaSERKS_(%class.GrStyledShape* nonnull %45, %class.GrStyledShape* nonnull dereferenceable(208) %47) #12
  call void @_ZN13GrStyledShapeD2Ev(%class.GrStyledShape* nonnull %47) #12
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %762) #12
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %759) #12
  br label %775

772:                                              ; preds = %744
  %773 = bitcast %class.GrStyledShape* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %773) #12
  call void @_ZN13GrStyledShapeC2ERK6SkRectNS_10DoSimplifyE(%class.GrStyledShape* nonnull %48, %struct.SkRect* dereferenceable(16) %7, i1 zeroext true)
  %774 = call dereferenceable(208) %class.GrStyledShape* @_ZN13GrStyledShapeaSERKS_(%class.GrStyledShape* nonnull %45, %class.GrStyledShape* nonnull dereferenceable(208) %48) #12
  call void @_ZN13GrStyledShapeD2Ev(%class.GrStyledShape* nonnull %48) #12
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %773) #12
  br label %775

775:                                              ; preds = %772, %770
  call void @_ZN11GrBlurUtils23drawShapeWithMaskFilterEP18GrRecordingContextP20GrSurfaceDrawContextPK6GrClipRK13GrStyledShapeO7GrPaintRK8SkMatrixPK12SkMaskFilter(%class.GrRecordingContext* %0, %class.GrSurfaceDrawContext* %1, %class.GrClip* %2, %class.GrStyledShape* nonnull dereferenceable(208) %45, %class.GrPaint* nonnull dereferenceable(48) %43, %class.SkMatrix* dereferenceable(40) %49, %class.SkMaskFilter* nonnull %460) #12
  call void @_ZN13GrStyledShapeD2Ev(%class.GrStyledShape* nonnull %45) #12
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %745) #12
  br label %776

776:                                              ; preds = %710, %709, %775, %695, %665
  %777 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %671, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %671, align 8
  %778 = icmp eq %class.GrFragmentProcessor* %777, null
  br i1 %778, label %784, label %779

779:                                              ; preds = %776
  %780 = bitcast %class.GrFragmentProcessor* %777 to void (%class.GrFragmentProcessor*)***
  %781 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %780, align 8
  %782 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %781, i64 1
  %783 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %782, align 8
  call void %783(%class.GrFragmentProcessor* nonnull %777) #12
  br label %784

784:                                              ; preds = %779, %776
  %785 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %670, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %670, align 8
  %786 = icmp eq %class.GrFragmentProcessor* %785, null
  br i1 %786, label %792, label %787

787:                                              ; preds = %784
  %788 = bitcast %class.GrFragmentProcessor* %785 to void (%class.GrFragmentProcessor*)***
  %789 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %788, align 8
  %790 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %789, i64 1
  %791 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %790, align 8
  call void %791(%class.GrFragmentProcessor* nonnull %785) #12
  br label %792

792:                                              ; preds = %787, %784
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %669) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %634) #12
  br label %793

793:                                              ; preds = %629, %792
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %606) #12
  br label %794

794:                                              ; preds = %793, %440
  ret void
}

; Function Attrs: nounwind
declare void @_ZN11SkImage_GpuD1Ev(%class.SkImage_Gpu*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkGpuDevice13drawImageQuadEPK7SkImagePK6SkRectS5_PK7SkPoint4GrAA13GrQuadAAFlagsPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintN8SkCanvas17SrcRectConstraintE(%class.SkGpuDevice*, %class.SkImage*, %struct.SkRect* readonly, %struct.SkRect* readonly, %struct.SkPoint*, i1 zeroext, i32, %class.SkMatrix* readonly, %struct.SkSamplingOptions* nocapture readonly dereferenceable(20), %class.SkPaint* dereferenceable(72), i32) local_unnamed_addr #3 align 2 {
  %12 = alloca %class.SkMatrix, align 16
  %13 = alloca %class.SkM44, align 4
  %14 = alloca %class.SkM44, align 4
  %15 = alloca { <2 x float>, <2 x float> }, align 8
  %16 = alloca %struct.SkRect, align 4
  %17 = alloca %struct.SkRect, align 4
  %18 = alloca %class.SkMatrix, align 16
  %19 = alloca <4 x float>, align 16
  %20 = bitcast <4 x float>* %19 to %struct.SkRect*
  %21 = alloca <4 x i32>, align 16
  %22 = bitcast <4 x i32>* %21 to %struct.SkIRect*
  %23 = alloca %struct.SkRect, align 4
  %24 = alloca %class.SkBitmap, align 8
  %25 = alloca %class.sk_sp.327, align 8
  %26 = alloca %class.SkMatrix, align 4
  %27 = alloca %struct.SkSamplingOptions, align 8
  %28 = alloca %struct.SkRect, align 4
  %29 = alloca %struct.SkRect, align 4
  %30 = alloca %class.SkMatrix, align 16
  %31 = alloca %class.SkPreConcatMatrixProvider, align 8
  %32 = alloca [3 x i8], align 1
  %33 = alloca i64, align 8
  %34 = bitcast i64* %33 to %struct.SkISize*
  %35 = alloca %class.SkBitmap, align 8
  %36 = alloca %struct.SkSamplingOptions, align 8
  %37 = bitcast %struct.SkRect* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #12
  %38 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %28, i64 0, i32 0
  %39 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %28, i64 0, i32 1
  %40 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %28, i64 0, i32 2
  %41 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %28, i64 0, i32 3
  %42 = bitcast %struct.SkRect* %29 to i8*
  %43 = bitcast %struct.SkRect* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %43, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #12
  %44 = bitcast %class.SkMatrix* %30 to i8*
  %45 = bitcast %struct.SkRect* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %45, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %44) #12
  %46 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %30, i64 0, i32 1
  %47 = bitcast %class.SkMatrix* %30 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %47, align 16
  %48 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %30, i64 0, i32 0, i64 4
  %49 = bitcast float* %48 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %49, align 16
  %50 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %30, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %50, align 16
  store i32 16, i32* %46, align 4
  %51 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = bitcast { <2 x float>, <2 x float> }* %15 to %struct.SkRect*
  %56 = bitcast { <2 x float>, <2 x float> }* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #12
  %57 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %15, i64 0, i32 0, i64 0
  %58 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %55, i64 0, i32 1
  %59 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %15, i64 0, i32 1, i64 0
  %60 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %55, i64 0, i32 3
  %61 = sitofp i32 %52 to float
  %62 = insertelement <2 x float> undef, float %61, i32 0
  %63 = sitofp i32 %54 to float
  %64 = insertelement <2 x float> %62, float %63, i32 1
  %65 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %15, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %65, align 8
  %66 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %15, i64 0, i32 1
  store <2 x float> %64, <2 x float>* %66, align 8
  %67 = bitcast %struct.SkRect* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #12
  %68 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %16, i64 0, i32 0
  %69 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %16, i64 0, i32 1
  %70 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %16, i64 0, i32 2
  %71 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %16, i64 0, i32 3
  %72 = icmp ne %struct.SkRect* %2, null
  %73 = select i1 %72, %struct.SkRect* %2, %struct.SkRect* %55
  %74 = bitcast %struct.SkRect* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %67, i8* align 4 %74, i64 16, i1 false) #12
  %75 = bitcast %struct.SkRect* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #12
  %76 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %17, i64 0, i32 0
  %77 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %17, i64 0, i32 1
  %78 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %17, i64 0, i32 2
  %79 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %17, i64 0, i32 3
  %80 = icmp ne %struct.SkRect* %3, null
  %81 = select i1 %80, %struct.SkRect* %3, %struct.SkRect* %16
  %82 = bitcast %struct.SkRect* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %75, i8* align 4 %82, i64 16, i1 false) #12
  %83 = load float, float* %68, align 4
  %84 = load float, float* %70, align 4
  %85 = fcmp olt float %83, %84
  br i1 %85, label %86, label %195

86:                                               ; preds = %11
  %87 = load float, float* %69, align 4
  %88 = load float, float* %71, align 4
  %89 = fcmp uge float %87, %88
  br i1 %89, label %195, label %90

90:                                               ; preds = %86
  %91 = load float, float* %76, align 4
  %92 = load float, float* %78, align 4
  %93 = fcmp olt float %91, %92
  br i1 %93, label %94, label %195

94:                                               ; preds = %90
  %95 = load float, float* %77, align 4
  %96 = load float, float* %79, align 4
  %97 = fcmp uge float %95, %96
  br i1 %97, label %195, label %98

98:                                               ; preds = %94
  %99 = bitcast %class.SkMatrix* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %99) #12
  %100 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %18, i64 0, i32 1
  %101 = bitcast %class.SkMatrix* %18 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %101, align 16, !alias.scope !35
  %102 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %18, i64 0, i32 0, i64 4
  %103 = bitcast float* %102 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %103, align 16, !alias.scope !35
  %104 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %18, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %104, align 16, !alias.scope !35
  store i32 16, i32* %100, align 4, !alias.scope !35
  %105 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* nonnull %18, %struct.SkRect* nonnull dereferenceable(16) %16, %struct.SkRect* nonnull dereferenceable(16) %17, i32 0) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %44, i8* nonnull align 16 %99, i64 40, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %99) #12
  br i1 %72, label %106, label %168

106:                                              ; preds = %98
  %107 = load float, float* %68, align 4
  %108 = load float, float* %70, align 4
  %109 = fcmp olt float %107, %108
  br i1 %109, label %110, label %130

110:                                              ; preds = %106
  %111 = load float, float* %69, align 4
  %112 = load float, float* %71, align 4
  %113 = fcmp uge float %111, %112
  br i1 %113, label %130, label %114

114:                                              ; preds = %110
  %115 = load float, float* %57, align 8
  %116 = load float, float* %59, align 8
  %117 = fcmp olt float %115, %116
  br i1 %117, label %118, label %130

118:                                              ; preds = %114
  %119 = load float, float* %58, align 4
  %120 = load float, float* %60, align 4
  %121 = fcmp uge float %119, %120
  %122 = fcmp ugt float %115, %107
  %123 = or i1 %122, %121
  br i1 %123, label %130, label %124

124:                                              ; preds = %118
  %125 = fcmp ole float %119, %111
  %126 = fcmp oge float %116, %108
  %127 = fcmp oge float %120, %112
  %128 = and i1 %126, %125
  %129 = and i1 %127, %128
  br i1 %129, label %168, label %130

130:                                              ; preds = %124, %118, %114, %110, %106
  %131 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %16, %struct.SkRect* nonnull dereferenceable(16) %55) #12
  br i1 %131, label %132, label %195

132:                                              ; preds = %130
  %133 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %30, %struct.SkRect* nonnull %17, %struct.SkRect* nonnull dereferenceable(16) %16, i32 1) #12
  %134 = icmp eq %struct.SkPoint* %4, null
  br i1 %134, label %168, label %135

135:                                              ; preds = %132
  %136 = load float, float* %76, align 4
  %137 = load float, float* %78, align 4
  %138 = load float, float* %77, align 4
  %139 = load float, float* %79, align 4
  %140 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 0
  %141 = load float, float* %140, align 4
  %142 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 1
  %143 = load float, float* %142, align 4
  %144 = fcmp ugt float %136, %141
  %145 = fcmp ule float %137, %141
  %146 = or i1 %144, %145
  %147 = fcmp ugt float %138, %143
  %148 = or i1 %146, %147
  %149 = xor i1 %148, true
  %150 = fcmp ogt float %139, %143
  %151 = and i1 %150, %149
  br i1 %151, label %152, label %165

152:                                              ; preds = %135
  %153 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 1, i32 0
  %154 = load float, float* %153, align 4
  %155 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 1, i32 1
  %156 = load float, float* %155, align 4
  %157 = fcmp ugt float %136, %154
  %158 = fcmp ule float %137, %154
  %159 = or i1 %157, %158
  %160 = fcmp ugt float %138, %156
  %161 = or i1 %159, %160
  %162 = xor i1 %161, true
  %163 = fcmp ogt float %139, %156
  %164 = and i1 %163, %162
  br i1 %164, label %169, label %165

165:                                              ; preds = %182, %169, %152, %135
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %37, i8* nonnull align 4 %67, i64 16, i1 false) #12
  %166 = select i1 %80, %struct.SkRect* %3, %struct.SkRect* %2
  %167 = bitcast %struct.SkRect* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %42, i8* align 4 %167, i64 16, i1 false) #12
  br label %195

168:                                              ; preds = %182, %132, %124, %98
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %37, i8* nonnull align 4 %67, i64 16, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %42, i8* nonnull align 4 %75, i64 16, i1 false) #12
  br label %195

169:                                              ; preds = %152
  %170 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 2, i32 0
  %171 = load float, float* %170, align 4
  %172 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 2, i32 1
  %173 = load float, float* %172, align 4
  %174 = fcmp ugt float %136, %171
  %175 = fcmp ule float %137, %171
  %176 = or i1 %174, %175
  %177 = fcmp ugt float %138, %173
  %178 = or i1 %176, %177
  %179 = xor i1 %178, true
  %180 = fcmp ogt float %139, %173
  %181 = and i1 %180, %179
  br i1 %181, label %182, label %165

182:                                              ; preds = %169
  %183 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 3, i32 0
  %184 = load float, float* %183, align 4
  %185 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 3, i32 1
  %186 = load float, float* %185, align 4
  %187 = fcmp ugt float %136, %184
  %188 = fcmp ule float %137, %184
  %189 = or i1 %187, %188
  %190 = fcmp ugt float %138, %186
  %191 = or i1 %189, %190
  %192 = xor i1 %191, true
  %193 = fcmp ogt float %139, %186
  %194 = and i1 %193, %192
  br i1 %194, label %168, label %165

195:                                              ; preds = %11, %86, %90, %94, %130, %165, %168
  %196 = phi i32 [ 0, %168 ], [ 2, %94 ], [ 2, %86 ], [ 2, %130 ], [ 1, %165 ], [ 2, %11 ], [ 2, %90 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #12
  %197 = icmp eq i32 %196, 2
  br i1 %197, label %810, label %198

198:                                              ; preds = %195
  %199 = load i32, i32* %51, align 4
  %200 = load i32, i32* %53, align 4
  %201 = icmp slt i32 %199, 1
  %202 = icmp slt i32 %200, 1
  %203 = or i1 %201, %202
  br i1 %203, label %228, label %204

204:                                              ; preds = %198
  %205 = or i32 %200, %199
  %206 = sext i32 %205 to i64
  %207 = add nsw i64 %206, 2147483648
  %208 = icmp ugt i64 %207, 4294967295
  br i1 %208, label %228, label %209

209:                                              ; preds = %204
  %210 = load float, float* %38, align 4
  %211 = load float, float* %40, align 4
  %212 = fcmp olt float %210, %211
  br i1 %212, label %213, label %228

213:                                              ; preds = %209
  %214 = load float, float* %39, align 4
  %215 = load float, float* %41, align 4
  %216 = fcmp uge float %214, %215
  %217 = fcmp ugt float %210, 0.000000e+00
  %218 = or i1 %217, %216
  br i1 %218, label %228, label %219

219:                                              ; preds = %213
  %220 = fcmp ole float %214, 0.000000e+00
  %221 = sitofp i32 %199 to float
  %222 = fcmp oge float %211, %221
  %223 = and i1 %222, %220
  %224 = sitofp i32 %200 to float
  %225 = fcmp oge float %215, %224
  %226 = and i1 %223, %225
  %227 = select i1 %226, i32 1, i32 %10
  br label %228

228:                                              ; preds = %219, %209, %198, %204, %213
  %229 = phi i32 [ %10, %213 ], [ %10, %204 ], [ %10, %198 ], [ %10, %209 ], [ %227, %219 ]
  %230 = icmp eq i32 %196, 1
  %231 = select i1 %230, i32 3, i32 0
  %232 = bitcast %class.SkPreConcatMatrixProvider* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %232) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %232, i8* align 8 bitcast (%class.SkPreConcatMatrixProvider* @__const._ZN11SkGpuDevice13drawImageQuadEPK7SkImagePK6SkRectS5_PK7SkPoint4GrAA13GrQuadAAFlagsPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintN8SkCanvas17SrcRectConstraintE.matrixProvider to i8*), i64 160, i1 false)
  %233 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %0, i64 0, i32 0, i32 0, i32 1
  %234 = icmp eq %class.SkMatrix* %7, null
  br i1 %234, label %235, label %237

235:                                              ; preds = %228
  %236 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #12
  br label %237

237:                                              ; preds = %228, %235
  %238 = phi %class.SkMatrix* [ %236, %235 ], [ %7, %228 ]
  %239 = bitcast %class.SkM44* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %239) #12
  %240 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 1
  %241 = bitcast %class.SkM44* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %241) #12
  %242 = bitcast %class.SkMatrix* %238 to i32*
  %243 = load i32, i32* %242, align 4
  %244 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %238, i64 0, i32 0, i64 1
  %245 = bitcast float* %244 to i32*
  %246 = load i32, i32* %245, align 4
  %247 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %238, i64 0, i32 0, i64 2
  %248 = bitcast float* %247 to i32*
  %249 = load i32, i32* %248, align 4
  %250 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %238, i64 0, i32 0, i64 3
  %251 = bitcast float* %250 to i32*
  %252 = load i32, i32* %251, align 4
  %253 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %238, i64 0, i32 0, i64 4
  %254 = bitcast float* %253 to i32*
  %255 = load i32, i32* %254, align 4
  %256 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %238, i64 0, i32 0, i64 5
  %257 = bitcast float* %256 to i32*
  %258 = load i32, i32* %257, align 4
  %259 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %238, i64 0, i32 0, i64 6
  %260 = bitcast float* %259 to i32*
  %261 = load i32, i32* %260, align 4
  %262 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %238, i64 0, i32 0, i64 7
  %263 = bitcast float* %262 to i32*
  %264 = load i32, i32* %263, align 4
  %265 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %238, i64 0, i32 0, i64 8
  %266 = bitcast float* %265 to i32*
  %267 = load i32, i32* %266, align 4
  %268 = bitcast %class.SkM44* %14 to i32*
  store i32 %243, i32* %268, align 4
  %269 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 1
  %270 = bitcast float* %269 to i32*
  store i32 %252, i32* %270, align 4
  %271 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 2
  store float 0.000000e+00, float* %271, align 4
  %272 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 3
  %273 = bitcast float* %272 to i32*
  store i32 %261, i32* %273, align 4
  %274 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 4
  %275 = bitcast float* %274 to i32*
  store i32 %246, i32* %275, align 4
  %276 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 5
  %277 = bitcast float* %276 to i32*
  store i32 %255, i32* %277, align 4
  %278 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 6
  store float 0.000000e+00, float* %278, align 4
  %279 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 7
  %280 = bitcast float* %279 to i32*
  store i32 %264, i32* %280, align 4
  %281 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 8
  %282 = bitcast float* %281 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %282, align 4
  %283 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 12
  %284 = bitcast float* %283 to i32*
  store i32 %249, i32* %284, align 4
  %285 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 13
  %286 = bitcast float* %285 to i32*
  store i32 %258, i32* %286, align 4
  %287 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 14
  store float 0.000000e+00, float* %287, align 4
  %288 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 15
  %289 = bitcast float* %288 to i32*
  store i32 %267, i32* %289, align 4
  %290 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %13, %class.SkM44* dereferenceable(64) %240, %class.SkM44* nonnull dereferenceable(64) %14) #12
  %291 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %31, i64 0, i32 0, i32 0
  %292 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %31, i64 0, i32 0, i32 1
  %293 = bitcast %class.SkM44* %292 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %293, i8* nonnull align 4 %239, i64 64, i1 false) #12
  %294 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %31, i64 0, i32 0, i32 2
  %295 = bitcast %class.SkM44* %13 to i32*
  %296 = load i32, i32* %295, align 4, !noalias !40
  %297 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 4
  %298 = bitcast float* %297 to i32*
  %299 = load i32, i32* %298, align 4, !noalias !40
  %300 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 12
  %301 = bitcast float* %300 to i32*
  %302 = load i32, i32* %301, align 4, !noalias !40
  %303 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 1
  %304 = bitcast float* %303 to i32*
  %305 = load i32, i32* %304, align 4, !noalias !40
  %306 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 5
  %307 = bitcast float* %306 to i32*
  %308 = load i32, i32* %307, align 4, !noalias !40
  %309 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 13
  %310 = bitcast float* %309 to i32*
  %311 = load i32, i32* %310, align 4, !noalias !40
  %312 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 3
  %313 = bitcast float* %312 to i32*
  %314 = load i32, i32* %313, align 4, !noalias !40
  %315 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 7
  %316 = bitcast float* %315 to i32*
  %317 = load i32, i32* %316, align 4, !noalias !40
  %318 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 15
  %319 = bitcast float* %318 to i32*
  %320 = load i32, i32* %319, align 4, !noalias !40
  %321 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %31, i64 0, i32 0, i32 2, i32 1
  %322 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %31, i64 0, i32 0, i32 2, i32 0, i64 1
  %323 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %31, i64 0, i32 0, i32 2, i32 0, i64 2
  %324 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %31, i64 0, i32 0, i32 2, i32 0, i64 3
  %325 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %31, i64 0, i32 0, i32 2, i32 0, i64 4
  %326 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %31, i64 0, i32 0, i32 2, i32 0, i64 5
  %327 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %31, i64 0, i32 0, i32 2, i32 0, i64 6
  %328 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %31, i64 0, i32 0, i32 2, i32 0, i64 7
  %329 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %31, i64 0, i32 0, i32 2, i32 0, i64 8
  %330 = bitcast %class.SkMatrix* %294 to i32*
  store i32 %296, i32* %330, align 8, !alias.scope !43
  %331 = bitcast float* %322 to i32*
  store i32 %299, i32* %331, align 4, !alias.scope !43
  %332 = bitcast float* %323 to i32*
  store i32 %302, i32* %332, align 8, !alias.scope !43
  %333 = bitcast float* %324 to i32*
  store i32 %305, i32* %333, align 4, !alias.scope !43
  %334 = bitcast float* %325 to i32*
  store i32 %308, i32* %334, align 8, !alias.scope !43
  %335 = bitcast float* %326 to i32*
  store i32 %311, i32* %335, align 4, !alias.scope !43
  %336 = bitcast float* %327 to i32*
  store i32 %314, i32* %336, align 8, !alias.scope !43
  %337 = bitcast float* %328 to i32*
  store i32 %317, i32* %337, align 4, !alias.scope !43
  %338 = bitcast float* %329 to i32*
  store i32 %320, i32* %338, align 8, !alias.scope !43
  store i32 128, i32* %321, align 4, !alias.scope !43
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %241) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %239) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV25SkPreConcatMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %291, align 8
  %339 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %31, i64 0, i32 1
  store %class.SkMatrixProvider* %233, %class.SkMatrixProvider** %339, align 8
  %340 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %31, i64 0, i32 2
  %341 = bitcast %class.SkMatrix* %340 to i8*
  %342 = bitcast %class.SkMatrix* %238 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %341, i8* align 4 %342, i64 40, i1 false) #12
  %343 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %31, i64 0, i32 0
  %344 = getelementptr inbounds [3 x i8], [3 x i8]* %32, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %344)
  %345 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %8, i64 0, i32 0
  %346 = load i8, i8* %345, align 4
  %347 = getelementptr inbounds i8, i8* %345, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %344, i8* align 1 %347, i64 3, i1 false)
  %348 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %8, i64 0, i32 1, i32 0
  %349 = load float, float* %348, align 4
  %350 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %8, i64 0, i32 1, i32 1
  %351 = load float, float* %350, align 4
  %352 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %8, i64 0, i32 2
  %353 = load i32, i32* %352, align 4
  %354 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %8, i64 0, i32 3
  %355 = load i32, i32* %354, align 4
  %356 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %0, i64 0, i32 1, i32 0
  %357 = bitcast %class.GrRecordingContext** %356 to %class.GrContext_Base**
  %358 = load %class.GrContext_Base*, %class.GrContext_Base** %357, align 8
  %359 = call dereferenceable(240) %struct.GrContextOptions* @_ZNK14GrContext_Base7optionsEv(%class.GrContext_Base* %358) #12
  %360 = icmp eq i32 %355, 0
  br i1 %360, label %376, label %361

361:                                              ; preds = %237
  %362 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %359, i64 0, i32 15
  %363 = load i8, i8* %362, align 1, !range !7
  %364 = icmp eq i8 %363, 0
  %365 = bitcast %class.SkMatrix* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %365) #12
  %366 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 1
  %367 = bitcast %class.SkMatrix* %12 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %367, align 16
  %368 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 0, i64 4
  %369 = bitcast float* %368 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %369, align 16
  %370 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %370, align 16
  store i32 16, i32* %366, align 4
  %371 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %12, %class.SkMatrix* dereferenceable(40) %294, %class.SkMatrix* nonnull dereferenceable(40) %30) #12
  %372 = select i1 %364, float 1.000000e+00, float 0x3FE6A09E60000000
  %373 = call float @_ZNK8SkMatrix11getMinScaleEv(%class.SkMatrix* nonnull %12) #12
  %374 = fcmp ult float %373, %372
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %365) #12
  br i1 %374, label %376, label %375

375:                                              ; preds = %361
  br label %376

376:                                              ; preds = %361, %237, %375
  %377 = phi i8 [ %346, %237 ], [ 0, %375 ], [ %346, %361 ]
  %378 = phi float [ %349, %237 ], [ 0.000000e+00, %375 ], [ %349, %361 ]
  %379 = phi float [ %351, %237 ], [ 0.000000e+00, %375 ], [ %351, %361 ]
  %380 = phi i32 [ 0, %237 ], [ 0, %375 ], [ %355, %361 ]
  %381 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %0, i64 0, i32 4, i32 0
  %382 = call zeroext i1 @_ZNK7SkImage15isTextureBackedEv(%class.SkImage* %1) #12
  %383 = bitcast %class.SkImage* %1 to %class.SkImage_Base*
  br i1 %382, label %799, label %384

384:                                              ; preds = %376
  %385 = load %class.GrRecordingContext*, %class.GrRecordingContext** %356, align 8
  %386 = bitcast %class.SkImage* %1 to i1 (%class.SkImage_Base*, %class.GrRecordingContext*)***
  %387 = load i1 (%class.SkImage_Base*, %class.GrRecordingContext*)**, i1 (%class.SkImage_Base*, %class.GrRecordingContext*)*** %386, align 8
  %388 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrRecordingContext*)*, i1 (%class.SkImage_Base*, %class.GrRecordingContext*)** %387, i64 16
  %389 = load i1 (%class.SkImage_Base*, %class.GrRecordingContext*)*, i1 (%class.SkImage_Base*, %class.GrRecordingContext*)** %388, align 8
  %390 = call zeroext i1 %389(%class.SkImage_Base* %383, %class.GrRecordingContext* %385) #12
  br i1 %390, label %799, label %391

391:                                              ; preds = %384
  %392 = icmp eq i8 %377, 0
  %393 = icmp eq i32 %353, 0
  %394 = select i1 %393, i32 0, i32 2
  %395 = select i1 %392, i32 %394, i32 4
  %396 = load %class.GrContext_Base*, %class.GrContext_Base** %357, align 8
  %397 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %396) #12
  %398 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %397, i64 0, i32 11
  %399 = load i32, i32* %398, align 4
  %400 = sub nsw i32 %399, %395
  %401 = load %class.GrRecordingContext*, %class.GrRecordingContext** %356, align 8
  %402 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %403 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %402, align 8
  %404 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %403, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %405 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %404, align 8
  %406 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %405, i64 0, i32 6
  %407 = bitcast %struct.SkISize* %406 to i64*
  %408 = load i64, i64* %407, align 8
  %409 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = load atomic i32, i32* %409 acquire, align 4
  %411 = bitcast i64* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %411) #12
  %412 = load i32, i32* %51, align 4
  %413 = load i32, i32* %53, align 4
  %414 = zext i32 %413 to i64
  %415 = shl nuw i64 %414, 32
  %416 = zext i32 %412 to i64
  %417 = or i64 %415, %416
  store i64 %417, i64* %33, align 8
  %418 = trunc i64 %408 to i32
  %419 = lshr i64 %408, 32
  %420 = trunc i64 %419 to i32
  %421 = icmp sgt i32 %412, %400
  %422 = icmp sgt i32 %413, %400
  %423 = or i1 %421, %422
  br i1 %423, label %424, label %462

424:                                              ; preds = %391
  %425 = call fastcc { i64, i64 } @_ZN12_GLOBAL__N_126determine_clipped_src_rectEiiPK6GrClipRK8SkMatrixS5_RK7SkISizePK6SkRect(i32 %418, i32 %420, %class.GrClip* %381, %class.SkMatrix* dereferenceable(40) %294, %class.SkMatrix* nonnull dereferenceable(40) %30, %struct.SkISize* nonnull dereferenceable(8) %34, %struct.SkRect* nonnull %28) #12
  %426 = extractvalue { i64, i64 } %425, 0
  %427 = extractvalue { i64, i64 } %425, 1
  %428 = trunc i64 %426 to i32
  %429 = lshr i64 %426, 32
  %430 = trunc i64 %429 to i32
  %431 = icmp slt i32 %400, 1025
  %432 = trunc i64 %427 to i32
  %433 = lshr i64 %427, 32
  %434 = trunc i64 %433 to i32
  br i1 %431, label %480, label %435

435:                                              ; preds = %424
  %436 = sdiv i32 %432, %400
  %437 = sdiv i32 %428, %400
  %438 = add nsw i32 %436, 1
  %439 = sub nsw i32 %438, %437
  %440 = sdiv i32 %434, %400
  %441 = sdiv i32 %430, %400
  %442 = add nsw i32 %440, 1
  %443 = sub nsw i32 %442, %441
  %444 = mul nsw i32 %443, %439
  %445 = sext i32 %444 to i64
  %446 = sdiv i32 %432, 1024
  %447 = add nsw i32 %446, 1
  %448 = sdiv i32 %428, -1024
  %449 = add nsw i32 %447, %448
  %450 = sdiv i32 %434, 1024
  %451 = add nsw i32 %450, 1
  %452 = sdiv i32 %430, -1024
  %453 = add nsw i32 %451, %452
  %454 = mul nsw i32 %453, %449
  %455 = sext i32 %454 to i64
  %456 = mul nsw i32 %400, %400
  %457 = zext i32 %456 to i64
  %458 = mul nsw i64 %445, %457
  %459 = shl nsw i64 %455, 21
  %460 = icmp ugt i64 %458, %459
  %461 = select i1 %460, i32 1024, i32 %400
  br label %480

462:                                              ; preds = %391
  %463 = mul nsw i32 %413, %412
  %464 = sext i32 %463 to i64
  %465 = icmp ult i32 %463, 4194304
  br i1 %465, label %479, label %466

466:                                              ; preds = %462
  %467 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %401, i64 0, i32 0, i32 0
  %468 = bitcast %class.GrRecordingContext* %401 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %469 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %468, align 8
  %470 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %469, i64 3
  %471 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %470, align 8
  %472 = call %class.GrDirectContext* %471(%class.GrContext_Base* %467) #12
  %473 = icmp eq %class.GrDirectContext* %472, null
  br i1 %473, label %479, label %474

474:                                              ; preds = %466
  %475 = shl nsw i64 %464, 2
  %476 = call i64 @_ZNK15GrDirectContext21getResourceCacheLimitEv(%class.GrDirectContext* nonnull %472) #12
  %477 = lshr i64 %476, 1
  %478 = icmp ult i64 %475, %477
  br i1 %478, label %479, label %482

479:                                              ; preds = %462, %466, %474
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %411) #12
  br label %799

480:                                              ; preds = %435, %424
  %481 = phi i32 [ %400, %424 ], [ %461, %435 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %411) #12
  br label %505

482:                                              ; preds = %474
  %483 = call fastcc { i64, i64 } @_ZN12_GLOBAL__N_126determine_clipped_src_rectEiiPK6GrClipRK8SkMatrixS5_RK7SkISizePK6SkRect(i32 %418, i32 %420, %class.GrClip* %381, %class.SkMatrix* dereferenceable(40) %294, %class.SkMatrix* nonnull dereferenceable(40) %30, %struct.SkISize* nonnull dereferenceable(8) %34, %struct.SkRect* nonnull %28) #12
  %484 = extractvalue { i64, i64 } %483, 0
  %485 = extractvalue { i64, i64 } %483, 1
  %486 = trunc i64 %484 to i32
  %487 = lshr i64 %484, 32
  %488 = trunc i64 %487 to i32
  %489 = trunc i64 %485 to i32
  %490 = sdiv i32 %489, 1024
  %491 = add nsw i32 %490, 1
  %492 = sdiv i32 %486, -1024
  %493 = add nsw i32 %491, %492
  %494 = lshr i64 %485, 32
  %495 = trunc i64 %494 to i32
  %496 = sdiv i32 %495, 1024
  %497 = add nsw i32 %496, 1
  %498 = sdiv i32 %488, -1024
  %499 = add nsw i32 %497, %498
  %500 = shl i32 %493, 20
  %501 = mul i32 %500, %499
  %502 = sext i32 %501 to i64
  %503 = shl nsw i64 %502, 3
  %504 = icmp ult i64 %503, %475
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %411) #12
  br i1 %504, label %505, label %799

505:                                              ; preds = %480, %482
  %506 = phi i64 [ %427, %480 ], [ %485, %482 ]
  %507 = phi i32 [ %428, %480 ], [ %486, %482 ]
  %508 = phi i32 [ %430, %480 ], [ %488, %482 ]
  %509 = phi i32 [ %481, %480 ], [ 1024, %482 ]
  %510 = bitcast %class.SkBitmap* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %510) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %510, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %35) #12
  %511 = bitcast %class.SkImage* %1 to i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)***
  %512 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)**, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*** %511, align 8
  %513 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %512, i64 18
  %514 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %513, align 8
  %515 = call zeroext i1 %514(%class.SkImage_Base* %383, %class.GrDirectContext* null, %class.SkBitmap* nonnull %35, i32 0) #12
  br i1 %515, label %516, label %798

516:                                              ; preds = %505
  %517 = load %class.GrRecordingContext*, %class.GrRecordingContext** %356, align 8
  %518 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %402, align 8
  %519 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %27, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %519)
  store i8 %377, i8* %519, align 8
  %520 = getelementptr inbounds i8, i8* %519, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %520, i8* nonnull align 1 %344, i64 3, i1 false)
  %521 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %27, i64 0, i32 1, i32 0
  store float %378, float* %521, align 4
  %522 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %27, i64 0, i32 1, i32 1
  store float %379, float* %522, align 4
  %523 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %27, i64 0, i32 2
  store i32 %353, i32* %523, align 4
  %524 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %27, i64 0, i32 3
  store i32 %380, i32* %524, align 8
  %525 = sitofp i32 %507 to float
  %526 = sitofp i32 %508 to float
  %527 = trunc i64 %506 to i32
  %528 = sitofp i32 %527 to float
  %529 = lshr i64 %506, 32
  %530 = trunc i64 %529 to i32
  %531 = sitofp i32 %530 to float
  %532 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %35, i64 0, i32 1, i32 2, i32 1, i32 0
  %533 = load i32, i32* %532, align 8
  %534 = sdiv i32 %533, %509
  %535 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %35, i64 0, i32 1, i32 2, i32 1, i32 1
  %536 = load i32, i32* %535, align 4
  %537 = sdiv i32 %536, %509
  %538 = icmp slt i32 %534, 0
  br i1 %538, label %797, label %539

539:                                              ; preds = %516
  %540 = icmp slt i32 %537, 0
  %541 = bitcast <4 x float>* %19 to i8*
  %542 = getelementptr inbounds <4 x float>, <4 x float>* %19, i64 0, i64 0
  %543 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %20, i64 0, i32 1
  %544 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %20, i64 0, i32 2
  %545 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %20, i64 0, i32 3
  %546 = bitcast <4 x i32>* %21 to i8*
  %547 = getelementptr inbounds <4 x i32>, <4 x i32>* %21, i64 0, i64 0
  %548 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %22, i64 0, i32 1
  %549 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %22, i64 0, i32 2
  %550 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %22, i64 0, i32 3
  %551 = bitcast %struct.SkRect* %23 to i8*
  %552 = icmp eq i32 %229, 1
  %553 = bitcast %class.SkBitmap* %24 to i8*
  %554 = bitcast %class.sk_sp.327* %25 to i8*
  %555 = getelementptr inbounds %class.sk_sp.327, %class.sk_sp.327* %25, i64 0, i32 0
  %556 = bitcast %class.SkMatrix* %26 to i8*
  %557 = bitcast %class.sk_sp.327* %25 to %class.SkImage_Base**
  %558 = add nuw i32 %534, 1
  br label %559

559:                                              ; preds = %574, %539
  %560 = phi i32 [ 0, %539 ], [ %575, %574 ]
  br i1 %540, label %561, label %563

561:                                              ; preds = %559
  %562 = add nuw i32 %560, 1
  br label %574

563:                                              ; preds = %559
  %564 = mul nsw i32 %560, %509
  %565 = sitofp i32 %564 to float
  %566 = add nuw i32 %560, 1
  %567 = mul nsw i32 %566, %509
  %568 = sitofp i32 %567 to float
  %569 = fcmp olt float %565, %525
  %570 = select i1 %569, float %525, float %565
  %571 = fcmp olt float %528, %568
  %572 = select i1 %571, float %528, float %568
  %573 = fcmp olt float %570, %572
  br label %577

574:                                              ; preds = %795, %561
  %575 = phi i32 [ %562, %561 ], [ %566, %795 ]
  %576 = icmp eq i32 %575, %558
  br i1 %576, label %797, label %559

577:                                              ; preds = %795, %563
  %578 = phi i32 [ 0, %563 ], [ %581, %795 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %541) #12
  %579 = mul nsw i32 %578, %509
  %580 = sitofp i32 %579 to float
  %581 = add nuw i32 %578, 1
  %582 = mul nsw i32 %581, %509
  %583 = sitofp i32 %582 to float
  store float %565, float* %542, align 16
  store float %580, float* %543, align 4
  store float %568, float* %544, align 8
  store float %583, float* %545, align 4
  %584 = fcmp olt float %580, %526
  %585 = select i1 %584, float %526, float %580
  %586 = fcmp olt float %531, %583
  %587 = select i1 %586, float %531, float %583
  %588 = fcmp olt float %585, %587
  %589 = and i1 %573, %588
  br i1 %589, label %590, label %795

590:                                              ; preds = %577
  %591 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %20, %struct.SkRect* nonnull dereferenceable(16) %28) #12
  br i1 %591, label %592, label %795

592:                                              ; preds = %590
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %546) #12
  %593 = load float, float* %542, align 16
  %594 = call float @llvm.floor.f32(float %593) #12
  %595 = load float, float* %543, align 4
  %596 = call float @llvm.floor.f32(float %595) #12
  %597 = load float, float* %544, align 8
  %598 = call float @llvm.ceil.f32(float %597) #12
  %599 = load float, float* %545, align 4
  %600 = call float @llvm.ceil.f32(float %599) #12
  %601 = insertelement <4 x float> undef, float %594, i32 0
  %602 = insertelement <4 x float> %601, float %596, i32 1
  %603 = insertelement <4 x float> %602, float %598, i32 2
  %604 = insertelement <4 x float> %603, float %600, i32 3
  %605 = fcmp olt <4 x float> %604, <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %606 = select <4 x i1> %605, <4 x float> %604, <4 x float> <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %607 = fcmp ogt <4 x float> %606, <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %608 = select <4 x i1> %607, <4 x float> %606, <4 x float> <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %609 = fptosi <4 x float> %608 to <4 x i32>
  store <4 x i32> %609, <4 x i32>* %21, align 16
  %610 = extractelement <4 x i32> %609, i32 0
  %611 = sitofp i32 %610 to float
  %612 = extractelement <4 x i32> %609, i32 1
  %613 = sitofp i32 %612 to float
  %614 = insertelement <2 x float> undef, float %611, i32 0
  %615 = insertelement <2 x float> %614, float %613, i32 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %551) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %551, i8* nonnull align 16 %541, i64 16, i1 false) #12
  %616 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %30, %struct.SkRect* nonnull %23, %struct.SkRect* nonnull dereferenceable(16) %23, i32 1) #12
  %617 = load i32, i32* %523, align 4
  %618 = icmp eq i32 %617, 0
  %619 = load i8, i8* %519, align 8
  %620 = icmp eq i8 %619, 0
  %621 = and i1 %618, %620
  br i1 %621, label %738, label %622

622:                                              ; preds = %592
  br i1 %552, label %623, label %630

623:                                              ; preds = %622
  %624 = load i32, i32* %532, align 8
  %625 = load i32, i32* %535, align 4
  %626 = zext i32 %625 to i64
  %627 = shl nuw i64 %626, 32
  %628 = zext i32 %624 to i64
  %629 = or i64 %627, %628
  br label %663

630:                                              ; preds = %622
  %631 = load float, float* %38, align 4
  %632 = call float @llvm.floor.f32(float %631) #12
  %633 = fcmp olt float %632, 0x41DFFFFFE0000000
  %634 = select i1 %633, float %632, float 0x41DFFFFFE0000000
  %635 = fcmp ogt float %634, 0xC1DFFFFFE0000000
  %636 = select i1 %635, float %634, float 0xC1DFFFFFE0000000
  %637 = fptosi float %636 to i32
  %638 = load float, float* %39, align 4
  %639 = call float @llvm.floor.f32(float %638) #12
  %640 = fcmp olt float %639, 0x41DFFFFFE0000000
  %641 = select i1 %640, float %639, float 0x41DFFFFFE0000000
  %642 = fcmp ogt float %641, 0xC1DFFFFFE0000000
  %643 = select i1 %642, float %641, float 0xC1DFFFFFE0000000
  %644 = fptosi float %643 to i32
  %645 = load float, float* %40, align 4
  %646 = call float @llvm.ceil.f32(float %645) #12
  %647 = fcmp olt float %646, 0x41DFFFFFE0000000
  %648 = select i1 %647, float %646, float 0x41DFFFFFE0000000
  %649 = fcmp ogt float %648, 0xC1DFFFFFE0000000
  %650 = select i1 %649, float %648, float 0xC1DFFFFFE0000000
  %651 = fptosi float %650 to i32
  %652 = load float, float* %41, align 4
  %653 = call float @llvm.ceil.f32(float %652) #12
  %654 = fcmp olt float %653, 0x41DFFFFFE0000000
  %655 = select i1 %654, float %653, float 0x41DFFFFFE0000000
  %656 = fcmp ogt float %655, 0xC1DFFFFFE0000000
  %657 = select i1 %656, float %655, float 0xC1DFFFFFE0000000
  %658 = fptosi float %657 to i32
  %659 = zext i32 %651 to i64
  %660 = zext i32 %658 to i64
  %661 = shl nuw i64 %660, 32
  %662 = or i64 %661, %659
  br label %663

663:                                              ; preds = %630, %623
  %664 = phi i32 [ 0, %623 ], [ %644, %630 ]
  %665 = phi i32 [ 0, %623 ], [ %637, %630 ]
  %666 = phi i64 [ %629, %623 ], [ %662, %630 ]
  %667 = select i1 %620, i32 1, i32 2
  %668 = sub nsw i32 0, %667
  %669 = load i32, i32* %547, align 16
  %670 = sext i32 %669 to i64
  %671 = sext i32 %668 to i64
  %672 = add nsw i64 %670, %671
  %673 = icmp slt i64 %672, 2147483647
  %674 = select i1 %673, i64 %672, i64 2147483647
  %675 = icmp sgt i64 %674, -2147483647
  %676 = select i1 %675, i64 %674, i64 -2147483647
  %677 = trunc i64 %676 to i32
  store i32 %677, i32* %547, align 16
  %678 = load i32, i32* %548, align 4
  %679 = sext i32 %678 to i64
  %680 = add nsw i64 %679, %671
  %681 = icmp slt i64 %680, 2147483647
  %682 = select i1 %681, i64 %680, i64 2147483647
  %683 = icmp sgt i64 %682, -2147483647
  %684 = select i1 %683, i64 %682, i64 -2147483647
  %685 = trunc i64 %684 to i32
  store i32 %685, i32* %548, align 4
  %686 = load i32, i32* %549, align 8
  %687 = sext i32 %686 to i64
  %688 = sub nsw i64 %687, %671
  %689 = icmp slt i64 %688, 2147483647
  %690 = select i1 %689, i64 %688, i64 2147483647
  %691 = icmp sgt i64 %690, -2147483647
  %692 = select i1 %691, i64 %690, i64 -2147483647
  %693 = trunc i64 %692 to i32
  store i32 %693, i32* %549, align 8
  %694 = load i32, i32* %550, align 4
  %695 = sext i32 %694 to i64
  %696 = sub nsw i64 %695, %671
  %697 = icmp slt i64 %696, 2147483647
  %698 = select i1 %697, i64 %696, i64 2147483647
  %699 = icmp sgt i64 %698, -2147483647
  %700 = select i1 %699, i64 %698, i64 -2147483647
  %701 = trunc i64 %700 to i32
  store i32 %701, i32* %550, align 4
  %702 = sub nsw i32 %665, %677
  %703 = icmp sgt i32 %702, 0
  br i1 %703, label %704, label %709

704:                                              ; preds = %663
  %705 = sub nsw i32 %667, %702
  %706 = sitofp i32 %705 to float
  %707 = fsub float %611, %706
  %708 = insertelement <2 x float> %615, float %707, i32 0
  store i32 %665, i32* %547, align 16
  br label %713

709:                                              ; preds = %663
  %710 = sitofp i32 %667 to float
  %711 = fsub float %611, %710
  %712 = insertelement <2 x float> %615, float %711, i32 0
  br label %713

713:                                              ; preds = %709, %704
  %714 = phi <2 x float> [ %708, %704 ], [ %712, %709 ]
  %715 = sub nsw i32 %664, %685
  %716 = icmp sgt i32 %715, 0
  br i1 %716, label %717, label %723

717:                                              ; preds = %713
  %718 = sub nsw i32 %667, %715
  %719 = sitofp i32 %718 to float
  %720 = extractelement <2 x float> %714, i32 1
  %721 = fsub float %720, %719
  %722 = insertelement <2 x float> %714, float %721, i32 1
  store i32 %664, i32* %548, align 4
  br label %728

723:                                              ; preds = %713
  %724 = sitofp i32 %667 to float
  %725 = extractelement <2 x float> %714, i32 1
  %726 = fsub float %725, %724
  %727 = insertelement <2 x float> %714, float %726, i32 1
  br label %728

728:                                              ; preds = %723, %717
  %729 = phi <2 x float> [ %722, %717 ], [ %727, %723 ]
  %730 = trunc i64 %666 to i32
  %731 = icmp sgt i32 %693, %730
  br i1 %731, label %732, label %733

732:                                              ; preds = %728
  store i32 %730, i32* %549, align 8
  br label %733

733:                                              ; preds = %732, %728
  %734 = lshr i64 %666, 32
  %735 = trunc i64 %734 to i32
  %736 = icmp sgt i32 %701, %735
  br i1 %736, label %737, label %738

737:                                              ; preds = %733
  store i32 %735, i32* %550, align 4
  br label %738

738:                                              ; preds = %737, %733, %592
  %739 = phi <2 x float> [ %729, %733 ], [ %729, %737 ], [ %615, %592 ]
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %553) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %553, i8 -86, i64 56, i1 false) #12
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %24) #12
  %740 = call zeroext i1 @_ZNK8SkBitmap13extractSubsetEPS_RK7SkIRect(%class.SkBitmap* nonnull %35, %class.SkBitmap* nonnull %24, %struct.SkIRect* nonnull dereferenceable(16) %22) #12
  br i1 %740, label %741, label %794

741:                                              ; preds = %738
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %554) #12
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %555, align 8
  call void @_Z27SkMakeImageFromRasterBitmapRK8SkBitmap16SkCopyPixelsMode(%class.sk_sp.327* nonnull sret %25, %class.SkBitmap* nonnull dereferenceable(56) %24, i32 2) #12
  %742 = load float, float* %542, align 16
  br i1 %5, label %747, label %743

743:                                              ; preds = %741
  %744 = load float, float* %543, align 4
  %745 = load float, float* %544, align 8
  %746 = load float, float* %545, align 4
  br label %766

747:                                              ; preds = %741
  %748 = load float, float* %38, align 4
  %749 = fcmp ole float %742, %748
  %750 = zext i1 %749 to i32
  %751 = load float, float* %544, align 8
  %752 = load float, float* %40, align 4
  %753 = fcmp ult float %751, %752
  %754 = or i32 %750, 4
  %755 = select i1 %753, i32 %750, i32 %754
  %756 = load float, float* %543, align 4
  %757 = load float, float* %39, align 4
  %758 = fcmp ugt float %756, %757
  %759 = or i32 %755, 2
  %760 = select i1 %758, i32 %755, i32 %759
  %761 = load float, float* %545, align 4
  %762 = load float, float* %41, align 4
  %763 = fcmp ult float %761, %762
  br i1 %763, label %766, label %764

764:                                              ; preds = %747
  %765 = or i32 %760, 8
  br label %766

766:                                              ; preds = %764, %747, %743
  %767 = phi float [ %761, %747 ], [ %761, %764 ], [ %746, %743 ]
  %768 = phi float [ %751, %747 ], [ %751, %764 ], [ %745, %743 ]
  %769 = phi float [ %756, %747 ], [ %756, %764 ], [ %744, %743 ]
  %770 = phi i32 [ %760, %747 ], [ %765, %764 ], [ 0, %743 ]
  %771 = shufflevector <2 x float> %739, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %772 = insertelement <4 x float> undef, float %742, i32 0
  %773 = insertelement <4 x float> %772, float %769, i32 1
  %774 = insertelement <4 x float> %773, float %768, i32 2
  %775 = insertelement <4 x float> %774, float %767, i32 3
  %776 = fsub <4 x float> %775, %771
  store <4 x float> %776, <4 x float>* %19, align 16
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %556) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %556, i8* nonnull align 16 %44, i64 40, i1 false) #12
  %777 = extractelement <2 x float> %739, i32 0
  %778 = extractelement <2 x float> %739, i32 1
  %779 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix* nonnull %26, float %777, float %778) #12
  %780 = load %class.SkImage_Base*, %class.SkImage_Base** %557, align 8
  call fastcc void @_ZN12_GLOBAL__N_110draw_imageEP18GrRecordingContextP20GrSurfaceDrawContextPK6GrClipRK16SkMatrixProviderRK7SkPaintRK12SkImage_BaseRK6SkRectSI_PK7SkPointRK8SkMatrix4GrAA13GrQuadAAFlagsN8SkCanvas17SrcRectConstraintE17SkSamplingOptions10SkTileMode(%class.GrRecordingContext* %517, %class.GrSurfaceDrawContext* %518, %class.GrClip* %381, %class.SkMatrixProvider* nonnull dereferenceable(112) %343, %class.SkPaint* dereferenceable(72) %9, %class.SkImage_Base* dereferenceable(48) %780, %struct.SkRect* nonnull dereferenceable(16) %20, %struct.SkRect* nonnull dereferenceable(16) %23, %struct.SkPoint* null, %class.SkMatrix* nonnull dereferenceable(40) %26, i1 zeroext %5, i32 %770, i32 %229, %struct.SkSamplingOptions* nonnull byval(%struct.SkSamplingOptions) align 8 %27, i32 %231) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %556) #12
  %781 = load %class.SkImage*, %class.SkImage** %555, align 8
  %782 = icmp eq %class.SkImage* %781, null
  br i1 %782, label %793, label %783

783:                                              ; preds = %766
  %784 = getelementptr inbounds %class.SkImage, %class.SkImage* %781, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %785 = atomicrmw add i32* %784, i32 -1 acq_rel
  %786 = icmp eq i32 %785, 1
  br i1 %786, label %787, label %793

787:                                              ; preds = %783
  %788 = bitcast %class.SkImage* %781 to %class.SkRefCntBase*
  %789 = bitcast %class.SkImage* %781 to void (%class.SkRefCntBase*)***
  %790 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %789, align 8
  %791 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %790, i64 2
  %792 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %791, align 8
  call void %792(%class.SkRefCntBase* nonnull %788) #12
  br label %793

793:                                              ; preds = %787, %783, %766
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %554) #12
  br label %794

794:                                              ; preds = %793, %738
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %553) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %551) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %546) #12
  br label %795

795:                                              ; preds = %794, %590, %577
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %541) #12
  %796 = icmp eq i32 %578, %537
  br i1 %796, label %574, label %577

797:                                              ; preds = %574, %516
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %519)
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %510) #12
  br label %809

798:                                              ; preds = %505
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %510) #12
  br label %799

799:                                              ; preds = %376, %798, %479, %482, %384
  %800 = load %class.GrRecordingContext*, %class.GrRecordingContext** %356, align 8
  %801 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %802 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %801, align 8
  %803 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %36, i64 0, i32 0
  store i8 %377, i8* %803, align 8
  %804 = getelementptr inbounds i8, i8* %803, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %804, i8* nonnull align 1 %344, i64 3, i1 false)
  %805 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %36, i64 0, i32 1, i32 0
  store float %378, float* %805, align 4
  %806 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %36, i64 0, i32 1, i32 1
  store float %379, float* %806, align 8
  %807 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %36, i64 0, i32 2
  store i32 %353, i32* %807, align 4
  %808 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %36, i64 0, i32 3
  store i32 %380, i32* %808, align 8
  call fastcc void @_ZN12_GLOBAL__N_110draw_imageEP18GrRecordingContextP20GrSurfaceDrawContextPK6GrClipRK16SkMatrixProviderRK7SkPaintRK12SkImage_BaseRK6SkRectSI_PK7SkPointRK8SkMatrix4GrAA13GrQuadAAFlagsN8SkCanvas17SrcRectConstraintE17SkSamplingOptions10SkTileMode(%class.GrRecordingContext* %800, %class.GrSurfaceDrawContext* %802, %class.GrClip* %381, %class.SkMatrixProvider* nonnull dereferenceable(112) %343, %class.SkPaint* dereferenceable(72) %9, %class.SkImage_Base* dereferenceable(48) %383, %struct.SkRect* nonnull dereferenceable(16) %28, %struct.SkRect* nonnull dereferenceable(16) %29, %struct.SkPoint* %4, %class.SkMatrix* nonnull dereferenceable(40) %30, i1 zeroext %5, i32 %6, i32 %229, %struct.SkSamplingOptions* nonnull byval(%struct.SkSamplingOptions) align 8 %36, i32 0)
  br label %809

809:                                              ; preds = %797, %799
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %344)
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %232) #12
  br label %810

810:                                              ; preds = %195, %809
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %44) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #12
  ret void
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK7SkImage15isTextureBackedEv(%class.SkImage*) local_unnamed_addr #2

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkGpuDevice18drawEdgeAAImageSetEPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintNS0_17SrcRectConstraintE(%class.SkGpuDevice*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions* nocapture readonly dereferenceable(20), %class.SkPaint* dereferenceable(72), i32) unnamed_addr #3 align 2 {
  %9 = alloca %"struct.SkCanvas::ImageSetEntry"*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %class.SkTCopyOnFirstWrite, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %class.SkAutoTArray.296, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %class.anon, align 8
  %19 = alloca %class.GrSurfaceProxyView, align 8
  %20 = alloca %"class.std::__1::tuple.304", align 8
  %21 = alloca %class.GrSwizzle, align 2
  %22 = alloca %class.SkTCopyOnFirstWrite, align 8
  store %"struct.SkCanvas::ImageSetEntry"* %1, %"struct.SkCanvas::ImageSetEntry"** %9, align 8
  store i32 %7, i32* %10, align 4
  %23 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %5, i64 0, i32 0
  %24 = load i8, i8* %23, align 4, !range !7
  %25 = icmp eq i8 %24, 0
  %26 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %5, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %6, i64 0, i32 3, i32 0
  %29 = load %class.SkColorFilter*, %class.SkColorFilter** %28, align 8
  %30 = icmp eq %class.SkColorFilter* %29, null
  br i1 %30, label %31, label %46

31:                                               ; preds = %8
  %32 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %6, i64 0, i32 1, i32 0
  %33 = load %class.SkShader*, %class.SkShader** %32, align 8
  %34 = icmp eq %class.SkShader* %33, null
  br i1 %34, label %35, label %46

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %6, i64 0, i32 2, i32 0
  %37 = load %class.SkMaskFilter*, %class.SkMaskFilter** %36, align 8
  %38 = icmp eq %class.SkMaskFilter* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %6, i64 0, i32 4, i32 0
  %41 = load %class.SkImageFilter*, %class.SkImageFilter** %40, align 8
  %42 = icmp eq %class.SkImageFilter* %41, null
  %43 = icmp eq i32 %27, 0
  %44 = and i1 %25, %43
  %45 = and i1 %42, %44
  br i1 %45, label %111, label %46

46:                                               ; preds = %39, %35, %31, %8
  %47 = icmp sgt i32 %2, 0
  br i1 %47, label %48, label %550

48:                                               ; preds = %46
  %49 = bitcast %class.SkTCopyOnFirstWrite* %11 to i8*
  %50 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %11, i64 0, i32 0
  %51 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %11, i64 0, i32 1, i32 1
  %52 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %6, i64 0, i32 5, i32 3
  %53 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %11, i64 0, i32 1
  %54 = bitcast %class.SkTLazy* %53 to %class.SkPaint*
  %55 = bitcast %class.SkPaint** %51 to %class.SkTLazy**
  %56 = ptrtoint %class.SkTLazy* %53 to i64
  %57 = bitcast %class.SkTCopyOnFirstWrite* %11 to i64*
  %58 = zext i32 %2 to i64
  %59 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %11, i64 0, i32 1, i32 0, i64 0
  br label %60

60:                                               ; preds = %109, %48
  %61 = phi %"struct.SkCanvas::ImageSetEntry"* [ %1, %48 ], [ %110, %109 ]
  %62 = phi i64 [ 0, %48 ], [ %107, %109 ]
  %63 = phi i32 [ 0, %48 ], [ %102, %109 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %49) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 72, i1 false)
  store %class.SkPaint* %6, %class.SkPaint** %50, align 8
  store %class.SkPaint* null, %class.SkPaint** %51, align 8
  %64 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %61, i64 %62, i32 4
  %65 = load float, float* %64, align 4
  %66 = fcmp une float %65, 1.000000e+00
  br i1 %66, label %67, label %75

67:                                               ; preds = %60
  %68 = load float, float* %52, align 4
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %54, %class.SkPaint* dereferenceable(72) %6) #12
  store %class.SkTLazy* %53, %class.SkTLazy** %55, align 8
  store i64 %56, i64* %57, align 8
  %69 = load %"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"** %9, align 8
  %70 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %69, i64 %62, i32 4
  %71 = load float, float* %70, align 4
  %72 = fmul float %68, %71
  call void @_ZN7SkPaint9setAlphafEf(%class.SkPaint* %54, float %72) #12
  %73 = load %"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"** %9, align 8
  %74 = load %class.SkPaint*, %class.SkPaint** %50, align 8
  br label %75

75:                                               ; preds = %67, %60
  %76 = phi %class.SkPaint* [ %74, %67 ], [ %6, %60 ]
  %77 = phi %"struct.SkCanvas::ImageSetEntry"* [ %73, %67 ], [ %61, %60 ]
  %78 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %77, i64 %62, i32 0, i32 0
  %79 = load %class.SkImage*, %class.SkImage** %78, align 8
  %80 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %77, i64 %62, i32 1
  %81 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %77, i64 %62, i32 2
  %82 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %77, i64 %62, i32 6
  %83 = load i8, i8* %82, align 4, !range !7
  %84 = icmp eq i8 %83, 0
  %85 = zext i32 %63 to i64
  %86 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %85
  %87 = select i1 %84, %struct.SkPoint* null, %struct.SkPoint* %86
  %88 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %77, i64 %62, i32 5
  %89 = load i32, i32* %88, align 8
  %90 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %77, i64 %62, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = icmp slt i32 %91, 0
  %93 = sext i32 %91 to i64
  %94 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 %93
  %95 = select i1 %92, %class.SkMatrix* null, %class.SkMatrix* %94
  %96 = load i32, i32* %10, align 4
  call void @_ZN11SkGpuDevice13drawImageQuadEPK7SkImagePK6SkRectS5_PK7SkPoint4GrAA13GrQuadAAFlagsPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintN8SkCanvas17SrcRectConstraintE(%class.SkGpuDevice* %0, %class.SkImage* %79, %struct.SkRect* %80, %struct.SkRect* %81, %struct.SkPoint* %87, i1 zeroext true, i32 %89, %class.SkMatrix* %95, %struct.SkSamplingOptions* dereferenceable(20) %5, %class.SkPaint* dereferenceable(72) %76, i32 %96)
  %97 = load %"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"** %9, align 8
  %98 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %97, i64 %62, i32 6
  %99 = load i8, i8* %98, align 4, !range !7
  %100 = shl nuw nsw i8 %99, 2
  %101 = zext i8 %100 to i32
  %102 = add nuw nsw i32 %63, %101
  %103 = load %class.SkPaint*, %class.SkPaint** %51, align 8
  %104 = icmp eq %class.SkPaint* %103, null
  br i1 %104, label %106, label %105

105:                                              ; preds = %75
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %103) #12
  store %class.SkPaint* null, %class.SkPaint** %51, align 8
  br label %106

106:                                              ; preds = %75, %105
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %49) #12
  %107 = add nuw nsw i64 %62, 1
  %108 = icmp eq i64 %107, %58
  br i1 %108, label %550, label %109

109:                                              ; preds = %106
  %110 = load %"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"** %9, align 8
  br label %60

111:                                              ; preds = %39
  %112 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112) #12
  %113 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %5, i64 0, i32 2
  %114 = load i32, i32* %113, align 4
  %115 = icmp ne i32 %114, 0
  %116 = zext i1 %115 to i32
  store i32 %116, i32* %12, align 4
  %117 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %117) #12
  %118 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %6, i64 0, i32 8, i32 0, i32 0
  %119 = load i32, i32* %118, align 8
  %120 = lshr i32 %119, 10
  %121 = and i32 %120, 255
  store i32 %121, i32* %13, align 4
  %122 = bitcast %class.SkAutoTArray.296* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #12
  %123 = getelementptr inbounds %class.SkAutoTArray.296, %class.SkAutoTArray.296* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.GrSurfaceDrawContext::TextureSetEntry"* inttoptr (i64 -6148914691236517206 to %"struct.GrSurfaceDrawContext::TextureSetEntry"*), %"struct.GrSurfaceDrawContext::TextureSetEntry"** %123, align 8
  call void @_ZN12SkAutoTArrayIN20GrSurfaceDrawContext15TextureSetEntryEEC2Ei(%class.SkAutoTArray.296* nonnull %14, i32 %2)
  %124 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %124) #12
  store i32 0, i32* %15, align 4
  %125 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125) #12
  store i32 0, i32* %16, align 4
  %126 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %126) #12
  store i32 0, i32* %17, align 4
  %127 = bitcast %class.anon* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %127) #12
  %128 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 0
  store i32* %16, i32** %128, align 8
  %129 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 1
  store %"struct.SkCanvas::ImageSetEntry"** %9, %"struct.SkCanvas::ImageSetEntry"*** %129, align 8
  %130 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 2
  store i32* %15, i32** %130, align 8
  %131 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 3
  store %class.SkGpuDevice* %0, %class.SkGpuDevice** %131, align 8
  %132 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 4
  store %class.SkAutoTArray.296* %14, %class.SkAutoTArray.296** %132, align 8
  %133 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 5
  store i32* %17, i32** %133, align 8
  %134 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 6
  store i32* %12, i32** %134, align 8
  %135 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 7
  store i32* %13, i32** %135, align 8
  %136 = getelementptr inbounds %class.anon, %class.anon* %18, i64 0, i32 8
  store i32* %10, i32** %136, align 8
  %137 = icmp sgt i32 %2, 0
  br i1 %137, label %138, label %170

138:                                              ; preds = %111
  %139 = bitcast %class.GrSurfaceProxyView* %19 to i8*
  %140 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %19, i64 0, i32 0, i32 0
  %141 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %19, i64 0, i32 1
  %142 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %19, i64 0, i32 2, i32 0
  %143 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %19, i64 0, i32 2
  %144 = bitcast %"class.std::__1::tuple.304"* %20 to i8*
  %145 = bitcast %class.SkGpuDevice* %0 to %class.GrRecordingContext* (%class.SkGpuDevice*)***
  %146 = getelementptr inbounds %"class.std::__1::tuple.304", %"class.std::__1::tuple.304"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = bitcast %"class.std::__1::tuple.304"* %20 to i64*
  %148 = bitcast %class.GrSurfaceProxyView* %19 to i64*
  %149 = getelementptr inbounds %"class.std::__1::tuple.304", %"class.std::__1::tuple.304"* %20, i64 0, i32 0, i32 0, i32 0, i32 1
  %150 = getelementptr inbounds %"class.std::__1::tuple.304", %"class.std::__1::tuple.304"* %20, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %151 = bitcast %class.GrSwizzle* %21 to i8*
  %152 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %21, i64 0, i32 0
  %153 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %6, i64 0, i32 5
  %154 = bitcast %struct.SkRGBA4f* %153 to <2 x float>*
  %155 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %6, i64 0, i32 5, i32 2
  %156 = bitcast float* %155 to <2 x float>*
  %157 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %158 = bitcast %class.SkTCopyOnFirstWrite* %22 to i8*
  %159 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %22, i64 0, i32 0
  %160 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %22, i64 0, i32 1, i32 1
  %161 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %6, i64 0, i32 5, i32 3
  %162 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %22, i64 0, i32 1
  %163 = bitcast %class.SkTLazy* %162 to %class.SkPaint*
  %164 = bitcast %class.SkPaint** %160 to %class.SkTLazy**
  %165 = ptrtoint %class.SkTLazy* %162 to i64
  %166 = bitcast %class.SkTCopyOnFirstWrite* %22 to i64*
  %167 = zext i32 %2 to i64
  %168 = bitcast %class.GrSurfaceProxyView* %19 to i8*
  %169 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %22, i64 0, i32 1, i32 0, i64 0
  br label %203

170:                                              ; preds = %547, %111
  call fastcc void @"_ZZN11SkGpuDevice18drawEdgeAAImageSetEPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintNS0_17SrcRectConstraintEENK3$_0clEi"(%class.anon* nonnull %18, i32 %2)
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %127) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %126) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %124) #12
  %171 = load %"struct.GrSurfaceDrawContext::TextureSetEntry"*, %"struct.GrSurfaceDrawContext::TextureSetEntry"** %123, align 8
  store %"struct.GrSurfaceDrawContext::TextureSetEntry"* null, %"struct.GrSurfaceDrawContext::TextureSetEntry"** %123, align 8
  %172 = icmp eq %"struct.GrSurfaceDrawContext::TextureSetEntry"* %171, null
  br i1 %172, label %202, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %171, i64 -1, i32 8
  %175 = bitcast i32* %174 to i8*
  %176 = bitcast i32* %174 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %201, label %179

179:                                              ; preds = %173
  %180 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %171, i64 %177
  br label %181

181:                                              ; preds = %199, %179
  %182 = phi %"struct.GrSurfaceDrawContext::TextureSetEntry"* [ %183, %199 ], [ %180, %179 ]
  %183 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %182, i64 -1
  %184 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %183, i64 0, i32 0, i32 0, i32 0
  %185 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %184, align 8
  %186 = icmp eq %class.GrSurfaceProxy* %185, null
  br i1 %186, label %199, label %187

187:                                              ; preds = %181
  %188 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %185, i64 0, i32 1
  %189 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %188, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = atomicrmw add i32* %189, i32 -1 acq_rel
  %191 = icmp eq i32 %190, 1
  br i1 %191, label %192, label %199

192:                                              ; preds = %187
  %193 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %188, i64 -2
  %194 = bitcast %class.SkNVRefCnt.78* %193 to %class.GrSurfaceProxy*
  %195 = bitcast %class.SkNVRefCnt.78* %193 to void (%class.GrSurfaceProxy*)***
  %196 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %195, align 8
  %197 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %196, i64 1
  %198 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %197, align 8
  call void %198(%class.GrSurfaceProxy* nonnull %194) #12
  br label %199

199:                                              ; preds = %192, %187, %181
  %200 = icmp eq %"struct.GrSurfaceDrawContext::TextureSetEntry"* %183, %171
  br i1 %200, label %201, label %181

201:                                              ; preds = %199, %173
  call void @_ZdaPv(i8* %175) #13
  br label %202

202:                                              ; preds = %170, %201
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %117) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #12
  br label %550

203:                                              ; preds = %547, %138
  %204 = phi i64 [ 0, %138 ], [ %548, %547 ]
  %205 = phi i32 [ 0, %138 ], [ %215, %547 ]
  %206 = load %"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"** %9, align 8
  %207 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %206, i64 %204, i32 6
  %208 = load i8, i8* %207, align 4, !range !7
  %209 = icmp eq i8 %208, 0
  %210 = zext i32 %205 to i64
  %211 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %210
  %212 = select i1 %209, %struct.SkPoint* null, %struct.SkPoint* %211
  %213 = shl nuw nsw i8 %208, 2
  %214 = zext i8 %213 to i32
  %215 = add nuw nsw i32 %205, %214
  %216 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %206, i64 %204, i32 1, i32 0
  %217 = load float, float* %216, align 4
  %218 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %206, i64 %204, i32 1, i32 2
  %219 = load float, float* %218, align 4
  %220 = fcmp ugt float %217, %219
  br i1 %220, label %227, label %221

221:                                              ; preds = %203
  %222 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %206, i64 %204, i32 1, i32 1
  %223 = load float, float* %222, align 4
  %224 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %206, i64 %204, i32 1, i32 3
  %225 = load float, float* %224, align 4
  %226 = fcmp ugt float %223, %225
  br i1 %226, label %227, label %230

227:                                              ; preds = %221, %203
  %228 = add nuw nsw i64 %204, 1
  %229 = trunc i64 %228 to i32
  call fastcc void @"_ZZN11SkGpuDevice18drawEdgeAAImageSetEPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintNS0_17SrcRectConstraintEENK3$_0clEi"(%class.anon* nonnull %18, i32 %229)
  br label %547

230:                                              ; preds = %221
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 16, i1 false)
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %140, align 8
  store i32 0, i32* %141, align 8
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %143, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #12
  %231 = load %"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"** %9, align 8
  %232 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %231, i64 %204, i32 0, i32 0
  %233 = load %class.SkImage*, %class.SkImage** %232, align 8
  %234 = bitcast %class.SkImage* %233 to %class.SkImage_Base*
  %235 = bitcast %class.SkImage* %233 to i1 (%class.SkImage_Base*)***
  %236 = load i1 (%class.SkImage_Base*)**, i1 (%class.SkImage_Base*)*** %235, align 8
  %237 = getelementptr inbounds i1 (%class.SkImage_Base*)*, i1 (%class.SkImage_Base*)** %236, i64 12
  %238 = load i1 (%class.SkImage_Base*)*, i1 (%class.SkImage_Base*)** %237, align 8
  %239 = call zeroext i1 %238(%class.SkImage_Base* %234) #12
  br i1 %239, label %332, label %240

240:                                              ; preds = %230
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #12
  %241 = load %class.GrRecordingContext* (%class.SkGpuDevice*)**, %class.GrRecordingContext* (%class.SkGpuDevice*)*** %145, align 16
  %242 = getelementptr inbounds %class.GrRecordingContext* (%class.SkGpuDevice*)*, %class.GrRecordingContext* (%class.SkGpuDevice*)** %241, i64 8
  %243 = load %class.GrRecordingContext* (%class.SkGpuDevice*)*, %class.GrRecordingContext* (%class.SkGpuDevice*)** %242, align 8
  %244 = call %class.GrRecordingContext* %243(%class.SkGpuDevice* %0) #12
  call void @_ZNK12SkImage_Base6asViewEP18GrRecordingContext11GrMipmapped19GrImageTexGenPolicy(%"class.std::__1::tuple.304"* nonnull sret %20, %class.SkImage_Base* %234, %class.GrRecordingContext* %244, i1 zeroext false, i32 0) #12
  %245 = load i64, i64* %147, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %146, align 8
  %246 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %140, align 8
  store i64 %245, i64* %148, align 8
  %247 = icmp eq %class.GrSurfaceProxy* %246, null
  br i1 %247, label %248, label %251

248:                                              ; preds = %240
  %249 = load i32, i32* %149, align 8
  store i32 %249, i32* %141, align 8
  %250 = load i16, i16* %150, align 4
  store i16 %250, i16* %142, align 4
  br label %280

251:                                              ; preds = %240
  %252 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %246, i64 0, i32 1
  %253 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %252, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = atomicrmw add i32* %253, i32 -1 acq_rel
  %255 = icmp eq i32 %254, 1
  br i1 %255, label %256, label %263

256:                                              ; preds = %251
  %257 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %252, i64 -2
  %258 = bitcast %class.SkNVRefCnt.78* %257 to %class.GrSurfaceProxy*
  %259 = bitcast %class.SkNVRefCnt.78* %257 to void (%class.GrSurfaceProxy*)***
  %260 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %259, align 8
  %261 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %260, i64 1
  %262 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %261, align 8
  call void %262(%class.GrSurfaceProxy* nonnull %258) #12
  br label %263

263:                                              ; preds = %251, %256
  %264 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %146, align 8
  %265 = load i32, i32* %149, align 8
  store i32 %265, i32* %141, align 8
  %266 = load i16, i16* %150, align 4
  store i16 %266, i16* %142, align 4
  %267 = icmp eq %class.GrSurfaceProxy* %264, null
  br i1 %267, label %280, label %268

268:                                              ; preds = %263
  %269 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %264, i64 0, i32 1
  %270 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %269, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %271 = atomicrmw add i32* %270, i32 -1 acq_rel
  %272 = icmp eq i32 %271, 1
  br i1 %272, label %273, label %280

273:                                              ; preds = %268
  %274 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %269, i64 -2
  %275 = bitcast %class.SkNVRefCnt.78* %274 to %class.GrSurfaceProxy*
  %276 = bitcast %class.SkNVRefCnt.78* %274 to void (%class.GrSurfaceProxy*)***
  %277 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %276, align 8
  %278 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %277, i64 1
  %279 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %278, align 8
  call void %279(%class.GrSurfaceProxy* nonnull %275) #12
  br label %280

280:                                              ; preds = %248, %263, %268, %273
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #12
  %281 = call zeroext i1 @_ZNK7SkImage11isAlphaOnlyEv(%class.SkImage* %233) #12
  br i1 %281, label %282, label %332

282:                                              ; preds = %280
  %283 = load i16, i16* %142, align 4, !noalias !46
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %151) #12
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0))
  %284 = load i16, i16* %152, align 2, !noalias !49
  %285 = zext i16 %284 to i32
  %286 = zext i16 %283 to i32
  %287 = and i32 %285, 15
  switch i32 %287, label %288 [
    i32 4, label %294
    i32 5, label %293
  ]

288:                                              ; preds = %282
  %289 = shl nuw nsw i32 %287, 2
  %290 = lshr i32 %286, %289
  %291 = trunc i32 %290 to i16
  %292 = and i16 %291, 15
  br label %294

293:                                              ; preds = %282
  br label %294

294:                                              ; preds = %293, %288, %282
  %295 = phi i16 [ %292, %288 ], [ 4, %282 ], [ 5, %293 ]
  %296 = lshr i32 %285, 4
  %297 = and i32 %296, 15
  switch i32 %297, label %299 [
    i32 4, label %305
    i32 5, label %298
  ]

298:                                              ; preds = %294
  br label %305

299:                                              ; preds = %294
  %300 = shl nuw nsw i32 %297, 2
  %301 = lshr i32 %286, %300
  %302 = trunc i32 %301 to i16
  %303 = shl i16 %302, 4
  %304 = and i16 %303, 240
  br label %305

305:                                              ; preds = %299, %298, %294
  %306 = phi i16 [ %304, %299 ], [ 64, %294 ], [ 80, %298 ]
  %307 = or i16 %306, %295
  %308 = lshr i32 %285, 8
  %309 = and i32 %308, 15
  switch i32 %309, label %311 [
    i32 4, label %317
    i32 5, label %310
  ]

310:                                              ; preds = %305
  br label %317

311:                                              ; preds = %305
  %312 = shl nuw nsw i32 %309, 2
  %313 = lshr i32 %286, %312
  %314 = trunc i32 %313 to i16
  %315 = shl i16 %314, 8
  %316 = and i16 %315, 3840
  br label %317

317:                                              ; preds = %311, %310, %305
  %318 = phi i16 [ %316, %311 ], [ 1024, %305 ], [ 1280, %310 ]
  %319 = or i16 %307, %318
  %320 = lshr i32 %285, 12
  switch i32 %320, label %322 [
    i32 4, label %327
    i32 5, label %321
  ]

321:                                              ; preds = %317
  br label %327

322:                                              ; preds = %317
  %323 = shl nuw nsw i32 %320, 2
  %324 = lshr i32 %286, %323
  %325 = trunc i32 %324 to i16
  %326 = shl i16 %325, 12
  br label %327

327:                                              ; preds = %322, %321, %317
  %328 = phi i16 [ %326, %322 ], [ 16384, %317 ], [ 20480, %321 ]
  %329 = or i16 %319, %328
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %151) #12
  %330 = load i64, i64* %148, align 8, !noalias !52
  store i16 %329, i16* %142, align 4
  %331 = inttoptr i64 %330 to %class.GrSurfaceProxy*
  br label %335

332:                                              ; preds = %230, %280
  %333 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %140, align 8
  %334 = ptrtoint %class.GrSurfaceProxy* %333 to i64
  br label %335

335:                                              ; preds = %332, %327
  %336 = phi i64 [ %334, %332 ], [ %330, %327 ]
  %337 = phi %class.GrSurfaceProxy* [ %333, %332 ], [ %331, %327 ]
  %338 = icmp eq %class.GrSurfaceProxy* %337, null
  br i1 %338, label %339, label %372

339:                                              ; preds = %335
  %340 = trunc i64 %204 to i32
  %341 = add i32 %340, 1
  call fastcc void @"_ZZN11SkGpuDevice18drawEdgeAAImageSetEPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintNS0_17SrcRectConstraintEENK3$_0clEi"(%class.anon* nonnull %18, i32 %341)
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %158) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %169, i8 -86, i64 72, i1 false)
  store %class.SkPaint* %6, %class.SkPaint** %159, align 8
  store %class.SkPaint* null, %class.SkPaint** %160, align 8
  %342 = load %"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"** %9, align 8
  %343 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %342, i64 %204, i32 4
  %344 = load float, float* %343, align 4
  %345 = fcmp une float %344, 1.000000e+00
  br i1 %345, label %346, label %354

346:                                              ; preds = %339
  %347 = load float, float* %161, align 4
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %163, %class.SkPaint* dereferenceable(72) %6) #12
  store %class.SkTLazy* %162, %class.SkTLazy** %164, align 8
  store i64 %165, i64* %166, align 8
  %348 = load %"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"** %9, align 8
  %349 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %348, i64 %204, i32 4
  %350 = load float, float* %349, align 4
  %351 = fmul float %347, %350
  call void @_ZN7SkPaint9setAlphafEf(%class.SkPaint* %163, float %351) #12
  %352 = load %"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"** %9, align 8
  %353 = load %class.SkPaint*, %class.SkPaint** %159, align 8
  br label %354

354:                                              ; preds = %346, %339
  %355 = phi %class.SkPaint* [ %353, %346 ], [ %6, %339 ]
  %356 = phi %"struct.SkCanvas::ImageSetEntry"* [ %352, %346 ], [ %342, %339 ]
  %357 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %356, i64 %204, i32 1
  %358 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %356, i64 %204, i32 2
  %359 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %356, i64 %204, i32 5
  %360 = load i32, i32* %359, align 8
  %361 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %356, i64 %204, i32 3
  %362 = load i32, i32* %361, align 8
  %363 = icmp slt i32 %362, 0
  %364 = sext i32 %362 to i64
  %365 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 %364
  %366 = select i1 %363, %class.SkMatrix* null, %class.SkMatrix* %365
  %367 = load i32, i32* %10, align 4
  call void @_ZN11SkGpuDevice13drawImageQuadEPK7SkImagePK6SkRectS5_PK7SkPoint4GrAA13GrQuadAAFlagsPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintN8SkCanvas17SrcRectConstraintE(%class.SkGpuDevice* %0, %class.SkImage* %233, %struct.SkRect* %357, %struct.SkRect* %358, %struct.SkPoint* %212, i1 zeroext true, i32 %360, %class.SkMatrix* %366, %struct.SkSamplingOptions* dereferenceable(20) %5, %class.SkPaint* dereferenceable(72) %355, i32 %367)
  %368 = load %class.SkPaint*, %class.SkPaint** %160, align 8
  %369 = icmp eq %class.SkPaint* %368, null
  br i1 %369, label %371, label %370

370:                                              ; preds = %354
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %368) #12
  store %class.SkPaint* null, %class.SkPaint** %160, align 8
  br label %371

371:                                              ; preds = %354, %370
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %158) #12
  br label %530

372:                                              ; preds = %335
  %373 = load %"struct.GrSurfaceDrawContext::TextureSetEntry"*, %"struct.GrSurfaceDrawContext::TextureSetEntry"** %123, align 8
  %374 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %373, i64 %204, i32 0
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %140, align 8
  %375 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %374, i64 0, i32 0, i32 0
  %376 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %375, align 8
  %377 = bitcast %class.GrSurfaceProxyView* %374 to i64*
  store i64 %336, i64* %377, align 8
  %378 = icmp eq %class.GrSurfaceProxy* %376, null
  br i1 %378, label %391, label %379

379:                                              ; preds = %372
  %380 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %376, i64 0, i32 1
  %381 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %380, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %382 = atomicrmw add i32* %381, i32 -1 acq_rel
  %383 = icmp eq i32 %382, 1
  br i1 %383, label %384, label %391

384:                                              ; preds = %379
  %385 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %380, i64 -2
  %386 = bitcast %class.SkNVRefCnt.78* %385 to %class.GrSurfaceProxy*
  %387 = bitcast %class.SkNVRefCnt.78* %385 to void (%class.GrSurfaceProxy*)***
  %388 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %387, align 8
  %389 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %388, i64 1
  %390 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %389, align 8
  call void %390(%class.GrSurfaceProxy* nonnull %386) #12
  br label %391

391:                                              ; preds = %372, %379, %384
  %392 = load i32, i32* %141, align 8
  %393 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %373, i64 %204, i32 0, i32 1
  store i32 %392, i32* %393, align 8
  %394 = load i16, i16* %142, align 4
  %395 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %373, i64 %204, i32 0, i32 2, i32 0
  store i16 %394, i16* %395, align 2
  %396 = call i32 @_ZNK7SkImage9alphaTypeEv(%class.SkImage* %233) #12
  %397 = load %"struct.GrSurfaceDrawContext::TextureSetEntry"*, %"struct.GrSurfaceDrawContext::TextureSetEntry"** %123, align 8
  %398 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %397, i64 %204, i32 1
  store i32 %396, i32* %398, align 8
  %399 = load %"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"** %9, align 8
  %400 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %399, i64 %204, i32 1
  %401 = load %"struct.GrSurfaceDrawContext::TextureSetEntry"*, %"struct.GrSurfaceDrawContext::TextureSetEntry"** %123, align 8
  %402 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %401, i64 %204, i32 2
  %403 = bitcast %struct.SkRect* %402 to i8*
  %404 = bitcast %struct.SkRect* %400 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %403, i8* align 4 %404, i64 16, i1 false)
  %405 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %399, i64 %204, i32 2
  %406 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %401, i64 %204, i32 3
  %407 = bitcast %struct.SkRect* %406 to i8*
  %408 = bitcast %struct.SkRect* %405 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %407, i8* align 4 %408, i64 16, i1 false)
  %409 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %401, i64 %204, i32 5
  store %struct.SkPoint* %212, %struct.SkPoint** %409, align 8
  %410 = load %"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"** %9, align 8
  %411 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %410, i64 %204, i32 3
  %412 = load i32, i32* %411, align 8
  %413 = icmp slt i32 %412, 0
  %414 = sext i32 %412 to i64
  %415 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 %414
  %416 = select i1 %413, %class.SkMatrix* null, %class.SkMatrix* %415
  %417 = load %"struct.GrSurfaceDrawContext::TextureSetEntry"*, %"struct.GrSurfaceDrawContext::TextureSetEntry"** %123, align 8
  %418 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %417, i64 %204, i32 6
  store %class.SkMatrix* %416, %class.SkMatrix** %418, align 8
  %419 = load <2 x float>, <2 x float>* %154, align 8
  %420 = load <2 x float>, <2 x float>* %156, align 8
  %421 = load %"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"** %9, align 8
  %422 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %421, i64 %204, i32 4
  %423 = load float, float* %422, align 4
  %424 = call i32 @_ZNK7SkImage9colorTypeEv(%class.SkImage* %233) #12
  switch i32 %424, label %425 [
    i32 0, label %445
    i32 1, label %426
    i32 2, label %445
    i32 3, label %445
    i32 4, label %445
    i32 5, label %445
    i32 6, label %445
    i32 11, label %445
    i32 12, label %445
    i32 13, label %445
    i32 7, label %445
    i32 9, label %445
    i32 8, label %445
    i32 10, label %445
    i32 14, label %445
    i32 15, label %445
    i32 18, label %426
    i32 19, label %445
    i32 16, label %426
    i32 17, label %445
    i32 20, label %445
  ]

425:                                              ; preds = %391
  call void @llvm.trap() #12
  unreachable

426:                                              ; preds = %391, %391, %391
  %427 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %157, align 8
  %428 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %427, i64 0, i32 0, i32 0, i32 3
  %429 = extractelement <2 x float> %420, i32 1
  %430 = fmul float %429, %423
  %431 = insertelement <2 x float> %420, float %430, i32 1
  %432 = call { <2 x float>, <2 x float> } @_Z19SkColor4fPrepForDst8SkRGBA4fIL11SkAlphaType3EERK11GrColorInfo(<2 x float> %419, <2 x float> %431, %class.GrColorInfo* dereferenceable(24) %428) #12
  %433 = extractvalue { <2 x float>, <2 x float> } %432, 0
  %434 = extractvalue { <2 x float>, <2 x float> } %432, 1
  %435 = extractelement <2 x float> %433, i32 0
  %436 = extractelement <2 x float> %434, i32 1
  %437 = fmul float %435, %436
  %438 = insertelement <2 x float> undef, float %437, i32 0
  %439 = extractelement <2 x float> %433, i32 1
  %440 = fmul float %436, %439
  %441 = insertelement <2 x float> %438, float %440, i32 1
  %442 = extractelement <2 x float> %434, i32 0
  %443 = fmul float %436, %442
  %444 = insertelement <2 x float> %434, float %443, i32 0
  br label %454

445:                                              ; preds = %391, %391, %391, %391, %391, %391, %391, %391, %391, %391, %391, %391, %391, %391, %391, %391, %391, %391
  %446 = extractelement <2 x float> %420, i32 1
  %447 = fmul float %446, %423
  %448 = fcmp ogt float %447, 1.000000e+00
  %449 = select i1 %448, float 1.000000e+00, float %447
  %450 = fcmp ogt float %449, 0.000000e+00
  %451 = select i1 %450, float %449, float 0.000000e+00
  %452 = insertelement <2 x float> undef, float %451, i32 0
  %453 = shufflevector <2 x float> %452, <2 x float> undef, <2 x i32> zeroinitializer
  br label %454

454:                                              ; preds = %426, %445
  %455 = phi <2 x float> [ %441, %426 ], [ %453, %445 ]
  %456 = phi <2 x float> [ %444, %426 ], [ %453, %445 ]
  %457 = load %"struct.GrSurfaceDrawContext::TextureSetEntry"*, %"struct.GrSurfaceDrawContext::TextureSetEntry"** %123, align 8
  %458 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %457, i64 %204, i32 7
  %459 = bitcast %struct.SkRGBA4f.300* %458 to <2 x float>*
  store <2 x float> %455, <2 x float>* %459, align 8
  %460 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %457, i64 %204, i32 7, i32 2
  %461 = bitcast float* %460 to <2 x float>*
  store <2 x float> %456, <2 x float>* %461, align 8
  %462 = load %"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"** %9, align 8
  %463 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %462, i64 %204, i32 5
  %464 = load i32, i32* %463, align 8
  %465 = load %"struct.GrSurfaceDrawContext::TextureSetEntry"*, %"struct.GrSurfaceDrawContext::TextureSetEntry"** %123, align 8
  %466 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %465, i64 %204, i32 8
  store i32 %464, i32* %466, align 8
  %467 = load i32, i32* %16, align 4
  %468 = icmp sgt i32 %467, 0
  br i1 %468, label %469, label %515

469:                                              ; preds = %454
  %470 = load %"struct.GrSurfaceDrawContext::TextureSetEntry"*, %"struct.GrSurfaceDrawContext::TextureSetEntry"** %123, align 8
  %471 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %470, i64 %204, i32 0, i32 0, i32 0
  %472 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %471, align 8
  %473 = load i32, i32* %15, align 4
  %474 = sext i32 %473 to i64
  %475 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %470, i64 %474, i32 0, i32 0, i32 0
  %476 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %475, align 8
  %477 = call zeroext i1 @_ZN14GrTextureProxy34ProxiesAreCompatibleAsDynamicStateEPK14GrSurfaceProxyS2_(%class.GrSurfaceProxy* %472, %class.GrSurfaceProxy* %476) #12
  br i1 %477, label %478, label %511

478:                                              ; preds = %469
  %479 = load %"struct.GrSurfaceDrawContext::TextureSetEntry"*, %"struct.GrSurfaceDrawContext::TextureSetEntry"** %123, align 8
  %480 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %479, i64 %204, i32 0, i32 2, i32 0
  %481 = load i16, i16* %480, align 2, !noalias !55
  %482 = load i32, i32* %15, align 4
  %483 = sext i32 %482 to i64
  %484 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %479, i64 %483, i32 0, i32 2, i32 0
  %485 = load i16, i16* %484, align 2, !noalias !58
  %486 = icmp eq i16 %481, %485
  br i1 %486, label %487, label %511

487:                                              ; preds = %478
  %488 = load %"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"** %9, align 8
  %489 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %488, i64 %204, i32 0, i32 0
  %490 = load %class.SkImage*, %class.SkImage** %489, align 8
  %491 = call i32 @_ZNK7SkImage9alphaTypeEv(%class.SkImage* %490) #12
  %492 = load %"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"** %9, align 8
  %493 = load i32, i32* %15, align 4
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %492, i64 %494, i32 0, i32 0
  %496 = load %class.SkImage*, %class.SkImage** %495, align 8
  %497 = call i32 @_ZNK7SkImage9alphaTypeEv(%class.SkImage* %496) #12
  %498 = icmp eq i32 %491, %497
  br i1 %498, label %499, label %511

499:                                              ; preds = %487
  %500 = load %"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"** %9, align 8
  %501 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %500, i64 %204, i32 0, i32 0
  %502 = load %class.SkImage*, %class.SkImage** %501, align 8
  %503 = call %class.SkColorSpace* @_ZNK7SkImage10colorSpaceEv(%class.SkImage* %502) #12
  %504 = load %"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"** %9, align 8
  %505 = load i32, i32* %15, align 4
  %506 = sext i32 %505 to i64
  %507 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %504, i64 %506, i32 0, i32 0
  %508 = load %class.SkImage*, %class.SkImage** %507, align 8
  %509 = call %class.SkColorSpace* @_ZNK7SkImage10colorSpaceEv(%class.SkImage* %508) #12
  %510 = call zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace* %503, %class.SkColorSpace* %509) #12
  br i1 %510, label %513, label %511

511:                                              ; preds = %478, %469, %487, %499
  %512 = trunc i64 %204 to i32
  call fastcc void @"_ZZN11SkGpuDevice18drawEdgeAAImageSetEPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintNS0_17SrcRectConstraintEENK3$_0clEi"(%class.anon* nonnull %18, i32 %512)
  br label %513

513:                                              ; preds = %511, %499
  %514 = load i32, i32* %16, align 4
  br label %515

515:                                              ; preds = %513, %454
  %516 = phi i32 [ %514, %513 ], [ %467, %454 ]
  %517 = add nsw i32 %516, 1
  store i32 %517, i32* %16, align 4
  %518 = icmp eq i32 %516, 0
  br i1 %518, label %527, label %519

519:                                              ; preds = %515
  %520 = add nsw i64 %204, -1
  %521 = load %"struct.GrSurfaceDrawContext::TextureSetEntry"*, %"struct.GrSurfaceDrawContext::TextureSetEntry"** %123, align 8
  %522 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %521, i64 %520, i32 0, i32 0, i32 0
  %523 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %522, align 8
  %524 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %521, i64 %204, i32 0, i32 0, i32 0
  %525 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %524, align 8
  %526 = icmp eq %class.GrSurfaceProxy* %523, %525
  br i1 %526, label %530, label %527

527:                                              ; preds = %519, %515
  %528 = load i32, i32* %17, align 4
  %529 = add nsw i32 %528, 1
  store i32 %529, i32* %17, align 4
  br label %530

530:                                              ; preds = %527, %519, %371
  %531 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %140, align 8
  %532 = icmp eq %class.GrSurfaceProxy* %531, null
  br i1 %532, label %545, label %533

533:                                              ; preds = %530
  %534 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %531, i64 0, i32 1
  %535 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %534, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %536 = atomicrmw add i32* %535, i32 -1 acq_rel
  %537 = icmp eq i32 %536, 1
  br i1 %537, label %538, label %545

538:                                              ; preds = %533
  %539 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %534, i64 -2
  %540 = bitcast %class.SkNVRefCnt.78* %539 to %class.GrSurfaceProxy*
  %541 = bitcast %class.SkNVRefCnt.78* %539 to void (%class.GrSurfaceProxy*)***
  %542 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %541, align 8
  %543 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %542, i64 1
  %544 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %543, align 8
  call void %544(%class.GrSurfaceProxy* nonnull %540) #12
  br label %545

545:                                              ; preds = %530, %533, %538
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #12
  %546 = add nuw nsw i64 %204, 1
  br label %547

547:                                              ; preds = %545, %227
  %548 = phi i64 [ %546, %545 ], [ %228, %227 ]
  %549 = icmp eq i64 %548, %167
  br i1 %549, label %170, label %203

550:                                              ; preds = %106, %46, %202
  ret void
}

declare void @_ZN7SkPaint9setAlphafEf(%class.SkPaint*, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkAutoTArrayIN20GrSurfaceDrawContext15TextureSetEntryEEC2Ei(%class.SkAutoTArray.296*, i32) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %class.SkAutoTArray.296* %0 to i64*
  store i64 0, i64* %3, align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %58, label %5

5:                                                ; preds = %2
  %6 = sext i32 %1 to i64
  %7 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %6, i64 96)
  %8 = extractvalue { i64, i1 } %7, 1
  %9 = extractvalue { i64, i1 } %7, 0
  %10 = or i64 %9, 8
  %11 = select i1 %8, i64 -1, i64 %10
  %12 = tail call i8* @_Znam(i64 %11) #13
  %13 = bitcast i8* %12 to i64*
  store i64 %6, i64* %13, align 16
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  %15 = bitcast i8* %14 to %"struct.GrSurfaceDrawContext::TextureSetEntry"*
  %16 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %15, i64 %6
  br label %17

17:                                               ; preds = %17, %5
  %18 = phi %"struct.GrSurfaceDrawContext::TextureSetEntry"* [ %15, %5 ], [ %22, %17 ]
  %19 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %18, i64 0, i32 0, i32 0, i32 0
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %19, align 8
  %20 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %18, i64 0, i32 0, i32 1
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %18, i64 0, i32 0, i32 2
  tail call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #12
  %22 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %18, i64 1
  %23 = icmp eq %"struct.GrSurfaceDrawContext::TextureSetEntry"* %22, %16
  br i1 %23, label %24, label %17

24:                                               ; preds = %17
  %25 = getelementptr inbounds %class.SkAutoTArray.296, %class.SkAutoTArray.296* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.GrSurfaceDrawContext::TextureSetEntry"*, %"struct.GrSurfaceDrawContext::TextureSetEntry"** %25, align 8
  %27 = bitcast %class.SkAutoTArray.296* %0 to i8**
  store i8* %14, i8** %27, align 8
  %28 = icmp eq %"struct.GrSurfaceDrawContext::TextureSetEntry"* %26, null
  br i1 %28, label %58, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %26, i64 -1, i32 8
  %31 = bitcast i32* %30 to i8*
  %32 = bitcast i32* %30 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %57, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %26, i64 %33
  br label %37

37:                                               ; preds = %55, %35
  %38 = phi %"struct.GrSurfaceDrawContext::TextureSetEntry"* [ %39, %55 ], [ %36, %35 ]
  %39 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %38, i64 -1
  %40 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %40, align 8
  %42 = icmp eq %class.GrSurfaceProxy* %41, null
  br i1 %42, label %55, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %41, i64 0, i32 1
  %45 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %55

48:                                               ; preds = %43
  %49 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %44, i64 -2
  %50 = bitcast %class.SkNVRefCnt.78* %49 to %class.GrSurfaceProxy*
  %51 = bitcast %class.SkNVRefCnt.78* %49 to void (%class.GrSurfaceProxy*)***
  %52 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %52, i64 1
  %54 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %53, align 8
  tail call void %54(%class.GrSurfaceProxy* nonnull %50) #12
  br label %55

55:                                               ; preds = %48, %43, %37
  %56 = icmp eq %"struct.GrSurfaceDrawContext::TextureSetEntry"* %39, %26
  br i1 %56, label %57, label %37

57:                                               ; preds = %55, %29
  tail call void @_ZdaPv(i8* %31) #13
  br label %58

58:                                               ; preds = %57, %24, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZN11SkGpuDevice18drawEdgeAAImageSetEPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintNS0_17SrcRectConstraintEENK3$_0clEi"(%class.anon* nocapture readonly, i32) unnamed_addr #5 align 2 {
  %3 = alloca %class.sk_sp.197, align 8
  %4 = alloca %class.GrColorInfo, align 8
  %5 = alloca %class.sk_sp.197, align 8
  %6 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 3
  %7 = load %class.SkGpuDevice*, %class.SkGpuDevice** %6, align 8
  %8 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %108

12:                                               ; preds = %2
  %13 = bitcast %class.sk_sp.197* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = getelementptr inbounds %class.sk_sp.197, %class.sk_sp.197* %3, i64 0, i32 0
  store %class.GrColorSpaceXform* inttoptr (i64 -6148914691236517206 to %class.GrColorSpaceXform*), %class.GrColorSpaceXform** %14, align 8
  %15 = bitcast %class.GrColorInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 1
  %17 = load %"struct.SkCanvas::ImageSetEntry"**, %"struct.SkCanvas::ImageSetEntry"*** %16, align 8
  %18 = load %"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"** %17, align 8
  %19 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 2
  %20 = load i32*, i32** %19, align 8
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %18, i64 %22, i32 0, i32 0
  %24 = load %class.SkImage*, %class.SkImage** %23, align 8
  %25 = getelementptr inbounds %class.SkImage, %class.SkImage* %24, i64 0, i32 2, i32 0
  call void @_ZN11GrColorInfoC1ERK11SkColorInfo(%class.GrColorInfo* nonnull %4, %class.SkColorInfo* dereferenceable(16) %25) #12
  %26 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %27 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %26, align 8
  %28 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %27, i64 0, i32 0, i32 0, i32 3
  call void @_ZN17GrColorSpaceXform4MakeERK11GrColorInfoS2_(%class.sk_sp.197* nonnull sret %3, %class.GrColorInfo* nonnull dereferenceable(24) %4, %class.GrColorInfo* dereferenceable(24) %28) #12
  %29 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %4, i64 0, i32 1, i32 0
  %30 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %29, align 8
  %31 = icmp eq %class.GrColorSpaceXform* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %12
  %33 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %class.GrColorSpaceXform* %30 to %class.SkRefCntBase*
  %38 = bitcast %class.GrColorSpaceXform* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  call void %41(%class.SkRefCntBase* nonnull %37) #12
  br label %42

42:                                               ; preds = %36, %32, %12
  %43 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %4, i64 0, i32 0, i32 0
  %44 = load %class.SkColorSpace*, %class.SkColorSpace** %43, align 8
  %45 = icmp eq %class.SkColorSpace* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = bitcast %class.SkColorSpace* %44 to i8*
  call void @_ZdlPv(i8* %51) #13
  br label %52

52:                                               ; preds = %42, %46, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  %53 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %26, align 8
  %54 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %7, i64 0, i32 4, i32 0
  %55 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 4
  %56 = load %class.SkAutoTArray.296*, %class.SkAutoTArray.296** %55, align 8
  %57 = getelementptr inbounds %class.SkAutoTArray.296, %class.SkAutoTArray.296* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"struct.GrSurfaceDrawContext::TextureSetEntry"*, %"struct.GrSurfaceDrawContext::TextureSetEntry"** %57, align 8
  %59 = load i32*, i32** %19, align 8
  %60 = load i32, i32* %59, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %58, i64 %61
  %63 = load i32*, i32** %8, align 8
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 5
  %66 = load i32*, i32** %65, align 8
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 6
  %69 = load i32*, i32** %68, align 8
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 7
  %72 = load i32*, i32** %71, align 8
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 8
  %75 = load i32*, i32** %74, align 8
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %7, i64 0, i32 0, i32 0, i32 1, i32 2
  %78 = bitcast %class.sk_sp.197* %3 to i64*
  %79 = load i64, i64* %78, align 8
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %14, align 8
  %80 = bitcast %class.sk_sp.197* %5 to i64*
  store i64 %79, i64* %80, align 8
  call void @_ZN20GrSurfaceDrawContext14drawTextureSetEPK6GrClipPNS_15TextureSetEntryEii12SkFilterMode12SkMipmapMode11SkBlendMode4GrAAN8SkCanvas17SrcRectConstraintERK8SkMatrix5sk_spI17GrColorSpaceXformE(%class.GrSurfaceDrawContext* %53, %class.GrClip* %54, %"struct.GrSurfaceDrawContext::TextureSetEntry"* %62, i32 %64, i32 %67, i32 %70, i32 0, i32 %73, i1 zeroext true, i32 %76, %class.SkMatrix* dereferenceable(40) %77, %class.sk_sp.197* nonnull %5) #12
  %81 = getelementptr inbounds %class.sk_sp.197, %class.sk_sp.197* %5, i64 0, i32 0
  %82 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %81, align 8
  %83 = icmp eq %class.GrColorSpaceXform* %82, null
  br i1 %83, label %94, label %84

84:                                               ; preds = %52
  %85 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %82, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw add i32* %85, i32 -1 acq_rel
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %94

88:                                               ; preds = %84
  %89 = bitcast %class.GrColorSpaceXform* %82 to %class.SkRefCntBase*
  %90 = bitcast %class.GrColorSpaceXform* %82 to void (%class.SkRefCntBase*)***
  %91 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %90, align 8
  %92 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %91, i64 2
  %93 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %92, align 8
  call void %93(%class.SkRefCntBase* nonnull %89) #12
  br label %94

94:                                               ; preds = %52, %84, %88
  %95 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %14, align 8
  %96 = icmp eq %class.GrColorSpaceXform* %95, null
  br i1 %96, label %107, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %95, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = atomicrmw add i32* %98, i32 -1 acq_rel
  %100 = icmp eq i32 %99, 1
  br i1 %100, label %101, label %107

101:                                              ; preds = %97
  %102 = bitcast %class.GrColorSpaceXform* %95 to %class.SkRefCntBase*
  %103 = bitcast %class.GrColorSpaceXform* %95 to void (%class.SkRefCntBase*)***
  %104 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %103, align 8
  %105 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %104, i64 2
  %106 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %105, align 8
  call void %106(%class.SkRefCntBase* nonnull %102) #12
  br label %107

107:                                              ; preds = %94, %97, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  br label %108

108:                                              ; preds = %107, %2
  %109 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 2
  %110 = load i32*, i32** %109, align 8
  store i32 %1, i32* %110, align 4
  %111 = load i32*, i32** %8, align 8
  store i32 0, i32* %111, align 4
  %112 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 5
  %113 = load i32*, i32** %112, align 8
  store i32 0, i32* %113, align 4
  ret void
}

declare void @_ZNK12SkImage_Base6asViewEP18GrRecordingContext11GrMipmapped19GrImageTexGenPolicy(%"class.std::__1::tuple.304"* sret, %class.SkImage_Base*, %class.GrRecordingContext*, i1 zeroext, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK7SkImage11isAlphaOnlyEv(%class.SkImage*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #12
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #12
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #12
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

declare i32 @_ZNK7SkImage9alphaTypeEv(%class.SkImage*) local_unnamed_addr #2

declare i32 @_ZNK7SkImage9colorTypeEv(%class.SkImage*) local_unnamed_addr #2

declare zeroext i1 @_ZN14GrTextureProxy34ProxiesAreCompatibleAsDynamicStateEPK14GrSurfaceProxyS2_(%class.GrSurfaceProxy*, %class.GrSurfaceProxy*) local_unnamed_addr #2

declare zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace*, %class.SkColorSpace*) local_unnamed_addr #2

declare %class.SkColorSpace* @_ZNK7SkImage10colorSpaceEv(%class.SkImage*) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN30SkOverrideDeviceMatrixProviderD0Ev(%class.SkOverrideDeviceMatrixProvider*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.SkOverrideDeviceMatrixProvider* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK30SkOverrideDeviceMatrixProvider16getLocalToMarkerEjP5SkM44(%class.SkOverrideDeviceMatrixProvider*, i32, %class.SkM44*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %0, i64 0, i32 1
  %5 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %4, align 8
  %6 = bitcast %class.SkMatrixProvider* %5 to i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)***
  %7 = load i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)**, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)** %7, i64 2
  %9 = load i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.SkMatrixProvider* %5, i32 %1, %class.SkM44* %2) #12
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK30SkOverrideDeviceMatrixProvider29localToDeviceHitsPixelCentersEv(%class.SkOverrideDeviceMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkMatrixProviderD2Ev(%class.SkMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN11GrColorInfoC1ERK11SkColorInfo(%class.GrColorInfo*, %class.SkColorInfo* dereferenceable(16)) unnamed_addr #2

declare dereferenceable(24) %class.GrColorInfo* @_ZN11GrColorInfoaSERKS_(%class.GrColorInfo*, %class.GrColorInfo* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZNK16SkMaskFilterBase20hasFragmentProcessorEv(%class.SkMaskFilterBase*) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZNK12SkImage_Base19asFragmentProcessorEP18GrRecordingContext17SkSamplingOptionsPK10SkTileModeRK8SkMatrixPK6SkRectSB_(%class.SkImage_Base*, %class.GrRecordingContext*, %struct.SkSamplingOptions* byval(%struct.SkSamplingOptions) align 8, i32*, %class.SkMatrix* dereferenceable(40), %struct.SkRect*, %struct.SkRect*) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEERK11GrColorInfoS8_(%class.GrFragmentProcessor*, %class.GrColorInfo* dereferenceable(24), %class.GrColorInfo* dereferenceable(24)) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN24GrBlendFragmentProcessor4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEES5_11SkBlendModeNS_13BlendBehaviorE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_Z27SkPaintToGrPaintWithTextureP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderNSt3__110unique_ptrI19GrFragmentProcessorNSA_14default_deleteISC_EEEEbP7GrPaint(%class.GrRecordingContext*, %class.GrColorInfo* dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkMatrixProvider* dereferenceable(112), %class.GrFragmentProcessor*, i1 zeroext, %class.GrPaint*) local_unnamed_addr #2

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPolyEPK7SkPointib(%class.SkPath*, %struct.SkPoint*, i32, i1 zeroext) local_unnamed_addr #2

declare dereferenceable(208) %class.GrStyledShape* @_ZN13GrStyledShapeaSERKS_(%class.GrStyledShape*, %class.GrStyledShape* dereferenceable(208)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13GrStyledShapeD2Ev(%class.GrStyledShape*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 6, i32 1
  %3 = load i32*, i32** %2, align 8
  %4 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 6, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i32, i32* %3, i64 %6
  br label %8

8:                                                ; preds = %8, %1
  %9 = phi i32* [ %7, %1 ], [ %11, %8 ]
  %10 = icmp ugt i32* %9, %3
  %11 = getelementptr inbounds i32, i32* %9, i64 -1
  br i1 %10, label %8, label %12

12:                                               ; preds = %8
  %13 = bitcast i32* %3 to i8*
  %14 = icmp eq i32 %5, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %12
  %16 = icmp sgt i32 %5, 8
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @_Z7sk_freePv(i8* %13) #12
  br label %18

18:                                               ; preds = %17, %15
  store i32* null, i32** %2, align 8
  store i32 0, i32* %4, align 8
  br label %19

19:                                               ; preds = %12, %18
  %20 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 5, i32 1
  %21 = load %class.SkPath*, %class.SkPath** %20, align 8
  %22 = icmp eq %class.SkPath* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %21) #12
  store %class.SkPath* null, %class.SkPath** %20, align 8
  br label %24

24:                                               ; preds = %19, %23
  %25 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 2, i32 1
  %26 = load float*, float** %25, align 8
  %27 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 2, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds float, float* %26, i64 %29
  br label %31

31:                                               ; preds = %31, %24
  %32 = phi float* [ %30, %24 ], [ %34, %31 ]
  %33 = icmp ugt float* %32, %26
  %34 = getelementptr inbounds float, float* %32, i64 -1
  br i1 %33, label %31, label %35

35:                                               ; preds = %31
  %36 = bitcast float* %26 to i8*
  %37 = icmp eq i32 %28, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %35
  %39 = icmp sgt i32 %28, 4
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  tail call void @_Z7sk_freePv(i8* %36) #12
  br label %41

41:                                               ; preds = %40, %38
  store float* null, float** %25, align 8
  store i32 0, i32* %27, align 8
  br label %42

42:                                               ; preds = %41, %35
  %43 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 1, i32 0
  %44 = load %class.SkPathEffect*, %class.SkPathEffect** %43, align 8
  %45 = icmp eq %class.SkPathEffect* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %class.SkPathEffect* %44 to %class.SkRefCntBase*
  %52 = bitcast %class.SkPathEffect* %44 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8
  tail call void %55(%class.SkRefCntBase* nonnull %51) #12
  br label %56

56:                                               ; preds = %42, %46, %50
  %57 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 1
  %58 = load i8, i8* %57, align 8
  %59 = icmp eq i8 %58, 4
  br i1 %59, label %60, label %67

60:                                               ; preds = %56
  %61 = bitcast %class.GrStyledShape* %0 to %class.SkPath*
  %62 = getelementptr inbounds %class.SkPath, %class.SkPath* %61, i64 0, i32 4
  %63 = load i8, i8* %62, align 2
  %64 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 4
  %65 = lshr i8 %63, 1
  %66 = and i8 %65, 1
  store i8 %66, i8* %64, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %61) #12
  br label %67

67:                                               ; preds = %56, %60
  store i8 0, i8* %57, align 8
  %68 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 3
  store i8 1, i8* %68, align 2
  %69 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %69, align 1
  %70 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %70, align 1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13GrStyledShapeC2ERK6SkRectNS_10DoSimplifyE(%class.GrStyledShape*, %struct.SkRect* dereferenceable(16), i1 zeroext) unnamed_addr #0 comdat align 2 {
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN7GrStyle10SimpleFillEvE5kFill to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %11, !prof !34

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN7GrStyle10SimpleFillEvE5kFill) #12
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %6
  tail call void @_ZN11SkStrokeRecC1ENS_9InitStyleE(%class.SkStrokeRec* getelementptr inbounds (%class.GrStyle, %class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill, i64 0, i32 0), i32 1) #12
  store float* null, float** getelementptr inbounds (%class.GrStyle, %class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill, i64 0, i32 2, i32 2, i32 1), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%class.SkPathEffect** getelementptr inbounds (%class.GrStyle, %class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill, i64 0, i32 1, i32 0) to i8*), i8 0, i64 20, i1 false) #12
  %10 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.GrStyle*)* @_ZN7GrStyleD2Ev to void (i8*)*), i8* bitcast (%class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill to i8*), i8* nonnull @__dso_handle) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN7GrStyle10SimpleFillEvE5kFill) #12
  br label %11

11:                                               ; preds = %3, %6, %9
  %12 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 1
  store i8 2, i8* %12, align 8
  %13 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 3
  store i8 1, i8* %13, align 2
  %14 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %15, align 1
  %16 = bitcast %class.GrStyledShape* %0 to i8*
  %17 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 4 %17, i64 16, i1 false) #12
  %18 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1
  %19 = bitcast %class.GrStyle* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 bitcast (%class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill to i8*), i64 16, i1 false) #12
  %20 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 1, i32 0
  %21 = load %class.SkPathEffect*, %class.SkPathEffect** getelementptr inbounds (%class.GrStyle, %class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill, i64 0, i32 1, i32 0), align 8
  %22 = icmp eq %class.SkPathEffect* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %11
  %24 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic
  br label %26

26:                                               ; preds = %23, %11
  store %class.SkPathEffect* %21, %class.SkPathEffect** %20, align 8
  %27 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 1
  %28 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 2, i32 1
  store float* null, float** %28, align 8
  %29 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 2, i32 0
  store i32 0, i32* %29, align 8
  %30 = load i32, i32* getelementptr inbounds (%class.GrStyle, %class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill, i64 0, i32 2, i32 0), align 8
  %31 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 0
  store i32 %30, i32* %31, align 8
  %32 = load i32, i32* bitcast (float* getelementptr inbounds (%class.GrStyle, %class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill, i64 0, i32 2, i32 1) to i32*), align 4
  %33 = bitcast float* %27 to i32*
  store i32 %32, i32* %33, align 4
  %34 = load i32, i32* getelementptr inbounds (%class.GrStyle, %class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill, i64 0, i32 2, i32 2, i32 0), align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %59, label %36

36:                                               ; preds = %26
  %37 = icmp sgt i32 %34, 4
  br i1 %37, label %38, label %43

38:                                               ; preds = %36
  %39 = sext i32 %34 to i64
  %40 = tail call i8* @_Z15sk_malloc_throwmm(i64 %39, i64 4) #12
  %41 = bitcast float** %28 to i8**
  store i8* %40, i8** %41, align 8
  %42 = load i32, i32* getelementptr inbounds (%class.GrStyle, %class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill, i64 0, i32 2, i32 2, i32 0), align 8
  br label %49

43:                                               ; preds = %36
  %44 = icmp sgt i32 %34, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %43
  %46 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 2, i32 2, i64 0
  %47 = bitcast float** %28 to i8**
  store i8* %46, i8** %47, align 8
  store i32 %34, i32* %29, align 8
  br label %53

48:                                               ; preds = %43
  store float* null, float** %28, align 8
  br label %49

49:                                               ; preds = %48, %38
  %50 = phi i32 [ %34, %48 ], [ %42, %38 ]
  %51 = phi i8* [ null, %48 ], [ %40, %38 ]
  store i32 %34, i32* %29, align 8
  %52 = icmp eq i32 %50, 0
  br i1 %52, label %59, label %53

53:                                               ; preds = %45, %49
  %54 = phi i8* [ %46, %45 ], [ %51, %49 ]
  %55 = phi i32 [ %34, %45 ], [ %50, %49 ]
  %56 = sext i32 %55 to i64
  %57 = shl nsw i64 %56, 2
  %58 = load i8*, i8** bitcast (float** getelementptr inbounds (%class.GrStyle, %class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill, i64 0, i32 2, i32 2, i32 1) to i8**), align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %58, i64 %57, i1 false) #12
  br label %59

59:                                               ; preds = %26, %49, %53
  %60 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 2
  store i32 0, i32* %60, align 8
  %61 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 3
  store i8 0, i8* %61, align 4
  %62 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 4
  store i8 0, i8* %62, align 1
  %63 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 5, i32 1
  store %class.SkPath* null, %class.SkPath** %63, align 8
  %64 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 6, i32 1
  store i32* null, i32** %64, align 8
  %65 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 6, i32 0
  store i32 0, i32* %65, align 8
  br i1 %2, label %66, label %67

66:                                               ; preds = %59
  tail call void @_ZN13GrStyledShape8simplifyEv(%class.GrStyledShape* %0) #12
  br label %67

67:                                               ; preds = %59, %66
  ret void
}

declare void @_ZN11GrBlurUtils23drawShapeWithMaskFilterEP18GrRecordingContextP20GrSurfaceDrawContextPK6GrClipRK13GrStyledShapeO7GrPaintRK8SkMatrixPK12SkMaskFilter(%class.GrRecordingContext*, %class.GrSurfaceDrawContext*, %class.GrClip*, %class.GrStyledShape* dereferenceable(208), %class.GrPaint* dereferenceable(48), %class.SkMatrix* dereferenceable(40), %class.SkMaskFilter*) local_unnamed_addr #2

declare void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo*, i32, i32, %class.sk_sp*) unnamed_addr #2

declare void @_ZN17GrColorSpaceXform4MakeERK11GrColorInfoS2_(%class.sk_sp.197* sret, %class.GrColorInfo* dereferenceable(24), %class.GrColorInfo* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZNK14GrSurfaceProxy19isFunctionallyExactEv(%class.GrSurfaceProxy*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20GrSurfaceDrawContext15drawTextureQuadEPK6GrClip18GrSurfaceProxyView11GrColorType11SkAlphaType12SkFilterMode12SkMipmapMode11SkBlendModeRK8SkRGBA4fILS5_2EEPK7SkPointSF_4GrAA13GrQuadAAFlagsPK6SkRectRK8SkMatrix5sk_spI17GrColorSpaceXformE(%class.GrSurfaceDrawContext*, %class.GrClip*, %class.GrSurfaceProxyView*, i32, i32, i32, i32, i32, %struct.SkRGBA4f.300* dereferenceable(16), %struct.SkPoint*, %struct.SkPoint*, i1 zeroext, i32, %struct.SkRect*, %class.SkMatrix* dereferenceable(40), %class.sk_sp.197*) local_unnamed_addr #0 comdat align 2 {
  %17 = alloca %struct.DrawQuad, align 4
  %18 = alloca %class.GrSurfaceProxyView, align 8
  %19 = alloca %class.sk_sp.197, align 8
  %20 = bitcast %struct.DrawQuad* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 108, i8* nonnull %20) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %20, i8* align 4 bitcast (%struct.DrawQuad* @__const._ZN20GrSurfaceDrawContext18fillRectWithEdgeAAEPK6GrClipO7GrPaint4GrAA13GrQuadAAFlagsRK8SkMatrixRK6SkRectPSB_.quad to i8*), i64 108, i1 false)
  %21 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %17, i64 0, i32 0
  call void @_ZN6GrQuad14MakeFromSkQuadEPK7SkPointRK8SkMatrix(%class.GrQuad* nonnull sret %21, %struct.SkPoint* %10, %class.SkMatrix* dereferenceable(40) %14) #12
  %22 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %17, i64 0, i32 1
  %23 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #12
  call void @_ZN6GrQuad14MakeFromSkQuadEPK7SkPointRK8SkMatrix(%class.GrQuad* sret %22, %struct.SkPoint* %9, %class.SkMatrix* dereferenceable(40) %23) #12
  %24 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %17, i64 0, i32 2
  store i32 %12, i32* %24, align 4
  %25 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 0, i32 0
  %26 = bitcast %class.GrSurfaceProxyView* %2 to i64*
  %27 = load i64, i64* %26, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %25, align 8
  %28 = bitcast %class.GrSurfaceProxyView* %18 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %18, i64 0, i32 1
  %30 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %18, i64 0, i32 2, i32 0
  %33 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 2, i32 0
  %34 = load i16, i16* %33, align 2
  store i16 %34, i16* %32, align 4
  %35 = getelementptr inbounds %class.sk_sp.197, %class.sk_sp.197* %15, i64 0, i32 0
  %36 = bitcast %class.sk_sp.197* %15 to i64*
  %37 = load i64, i64* %36, align 8
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %35, align 8
  %38 = bitcast %class.sk_sp.197* %19 to i64*
  store i64 %37, i64* %38, align 8
  call void @_ZN20GrSurfaceDrawContext16drawTexturedQuadEPK6GrClip18GrSurfaceProxyView11SkAlphaType5sk_spI17GrColorSpaceXformE12SkFilterMode12SkMipmapModeRK8SkRGBA4fILS4_2EE11SkBlendMode4GrAAP8DrawQuadPK6SkRect(%class.GrSurfaceDrawContext* %0, %class.GrClip* %1, %class.GrSurfaceProxyView* nonnull %18, i32 %4, %class.sk_sp.197* nonnull %19, i32 %5, i32 %6, %struct.SkRGBA4f.300* dereferenceable(16) %8, i32 %7, i1 zeroext %11, %struct.DrawQuad* nonnull %17, %struct.SkRect* %13) #12
  %39 = getelementptr inbounds %class.sk_sp.197, %class.sk_sp.197* %19, i64 0, i32 0
  %40 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %39, align 8
  %41 = icmp eq %class.GrColorSpaceXform* %40, null
  br i1 %41, label %52, label %42

42:                                               ; preds = %16
  %43 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %40, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 -1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = bitcast %class.GrColorSpaceXform* %40 to %class.SkRefCntBase*
  %48 = bitcast %class.GrColorSpaceXform* %40 to void (%class.SkRefCntBase*)***
  %49 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %48, align 8
  %50 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, i64 2
  %51 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, align 8
  call void %51(%class.SkRefCntBase* nonnull %47) #12
  br label %52

52:                                               ; preds = %16, %42, %46
  %53 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %18, i64 0, i32 0, i32 0
  %54 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %53, align 8
  %55 = icmp eq %class.GrSurfaceProxy* %54, null
  br i1 %55, label %68, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %54, i64 0, i32 1
  %58 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 -1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %68

61:                                               ; preds = %56
  %62 = getelementptr inbounds %class.SkNVRefCnt.78, %class.SkNVRefCnt.78* %57, i64 -2
  %63 = bitcast %class.SkNVRefCnt.78* %62 to %class.GrSurfaceProxy*
  %64 = bitcast %class.SkNVRefCnt.78* %62 to void (%class.GrSurfaceProxy*)***
  %65 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %64, align 8
  %66 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %65, i64 1
  %67 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %66, align 8
  call void %67(%class.GrSurfaceProxy* nonnull %63) #12
  br label %68

68:                                               ; preds = %52, %56, %61
  call void @llvm.lifetime.end.p0i8(i64 108, i8* nonnull %20) #12
  ret void
}

declare void @_ZN20GrSurfaceDrawContext11drawTextureEPK6GrClip18GrSurfaceProxyView11SkAlphaType12SkFilterMode12SkMipmapMode11SkBlendModeRK8SkRGBA4fILS4_2EERK6SkRectSE_4GrAA13GrQuadAAFlagsN8SkCanvas17SrcRectConstraintERK8SkMatrix5sk_spI17GrColorSpaceXformE(%class.GrSurfaceDrawContext*, %class.GrClip*, %class.GrSurfaceProxyView*, i32, i32, i32, i32, %struct.SkRGBA4f.300* dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i1 zeroext, i32, i32, %class.SkMatrix* dereferenceable(40), %class.sk_sp.197*) local_unnamed_addr #2

declare void @_ZN6GrQuad14MakeFromSkQuadEPK7SkPointRK8SkMatrix(%class.GrQuad* sret, %struct.SkPoint*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN20GrSurfaceDrawContext16drawTexturedQuadEPK6GrClip18GrSurfaceProxyView11SkAlphaType5sk_spI17GrColorSpaceXformE12SkFilterMode12SkMipmapModeRK8SkRGBA4fILS4_2EE11SkBlendMode4GrAAP8DrawQuadPK6SkRect(%class.GrSurfaceDrawContext*, %class.GrClip*, %class.GrSurfaceProxyView*, i32, %class.sk_sp.197*, i32, i32, %struct.SkRGBA4f.300* dereferenceable(16), i32, i1 zeroext, %struct.DrawQuad*, %struct.SkRect*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #8

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #2

declare void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare void @_ZN20GrSurfaceDrawContext14drawFilledQuadEPK6GrClipO7GrPaint4GrAAP8DrawQuadPK21GrUserStencilSettings(%class.GrSurfaceDrawContext*, %class.GrClip*, %class.GrPaint* dereferenceable(48), i1 zeroext, %struct.DrawQuad*, %struct.GrUserStencilSettings*) local_unnamed_addr #2

declare void @_ZN20GrSurfaceDrawContext14fillRectToRectEPK6GrClipO7GrPaint4GrAARK8SkMatrixRK6SkRectSB_(%class.GrSurfaceDrawContext*, %class.GrClip*, %class.GrPaint* dereferenceable(48), i1 zeroext, %class.SkMatrix* dereferenceable(40), %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN6GrQuad12MakeFromRectERK6SkRectRK8SkMatrix(%class.GrQuad* sret, %struct.SkRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN11SkStrokeRecC1ENS_9InitStyleE(%class.SkStrokeRec*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13GrStyledShapeC2ERK6SkPathRK7GrStyleNS_10DoSimplifyE(%class.GrStyledShape*, %class.SkPath* dereferenceable(16), %class.GrStyle* dereferenceable(64), i1 zeroext) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 1
  store i8 4, i8* %5, align 8
  %6 = bitcast %class.GrStyledShape* %0 to %class.SkPath*
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %6, %class.SkPath* dereferenceable(16) %1) #12
  %7 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 3
  store i8 1, i8* %7, align 2
  %8 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %10 = load i8, i8* %9, align 2
  %11 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 0, i32 4
  %12 = lshr i8 %10, 1
  %13 = and i8 %12, 1
  store i8 %13, i8* %11, align 1
  %14 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1
  %15 = bitcast %class.GrStyle* %14 to i8*
  %16 = bitcast %class.GrStyle* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 16, i1 false) #12
  %17 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 1, i32 0
  %18 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %2, i64 0, i32 1, i32 0
  %19 = load %class.SkPathEffect*, %class.SkPathEffect** %18, align 8
  %20 = icmp eq %class.SkPathEffect* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  br label %24

24:                                               ; preds = %21, %4
  store %class.SkPathEffect* %19, %class.SkPathEffect** %17, align 8
  %25 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 1
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 2, i32 1
  store float* null, float** %26, align 8
  %27 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 2, i32 0
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %2, i64 0, i32 2, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 0
  store i32 %29, i32* %30, align 8
  %31 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %2, i64 0, i32 2, i32 1
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = bitcast float* %25 to i32*
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %2, i64 0, i32 2, i32 2, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %60, label %38

38:                                               ; preds = %24
  %39 = icmp sgt i32 %36, 4
  br i1 %39, label %40, label %44

40:                                               ; preds = %38
  %41 = sext i32 %36 to i64
  %42 = tail call i8* @_Z15sk_malloc_throwmm(i64 %41, i64 4) #12
  %43 = bitcast float** %26 to i8**
  store i8* %42, i8** %43, align 8
  br label %50

44:                                               ; preds = %38
  %45 = icmp sgt i32 %36, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %44
  %47 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 1, i32 2, i32 2, i32 2, i64 0
  %48 = bitcast float** %26 to i8**
  store i8* %47, i8** %48, align 8
  br label %50

49:                                               ; preds = %44
  store float* null, float** %26, align 8
  br label %50

50:                                               ; preds = %49, %46, %40
  %51 = phi i8* [ null, %49 ], [ %47, %46 ], [ %42, %40 ]
  store i32 %36, i32* %27, align 8
  %52 = load i32, i32* %35, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %60, label %54

54:                                               ; preds = %50
  %55 = sext i32 %52 to i64
  %56 = shl nsw i64 %55, 2
  %57 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %2, i64 0, i32 2, i32 2, i32 1
  %58 = bitcast float** %57 to i8**
  %59 = load i8*, i8** %58, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %59, i64 %56, i1 false) #12
  br label %60

60:                                               ; preds = %24, %50, %54
  %61 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 2
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 3
  store i8 0, i8* %62, align 4
  %63 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 4
  store i8 0, i8* %63, align 1
  %64 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 5, i32 1
  store %class.SkPath* null, %class.SkPath** %64, align 8
  %65 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 6, i32 1
  store i32* null, i32** %65, align 8
  %66 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %0, i64 0, i32 6, i32 0
  store i32 0, i32* %66, align 8
  br i1 %3, label %67, label %68

67:                                               ; preds = %60
  tail call void @_ZN13GrStyledShape8simplifyEv(%class.GrStyledShape* %0) #12
  br label %68

68:                                               ; preds = %67, %60
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7GrStyleD2Ev(%class.GrStyle*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 2, i32 2, i32 1
  %3 = load float*, float** %2, align 8
  %4 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 2, i32 2, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds float, float* %3, i64 %6
  br label %8

8:                                                ; preds = %8, %1
  %9 = phi float* [ %7, %1 ], [ %11, %8 ]
  %10 = icmp ugt float* %9, %3
  %11 = getelementptr inbounds float, float* %9, i64 -1
  br i1 %10, label %8, label %12

12:                                               ; preds = %8
  %13 = bitcast float* %3 to i8*
  %14 = icmp eq i32 %5, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %12
  %16 = icmp sgt i32 %5, 4
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @_Z7sk_freePv(i8* %13) #12
  br label %18

18:                                               ; preds = %17, %15
  store float* null, float** %2, align 8
  store i32 0, i32* %4, align 8
  br label %19

19:                                               ; preds = %12, %18
  %20 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 1, i32 0
  %21 = load %class.SkPathEffect*, %class.SkPathEffect** %20, align 8
  %22 = icmp eq %class.SkPathEffect* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = bitcast %class.SkPathEffect* %21 to %class.SkRefCntBase*
  %29 = bitcast %class.SkPathEffect* %21 to void (%class.SkRefCntBase*)***
  %30 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, i64 2
  %32 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, align 8
  tail call void %32(%class.SkRefCntBase* nonnull %28) #12
  br label %33

33:                                               ; preds = %19, %23, %27
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #9

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

declare void @_ZN13GrStyledShape8simplifyEv(%class.GrStyledShape*) local_unnamed_addr #2

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #2

declare zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN25SkPreConcatMatrixProviderD0Ev(%class.SkPreConcatMatrixProvider*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.SkPreConcatMatrixProvider* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK25SkPreConcatMatrixProvider16getLocalToMarkerEjP5SkM44(%class.SkPreConcatMatrixProvider*, i32, %class.SkM44*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %0, i64 0, i32 1
  %5 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %4, align 8
  %6 = bitcast %class.SkMatrixProvider* %5 to i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)***
  %7 = load i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)**, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)** %7, i64 2
  %9 = load i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.SkMatrixProvider* %5, i32 %1, %class.SkM44* %2) #12
  br i1 %10, label %11, label %16

11:                                               ; preds = %3
  %12 = icmp eq %class.SkM44* %2, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %0, i64 0, i32 2
  %15 = tail call dereferenceable(64) %class.SkM44* @_ZN5SkM449preConcatERK8SkMatrix(%class.SkM44* nonnull %2, %class.SkMatrix* dereferenceable(40) %14) #12
  br label %16

16:                                               ; preds = %3, %13, %11
  %17 = phi i1 [ true, %11 ], [ true, %13 ], [ false, %3 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK25SkPreConcatMatrixProvider29localToDeviceHitsPixelCentersEv(%class.SkPreConcatMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44*, %class.SkM44* dereferenceable(64), %class.SkM44* dereferenceable(64)) local_unnamed_addr #2

declare dereferenceable(64) %class.SkM44* @_ZN5SkM449preConcatERK8SkMatrix(%class.SkM44*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare dereferenceable(240) %struct.GrContextOptions* @_ZNK14GrContext_Base7optionsEv(%class.GrContext_Base*) local_unnamed_addr #2

declare float @_ZNK8SkMatrix11getMinScaleEv(%class.SkMatrix*) local_unnamed_addr #2

declare %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i64, i64 } @_ZN12_GLOBAL__N_126determine_clipped_src_rectEiiPK6GrClipRK8SkMatrixS5_RK7SkISizePK6SkRect(i32, i32, %class.GrClip*, %class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40), %struct.SkISize* nocapture readonly dereferenceable(8), %struct.SkRect*) unnamed_addr #0 {
  %8 = alloca <4 x i32>, align 16
  %9 = bitcast <4 x i32>* %8 to { i64, i64 }*
  %10 = bitcast <4 x i32>* %8 to %struct.SkIRect*
  %11 = alloca %class.SkMatrix, align 16
  %12 = alloca { <2 x float>, <2 x float> }, align 8
  %13 = bitcast { <2 x float>, <2 x float> }* %12 to %struct.SkRect*
  %14 = alloca { i64, i64 }, align 8
  %15 = bitcast { i64, i64 }* %14 to %struct.SkIRect*
  %16 = bitcast <4 x i32>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #12
  %17 = getelementptr inbounds <4 x i32>, <4 x i32>* %8, i64 0, i64 0
  %18 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %10, i64 0, i32 1
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %20 = bitcast i64* %19 to i32*
  %21 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %10, i64 0, i32 3
  %22 = icmp eq %class.GrClip* %2, null
  %23 = bitcast <4 x i32>* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %23, i8 -86, i64 16, i1 false)
  br i1 %22, label %32, label %24

24:                                               ; preds = %7
  %25 = bitcast %class.GrClip* %2 to { i64, i64 } (%class.GrClip*)***
  %26 = load { i64, i64 } (%class.GrClip*)**, { i64, i64 } (%class.GrClip*)*** %25, align 8
  %27 = getelementptr inbounds { i64, i64 } (%class.GrClip*)*, { i64, i64 } (%class.GrClip*)** %26, i64 2
  %28 = load { i64, i64 } (%class.GrClip*)*, { i64, i64 } (%class.GrClip*)** %27, align 8
  %29 = tail call { i64, i64 } %28(%class.GrClip* nonnull %2) #12
  %30 = extractvalue { i64, i64 } %29, 0
  %31 = extractvalue { i64, i64 } %29, 1
  br label %37

32:                                               ; preds = %7
  %33 = zext i32 %1 to i64
  %34 = shl nuw i64 %33, 32
  %35 = zext i32 %0 to i64
  %36 = or i64 %34, %35
  br label %37

37:                                               ; preds = %32, %24
  %38 = phi i64 [ 0, %32 ], [ %30, %24 ]
  %39 = phi i64 [ %36, %32 ], [ %31, %24 ]
  %40 = bitcast <4 x i32>* %8 to i64*
  store i64 %38, i64* %40, align 16
  store i64 %39, i64* %19, align 8
  %41 = bitcast %class.SkMatrix* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %41) #12
  %42 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 1
  %43 = bitcast %class.SkMatrix* %11 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %43, align 16, !alias.scope !61
  %44 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 4
  %45 = bitcast float* %44 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %45, align 16, !alias.scope !61
  %46 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %46, align 16, !alias.scope !61
  store i32 16, i32* %42, align 4, !alias.scope !61
  %47 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %11, %class.SkMatrix* dereferenceable(40) %3, %class.SkMatrix* dereferenceable(40) %4) #12
  %48 = load i32, i32* %42, align 4
  %49 = trunc i32 %48 to i8
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %37
  %52 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %11) #12
  %53 = zext i8 %52 to i32
  store i32 %53, i32* %42, align 4
  br label %54

54:                                               ; preds = %51, %37
  %55 = phi i32 [ %53, %51 ], [ %48, %37 ]
  %56 = and i32 %55, 15
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %54
  %59 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %11) #12
  br label %62

60:                                               ; preds = %54
  %61 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* nonnull %11, %class.SkMatrix* nonnull %11) #12
  br i1 %61, label %62, label %123

62:                                               ; preds = %58, %60
  %63 = bitcast { <2 x float>, <2 x float> }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #12
  %64 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 0, i64 0
  %65 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %13, i64 0, i32 1
  %66 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1, i64 0
  %67 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %13, i64 0, i32 3
  %68 = load i32, i32* %17, align 16
  %69 = sitofp i32 %68 to float
  %70 = insertelement <2 x float> undef, float %69, i32 0
  %71 = load i32, i32* %18, align 4
  %72 = sitofp i32 %71 to float
  %73 = insertelement <2 x float> %70, float %72, i32 1
  %74 = load i32, i32* %20, align 8
  %75 = sitofp i32 %74 to float
  %76 = insertelement <2 x float> undef, float %75, i32 0
  %77 = load i32, i32* %21, align 4
  %78 = sitofp i32 %77 to float
  %79 = insertelement <2 x float> %76, float %78, i32 1
  %80 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 0
  store <2 x float> %73, <2 x float>* %80, align 8
  %81 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1
  store <2 x float> %79, <2 x float>* %81, align 8
  %82 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %11, %struct.SkRect* nonnull %13, %struct.SkRect* nonnull dereferenceable(16) %13, i32 1) #12
  %83 = icmp eq %struct.SkRect* %6, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %62
  %85 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %13, %struct.SkRect* nonnull dereferenceable(16) %6) #12
  br i1 %85, label %86, label %120

86:                                               ; preds = %62, %84
  %87 = load float, float* %64, align 8
  %88 = call float @llvm.floor.f32(float %87) #12
  %89 = load float, float* %65, align 4
  %90 = call float @llvm.floor.f32(float %89) #12
  %91 = load float, float* %66, align 8
  %92 = call float @llvm.ceil.f32(float %91) #12
  %93 = load float, float* %67, align 4
  %94 = call float @llvm.ceil.f32(float %93) #12
  %95 = insertelement <4 x float> undef, float %88, i32 0
  %96 = insertelement <4 x float> %95, float %90, i32 1
  %97 = insertelement <4 x float> %96, float %92, i32 2
  %98 = insertelement <4 x float> %97, float %94, i32 3
  %99 = fcmp olt <4 x float> %98, <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %100 = select <4 x i1> %99, <4 x float> %98, <4 x float> <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %101 = fcmp ogt <4 x float> %100, <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %102 = select <4 x i1> %101, <4 x float> %100, <4 x float> <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %103 = fptosi <4 x float> %102 to <4 x i32>
  store <4 x i32> %103, <4 x i32>* %8, align 16
  %104 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #12
  %105 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 1
  %106 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %5, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %5, i64 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = zext i32 %109 to i64
  %111 = shl nuw i64 %110, 32
  %112 = zext i32 %107 to i64
  %113 = or i64 %111, %112
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 0
  store i64 0, i64* %114, align 8
  store i64 %113, i64* %105, align 8
  %115 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %10, %struct.SkIRect* nonnull dereferenceable(16) %10, %struct.SkIRect* nonnull dereferenceable(16) %15) #12
  %116 = load i64, i64* %40, align 16
  %117 = load i64, i64* %19, align 8
  %118 = select i1 %115, i64 %116, i64 0
  %119 = select i1 %115, i64 %117, i64 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #12
  br label %120

120:                                              ; preds = %84, %86
  %121 = phi i64 [ %118, %86 ], [ 0, %84 ]
  %122 = phi i64 [ %119, %86 ], [ 0, %84 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #12
  br label %123

123:                                              ; preds = %60, %120
  %124 = phi i64 [ %121, %120 ], [ 0, %60 ]
  %125 = phi i64 [ %122, %120 ], [ 0, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %41) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #12
  %126 = insertvalue { i64, i64 } undef, i64 %124, 0
  %127 = insertvalue { i64, i64 } %126, i64 %125, 1
  ret { i64, i64 } %127
}

declare i64 @_ZNK15GrDirectContext21getResourceCacheLimitEv(%class.GrDirectContext*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkBitmap13extractSubsetEPS_RK7SkIRect(%class.SkBitmap*, %class.SkBitmap*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_Z27SkMakeImageFromRasterBitmapRK8SkBitmap16SkCopyPixelsMode(%class.sk_sp.327* sret, %class.SkBitmap* dereferenceable(56), i32) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #4

declare void @_ZN20GrSurfaceDrawContext14drawTextureSetEPK6GrClipPNS_15TextureSetEntryEii12SkFilterMode12SkMipmapMode11SkBlendMode4GrAAN8SkCanvas17SrcRectConstraintERK8SkMatrix5sk_spI17GrColorSpaceXformE(%class.GrSurfaceDrawContext*, %class.GrClip*, %"struct.GrSurfaceDrawContext::TextureSetEntry"*, i32, i32, i32, i32, i32, i1 zeroext, i32, %class.SkMatrix* dereferenceable(40), %class.sk_sp.197*) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_Z19SkColor4fPrepForDst8SkRGBA4fIL11SkAlphaType3EERK11GrColorInfo(<2 x float>, <2 x float>, %class.GrColorInfo* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

declare void @_ZN7SkPaintC1ERKS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #10

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

; Function Attrs: nounwind readnone speculatable
declare <4 x float> @llvm.floor.v4f32(<4 x float>) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nofree nounwind }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!4 = distinct !{!4, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!5 = distinct !{!5, !6, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!6 = distinct !{!6, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!7 = !{i8 0, i8 2}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_: argument 0"}
!10 = distinct !{!10, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_Z9sk_ref_spI18GrRecordingContextE5sk_spIT_EPS2_: argument 0"}
!13 = distinct !{!13, !"_Z9sk_ref_spI18GrRecordingContextE5sk_spIT_EPS2_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK11GrColorInfo13makeColorTypeE11GrColorType: argument 0"}
!16 = distinct !{!16, !"_ZNK11GrColorInfo13makeColorTypeE11GrColorType"}
!17 = !{!18, !15}
!18 = distinct !{!18, !19, !"_ZNK11GrColorInfo13refColorSpaceEv: argument 0"}
!19 = distinct !{!19, !"_ZNK11GrColorInfo13refColorSpaceEv"}
!20 = !{!18}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN9GrSwizzle6ConcatERKS_S1_: argument 0"}
!23 = distinct !{!23, !"_ZN9GrSwizzle6ConcatERKS_S1_"}
!24 = !{!25, !27}
!25 = distinct !{!25, !26, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!26 = distinct !{!26, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!27 = distinct !{!27, !28, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!28 = distinct !{!28, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!29 = !{!30, !32}
!30 = distinct !{!30, !31, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!31 = distinct !{!31, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!32 = distinct !{!32, !33, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!33 = distinct !{!33, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!34 = !{!"branch_weights", i32 1, i32 1048575}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!37 = distinct !{!37, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!38 = distinct !{!38, !39, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!39 = distinct !{!39, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNK5SkM445asM33Ev: argument 0"}
!42 = distinct !{!42, !"_ZNK5SkM445asM33Ev"}
!43 = !{!44, !41}
!44 = distinct !{!44, !45, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!45 = distinct !{!45, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNK18GrSurfaceProxyView7swizzleEv: argument 0"}
!48 = distinct !{!48, !"_ZNK18GrSurfaceProxyView7swizzleEv"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN9GrSwizzle6ConcatERKS_S1_: argument 0"}
!51 = distinct !{!51, !"_ZN9GrSwizzle6ConcatERKS_S1_"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN18GrSurfaceProxyView11detachProxyEv: argument 0"}
!54 = distinct !{!54, !"_ZN18GrSurfaceProxyView11detachProxyEv"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZNK18GrSurfaceProxyView7swizzleEv: argument 0"}
!57 = distinct !{!57, !"_ZNK18GrSurfaceProxyView7swizzleEv"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZNK18GrSurfaceProxyView7swizzleEv: argument 0"}
!60 = distinct !{!60, !"_ZNK18GrSurfaceProxyView7swizzleEv"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZN8SkMatrix6ConcatERKS_S1_: argument 0"}
!63 = distinct !{!63, !"_ZN8SkMatrix6ConcatERKS_S1_"}
