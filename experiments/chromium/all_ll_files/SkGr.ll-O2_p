; ModuleID = '../../third_party/skia/src/gpu/SkGr.cpp'
source_filename = "../../third_party/skia/src/gpu/SkGr.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRGBA4f = type { float, float, float, float }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp, i8* }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.1 = type { %class.SkIDChangeListener* }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.2", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.48" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.7 }
%class.sk_sp.7 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.13, %class.SkTArray.22, %class.SkTArray.24, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.8"*, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.24, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.25 }
%class.sk_sp.25 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.9" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.13 = type { %class.SkTHashTable.14 }
%class.SkTHashTable.14 = type { i32, i32, %class.SkAutoTArray.15 }
%class.SkAutoTArray.15 = type { %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.153" }
%"struct.std::__1::pair.153" = type { i32, %class.SkTArray.154* }
%class.SkTArray.154 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.22 = type { %"class.std::__1::unique_ptr.23"*, i64 }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.154, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.24 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.38 }
%class.SkFibBlockSizes.38 = type { i32 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type { %class.SkTDynamicHash, %class.GrImageContext* }
%class.SkTDynamicHash = type { %class.SkTHashTable.51 }
%class.SkTHashTable.51 = type { i32, i32, %class.SkAutoTArray.52 }
%class.SkAutoTArray.52 = type { %"class.std::__1::unique_ptr.53" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot" = type opaque
%class.GrImageContext = type <{ %class.GrContext_Base, %class.GrSingleOwner, [7 x i8] }>
%class.sk_sp.62 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.63, %class.sk_sp.64, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.106" }
%class.SkNVRefCnt.63 = type { %"struct.std::__1::atomic" }
%class.sk_sp.64 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.65 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.65 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.66, void (i8*)*, i8* }
%class.SkNVRefCnt.66 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.67, i32, [4 x i8] }
%union.anon.67 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.64, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.103, %class.sk_sp.105, %class.sk_sp.105 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.78, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.94, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash.69, i32, [4 x i8] }>
%class.SkTDynamicHash.69 = type { %class.SkTHashTable.70 }
%class.SkTHashTable.70 = type { i32, i32, %class.SkAutoTArray.71 }
%class.SkAutoTArray.71 = type { %"class.std::__1::unique_ptr.72" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.78 = type { %class.SkTHashTable.79 }
%class.SkTHashTable.79 = type { i32, i32, %class.SkAutoTArray.80 }
%class.SkAutoTArray.80 = type { %"class.std::__1::unique_ptr.81" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.87, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.87 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.88" }
%"struct.std::__1::atomic.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__atomic_base.90" }
%"struct.std::__1::__atomic_base.90" = type { %"struct.std::__1::__cxx_atomic_impl.91" }
%"struct.std::__1::__cxx_atomic_impl.91" = type { %"struct.std::__1::__cxx_atomic_base_impl.92" }
%"struct.std::__1::__cxx_atomic_base_impl.92" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.93, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.93 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.94 = type { %class.SkTHashTable.95 }
%class.SkTHashTable.95 = type { i32, i32, %class.SkAutoTArray.96 }
%class.SkAutoTArray.96 = type { %"class.std::__1::unique_ptr.97" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.103 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.104, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.104 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.105 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.106" = type { %"struct.std::__1::__atomic_base.107" }
%"struct.std::__1::__atomic_base.107" = type { %"struct.std::__1::__atomic_base.108" }
%"struct.std::__1::__atomic_base.108" = type { %"struct.std::__1::__cxx_atomic_impl.109" }
%"struct.std::__1::__cxx_atomic_impl.109" = type { %"struct.std::__1::__cxx_atomic_base_impl.110" }
%"struct.std::__1::__cxx_atomic_base_impl.110" = type { i64 }
%class.sk_sp.111 = type opaque
%class.GrSurfaceProxyView = type <{ %class.sk_sp.62, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSwizzle = type { i16 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.123", [4 x i8] }
%"class.std::__1::__tuple_leaf" = type { %class.GrSurfaceProxyView }
%"class.std::__1::__tuple_leaf.123" = type { i32 }
%class.SkBitmap = type { %class.sk_sp.112, %class.SkPixmap, %class.sk_sp.121 }
%class.sk_sp.112 = type { %class.SkPixelRef* }
%class.SkPixelRef = type <{ %class.SkRefCnt.base, i32, i32, [4 x i8], i8*, i64, %"struct.std::__1::atomic.113", [4 x i8], %"class.SkIDChangeListener::List", %"struct.std::__1::atomic.2", i8, [6 x i8] }>
%"struct.std::__1::atomic.113" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__atomic_base.115" }
%"struct.std::__1::__atomic_base.115" = type { %"struct.std::__1::__cxx_atomic_impl.116" }
%"struct.std::__1::__cxx_atomic_impl.116" = type { %"struct.std::__1::__cxx_atomic_base_impl.117" }
%"struct.std::__1::__cxx_atomic_base_impl.117" = type { i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.118 }
%class.SkTDArray.118 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.119, i32, i32 }
%class.sk_sp.119 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.120, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.120 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.sk_sp.121 = type { %class.SkMipmap* }
%class.SkMipmap = type <{ %class.SkCachedData.base, [6 x i8], %class.sk_sp.119, %"struct.SkMipmap::Level"*, i32, [4 x i8] }>
%class.SkCachedData.base = type <{ i32 (...)**, %class.SkMutex, %union.anon.122, i8*, i64, i32, i32, i8, i8 }>
%union.anon.122 = type { %class.SkDiscardableMemory* }
%class.SkDiscardableMemory = type opaque
%"struct.SkMipmap::Level" = type { %class.SkPixmap, %struct.SkSize }
%struct.SkSize = type { float, float }
%class.sk_sp.125 = type { %class.GrTextureProxy* }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.126", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.GrColorInfo = type { %class.sk_sp.119, %class.sk_sp.132, i32, i32 }
%class.sk_sp.132 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%struct.SkRGBA4f.133 = type { float, float, float, float }
%class.SkPaint = type <{ %class.sk_sp.134, %class.sk_sp.135, %class.sk_sp.136, %class.sk_sp.137, %class.sk_sp.138, %struct.SkRGBA4f.133, float, float, %union.anon.139, [4 x i8] }>
%class.sk_sp.134 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.135 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.136 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.137 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.138 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%union.anon.139 = type { %struct.anon.140 }
%struct.anon.140 = type { i32 }
%class.SkMatrixProvider = type opaque
%class.GrPaint = type <{ %class.GrXPFactory*, %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.141", i8, [3 x i8], %struct.SkRGBA4f, [4 x i8] }>
%class.GrXPFactory = type { i32 (...)** }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.144 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.144 = type { %"class.std::__1::unique_ptr.141"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.GrFPArgs = type { %class.GrRecordingContext*, %class.SkMatrixProvider*, %class.SkMatrix*, i8, %class.GrColorInfo* }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkShaderBase = type { %class.SkShader.base, %class.SkMatrix, [4 x i8] }
%class.SkShader.base = type { %class.SkFlattenable.base }
%class.SkColorFilterBase = type { %class.SkColorFilter.base, [4 x i8] }
%class.SkColorFilter.base = type { %class.SkFlattenable.base }
%class.SkMaskFilterBase = type { %class.SkMaskFilter.base, [4 x i8] }
%class.SkMaskFilter.base = type { %class.SkFlattenable.base }
%class.Listener = type { %class.SkIDChangeListener.base, [3 x i8], %class.GrUniqueKeyInvalidatedMessage }
%class.SkIDChangeListener.base = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.2" }
%class.SkMessageBus = type { %class.SkTDArray.167, %class.SkMutex }
%class.SkTDArray.167 = type { %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"**, i32, i32 }

$_ZN9GrSwizzleC2EPKc = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZN11GrUniqueKeyaSERKS_ = comdat any

$_ZN12SkMessageBusI29GrUniqueKeyInvalidatedMessagejLb1EE4PostES0_ = comdat any

$_ZN8SkTArrayI29GrUniqueKeyInvalidatedMessageLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

$_ZN8SkTArrayI29GrUniqueKeyInvalidatedMessageLb0EE4moveILb0EEENSt3__19enable_ifIXntT_EvE4typeEPv = comdat any

@_ZZ20GrMakeKeyFromImageIDP11GrUniqueKeyjRK7SkIRectE14kImageIDDomain = internal global i32 0, align 4
@_ZGVZ20GrMakeKeyFromImageIDP11GrUniqueKeyjRK7SkIRectE14kImageIDDomain = internal global i64 0, align 8
@.str = private unnamed_addr constant [6 x i8] c"Image\00", align 1
@_ZL17SK_PMColor4fWHITE = internal constant %struct.SkRGBA4f { float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00 }, align 4
@.str.1 = private unnamed_addr constant [5 x i8] c"rgba\00", align 1
@_ZTV14GrDitherEffect = external unnamed_addr constant { [10 x i8*] }, align 8
@_ZTV24GrClampFragmentProcessor = external unnamed_addr constant { [10 x i8*] }, align 8
@_ZTVZ35GrMakeUniqueKeyInvalidationListenerP11GrUniqueKeyjE8Listener = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.Listener*)* @_ZZ35GrMakeUniqueKeyInvalidationListenerP11GrUniqueKeyjEN8ListenerD2Ev to i8*), i8* bitcast (void (%class.Listener*)* @_ZZ35GrMakeUniqueKeyInvalidationListenerP11GrUniqueKeyjEN8ListenerD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.Listener*)* @_ZZ35GrMakeUniqueKeyInvalidationListenerP11GrUniqueKeyjEN8Listener7changedEv to i8*)] }, align 8
@switch.table._ZL14make_bmp_proxyP15GrProxyProviderRK8SkBitmap11GrColorType11GrMipmapped12SkBackingFit10SkBudgeted.4 = private unnamed_addr constant [31 x i64] [i64 0, i64 1, i64 2, i64 3, i64 4, i64 4, i64 5, i64 15, i64 6, i64 7, i64 8, i64 11, i64 0, i64 16, i64 13, i64 12, i64 14, i64 18, i64 19, i64 17, i64 20, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0], align 8
@switch.table._Z29GrMakeUncachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped12SkBackingFit10SkBudgeted = private unnamed_addr constant [21 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 6, i32 8, i32 9, i32 10, i32 0, i32 0, i32 11, i32 15, i32 14, i32 16, i32 7, i32 13, i32 19, i32 17, i32 18, i32 20], align 4
@switch.table._ZL23skpaint_to_grpaint_implP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderPNSt3__110unique_ptrI19GrFragmentProcessorNSA_14default_deleteISC_EEEEP11SkBlendModeP7GrPaint = private unnamed_addr constant [31 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 4, i32 5, i32 15, i32 6, i32 7, i32 8, i32 11, i32 0, i32 16, i32 13, i32 12, i32 14, i32 18, i32 19, i32 17, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z20GrMakeKeyFromImageIDP11GrUniqueKeyjRK7SkIRect(%class.GrUniqueKey*, i32, %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZ20GrMakeKeyFromImageIDP11GrUniqueKeyjRK7SkIRectE14kImageIDDomain to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %12, !prof !2

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ20GrMakeKeyFromImageIDP11GrUniqueKeyjRK7SkIRectE14kImageIDDomain) #11
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = tail call i32 @_ZN11GrUniqueKey14GenerateDomainEv() #11
  store i32 %10, i32* @_ZZ20GrMakeKeyFromImageIDP11GrUniqueKeyjRK7SkIRectE14kImageIDDomain, align 4
  %11 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (i32* @_ZZ20GrMakeKeyFromImageIDP11GrUniqueKeyjRK7SkIRectE14kImageIDDomain to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZ20GrMakeKeyFromImageIDP11GrUniqueKeyjRK7SkIRectE14kImageIDDomain) #11
  br label %12

12:                                               ; preds = %6, %9, %3
  %13 = load i32, i32* @_ZZ20GrMakeKeyFromImageIDP11GrUniqueKeyjRK7SkIRectE14kImageIDDomain, align 4
  %14 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i64 0
  %17 = icmp eq i32* %15, %16
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  %19 = bitcast i32* %15 to i8*
  tail call void @_Z7sk_freePv(i8* %19) #11
  br label %20

20:                                               ; preds = %12, %18
  store i32* %16, i32** %14, align 8
  %21 = or i32 %13, 1835008
  %22 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 2
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8** %23, align 8
  %24 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i64 2
  store i32 %1, i32* %24, align 4
  %25 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i64 3
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i64 4
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i64 5
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i64 6
  store i32 %35, i32* %36, align 4
  %37 = icmp eq %class.GrUniqueKey* %0, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %20
  %39 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i64 1
  %40 = lshr i32 %21, 16
  %41 = zext i32 %40 to i64
  %42 = add nsw i64 %41, -4
  %43 = tail call i32 @_Z17GrResourceKeyHashPKjm(i32* %39, i64 %42) #11
  store i32 %43, i32* %16, align 4
  br label %44

44:                                               ; preds = %20, %38
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

declare i32 @_ZN11GrUniqueKey14GenerateDomainEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z35GrMakeUniqueKeyInvalidationListenerP11GrUniqueKeyj(%class.sk_sp.1* noalias nocapture sret, %class.GrUniqueKey*, i32) local_unnamed_addr #0 {
  %4 = alloca %class.sk_sp, align 8
  %5 = tail call i8* @_Znwm(i64 80) #12, !noalias !3
  %6 = bitcast i8* %5 to %class.SkIDChangeListener*
  tail call void @_ZN18SkIDChangeListenerC2Ev(%class.SkIDChangeListener* nonnull %6) #11, !noalias !3
  %7 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVZ35GrMakeUniqueKeyInvalidationListenerP11GrUniqueKeyjE8Listener, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !noalias !3
  %8 = getelementptr inbounds i8, i8* %5, i64 16
  %9 = bitcast i8* %8 to %class.GrUniqueKey*
  %10 = getelementptr inbounds i8, i8* %5, i64 24
  %11 = bitcast i8* %10 to i32*
  %12 = bitcast i8* %8 to i8**
  store i8* %10, i8** %12, align 8, !noalias !3
  store i32 0, i32* %11, align 4, !noalias !3
  %13 = getelementptr inbounds i8, i8* %5, i64 28
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 4, !noalias !3
  %15 = getelementptr inbounds i8, i8* %5, i64 56
  %16 = bitcast i8* %15 to %class.SkData**
  store %class.SkData* null, %class.SkData** %16, align 8, !noalias !3
  %17 = tail call dereferenceable(56) %class.GrUniqueKey* @_ZN11GrUniqueKeyaSERKS_(%class.GrUniqueKey* %9, %class.GrUniqueKey* dereferenceable(56) %1) #11, !noalias !3
  %18 = getelementptr inbounds i8, i8* %5, i64 72
  %19 = bitcast i8* %18 to i32*
  store i32 %2, i32* %19, align 8, !noalias !3
  %20 = getelementptr inbounds i8, i8* %5, i64 76
  store i8 0, i8* %20, align 4, !noalias !3
  %21 = ptrtoint i8* %5 to i64
  %22 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %23 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %23, align 8
  %24 = tail call i8* @_Znwm(i64 8) #12
  %25 = getelementptr inbounds i8, i8* %5, i64 8
  %26 = bitcast i8* %25 to i32*
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  %28 = bitcast i8* %24 to i8**
  store i8* %5, i8** %28, align 8
  call void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp* nonnull sret %4, i8* nonnull %24, i64 8, void (i8*, i8*)* nonnull @"_ZZ35GrMakeUniqueKeyInvalidationListenerP11GrUniqueKeyjEN3$_08__invokeEPKvPv", i8* null) #11
  %29 = bitcast %class.sk_sp* %4 to i64*
  %30 = load i64, i64* %29, align 8
  store %class.SkData* null, %class.SkData** %23, align 8
  %31 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %1, i64 0, i32 1
  %32 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %31, i64 0, i32 0
  %33 = load %class.SkData*, %class.SkData** %32, align 8
  %34 = bitcast %class.sk_sp* %31 to i64*
  store i64 %30, i64* %34, align 8
  %35 = icmp eq %class.SkData* %33, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %3
  %37 = getelementptr inbounds %class.SkData, %class.SkData* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %33) #11
  %41 = bitcast %class.SkData* %33 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %41) #11
  br label %42

42:                                               ; preds = %40, %36, %3
  %43 = bitcast %class.sk_sp.1* %0 to i64*
  store i64 %21, i64* %43, align 8
  %44 = load %class.SkData*, %class.SkData** %23, align 8
  %45 = icmp eq %class.SkData* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.SkData, %class.SkData* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %44) #11
  %51 = bitcast %class.SkData* %44 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %51) #11
  br label %52

52:                                               ; preds = %50, %46, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  ret void
}

declare void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp* sret, i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z30GrCopyBaseMipMapToTextureProxyP18GrRecordingContext5sk_spI14GrSurfaceProxyE15GrSurfaceOrigin10SkBudgeted(%class.sk_sp.62* noalias nocapture sret, %class.GrRecordingContext*, %class.sk_sp.62* nocapture, i32, i1 zeroext) local_unnamed_addr #0 {
  %6 = alloca %class.sk_sp.62, align 8
  %7 = alloca %class.sk_sp.62, align 8
  %8 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %2, i64 0, i32 0
  %9 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %8, align 8
  %10 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %9, i64 0, i32 14
  %11 = load i8, i8* %10, align 2, !range !6
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %0, i64 0, i32 0
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %14, align 8
  br label %57

15:                                               ; preds = %5
  %16 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %1, i64 0, i32 0, i32 0
  %17 = tail call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %16) #11
  %18 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %8, align 8
  %19 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %18, i64 0, i32 5
  %20 = bitcast %class.GrCaps* %17 to i1 (%class.GrCaps*, %class.GrBackendFormat*)***
  %21 = load i1 (%class.GrCaps*, %class.GrBackendFormat*)**, i1 (%class.GrCaps*, %class.GrBackendFormat*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%class.GrCaps*, %class.GrBackendFormat*)*, i1 (%class.GrCaps*, %class.GrBackendFormat*)** %21, i64 5
  %23 = load i1 (%class.GrCaps*, %class.GrBackendFormat*)*, i1 (%class.GrCaps*, %class.GrBackendFormat*)** %22, align 8
  %24 = tail call zeroext i1 %23(%class.GrCaps* %17, %class.GrBackendFormat* dereferenceable(72) %19) #11
  br i1 %24, label %27, label %25

25:                                               ; preds = %15
  %26 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %0, i64 0, i32 0
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %26, align 8
  br label %57

27:                                               ; preds = %15
  %28 = bitcast %class.sk_sp.62* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  %29 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %6, i64 0, i32 0
  store %class.GrSurfaceProxy* inttoptr (i64 -6148914691236517206 to %class.GrSurfaceProxy*), %class.GrSurfaceProxy** %29, align 8
  %30 = bitcast %class.sk_sp.62* %2 to i64*
  %31 = load i64, i64* %30, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %8, align 8
  %32 = bitcast %class.sk_sp.62* %7 to i64*
  store i64 %31, i64* %32, align 8
  call void @_ZN14GrSurfaceProxy4CopyEP18GrRecordingContext5sk_spIS_E15GrSurfaceOrigin11GrMipmapped12SkBackingFit10SkBudgetedPS2_I12GrRenderTaskE(%class.sk_sp.62* nonnull sret %6, %class.GrRecordingContext* %1, %class.sk_sp.62* nonnull %7, i32 %3, i1 zeroext true, i32 1, i1 zeroext %4, %class.sk_sp.111* null) #11
  %33 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %7, i64 0, i32 0
  %34 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %33, align 8
  %35 = icmp eq %class.GrSurfaceProxy* %34, null
  br i1 %35, label %48, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %34, i64 0, i32 1
  %38 = getelementptr inbounds %class.SkNVRefCnt.63, %class.SkNVRefCnt.63* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = getelementptr inbounds %class.SkNVRefCnt.63, %class.SkNVRefCnt.63* %37, i64 -2
  %43 = bitcast %class.SkNVRefCnt.63* %42 to %class.GrSurfaceProxy*
  %44 = bitcast %class.SkNVRefCnt.63* %42 to void (%class.GrSurfaceProxy*)***
  %45 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %44, align 8
  %46 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %45, i64 1
  %47 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %46, align 8
  call void %47(%class.GrSurfaceProxy* nonnull %43) #11
  br label %48

48:                                               ; preds = %27, %36, %41
  %49 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %29, align 8
  %50 = icmp eq %class.GrSurfaceProxy* %49, null
  br i1 %50, label %51, label %53

51:                                               ; preds = %48
  %52 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %0, i64 0, i32 0
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %52, align 8
  br label %56

53:                                               ; preds = %48
  %54 = ptrtoint %class.GrSurfaceProxy* %49 to i64
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %29, align 8
  %55 = bitcast %class.sk_sp.62* %0 to i64*
  store i64 %54, i64* %55, align 8
  br label %56

56:                                               ; preds = %51, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %57

57:                                               ; preds = %56, %25, %13
  ret void
}

declare void @_ZN14GrSurfaceProxy4CopyEP18GrRecordingContext5sk_spIS_E15GrSurfaceOrigin11GrMipmapped12SkBackingFit10SkBudgetedPS2_I12GrRenderTaskE(%class.sk_sp.62* sret, %class.GrRecordingContext*, %class.sk_sp.62*, i32, i1 zeroext, i32, i1 zeroext, %class.sk_sp.111*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z22GrCopyBaseMipMapToViewP18GrRecordingContext18GrSurfaceProxyView10SkBudgeted(%class.GrSurfaceProxyView* noalias nocapture sret, %class.GrRecordingContext*, %class.GrSurfaceProxyView* nocapture readonly, i1 zeroext) local_unnamed_addr #0 {
  %5 = alloca %class.sk_sp.62, align 8
  %6 = alloca %class.sk_sp.62, align 8
  %7 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 2, i32 0
  %10 = load i16, i16* %9, align 2, !noalias !7
  %11 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 0, i32 0
  %12 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %11, align 8, !noalias !10
  %13 = icmp eq %class.GrSurfaceProxy* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic, !noalias !10
  %17 = atomicrmw add i32* %15, i32 1 monotonic
  br label %18

18:                                               ; preds = %4, %14
  %19 = ptrtoint %class.GrSurfaceProxy* %12 to i64
  %20 = bitcast %class.sk_sp.62* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %12, i64 0, i32 14
  %22 = load i8, i8* %21, align 2, !range !6, !noalias !13
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %59

24:                                               ; preds = %18
  %25 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %1, i64 0, i32 0, i32 0
  %26 = tail call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %25) #11, !noalias !13
  %27 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %12, i64 0, i32 5
  %28 = bitcast %class.GrCaps* %26 to i1 (%class.GrCaps*, %class.GrBackendFormat*)***
  %29 = load i1 (%class.GrCaps*, %class.GrBackendFormat*)**, i1 (%class.GrCaps*, %class.GrBackendFormat*)*** %28, align 8, !noalias !13
  %30 = getelementptr inbounds i1 (%class.GrCaps*, %class.GrBackendFormat*)*, i1 (%class.GrCaps*, %class.GrBackendFormat*)** %29, i64 5
  %31 = load i1 (%class.GrCaps*, %class.GrBackendFormat*)*, i1 (%class.GrCaps*, %class.GrBackendFormat*)** %30, align 8, !noalias !13
  %32 = tail call zeroext i1 %31(%class.GrCaps* %26, %class.GrBackendFormat* dereferenceable(72) %27) #11, !noalias !13
  br i1 %32, label %33, label %59

33:                                               ; preds = %24
  %34 = bitcast %class.sk_sp.62* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11, !noalias !13
  %35 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %5, i64 0, i32 0
  store %class.GrSurfaceProxy* inttoptr (i64 -6148914691236517206 to %class.GrSurfaceProxy*), %class.GrSurfaceProxy** %35, align 8, !noalias !13
  %36 = bitcast %class.sk_sp.62* %6 to i64*
  store i64 %19, i64* %36, align 8, !noalias !13
  call void @_ZN14GrSurfaceProxy4CopyEP18GrRecordingContext5sk_spIS_E15GrSurfaceOrigin11GrMipmapped12SkBackingFit10SkBudgetedPS2_I12GrRenderTaskE(%class.sk_sp.62* nonnull sret %5, %class.GrRecordingContext* %1, %class.sk_sp.62* nonnull %6, i32 %8, i1 zeroext true, i32 1, i1 zeroext %3, %class.sk_sp.111* null) #11, !noalias !13
  %37 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %6, i64 0, i32 0
  %38 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %37, align 8, !noalias !13
  %39 = icmp eq %class.GrSurfaceProxy* %38, null
  br i1 %39, label %52, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %38, i64 0, i32 1
  %42 = getelementptr inbounds %class.SkNVRefCnt.63, %class.SkNVRefCnt.63* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel, !noalias !13
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %52

45:                                               ; preds = %40
  %46 = getelementptr inbounds %class.SkNVRefCnt.63, %class.SkNVRefCnt.63* %41, i64 -2
  %47 = bitcast %class.SkNVRefCnt.63* %46 to %class.GrSurfaceProxy*
  %48 = bitcast %class.SkNVRefCnt.63* %46 to void (%class.GrSurfaceProxy*)***
  %49 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %48, align 8, !noalias !13
  %50 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %49, i64 1
  %51 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %50, align 8, !noalias !13
  call void %51(%class.GrSurfaceProxy* nonnull %47) #11, !noalias !13
  br label %52

52:                                               ; preds = %45, %40, %33
  %53 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %35, align 8, !noalias !13
  %54 = icmp eq %class.GrSurfaceProxy* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %52
  %56 = ptrtoint %class.GrSurfaceProxy* %53 to i64
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %35, align 8, !noalias !13
  br label %57

57:                                               ; preds = %52, %55
  %58 = phi i64 [ %56, %55 ], [ 0, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11, !noalias !13
  br label %59

59:                                               ; preds = %57, %18, %24
  %60 = phi i64 [ %58, %57 ], [ 0, %18 ], [ 0, %24 ]
  %61 = phi i64 [ 0, %57 ], [ %19, %18 ], [ %19, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  %62 = bitcast %class.GrSurfaceProxyView* %0 to i64*
  store i64 %60, i64* %62, align 8
  %63 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 1
  store i32 %8, i32* %63, align 8
  %64 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2, i32 0
  store i16 %10, i16* %64, align 2
  %65 = icmp eq i64 %61, 0
  br i1 %65, label %79, label %66

66:                                               ; preds = %59
  %67 = inttoptr i64 %61 to %class.GrSurfaceProxy*
  %68 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %67, i64 0, i32 1
  %69 = getelementptr inbounds %class.SkNVRefCnt.63, %class.SkNVRefCnt.63* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %79

72:                                               ; preds = %66
  %73 = getelementptr inbounds %class.SkNVRefCnt.63, %class.SkNVRefCnt.63* %68, i64 -2
  %74 = bitcast %class.SkNVRefCnt.63* %73 to %class.GrSurfaceProxy*
  %75 = bitcast %class.SkNVRefCnt.63* %73 to void (%class.GrSurfaceProxy*)***
  %76 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %75, align 8
  %77 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %76, i64 1
  %78 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %77, align 8
  call void %78(%class.GrSurfaceProxy* nonnull %74) #11
  br label %79

79:                                               ; preds = %59, %66, %72
  br i1 %13, label %92, label %80

80:                                               ; preds = %79
  %81 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %12, i64 0, i32 1
  %82 = getelementptr inbounds %class.SkNVRefCnt.63, %class.SkNVRefCnt.63* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 -1 acq_rel
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %92

85:                                               ; preds = %80
  %86 = getelementptr inbounds %class.SkNVRefCnt.63, %class.SkNVRefCnt.63* %81, i64 -2
  %87 = bitcast %class.SkNVRefCnt.63* %86 to %class.GrSurfaceProxy*
  %88 = bitcast %class.SkNVRefCnt.63* %86 to void (%class.GrSurfaceProxy*)***
  %89 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %89, i64 1
  %91 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %90, align 8
  call void %91(%class.GrSurfaceProxy* nonnull %87) #11
  br label %92

92:                                               ; preds = %79, %80, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z27GrMakeCachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped(%"class.std::__1::tuple"* noalias sret, %class.GrRecordingContext*, %class.SkBitmap* dereferenceable(56), i1 zeroext) local_unnamed_addr #0 {
  %5 = alloca %class.sk_sp.62, align 8
  %6 = alloca %class.sk_sp.62, align 8
  %7 = alloca %class.sk_sp.1, align 8
  %8 = alloca %class.sk_sp.1, align 8
  %9 = alloca %class.GrBackendFormat, align 8
  %10 = alloca %class.sk_sp.1, align 8
  %11 = alloca %class.sk_sp.1, align 8
  %12 = alloca %class.GrUniqueKey, align 8
  %13 = alloca { i64, i64 }, align 8
  %14 = alloca %class.sk_sp.125, align 8
  %15 = alloca %class.sk_sp.125, align 8
  %16 = alloca %class.GrSwizzle, align 2
  %17 = tail call zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap* %2, %class.SkPixmap* null) #11
  br i1 %17, label %22, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %20 = bitcast %"class.std::__1::tuple"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #11
  tail call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #11
  %21 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 0, i32* %21, align 4
  br label %464

22:                                               ; preds = %4
  %23 = bitcast { i64, i64 }* %13 to %struct.SkIRect*
  %24 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %25 = load %class.GrProxyProvider*, %class.GrProxyProvider** %24, align 8
  %26 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %1, i64 0, i32 0, i32 0
  %27 = tail call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %26) #11
  %28 = bitcast %class.GrUniqueKey* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %28) #11
  %29 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i64 2
  %30 = bitcast i32* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false)
  %31 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %12, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i64 0
  store i32* %32, i32** %31, align 8
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %12, i64 0, i32 1, i32 0
  %35 = bitcast %class.SkData** %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #11
  %36 = call i64 @_ZNK8SkBitmap14pixelRefOriginEv(%class.SkBitmap* %2) #11
  %37 = bitcast { i64, i64 }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #11
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 1
  %39 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 1
  %40 = bitcast %struct.SkISize* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = shl i64 %36, 32
  %43 = ashr exact i64 %42, 32
  %44 = shl i64 %41, 32
  %45 = ashr exact i64 %44, 32
  %46 = add nsw i64 %45, %43
  %47 = icmp slt i64 %46, 2147483647
  %48 = select i1 %47, i64 %46, i64 2147483647
  %49 = icmp sgt i64 %48, -2147483647
  %50 = select i1 %49, i64 %48, i64 -2147483647
  %51 = ashr i64 %36, 32
  %52 = ashr i64 %41, 32
  %53 = add nsw i64 %52, %51
  %54 = icmp slt i64 %53, 2147483647
  %55 = select i1 %54, i64 %53, i64 2147483647
  %56 = icmp sgt i64 %55, -2147483647
  %57 = select i1 %56, i64 %55, i64 -2147483647
  %58 = shl nsw i64 %57, 32
  %59 = and i64 %50, 4294967295
  %60 = or i64 %59, %58
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 0
  store i64 %36, i64* %61, align 8
  store i64 %60, i64* %38, align 8
  %62 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 0, i32 0
  %63 = load %class.SkPixelRef*, %class.SkPixelRef** %62, align 8
  %64 = call i32 @_ZNK10SkPixelRef15getGenerationIDEv(%class.SkPixelRef* %63) #11
  call void @_Z20GrMakeKeyFromImageIDP11GrUniqueKeyjRK7SkIRect(%class.GrUniqueKey* nonnull %12, i32 %64, %struct.SkIRect* nonnull dereferenceable(16) %23)
  %65 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %27, i64 0, i32 3
  %66 = bitcast i48* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 2
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %77, label %70

70:                                               ; preds = %22
  %71 = load i64, i64* %40, align 8
  %72 = lshr i64 %71, 32
  %73 = mul i64 %72, %71
  %74 = trunc i64 %73 to i32
  %75 = icmp sgt i32 %74, 1
  %76 = and i1 %75, %3
  br label %77

77:                                               ; preds = %22, %70
  %78 = phi i1 [ %76, %70 ], [ false, %22 ]
  %79 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = icmp ult i32 %80, 21
  br i1 %81, label %83, label %82

82:                                               ; preds = %77
  call void @llvm.trap() #11
  unreachable

83:                                               ; preds = %77
  %84 = sext i32 %80 to i64
  %85 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._Z29GrMakeUncachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped12SkBackingFit10SkBudgeted, i64 0, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = bitcast %class.GrBackendFormat* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %87) #11
  call void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* nonnull sret %9, %class.GrCaps* %27, i32 %86, i1 zeroext false) #11
  %88 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %9, i64 0, i32 1
  %89 = load i8, i8* %88, align 4, !range !6
  %90 = icmp eq i8 %89, 0
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %87) #11
  %91 = select i1 %90, i32 4, i32 %86
  %92 = bitcast %class.sk_sp.125* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #11
  %93 = getelementptr inbounds %class.sk_sp.125, %class.sk_sp.125* %14, i64 0, i32 0
  store %class.GrTextureProxy* inttoptr (i64 -6148914691236517206 to %class.GrTextureProxy*), %class.GrTextureProxy** %93, align 8
  call void @_ZN15GrProxyProvider28findOrCreateProxyByUniqueKeyERK11GrUniqueKeyN14GrSurfaceProxy12UseAllocatorE(%class.sk_sp.125* nonnull sret %14, %class.GrProxyProvider* %25, %class.GrUniqueKey* nonnull dereferenceable(56) %12, i32 1) #11
  %94 = load %class.GrTextureProxy*, %class.GrTextureProxy** %93, align 8
  %95 = icmp eq %class.GrTextureProxy* %94, null
  br i1 %95, label %96, label %194

96:                                               ; preds = %83
  %97 = bitcast %class.sk_sp.125* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #11
  call fastcc void @_ZL14make_bmp_proxyP15GrProxyProviderRK8SkBitmap11GrColorType11GrMipmapped12SkBackingFit10SkBudgeted(%class.sk_sp.125* nonnull sret %15, %class.GrProxyProvider* %25, %class.SkBitmap* dereferenceable(56) %2, i32 %91, i1 zeroext %78, i32 1, i1 zeroext true)
  %98 = getelementptr inbounds %class.sk_sp.125, %class.sk_sp.125* %15, i64 0, i32 0
  %99 = bitcast %class.sk_sp.125* %15 to i64*
  %100 = load i64, i64* %99, align 8
  store %class.GrTextureProxy* null, %class.GrTextureProxy** %98, align 8
  %101 = load %class.GrTextureProxy*, %class.GrTextureProxy** %93, align 8
  %102 = bitcast %class.sk_sp.125* %14 to i64*
  store i64 %100, i64* %102, align 8
  %103 = icmp eq %class.GrTextureProxy* %101, null
  br i1 %103, label %104, label %106

104:                                              ; preds = %96
  %105 = inttoptr i64 %100 to %class.GrTextureProxy*
  br label %149

106:                                              ; preds = %96
  %107 = bitcast %class.GrTextureProxy* %101 to i8**
  %108 = load i8*, i8** %107, align 8
  %109 = getelementptr i8, i8* %108, i64 -24
  %110 = bitcast i8* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, 8
  %113 = bitcast %class.GrTextureProxy* %101 to i8*
  %114 = getelementptr inbounds i8, i8* %113, i64 %112
  %115 = bitcast i8* %114 to i32*
  %116 = atomicrmw add i32* %115, i32 -1 acq_rel
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %118, label %125

118:                                              ; preds = %106
  %119 = getelementptr inbounds i8, i8* %113, i64 %111
  %120 = bitcast i8* %119 to %class.GrSurfaceProxy*
  %121 = bitcast i8* %119 to void (%class.GrSurfaceProxy*)***
  %122 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %121, align 8
  %123 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %122, i64 1
  %124 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %123, align 8
  call void %124(%class.GrSurfaceProxy* nonnull %120) #11
  br label %125

125:                                              ; preds = %106, %118
  %126 = load %class.GrTextureProxy*, %class.GrTextureProxy** %98, align 8
  %127 = icmp eq %class.GrTextureProxy* %126, null
  br i1 %127, label %147, label %128

128:                                              ; preds = %125
  %129 = bitcast %class.GrTextureProxy* %126 to i8**
  %130 = load i8*, i8** %129, align 8
  %131 = getelementptr i8, i8* %130, i64 -24
  %132 = bitcast i8* %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 8
  %135 = bitcast %class.GrTextureProxy* %126 to i8*
  %136 = getelementptr inbounds i8, i8* %135, i64 %134
  %137 = bitcast i8* %136 to i32*
  %138 = atomicrmw add i32* %137, i32 -1 acq_rel
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %140, label %147

140:                                              ; preds = %128
  %141 = getelementptr inbounds i8, i8* %135, i64 %133
  %142 = bitcast i8* %141 to %class.GrSurfaceProxy*
  %143 = bitcast i8* %141 to void (%class.GrSurfaceProxy*)***
  %144 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %143, align 8
  %145 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %144, i64 1
  %146 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %145, align 8
  call void %146(%class.GrSurfaceProxy* nonnull %142) #11
  br label %147

147:                                              ; preds = %140, %128, %125
  %148 = load %class.GrTextureProxy*, %class.GrTextureProxy** %93, align 8
  br label %149

149:                                              ; preds = %147, %104
  %150 = phi %class.GrTextureProxy* [ %148, %147 ], [ %105, %104 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #11
  %151 = icmp eq %class.GrTextureProxy* %150, null
  br i1 %151, label %152, label %156

152:                                              ; preds = %149
  %153 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %154 = bitcast %"class.std::__1::tuple"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 16, i1 false) #11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %153, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #11
  %155 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 0, i32* %155, align 4
  br label %427

156:                                              ; preds = %149
  %157 = bitcast %class.sk_sp.1* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157)
  %158 = bitcast %class.sk_sp.1* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #11
  %159 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %7, i64 0, i32 0
  store %class.SkIDChangeListener* inttoptr (i64 -6148914691236517206 to %class.SkIDChangeListener*), %class.SkIDChangeListener** %159, align 8
  %160 = call i32 @_ZNK15GrProxyProvider9contextIDEv(%class.GrProxyProvider* %25) #11
  call void @_Z35GrMakeUniqueKeyInvalidationListenerP11GrUniqueKeyj(%class.sk_sp.1* nonnull sret %7, %class.GrUniqueKey* nonnull %12, i32 %160) #11
  %161 = load %class.SkPixelRef*, %class.SkPixelRef** %62, align 8
  %162 = bitcast %class.sk_sp.1* %7 to i64*
  %163 = load i64, i64* %162, align 8
  store %class.SkIDChangeListener* null, %class.SkIDChangeListener** %159, align 8
  %164 = bitcast %class.sk_sp.1* %8 to i64*
  store i64 %163, i64* %164, align 8
  call void @_ZN10SkPixelRef22addGenIDChangeListenerE5sk_spI18SkIDChangeListenerE(%class.SkPixelRef* %161, %class.sk_sp.1* nonnull %8) #11
  %165 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %8, i64 0, i32 0
  %166 = load %class.SkIDChangeListener*, %class.SkIDChangeListener** %165, align 8
  %167 = icmp eq %class.SkIDChangeListener* %166, null
  br i1 %167, label %178, label %168

168:                                              ; preds = %156
  %169 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %166, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = atomicrmw add i32* %169, i32 -1 acq_rel
  %171 = icmp eq i32 %170, 1
  br i1 %171, label %172, label %178

172:                                              ; preds = %168
  %173 = bitcast %class.SkIDChangeListener* %166 to %class.SkRefCntBase*
  %174 = bitcast %class.SkIDChangeListener* %166 to void (%class.SkRefCntBase*)***
  %175 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %174, align 8
  %176 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %175, i64 2
  %177 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %176, align 8
  call void %177(%class.SkRefCntBase* nonnull %173) #11
  br label %178

178:                                              ; preds = %172, %168, %156
  %179 = call zeroext i1 @_ZN15GrProxyProvider22assignUniqueKeyToProxyERK11GrUniqueKeyP14GrTextureProxy(%class.GrProxyProvider* %25, %class.GrUniqueKey* nonnull dereferenceable(56) %12, %class.GrTextureProxy* nonnull %150) #11
  %180 = load %class.SkIDChangeListener*, %class.SkIDChangeListener** %159, align 8
  %181 = icmp eq %class.SkIDChangeListener* %180, null
  br i1 %181, label %192, label %182

182:                                              ; preds = %178
  %183 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %180, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = atomicrmw add i32* %183, i32 -1 acq_rel
  %185 = icmp eq i32 %184, 1
  br i1 %185, label %186, label %192

186:                                              ; preds = %182
  %187 = bitcast %class.SkIDChangeListener* %180 to %class.SkRefCntBase*
  %188 = bitcast %class.SkIDChangeListener* %180 to void (%class.SkRefCntBase*)***
  %189 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %188, align 8
  %190 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %189, i64 2
  %191 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %190, align 8
  call void %191(%class.SkRefCntBase* nonnull %187) #11
  br label %192

192:                                              ; preds = %178, %182, %186
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157)
  %193 = load %class.GrTextureProxy*, %class.GrTextureProxy** %93, align 8
  br label %194

194:                                              ; preds = %83, %192
  %195 = phi %class.GrTextureProxy* [ %94, %83 ], [ %193, %192 ]
  %196 = bitcast %class.GrSwizzle* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %196) #11
  %197 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %16, i64 0, i32 0
  store i16 -21846, i16* %197, align 2
  %198 = bitcast %class.GrTextureProxy* %195 to i8**
  %199 = load i8*, i8** %198, align 8
  %200 = getelementptr i8, i8* %199, i64 -24
  %201 = bitcast i8* %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = bitcast %class.GrTextureProxy* %195 to i8*
  %204 = getelementptr inbounds i8, i8* %203, i64 %202
  %205 = getelementptr inbounds i8, i8* %204, i64 32
  %206 = bitcast i8* %205 to %class.GrBackendFormat*
  call void @_ZNK6GrCaps14getReadSwizzleERK15GrBackendFormat11GrColorType(%class.GrSwizzle* nonnull sret %16, %class.GrCaps* %27, %class.GrBackendFormat* dereferenceable(72) %206, i32 %91) #11
  br i1 %78, label %207, label %210

207:                                              ; preds = %194
  %208 = load %class.GrTextureProxy*, %class.GrTextureProxy** %93, align 8
  %209 = call zeroext i1 @_ZNK14GrTextureProxy9mipmappedEv(%class.GrTextureProxy* %208) #11
  br i1 %209, label %210, label %252

210:                                              ; preds = %194, %207
  %211 = load %class.GrTextureProxy*, %class.GrTextureProxy** %93, align 8
  store %class.GrTextureProxy* null, %class.GrTextureProxy** %93, align 8
  %212 = icmp eq %class.GrTextureProxy* %211, null
  br i1 %212, label %213, label %216

213:                                              ; preds = %210
  %214 = load i16, i16* %197, align 2
  %215 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %232

216:                                              ; preds = %210
  %217 = bitcast %class.GrTextureProxy* %211 to i8**
  %218 = load i8*, i8** %217, align 8
  %219 = getelementptr i8, i8* %218, i64 -24
  %220 = bitcast i8* %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast %class.GrTextureProxy* %211 to i8*
  %223 = getelementptr inbounds i8, i8* %222, i64 %221
  %224 = load i16, i16* %197, align 2
  %225 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = icmp eq i8* %223, null
  br i1 %226, label %232, label %227

227:                                              ; preds = %216
  %228 = bitcast i8* %223 to %class.GrSurfaceProxy*
  %229 = getelementptr inbounds i8, i8* %223, i64 8
  %230 = bitcast i8* %229 to i32*
  %231 = atomicrmw add i32* %230, i32 1 monotonic
  br label %232

232:                                              ; preds = %213, %216, %227
  %233 = phi i1 [ true, %213 ], [ true, %216 ], [ false, %227 ]
  %234 = phi %class.GrSurfaceProxy** [ %215, %213 ], [ %225, %216 ], [ %225, %227 ]
  %235 = phi i16 [ %214, %213 ], [ %224, %216 ], [ %224, %227 ]
  %236 = phi %class.GrSurfaceProxy* [ null, %213 ], [ null, %216 ], [ %228, %227 ]
  store %class.GrSurfaceProxy* %236, %class.GrSurfaceProxy** %234, align 8
  %237 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %237, align 8
  %238 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  store i16 %235, i16* %238, align 4
  %239 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 %91, i32* %239, align 4
  br i1 %233, label %426, label %240

240:                                              ; preds = %232
  %241 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %236, i64 0, i32 1
  %242 = getelementptr inbounds %class.SkNVRefCnt.63, %class.SkNVRefCnt.63* %241, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = atomicrmw add i32* %242, i32 -1 acq_rel
  %244 = icmp eq i32 %243, 1
  br i1 %244, label %245, label %426

245:                                              ; preds = %240
  %246 = getelementptr inbounds %class.SkNVRefCnt.63, %class.SkNVRefCnt.63* %241, i64 -2
  %247 = bitcast %class.SkNVRefCnt.63* %246 to %class.GrSurfaceProxy*
  %248 = bitcast %class.SkNVRefCnt.63* %246 to void (%class.GrSurfaceProxy*)***
  %249 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %248, align 8
  %250 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %249, i64 1
  %251 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %250, align 8
  call void %251(%class.GrSurfaceProxy* nonnull %247) #11
  br label %426

252:                                              ; preds = %207
  %253 = load %class.GrTextureProxy*, %class.GrTextureProxy** %93, align 8
  %254 = icmp eq %class.GrTextureProxy* %253, null
  br i1 %254, label %272, label %255

255:                                              ; preds = %252
  %256 = bitcast %class.GrTextureProxy* %253 to i8**
  %257 = load i8*, i8** %256, align 8
  %258 = getelementptr i8, i8* %257, i64 -24
  %259 = bitcast i8* %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = add i64 %260, 8
  %262 = bitcast %class.GrTextureProxy* %253 to i8*
  %263 = getelementptr inbounds i8, i8* %262, i64 %261
  %264 = bitcast i8* %263 to i32*
  %265 = atomicrmw add i32* %264, i32 1 monotonic
  %266 = load i8*, i8** %256, align 8
  %267 = getelementptr i8, i8* %266, i64 -24
  %268 = bitcast i8* %267 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = getelementptr inbounds i8, i8* %262, i64 %269
  %271 = bitcast i8* %270 to %class.GrSurfaceProxy*
  br label %272

272:                                              ; preds = %252, %255
  %273 = phi %class.GrSurfaceProxy* [ %271, %255 ], [ null, %252 ]
  %274 = ptrtoint %class.GrSurfaceProxy* %273 to i64
  %275 = bitcast %class.sk_sp.62* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %275)
  %276 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %273, i64 0, i32 14
  %277 = load i8, i8* %276, align 2, !range !6, !noalias !16
  %278 = icmp eq i8 %277, 0
  br i1 %278, label %279, label %309

279:                                              ; preds = %272
  %280 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %26) #11, !noalias !16
  %281 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %273, i64 0, i32 5
  %282 = bitcast %class.GrCaps* %280 to i1 (%class.GrCaps*, %class.GrBackendFormat*)***
  %283 = load i1 (%class.GrCaps*, %class.GrBackendFormat*)**, i1 (%class.GrCaps*, %class.GrBackendFormat*)*** %282, align 8, !noalias !16
  %284 = getelementptr inbounds i1 (%class.GrCaps*, %class.GrBackendFormat*)*, i1 (%class.GrCaps*, %class.GrBackendFormat*)** %283, i64 5
  %285 = load i1 (%class.GrCaps*, %class.GrBackendFormat*)*, i1 (%class.GrCaps*, %class.GrBackendFormat*)** %284, align 8, !noalias !16
  %286 = call zeroext i1 %285(%class.GrCaps* %280, %class.GrBackendFormat* dereferenceable(72) %281) #11, !noalias !16
  br i1 %286, label %287, label %309

287:                                              ; preds = %279
  %288 = bitcast %class.sk_sp.62* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %288) #11, !noalias !16
  %289 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %5, i64 0, i32 0
  store %class.GrSurfaceProxy* inttoptr (i64 -6148914691236517206 to %class.GrSurfaceProxy*), %class.GrSurfaceProxy** %289, align 8, !noalias !16
  %290 = bitcast %class.sk_sp.62* %6 to i64*
  store i64 %274, i64* %290, align 8, !noalias !16
  call void @_ZN14GrSurfaceProxy4CopyEP18GrRecordingContext5sk_spIS_E15GrSurfaceOrigin11GrMipmapped12SkBackingFit10SkBudgetedPS2_I12GrRenderTaskE(%class.sk_sp.62* nonnull sret %5, %class.GrRecordingContext* %1, %class.sk_sp.62* nonnull %6, i32 0, i1 zeroext true, i32 1, i1 zeroext true, %class.sk_sp.111* null) #11, !noalias !16
  %291 = getelementptr inbounds %class.sk_sp.62, %class.sk_sp.62* %6, i64 0, i32 0
  %292 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %291, align 8, !noalias !16
  %293 = icmp eq %class.GrSurfaceProxy* %292, null
  br i1 %293, label %306, label %294

294:                                              ; preds = %287
  %295 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %292, i64 0, i32 1
  %296 = getelementptr inbounds %class.SkNVRefCnt.63, %class.SkNVRefCnt.63* %295, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = atomicrmw add i32* %296, i32 -1 acq_rel, !noalias !16
  %298 = icmp eq i32 %297, 1
  br i1 %298, label %299, label %306

299:                                              ; preds = %294
  %300 = getelementptr inbounds %class.SkNVRefCnt.63, %class.SkNVRefCnt.63* %295, i64 -2
  %301 = bitcast %class.SkNVRefCnt.63* %300 to %class.GrSurfaceProxy*
  %302 = bitcast %class.SkNVRefCnt.63* %300 to void (%class.GrSurfaceProxy*)***
  %303 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %302, align 8, !noalias !16
  %304 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %303, i64 1
  %305 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %304, align 8, !noalias !16
  call void %305(%class.GrSurfaceProxy* nonnull %301) #11, !noalias !16
  br label %306

306:                                              ; preds = %299, %294, %287
  %307 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %289, align 8, !noalias !16
  %308 = icmp eq %class.GrSurfaceProxy* %307, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %288) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %275)
  br i1 %308, label %341, label %323

309:                                              ; preds = %279, %272
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %275)
  %310 = icmp eq %class.GrSurfaceProxy* %273, null
  br i1 %310, label %341, label %311

311:                                              ; preds = %309
  %312 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %273, i64 0, i32 1
  %313 = getelementptr inbounds %class.SkNVRefCnt.63, %class.SkNVRefCnt.63* %312, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %314 = atomicrmw add i32* %313, i32 -1 acq_rel
  %315 = icmp eq i32 %314, 1
  br i1 %315, label %316, label %341

316:                                              ; preds = %311
  %317 = getelementptr inbounds %class.SkNVRefCnt.63, %class.SkNVRefCnt.63* %312, i64 -2
  %318 = bitcast %class.SkNVRefCnt.63* %317 to %class.GrSurfaceProxy*
  %319 = bitcast %class.SkNVRefCnt.63* %317 to void (%class.GrSurfaceProxy*)***
  %320 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %319, align 8
  %321 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %320, i64 1
  %322 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %321, align 8
  call void %322(%class.GrSurfaceProxy* nonnull %318) #11
  br label %341

323:                                              ; preds = %306
  %324 = load %class.GrTextureProxy*, %class.GrTextureProxy** %93, align 8
  call void @_ZN15GrProxyProvider24removeUniqueKeyFromProxyEP14GrTextureProxy(%class.GrProxyProvider* %25, %class.GrTextureProxy* %324) #11
  %325 = bitcast %class.GrSurfaceProxy* %307 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %326 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %325, align 8
  %327 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %326, i64 3
  %328 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %327, align 8
  %329 = call %class.GrTextureProxy* %328(%class.GrSurfaceProxy* nonnull %307) #11
  %330 = bitcast %class.sk_sp.1* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %330)
  %331 = bitcast %class.sk_sp.1* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %331) #11
  %332 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %10, i64 0, i32 0
  store %class.SkIDChangeListener* inttoptr (i64 -6148914691236517206 to %class.SkIDChangeListener*), %class.SkIDChangeListener** %332, align 8
  %333 = call i32 @_ZNK15GrProxyProvider9contextIDEv(%class.GrProxyProvider* %25) #11
  call void @_Z35GrMakeUniqueKeyInvalidationListenerP11GrUniqueKeyj(%class.sk_sp.1* nonnull sret %10, %class.GrUniqueKey* nonnull %12, i32 %333) #11
  %334 = load %class.SkPixelRef*, %class.SkPixelRef** %62, align 8
  %335 = bitcast %class.sk_sp.1* %10 to i64*
  %336 = load i64, i64* %335, align 8
  store %class.SkIDChangeListener* null, %class.SkIDChangeListener** %332, align 8
  %337 = bitcast %class.sk_sp.1* %11 to i64*
  store i64 %336, i64* %337, align 8
  call void @_ZN10SkPixelRef22addGenIDChangeListenerE5sk_spI18SkIDChangeListenerE(%class.SkPixelRef* %334, %class.sk_sp.1* nonnull %11) #11
  %338 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %11, i64 0, i32 0
  %339 = load %class.SkIDChangeListener*, %class.SkIDChangeListener** %338, align 8
  %340 = icmp eq %class.SkIDChangeListener* %339, null
  br i1 %340, label %393, label %383

341:                                              ; preds = %306, %316, %311, %309
  %342 = load %class.GrTextureProxy*, %class.GrTextureProxy** %93, align 8
  store %class.GrTextureProxy* null, %class.GrTextureProxy** %93, align 8
  %343 = icmp eq %class.GrTextureProxy* %342, null
  br i1 %343, label %344, label %347

344:                                              ; preds = %341
  %345 = load i16, i16* %197, align 2
  %346 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %363

347:                                              ; preds = %341
  %348 = bitcast %class.GrTextureProxy* %342 to i8**
  %349 = load i8*, i8** %348, align 8
  %350 = getelementptr i8, i8* %349, i64 -24
  %351 = bitcast i8* %350 to i64*
  %352 = load i64, i64* %351, align 8
  %353 = bitcast %class.GrTextureProxy* %342 to i8*
  %354 = getelementptr inbounds i8, i8* %353, i64 %352
  %355 = load i16, i16* %197, align 2
  %356 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %357 = icmp eq i8* %354, null
  br i1 %357, label %363, label %358

358:                                              ; preds = %347
  %359 = bitcast i8* %354 to %class.GrSurfaceProxy*
  %360 = getelementptr inbounds i8, i8* %354, i64 8
  %361 = bitcast i8* %360 to i32*
  %362 = atomicrmw add i32* %361, i32 1 monotonic
  br label %363

363:                                              ; preds = %344, %347, %358
  %364 = phi i1 [ true, %344 ], [ true, %347 ], [ false, %358 ]
  %365 = phi %class.GrSurfaceProxy** [ %346, %344 ], [ %356, %347 ], [ %356, %358 ]
  %366 = phi i16 [ %345, %344 ], [ %355, %347 ], [ %355, %358 ]
  %367 = phi %class.GrSurfaceProxy* [ null, %344 ], [ null, %347 ], [ %359, %358 ]
  store %class.GrSurfaceProxy* %367, %class.GrSurfaceProxy** %365, align 8
  %368 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %368, align 8
  %369 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  store i16 %366, i16* %369, align 4
  %370 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 %91, i32* %370, align 4
  br i1 %364, label %426, label %371

371:                                              ; preds = %363
  %372 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %367, i64 0, i32 1
  %373 = getelementptr inbounds %class.SkNVRefCnt.63, %class.SkNVRefCnt.63* %372, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %374 = atomicrmw add i32* %373, i32 -1 acq_rel
  %375 = icmp eq i32 %374, 1
  br i1 %375, label %376, label %426

376:                                              ; preds = %371
  %377 = getelementptr inbounds %class.SkNVRefCnt.63, %class.SkNVRefCnt.63* %372, i64 -2
  %378 = bitcast %class.SkNVRefCnt.63* %377 to %class.GrSurfaceProxy*
  %379 = bitcast %class.SkNVRefCnt.63* %377 to void (%class.GrSurfaceProxy*)***
  %380 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %379, align 8
  %381 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %380, i64 1
  %382 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %381, align 8
  call void %382(%class.GrSurfaceProxy* nonnull %378) #11
  br label %426

383:                                              ; preds = %323
  %384 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %339, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %385 = atomicrmw add i32* %384, i32 -1 acq_rel
  %386 = icmp eq i32 %385, 1
  br i1 %386, label %387, label %393

387:                                              ; preds = %383
  %388 = bitcast %class.SkIDChangeListener* %339 to %class.SkRefCntBase*
  %389 = bitcast %class.SkIDChangeListener* %339 to void (%class.SkRefCntBase*)***
  %390 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %389, align 8
  %391 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %390, i64 2
  %392 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %391, align 8
  call void %392(%class.SkRefCntBase* nonnull %388) #11
  br label %393

393:                                              ; preds = %387, %383, %323
  %394 = call zeroext i1 @_ZN15GrProxyProvider22assignUniqueKeyToProxyERK11GrUniqueKeyP14GrTextureProxy(%class.GrProxyProvider* %25, %class.GrUniqueKey* nonnull dereferenceable(56) %12, %class.GrTextureProxy* %329) #11
  %395 = load %class.SkIDChangeListener*, %class.SkIDChangeListener** %332, align 8
  %396 = icmp eq %class.SkIDChangeListener* %395, null
  br i1 %396, label %407, label %397

397:                                              ; preds = %393
  %398 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %395, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %399 = atomicrmw add i32* %398, i32 -1 acq_rel
  %400 = icmp eq i32 %399, 1
  br i1 %400, label %401, label %407

401:                                              ; preds = %397
  %402 = bitcast %class.SkIDChangeListener* %395 to %class.SkRefCntBase*
  %403 = bitcast %class.SkIDChangeListener* %395 to void (%class.SkRefCntBase*)***
  %404 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %403, align 8
  %405 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %404, i64 2
  %406 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %405, align 8
  call void %406(%class.SkRefCntBase* nonnull %402) #11
  br label %407

407:                                              ; preds = %401, %397, %393
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %331) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %330)
  %408 = load i16, i16* %197, align 2
  %409 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %307, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %411 = atomicrmw add i32* %410, i32 1 monotonic
  store %class.GrSurfaceProxy* %307, %class.GrSurfaceProxy** %409, align 8
  %412 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %412, align 8
  %413 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  store i16 %408, i16* %413, align 4
  %414 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 %91, i32* %414, align 4
  %415 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %307, i64 0, i32 1
  %416 = getelementptr inbounds %class.SkNVRefCnt.63, %class.SkNVRefCnt.63* %415, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %417 = atomicrmw add i32* %416, i32 -1 acq_rel
  %418 = icmp eq i32 %417, 1
  br i1 %418, label %419, label %426

419:                                              ; preds = %407
  %420 = getelementptr inbounds %class.SkNVRefCnt.63, %class.SkNVRefCnt.63* %415, i64 -2
  %421 = bitcast %class.SkNVRefCnt.63* %420 to %class.GrSurfaceProxy*
  %422 = bitcast %class.SkNVRefCnt.63* %420 to void (%class.GrSurfaceProxy*)***
  %423 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %422, align 8
  %424 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %423, i64 1
  %425 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %424, align 8
  call void %425(%class.GrSurfaceProxy* nonnull %421) #11
  br label %426

426:                                              ; preds = %376, %371, %363, %407, %419, %232, %240, %245
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %196) #11
  br label %427

427:                                              ; preds = %426, %152
  %428 = load %class.GrTextureProxy*, %class.GrTextureProxy** %93, align 8
  %429 = icmp eq %class.GrTextureProxy* %428, null
  br i1 %429, label %449, label %430

430:                                              ; preds = %427
  %431 = bitcast %class.GrTextureProxy* %428 to i8**
  %432 = load i8*, i8** %431, align 8
  %433 = getelementptr i8, i8* %432, i64 -24
  %434 = bitcast i8* %433 to i64*
  %435 = load i64, i64* %434, align 8
  %436 = add i64 %435, 8
  %437 = bitcast %class.GrTextureProxy* %428 to i8*
  %438 = getelementptr inbounds i8, i8* %437, i64 %436
  %439 = bitcast i8* %438 to i32*
  %440 = atomicrmw add i32* %439, i32 -1 acq_rel
  %441 = icmp eq i32 %440, 1
  br i1 %441, label %442, label %449

442:                                              ; preds = %430
  %443 = getelementptr inbounds i8, i8* %437, i64 %435
  %444 = bitcast i8* %443 to %class.GrSurfaceProxy*
  %445 = bitcast i8* %443 to void (%class.GrSurfaceProxy*)***
  %446 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %445, align 8
  %447 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %446, i64 1
  %448 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %447, align 8
  call void %448(%class.GrSurfaceProxy* nonnull %444) #11
  br label %449

449:                                              ; preds = %427, %430, %442
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #11
  %450 = load %class.SkData*, %class.SkData** %34, align 8
  %451 = icmp eq %class.SkData* %450, null
  br i1 %451, label %458, label %452

452:                                              ; preds = %449
  %453 = getelementptr inbounds %class.SkData, %class.SkData* %450, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %454 = atomicrmw add i32* %453, i32 -1 acq_rel
  %455 = icmp eq i32 %454, 1
  br i1 %455, label %456, label %458

456:                                              ; preds = %452
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %450) #11
  %457 = bitcast %class.SkData* %450 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %457) #11
  br label %458

458:                                              ; preds = %456, %452, %449
  %459 = load i32*, i32** %31, align 8
  %460 = icmp eq i32* %459, %32
  br i1 %460, label %463, label %461

461:                                              ; preds = %458
  %462 = bitcast i32* %459 to i8*
  call void @_Z7sk_freePv(i8* %462) #11
  br label %463

463:                                              ; preds = %458, %461
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %28) #11
  br label %464

464:                                              ; preds = %463, %18
  ret void
}

declare zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap*, %class.SkPixmap*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare i64 @_ZNK8SkBitmap14pixelRefOriginEv(%class.SkBitmap*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare i32 @_ZNK10SkPixelRef15getGenerationIDEv(%class.SkPixelRef*) local_unnamed_addr #2

declare void @_ZN15GrProxyProvider28findOrCreateProxyByUniqueKeyERK11GrUniqueKeyN14GrSurfaceProxy12UseAllocatorE(%class.sk_sp.125* sret, %class.GrProxyProvider*, %class.GrUniqueKey* dereferenceable(56), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL14make_bmp_proxyP15GrProxyProviderRK8SkBitmap11GrColorType11GrMipmapped12SkBackingFit10SkBudgeted(%class.sk_sp.125* noalias nocapture sret, %class.GrProxyProvider*, %class.SkBitmap* dereferenceable(56), i32, i1 zeroext, i32, i1 zeroext) unnamed_addr #0 {
  %8 = alloca %class.SkBitmap, align 8
  %9 = alloca %struct.SkImageInfo, align 8
  %10 = alloca %class.sk_sp.125, align 8
  %11 = bitcast %class.SkBitmap* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %8) #11
  %12 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ult i32 %13, 21
  br i1 %14, label %16, label %15

15:                                               ; preds = %7
  call void @llvm.trap() #11
  unreachable

16:                                               ; preds = %7
  %17 = sext i32 %13 to i64
  %18 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._Z29GrMakeUncachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped12SkBackingFit10SkBudgeted, i64 0, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, %3
  br i1 %20, label %86, label %21

21:                                               ; preds = %16
  %22 = icmp ult i32 %3, 31
  br i1 %22, label %24, label %23

23:                                               ; preds = %21
  call void @llvm.trap() #11
  unreachable

24:                                               ; preds = %21
  %25 = sext i32 %3 to i64
  %26 = getelementptr inbounds [31 x i64], [31 x i64]* @switch.table._ZL14make_bmp_proxyP15GrProxyProviderRK8SkBitmap11GrColorType11GrMipmapped12SkBackingFit10SkBudgeted.4, i64 0, i64 %25
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %struct.SkImageInfo* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11
  %29 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 1
  %30 = bitcast %struct.SkISize* %29 to i64*
  %31 = load i64, i64* %30, align 8, !noalias !19
  %32 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 0, i32 2
  %33 = load i32, i32* %32, align 4, !noalias !22
  %34 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %35 = load %class.SkColorSpace*, %class.SkColorSpace** %34, align 8, !noalias !25
  %36 = icmp eq %class.SkColorSpace* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %24
  %38 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 1 monotonic, !noalias !25
  br label %40

40:                                               ; preds = %24, %37
  %41 = ptrtoint %class.SkColorSpace* %35 to i64
  %42 = zext i32 %33 to i64
  %43 = shl nuw i64 %42, 32
  %44 = or i64 %43, %27
  %45 = bitcast %struct.SkImageInfo* %9 to i64*
  store i64 %41, i64* %45, align 8, !alias.scope !28
  %46 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %9, i64 0, i32 0, i32 1
  %47 = bitcast i32* %46 to i64*
  store i64 %44, i64* %47, align 8, !alias.scope !28
  %48 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %9, i64 0, i32 1
  %49 = bitcast %struct.SkISize* %48 to i64*
  store i64 %31, i64* %49, align 8, !alias.scope !28
  %50 = shl i64 %31, 32
  %51 = ashr exact i64 %50, 32
  %52 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %9, i64 0, i32 0
  %53 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %52) #11
  %54 = sext i32 %53 to i64
  %55 = mul nsw i64 %51, %54
  %56 = icmp ult i64 %55, 2147483648
  %57 = select i1 %56, i64 %55, i64 0
  %58 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %8, %struct.SkImageInfo* nonnull dereferenceable(24) %9, i64 %57) #11
  br i1 %58, label %59, label %72

59:                                               ; preds = %40
  %60 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1
  %61 = call zeroext i1 @_ZNK8SkBitmap10readPixelsERK8SkPixmapii(%class.SkBitmap* %2, %class.SkPixmap* dereferenceable(40) %60, i32 0, i32 0) #11
  %62 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %9, i64 0, i32 0, i32 0, i32 0
  %63 = load %class.SkColorSpace*, %class.SkColorSpace** %62, align 8
  %64 = icmp eq %class.SkColorSpace* %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 -1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = bitcast %class.SkColorSpace* %63 to i8*
  call void @_ZdlPv(i8* %70) #12
  br label %71

71:                                               ; preds = %59, %65, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  br i1 %61, label %85, label %83

72:                                               ; preds = %40
  %73 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %9, i64 0, i32 0, i32 0, i32 0
  %74 = load %class.SkColorSpace*, %class.SkColorSpace** %73, align 8
  %75 = icmp eq %class.SkColorSpace* %74, null
  br i1 %75, label %82, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 -1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %82

80:                                               ; preds = %76
  %81 = bitcast %class.SkColorSpace* %74 to i8*
  call void @_ZdlPv(i8* %81) #12
  br label %82

82:                                               ; preds = %72, %76, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  br label %83

83:                                               ; preds = %71, %82
  %84 = getelementptr inbounds %class.sk_sp.125, %class.sk_sp.125* %0, i64 0, i32 0
  store %class.GrTextureProxy* null, %class.GrTextureProxy** %84, align 8
  br label %94

85:                                               ; preds = %71
  call void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap* nonnull %8) #11
  br label %88

86:                                               ; preds = %16
  %87 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* nonnull %8, %class.SkBitmap* dereferenceable(56) %2) #11
  br label %88

88:                                               ; preds = %86, %85
  %89 = bitcast %class.sk_sp.125* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #11
  %90 = getelementptr inbounds %class.sk_sp.125, %class.sk_sp.125* %10, i64 0, i32 0
  store %class.GrTextureProxy* inttoptr (i64 -6148914691236517206 to %class.GrTextureProxy*), %class.GrTextureProxy** %90, align 8
  call void @_ZN15GrProxyProvider21createProxyFromBitmapERK8SkBitmap11GrMipmapped12SkBackingFit10SkBudgeted(%class.sk_sp.125* nonnull sret %10, %class.GrProxyProvider* %1, %class.SkBitmap* nonnull dereferenceable(56) %8, i1 zeroext %4, i32 %5, i1 zeroext %6) #11
  %91 = bitcast %class.sk_sp.125* %10 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %class.sk_sp.125* %0 to i64*
  store i64 %92, i64* %93, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #11
  br label %94

94:                                               ; preds = %83, %88
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %11) #11
  ret void
}

declare void @_ZNK6GrCaps14getReadSwizzleERK15GrBackendFormat11GrColorType(%class.GrSwizzle* sret, %class.GrCaps*, %class.GrBackendFormat* dereferenceable(72), i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK14GrTextureProxy9mipmappedEv(%class.GrTextureProxy*) local_unnamed_addr #2

declare void @_ZN15GrProxyProvider24removeUniqueKeyFromProxyEP14GrTextureProxy(%class.GrProxyProvider*, %class.GrTextureProxy*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z29GrMakeUncachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped12SkBackingFit10SkBudgeted(%"class.std::__1::tuple"* noalias sret, %class.GrRecordingContext*, %class.SkBitmap* dereferenceable(56), i1 zeroext, i32, i1 zeroext) local_unnamed_addr #0 {
  %7 = alloca %class.GrBackendFormat, align 8
  %8 = alloca %class.sk_sp.125, align 8
  %9 = alloca %class.GrSwizzle, align 2
  %10 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %11 = load %class.GrProxyProvider*, %class.GrProxyProvider** %10, align 8
  %12 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %1, i64 0, i32 0, i32 0
  %13 = tail call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %12) #11
  %14 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %13, i64 0, i32 3
  %15 = bitcast i48* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 2
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %6
  %20 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 1
  %21 = bitcast %struct.SkISize* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = lshr i64 %22, 32
  %24 = mul i64 %23, %22
  %25 = trunc i64 %24 to i32
  %26 = icmp sgt i32 %25, 1
  %27 = and i1 %26, %3
  br label %28

28:                                               ; preds = %6, %19
  %29 = phi i1 [ %27, %19 ], [ false, %6 ]
  %30 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp ult i32 %31, 21
  br i1 %32, label %34, label %33

33:                                               ; preds = %28
  tail call void @llvm.trap() #11
  unreachable

34:                                               ; preds = %28
  %35 = sext i32 %31 to i64
  %36 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._Z29GrMakeUncachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped12SkBackingFit10SkBudgeted, i64 0, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = bitcast %class.GrBackendFormat* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %38) #11
  call void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* nonnull sret %7, %class.GrCaps* %13, i32 %37, i1 zeroext false) #11
  %39 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %7, i64 0, i32 1
  %40 = load i8, i8* %39, align 4, !range !6
  %41 = icmp eq i8 %40, 0
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %38) #11
  %42 = select i1 %41, i32 4, i32 %37
  %43 = bitcast %class.sk_sp.125* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #11
  %44 = getelementptr inbounds %class.sk_sp.125, %class.sk_sp.125* %8, i64 0, i32 0
  store %class.GrTextureProxy* inttoptr (i64 -6148914691236517206 to %class.GrTextureProxy*), %class.GrTextureProxy** %44, align 8
  call fastcc void @_ZL14make_bmp_proxyP15GrProxyProviderRK8SkBitmap11GrColorType11GrMipmapped12SkBackingFit10SkBudgeted(%class.sk_sp.125* nonnull sret %8, %class.GrProxyProvider* %11, %class.SkBitmap* dereferenceable(56) %2, i32 %42, i1 zeroext %29, i32 %4, i1 zeroext %5)
  %45 = load %class.GrTextureProxy*, %class.GrTextureProxy** %44, align 8
  %46 = icmp eq %class.GrTextureProxy* %45, null
  br i1 %46, label %111, label %47

47:                                               ; preds = %34
  %48 = bitcast %class.GrSwizzle* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %48) #11
  %49 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %9, i64 0, i32 0
  store i16 -21846, i16* %49, align 2
  %50 = bitcast %class.GrTextureProxy* %45 to i8**
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr i8, i8* %51, i64 -24
  %53 = bitcast i8* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %class.GrTextureProxy* %45 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = getelementptr inbounds i8, i8* %56, i64 32
  %58 = bitcast i8* %57 to %class.GrBackendFormat*
  call void @_ZNK6GrCaps14getReadSwizzleERK15GrBackendFormat11GrColorType(%class.GrSwizzle* nonnull sret %9, %class.GrCaps* %13, %class.GrBackendFormat* dereferenceable(72) %58, i32 %42) #11
  store %class.GrTextureProxy* null, %class.GrTextureProxy** %44, align 8
  %59 = load i8*, i8** %50, align 8
  %60 = getelementptr i8, i8* %59, i64 -24
  %61 = bitcast i8* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds i8, i8* %55, i64 %62
  %64 = load i16, i16* %49, align 2
  %65 = icmp eq i8* %63, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %47
  %67 = getelementptr inbounds i8, i8* %63, i64 8
  %68 = bitcast i8* %67 to i32*
  %69 = atomicrmw add i32* %68, i32 1 monotonic
  %70 = bitcast %"class.std::__1::tuple"* %0 to i8**
  store i8* %63, i8** %70, align 8
  %71 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  store i16 %64, i16* %72, align 4
  %73 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 %42, i32* %73, align 4
  %74 = atomicrmw add i32* %68, i32 -1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %88

76:                                               ; preds = %66
  %77 = getelementptr inbounds i8, i8* %67, i64 -8
  %78 = bitcast i8* %77 to %class.GrSurfaceProxy*
  %79 = bitcast i8* %77 to void (%class.GrSurfaceProxy*)***
  %80 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %79, align 8
  %81 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %80, i64 1
  %82 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %81, align 8
  call void %82(%class.GrSurfaceProxy* nonnull %78) #11
  br label %88

83:                                               ; preds = %47
  %84 = bitcast %"class.std::__1::tuple"* %0 to i8**
  store i8* null, i8** %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  store i16 %64, i16* %86, align 4
  %87 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 %42, i32* %87, align 4
  br label %88

88:                                               ; preds = %83, %76, %66
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %48) #11
  %89 = load %class.GrTextureProxy*, %class.GrTextureProxy** %44, align 8
  %90 = icmp eq %class.GrTextureProxy* %89, null
  br i1 %90, label %110, label %91

91:                                               ; preds = %88
  %92 = bitcast %class.GrTextureProxy* %89 to i8**
  %93 = load i8*, i8** %92, align 8
  %94 = getelementptr i8, i8* %93, i64 -24
  %95 = bitcast i8* %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, 8
  %98 = bitcast %class.GrTextureProxy* %89 to i8*
  %99 = getelementptr inbounds i8, i8* %98, i64 %97
  %100 = bitcast i8* %99 to i32*
  %101 = atomicrmw add i32* %100, i32 -1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %110

103:                                              ; preds = %91
  %104 = getelementptr inbounds i8, i8* %98, i64 %96
  %105 = bitcast i8* %104 to %class.GrSurfaceProxy*
  %106 = bitcast i8* %104 to void (%class.GrSurfaceProxy*)***
  %107 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %106, align 8
  %108 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %107, i64 1
  %109 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %108, align 8
  call void %109(%class.GrSurfaceProxy* nonnull %105) #11
  br label %110

110:                                              ; preds = %88, %91, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11
  br label %115

111:                                              ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11
  %112 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %113 = bitcast %"class.std::__1::tuple"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 16, i1 false) #11
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %112, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #11
  %114 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 0, i32* %114, align 4
  br label %115

115:                                              ; preds = %110, %111
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_Z18SkColorToPMColor4fjRK11GrColorInfo(i32, %class.GrColorInfo* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = tail call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 %0) #11
  %6 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %7 = extractvalue { <2 x float>, <2 x float> } %5, 0
  store <2 x float> %7, <2 x float>* %6, align 8
  %8 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %9 = extractvalue { <2 x float>, <2 x float> } %5, 1
  store <2 x float> %9, <2 x float>* %8, align 8
  %10 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %1, i64 0, i32 1, i32 0
  %11 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %10, align 8
  %12 = icmp eq %class.GrColorSpaceXform* %11, null
  %13 = bitcast <2 x float> %7 to <2 x i32>
  %14 = extractelement <2 x i32> %13, i32 0
  %15 = extractelement <2 x float> %7, i32 1
  br i1 %12, label %26, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1, i64 0
  %18 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRGBA4f.133*
  %19 = call { <2 x float>, <2 x float> } @_ZN17GrColorSpaceXform5applyERK8SkRGBA4fIL11SkAlphaType3EE(%class.GrColorSpaceXform* nonnull %11, %struct.SkRGBA4f.133* nonnull dereferenceable(16) %18) #11
  %20 = extractvalue { <2 x float>, <2 x float> } %19, 0
  %21 = extractvalue { <2 x float>, <2 x float> } %19, 1
  store <2 x float> %20, <2 x float>* %6, align 8
  %22 = bitcast float* %17 to <2 x float>*
  store <2 x float> %21, <2 x float>* %22, align 8
  %23 = bitcast <2 x float> %20 to <2 x i32>
  %24 = extractelement <2 x i32> %23, i32 0
  %25 = extractelement <2 x float> %20, i32 1
  br label %26

26:                                               ; preds = %2, %16
  %27 = phi float [ %15, %2 ], [ %25, %16 ]
  %28 = phi i32 [ %14, %2 ], [ %24, %16 ]
  %29 = phi <2 x float> [ %9, %2 ], [ %21, %16 ]
  %30 = bitcast i32 %28 to float
  %31 = extractelement <2 x float> %29, i32 1
  %32 = fmul float %31, %30
  %33 = insertelement <2 x float> undef, float %32, i32 0
  %34 = fmul float %31, %27
  %35 = insertelement <2 x float> %33, float %34, i32 1
  %36 = extractelement <2 x float> %29, i32 0
  %37 = fmul float %31, %36
  %38 = insertelement <2 x float> %29, float %37, i32 0
  %39 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %35, 0
  %40 = insertvalue { <2 x float>, <2 x float> } %39, <2 x float> %38, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret { <2 x float>, <2 x float> } %40
}

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN17GrColorSpaceXform5applyERK8SkRGBA4fIL11SkAlphaType3EE(%class.GrColorSpaceXform*, %struct.SkRGBA4f.133* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_Z19SkColor4fPrepForDst8SkRGBA4fIL11SkAlphaType3EERK11GrColorInfo(<2 x float>, <2 x float>, %class.GrColorInfo* nocapture readonly dereferenceable(24)) local_unnamed_addr #5 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %0, <2 x float>* %5, align 8
  %6 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %1, <2 x float>* %6, align 8
  %7 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %2, i64 0, i32 1, i32 0
  %8 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %7, align 8
  %9 = icmp eq %class.GrColorSpaceXform* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %3
  %11 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRGBA4f.133*
  %12 = call { <2 x float>, <2 x float> } @_ZN17GrColorSpaceXform5applyERK8SkRGBA4fIL11SkAlphaType3EE(%class.GrColorSpaceXform* nonnull %8, %struct.SkRGBA4f.133* nonnull dereferenceable(16) %11) #11
  %13 = extractvalue { <2 x float>, <2 x float> } %12, 0
  %14 = extractvalue { <2 x float>, <2 x float> } %12, 1
  store <2 x float> %13, <2 x float>* %5, align 8
  %15 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1, i64 0
  %16 = bitcast float* %15 to <2 x float>*
  store <2 x float> %14, <2 x float>* %16, align 8
  br label %17

17:                                               ; preds = %3, %10
  %18 = phi <2 x float> [ %14, %10 ], [ %1, %3 ]
  %19 = phi <2 x float> [ %13, %10 ], [ %0, %3 ]
  %20 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %19, 0
  %21 = insertvalue { <2 x float>, <2 x float> } %20, <2 x float> %18, 1
  ret { <2 x float>, <2 x float> } %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z16SkPaintToGrPaintP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderP7GrPaint(%class.GrRecordingContext*, %class.GrColorInfo* dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkMatrixProvider*, %class.GrPaint* nocapture) local_unnamed_addr #0 {
  %6 = tail call fastcc zeroext i1 @_ZL23skpaint_to_grpaint_implP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderPNSt3__110unique_ptrI19GrFragmentProcessorNSA_14default_deleteISC_EEEEP11SkBlendModeP7GrPaint(%class.GrRecordingContext* %0, %class.GrColorInfo* dereferenceable(24) %1, %class.SkPaint* dereferenceable(72) %2, %class.SkMatrixProvider* %3, %"class.std::__1::unique_ptr.141"* null, i32* null, %class.GrPaint* %4)
  ret i1 %6
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZL23skpaint_to_grpaint_implP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderPNSt3__110unique_ptrI19GrFragmentProcessorNSA_14default_deleteISC_EEEEP11SkBlendModeP7GrPaint(%class.GrRecordingContext*, %class.GrColorInfo* dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkMatrixProvider*, %"class.std::__1::unique_ptr.141"*, i32* readonly, %class.GrPaint* nocapture) unnamed_addr #6 {
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRGBA4f.133*
  %11 = alloca %struct.GrFPArgs, align 8
  %12 = alloca { <2 x float>, <2 x float> }, align 8
  %13 = bitcast { <2 x float>, <2 x float> }* %12 to %struct.SkRGBA4f*
  %14 = alloca <4 x float>, align 16
  %15 = bitcast <4 x float>* %14 to %struct.SkRGBA4f*
  %16 = alloca <4 x float>, align 16
  %17 = bitcast <4 x float>* %16 to %struct.SkRGBA4f*
  %18 = alloca float, align 4
  %19 = alloca float, align 4
  %20 = alloca float, align 4
  %21 = alloca float, align 4
  %22 = alloca float, align 4
  %23 = alloca float, align 4
  %24 = alloca float, align 4
  %25 = alloca float, align 4
  %26 = alloca float, align 4
  %27 = alloca float, align 4
  %28 = alloca float, align 4
  %29 = alloca float, align 4
  %30 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #11
  %31 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0, i64 0
  %32 = getelementptr inbounds %struct.SkRGBA4f.133, %struct.SkRGBA4f.133* %10, i64 0, i32 1
  %33 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1, i64 0
  %34 = getelementptr inbounds %struct.SkRGBA4f.133, %struct.SkRGBA4f.133* %10, i64 0, i32 3
  %35 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 5
  %36 = bitcast %struct.SkRGBA4f.133* %35 to <2 x float>*
  %37 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -1, i64 16, i1 false)
  %38 = load <2 x float>, <2 x float>* %36, align 8
  %39 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 5, i32 2
  %40 = bitcast float* %39 to <2 x float>*
  %41 = load <2 x float>, <2 x float>* %40, align 8
  %42 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42)
  %43 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  store <2 x float> %38, <2 x float>* %43, align 8
  %44 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  store <2 x float> %41, <2 x float>* %44, align 8
  %45 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %1, i64 0, i32 1, i32 0
  %46 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %45, align 8
  %47 = icmp eq %class.GrColorSpaceXform* %46, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %7
  %49 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRGBA4f.133*
  %50 = call { <2 x float>, <2 x float> } @_ZN17GrColorSpaceXform5applyERK8SkRGBA4fIL11SkAlphaType3EE(%class.GrColorSpaceXform* nonnull %46, %struct.SkRGBA4f.133* nonnull dereferenceable(16) %49) #11
  %51 = extractvalue { <2 x float>, <2 x float> } %50, 0
  %52 = extractvalue { <2 x float>, <2 x float> } %50, 1
  store <2 x float> %51, <2 x float>* %43, align 8
  %53 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1, i64 0
  %54 = bitcast float* %53 to <2 x float>*
  store <2 x float> %52, <2 x float>* %54, align 8
  br label %55

55:                                               ; preds = %7, %48
  %56 = phi <2 x float> [ %52, %48 ], [ %41, %7 ]
  %57 = phi <2 x float> [ %51, %48 ], [ %38, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42)
  %58 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  store <2 x float> %57, <2 x float>* %58, align 8
  %59 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  store <2 x float> %56, <2 x float>* %59, align 8
  %60 = bitcast %struct.GrFPArgs* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 32, i1 false)
  %61 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %11, i64 0, i32 0
  store %class.GrRecordingContext* %0, %class.GrRecordingContext** %61, align 8
  %62 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %11, i64 0, i32 1
  store %class.SkMatrixProvider* %3, %class.SkMatrixProvider** %62, align 8
  %63 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %11, i64 0, i32 2
  store %class.SkMatrix* null, %class.SkMatrix** %63, align 8
  %64 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %11, i64 0, i32 3
  store i8 0, i8* %64, align 8
  %65 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %11, i64 0, i32 4
  store %class.GrColorInfo* %1, %class.GrColorInfo** %65, align 8
  %66 = icmp ne i32* %5, null
  %67 = extractelement <2 x float> %56, i32 1
  br i1 %66, label %68, label %74

68:                                               ; preds = %55
  %69 = extractelement <2 x float> %56, i32 0
  %70 = extractelement <2 x float> %57, i32 1
  %71 = extractelement <2 x float> %57, i32 0
  %72 = load i32, i32* %5, align 4
  %73 = icmp eq i32 %72, 2
  br i1 %73, label %141, label %74

74:                                               ; preds = %68, %55
  %75 = fcmp oeq float %67, 1.000000e+00
  %76 = zext i1 %75 to i8
  store i8 %76, i8* %64, align 8
  %77 = icmp eq %"class.std::__1::unique_ptr.141"* %4, null
  br i1 %77, label %82, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.141"* %4, i64 0, i32 0, i32 0, i32 0
  %80 = bitcast %"class.std::__1::unique_ptr.141"* %4 to i64*
  %81 = load i64, i64* %80, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %79, align 8
  br label %95

82:                                               ; preds = %74
  %83 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 1, i32 0
  %84 = bitcast %class.SkShader** %83 to %class.SkShaderBase**
  %85 = load %class.SkShaderBase*, %class.SkShaderBase** %84, align 8
  %86 = icmp eq %class.SkShaderBase* %85, null
  br i1 %86, label %136, label %87

87:                                               ; preds = %82
  %88 = bitcast %class.SkShaderBase* %85 to %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)***
  %89 = load %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)**, %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)*** %88, align 8
  %90 = getelementptr inbounds %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)*, %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)** %89, i64 10
  %91 = load %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)*, %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)** %90, align 8
  %92 = call %class.GrFragmentProcessor* %91(%class.SkShaderBase* nonnull %85, %struct.GrFPArgs* nonnull dereferenceable(40) %11) #11
  %93 = ptrtoint %class.GrFragmentProcessor* %92 to i64
  %94 = icmp eq %class.GrFragmentProcessor* %92, null
  br i1 %94, label %412, label %95

95:                                               ; preds = %87, %78
  %96 = phi i64 [ %93, %87 ], [ %81, %78 ]
  %97 = inttoptr i64 %96 to %class.GrFragmentProcessor*
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %136, label %99

99:                                               ; preds = %95
  br i1 %66, label %100, label %121

100:                                              ; preds = %99
  %101 = bitcast { <2 x float>, <2 x float> }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %101) #11
  %102 = bitcast { <2 x float>, <2 x float> }* %9 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = load float, float* %33, align 8
  %105 = insertelement <2 x float> <float undef, float 1.000000e+00>, float %104, i32 0
  %106 = bitcast { <2 x float>, <2 x float> }* %12 to i64*
  store i64 %103, i64* %106, align 8
  %107 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1
  store <2 x float> %105, <2 x float>* %107, align 8
  %108 = call %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor13OverrideInputENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEERK8SkRGBA4fIL11SkAlphaType2EEb(%class.GrFragmentProcessor* nonnull %97, %struct.SkRGBA4f* nonnull dereferenceable(16) %13, i1 zeroext true) #11
  %109 = load i32, i32* %5, align 4
  %110 = call %class.GrFragmentProcessor* @_ZN24GrBlendFragmentProcessor4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEES5_11SkBlendModeNS_13BlendBehaviorE(%class.GrFragmentProcessor* %108, %class.GrFragmentProcessor* null, i32 %109, i32 0) #11
  %111 = load <2 x float>, <2 x float>* %40, align 8
  %112 = extractelement <2 x float> %111, i32 1
  %113 = fcmp une float %112, 1.000000e+00
  br i1 %113, label %114, label %118

114:                                              ; preds = %100
  %115 = bitcast <4 x float>* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %115) #11
  %116 = shufflevector <2 x float> %111, <2 x float> undef, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  store <4 x float> %116, <4 x float>* %14, align 16
  %117 = call %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor12ModulateRGBAENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor* %110, %struct.SkRGBA4f* nonnull dereferenceable(16) %15) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %115) #11
  br label %118

118:                                              ; preds = %114, %100
  %119 = phi %class.GrFragmentProcessor* [ %117, %114 ], [ %110, %100 ]
  %120 = ptrtoint %class.GrFragmentProcessor* %119 to i64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #11
  br label %179

121:                                              ; preds = %99
  %122 = load float, float* %34, align 4
  %123 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %124 = load <2 x float>, <2 x float>* %123, align 8
  %125 = insertelement <2 x float> undef, float %122, i32 0
  %126 = shufflevector <2 x float> %125, <2 x float> undef, <2 x i32> zeroinitializer
  %127 = fmul <2 x float> %124, %126
  %128 = load float, float* %33, align 8
  %129 = fmul float %122, %128
  %130 = insertelement <2 x float> undef, float %129, i32 0
  %131 = insertelement <2 x float> %130, float %122, i32 1
  %132 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %6, i64 0, i32 5
  %133 = bitcast %struct.SkRGBA4f* %132 to <2 x float>*
  store <2 x float> %127, <2 x float>* %133, align 4
  %134 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %6, i64 0, i32 5, i32 2
  %135 = bitcast float* %134 to <2 x float>*
  store <2 x float> %131, <2 x float>* %135, align 4
  br label %179

136:                                              ; preds = %95, %82
  %137 = load float, float* %31, align 8
  br i1 %66, label %138, label %164

138:                                              ; preds = %136
  %139 = load float, float* %32, align 4
  %140 = load float, float* %33, align 8
  br label %141

141:                                              ; preds = %138, %68
  %142 = phi float [ %140, %138 ], [ %69, %68 ]
  %143 = phi float [ %139, %138 ], [ %70, %68 ]
  %144 = phi float [ %137, %138 ], [ %71, %68 ]
  %145 = insertelement <2 x float> undef, float %144, i32 0
  %146 = insertelement <2 x float> %145, float %143, i32 1
  %147 = insertelement <2 x float> <float undef, float 1.000000e+00>, float %142, i32 0
  %148 = call %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor9MakeColorE8SkRGBA4fIL11SkAlphaType2EE(<2 x float> %146, <2 x float> %147) #11
  %149 = load i32, i32* %5, align 4
  %150 = call %class.GrFragmentProcessor* @_ZN24GrBlendFragmentProcessor4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEES5_11SkBlendModeNS_13BlendBehaviorE(%class.GrFragmentProcessor* %148, %class.GrFragmentProcessor* null, i32 %149, i32 0) #11
  %151 = ptrtoint %class.GrFragmentProcessor* %150 to i64
  %152 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %6, i64 0, i32 5
  %153 = bitcast %struct.SkRGBA4f* %152 to <2 x float>*
  store <2 x float> %146, <2 x float>* %153, align 4
  %154 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %6, i64 0, i32 5, i32 2
  %155 = bitcast float* %154 to <2 x float>*
  store <2 x float> %147, <2 x float>* %155, align 4
  %156 = load <2 x float>, <2 x float>* %40, align 8
  %157 = extractelement <2 x float> %156, i32 1
  %158 = fcmp une float %157, 1.000000e+00
  br i1 %158, label %159, label %179

159:                                              ; preds = %141
  %160 = bitcast <4 x float>* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %160) #11
  %161 = shufflevector <2 x float> %156, <2 x float> undef, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  store <4 x float> %161, <4 x float>* %16, align 16
  %162 = call %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor12ModulateRGBAENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor* %150, %struct.SkRGBA4f* nonnull dereferenceable(16) %17) #11
  %163 = ptrtoint %class.GrFragmentProcessor* %162 to i64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %160) #11
  br label %179

164:                                              ; preds = %136
  %165 = load float, float* %34, align 4
  %166 = fmul float %137, %165
  %167 = insertelement <2 x float> undef, float %166, i32 0
  %168 = load float, float* %32, align 4
  %169 = fmul float %165, %168
  %170 = insertelement <2 x float> %167, float %169, i32 1
  %171 = load float, float* %33, align 8
  %172 = fmul float %165, %171
  %173 = insertelement <2 x float> undef, float %172, i32 0
  %174 = insertelement <2 x float> %173, float %165, i32 1
  %175 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %6, i64 0, i32 5
  %176 = bitcast %struct.SkRGBA4f* %175 to <2 x float>*
  store <2 x float> %170, <2 x float>* %176, align 4
  %177 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %6, i64 0, i32 5, i32 2
  %178 = bitcast float* %177 to <2 x float>*
  store <2 x float> %174, <2 x float>* %178, align 4
  br label %179

179:                                              ; preds = %141, %159, %164, %118, %121
  %180 = phi i64 [ %120, %118 ], [ %96, %121 ], [ 0, %164 ], [ %163, %159 ], [ %151, %141 ]
  %181 = phi i1 [ false, %118 ], [ false, %121 ], [ true, %164 ], [ false, %159 ], [ false, %141 ]
  %182 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 3, i32 0
  %183 = load %class.SkColorFilter*, %class.SkColorFilter** %182, align 8
  %184 = icmp eq %class.SkColorFilter* %183, null
  br i1 %184, label %226, label %185

185:                                              ; preds = %179
  br i1 %181, label %186, label %206

186:                                              ; preds = %185
  %187 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %1, i64 0, i32 0, i32 0
  %188 = load %class.SkColorSpace*, %class.SkColorSpace** %187, align 8
  %189 = call { <2 x float>, <2 x float> } @_ZNK13SkColorFilter13filterColor4fERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpaceS6_(%class.SkColorFilter* nonnull %183, %struct.SkRGBA4f.133* nonnull dereferenceable(16) %10, %class.SkColorSpace* %188, %class.SkColorSpace* %188) #11
  %190 = extractvalue { <2 x float>, <2 x float> } %189, 0
  %191 = extractvalue { <2 x float>, <2 x float> } %189, 1
  %192 = extractelement <2 x float> %190, i32 0
  %193 = extractelement <2 x float> %191, i32 1
  %194 = fmul float %192, %193
  %195 = insertelement <2 x float> undef, float %194, i32 0
  %196 = extractelement <2 x float> %190, i32 1
  %197 = fmul float %193, %196
  %198 = insertelement <2 x float> %195, float %197, i32 1
  %199 = extractelement <2 x float> %191, i32 0
  %200 = fmul float %193, %199
  %201 = insertelement <2 x float> %191, float %200, i32 0
  %202 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %6, i64 0, i32 5
  %203 = bitcast %struct.SkRGBA4f* %202 to <2 x float>*
  store <2 x float> %198, <2 x float>* %203, align 4
  %204 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %6, i64 0, i32 5, i32 2
  %205 = bitcast float* %204 to <2 x float>*
  store <2 x float> %201, <2 x float>* %205, align 4
  br label %226

206:                                              ; preds = %185
  %207 = bitcast %class.SkColorFilter* %183 to %class.SkColorFilterBase*
  %208 = inttoptr i64 %180 to %class.GrFragmentProcessor*
  %209 = bitcast %class.SkColorFilter* %183 to { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)***
  %210 = load { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)**, { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)*** %209, align 8
  %211 = getelementptr inbounds { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)*, { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)** %210, i64 8
  %212 = load { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)*, { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)** %211, align 8
  %213 = call { i8, %class.GrFragmentProcessor* } %212(%class.SkColorFilterBase* nonnull %207, %class.GrFragmentProcessor* %208, %class.GrRecordingContext* %0, %class.GrColorInfo* dereferenceable(24) %1) #11
  %214 = extractvalue { i8, %class.GrFragmentProcessor* } %213, 0
  %215 = extractvalue { i8, %class.GrFragmentProcessor* } %213, 1
  %216 = icmp eq i8 %214, 0
  br i1 %216, label %219, label %217

217:                                              ; preds = %206
  %218 = ptrtoint %class.GrFragmentProcessor* %215 to i64
  br label %226

219:                                              ; preds = %206
  %220 = icmp eq %class.GrFragmentProcessor* %215, null
  br i1 %220, label %412, label %221

221:                                              ; preds = %219
  %222 = bitcast %class.GrFragmentProcessor* %215 to void (%class.GrFragmentProcessor*)***
  %223 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %222, align 8
  %224 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %223, i64 1
  %225 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %224, align 8
  call void %225(%class.GrFragmentProcessor* nonnull %215) #11
  br label %412

226:                                              ; preds = %217, %179, %186
  %227 = phi i64 [ %180, %179 ], [ %180, %186 ], [ %218, %217 ]
  %228 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 2, i32 0
  %229 = bitcast %class.SkMaskFilter** %228 to %class.SkMaskFilterBase**
  %230 = load %class.SkMaskFilterBase*, %class.SkMaskFilterBase** %229, align 8
  %231 = icmp eq %class.SkMaskFilterBase* %230, null
  br i1 %231, label %249, label %232

232:                                              ; preds = %226
  store i8 0, i8* %64, align 8
  %233 = call %class.GrFragmentProcessor* @_ZNK16SkMaskFilterBase19asFragmentProcessorERK8GrFPArgs(%class.SkMaskFilterBase* nonnull %230, %struct.GrFPArgs* nonnull dereferenceable(40) %11) #11
  %234 = icmp eq %class.GrFragmentProcessor* %233, null
  br i1 %234, label %249, label %235

235:                                              ; preds = %232
  %236 = ptrtoint %class.GrFragmentProcessor* %233 to i64
  %237 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %6, i64 0, i32 2
  %238 = getelementptr inbounds %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.141"* %237, i64 0, i32 0, i32 0, i32 0
  %239 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %238, align 8
  %240 = bitcast %"class.std::__1::unique_ptr.141"* %237 to i64*
  store i64 %236, i64* %240, align 8
  %241 = icmp eq %class.GrFragmentProcessor* %239, null
  br i1 %241, label %247, label %242

242:                                              ; preds = %235
  %243 = bitcast %class.GrFragmentProcessor* %239 to void (%class.GrFragmentProcessor*)***
  %244 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %243, align 8
  %245 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %244, i64 1
  %246 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %245, align 8
  call void %246(%class.GrFragmentProcessor* nonnull %239) #11
  br label %247

247:                                              ; preds = %242, %235
  %248 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %6, i64 0, i32 3
  store i8 0, i8* %248, align 8
  br label %249

249:                                              ; preds = %232, %247, %226
  %250 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %251 = load i32, i32* %250, align 8
  %252 = and i32 %251, 261120
  %253 = icmp eq i32 %252, 3072
  br i1 %253, label %264, label %254

254:                                              ; preds = %249
  %255 = lshr i32 %251, 10
  %256 = and i32 %255, 255
  %257 = call %class.GrXPFactory* @_Z23SkBlendMode_AsXPFactory11SkBlendMode(i32 %256) #11
  %258 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %6, i64 0, i32 0
  store %class.GrXPFactory* %257, %class.GrXPFactory** %258, align 8
  %259 = icmp eq %class.GrXPFactory* %257, null
  %260 = zext i1 %259 to i8
  %261 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %6, i64 0, i32 3
  %262 = load i8, i8* %261, align 8, !range !6
  %263 = and i8 %262, %260
  store i8 %263, i8* %261, align 8
  br label %264

264:                                              ; preds = %254, %249
  %265 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %1, i64 0, i32 2
  %266 = load i32, i32* %265, align 8
  %267 = icmp ult i32 %266, 31
  br i1 %267, label %269, label %268

268:                                              ; preds = %264
  call void @llvm.trap() #11
  unreachable

269:                                              ; preds = %264
  %270 = sext i32 %266 to i64
  %271 = getelementptr inbounds [31 x i32], [31 x i32]* @switch.table._ZL23skpaint_to_grpaint_implP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderPNSt3__110unique_ptrI19GrFragmentProcessorNSA_14default_deleteISC_EEEEP11SkBlendModeP7GrPaint, i64 0, i64 %270
  %272 = load i32, i32* %271, align 4
  %273 = call zeroext i1 @_ZN11SkPaintPriv12ShouldDitherERK7SkPaint11SkColorType(%class.SkPaint* dereferenceable(72) %2, i32 %272) #11
  br i1 %273, label %274, label %310

274:                                              ; preds = %269
  %275 = inttoptr i64 %227 to %class.GrFragmentProcessor*
  %276 = icmp eq i64 %227, 0
  br i1 %276, label %310, label %277

277:                                              ; preds = %274
  switch i32 %266, label %282 [
    i32 3, label %283
    i32 30, label %283
    i32 29, label %283
    i32 2, label %278
    i32 0, label %279
    i32 1, label %279
    i32 21, label %279
    i32 11, label %279
    i32 12, label %279
    i32 23, label %279
    i32 25, label %279
    i32 7, label %279
    i32 24, label %279
    i32 6, label %279
    i32 4, label %279
    i32 5, label %279
    i32 8, label %279
    i32 9, label %280
    i32 10, label %280
    i32 17, label %281
    i32 26, label %281
    i32 18, label %281
    i32 20, label %281
    i32 13, label %310
    i32 28, label %310
    i32 27, label %310
    i32 19, label %310
    i32 14, label %310
    i32 15, label %310
    i32 22, label %310
    i32 16, label %310
  ]

278:                                              ; preds = %277
  br label %283

279:                                              ; preds = %277, %277, %277, %277, %277, %277, %277, %277, %277, %277, %277, %277, %277
  br label %283

280:                                              ; preds = %277, %277
  br label %283

281:                                              ; preds = %277, %277, %277, %277
  br label %283

282:                                              ; preds = %277
  call void @llvm.trap() #11
  unreachable

283:                                              ; preds = %281, %280, %279, %278, %277, %277, %277
  %284 = phi float [ 0x3FB1111120000000, %277 ], [ 0x3FB1111120000000, %277 ], [ 0x3FB1111120000000, %277 ], [ 0x3F90410420000000, %278 ], [ 0x3F70101020000000, %279 ], [ 0x3F50040100000000, %280 ], [ 0x3F00002000000000, %281 ]
  %285 = call i8* @_ZN11GrProcessornwEm(i64 64) #11
  %286 = bitcast i8* %285 to %class.GrFragmentProcessor*
  %287 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %275, i64 0, i32 3
  %288 = load i32, i32* %287, align 8
  %289 = and i32 %288, 2
  %290 = bitcast i8* %285 to i32 (...)***
  %291 = getelementptr inbounds i8, i8* %285, i64 8
  %292 = bitcast i8* %291 to i32*
  store i32 43, i32* %292, align 8
  %293 = getelementptr inbounds i8, i8* %285, i64 12
  %294 = bitcast i8* %293 to i32*
  store i32 0, i32* %294, align 4
  %295 = getelementptr inbounds i8, i8* %285, i64 24
  %296 = getelementptr inbounds i8, i8* %285, i64 16
  %297 = getelementptr inbounds i8, i8* %285, i64 32
  %298 = bitcast i8* %297 to i64*
  %299 = bitcast i8* %295 to i8**
  store i8* %296, i8** %299, align 8
  store i64 8589934592, i64* %298, align 8
  %300 = getelementptr inbounds i8, i8* %285, i64 40
  %301 = bitcast i8* %300 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %301, align 8
  %302 = getelementptr inbounds i8, i8* %285, i64 48
  %303 = bitcast i8* %302 to i32*
  store i32 %289, i32* %303, align 8
  %304 = getelementptr inbounds i8, i8* %285, i64 52
  %305 = bitcast i8* %304 to i32*
  store i32 0, i32* %305, align 4
  %306 = getelementptr inbounds i8, i8* %285, i64 56
  store i8 0, i8* %306, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV14GrDitherEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %290, align 8
  %307 = getelementptr inbounds i8, i8* %285, i64 60
  %308 = bitcast i8* %307 to float*
  store float %284, float* %308, align 4
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %286, %class.GrFragmentProcessor* nonnull %275, i64 1) #11
  %309 = ptrtoint i8* %285 to i64
  br label %310

310:                                              ; preds = %283, %277, %277, %277, %277, %277, %277, %277, %277, %274, %269
  %311 = phi i64 [ 0, %274 ], [ %227, %269 ], [ %309, %283 ], [ %227, %277 ], [ %227, %277 ], [ %227, %277 ], [ %227, %277 ], [ %227, %277 ], [ %227, %277 ], [ %227, %277 ], [ %227, %277 ]
  %312 = load i32, i32* %265, align 8
  switch i32 %312, label %313 [
    i32 0, label %396
    i32 1, label %396
    i32 2, label %396
    i32 3, label %396
    i32 4, label %396
    i32 5, label %396
    i32 6, label %396
    i32 7, label %396
    i32 8, label %396
    i32 9, label %396
    i32 10, label %396
    i32 11, label %396
    i32 12, label %396
    i32 29, label %396
    i32 30, label %396
    i32 26, label %396
    i32 25, label %396
    i32 21, label %396
    i32 24, label %396
    i32 23, label %396
    i32 17, label %396
    i32 18, label %396
    i32 20, label %396
    i32 15, label %314
    i32 13, label %396
    i32 14, label %396
    i32 16, label %396
    i32 19, label %396
    i32 22, label %396
    i32 27, label %396
    i32 28, label %396
  ]

313:                                              ; preds = %310
  call void @llvm.trap() #11
  unreachable

314:                                              ; preds = %310
  %315 = inttoptr i64 %311 to %class.GrFragmentProcessor*
  %316 = icmp eq i64 %311, 0
  br i1 %316, label %342, label %317

317:                                              ; preds = %314
  %318 = call i8* @_ZN11GrProcessornwEm(i64 64) #11
  %319 = bitcast i8* %318 to %class.GrFragmentProcessor*
  %320 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %315, i64 0, i32 3
  %321 = load i32, i32* %320, align 8
  %322 = and i32 %321, 6
  %323 = bitcast i8* %318 to i32 (...)***
  %324 = getelementptr inbounds i8, i8* %318, i64 8
  %325 = bitcast i8* %324 to i32*
  store i32 31, i32* %325, align 8
  %326 = getelementptr inbounds i8, i8* %318, i64 12
  %327 = bitcast i8* %326 to i32*
  store i32 0, i32* %327, align 4
  %328 = getelementptr inbounds i8, i8* %318, i64 24
  %329 = getelementptr inbounds i8, i8* %318, i64 16
  %330 = getelementptr inbounds i8, i8* %318, i64 32
  %331 = bitcast i8* %330 to i64*
  %332 = bitcast i8* %328 to i8**
  store i8* %329, i8** %332, align 8
  store i64 8589934592, i64* %331, align 8
  %333 = getelementptr inbounds i8, i8* %318, i64 40
  %334 = bitcast i8* %333 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %334, align 8
  %335 = getelementptr inbounds i8, i8* %318, i64 48
  %336 = bitcast i8* %335 to i32*
  store i32 %322, i32* %336, align 8
  %337 = getelementptr inbounds i8, i8* %318, i64 52
  %338 = bitcast i8* %337 to i32*
  store i32 0, i32* %338, align 4
  %339 = getelementptr inbounds i8, i8* %318, i64 56
  store i8 0, i8* %339, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV24GrClampFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %323, align 8
  %340 = getelementptr inbounds i8, i8* %318, i64 60
  store i8 0, i8* %340, align 4
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %319, %class.GrFragmentProcessor* nonnull %315, i64 1) #11
  %341 = ptrtoint i8* %318 to i64
  br label %396

342:                                              ; preds = %314
  %343 = bitcast float* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %343)
  %344 = bitcast float* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %344)
  %345 = bitcast float* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %345)
  %346 = bitcast float* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %346)
  %347 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %6, i64 0, i32 5, i32 0
  %348 = load float, float* %347, align 4
  store float %348, float* %18, align 4
  %349 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %6, i64 0, i32 5, i32 1
  %350 = load float, float* %349, align 4
  store float %350, float* %19, align 4
  %351 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %6, i64 0, i32 5, i32 2
  %352 = load float, float* %351, align 4
  store float %352, float* %20, align 4
  %353 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %6, i64 0, i32 5, i32 3
  %354 = load float, float* %353, align 4
  store float %354, float* %21, align 4
  %355 = bitcast float* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %355)
  store float 0.000000e+00, float* %22, align 4
  %356 = bitcast float* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %356)
  store float 1.000000e+00, float* %23, align 4
  %357 = fcmp ogt float %348, 1.000000e+00
  %358 = select i1 %357, float* %23, float* %18
  %359 = load float, float* %358, align 4
  %360 = fcmp ogt float %359, 0.000000e+00
  %361 = select i1 %360, float* %358, float* %22
  %362 = bitcast float* %361 to i32*
  %363 = load i32, i32* %362, align 4
  %364 = bitcast float* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %364)
  store float 0.000000e+00, float* %24, align 4
  %365 = bitcast float* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %365)
  store float 1.000000e+00, float* %25, align 4
  %366 = fcmp ogt float %350, 1.000000e+00
  %367 = select i1 %366, float* %25, float* %19
  %368 = load float, float* %367, align 4
  %369 = fcmp ogt float %368, 0.000000e+00
  %370 = select i1 %369, float* %367, float* %24
  %371 = bitcast float* %370 to i32*
  %372 = load i32, i32* %371, align 4
  %373 = bitcast float* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %373)
  store float 0.000000e+00, float* %26, align 4
  %374 = bitcast float* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %374)
  store float 1.000000e+00, float* %27, align 4
  %375 = fcmp ogt float %352, 1.000000e+00
  %376 = select i1 %375, float* %27, float* %20
  %377 = load float, float* %376, align 4
  %378 = fcmp ogt float %377, 0.000000e+00
  %379 = select i1 %378, float* %376, float* %26
  %380 = bitcast float* %379 to i32*
  %381 = load i32, i32* %380, align 4
  %382 = bitcast float* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %382)
  store float 0.000000e+00, float* %28, align 4
  %383 = bitcast float* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %383)
  store float 1.000000e+00, float* %29, align 4
  %384 = fcmp ogt float %354, 1.000000e+00
  %385 = select i1 %384, float* %29, float* %21
  %386 = load float, float* %385, align 4
  %387 = fcmp ogt float %386, 0.000000e+00
  %388 = select i1 %387, float* %385, float* %28
  %389 = bitcast float* %388 to i32*
  %390 = load i32, i32* %389, align 4
  %391 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %6, i64 0, i32 5
  %392 = bitcast %struct.SkRGBA4f* %391 to i32*
  store i32 %363, i32* %392, align 4
  %393 = bitcast float* %349 to i32*
  store i32 %372, i32* %393, align 4
  %394 = bitcast float* %351 to i32*
  store i32 %381, i32* %394, align 4
  %395 = bitcast float* %353 to i32*
  store i32 %390, i32* %395, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %383)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %382)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %374)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %373)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %365)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %364)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %356)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %355)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %343)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %344)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %345)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %346)
  br label %412

396:                                              ; preds = %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %310, %317
  %397 = phi i64 [ %341, %317 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ], [ %311, %310 ]
  %398 = icmp eq i64 %397, 0
  br i1 %398, label %412, label %399

399:                                              ; preds = %396
  %400 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %6, i64 0, i32 1
  %401 = getelementptr inbounds %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.141"* %400, i64 0, i32 0, i32 0, i32 0
  %402 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %401, align 8
  %403 = bitcast %"class.std::__1::unique_ptr.141"* %400 to i64*
  store i64 %397, i64* %403, align 8
  %404 = icmp eq %class.GrFragmentProcessor* %402, null
  br i1 %404, label %410, label %405

405:                                              ; preds = %399
  %406 = bitcast %class.GrFragmentProcessor* %402 to void (%class.GrFragmentProcessor*)***
  %407 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %406, align 8
  %408 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %407, i64 1
  %409 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %408, align 8
  call void %409(%class.GrFragmentProcessor* nonnull %402) #11
  br label %410

410:                                              ; preds = %399, %405
  %411 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %6, i64 0, i32 3
  store i8 0, i8* %411, align 8
  br label %412

412:                                              ; preds = %87, %342, %396, %221, %219, %410
  %413 = phi i1 [ true, %410 ], [ false, %219 ], [ false, %221 ], [ true, %396 ], [ true, %342 ], [ false, %87 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #11
  ret i1 %413
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z29SkPaintToGrPaintReplaceShaderP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderNSt3__110unique_ptrI19GrFragmentProcessorNSA_14default_deleteISC_EEEEP7GrPaint(%class.GrRecordingContext*, %class.GrColorInfo* dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkMatrixProvider*, %class.GrFragmentProcessor*, %class.GrPaint* nocapture) local_unnamed_addr #0 {
  %7 = alloca %"class.std::__1::unique_ptr.141", align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.141"* %7, i64 0, i32 0, i32 0, i32 0
  store %class.GrFragmentProcessor* %4, %class.GrFragmentProcessor** %8, align 8
  %9 = icmp eq %class.GrFragmentProcessor* %4, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %8, align 8
  br label %20

11:                                               ; preds = %6
  %12 = call fastcc zeroext i1 @_ZL23skpaint_to_grpaint_implP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderPNSt3__110unique_ptrI19GrFragmentProcessorNSA_14default_deleteISC_EEEEP11SkBlendModeP7GrPaint(%class.GrRecordingContext* %0, %class.GrColorInfo* dereferenceable(24) %1, %class.SkPaint* dereferenceable(72) %2, %class.SkMatrixProvider* %3, %"class.std::__1::unique_ptr.141"* nonnull %7, i32* null, %class.GrPaint* %5)
  %13 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %8, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %8, align 8
  %14 = icmp eq %class.GrFragmentProcessor* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %class.GrFragmentProcessor* %13 to void (%class.GrFragmentProcessor*)***
  %17 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %17, i64 1
  %19 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %18, align 8
  call void %19(%class.GrFragmentProcessor* nonnull %13) #11
  br label %20

20:                                               ; preds = %10, %11, %15
  %21 = phi i1 [ false, %10 ], [ %12, %11 ], [ %12, %15 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z24SkPaintToGrPaintNoShaderP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderP7GrPaint(%class.GrRecordingContext*, %class.GrColorInfo* dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkMatrixProvider*, %class.GrPaint* nocapture) local_unnamed_addr #0 {
  %6 = alloca %"class.std::__1::unique_ptr.141", align 8
  %7 = bitcast %"class.std::__1::unique_ptr.141"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.141"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.std::__1::unique_ptr.141"* %6 to i64*
  store i64 0, i64* %9, align 8
  %10 = call fastcc zeroext i1 @_ZL23skpaint_to_grpaint_implP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderPNSt3__110unique_ptrI19GrFragmentProcessorNSA_14default_deleteISC_EEEEP11SkBlendModeP7GrPaint(%class.GrRecordingContext* %0, %class.GrColorInfo* dereferenceable(24) %1, %class.SkPaint* dereferenceable(72) %2, %class.SkMatrixProvider* %3, %"class.std::__1::unique_ptr.141"* nonnull %6, i32* null, %class.GrPaint* %4)
  %11 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %8, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %8, align 8
  %12 = icmp eq %class.GrFragmentProcessor* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %5
  %14 = bitcast %class.GrFragmentProcessor* %11 to void (%class.GrFragmentProcessor*)***
  %15 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %15, i64 1
  %17 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %16, align 8
  call void %17(%class.GrFragmentProcessor* nonnull %11) #11
  br label %18

18:                                               ; preds = %5, %13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z25SkPaintToGrPaintWithBlendP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProvider11SkBlendModeP7GrPaint(%class.GrRecordingContext*, %class.GrColorInfo* dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkMatrixProvider*, i32, %class.GrPaint* nocapture) local_unnamed_addr #0 {
  %7 = alloca i32, align 4
  store i32 %4, i32* %7, align 4
  %8 = call fastcc zeroext i1 @_ZL23skpaint_to_grpaint_implP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderPNSt3__110unique_ptrI19GrFragmentProcessorNSA_14default_deleteISC_EEEEP11SkBlendModeP7GrPaint(%class.GrRecordingContext* %0, %class.GrColorInfo* dereferenceable(24) %1, %class.SkPaint* dereferenceable(72) %2, %class.SkMatrixProvider* %3, %"class.std::__1::unique_ptr.141"* null, i32* nonnull %7, %class.GrPaint* %5)
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z38SkPaintToGrPaintWithBlendReplaceShaderP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderNSt3__110unique_ptrI19GrFragmentProcessorNSA_14default_deleteISC_EEEE11SkBlendModeP7GrPaint(%class.GrRecordingContext*, %class.GrColorInfo* dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkMatrixProvider*, %class.GrFragmentProcessor*, i32, %class.GrPaint* nocapture) local_unnamed_addr #0 {
  %8 = alloca %"class.std::__1::unique_ptr.141", align 8
  %9 = alloca i32, align 4
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.141"* %8, i64 0, i32 0, i32 0, i32 0
  store %class.GrFragmentProcessor* %4, %class.GrFragmentProcessor** %10, align 8
  store i32 %5, i32* %9, align 4
  %11 = icmp eq %class.GrFragmentProcessor* %4, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %10, align 8
  br label %22

13:                                               ; preds = %7
  %14 = call fastcc zeroext i1 @_ZL23skpaint_to_grpaint_implP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderPNSt3__110unique_ptrI19GrFragmentProcessorNSA_14default_deleteISC_EEEEP11SkBlendModeP7GrPaint(%class.GrRecordingContext* %0, %class.GrColorInfo* dereferenceable(24) %1, %class.SkPaint* dereferenceable(72) %2, %class.SkMatrixProvider* %3, %"class.std::__1::unique_ptr.141"* nonnull %8, i32* nonnull %9, %class.GrPaint* %6)
  %15 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %10, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %10, align 8
  %16 = icmp eq %class.GrFragmentProcessor* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = bitcast %class.GrFragmentProcessor* %15 to void (%class.GrFragmentProcessor*)***
  %19 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %19, i64 1
  %21 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %20, align 8
  call void %21(%class.GrFragmentProcessor* nonnull %15) #11
  br label %22

22:                                               ; preds = %12, %13, %17
  %23 = phi i1 [ false, %12 ], [ %14, %13 ], [ %14, %17 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z27SkPaintToGrPaintWithTextureP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderNSt3__110unique_ptrI19GrFragmentProcessorNSA_14default_deleteISC_EEEEbP7GrPaint(%class.GrRecordingContext*, %class.GrColorInfo* dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkMatrixProvider*, %class.GrFragmentProcessor*, i1 zeroext, %class.GrPaint* nocapture) local_unnamed_addr #0 {
  %8 = alloca %"class.std::__1::unique_ptr.141", align 8
  %9 = alloca %struct.GrFPArgs, align 8
  br i1 %5, label %10, label %32

10:                                               ; preds = %7
  %11 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 1, i32 0
  %12 = bitcast %class.SkShader** %11 to %class.SkShaderBase**
  %13 = load %class.SkShaderBase*, %class.SkShaderBase** %12, align 8
  %14 = icmp eq %class.SkShaderBase* %13, null
  br i1 %14, label %30, label %15

15:                                               ; preds = %10
  %16 = bitcast %struct.GrFPArgs* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #11
  %17 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %9, i64 0, i32 0
  store %class.GrRecordingContext* %0, %class.GrRecordingContext** %17, align 8
  %18 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %9, i64 0, i32 1
  store %class.SkMatrixProvider* %3, %class.SkMatrixProvider** %18, align 8
  %19 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %9, i64 0, i32 2
  store %class.SkMatrix* null, %class.SkMatrix** %19, align 8
  %20 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %9, i64 0, i32 3
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %9, i64 0, i32 4
  store %class.GrColorInfo* %1, %class.GrColorInfo** %21, align 8
  %22 = bitcast %class.SkShaderBase* %13 to %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)***
  %23 = load %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)**, %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)*** %22, align 8
  %24 = getelementptr inbounds %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)*, %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)** %23, i64 10
  %25 = load %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)*, %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)** %24, align 8
  %26 = call %class.GrFragmentProcessor* %25(%class.SkShaderBase* nonnull %13, %struct.GrFPArgs* nonnull dereferenceable(40) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #11
  %27 = icmp eq %class.GrFragmentProcessor* %26, null
  br i1 %27, label %59, label %28

28:                                               ; preds = %15
  %29 = call %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor7ComposeENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEES4_(%class.GrFragmentProcessor* %4, %class.GrFragmentProcessor* nonnull %26) #11
  br label %42

30:                                               ; preds = %10
  %31 = tail call %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor29MakeInputPremulAndMulByOutputENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.GrFragmentProcessor* %4) #11
  br label %42

32:                                               ; preds = %7
  %33 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 5, i32 2
  %34 = bitcast float* %33 to <2 x float>*
  %35 = load <2 x float>, <2 x float>* %34, align 8
  %36 = extractelement <2 x float> %35, i32 1
  %37 = fcmp oeq float %36, 1.000000e+00
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = tail call %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor13OverrideInputENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEERK8SkRGBA4fIL11SkAlphaType2EEb(%class.GrFragmentProcessor* %4, %struct.SkRGBA4f* nonnull dereferenceable(16) @_ZL17SK_PMColor4fWHITE, i1 zeroext false) #11
  br label %42

40:                                               ; preds = %32
  %41 = tail call %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor20MulChildByInputAlphaENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.GrFragmentProcessor* %4) #11
  br label %42

42:                                               ; preds = %30, %28, %38, %40
  %43 = phi %class.GrFragmentProcessor* [ %31, %30 ], [ %29, %28 ], [ %39, %38 ], [ %41, %40 ]
  %44 = bitcast %"class.std::__1::unique_ptr.141"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.141"* %8, i64 0, i32 0, i32 0, i32 0
  store %class.GrFragmentProcessor* %43, %class.GrFragmentProcessor** %45, align 8
  %46 = icmp eq %class.GrFragmentProcessor* %43, null
  br i1 %46, label %47, label %48

47:                                               ; preds = %42
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %45, align 8
  br label %57

48:                                               ; preds = %42
  %49 = call fastcc zeroext i1 @_ZL23skpaint_to_grpaint_implP18GrRecordingContextRK11GrColorInfoRK7SkPaintRK16SkMatrixProviderPNSt3__110unique_ptrI19GrFragmentProcessorNSA_14default_deleteISC_EEEEP11SkBlendModeP7GrPaint(%class.GrRecordingContext* %0, %class.GrColorInfo* dereferenceable(24) %1, %class.SkPaint* dereferenceable(72) %2, %class.SkMatrixProvider* %3, %"class.std::__1::unique_ptr.141"* nonnull %8, i32* null, %class.GrPaint* %6) #11
  %50 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %45, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %45, align 8
  %51 = icmp eq %class.GrFragmentProcessor* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %48
  %53 = bitcast %class.GrFragmentProcessor* %50 to void (%class.GrFragmentProcessor*)***
  %54 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %53, align 8
  %55 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %54, i64 1
  %56 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %55, align 8
  call void %56(%class.GrFragmentProcessor* nonnull %50) #11
  br label %57

57:                                               ; preds = %47, %48, %52
  %58 = phi i1 [ false, %47 ], [ %49, %48 ], [ %49, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  br label %66

59:                                               ; preds = %15
  %60 = icmp eq %class.GrFragmentProcessor* %4, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %59
  %62 = bitcast %class.GrFragmentProcessor* %4 to void (%class.GrFragmentProcessor*)***
  %63 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %62, align 8
  %64 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %63, i64 1
  %65 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %64, align 8
  call void %65(%class.GrFragmentProcessor* nonnull %4) #11
  br label %66

66:                                               ; preds = %57, %59, %61
  %67 = phi i1 [ %58, %57 ], [ false, %59 ], [ false, %61 ]
  ret i1 %67
}

declare %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor7ComposeENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEES4_(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor29MakeInputPremulAndMulByOutputENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.GrFragmentProcessor*) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor13OverrideInputENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEERK8SkRGBA4fIL11SkAlphaType2EEb(%class.GrFragmentProcessor*, %struct.SkRGBA4f* dereferenceable(16), i1 zeroext) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor20MulChildByInputAlphaENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.GrFragmentProcessor*) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

declare i32 @_Z17GrResourceKeyHashPKjm(i32*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZ35GrMakeUniqueKeyInvalidationListenerP11GrUniqueKeyjEN3$_08__invokeEPKvPv"(i8*, i8* nocapture readnone) #7 align 2 {
  %3 = bitcast i8* %0 to %class.SkIDChangeListener**
  %4 = load %class.SkIDChangeListener*, %class.SkIDChangeListener** %3, align 8
  %5 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store atomic i8 1, i8* %5 monotonic, align 1
  %6 = icmp eq i8* %0, null
  br i1 %6, label %22, label %7

7:                                                ; preds = %2
  %8 = bitcast i8* %0 to %class.Listener**
  %9 = load %class.Listener*, %class.Listener** %8, align 8
  %10 = icmp eq %class.Listener* %9, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.Listener, %class.Listener* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = bitcast %class.Listener* %9 to %class.SkRefCntBase*
  %17 = bitcast %class.Listener* %9 to void (%class.SkRefCntBase*)***
  %18 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, i64 2
  %20 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, align 8
  tail call void %20(%class.SkRefCntBase* nonnull %16) #11
  br label %21

21:                                               ; preds = %15, %11, %7
  tail call void @_ZdlPv(i8* nonnull %0) #12
  br label %22

22:                                               ; preds = %2, %21
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #9

declare %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #11
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #11
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #11
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZNK6GrCaps23getDefaultBackendFormatE11GrColorType12GrRenderable(%class.GrBackendFormat* sret, %class.GrCaps*, i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap*) local_unnamed_addr #2

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #2

declare void @_ZN15GrProxyProvider21createProxyFromBitmapERK8SkBitmap11GrMipmapped12SkBackingFit10SkBudgeted(%class.sk_sp.125* sret, %class.GrProxyProvider*, %class.SkBitmap* dereferenceable(56), i1 zeroext, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #9

declare zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #2

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkBitmap10readPixelsERK8SkPixmapii(%class.SkBitmap*, %class.SkPixmap* dereferenceable(40), i32, i32) local_unnamed_addr #2

declare i32 @_ZNK15GrProxyProvider9contextIDEv(%class.GrProxyProvider*) local_unnamed_addr #2

declare void @_ZN10SkPixelRef22addGenIDChangeListenerE5sk_spI18SkIDChangeListenerE(%class.SkPixelRef*, %class.sk_sp.1*) local_unnamed_addr #2

declare zeroext i1 @_ZN15GrProxyProvider22assignUniqueKeyToProxyERK11GrUniqueKeyP14GrTextureProxy(%class.GrProxyProvider*, %class.GrUniqueKey* dereferenceable(56), %class.GrTextureProxy*) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN24GrBlendFragmentProcessor4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEES5_11SkBlendModeNS_13BlendBehaviorE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i32, i32) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor12ModulateRGBAENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor*, %struct.SkRGBA4f* dereferenceable(16)) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor9MakeColorE8SkRGBA4fIL11SkAlphaType2EE(<2 x float>, <2 x float>) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZNK13SkColorFilter13filterColor4fERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpaceS6_(%class.SkColorFilter*, %struct.SkRGBA4f.133* dereferenceable(16), %class.SkColorSpace*, %class.SkColorSpace*) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZNK16SkMaskFilterBase19asFragmentProcessorERK8GrFPArgs(%class.SkMaskFilterBase*, %struct.GrFPArgs* dereferenceable(40)) local_unnamed_addr #2

declare %class.GrXPFactory* @_Z23SkBlendMode_AsXPFactory11SkBlendMode(i32) local_unnamed_addr #2

declare zeroext i1 @_ZN11SkPaintPriv12ShouldDitherERK7SkPaint11SkColorType(%class.SkPaint* dereferenceable(72), i32) local_unnamed_addr #2

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #2

declare void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i64) local_unnamed_addr #2

declare void @_ZN18SkIDChangeListenerC2Ev(%class.SkIDChangeListener*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZ35GrMakeUniqueKeyInvalidationListenerP11GrUniqueKeyjEN8ListenerD2Ev(%class.Listener*) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.Listener, %class.Listener* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVZ35GrMakeUniqueKeyInvalidationListenerP11GrUniqueKeyjE8Listener, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.Listener, %class.Listener* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %4 = load %class.SkData*, %class.SkData** %3, align 8
  %5 = icmp eq %class.SkData* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkData, %class.SkData* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %4) #11
  %11 = bitcast %class.SkData* %4 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %11) #11
  br label %12

12:                                               ; preds = %10, %6, %1
  %13 = getelementptr inbounds %class.Listener, %class.Listener* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = getelementptr inbounds %class.Listener, %class.Listener* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i64 0
  %16 = icmp eq i32* %14, %15
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = bitcast i32* %14 to i8*
  tail call void @_Z7sk_freePv(i8* %18) #11
  br label %19

19:                                               ; preds = %12, %17
  %20 = bitcast %class.Listener* %0 to %class.SkIDChangeListener*
  tail call void @_ZN18SkIDChangeListenerD2Ev(%class.SkIDChangeListener* %20) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZ35GrMakeUniqueKeyInvalidationListenerP11GrUniqueKeyjEN8ListenerD0Ev(%class.Listener*) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.Listener, %class.Listener* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVZ35GrMakeUniqueKeyInvalidationListenerP11GrUniqueKeyjE8Listener, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.Listener, %class.Listener* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %4 = load %class.SkData*, %class.SkData** %3, align 8
  %5 = icmp eq %class.SkData* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkData, %class.SkData* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %4) #11
  %11 = bitcast %class.SkData* %4 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %11) #11
  br label %12

12:                                               ; preds = %10, %6, %1
  %13 = getelementptr inbounds %class.Listener, %class.Listener* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = getelementptr inbounds %class.Listener, %class.Listener* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i64 0
  %16 = icmp eq i32* %14, %15
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = bitcast i32* %14 to i8*
  tail call void @_Z7sk_freePv(i8* %18) #11
  br label %19

19:                                               ; preds = %12, %17
  %20 = bitcast %class.Listener* %0 to %class.SkIDChangeListener*
  tail call void @_ZN18SkIDChangeListenerD2Ev(%class.SkIDChangeListener* %20) #11
  %21 = bitcast %class.Listener* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #11
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZZ35GrMakeUniqueKeyInvalidationListenerP11GrUniqueKeyjEN8Listener7changedEv(%class.Listener*) unnamed_addr #0 align 2 {
  %2 = alloca %class.GrUniqueKeyInvalidatedMessage, align 8
  %3 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0
  %4 = getelementptr inbounds %class.Listener, %class.Listener* %0, i64 0, i32 2, i32 0
  %5 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i64 0
  store i32* %6, i32** %5, align 8
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 1, i32 0
  store %class.SkData* null, %class.SkData** %8, align 8
  %9 = call dereferenceable(56) %class.GrUniqueKey* @_ZN11GrUniqueKeyaSERKS_(%class.GrUniqueKey* nonnull %3, %class.GrUniqueKey* dereferenceable(56) %4) #11
  %10 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 1
  %11 = getelementptr inbounds %class.Listener, %class.Listener* %0, i64 0, i32 2, i32 1
  %12 = bitcast i32* %10 to i8*
  %13 = bitcast i32* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 5, i1 false) #11
  call void @_ZN12SkMessageBusI29GrUniqueKeyInvalidatedMessagejLb1EE4PostES0_(%class.GrUniqueKeyInvalidatedMessage* nonnull %2)
  %14 = load %class.SkData*, %class.SkData** %8, align 8
  %15 = icmp eq %class.SkData* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %class.SkData, %class.SkData* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %14) #11
  %21 = bitcast %class.SkData* %14 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %21) #11
  br label %22

22:                                               ; preds = %20, %16, %1
  %23 = load i32*, i32** %5, align 8
  %24 = icmp eq i32* %23, %6
  br i1 %24, label %27, label %25

25:                                               ; preds = %22
  %26 = bitcast i32* %23 to i8*
  call void @_Z7sk_freePv(i8* %26) #11
  br label %27

27:                                               ; preds = %22, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %class.GrUniqueKey* @_ZN11GrUniqueKeyaSERKS_(%class.GrUniqueKey*, %class.GrUniqueKey* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.GrUniqueKey* %0, %1
  br i1 %3, label %44, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = getelementptr inbounds i32, i32* %6, i64 1
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 65535
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %20

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i64 0
  %15 = icmp eq i32* %13, %14
  br i1 %15, label %18, label %16

16:                                               ; preds = %11
  %17 = bitcast i32* %13 to i8*
  tail call void @_Z7sk_freePv(i8* %17) #11
  br label %18

18:                                               ; preds = %16, %11
  store i32* %14, i32** %12, align 8
  store i32 0, i32* %14, align 4
  %19 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 0, i32* %19, align 4
  br label %44

20:                                               ; preds = %4
  %21 = lshr i32 %8, 16
  %22 = zext i32 %21 to i64
  %23 = lshr i64 %22, 2
  %24 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i64 0
  %27 = icmp eq i32* %25, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %20
  %29 = bitcast i32* %25 to i8*
  tail call void @_Z7sk_freePv(i8* %29) #11
  br label %30

30:                                               ; preds = %28, %20
  %31 = icmp ugt i32 %8, 2097151
  br i1 %31, label %32, label %35

32:                                               ; preds = %30
  %33 = tail call i8* @_Z15sk_malloc_throwmm(i64 %23, i64 4) #11
  %34 = bitcast %class.GrUniqueKey* %0 to i8**
  store i8* %33, i8** %34, align 8
  br label %40

35:                                               ; preds = %30
  %36 = icmp eq i64 %23, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %35
  store i32* %26, i32** %24, align 8
  %38 = bitcast i32* %26 to i8*
  br label %40

39:                                               ; preds = %35
  store i32* null, i32** %24, align 8
  br label %40

40:                                               ; preds = %39, %37, %32
  %41 = phi i8* [ %33, %32 ], [ %38, %37 ], [ null, %39 ]
  %42 = bitcast %class.GrUniqueKey* %1 to i8**
  %43 = load i8*, i8** %42, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 4 %43, i64 %22, i1 false) #11
  br label %44

44:                                               ; preds = %2, %18, %40
  %45 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %1, i64 0, i32 1, i32 0
  %46 = load %class.SkData*, %class.SkData** %45, align 8
  %47 = icmp eq %class.SkData* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %class.SkData, %class.SkData* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 1 monotonic, !noalias !31
  br label %51

51:                                               ; preds = %44, %48
  %52 = ptrtoint %class.SkData* %46 to i64
  %53 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 1
  %54 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %53, i64 0, i32 0
  %55 = load %class.SkData*, %class.SkData** %54, align 8
  %56 = bitcast %class.sk_sp* %53 to i64*
  store i64 %52, i64* %56, align 8
  %57 = icmp eq %class.SkData* %55, null
  br i1 %57, label %64, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %class.SkData, %class.SkData* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 -1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %64

62:                                               ; preds = %58
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %55) #11
  %63 = bitcast %class.SkData* %55 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %63) #11
  br label %64

64:                                               ; preds = %62, %58, %51
  %65 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %1, i64 0, i32 2
  %66 = bitcast i8** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 2
  %69 = bitcast i8** %68 to i64*
  store i64 %67, i64* %69, align 8
  ret %class.GrUniqueKey* %0
}

; Function Attrs: nounwind
declare void @_ZN18SkIDChangeListenerD2Ev(%class.SkIDChangeListener*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkMessageBusI29GrUniqueKeyInvalidatedMessagejLb1EE4PostES0_(%class.GrUniqueKeyInvalidatedMessage*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.GrUniqueKeyInvalidatedMessage, align 8
  %3 = tail call %class.SkMessageBus* @_ZN12SkMessageBusI29GrUniqueKeyInvalidatedMessagejLb1EE3GetEv() #11
  %4 = getelementptr inbounds %class.SkMessageBus, %class.SkMessageBus* %3, i64 0, i32 1
  %5 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw sub i32* %5, i32 1 acquire
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %4, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %9) #11
  br label %10

10:                                               ; preds = %1, %8
  %11 = getelementptr inbounds %class.SkMessageBus, %class.SkMessageBus* %3, i64 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.SkMessageBus, %class.SkMessageBus* %3, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %0, i64 0, i32 1
  %17 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0
  %18 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %0, i64 0, i32 0
  %19 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i64 0
  %21 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i64 1
  %22 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 1, i32 0
  %23 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 1
  %24 = bitcast i32* %23 to i8*
  %25 = bitcast i32* %16 to i8*
  br label %32

26:                                               ; preds = %88, %10
  %27 = atomicrmw add i32* %5, i32 1 release
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  %30 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %4, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %30, i32 1) #11
  br label %31

31:                                               ; preds = %26, %29
  ret void

32:                                               ; preds = %14, %88
  %33 = phi i64 [ 0, %14 ], [ %89, %88 ]
  %34 = load %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"**, %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"*** %15, align 8
  %35 = getelementptr inbounds %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"*, %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"** %34, i64 %33
  %36 = load %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"*, %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"** %35, align 8
  %37 = getelementptr inbounds %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"* %36, i64 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = load i32, i32* %16, align 8
  %40 = icmp eq i32 %39, %38
  br i1 %40, label %41, label %88

41:                                               ; preds = %32
  store i32* %20, i32** %19, align 8
  store i32 0, i32* %20, align 8
  store i32 0, i32* %21, align 4
  store %class.SkData* null, %class.SkData** %22, align 8
  %42 = call dereferenceable(56) %class.GrUniqueKey* @_ZN11GrUniqueKeyaSERKS_(%class.GrUniqueKey* nonnull %17, %class.GrUniqueKey* dereferenceable(56) %18) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 5, i1 false) #11
  %43 = getelementptr inbounds %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"* %36, i64 0, i32 1
  %44 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acquire
  %46 = icmp slt i32 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %43, i64 0, i32 0
  call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %48) #11
  br label %49

49:                                               ; preds = %47, %41
  %50 = getelementptr inbounds %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"* %36, i64 0, i32 0
  call void @_ZN8SkTArrayI29GrUniqueKeyInvalidatedMessageLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.87* %50, i32 1, i32 1) #11
  %51 = getelementptr inbounds %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"* %36, i64 0, i32 0, i32 0
  %52 = load %class.GrUniqueKeyInvalidatedMessage*, %class.GrUniqueKeyInvalidatedMessage** %51, align 8
  %53 = getelementptr inbounds %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"* %36, i64 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = lshr i64 %54, 1
  %56 = and i64 %55, 2147483647
  %57 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %52, i64 %56
  %58 = add i64 %54, 2
  %59 = and i64 %58, 4294967294
  %60 = and i64 %54, -4294967295
  %61 = or i64 %59, %60
  store i64 %61, i64* %53, align 8
  %62 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %57, i64 0, i32 0
  %63 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %52, i64 %56, i32 0, i32 0, i32 0, i32 1, i32 0, i64 0
  store i32* %64, i32** %63, align 8
  store i32 0, i32* %64, align 4
  %65 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %52, i64 %56, i32 0, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 0, i32* %65, align 4
  %66 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %52, i64 %56, i32 0, i32 1, i32 0
  store %class.SkData* null, %class.SkData** %66, align 8
  %67 = call dereferenceable(56) %class.GrUniqueKey* @_ZN11GrUniqueKeyaSERKS_(%class.GrUniqueKey* %62, %class.GrUniqueKey* nonnull dereferenceable(56) %17) #11
  %68 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %52, i64 %56, i32 1
  %69 = bitcast i32* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %24, i64 5, i1 false) #11
  %70 = atomicrmw add i32* %44, i32 1 release
  %71 = icmp slt i32 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %49
  %73 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %43, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %73, i32 1) #11
  br label %74

74:                                               ; preds = %49, %72
  %75 = load %class.SkData*, %class.SkData** %22, align 8
  %76 = icmp eq %class.SkData* %75, null
  br i1 %76, label %83, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %class.SkData, %class.SkData* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw add i32* %78, i32 -1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %75) #11
  %82 = bitcast %class.SkData* %75 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %82) #11
  br label %83

83:                                               ; preds = %81, %77, %74
  %84 = load i32*, i32** %19, align 8
  %85 = icmp eq i32* %84, %20
  br i1 %85, label %88, label %86

86:                                               ; preds = %83
  %87 = bitcast i32* %84 to i8*
  call void @_Z7sk_freePv(i8* %87) #11
  br label %88

88:                                               ; preds = %86, %83, %32
  %89 = add nuw nsw i64 %33, 1
  %90 = load i32, i32* %11, align 4
  %91 = sext i32 %90 to i64
  %92 = icmp slt i64 %89, %91
  br i1 %92, label %32, label %26
}

declare %class.SkMessageBus* @_ZN12SkMessageBusI29GrUniqueKeyInvalidatedMessagejLb1EE3GetEv() local_unnamed_addr #2

declare void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI29GrUniqueKeyInvalidatedMessageLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.87*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.87, %class.SkTArray.87* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %56

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %56, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 64) #11
  tail call void @_ZN8SkTArrayI29GrUniqueKeyInvalidatedMessageLb0EE4moveILb0EEENSt3__19enable_ifIXntT_EvE4typeEPv(%class.SkTArray.87* %0, i8* %44)
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 1
  %47 = icmp eq i64 %46, 0
  %48 = bitcast %class.SkTArray.87* %0 to i8**
  br i1 %47, label %52, label %49

49:                                               ; preds = %35
  %50 = load i8*, i8** %48, align 8
  tail call void @_Z7sk_freePv(i8* %50) #11
  %51 = load i64, i64* %4, align 8
  br label %52

52:                                               ; preds = %35, %49
  %53 = phi i64 [ %51, %49 ], [ %45, %35 ]
  store i8* %44, i8** %48, align 8
  %54 = and i64 %53, -4294967298
  %55 = or i64 %54, 1
  store i64 %55, i64* %4, align 8
  br label %56

56:                                               ; preds = %52, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI29GrUniqueKeyInvalidatedMessageLb0EE4moveILb0EEENSt3__19enable_ifIXntT_EvE4typeEPv(%class.SkTArray.87*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTArray.87, %class.SkTArray.87* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 4294967294
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkTArray.87, %class.SkTArray.87* %0, i64 0, i32 0
  br label %10

9:                                                ; preds = %45, %2
  ret void

10:                                               ; preds = %7, %45
  %11 = phi i64 [ 0, %7 ], [ %46, %45 ]
  %12 = shl nuw nsw i64 %11, 6
  %13 = getelementptr inbounds i8, i8* %1, i64 %12
  %14 = load %class.GrUniqueKeyInvalidatedMessage*, %class.GrUniqueKeyInvalidatedMessage** %8, align 8
  %15 = bitcast i8* %13 to %class.GrUniqueKey*
  %16 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %14, i64 %11, i32 0
  %17 = getelementptr inbounds i8, i8* %13, i64 8
  %18 = bitcast i8* %17 to i32*
  %19 = bitcast i8* %13 to i8**
  store i8* %17, i8** %19, align 8
  store i32 0, i32* %18, align 4
  %20 = getelementptr inbounds i8, i8* %13, i64 12
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %13, i64 40
  %23 = bitcast i8* %22 to %class.SkData**
  store %class.SkData* null, %class.SkData** %23, align 8
  %24 = tail call dereferenceable(56) %class.GrUniqueKey* @_ZN11GrUniqueKeyaSERKS_(%class.GrUniqueKey* %15, %class.GrUniqueKey* dereferenceable(56) %16) #11
  %25 = getelementptr inbounds i8, i8* %13, i64 56
  %26 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %14, i64 %11, i32 1
  %27 = bitcast i32* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %27, i64 5, i1 false) #11
  %28 = load %class.GrUniqueKeyInvalidatedMessage*, %class.GrUniqueKeyInvalidatedMessage** %8, align 8
  %29 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %28, i64 %11, i32 0, i32 1, i32 0
  %30 = load %class.SkData*, %class.SkData** %29, align 8
  %31 = icmp eq %class.SkData* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %10
  %33 = getelementptr inbounds %class.SkData, %class.SkData* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %30) #11
  %37 = bitcast %class.SkData* %30 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %37) #11
  br label %38

38:                                               ; preds = %36, %32, %10
  %39 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %28, i64 %11, i32 0, i32 0, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %28, i64 %11, i32 0, i32 0, i32 0, i32 1, i32 0, i64 0
  %42 = icmp eq i32* %40, %41
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  %44 = bitcast i32* %40 to i8*
  tail call void @_Z7sk_freePv(i8* %44) #11
  br label %45

45:                                               ; preds = %38, %43
  %46 = add nuw nsw i64 %11, 1
  %47 = load i64, i64* %3, align 8
  %48 = lshr i64 %47, 1
  %49 = and i64 %48, 2147483647
  %50 = icmp ult i64 %46, %49
  br i1 %50, label %10, label %9
}

declare void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore*, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_Z10sk_make_spIZ35GrMakeUniqueKeyInvalidationListenerP11GrUniqueKeyjE8ListenerJRS0_RjEE5sk_spIT_EDpOT0_: argument 0"}
!5 = distinct !{!5, !"_Z10sk_make_spIZ35GrMakeUniqueKeyInvalidationListenerP11GrUniqueKeyjE8ListenerJRS0_RjEE5sk_spIT_EDpOT0_"}
!6 = !{i8 0, i8 2}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK18GrSurfaceProxyView7swizzleEv: argument 0"}
!9 = distinct !{!9, !"_ZNK18GrSurfaceProxyView7swizzleEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK18GrSurfaceProxyView8refProxyEv: argument 0"}
!12 = distinct !{!12, !"_ZNK18GrSurfaceProxyView8refProxyEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_Z30GrCopyBaseMipMapToTextureProxyP18GrRecordingContext5sk_spI14GrSurfaceProxyE15GrSurfaceOrigin10SkBudgeted: argument 0"}
!15 = distinct !{!15, !"_Z30GrCopyBaseMipMapToTextureProxyP18GrRecordingContext5sk_spI14GrSurfaceProxyE15GrSurfaceOrigin10SkBudgeted"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_Z30GrCopyBaseMipMapToTextureProxyP18GrRecordingContext5sk_spI14GrSurfaceProxyE15GrSurfaceOrigin10SkBudgeted: argument 0"}
!18 = distinct !{!18, !"_Z30GrCopyBaseMipMapToTextureProxyP18GrRecordingContext5sk_spI14GrSurfaceProxyE15GrSurfaceOrigin10SkBudgeted"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType: argument 0"}
!21 = distinct !{!21, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType"}
!22 = !{!23, !20}
!23 = distinct !{!23, !24, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType: argument 0"}
!24 = distinct !{!24, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType"}
!25 = !{!26, !23, !20}
!26 = distinct !{!26, !27, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!27 = distinct !{!27, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!28 = !{!29, !20}
!29 = distinct !{!29, !30, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo: argument 0"}
!30 = distinct !{!30, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_: argument 0"}
!33 = distinct !{!33, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_"}
