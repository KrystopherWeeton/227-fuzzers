; ModuleID = '../../third_party/webrtc/call/call_config.cc'
source_filename = "../../third_party/webrtc/call/call_config.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.webrtc::CallConfig" = type { %"struct.webrtc::BitrateConstraints", %"class.rtc::scoped_refptr", %"class.webrtc::AudioProcessing"*, %"class.webrtc::RtcEventLog"*, %"class.webrtc::FecControllerFactoryInterface"*, %"class.webrtc::TaskQueueFactory"*, %"class.webrtc::NetworkStatePredictorFactoryInterface"*, %"class.webrtc::NetworkControllerFactoryInterface"*, %"class.webrtc::NetEqFactory"*, %"class.webrtc::WebRtcKeyValueConfig"*, %"class.webrtc::TaskQueueBase"* }
%"struct.webrtc::BitrateConstraints" = type { i32, i32, i32 }
%"class.rtc::scoped_refptr" = type { %"class.webrtc::AudioState"* }
%"class.webrtc::AudioState" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::RefCountInterface" = type { i32 (...)** }
%"class.webrtc::AudioProcessing" = type { %"class.rtc::RefCountInterface" }
%"class.webrtc::FecControllerFactoryInterface" = type { i32 (...)** }
%"class.webrtc::TaskQueueFactory" = type { i32 (...)** }
%"class.webrtc::NetworkStatePredictorFactoryInterface" = type { i32 (...)** }
%"class.webrtc::NetworkControllerFactoryInterface" = type { i32 (...)** }
%"class.webrtc::NetEqFactory" = type { i32 (...)** }
%"class.webrtc::WebRtcKeyValueConfig" = type { i32 (...)** }
%"class.webrtc::RtcEventLog" = type { i32 (...)** }
%"class.webrtc::TaskQueueBase" = type { i32 (...)** }

@_ZN6webrtc10CallConfigC1EPNS_11RtcEventLogEPNS_13TaskQueueBaseE = hidden unnamed_addr alias void (%"struct.webrtc::CallConfig"*, %"class.webrtc::RtcEventLog"*, %"class.webrtc::TaskQueueBase"*), void (%"struct.webrtc::CallConfig"*, %"class.webrtc::RtcEventLog"*, %"class.webrtc::TaskQueueBase"*)* @_ZN6webrtc10CallConfigC2EPNS_11RtcEventLogEPNS_13TaskQueueBaseE
@_ZN6webrtc10CallConfigC1ERKS0_ = hidden unnamed_addr alias void (%"struct.webrtc::CallConfig"*, %"struct.webrtc::CallConfig"*), void (%"struct.webrtc::CallConfig"*, %"struct.webrtc::CallConfig"*)* @_ZN6webrtc10CallConfigC2ERKS0_
@_ZN6webrtc10CallConfigD1Ev = hidden unnamed_addr alias void (%"struct.webrtc::CallConfig"*), void (%"struct.webrtc::CallConfig"*)* @_ZN6webrtc10CallConfigD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc10CallConfigC2EPNS_11RtcEventLogEPNS_13TaskQueueBaseE(%"struct.webrtc::CallConfig"* nocapture, %"class.webrtc::RtcEventLog"*, %"class.webrtc::TaskQueueBase"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.webrtc::CallConfig", %"struct.webrtc::CallConfig"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"struct.webrtc::CallConfig", %"struct.webrtc::CallConfig"* %0, i64 0, i32 0, i32 1
  store i32 300000, i32* %5, align 4
  %6 = getelementptr inbounds %"struct.webrtc::CallConfig", %"struct.webrtc::CallConfig"* %0, i64 0, i32 0, i32 2
  store i32 -1, i32* %6, align 4
  %7 = getelementptr inbounds %"struct.webrtc::CallConfig", %"struct.webrtc::CallConfig"* %0, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"struct.webrtc::CallConfig", %"struct.webrtc::CallConfig"* %0, i64 0, i32 3
  %9 = bitcast %"class.webrtc::AudioState"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false)
  store %"class.webrtc::RtcEventLog"* %1, %"class.webrtc::RtcEventLog"** %8, align 8
  %10 = getelementptr inbounds %"struct.webrtc::CallConfig", %"struct.webrtc::CallConfig"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"struct.webrtc::CallConfig", %"struct.webrtc::CallConfig"* %0, i64 0, i32 10
  %12 = bitcast %"class.webrtc::FecControllerFactoryInterface"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 48, i1 false)
  store %"class.webrtc::TaskQueueBase"* %2, %"class.webrtc::TaskQueueBase"** %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc10CallConfigC2ERKS0_(%"struct.webrtc::CallConfig"* nocapture, %"struct.webrtc::CallConfig"* nocapture readonly dereferenceable(96)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.webrtc::CallConfig"* %0 to i8*
  %4 = bitcast %"struct.webrtc::CallConfig"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 12, i1 false)
  %5 = getelementptr inbounds %"struct.webrtc::CallConfig", %"struct.webrtc::CallConfig"* %0, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %"struct.webrtc::CallConfig", %"struct.webrtc::CallConfig"* %1, i64 0, i32 1, i32 0
  %7 = load %"class.webrtc::AudioState"*, %"class.webrtc::AudioState"** %6, align 8
  store %"class.webrtc::AudioState"* %7, %"class.webrtc::AudioState"** %5, align 8
  %8 = icmp eq %"class.webrtc::AudioState"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.webrtc::AudioState", %"class.webrtc::AudioState"* %7, i64 0, i32 0
  %11 = bitcast %"class.webrtc::AudioState"* %7 to void (%"class.rtc::RefCountInterface"*)***
  %12 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %11, align 8
  %13 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %12, align 8
  tail call void %13(%"class.rtc::RefCountInterface"* %10) #3
  br label %14

14:                                               ; preds = %2, %9
  %15 = getelementptr inbounds %"struct.webrtc::CallConfig", %"struct.webrtc::CallConfig"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"struct.webrtc::CallConfig", %"struct.webrtc::CallConfig"* %1, i64 0, i32 2
  %17 = bitcast %"class.webrtc::AudioProcessing"** %15 to i8*
  %18 = bitcast %"class.webrtc::AudioProcessing"** %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 72, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc10CallConfigD2Ev(%"struct.webrtc::CallConfig"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::CallConfig", %"struct.webrtc::CallConfig"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.webrtc::AudioState"*, %"class.webrtc::AudioState"** %2, align 8
  %4 = icmp eq %"class.webrtc::AudioState"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::AudioState", %"class.webrtc::AudioState"* %3, i64 0, i32 0
  %7 = bitcast %"class.webrtc::AudioState"* %3 to i32 (%"class.rtc::RefCountInterface"*)***
  %8 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %7, align 8
  %9 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %8, i64 1
  %10 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %9, align 8
  %11 = tail call i32 %10(%"class.rtc::RefCountInterface"* %6) #3
  br label %12

12:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
