; ModuleID = '../../chrome/common/extensions/extension_metrics.cc'
source_filename = "../../chrome/common/extensions/extension_metrics.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.1", [4 x i8] }>
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.23", %"class.std::__1::vector", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.47", %"class.std::__1::map", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.12", %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.29" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.extensions::InstallWarning"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.34" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.GURL* }
%"class.base::Version" = type { %"class.std::__1::vector.40" }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { i32*, i32*, %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.53" }
%"union.absl::variant_internal::DestructibleUnionImpl.53" = type { %"union.absl::variant_internal::DestructibleUnionImpl.54" }
%"union.absl::variant_internal::DestructibleUnionImpl.54" = type { %"union.absl::variant_internal::DestructibleUnionImpl.55" }
%"union.absl::variant_internal::DestructibleUnionImpl.55" = type { %"union.absl::variant_internal::DestructibleUnionImpl.56" }
%"union.absl::variant_internal::DestructibleUnionImpl.56" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.88" }
%"class.std::__1::__tree.88" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.89", %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [15 x i8] c"Apps.AppLaunch\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"Extensions.AppLaunch\00", align 1
@_ZN10extensions14kWebStoreAppIdE = external constant [0 x i8], align 1
@_ZN14extension_misc12kChromeAppIdE = external constant [0 x i8], align 1
@_ZZN10extensions19RecordAppLaunchTypeEN14extension_misc15AppLaunchBucketENS_8Manifest4TypeEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN10extensions19RecordAppLaunchTypeEN14extension_misc15AppLaunchBucketENS_8Manifest4TypeEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions19RecordAppLaunchTypeEN14extension_misc15AppLaunchBucketENS_8Manifest4TypeE(i32, i32) local_unnamed_addr #0 {
  %3 = icmp eq i32 %1, 6
  br i1 %3, label %4, label %17

4:                                                ; preds = %2
  %5 = load atomic i64, i64* @_ZZN10extensions19RecordAppLaunchTypeEN14extension_misc15AppLaunchBucketENS_8Manifest4TypeEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %6 = inttoptr i64 %5 to %"class.base::HistogramBase"*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %4
  %9 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1, i32 26, i32 27, i32 1) #3
  %10 = ptrtoint %"class.base::HistogramBase"* %9 to i64
  store atomic i64 %10, i64* @_ZZN10extensions19RecordAppLaunchTypeEN14extension_misc15AppLaunchBucketENS_8Manifest4TypeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %11

11:                                               ; preds = %4, %8
  %12 = phi %"class.base::HistogramBase"* [ %6, %4 ], [ %9, %8 ]
  %13 = bitcast %"class.base::HistogramBase"* %12 to void (%"class.base::HistogramBase"*, i32)***
  %14 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %14, i64 6
  %16 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %15, align 8
  tail call void %16(%"class.base::HistogramBase"* %12, i32 %0) #3
  br label %30

17:                                               ; preds = %2
  %18 = load atomic i64, i64* @_ZZN10extensions19RecordAppLaunchTypeEN14extension_misc15AppLaunchBucketENS_8Manifest4TypeEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %19 = inttoptr i64 %18 to %"class.base::HistogramBase"*
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 26, i32 27, i32 1) #3
  %23 = ptrtoint %"class.base::HistogramBase"* %22 to i64
  store atomic i64 %23, i64* @_ZZN10extensions19RecordAppLaunchTypeEN14extension_misc15AppLaunchBucketENS_8Manifest4TypeEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %24

24:                                               ; preds = %17, %21
  %25 = phi %"class.base::HistogramBase"* [ %19, %17 ], [ %22, %21 ]
  %26 = bitcast %"class.base::HistogramBase"* %25 to void (%"class.base::HistogramBase"*, i32)***
  %27 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %27, i64 6
  %29 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %28, align 8
  tail call void %29(%"class.base::HistogramBase"* %25, i32 %0) #3
  br label %30

30:                                               ; preds = %24, %11
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions25RecordAppListSearchLaunchEPKNS_9ExtensionE(%"class.extensions::Extension"*) local_unnamed_addr #0 {
  %2 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* %0) #3
  %3 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions14kWebStoreAppIdE, i64 0, i64 0)) #3
  %4 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = zext i8 %6 to i64
  %11 = select i1 %7, i64 %9, i64 %10
  %12 = icmp eq i64 %3, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %1
  %14 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %2, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions14kWebStoreAppIdE, i64 0, i64 0), i64 %3) #3
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %32, label %16

16:                                               ; preds = %1, %13
  %17 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* %0) #3
  %18 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN14extension_misc12kChromeAppIdE, i64 0, i64 0)) #3
  %19 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp eq i64 %18, %26
  br i1 %27, label %28, label %32

28:                                               ; preds = %16
  %29 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %17, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN14extension_misc12kChromeAppIdE, i64 0, i64 0), i64 %18) #3
  %30 = icmp eq i32 %29, 0
  %31 = select i1 %30, i32 24, i32 21
  br label %32

32:                                               ; preds = %28, %16, %13
  %33 = phi i32 [ 25, %13 ], [ 21, %16 ], [ %31, %28 ]
  %34 = tail call i32 @_ZNK10extensions9Extension7GetTypeEv(%"class.extensions::Extension"* %0) #3
  %35 = icmp eq i32 %34, 6
  br i1 %35, label %36, label %49

36:                                               ; preds = %32
  %37 = load atomic i64, i64* @_ZZN10extensions19RecordAppLaunchTypeEN14extension_misc15AppLaunchBucketENS_8Manifest4TypeEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %38 = inttoptr i64 %37 to %"class.base::HistogramBase"*
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %36
  %41 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1, i32 26, i32 27, i32 1) #3
  %42 = ptrtoint %"class.base::HistogramBase"* %41 to i64
  store atomic i64 %42, i64* @_ZZN10extensions19RecordAppLaunchTypeEN14extension_misc15AppLaunchBucketENS_8Manifest4TypeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %43

43:                                               ; preds = %40, %36
  %44 = phi %"class.base::HistogramBase"* [ %38, %36 ], [ %41, %40 ]
  %45 = bitcast %"class.base::HistogramBase"* %44 to void (%"class.base::HistogramBase"*, i32)***
  %46 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %46, i64 6
  %48 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %47, align 8
  tail call void %48(%"class.base::HistogramBase"* %44, i32 %33) #3
  br label %62

49:                                               ; preds = %32
  %50 = load atomic i64, i64* @_ZZN10extensions19RecordAppLaunchTypeEN14extension_misc15AppLaunchBucketENS_8Manifest4TypeEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %51 = inttoptr i64 %50 to %"class.base::HistogramBase"*
  %52 = icmp eq i64 %50, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %49
  %54 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 26, i32 27, i32 1) #3
  %55 = ptrtoint %"class.base::HistogramBase"* %54 to i64
  store atomic i64 %55, i64* @_ZZN10extensions19RecordAppLaunchTypeEN14extension_misc15AppLaunchBucketENS_8Manifest4TypeEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %56

56:                                               ; preds = %53, %49
  %57 = phi %"class.base::HistogramBase"* [ %51, %49 ], [ %54, %53 ]
  %58 = bitcast %"class.base::HistogramBase"* %57 to void (%"class.base::HistogramBase"*, i32)***
  %59 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %59, i64 6
  %61 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %60, align 8
  tail call void %61(%"class.base::HistogramBase"* %57, i32 %33) #3
  br label %62

62:                                               ; preds = %43, %56
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"*) local_unnamed_addr #1

declare i32 @_ZNK10extensions9Extension7GetTypeEv(%"class.extensions::Extension"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23RecordAppListMainLaunchEPKNS_9ExtensionE(%"class.extensions::Extension"*) local_unnamed_addr #0 {
  %2 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* %0) #3
  %3 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions14kWebStoreAppIdE, i64 0, i64 0)) #3
  %4 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = zext i8 %6 to i64
  %11 = select i1 %7, i64 %9, i64 %10
  %12 = icmp eq i64 %3, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %1
  %14 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %2, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions14kWebStoreAppIdE, i64 0, i64 0), i64 %3) #3
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %32, label %16

16:                                               ; preds = %1, %13
  %17 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* %0) #3
  %18 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN14extension_misc12kChromeAppIdE, i64 0, i64 0)) #3
  %19 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp eq i64 %18, %26
  br i1 %27, label %28, label %32

28:                                               ; preds = %16
  %29 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %17, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN14extension_misc12kChromeAppIdE, i64 0, i64 0), i64 %18) #3
  %30 = icmp eq i32 %29, 0
  %31 = select i1 %30, i32 22, i32 20
  br label %32

32:                                               ; preds = %28, %16, %13
  %33 = phi i32 [ 23, %13 ], [ 20, %16 ], [ %31, %28 ]
  %34 = tail call i32 @_ZNK10extensions9Extension7GetTypeEv(%"class.extensions::Extension"* %0) #3
  %35 = icmp eq i32 %34, 6
  br i1 %35, label %36, label %49

36:                                               ; preds = %32
  %37 = load atomic i64, i64* @_ZZN10extensions19RecordAppLaunchTypeEN14extension_misc15AppLaunchBucketENS_8Manifest4TypeEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %38 = inttoptr i64 %37 to %"class.base::HistogramBase"*
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %36
  %41 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1, i32 26, i32 27, i32 1) #3
  %42 = ptrtoint %"class.base::HistogramBase"* %41 to i64
  store atomic i64 %42, i64* @_ZZN10extensions19RecordAppLaunchTypeEN14extension_misc15AppLaunchBucketENS_8Manifest4TypeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %43

43:                                               ; preds = %40, %36
  %44 = phi %"class.base::HistogramBase"* [ %38, %36 ], [ %41, %40 ]
  %45 = bitcast %"class.base::HistogramBase"* %44 to void (%"class.base::HistogramBase"*, i32)***
  %46 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %46, i64 6
  %48 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %47, align 8
  tail call void %48(%"class.base::HistogramBase"* %44, i32 %33) #3
  br label %62

49:                                               ; preds = %32
  %50 = load atomic i64, i64* @_ZZN10extensions19RecordAppLaunchTypeEN14extension_misc15AppLaunchBucketENS_8Manifest4TypeEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %51 = inttoptr i64 %50 to %"class.base::HistogramBase"*
  %52 = icmp eq i64 %50, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %49
  %54 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 26, i32 27, i32 1) #3
  %55 = ptrtoint %"class.base::HistogramBase"* %54 to i64
  store atomic i64 %55, i64* @_ZZN10extensions19RecordAppLaunchTypeEN14extension_misc15AppLaunchBucketENS_8Manifest4TypeEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %56

56:                                               ; preds = %53, %49
  %57 = phi %"class.base::HistogramBase"* [ %51, %49 ], [ %54, %53 ]
  %58 = bitcast %"class.base::HistogramBase"* %57 to void (%"class.base::HistogramBase"*, i32)***
  %59 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %59, i64 6
  %61 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %60, align 8
  tail call void %61(%"class.base::HistogramBase"* %57, i32 %33) #3
  br label %62

62:                                               ; preds = %43, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions20RecordWebStoreLaunchEv() local_unnamed_addr #0 {
  %1 = load atomic i64, i64* @_ZZN10extensions19RecordAppLaunchTypeEN14extension_misc15AppLaunchBucketENS_8Manifest4TypeEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %2 = inttoptr i64 %1 to %"class.base::HistogramBase"*
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %0
  %5 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 26, i32 27, i32 1) #3
  %6 = ptrtoint %"class.base::HistogramBase"* %5 to i64
  store atomic i64 %6, i64* @_ZZN10extensions19RecordAppLaunchTypeEN14extension_misc15AppLaunchBucketENS_8Manifest4TypeEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %7

7:                                                ; preds = %0, %4
  %8 = phi %"class.base::HistogramBase"* [ %2, %0 ], [ %5, %4 ]
  %9 = bitcast %"class.base::HistogramBase"* %8 to void (%"class.base::HistogramBase"*, i32)***
  %10 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %10, i64 6
  %12 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %11, align 8
  tail call void %12(%"class.base::HistogramBase"* %8, i32 15) #3
  ret void
}

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
