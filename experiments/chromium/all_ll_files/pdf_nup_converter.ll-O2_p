; ModuleID = '../../chrome/services/printing/pdf_nup_converter.cc'
source_filename = "../../chrome/services/printing/pdf_nup_converter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.crash_reporter::internal::CrashKeyStringImpl" = type { i8*, i64*, i64 }
%"class.crashpad::Annotation" = type <{ %"struct.std::__1::atomic.31", i8*, i8*, i32, i16, [2 x i8] }>
%"struct.std::__1::atomic.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__cxx_atomic_impl.33" }
%"struct.std::__1::__cxx_atomic_impl.33" = type { %"struct.std::__1::__cxx_atomic_base_impl.34" }
%"struct.std::__1::__cxx_atomic_base_impl.34" = type { %"class.crashpad::Annotation"* }
%"struct.crash_reporter::internal::InitializedArrayImpl" = type { [9 x i64] }
%"class.printing::PdfNupConverter" = type { %"class.printing::mojom::PdfNupConverter" }
%"class.printing::mojom::PdfNupConverter" = type { i32 (...)** }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::ReadOnlySharedMemoryRegion"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"class.std::__1::__compressed_pair" }
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::ReadOnlySharedMemoryRegion"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::ReadOnlySharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.base::ReadOnlySharedMemoryMapping"*, %"class.base::ReadOnlySharedMemoryMapping"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.base::ReadOnlySharedMemoryMapping"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.base::span"*, %"class.base::span"*, %"class.std::__1::__compressed_pair.11" }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.base::span"* }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { i8*, i8*, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.base::MappedReadOnlyRegion" = type { %"class.base::ReadOnlySharedMemoryRegion", %"class.base::WritableSharedMemoryMapping" }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %class.GURL* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__16vectorIN4base27ReadOnlySharedMemoryMappingENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@_ZTVN8printing15PdfNupConverterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.printing::PdfNupConverter"*)* @_ZN8printing15PdfNupConverterD2Ev to i8*), i8* bitcast (void (%"class.printing::PdfNupConverter"*)* @_ZN8printing15PdfNupConverterD0Ev to i8*), i8* bitcast (void (%"class.printing::PdfNupConverter"*, i32, %"class.gfx::Size"*, %"class.gfx::Rect"*, %"class.std::__1::vector"*, %"class.base::OnceCallback"*)* @_ZN8printing15PdfNupConverter14NupPageConvertEjRKN3gfx4SizeERKNS1_4RectENSt3__16vectorIN4base26ReadOnlySharedMemoryRegionENS8_9allocatorISB_EEEENSA_12OnceCallbackIFvNS_5mojom22PdfNupConverter_StatusESB_EEE to i8*), i8* bitcast (void (%"class.printing::PdfNupConverter"*, i32, %"class.gfx::Size"*, %"class.gfx::Rect"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"class.base::OnceCallback"*)* @_ZN8printing15PdfNupConverter18NupDocumentConvertEjRKN3gfx4SizeERKNS1_4RectEN4base26ReadOnlySharedMemoryRegionENS8_12OnceCallbackIFvNS_5mojom22PdfNupConverter_StatusES9_EEE to i8*), i8* bitcast (void (%"class.printing::PdfNupConverter"*, %class.GURL*)* @_ZN8printing15PdfNupConverter17SetWebContentsURLERK4GURL to i8*)] }, align 8
@_ZZN8printing15PdfNupConverter17SetWebContentsURLERK4GURLE9crash_key = internal global { %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [1024 x i8] } } { %"class.crash_reporter::internal::CrashKeyStringImpl"* bitcast (i8* getelementptr (i8, i8* bitcast ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [1024 x i8] } }* @_ZZN8printing15PdfNupConverter17SetWebContentsURLERK4GURLE9crash_key to i8*), i64 16) to %"class.crash_reporter::internal::CrashKeyStringImpl"*), %"class.crashpad::Annotation"* bitcast (i8* getelementptr (i8, i8* bitcast ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [1024 x i8] } }* @_ZZN8printing15PdfNupConverter17SetWebContentsURLERK4GURLE9crash_key to i8*), i64 112) to %"class.crashpad::Annotation"*), { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i32 0, i32 0), i64* bitcast (i8* getelementptr (i8, i8* bitcast ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [1024 x i8] } }* @_ZZN8printing15PdfNupConverter17SetWebContentsURLERK4GURLE9crash_key to i8*), i64 40) to i64*), i64 9, %"struct.crash_reporter::internal::InitializedArrayImpl" { [9 x i64] [i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200, i64 200] } }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [1024 x i8] } { { { %"class.crashpad::Annotation"* } } zeroinitializer, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i32 0, i32 0), i8* getelementptr (i8, i8* bitcast ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [1024 x i8] } }* @_ZZN8printing15PdfNupConverter17SetWebContentsURLERK4GURLE9crash_key to i8*), i64 142), i32 0, i16 1, [1024 x i8] zeroinitializer } }, align 8
@.str = private unnamed_addr constant [15 x i8] c"main-frame-url\00", align 1

@_ZN8printing15PdfNupConverterC1Ev = hidden unnamed_addr alias void (%"class.printing::PdfNupConverter"*), void (%"class.printing::PdfNupConverter"*)* @_ZN8printing15PdfNupConverterC2Ev
@_ZN8printing15PdfNupConverterD1Ev = hidden unnamed_addr alias void (%"class.printing::PdfNupConverter"*), void (%"class.printing::PdfNupConverter"*)* @_ZN8printing15PdfNupConverterD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8printing15PdfNupConverterC2Ev(%"class.printing::PdfNupConverter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.printing::PdfNupConverter", %"class.printing::PdfNupConverter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8printing15PdfNupConverterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8printing15PdfNupConverterD2Ev(%"class.printing::PdfNupConverter"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8printing15PdfNupConverterD0Ev(%"class.printing::PdfNupConverter"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.printing::PdfNupConverter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8printing15PdfNupConverter14NupPageConvertEjRKN3gfx4SizeERKNS1_4RectENSt3__16vectorIN4base26ReadOnlySharedMemoryRegionENS8_9allocatorISB_EEEENSA_12OnceCallbackIFvNS_5mojom22PdfNupConverter_StatusESB_EEE(%"class.printing::PdfNupConverter"* nocapture readnone, i32, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16), %"class.std::__1::vector"* nocapture readonly, %"class.base::OnceCallback"* nocapture) unnamed_addr #2 align 2 {
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::ReadOnlySharedMemoryMapping", align 8
  %9 = alloca %"class.std::__1::vector.2", align 8
  %10 = alloca %"class.std::__1::vector.9", align 16
  %11 = alloca %"class.std::__1::vector.16", align 8
  %12 = alloca %"class.std::__1::vector.9", align 16
  %13 = alloca %"class.base::ReadOnlySharedMemoryRegion", align 8
  %14 = alloca %"class.base::OnceCallback", align 8
  %15 = bitcast %"class.std::__1::vector.2"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %9, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %9, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #13
  %19 = bitcast %"class.std::__1::vector.9"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %10, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %10, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 0, i64 24, i1 false) #13, !alias.scope !2
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %24 = load %"class.base::ReadOnlySharedMemoryRegion"*, %"class.base::ReadOnlySharedMemoryRegion"** %23, align 8, !noalias !2
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %26 = load %"class.base::ReadOnlySharedMemoryRegion"*, %"class.base::ReadOnlySharedMemoryRegion"** %25, align 8, !noalias !2
  %27 = icmp eq %"class.base::ReadOnlySharedMemoryRegion"* %24, %26
  br i1 %27, label %28, label %30

28:                                               ; preds = %6
  %29 = bitcast %"class.base::span"** %21 to i64*
  br label %123

30:                                               ; preds = %6
  %31 = bitcast %"class.base::ReadOnlySharedMemoryMapping"* %8 to i8*
  %32 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %8, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %8, i64 0, i32 0, i32 2
  %34 = bitcast %"class.base::span"** %21 to i64*
  %35 = bitcast %"class.std::__1::vector.9"* %10 to i64*
  %36 = bitcast %"class.base::span"** %22 to i64*
  %37 = bitcast %"class.base::ReadOnlySharedMemoryMapping"** %17 to i64*
  %38 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %8, i64 0, i32 0
  br label %39

39:                                               ; preds = %115, %30
  %40 = phi i64 [ 0, %30 ], [ %118, %115 ]
  %41 = phi %"class.base::span"* [ null, %30 ], [ %117, %115 ]
  %42 = phi %"class.base::span"* [ null, %30 ], [ %116, %115 ]
  %43 = phi %"class.base::ReadOnlySharedMemoryRegion"* [ %24, %30 ], [ %113, %115 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %31) #13, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 48, i1 false) #13, !noalias !2
  call void @_ZNK4base26ReadOnlySharedMemoryRegion3MapEv(%"class.base::ReadOnlySharedMemoryMapping"* nonnull sret %8, %"class.base::ReadOnlySharedMemoryRegion"* %43) #13, !noalias !2
  %44 = load i8*, i8** %32, align 8, !noalias !2
  %45 = icmp eq i8* %44, null
  %46 = load i64, i64* %33, align 8, !noalias !2
  %47 = select i1 %45, i64 0, i64 %46
  %48 = icmp ult %"class.base::span"* %42, %41
  %49 = ptrtoint %"class.base::span"* %41 to i64
  br i1 %48, label %50, label %55

50:                                               ; preds = %39
  %51 = getelementptr inbounds %"class.base::span", %"class.base::span"* %42, i64 0, i32 0, i32 0
  store i64 %47, i64* %51, align 8
  %52 = getelementptr inbounds %"class.base::span", %"class.base::span"* %42, i64 0, i32 1
  store i8* %44, i8** %52, align 8
  %53 = getelementptr inbounds %"class.base::span", %"class.base::span"* %42, i64 1
  %54 = ptrtoint %"class.base::span"* %53 to i64
  store i64 %54, i64* %34, align 8, !alias.scope !2
  br label %104

55:                                               ; preds = %39
  %56 = ptrtoint %"class.base::span"* %42 to i64
  %57 = load i64, i64* %35, align 16, !alias.scope !2
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 4
  %60 = add nsw i64 %59, 1
  %61 = icmp ugt i64 %60, 1152921504606846975
  br i1 %61, label %62, label %64

62:                                               ; preds = %55
  %63 = bitcast %"class.std::__1::vector.9"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %63) #14
  unreachable

64:                                               ; preds = %55
  %65 = sub i64 %49, %57
  %66 = ashr exact i64 %65, 4
  %67 = icmp ult i64 %66, 576460752303423487
  br i1 %67, label %68, label %76

68:                                               ; preds = %64
  %69 = ashr exact i64 %65, 3
  %70 = icmp ult i64 %69, %60
  %71 = select i1 %70, i64 %60, i64 %69
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %81, label %73

73:                                               ; preds = %68
  %74 = icmp ugt i64 %71, 1152921504606846975
  br i1 %74, label %75, label %76

75:                                               ; preds = %73
  call void @abort() #14
  unreachable

76:                                               ; preds = %73, %64
  %77 = phi i64 [ %71, %73 ], [ 1152921504606846975, %64 ]
  %78 = shl i64 %77, 4
  %79 = call i8* @_Znwm(i64 %78) #12
  %80 = bitcast i8* %79 to %"class.base::span"*
  br label %81

81:                                               ; preds = %76, %68
  %82 = phi i64 [ %77, %76 ], [ 0, %68 ]
  %83 = phi %"class.base::span"* [ %80, %76 ], [ null, %68 ]
  %84 = getelementptr inbounds %"class.base::span", %"class.base::span"* %83, i64 %59
  %85 = getelementptr inbounds %"class.base::span", %"class.base::span"* %83, i64 %82
  %86 = ptrtoint %"class.base::span"* %85 to i64
  %87 = getelementptr inbounds %"class.base::span", %"class.base::span"* %84, i64 0, i32 0, i32 0
  store i64 %47, i64* %87, align 8, !noalias !2
  %88 = getelementptr inbounds %"class.base::span", %"class.base::span"* %83, i64 %59, i32 1
  store i8* %44, i8** %88, align 8, !noalias !2
  %89 = getelementptr inbounds %"class.base::span", %"class.base::span"* %84, i64 1
  %90 = ptrtoint %"class.base::span"* %89 to i64
  %91 = sub i64 %40, %57
  %92 = ashr exact i64 %91, 4
  %93 = sub nsw i64 0, %92
  %94 = getelementptr inbounds %"class.base::span", %"class.base::span"* %84, i64 %93
  %95 = ptrtoint %"class.base::span"* %94 to i64
  %96 = icmp sgt i64 %91, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %81
  %98 = bitcast %"class.base::span"* %94 to i8*
  %99 = inttoptr i64 %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 %91, i1 false) #13
  br label %100

100:                                              ; preds = %97, %81
  store i64 %95, i64* %35, align 16, !alias.scope !2
  store i64 %90, i64* %34, align 8, !alias.scope !2
  store i64 %86, i64* %36, align 16, !alias.scope !2
  %101 = icmp eq i64 %57, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %100
  %103 = inttoptr i64 %57 to i8*
  call void @_ZdlPv(i8* %103) #12
  br label %104

104:                                              ; preds = %102, %100, %50
  %105 = load %"class.base::ReadOnlySharedMemoryMapping"*, %"class.base::ReadOnlySharedMemoryMapping"** %17, align 8, !noalias !2
  %106 = load %"class.base::ReadOnlySharedMemoryMapping"*, %"class.base::ReadOnlySharedMemoryMapping"** %18, align 8, !noalias !2
  %107 = icmp ult %"class.base::ReadOnlySharedMemoryMapping"* %105, %106
  br i1 %107, label %108, label %111

108:                                              ; preds = %104
  call void @_ZN4base27ReadOnlySharedMemoryMappingC1EOS0_(%"class.base::ReadOnlySharedMemoryMapping"* %105, %"class.base::ReadOnlySharedMemoryMapping"* nonnull dereferenceable(48) %8) #13
  %109 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %105, i64 1
  %110 = ptrtoint %"class.base::ReadOnlySharedMemoryMapping"* %109 to i64
  store i64 %110, i64* %37, align 8, !noalias !2
  br label %112

111:                                              ; preds = %104
  call void @_ZNSt3__16vectorIN4base27ReadOnlySharedMemoryMappingENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"* nonnull %9, %"class.base::ReadOnlySharedMemoryMapping"* nonnull dereferenceable(48) %8) #13
  br label %112

112:                                              ; preds = %111, %108
  call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* nonnull %38) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %31) #13, !noalias !2
  %113 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryRegion", %"class.base::ReadOnlySharedMemoryRegion"* %43, i64 1
  %114 = icmp eq %"class.base::ReadOnlySharedMemoryRegion"* %113, %26
  br i1 %114, label %119, label %115

115:                                              ; preds = %112
  %116 = load %"class.base::span"*, %"class.base::span"** %21, align 8, !alias.scope !2
  %117 = load %"class.base::span"*, %"class.base::span"** %22, align 16, !alias.scope !2
  %118 = ptrtoint %"class.base::span"* %116 to i64
  br label %39

119:                                              ; preds = %112
  %120 = bitcast %"class.std::__1::vector.9"* %10 to <2 x i64>*
  %121 = load <2 x i64>, <2 x i64>* %120, align 16
  %122 = load i64, i64* %36, align 16
  br label %123

123:                                              ; preds = %28, %119
  %124 = phi i64* [ %29, %28 ], [ %34, %119 ]
  %125 = phi i64 [ 0, %28 ], [ %122, %119 ]
  %126 = phi <2 x i64> [ zeroinitializer, %28 ], [ %121, %119 ]
  %127 = bitcast %"class.std::__1::vector.16"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #13
  %128 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %11, i64 0, i32 0, i32 0
  %129 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %11, i64 0, i32 0, i32 1
  %130 = bitcast %"class.std::__1::vector.16"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %130, i8 -86, i64 24, i1 false)
  %131 = bitcast %"class.std::__1::vector.9"* %12 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %131, align 16
  %132 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %133 = bitcast %"class.base::span"** %132 to i64*
  store i64 %125, i64* %133, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 0, i64 24, i1 false) #13
  %134 = zext i32 %1 to i64
  call void @_ZN10chrome_pdf23ConvertPdfPagesToNupPdfENSt3__16vectorIN4base4spanIKhLm18446744073709551615EEENS0_9allocatorIS5_EEEEmRKN3gfx4SizeERKNS9_4RectE(%"class.std::__1::vector.16"* nonnull sret %11, %"class.std::__1::vector.9"* nonnull %12, i64 %134, %"class.gfx::Size"* dereferenceable(8) %2, %"class.gfx::Rect"* dereferenceable(16) %3) #13
  %135 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %12, i64 0, i32 0, i32 0
  %136 = load %"class.base::span"*, %"class.base::span"** %135, align 16
  %137 = icmp eq %"class.base::span"* %136, null
  br i1 %137, label %143, label %138

138:                                              ; preds = %123
  %139 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %12, i64 0, i32 0, i32 1
  %140 = bitcast %"class.base::span"** %139 to i64*
  %141 = ptrtoint %"class.base::span"* %136 to i64
  store i64 %141, i64* %140, align 8
  %142 = bitcast %"class.base::span"* %136 to i8*
  call void @_ZdlPv(i8* %142) #12
  br label %143

143:                                              ; preds = %123, %138
  %144 = load i8*, i8** %128, align 8
  %145 = load i8*, i8** %129, align 8
  %146 = icmp eq i8* %144, %145
  br i1 %146, label %147, label %158

147:                                              ; preds = %143
  call void @_ZN4base26ReadOnlySharedMemoryRegionC1Ev(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %13) #13
  %148 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #13
  %149 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %150 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %151, i64* %152, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %149, align 8
  %153 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %154 = inttoptr i64 %151 to %"class.base::internal::BindStateBase"*
  %155 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %154, i64 0, i32 1
  %156 = bitcast void ()** %155 to void (%"class.base::internal::BindStateBase"*, i32, %"class.base::ReadOnlySharedMemoryRegion"*)**
  %157 = load void (%"class.base::internal::BindStateBase"*, i32, %"class.base::ReadOnlySharedMemoryRegion"*)*, void (%"class.base::internal::BindStateBase"*, i32, %"class.base::ReadOnlySharedMemoryRegion"*)** %156, align 8
  call void %157(%"class.base::internal::BindStateBase"* %154, i32 1, %"class.base::ReadOnlySharedMemoryRegion"* nonnull dereferenceable(64) %13) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %153) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #13
  call void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %13) #13
  br label %164

158:                                              ; preds = %143
  %159 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %160 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"class.base::OnceCallback"* %14 to i64*
  store i64 %161, i64* %162, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %159, align 8
  call fastcc void @_ZN8printing12_GLOBAL__N_131RunCallbackWithConversionResultIN4base12OnceCallbackIFvNS_5mojom22PdfNupConverter_StatusENS2_26ReadOnlySharedMemoryRegionEEEEEEvT_RKNSt3__16vectorIhNSA_9allocatorIhEEEE(%"class.base::OnceCallback"* nonnull %14, %"class.std::__1::vector.16"* nonnull dereferenceable(24) %11)
  %163 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %14, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %163) #13
  br label %164

164:                                              ; preds = %158, %147
  %165 = load i8*, i8** %128, align 8
  %166 = icmp eq i8* %165, null
  br i1 %166, label %170, label %167

167:                                              ; preds = %164
  %168 = ptrtoint i8* %165 to i64
  %169 = bitcast i8** %129 to i64*
  store i64 %168, i64* %169, align 8
  call void @_ZdlPv(i8* nonnull %165) #12
  br label %170

170:                                              ; preds = %164, %167
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #13
  %171 = load %"class.base::span"*, %"class.base::span"** %20, align 16
  %172 = icmp eq %"class.base::span"* %171, null
  br i1 %172, label %176, label %173

173:                                              ; preds = %170
  %174 = ptrtoint %"class.base::span"* %171 to i64
  store i64 %174, i64* %124, align 8
  %175 = bitcast %"class.base::span"* %171 to i8*
  call void @_ZdlPv(i8* %175) #12
  br label %176

176:                                              ; preds = %170, %173
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #13
  %177 = load %"class.base::ReadOnlySharedMemoryMapping"*, %"class.base::ReadOnlySharedMemoryMapping"** %16, align 8
  %178 = icmp eq %"class.base::ReadOnlySharedMemoryMapping"* %177, null
  br i1 %178, label %195, label %179

179:                                              ; preds = %176
  %180 = bitcast %"class.base::ReadOnlySharedMemoryMapping"* %177 to i8*
  %181 = load %"class.base::ReadOnlySharedMemoryMapping"*, %"class.base::ReadOnlySharedMemoryMapping"** %17, align 8
  %182 = icmp eq %"class.base::ReadOnlySharedMemoryMapping"* %181, %177
  br i1 %182, label %193, label %183

183:                                              ; preds = %179, %183
  %184 = phi %"class.base::ReadOnlySharedMemoryMapping"* [ %185, %183 ], [ %181, %179 ]
  %185 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %184, i64 -1
  %186 = bitcast %"class.base::ReadOnlySharedMemoryMapping"* %185 to void (%"class.base::ReadOnlySharedMemoryMapping"*)***
  %187 = load void (%"class.base::ReadOnlySharedMemoryMapping"*)**, void (%"class.base::ReadOnlySharedMemoryMapping"*)*** %186, align 8
  %188 = load void (%"class.base::ReadOnlySharedMemoryMapping"*)*, void (%"class.base::ReadOnlySharedMemoryMapping"*)** %187, align 8
  call void %188(%"class.base::ReadOnlySharedMemoryMapping"* %185) #13
  %189 = icmp eq %"class.base::ReadOnlySharedMemoryMapping"* %185, %177
  br i1 %189, label %190, label %183

190:                                              ; preds = %183
  %191 = bitcast %"class.std::__1::vector.2"* %9 to i8**
  %192 = load i8*, i8** %191, align 8
  br label %193

193:                                              ; preds = %190, %179
  %194 = phi i8* [ %192, %190 ], [ %180, %179 ]
  store %"class.base::ReadOnlySharedMemoryMapping"* %177, %"class.base::ReadOnlySharedMemoryMapping"** %17, align 8
  call void @_ZdlPv(i8* %194) #12
  br label %195

195:                                              ; preds = %176, %193
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN10chrome_pdf23ConvertPdfPagesToNupPdfENSt3__16vectorIN4base4spanIKhLm18446744073709551615EEENS0_9allocatorIS5_EEEEmRKN3gfx4SizeERKNS9_4RectE(%"class.std::__1::vector.16"* sret, %"class.std::__1::vector.9"*, i64, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZN4base26ReadOnlySharedMemoryRegionC1Ev(%"class.base::ReadOnlySharedMemoryRegion"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8printing12_GLOBAL__N_131RunCallbackWithConversionResultIN4base12OnceCallbackIFvNS_5mojom22PdfNupConverter_StatusENS2_26ReadOnlySharedMemoryRegionEEEEEEvT_RKNSt3__16vectorIhNSA_9allocatorIhEEEE(%"class.base::OnceCallback"* nocapture, %"class.std::__1::vector.16"* nocapture readonly dereferenceable(24)) unnamed_addr #2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"struct.base::MappedReadOnlyRegion", align 8
  %6 = alloca %"class.base::ReadOnlySharedMemoryRegion", align 8
  %7 = alloca %"class.base::ReadOnlySharedMemoryRegion", align 8
  %8 = bitcast %"struct.base::MappedReadOnlyRegion"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 112, i1 false)
  %9 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %1, i64 0, i32 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.16"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  call void @_ZN4base26ReadOnlySharedMemoryRegion6CreateEm(%"struct.base::MappedReadOnlyRegion"* nonnull sret %5, i64 %14) #13
  %15 = getelementptr inbounds %"struct.base::MappedReadOnlyRegion", %"struct.base::MappedReadOnlyRegion"* %5, i64 0, i32 0
  %16 = call zeroext i1 @_ZNK4base26ReadOnlySharedMemoryRegion7IsValidEv(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %15) #13
  br i1 %16, label %17, label %21

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"struct.base::MappedReadOnlyRegion", %"struct.base::MappedReadOnlyRegion"* %5, i64 0, i32 1, i32 0, i32 1
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %32

21:                                               ; preds = %17, %2
  call void @_ZN4base26ReadOnlySharedMemoryRegionC1EOS0_(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %6, %"class.base::ReadOnlySharedMemoryRegion"* nonnull dereferenceable(64) %15) #13
  %22 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.base::OnceCallback"* %0 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %25, i64* %26, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %23, align 8
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %28 = inttoptr i64 %25 to %"class.base::internal::BindStateBase"*
  %29 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %28, i64 0, i32 1
  %30 = bitcast void ()** %29 to void (%"class.base::internal::BindStateBase"*, i32, %"class.base::ReadOnlySharedMemoryRegion"*)**
  %31 = load void (%"class.base::internal::BindStateBase"*, i32, %"class.base::ReadOnlySharedMemoryRegion"*)*, void (%"class.base::internal::BindStateBase"*, i32, %"class.base::ReadOnlySharedMemoryRegion"*)** %30, align 8
  call void %31(%"class.base::internal::BindStateBase"* %28, i32 2, %"class.base::ReadOnlySharedMemoryRegion"* nonnull dereferenceable(64) %6) #13
  br label %48

32:                                               ; preds = %17
  %33 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %1, i64 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = load i64, i64* %10, align 8
  %36 = ptrtoint i8* %34 to i64
  %37 = sub i64 %35, %36
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %19, i8* align 1 %34, i64 %37, i1 false)
  call void @_ZN4base26ReadOnlySharedMemoryRegionC1EOS0_(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %7, %"class.base::ReadOnlySharedMemoryRegion"* nonnull dereferenceable(64) %15) #13
  %38 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #13
  %39 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %0, i64 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.base::OnceCallback"* %0 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %41, i64* %42, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %39, align 8
  %43 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %44 = inttoptr i64 %41 to %"class.base::internal::BindStateBase"*
  %45 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %44, i64 0, i32 1
  %46 = bitcast void ()** %45 to void (%"class.base::internal::BindStateBase"*, i32, %"class.base::ReadOnlySharedMemoryRegion"*)**
  %47 = load void (%"class.base::internal::BindStateBase"*, i32, %"class.base::ReadOnlySharedMemoryRegion"*)*, void (%"class.base::internal::BindStateBase"*, i32, %"class.base::ReadOnlySharedMemoryRegion"*)** %46, align 8
  call void %47(%"class.base::internal::BindStateBase"* %44, i32 0, %"class.base::ReadOnlySharedMemoryRegion"* nonnull dereferenceable(64) %7) #13
  br label %48

48:                                               ; preds = %32, %21
  %49 = phi %"class.base::internal::CallbackBase"* [ %43, %32 ], [ %27, %21 ]
  %50 = phi i8* [ %38, %32 ], [ %22, %21 ]
  %51 = phi %"class.base::ReadOnlySharedMemoryRegion"* [ %7, %32 ], [ %6, %21 ]
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %49) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #13
  call void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %51) #13
  %52 = getelementptr inbounds %"struct.base::MappedReadOnlyRegion", %"struct.base::MappedReadOnlyRegion"* %5, i64 0, i32 1, i32 0
  call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* %52) #13
  call void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %8) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8printing15PdfNupConverter18NupDocumentConvertEjRKN3gfx4SizeERKNS1_4RectEN4base26ReadOnlySharedMemoryRegionENS8_12OnceCallbackIFvNS_5mojom22PdfNupConverter_StatusES9_EEE(%"class.printing::PdfNupConverter"* nocapture readnone, i32, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16), %"class.base::ReadOnlySharedMemoryRegion"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #2 align 2 {
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::ReadOnlySharedMemoryMapping", align 8
  %9 = alloca %"class.std::__1::vector.16", align 8
  %10 = alloca %"class.base::ReadOnlySharedMemoryRegion", align 8
  %11 = alloca %"class.base::OnceCallback", align 8
  %12 = bitcast %"class.base::ReadOnlySharedMemoryMapping"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %8, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %8, i64 0, i32 0, i32 2
  %15 = bitcast %"class.base::ReadOnlySharedMemoryMapping"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 48, i1 false)
  call void @_ZNK4base26ReadOnlySharedMemoryRegion3MapEv(%"class.base::ReadOnlySharedMemoryMapping"* nonnull sret %8, %"class.base::ReadOnlySharedMemoryRegion"* %4) #13
  %16 = load i8*, i8** %13, align 8
  %17 = icmp eq i8* %16, null
  %18 = load i64, i64* %14, align 8
  %19 = select i1 %17, i64 0, i64 %18
  %20 = bitcast %"class.std::__1::vector.16"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #13
  %21 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %9, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %9, i64 0, i32 0, i32 1
  %23 = zext i32 %1 to i64
  %24 = bitcast %"class.std::__1::vector.16"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  call void @_ZN10chrome_pdf26ConvertPdfDocumentToNupPdfEN4base4spanIKhLm18446744073709551615EEEmRKN3gfx4SizeERKNS4_4RectE(%"class.std::__1::vector.16"* nonnull sret %9, i64 %19, i8* %16, i64 %23, %"class.gfx::Size"* dereferenceable(8) %2, %"class.gfx::Rect"* dereferenceable(16) %3) #13
  %25 = load i8*, i8** %21, align 8
  %26 = load i8*, i8** %22, align 8
  %27 = icmp eq i8* %25, %26
  br i1 %27, label %28, label %39

28:                                               ; preds = %6
  call void @_ZN4base26ReadOnlySharedMemoryRegionC1Ev(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %10) #13
  %29 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %32, i64* %33, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %30, align 8
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %35 = inttoptr i64 %32 to %"class.base::internal::BindStateBase"*
  %36 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %35, i64 0, i32 1
  %37 = bitcast void ()** %36 to void (%"class.base::internal::BindStateBase"*, i32, %"class.base::ReadOnlySharedMemoryRegion"*)**
  %38 = load void (%"class.base::internal::BindStateBase"*, i32, %"class.base::ReadOnlySharedMemoryRegion"*)*, void (%"class.base::internal::BindStateBase"*, i32, %"class.base::ReadOnlySharedMemoryRegion"*)** %37, align 8
  call void %38(%"class.base::internal::BindStateBase"* %35, i32 1, %"class.base::ReadOnlySharedMemoryRegion"* nonnull dereferenceable(64) %10) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %34) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  call void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %10) #13
  br label %45

39:                                               ; preds = %6
  %40 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.base::OnceCallback"* %11 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %40, align 8
  call fastcc void @_ZN8printing12_GLOBAL__N_131RunCallbackWithConversionResultIN4base12OnceCallbackIFvNS_5mojom22PdfNupConverter_StatusENS2_26ReadOnlySharedMemoryRegionEEEEEEvT_RKNSt3__16vectorIhNSA_9allocatorIhEEEE(%"class.base::OnceCallback"* nonnull %11, %"class.std::__1::vector.16"* nonnull dereferenceable(24) %9)
  %44 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %44) #13
  br label %45

45:                                               ; preds = %39, %28
  %46 = load i8*, i8** %21, align 8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %45
  %49 = ptrtoint i8* %46 to i64
  %50 = bitcast i8** %22 to i64*
  store i64 %49, i64* %50, align 8
  call void @_ZdlPv(i8* nonnull %46) #12
  br label %51

51:                                               ; preds = %45, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #13
  %52 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %8, i64 0, i32 0
  call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* nonnull %52) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZNK4base26ReadOnlySharedMemoryRegion3MapEv(%"class.base::ReadOnlySharedMemoryMapping"* sret, %"class.base::ReadOnlySharedMemoryRegion"*) local_unnamed_addr #5

declare void @_ZN10chrome_pdf26ConvertPdfDocumentToNupPdfEN4base4spanIKhLm18446744073709551615EEEmRKN3gfx4SizeERKNS4_4RectE(%"class.std::__1::vector.16"* sret, i64, i8*, i64, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind
declare void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8printing15PdfNupConverter17SetWebContentsURLERK4GURL(%"class.printing::PdfNupConverter"* nocapture readnone, %class.GURL* dereferenceable(120)) unnamed_addr #2 align 2 {
  %3 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %1) #13
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %11 = select i1 %7, i8* %9, i8* %10
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %6 to i64
  %15 = select i1 %7, i64 %13, i64 %14
  tail call void @_ZN14crash_reporter8internal18CrashKeyStringImpl3SetEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crash_reporter::internal::CrashKeyStringImpl"* bitcast (i8** getelementptr inbounds ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [1024 x i8] } }, { %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [1024 x i8] } }* @_ZZN8printing15PdfNupConverter17SetWebContentsURLERK4GURLE9crash_key, i64 0, i32 2, i32 0) to %"class.crash_reporter::internal::CrashKeyStringImpl"*), i8* %11, i64 %15) #13
  %16 = tail call i1 @llvm.is.constant.i64(i64 %15) #13
  %17 = icmp ult i64 %15, 4294967296
  %18 = trunc i64 %15 to i32
  %19 = select i1 %17, i32 %18, i32 -1
  %20 = icmp ult i64 %15, 4294967295
  %21 = select i1 %20, i64 %15, i64 4294967295
  %22 = trunc i64 %21 to i32
  %23 = select i1 %16, i32 %22, i32 %19
  %24 = icmp ult i32 %23, 1024
  %25 = select i1 %24, i32 %23, i32 1024
  %26 = zext i32 %25 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 getelementptr inbounds ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [1024 x i8] } }, { %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [1024 x i8] } }* @_ZZN8printing15PdfNupConverter17SetWebContentsURLERK4GURLE9crash_key, i64 0, i32 3, i32 5, i64 0), i8* align 1 %11, i64 %26, i1 false) #13
  tail call void @_ZN8crashpad10Annotation7SetSizeEj(%"class.crashpad::Annotation"* bitcast (%"class.crashpad::Annotation"** getelementptr inbounds ({ %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [1024 x i8] } }, { %"class.crash_reporter::internal::CrashKeyStringImpl"*, %"class.crashpad::Annotation"*, { i8*, i64*, i64, %"struct.crash_reporter::internal::InitializedArrayImpl" }, { { { %"class.crashpad::Annotation"* } }, i8*, i8*, i32, i16, [1024 x i8] } }* @_ZZN8printing15PdfNupConverter17SetWebContentsURLERK4GURLE9crash_key, i64 0, i32 3, i32 0, i32 0, i32 0) to %"class.crashpad::Annotation"*), i32 %25) #13
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base27ReadOnlySharedMemoryMappingENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"*, %"class.base::ReadOnlySharedMemoryMapping"* dereferenceable(48)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::ReadOnlySharedMemoryMapping"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::ReadOnlySharedMemoryMapping"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"class.base::ReadOnlySharedMemoryMapping"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.base::ReadOnlySharedMemoryMapping"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %33, i64 %9
  %35 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %33, i64 %32
  %36 = ptrtoint %"class.base::ReadOnlySharedMemoryMapping"* %35 to i64
  tail call void @_ZN4base27ReadOnlySharedMemoryMappingC1EOS0_(%"class.base::ReadOnlySharedMemoryMapping"* %34, %"class.base::ReadOnlySharedMemoryMapping"* dereferenceable(48) %1) #13
  %37 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %34, i64 1
  %38 = ptrtoint %"class.base::ReadOnlySharedMemoryMapping"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.base::ReadOnlySharedMemoryMapping"*, %"class.base::ReadOnlySharedMemoryMapping"** %39, align 8
  %41 = load %"class.base::ReadOnlySharedMemoryMapping"*, %"class.base::ReadOnlySharedMemoryMapping"** %3, align 8
  %42 = icmp eq %"class.base::ReadOnlySharedMemoryMapping"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.base::ReadOnlySharedMemoryMapping"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.base::ReadOnlySharedMemoryMapping"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.base::ReadOnlySharedMemoryMapping"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %46, i64 -1
  %49 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %47, i64 -1
  tail call void @_ZN4base27ReadOnlySharedMemoryMappingC1EOS0_(%"class.base::ReadOnlySharedMemoryMapping"* %48, %"class.base::ReadOnlySharedMemoryMapping"* dereferenceable(48) %49) #13
  %50 = icmp eq %"class.base::ReadOnlySharedMemoryMapping"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.base::ReadOnlySharedMemoryMapping"*, %"class.base::ReadOnlySharedMemoryMapping"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.base::ReadOnlySharedMemoryMapping"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.base::ReadOnlySharedMemoryMapping"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.base::ReadOnlySharedMemoryMapping"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.base::ReadOnlySharedMemoryMapping"*
  %60 = icmp eq %"class.base::ReadOnlySharedMemoryMapping"* %55, %59
  br i1 %60, label %68, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.base::ReadOnlySharedMemoryMapping"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %62, i64 -1
  %64 = bitcast %"class.base::ReadOnlySharedMemoryMapping"* %63 to void (%"class.base::ReadOnlySharedMemoryMapping"*)***
  %65 = load void (%"class.base::ReadOnlySharedMemoryMapping"*)**, void (%"class.base::ReadOnlySharedMemoryMapping"*)*** %64, align 8
  %66 = load void (%"class.base::ReadOnlySharedMemoryMapping"*)*, void (%"class.base::ReadOnlySharedMemoryMapping"*)** %65, align 8
  tail call void %66(%"class.base::ReadOnlySharedMemoryMapping"* %63) #13
  %67 = icmp eq %"class.base::ReadOnlySharedMemoryMapping"* %63, %59
  br i1 %67, label %68, label %61

68:                                               ; preds = %61, %54
  %69 = icmp eq i64 %57, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base27ReadOnlySharedMemoryMappingC1EOS0_(%"class.base::ReadOnlySharedMemoryMapping"*, %"class.base::ReadOnlySharedMemoryMapping"* dereferenceable(48)) unnamed_addr #6

declare void @_ZN4base26ReadOnlySharedMemoryRegion6CreateEm(%"struct.base::MappedReadOnlyRegion"* sret, i64) local_unnamed_addr #5

declare void @_ZN4base26ReadOnlySharedMemoryRegionC1EOS0_(%"class.base::ReadOnlySharedMemoryRegion"*, %"class.base::ReadOnlySharedMemoryRegion"* dereferenceable(64)) unnamed_addr #5

declare zeroext i1 @_ZNK4base26ReadOnlySharedMemoryRegion7IsValidEv(%"class.base::ReadOnlySharedMemoryRegion"*) local_unnamed_addr #5

declare void @_ZN14crash_reporter8internal18CrashKeyStringImpl3SetEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.crash_reporter::internal::CrashKeyStringImpl"*, i8*, i64) local_unnamed_addr #5

declare void @_ZN8crashpad10Annotation7SetSizeEj(%"class.crashpad::Annotation"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #11

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN8printing12_GLOBAL__N_120CreatePdfPagesVectorERKNSt3__16vectorIN4base26ReadOnlySharedMemoryRegionENS1_9allocatorIS4_EEEEPNS2_INS3_27ReadOnlySharedMemoryMappingENS5_ISA_EEEE: argument 0"}
!4 = distinct !{!4, !"_ZN8printing12_GLOBAL__N_120CreatePdfPagesVectorERKNSt3__16vectorIN4base26ReadOnlySharedMemoryRegionENS1_9allocatorIS4_EEEEPNS2_INS3_27ReadOnlySharedMemoryMappingENS5_ISA_EEEE"}
