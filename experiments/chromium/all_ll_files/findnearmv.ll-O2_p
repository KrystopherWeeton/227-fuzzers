; ModuleID = '../../third_party/libvpx/source/libvpx/vp8/common/findnearmv.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp8/common/findnearmv.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.macroblockd = type { [384 x i8], [400 x i16], [400 x i16], [25 x i8], [7 x i8], [16 x i16], [16 x i16], [16 x i16], [16 x i16], [25 x %struct.blockd], i32, %struct.yv12_buffer_config, %struct.yv12_buffer_config, %struct.modeinfo*, i32, i32, i32, i32, [3 x i8*], [3 x i8*], [2 x i32], %struct.ENTROPY_CONTEXT_PLANES*, %struct.ENTROPY_CONTEXT_PLANES*, i8, i8, i8, i8, [3 x i8], [2 x [4 x i8]], i8, i8, [4 x i8], [4 x i8], [4 x i8], [4 x i8], i32, i32, i32, i32, void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)*, i8*, i32, %struct.vpx_internal_error_info, [16 x i8], [704 x i8] }
%struct.blockd = type { i16*, i16*, i8*, i16*, i32, i8*, %union.b_mode_info }
%union.b_mode_info = type { i32 }
%struct.yv12_buffer_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ENTROPY_CONTEXT_PLANES = type { [4 x i8], [2 x i8], [2 x i8], i8 }
%struct.vpx_internal_error_info = type { i32, i32, [80 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.modeinfo = type { %struct.MB_MODE_INFO, [16 x %union.b_mode_info] }
%struct.MB_MODE_INFO = type { i8, i8, i8, i8, %union.int_mv, i8, i8, i8, i8 }
%union.int_mv = type { i32 }
%struct.MV = type { i16, i16 }

@vp8_mbsplit_offset = hidden local_unnamed_addr constant <{ <{ i8, i8, [14 x i8] }>, <{ i8, i8, [14 x i8] }>, <{ i8, i8, i8, i8, [12 x i8] }>, [16 x i8] }> <{ <{ i8, i8, [14 x i8] }> <{ i8 0, i8 8, [14 x i8] zeroinitializer }>, <{ i8, i8, [14 x i8] }> <{ i8 0, i8 2, [14 x i8] zeroinitializer }>, <{ i8, i8, i8, i8, [12 x i8] }> <{ i8 0, i8 2, i8 8, i8 10, [12 x i8] zeroinitializer }>, [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F" }>, align 16
@vp8_mode_contexts = external local_unnamed_addr constant [6 x [4 x i32]], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_find_near_mvs(%struct.macroblockd* nocapture readonly, %struct.modeinfo* nocapture readonly, %union.int_mv* nocapture, %union.int_mv* nocapture, %union.int_mv* nocapture, i32* nocapture, i32, i32* nocapture readonly) local_unnamed_addr #0 {
  %9 = alloca [4 x %union.int_mv], align 16
  %10 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 14
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = sub nsw i64 0, %12
  %14 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %1, i64 %13
  %15 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %14, i64 -1
  %16 = bitcast [4 x %union.int_mv]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #3
  %17 = getelementptr inbounds [4 x %union.int_mv], [4 x %union.int_mv]* %9, i64 0, i64 0
  %18 = getelementptr inbounds [4 x %union.int_mv], [4 x %union.int_mv]* %9, i64 0, i64 0, i32 0
  %19 = getelementptr inbounds [4 x %union.int_mv], [4 x %union.int_mv]* %9, i64 0, i64 1
  %20 = getelementptr inbounds %union.int_mv, %union.int_mv* %19, i64 0, i32 0
  %21 = getelementptr inbounds [4 x %union.int_mv], [4 x %union.int_mv]* %9, i64 0, i64 2, i32 0
  %22 = bitcast [4 x %union.int_mv]* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %22, i8 -86, i64 16, i1 false)
  store i32 0, i32* %21, align 8
  %23 = getelementptr inbounds [4 x %union.int_mv], [4 x %union.int_mv]* %9, i64 0, i64 1, i32 0
  store i32 0, i32* %23, align 4
  store i32 0, i32* %18, align 16
  %24 = getelementptr inbounds i32, i32* %5, i64 3
  %25 = getelementptr inbounds i32, i32* %5, i64 2
  %26 = getelementptr inbounds i32, i32* %5, i64 1
  %27 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %1, i64 %13, i32 0, i32 2
  %28 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %28, i8 0, i64 16, i1 false)
  %29 = load i8, i8* %27, align 2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %57, label %31

31:                                               ; preds = %8
  %32 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %1, i64 %13, i32 0, i32 4, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %52, label %35

35:                                               ; preds = %31
  store i32 %33, i32* %20, align 4
  %36 = zext i8 %29 to i64
  %37 = getelementptr inbounds i32, i32* %7, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = sext i32 %6 to i64
  %40 = getelementptr inbounds i32, i32* %7, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, %38
  br i1 %42, label %52, label %43

43:                                               ; preds = %35
  %44 = lshr i32 %33, 16
  %45 = trunc i32 %44 to i16
  %46 = trunc i32 %33 to i16
  %47 = bitcast %union.int_mv* %19 to %struct.MV*
  %48 = bitcast %union.int_mv* %19 to i16*
  %49 = sub i16 0, %46
  store i16 %49, i16* %48, align 4
  %50 = getelementptr inbounds %struct.MV, %struct.MV* %47, i64 0, i32 1
  %51 = sub i16 0, %45
  store i16 %51, i16* %50, align 2
  br label %52

52:                                               ; preds = %43, %35, %31
  %53 = phi %union.int_mv* [ %17, %31 ], [ %19, %35 ], [ %19, %43 ]
  %54 = phi i32* [ %5, %31 ], [ %26, %35 ], [ %26, %43 ]
  %55 = load i32, i32* %54, align 4
  %56 = add nsw i32 %55, 2
  store i32 %56, i32* %54, align 4
  br label %57

57:                                               ; preds = %8, %52
  %58 = phi i32 [ %56, %52 ], [ 0, %8 ]
  %59 = phi %union.int_mv* [ %53, %52 ], [ %17, %8 ]
  %60 = phi i32* [ %54, %52 ], [ %5, %8 ]
  %61 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %1, i64 -1, i32 0, i32 2
  %62 = load i8, i8* %61, align 2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %102, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %1, i64 -1, i32 0, i32 4, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %91, label %68

68:                                               ; preds = %64
  %69 = lshr i32 %66, 16
  %70 = zext i8 %62 to i64
  %71 = getelementptr inbounds i32, i32* %7, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = sext i32 %6 to i64
  %74 = getelementptr inbounds i32, i32* %7, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, %72
  %77 = sub i32 0, %66
  %78 = sub nsw i32 0, %69
  %79 = select i1 %76, i32 %69, i32 %78
  %80 = select i1 %76, i32 %66, i32 %77
  %81 = shl i32 %79, 16
  %82 = and i32 %80, 65535
  %83 = or i32 %81, %82
  %84 = getelementptr inbounds %union.int_mv, %union.int_mv* %59, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %83, %85
  br i1 %86, label %96, label %87

87:                                               ; preds = %68
  %88 = getelementptr inbounds %union.int_mv, %union.int_mv* %59, i64 1
  %89 = getelementptr inbounds %union.int_mv, %union.int_mv* %88, i64 0, i32 0
  store i32 %83, i32* %89, align 4
  %90 = getelementptr inbounds i32, i32* %60, i64 1
  br label %91

91:                                               ; preds = %64, %87
  %92 = phi i32* [ %90, %87 ], [ %5, %64 ]
  %93 = phi %union.int_mv* [ %88, %87 ], [ %59, %64 ]
  %94 = phi i32* [ %90, %87 ], [ %60, %64 ]
  %95 = load i32, i32* %92, align 4
  br label %96

96:                                               ; preds = %91, %68
  %97 = phi i32 [ %58, %68 ], [ %95, %91 ]
  %98 = phi i32* [ %60, %68 ], [ %92, %91 ]
  %99 = phi %union.int_mv* [ %59, %68 ], [ %93, %91 ]
  %100 = phi i32* [ %60, %68 ], [ %94, %91 ]
  %101 = add nsw i32 %97, 2
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %96, %57
  %103 = phi %union.int_mv* [ %59, %57 ], [ %99, %96 ]
  %104 = phi i32* [ %60, %57 ], [ %100, %96 ]
  %105 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %15, i64 0, i32 0
  %106 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %105, i64 0, i32 2
  %107 = load i8, i8* %106, align 2
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %141, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %105, i64 0, i32 4, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %136, label %113

113:                                              ; preds = %109
  %114 = lshr i32 %111, 16
  %115 = zext i8 %107 to i64
  %116 = getelementptr inbounds i32, i32* %7, i64 %115
  %117 = load i32, i32* %116, align 4
  %118 = sext i32 %6 to i64
  %119 = getelementptr inbounds i32, i32* %7, i64 %118
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, %117
  %122 = sub i32 0, %111
  %123 = sub nsw i32 0, %114
  %124 = select i1 %121, i32 %114, i32 %123
  %125 = select i1 %121, i32 %111, i32 %122
  %126 = shl i32 %124, 16
  %127 = and i32 %125, 65535
  %128 = or i32 %126, %127
  %129 = getelementptr inbounds %union.int_mv, %union.int_mv* %103, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %128, %130
  br i1 %131, label %136, label %132

132:                                              ; preds = %113
  %133 = getelementptr inbounds %union.int_mv, %union.int_mv* %103, i64 1
  %134 = getelementptr inbounds %union.int_mv, %union.int_mv* %133, i64 0, i32 0
  store i32 %128, i32* %134, align 4
  %135 = getelementptr inbounds i32, i32* %104, i64 1
  br label %136

136:                                              ; preds = %109, %132, %113
  %137 = phi i32* [ %135, %132 ], [ %104, %113 ], [ %5, %109 ]
  %138 = phi %union.int_mv* [ %133, %132 ], [ %103, %113 ], [ %103, %109 ]
  %139 = load i32, i32* %137, align 4
  %140 = add nsw i32 %139, 1
  store i32 %140, i32* %137, align 4
  br label %141

141:                                              ; preds = %136, %102
  %142 = phi %union.int_mv* [ %103, %102 ], [ %138, %136 ]
  %143 = load i32, i32* %24, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %153, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %union.int_mv, %union.int_mv* %142, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  %148 = load i32, i32* %20, align 4
  %149 = icmp eq i32 %147, %148
  br i1 %149, label %150, label %153

150:                                              ; preds = %145
  %151 = load i32, i32* %26, align 4
  %152 = add nsw i32 %151, 1
  store i32 %152, i32* %26, align 4
  br label %153

153:                                              ; preds = %141, %145, %150
  %154 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %14, i64 0, i32 0, i32 0
  %155 = load i8, i8* %154, align 4
  %156 = icmp eq i8 %155, 9
  %157 = zext i1 %156 to i32
  %158 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %1, i64 -1, i32 0, i32 0
  %159 = load i8, i8* %158, align 4
  %160 = icmp eq i8 %159, 9
  %161 = zext i1 %160 to i32
  %162 = add nuw nsw i32 %161, %157
  %163 = shl nuw nsw i32 %162, 1
  %164 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %105, i64 0, i32 0
  %165 = load i8, i8* %164, align 4
  %166 = icmp eq i8 %165, 9
  %167 = zext i1 %166 to i32
  %168 = or i32 %163, %167
  store i32 %168, i32* %24, align 4
  %169 = load i32, i32* %25, align 4
  %170 = load i32, i32* %26, align 4
  %171 = icmp sgt i32 %169, %170
  br i1 %171, label %172, label %175

172:                                              ; preds = %153
  store i32 %169, i32* %26, align 4
  store i32 %170, i32* %25, align 4
  %173 = load i32, i32* %20, align 4
  %174 = load i32, i32* %21, align 8
  store i32 %174, i32* %20, align 4
  store i32 %173, i32* %21, align 8
  br label %175

175:                                              ; preds = %172, %153
  %176 = phi i32 [ %169, %172 ], [ %170, %153 ]
  %177 = load i32, i32* %5, align 4
  %178 = icmp slt i32 %176, %177
  %179 = load i32, i32* %20, align 4
  br i1 %178, label %181, label %180

180:                                              ; preds = %175
  store i32 %179, i32* %18, align 16
  br label %181

181:                                              ; preds = %175, %180
  %182 = phi i32 [ %179, %180 ], [ 0, %175 ]
  %183 = getelementptr inbounds %union.int_mv, %union.int_mv* %4, i64 0, i32 0
  store i32 %182, i32* %183, align 4
  %184 = getelementptr inbounds %union.int_mv, %union.int_mv* %2, i64 0, i32 0
  store i32 %179, i32* %184, align 4
  %185 = load i32, i32* %21, align 8
  %186 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 0, i32 0
  store i32 %185, i32* %186, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp8_find_near_mvs_bias(%struct.macroblockd* nocapture readonly, %struct.modeinfo* nocapture readonly, [10 x %union.int_mv]* nocapture, %union.int_mv* nocapture, i32* nocapture, i32, i32* nocapture readonly) local_unnamed_addr #0 {
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds i32, i32* %6, i64 %8
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [10 x %union.int_mv], [10 x %union.int_mv]* %2, i64 %11, i64 5
  %13 = getelementptr inbounds [10 x %union.int_mv], [10 x %union.int_mv]* %2, i64 %11, i64 6
  %14 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 %11
  tail call void @vp8_find_near_mvs(%struct.macroblockd* %0, %struct.modeinfo* %1, %union.int_mv* %12, %union.int_mv* %13, %union.int_mv* %14, i32* %4, i32 %5, i32* %6)
  %15 = icmp eq i32 %10, 0
  %16 = zext i1 %15 to i64
  %17 = getelementptr inbounds [10 x %union.int_mv], [10 x %union.int_mv]* %2, i64 %16, i64 5
  %18 = bitcast %union.int_mv* %12 to %struct.MV*
  %19 = bitcast %union.int_mv* %12 to i16*
  %20 = load i16, i16* %19, align 4
  %21 = sub i16 0, %20
  %22 = bitcast %union.int_mv* %17 to %struct.MV*
  %23 = bitcast %union.int_mv* %17 to i16*
  store i16 %21, i16* %23, align 4
  %24 = getelementptr inbounds %struct.MV, %struct.MV* %18, i64 0, i32 1
  %25 = load i16, i16* %24, align 2
  %26 = sub i16 0, %25
  %27 = getelementptr inbounds %struct.MV, %struct.MV* %22, i64 0, i32 1
  store i16 %26, i16* %27, align 2
  %28 = sext i16 %26 to i32
  %29 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 35
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %30, -128
  %32 = icmp sgt i32 %31, %28
  br i1 %32, label %38, label %33

33:                                               ; preds = %7
  %34 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 36
  %35 = load i32, i32* %34, align 8
  %36 = add nsw i32 %35, 128
  %37 = icmp slt i32 %36, %28
  br i1 %37, label %38, label %41

38:                                               ; preds = %33, %7
  %39 = phi i32 [ %31, %7 ], [ %36, %33 ]
  %40 = trunc i32 %39 to i16
  store i16 %40, i16* %27, align 2
  br label %41

41:                                               ; preds = %38, %33
  %42 = sext i16 %21 to i32
  %43 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 37
  %44 = load i32, i32* %43, align 4
  %45 = add nsw i32 %44, -128
  %46 = icmp sgt i32 %45, %42
  br i1 %46, label %52, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38
  %49 = load i32, i32* %48, align 16
  %50 = add nsw i32 %49, 128
  %51 = icmp slt i32 %50, %42
  br i1 %51, label %52, label %55

52:                                               ; preds = %47, %41
  %53 = phi i32 [ %45, %41 ], [ %50, %47 ]
  %54 = trunc i32 %53 to i16
  store i16 %54, i16* %23, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = load i16, i16* %24, align 2
  %57 = sext i16 %56 to i32
  %58 = load i32, i32* %29, align 4
  %59 = add nsw i32 %58, -128
  %60 = icmp sgt i32 %59, %57
  br i1 %60, label %66, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 36
  %63 = load i32, i32* %62, align 8
  %64 = add nsw i32 %63, 128
  %65 = icmp slt i32 %64, %57
  br i1 %65, label %66, label %69

66:                                               ; preds = %61, %55
  %67 = phi i32 [ %59, %55 ], [ %64, %61 ]
  %68 = trunc i32 %67 to i16
  store i16 %68, i16* %24, align 2
  br label %69

69:                                               ; preds = %66, %61
  %70 = load i16, i16* %19, align 4
  %71 = sext i16 %70 to i32
  %72 = load i32, i32* %43, align 4
  %73 = add nsw i32 %72, -128
  %74 = icmp sgt i32 %73, %71
  br i1 %74, label %80, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38
  %77 = load i32, i32* %76, align 16
  %78 = add nsw i32 %77, 128
  %79 = icmp slt i32 %78, %71
  br i1 %79, label %80, label %83

80:                                               ; preds = %75, %69
  %81 = phi i32 [ %73, %69 ], [ %78, %75 ]
  %82 = trunc i32 %81 to i16
  store i16 %82, i16* %19, align 4
  br label %83

83:                                               ; preds = %80, %75
  %84 = getelementptr inbounds [10 x %union.int_mv], [10 x %union.int_mv]* %2, i64 %16, i64 6
  %85 = bitcast %union.int_mv* %13 to %struct.MV*
  %86 = bitcast %union.int_mv* %13 to i16*
  %87 = load i16, i16* %86, align 4
  %88 = sub i16 0, %87
  %89 = bitcast %union.int_mv* %84 to %struct.MV*
  %90 = bitcast %union.int_mv* %84 to i16*
  store i16 %88, i16* %90, align 4
  %91 = getelementptr inbounds %struct.MV, %struct.MV* %85, i64 0, i32 1
  %92 = load i16, i16* %91, align 2
  %93 = sub i16 0, %92
  %94 = getelementptr inbounds %struct.MV, %struct.MV* %89, i64 0, i32 1
  store i16 %93, i16* %94, align 2
  %95 = sext i16 %93 to i32
  %96 = load i32, i32* %29, align 4
  %97 = add nsw i32 %96, -128
  %98 = icmp sgt i32 %97, %95
  br i1 %98, label %104, label %99

99:                                               ; preds = %83
  %100 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 36
  %101 = load i32, i32* %100, align 8
  %102 = add nsw i32 %101, 128
  %103 = icmp slt i32 %102, %95
  br i1 %103, label %104, label %107

104:                                              ; preds = %99, %83
  %105 = phi i32 [ %97, %83 ], [ %102, %99 ]
  %106 = trunc i32 %105 to i16
  store i16 %106, i16* %94, align 2
  br label %107

107:                                              ; preds = %104, %99
  %108 = sext i16 %88 to i32
  %109 = load i32, i32* %43, align 4
  %110 = add nsw i32 %109, -128
  %111 = icmp sgt i32 %110, %108
  br i1 %111, label %117, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38
  %114 = load i32, i32* %113, align 16
  %115 = add nsw i32 %114, 128
  %116 = icmp slt i32 %115, %108
  br i1 %116, label %117, label %120

117:                                              ; preds = %112, %107
  %118 = phi i32 [ %110, %107 ], [ %115, %112 ]
  %119 = trunc i32 %118 to i16
  store i16 %119, i16* %90, align 4
  br label %120

120:                                              ; preds = %117, %112
  %121 = load i16, i16* %91, align 2
  %122 = sext i16 %121 to i32
  %123 = load i32, i32* %29, align 4
  %124 = add nsw i32 %123, -128
  %125 = icmp sgt i32 %124, %122
  br i1 %125, label %131, label %126

126:                                              ; preds = %120
  %127 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 36
  %128 = load i32, i32* %127, align 8
  %129 = add nsw i32 %128, 128
  %130 = icmp slt i32 %129, %122
  br i1 %130, label %131, label %134

131:                                              ; preds = %126, %120
  %132 = phi i32 [ %124, %120 ], [ %129, %126 ]
  %133 = trunc i32 %132 to i16
  store i16 %133, i16* %91, align 2
  br label %134

134:                                              ; preds = %131, %126
  %135 = load i16, i16* %86, align 4
  %136 = sext i16 %135 to i32
  %137 = load i32, i32* %43, align 4
  %138 = add nsw i32 %137, -128
  %139 = icmp sgt i32 %138, %136
  br i1 %139, label %145, label %140

140:                                              ; preds = %134
  %141 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38
  %142 = load i32, i32* %141, align 16
  %143 = add nsw i32 %142, 128
  %144 = icmp slt i32 %143, %136
  br i1 %144, label %145, label %148

145:                                              ; preds = %140, %134
  %146 = phi i32 [ %138, %134 ], [ %143, %140 ]
  %147 = trunc i32 %146 to i16
  store i16 %147, i16* %86, align 4
  br label %148

148:                                              ; preds = %145, %140
  %149 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 %16
  %150 = bitcast %union.int_mv* %14 to %struct.MV*
  %151 = bitcast %union.int_mv* %14 to i16*
  %152 = load i16, i16* %151, align 4
  %153 = sub i16 0, %152
  %154 = bitcast %union.int_mv* %149 to %struct.MV*
  %155 = bitcast %union.int_mv* %149 to i16*
  store i16 %153, i16* %155, align 4
  %156 = getelementptr inbounds %struct.MV, %struct.MV* %150, i64 0, i32 1
  %157 = load i16, i16* %156, align 2
  %158 = sub i16 0, %157
  %159 = getelementptr inbounds %struct.MV, %struct.MV* %154, i64 0, i32 1
  store i16 %158, i16* %159, align 2
  %160 = sext i16 %158 to i32
  %161 = load i32, i32* %29, align 4
  %162 = add nsw i32 %161, -128
  %163 = icmp sgt i32 %162, %160
  br i1 %163, label %169, label %164

164:                                              ; preds = %148
  %165 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 36
  %166 = load i32, i32* %165, align 8
  %167 = add nsw i32 %166, 128
  %168 = icmp slt i32 %167, %160
  br i1 %168, label %169, label %172

169:                                              ; preds = %164, %148
  %170 = phi i32 [ %162, %148 ], [ %167, %164 ]
  %171 = trunc i32 %170 to i16
  store i16 %171, i16* %159, align 2
  br label %172

172:                                              ; preds = %169, %164
  %173 = sext i16 %153 to i32
  %174 = load i32, i32* %43, align 4
  %175 = add nsw i32 %174, -128
  %176 = icmp sgt i32 %175, %173
  br i1 %176, label %182, label %177

177:                                              ; preds = %172
  %178 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38
  %179 = load i32, i32* %178, align 16
  %180 = add nsw i32 %179, 128
  %181 = icmp slt i32 %180, %173
  br i1 %181, label %182, label %185

182:                                              ; preds = %177, %172
  %183 = phi i32 [ %175, %172 ], [ %180, %177 ]
  %184 = trunc i32 %183 to i16
  store i16 %184, i16* %155, align 4
  br label %185

185:                                              ; preds = %182, %177
  %186 = load i16, i16* %156, align 2
  %187 = sext i16 %186 to i32
  %188 = load i32, i32* %29, align 4
  %189 = add nsw i32 %188, -128
  %190 = icmp sgt i32 %189, %187
  br i1 %190, label %196, label %191

191:                                              ; preds = %185
  %192 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 36
  %193 = load i32, i32* %192, align 8
  %194 = add nsw i32 %193, 128
  %195 = icmp slt i32 %194, %187
  br i1 %195, label %196, label %199

196:                                              ; preds = %191, %185
  %197 = phi i32 [ %189, %185 ], [ %194, %191 ]
  %198 = trunc i32 %197 to i16
  store i16 %198, i16* %156, align 2
  br label %199

199:                                              ; preds = %196, %191
  %200 = load i16, i16* %151, align 4
  %201 = sext i16 %200 to i32
  %202 = load i32, i32* %43, align 4
  %203 = add nsw i32 %202, -128
  %204 = icmp sgt i32 %203, %201
  br i1 %204, label %210, label %205

205:                                              ; preds = %199
  %206 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38
  %207 = load i32, i32* %206, align 16
  %208 = add nsw i32 %207, 128
  %209 = icmp slt i32 %208, %201
  br i1 %209, label %210, label %213

210:                                              ; preds = %205, %199
  %211 = phi i32 [ %203, %199 ], [ %208, %205 ]
  %212 = trunc i32 %211 to i16
  store i16 %212, i16* %151, align 4
  br label %213

213:                                              ; preds = %210, %205
  ret i32 %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @vp8_mv_ref_probs(i8* returned, i32* nocapture readonly) local_unnamed_addr #2 {
  %3 = load i32, i32* %1, align 4
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds [6 x [4 x i32]], [6 x [4 x i32]]* @vp8_mode_contexts, i64 0, i64 %4, i64 0
  %6 = load i32, i32* %5, align 16
  %7 = trunc i32 %6 to i8
  store i8 %7, i8* %0, align 1
  %8 = getelementptr inbounds i32, i32* %1, i64 1
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [6 x [4 x i32]], [6 x [4 x i32]]* @vp8_mode_contexts, i64 0, i64 %10, i64 1
  %12 = load i32, i32* %11, align 4
  %13 = trunc i32 %12 to i8
  %14 = getelementptr inbounds i8, i8* %0, i64 1
  store i8 %13, i8* %14, align 1
  %15 = getelementptr inbounds i32, i32* %1, i64 2
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [6 x [4 x i32]], [6 x [4 x i32]]* @vp8_mode_contexts, i64 0, i64 %17, i64 2
  %19 = load i32, i32* %18, align 8
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds i8, i8* %0, i64 2
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds i32, i32* %1, i64 3
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [6 x [4 x i32]], [6 x [4 x i32]]* @vp8_mode_contexts, i64 0, i64 %24, i64 3
  %26 = load i32, i32* %25, align 4
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds i8, i8* %0, i64 3
  store i8 %27, i8* %28, align 1
  ret i8* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
