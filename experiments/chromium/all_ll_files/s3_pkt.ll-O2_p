; ModuleID = '../../third_party/boringssl/src/ssl/s3_pkt.cc'
source_filename = "../../third_party/boringssl/src/ssl/s3_pkt.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ssl_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"class.std::__1::unique_ptr.2", i16, i16, [4 x i8], %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, %"struct.bssl::SSL3_STATE"*, %"struct.bssl::DTLS1_STATE"*, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], %"class.std::__1::unique_ptr.58", void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.106", %struct.crypto_ex_data_st, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.29", %struct.ssl_quic_method_st*, i32, i8, [3 x i8] }>
%"struct.bssl::SSL_PROTOCOL_METHOD" = type { i8, i1 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, %"class.bssl::Span"*, i64*, i8*, i8*, i64)*, {}*, i32 (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)* }
%"struct.bssl::SSLMessage" = type { i8, i8, %struct.cbs_st, %struct.cbs_st }
%struct.cbs_st = type { i8*, i64 }
%"class.bssl::Span" = type { i8*, i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%"class.bssl::Array" = type { i8*, i64 }
%"class.bssl::SSLAEADContext" = type <{ %struct.ssl_cipher_st*, %"class.bssl::internal::StackAllocated", [12 x i8], i8, i8, i16, i8, i8, [6 x i8] }>
%struct.ssl_cipher_st = type { i8*, i8*, i32, i32, i32, i32, i32, i32 }
%"class.bssl::internal::StackAllocated" = type { %struct.evp_aead_ctx_st }
%struct.evp_aead_ctx_st = type { %struct.evp_aead_st*, %union.evp_aead_ctx_st_state, i8 }
%struct.evp_aead_st = type opaque
%union.evp_aead_ctx_st_state = type { i64, [576 x i8] }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.bssl::SSL_CONFIG"* }
%"struct.bssl::SSL_CONFIG" = type <{ %struct.ssl_st*, i16, i16, [4 x i8], %struct.X509_VERIFY_PARAM_st*, %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.15", i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.ssl_st*, i8*)*, %"class.std::__1::unique_ptr.29", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, %"class.bssl::Array.56", %"class.std::__1::unique_ptr.18", %"class.bssl::Array", %"class.bssl::GrowableArray.82", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.56", %"class.std::__1::unique_ptr.84", i8, i16, [5 x i8] }>
%struct.X509_VERIFY_PARAM_st = type { i8*, i64, i64, i64, i32, i32, i32, %struct.stack_st_ASN1_OBJECT*, %struct.X509_VERIFY_PARAM_ID_st* }
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.X509_VERIFY_PARAM_ID_st = type opaque
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.bssl::SSLCipherPreferenceList"* }
%"struct.bssl::SSLCipherPreferenceList" = type { %"class.std::__1::unique_ptr.8", i8* }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %struct.stack_st_SSL_CIPHER* }
%struct.stack_st_SSL_CIPHER = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.bssl::CERT"* }
%"struct.bssl::CERT" = type { %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.23", %struct.stack_st_X509*, %struct.x509_st*, %struct.x509_st*, %struct.ssl_private_key_method_st*, %"struct.bssl::SSL_X509_METHOD"*, %"class.bssl::Array.56", i32 (%struct.ssl_st*, i8*)*, i8*, %struct.x509_store_st*, %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34", i8, [32 x i8], %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.18", %struct.ssl_private_key_method_st* }
%struct.stack_st_X509 = type opaque
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon.28 }
%union.anon.28 = type { i8* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type opaque
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%"struct.bssl::SSL_X509_METHOD" = type { i1 (%struct.stack_st_CRYPTO_BUFFER*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*, %"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, i1 (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %struct.ssl_session_st*)*, void (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %"struct.bssl::SSL_HANDSHAKE"*, i8*)*, void (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)* }
%struct.stack_st_CRYPTO_BUFFER = type opaque
%struct.ssl_session_st = type { i32, i16, i16, i16, i32, [48 x i8], i32, [32 x i8], i8, [32 x i8], %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.23", %"struct.bssl::SSL_X509_METHOD"*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509*, i64, i32, i32, i64, %struct.ssl_cipher_st*, %struct.crypto_ex_data_st, %struct.ssl_session_st*, %struct.ssl_session_st*, %"class.bssl::Array", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34", [32 x i8], [64 x i8], i8, i32, i32, i32, %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", i8, %"class.bssl::Array" }
%"struct.bssl::SSL_HANDSHAKE" = type <{ %struct.ssl_st*, %"struct.bssl::SSL_CONFIG"*, i32, i32, i32, i16, i16, i64, [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], %union.anon.39, i16, [2 x i8], %"class.std::__1::unique_ptr.40", [2 x %"class.std::__1::unique_ptr.45"], %"class.bssl::SSLTranscript", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.56", %"class.bssl::Array.56", %"class.bssl::Array.56", %"class.bssl::Array", i16, [6 x i8], %"class.bssl::internal::StackAllocated.57", %"class.bssl::Array", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, %"class.bssl::Array", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.63", %struct.ssl_cipher_st*, %"class.bssl::Array", %"class.std::__1::unique_ptr.70", i32, i16, i16, i16, i8, [32 x i8], i8, [6 x i8], [6 x i8] }>
%union.anon.39 = type { i32 }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %struct.err_save_state_st* }
%struct.err_save_state_st = type opaque
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.bssl::SSLKeyShare"* }
%"class.bssl::SSLKeyShare" = type { i32 (...)** }
%"class.bssl::SSLTranscript" = type { %"class.std::__1::unique_ptr.50", %"class.bssl::internal::StackAllocated.55" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %struct.buf_mem_st* }
%"class.bssl::internal::StackAllocated.55" = type { %struct.env_md_ctx_st }
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.env_md_st = type opaque
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%"class.bssl::internal::StackAllocated.57" = type { %struct.evp_hpke_ctx_st }
%struct.evp_hpke_ctx_st = type { %struct.evp_hpke_aead_st*, %struct.evp_hpke_kdf_st*, %struct.evp_aead_ctx_st, [24 x i8], [64 x i8], i64, i32 }
%struct.evp_hpke_aead_st = type opaque
%struct.evp_hpke_kdf_st = type opaque
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %struct.ssl_ech_server_config_list_st* }
%struct.ssl_ech_server_config_list_st = type <{ %"class.bssl::GrowableArray", i32, [4 x i8] }>
%"class.bssl::GrowableArray" = type { i64, %"class.bssl::Array.66" }
%"class.bssl::Array.66" = type { %"class.std::__1::unique_ptr.67"*, i64 }
%"class.std::__1::unique_ptr.67" = type opaque
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.bssl::SSL_HANDSHAKE_HINTS"* }
%"struct.bssl::SSL_HANDSHAKE_HINTS" = type <{ %"class.bssl::Array", i16, [6 x i8], %"class.bssl::Array", %"class.bssl::Array", i16, [6 x i8], %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", i8, [7 x i8] }>
%struct.ssl_ctx_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_X509_METHOD"*, %union.crypto_mutex_st, i16, i16, [4 x i8], %struct.ssl_quic_method_st*, %"class.std::__1::unique_ptr.5", %struct.x509_store_st*, %struct.lhash_st_SSL_SESSION*, i64, %struct.ssl_session_st*, %struct.ssl_session_st*, i32, i32, i32, i32, i32 (%struct.ssl_st*, %struct.ssl_session_st*)*, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)*, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)*, i32, [4 x i8], i32 (%struct.x509_store_ctx_st*, i8*)*, i8*, i32 (%struct.ssl_st*, i8*)*, i32 (i8*, i32, i32, i8*)*, i8*, i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)*, void (%struct.ssl_st*, %struct.evp_pkey_st**)*, %struct.crypto_ex_data_st, void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.15", void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], i32 (i32, %struct.x509_store_ctx_st*)*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.ssl_early_callback_ctx*)*, i32 (%struct.ssl_early_callback_ctx*)*, i8, i8, i16, [4 x i8], i32 (%struct.ssl_st*, i32*, i8*)*, i8*, %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)*, %"class.std::__1::unique_ptr.29", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*, i8**, i32*, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, %"class.bssl::Array", %"class.std::__1::unique_ptr.84", %"class.bssl::GrowableArray.114", %"class.bssl::Array.56", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.63", void (%struct.ssl_st*, i8*)*, void (%struct.ssl_st*, %struct.timeval*)*, %struct.crypto_buffer_pool_st*, %struct.ssl_ticket_aead_method_st*, i32 (%struct.ssl_st*, i8*)*, i8*, %"class.bssl::Array.56", i16, [6 x i8] }>
%struct.lhash_st_SSL_SESSION = type opaque
%struct.x509_store_ctx_st = type { %struct.x509_store_st*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509_CRL*, %struct.X509_VERIFY_PARAM_st*, i8*, {}*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, {}*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, {}*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, {}*, i32, i32, %struct.stack_st_X509*, %struct.X509_POLICY_TREE_st*, i32, i32, i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_crl_st*, i32, i32, %struct.x509_store_ctx_st*, %struct.crypto_ex_data_st }
%struct.stack_st_X509_CRL = type opaque
%struct.X509_POLICY_TREE_st = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type opaque
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%struct.ssl_early_callback_ctx = type { %struct.ssl_st*, i8*, i64, i16, i8*, i64, i8*, i64, i8*, i64, i8*, i64, i8*, i64 }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.bssl::TicketKey"* }
%"struct.bssl::TicketKey" = type { [16 x i8], [16 x i8], [16 x i8], i64 }
%struct.evp_cipher_ctx_st = type { %struct.evp_cipher_st*, i8*, i8*, i32, i32, i32, [16 x i8], [16 x i8], [32 x i8], i32, i32, i32, [32 x i8] }
%struct.evp_cipher_st = type { i32, i32, i32, i32, i32, i32, i8*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i32)*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i64)*, void (%struct.evp_cipher_ctx_st*)*, i32 (%struct.evp_cipher_ctx_st*, i32, i32, i8*)* }
%struct.hmac_ctx_st = type { %struct.env_md_st*, %struct.env_md_ctx_st, %struct.env_md_ctx_st, %struct.env_md_ctx_st }
%"class.bssl::GrowableArray.114" = type { i64, %"class.bssl::Array.115" }
%"class.bssl::Array.115" = type { %"struct.bssl::CertCompressionAlg"*, i64 }
%"struct.bssl::CertCompressionAlg" = type <{ i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)*, i32 (%struct.ssl_st*, %struct.crypto_buffer_st**, i64, i8*, i64)*, i16, [6 x i8] }>
%struct.timeval = type { i64, i64 }
%struct.crypto_buffer_pool_st = type opaque
%struct.ssl_ticket_aead_method_st = type { i64 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)* }
%struct.x509_store_st = type { i32, %struct.stack_st_X509_OBJECT*, %union.crypto_mutex_st, %struct.stack_st_X509*, %struct.stack_st_X509_LOOKUP*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.x509_store_ctx_st*)*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 }
%struct.stack_st_X509_OBJECT = type opaque
%struct.stack_st_X509_LOOKUP = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %struct.crypto_buffer_st* }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.bssl::DC"* }
%"struct.bssl::DC" = type { %"class.std::__1::unique_ptr.34", i16, %"class.std::__1::unique_ptr.18" }
%struct.ssl_private_key_method_st = type { i32 (%struct.ssl_st*, i8*, i64*, i64, i16, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64)* }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %struct.stack_st_CRYPTO_BUFFER* }
%struct.stack_st_X509_NAME = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %struct.evp_pkey_st* }
%"class.bssl::GrowableArray.82" = type { i64, %"class.bssl::Array.83" }
%"class.bssl::Array.83" = type { %"struct.bssl::ALPSConfig"*, i64 }
%"struct.bssl::ALPSConfig" = type { %"class.bssl::Array", %"class.bssl::Array" }
%"class.bssl::Array.56" = type { i16*, i64 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %struct.stack_st_SRTP_PROTECTION_PROFILE* }
%struct.stack_st_SRTP_PROTECTION_PROFILE = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %struct.bio_st* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%"struct.bssl::SSL3_STATE" = type <{ [8 x i8], [8 x i8], [32 x i8], [32 x i8], %"class.bssl::SSLBuffer", %"class.bssl::SSLBuffer", %"class.bssl::Span", i32, i32, i32, i32, i8*, i32, i32, %"class.std::__1::unique_ptr.40", i32, i32, i32, i32, i16, i8, i8, i8, i16, i8, %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.96", [48 x i8], [48 x i8], [48 x i8], i8, i8, i8, [12 x i8], i8, i8, [12 x i8], [2 x i8], i8, %"class.std::__1::unique_ptr.58", %"class.bssl::Array", %"class.bssl::Array", %"class.std::__1::unique_ptr.29", [64 x i8], %"class.bssl::Array", %struct.srtp_protection_profile_st* }>
%"class.bssl::SSLBuffer" = type <{ i8*, i16, i16, i16, [5 x i8], i8, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.bssl::SSLAEADContext"* }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.bssl::SSL_HANDSHAKE"* }
%struct.srtp_protection_profile_st = type { i8*, i64 }
%"struct.bssl::DTLS1_STATE" = type <{ i8, [256 x i8], [7 x i8], i64, i16, i16, [4 x i8], %"struct.bssl::DTLS1_BITMAP", i16, i16, [8 x i8], [4 x i8], %"class.std::__1::unique_ptr", [7 x %"class.std::__1::unique_ptr.101"], [7 x %"struct.bssl::DTLS_OUTGOING_MESSAGE"], i8, i8, [2 x i8], i32, i32, i32, %"struct.bssl::OPENSSL_timeval", i32, [4 x i8] }>
%"struct.bssl::DTLS1_BITMAP" = type { i64, i64 }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.bssl::hm_fragment"* }
%"struct.bssl::hm_fragment" = type { i8, i16, i32, i8*, i8* }
%"struct.bssl::DTLS_OUTGOING_MESSAGE" = type <{ i8*, i32, i16, i8, i8 }>
%"struct.bssl::OPENSSL_timeval" = type { i64, i32 }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %struct.ssl_session_st* }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %struct.ssl_ctx_st* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i8* }
%struct.ssl_quic_method_st = type { i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, i8*, i64)*, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i32, i8)* }

@.str = private unnamed_addr constant [46 x i8] c"../../third_party/boringssl/src/ssl/s3_pkt.cc\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl18tls_write_app_dataEP6ssl_stPbPKhi(%struct.ssl_st*, i8* nocapture, i8*, i32) local_unnamed_addr #0 {
  store i8 0, i8* %1, align 1
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %6 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %7 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %6, i64 0, i32 13
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %4
  tail call void @ERR_put_error(i32 16, i32 0, i32 194, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 139) #3
  br label %102

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %6, i64 0, i32 7
  %13 = load i32, i32* %12, align 8
  store i32 0, i32* %12, align 8
  %14 = icmp slt i32 %3, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = sext i32 %3 to i64
  %17 = zext i32 %13 to i64
  %18 = icmp ult i64 %16, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %15, %11
  tail call void @ERR_put_error(i32 16, i32 0, i32 111, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 156) #3
  br label %102

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %22 = load i8, i8* %21, align 4
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %36

25:                                               ; preds = %20
  %26 = tail call i32 @SSL_in_early_data(%struct.ssl_st* %0) #3
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %25
  %29 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %30 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %29, i64 0, i32 34, i32 0, i32 0, i32 0
  %31 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %30, align 8
  %32 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %31, i64 0, i32 46
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 65536
  %35 = icmp ne i32 %34, 0
  br label %36

36:                                               ; preds = %25, %20, %28
  %37 = phi i1 [ false, %25 ], [ false, %20 ], [ %35, %28 ]
  %38 = sub i32 %3, %13
  %39 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 3
  %40 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 20
  br label %41

41:                                               ; preds = %99, %36
  %42 = phi i32 [ %13, %36 ], [ %101, %99 ]
  %43 = phi i32 [ %38, %36 ], [ %100, %99 ]
  %44 = load i16, i16* %39, align 2
  %45 = zext i16 %44 to i64
  br i1 %37, label %46, label %68

46:                                               ; preds = %41
  %47 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %48 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %47, i64 0, i32 34, i32 0, i32 0, i32 0
  %49 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %48, align 8
  %50 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %49, i64 0, i32 49
  %51 = load i16, i16* %50, align 8
  %52 = zext i16 %51 to i32
  %53 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %49, i64 0, i32 41, i32 0, i32 0, i32 0
  %54 = load %struct.ssl_session_st*, %struct.ssl_session_st** %53, align 8
  %55 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %54, i64 0, i32 32
  %56 = load i32, i32* %55, align 4
  %57 = icmp ugt i32 %56, %52
  br i1 %57, label %58, label %63

58:                                               ; preds = %46
  %59 = sub i32 %56, %52
  %60 = zext i32 %59 to i64
  %61 = icmp ult i64 %60, %45
  %62 = select i1 %61, i64 %60, i64 %45
  br label %68

63:                                               ; preds = %46
  %64 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %47, i64 0, i32 7
  store i32 %42, i32* %64, align 8
  %65 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %49, i64 0, i32 46
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, -65537
  store i32 %67, i32* %65, align 8
  store i8 1, i8* %1, align 1
  br label %102

68:                                               ; preds = %58, %41
  %69 = phi i64 [ %45, %41 ], [ %62, %58 ]
  %70 = zext i32 %43 to i64
  %71 = icmp ugt i64 %69, %70
  %72 = select i1 %71, i64 %70, i64 %69
  %73 = zext i32 %42 to i64
  %74 = getelementptr inbounds i8, i8* %2, i64 %73
  %75 = trunc i64 %72 to i32
  %76 = tail call fastcc i32 @_ZN4bsslL12do_tls_writeEP6ssl_stiPKhj(%struct.ssl_st* %0, i32 23, i8* %74, i32 %75)
  %77 = icmp slt i32 %76, 1
  br i1 %77, label %78, label %81

78:                                               ; preds = %68
  %79 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %80 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %79, i64 0, i32 7
  store i32 %42, i32* %80, align 8
  br label %102

81:                                               ; preds = %68
  br i1 %37, label %82, label %90

82:                                               ; preds = %81
  %83 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %84 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %83, i64 0, i32 34, i32 0, i32 0, i32 0
  %85 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %84, align 8
  %86 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %85, i64 0, i32 49
  %87 = load i16, i16* %86, align 8
  %88 = trunc i32 %76 to i16
  %89 = add i16 %87, %88
  store i16 %89, i16* %86, align 8
  br label %90

90:                                               ; preds = %82, %81
  %91 = icmp eq i32 %43, %76
  br i1 %91, label %96, label %92

92:                                               ; preds = %90
  %93 = load i32, i32* %40, align 4
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %99, label %96

96:                                               ; preds = %92, %90
  %97 = phi i32 [ %76, %92 ], [ %43, %90 ]
  %98 = add i32 %97, %42
  br label %102

99:                                               ; preds = %92
  %100 = sub i32 %43, %76
  %101 = add i32 %76, %42
  br label %41

102:                                              ; preds = %96, %78, %63, %19, %10
  %103 = phi i32 [ -1, %10 ], [ -1, %19 ], [ %98, %96 ], [ %76, %78 ], [ -1, %63 ]
  ret i32 %103
}

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @SSL_in_early_data(%struct.ssl_st*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN4bsslL12do_tls_writeEP6ssl_stiPKhj(%struct.ssl_st*, i32, i8*, i32) unnamed_addr #0 {
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %7 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %8 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %7, i64 0, i32 23
  %9 = load i16, i16* %8, align 1
  %10 = and i16 %9, 2048
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %41, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %7, i64 0, i32 8
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, %3
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 20
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %7, i64 0, i32 11
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, %2
  br i1 %24, label %25, label %29

25:                                               ; preds = %21, %16
  %26 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %7, i64 0, i32 9
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, %1
  br i1 %28, label %30, label %29

29:                                               ; preds = %25, %21, %12
  tail call void @ERR_put_error(i32 16, i32 0, i32 118, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 205) #3
  br label %185

30:                                               ; preds = %25
  %31 = tail call i32 @_ZN4bssl22ssl_write_buffer_flushEP6ssl_st(%struct.ssl_st* %0) #3
  %32 = icmp slt i32 %31, 1
  br i1 %32, label %185, label %33

33:                                               ; preds = %30
  %34 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %35 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %34, i64 0, i32 23
  %36 = load i16, i16* %35, align 1
  %37 = and i16 %36, -2049
  store i16 %37, i16* %35, align 1
  %38 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %39 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %38, i64 0, i32 10
  %40 = load i32, i32* %39, align 4
  br label %185

41:                                               ; preds = %4
  %42 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %7, i64 0, i32 5
  %43 = icmp ugt i32 %3, 16384
  br i1 %43, label %48, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %7, i64 0, i32 5, i32 2
  %46 = load i16, i16* %45, align 2
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %44, %41
  tail call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 226) #3
  br label %185

49:                                               ; preds = %44
  %50 = tail call zeroext i1 @_ZN4bssl25tls_flush_pending_hs_dataEP6ssl_st(%struct.ssl_st* %0) #3
  br i1 %50, label %51, label %185

51:                                               ; preds = %49
  %52 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %53 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %52, i64 0, i32 27, i32 0, i32 0, i32 0
  %54 = load %struct.buf_mem_st*, %struct.buf_mem_st** %53, align 8
  %55 = icmp eq %struct.buf_mem_st* %54, null
  br i1 %55, label %63, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %54, i64 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %52, i64 0, i32 28
  %60 = load i32, i32* %59, align 8
  %61 = zext i32 %60 to i64
  %62 = sub i64 %58, %61
  br label %63

63:                                               ; preds = %51, %56
  %64 = phi i64 [ %62, %56 ], [ 0, %51 ]
  %65 = icmp ne i32 %3, 0
  br i1 %65, label %66, label %75

66:                                               ; preds = %63
  %67 = zext i32 %3 to i64
  %68 = tail call i64 @SSL_max_seal_overhead(%struct.ssl_st* %0) #3
  %69 = add i64 %68, %67
  %70 = icmp ult i64 %69, %67
  br i1 %70, label %74, label %71

71:                                               ; preds = %66
  %72 = add i64 %69, %64
  %73 = icmp ult i64 %72, %64
  br i1 %73, label %74, label %75

74:                                               ; preds = %66, %71
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 244) #3
  br label %185

75:                                               ; preds = %71, %63
  %76 = phi i64 [ %64, %63 ], [ %72, %71 ]
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %185, label %78

78:                                               ; preds = %75
  %79 = tail call i64 @_ZN4bssl25ssl_seal_align_prefix_lenEPK6ssl_st(%struct.ssl_st* %0) #3
  %80 = add i64 %79, %64
  %81 = tail call zeroext i1 @_ZN4bssl9SSLBuffer9EnsureCapEmm(%"class.bssl::SSLBuffer"* %42, i64 %80, i64 %76) #3
  br i1 %81, label %82, label %185

82:                                               ; preds = %78
  %83 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %84 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %83, i64 0, i32 27, i32 0, i32 0, i32 0
  %85 = load %struct.buf_mem_st*, %struct.buf_mem_st** %84, align 8
  %86 = icmp eq %struct.buf_mem_st* %85, null
  br i1 %86, label %117, label %87

87:                                               ; preds = %82
  %88 = icmp eq i64 %64, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %83, i64 0, i32 27, i32 0, i32 0, i32 0
  store %struct.buf_mem_st* null, %struct.buf_mem_st** %90, align 8
  br label %112

91:                                               ; preds = %87
  %92 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %85, i64 0, i32 1
  %93 = load i8*, i8** %92, align 8
  %94 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %83, i64 0, i32 28
  %95 = load i32, i32* %94, align 8
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %93, i64 %96
  %98 = getelementptr inbounds %"class.bssl::SSLBuffer", %"class.bssl::SSLBuffer"* %42, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %7, i64 0, i32 5, i32 1
  %101 = load i16, i16* %100, align 8
  %102 = zext i16 %101 to i64
  %103 = getelementptr inbounds i8, i8* %99, i64 %102
  %104 = load i16, i16* %45, align 2
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds i8, i8* %103, i64 %105
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %106, i8* align 1 %97, i64 %64, i1 false) #3
  %107 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %108 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %107, i64 0, i32 27, i32 0, i32 0, i32 0
  %109 = load %struct.buf_mem_st*, %struct.buf_mem_st** %108, align 8
  %110 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %107, i64 0, i32 27, i32 0, i32 0, i32 0
  store %struct.buf_mem_st* null, %struct.buf_mem_st** %110, align 8
  %111 = icmp eq %struct.buf_mem_st* %109, null
  br i1 %111, label %114, label %112

112:                                              ; preds = %89, %91
  %113 = phi %struct.buf_mem_st* [ %85, %89 ], [ %109, %91 ]
  tail call void @BUF_MEM_free(%struct.buf_mem_st* nonnull %113) #3
  br label %114

114:                                              ; preds = %91, %112
  %115 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %116 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %115, i64 0, i32 28
  store i32 0, i32* %116, align 8
  tail call void @_ZN4bssl9SSLBuffer8DidWriteEm(%"class.bssl::SSLBuffer"* %42, i64 %64) #3
  br label %117

117:                                              ; preds = %82, %114
  br i1 %65, label %118, label %139

118:                                              ; preds = %117
  %119 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #3
  store i64 -6148914691236517206, i64* %5, align 8
  %120 = getelementptr inbounds %"class.bssl::SSLBuffer", %"class.bssl::SSLBuffer"* %42, i64 0, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %7, i64 0, i32 5, i32 1
  %123 = load i16, i16* %122, align 8
  %124 = zext i16 %123 to i64
  %125 = getelementptr inbounds i8, i8* %121, i64 %124
  %126 = load i16, i16* %45, align 2
  %127 = zext i16 %126 to i64
  %128 = getelementptr inbounds i8, i8* %125, i64 %127
  %129 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %7, i64 0, i32 5, i32 3
  %130 = load i16, i16* %129, align 4
  %131 = zext i16 %130 to i64
  %132 = sub nsw i64 %131, %127
  %133 = trunc i32 %1 to i8
  %134 = zext i32 %3 to i64
  %135 = call zeroext i1 @_ZN4bssl15tls_seal_recordEP6ssl_stPhPmmhPKhm(%struct.ssl_st* %0, i8* %128, i64* nonnull %5, i64 %132, i8 zeroext %133, i8* %2, i64 %134) #3
  br i1 %135, label %136, label %138

136:                                              ; preds = %118
  %137 = load i64, i64* %5, align 8
  call void @_ZN4bssl9SSLBuffer8DidWriteEm(%"class.bssl::SSLBuffer"* %42, i64 %137) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #3
  br label %139

138:                                              ; preds = %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #3
  br label %185

139:                                              ; preds = %136, %117
  %140 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %141 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %140, i64 0, i32 23
  %142 = load i16, i16* %141, align 1
  %143 = and i16 %142, -1025
  store i16 %143, i16* %141, align 1
  %144 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %145 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %144, i64 0, i32 8
  store i32 %3, i32* %145, align 4
  %146 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %147 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %146, i64 0, i32 11
  store i8* %2, i8** %147, align 8
  %148 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %149 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %148, i64 0, i32 9
  store i32 %1, i32* %149, align 8
  %150 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %151 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %150, i64 0, i32 10
  store i32 %3, i32* %151, align 4
  %152 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %153 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %152, i64 0, i32 23
  %154 = load i16, i16* %153, align 1
  %155 = or i16 %154, 2048
  store i16 %155, i16* %153, align 1
  %156 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %157 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %156, i64 0, i32 8
  %158 = load i32, i32* %157, align 4
  %159 = icmp sgt i32 %158, %3
  br i1 %159, label %173, label %160

160:                                              ; preds = %139
  %161 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 20
  %162 = load i32, i32* %161, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %169

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %156, i64 0, i32 11
  %167 = load i8*, i8** %166, align 8
  %168 = icmp eq i8* %167, %2
  br i1 %168, label %169, label %173

169:                                              ; preds = %165, %160
  %170 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %156, i64 0, i32 9
  %171 = load i32, i32* %170, align 8
  %172 = icmp eq i32 %171, %1
  br i1 %172, label %174, label %173

173:                                              ; preds = %169, %165, %139
  call void @ERR_put_error(i32 16, i32 0, i32 118, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 205) #3
  br label %185

174:                                              ; preds = %169
  %175 = call i32 @_ZN4bssl22ssl_write_buffer_flushEP6ssl_st(%struct.ssl_st* %0) #3
  %176 = icmp slt i32 %175, 1
  br i1 %176, label %185, label %177

177:                                              ; preds = %174
  %178 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %179 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %178, i64 0, i32 23
  %180 = load i16, i16* %179, align 1
  %181 = and i16 %180, -2049
  store i16 %181, i16* %179, align 1
  %182 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %183 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %182, i64 0, i32 10
  %184 = load i32, i32* %183, align 4
  br label %185

185:                                              ; preds = %177, %174, %173, %74, %33, %30, %29, %48, %49, %138, %78, %75
  %186 = phi i32 [ -1, %48 ], [ -1, %49 ], [ -1, %138 ], [ -1, %74 ], [ 0, %75 ], [ -1, %78 ], [ -1, %29 ], [ %40, %33 ], [ %31, %30 ], [ -1, %173 ], [ %184, %177 ], [ %175, %174 ]
  ret i32 %186
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl17tls_open_app_dataEP6ssl_stPNS_4SpanIhEEPmPhS3_(%struct.ssl_st*, %"class.bssl::Span"* nocapture, i64*, i8*, i8*, i64) local_unnamed_addr #0 {
  %7 = alloca i8, align 1
  %8 = alloca %"class.bssl::Span", align 8
  %9 = alloca %"class.bssl::Span", align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #3
  store i8 -86, i8* %7, align 1
  %10 = bitcast %"class.bssl::Span"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #3
  %11 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %8, i64 0, i32 0
  %12 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %8, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #3
  %13 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %9, i64 0, i32 0
  store i8* %4, i8** %13, align 8
  %14 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %9, i64 0, i32 1
  store i64 %5, i64* %14, align 8
  %15 = call i32 @_ZN4bssl15tls_open_recordEP6ssl_stPhPNS_4SpanIhEEPmS2_S4_(%struct.ssl_st* %0, i8* nonnull %7, %"class.bssl::Span"* nonnull %8, i64* %2, i8* %3, %"class.bssl::Span"* nonnull byval(%"class.bssl::Span") align 8 %9) #3
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %62

17:                                               ; preds = %6
  %18 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %19 = load i8, i8* %18, align 4
  %20 = and i8 %19, 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = call i32 @SSL_in_early_data(%struct.ssl_st* %0) #3
  %24 = icmp ne i32 %23, 0
  br label %25

25:                                               ; preds = %17, %22
  %26 = phi i1 [ false, %17 ], [ %24, %22 ]
  %27 = load i8, i8* %7, align 1
  switch i8 %27, label %41 [
    i8 22, label %28
    i8 23, label %42
  ]

28:                                               ; preds = %25
  %29 = load i8, i8* %18, align 4
  %30 = and i8 %29, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %28
  %33 = call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %0) #3
  %34 = icmp ult i16 %33, 772
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @ERR_put_error(i32 16, i32 0, i32 182, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 317) #3
  store i8 100, i8* %3, align 1
  br label %62

36:                                               ; preds = %28, %32
  %37 = load i8*, i8** %11, align 8
  %38 = load i64, i64* %12, align 8
  %39 = call zeroext i1 @_ZN4bssl25tls_append_handshake_dataEP6ssl_stNS_4SpanIKhEE(%struct.ssl_st* %0, i8* %37, i64 %38) #3
  br i1 %39, label %62, label %40

40:                                               ; preds = %36
  store i8 80, i8* %3, align 1
  br label %62

41:                                               ; preds = %25
  call void @ERR_put_error(i32 16, i32 0, i32 225, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 330) #3
  store i8 10, i8* %3, align 1
  br label %62

42:                                               ; preds = %25
  %43 = load i64, i64* %12, align 8
  br i1 %26, label %44, label %58

44:                                               ; preds = %42
  %45 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %46 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %45, align 8
  %47 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %46, i64 0, i32 34, i32 0, i32 0, i32 0
  %48 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %47, align 8
  %49 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %48, i64 0, i32 48
  %50 = load i16, i16* %49, align 2
  %51 = zext i16 %50 to i64
  %52 = sub nsw i64 14336, %51
  %53 = icmp ugt i64 %43, %52
  br i1 %53, label %54, label %55

54:                                               ; preds = %44
  call void @ERR_put_error(i32 16, i32 0, i32 300, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 337) #3
  store i8 10, i8* %3, align 1
  br label %62

55:                                               ; preds = %44
  %56 = trunc i64 %43 to i16
  %57 = add i16 %50, %56
  store i16 %57, i16* %49, align 2
  br label %58

58:                                               ; preds = %42, %55
  %59 = icmp eq i64 %43, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = bitcast %"class.bssl::Span"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* nonnull align 8 %10, i64 16, i1 false)
  br label %62

62:                                               ; preds = %35, %40, %41, %54, %60, %36, %58, %6
  %63 = phi i32 [ %15, %6 ], [ 4, %35 ], [ 4, %40 ], [ 4, %41 ], [ 4, %54 ], [ 0, %60 ], [ 1, %36 ], [ 1, %58 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #3
  ret i32 %63
}

declare i32 @_ZN4bssl15tls_open_recordEP6ssl_stPhPNS_4SpanIhEEPmS2_S4_(%struct.ssl_st*, i8*, %"class.bssl::Span"*, i64*, i8*, %"class.bssl::Span"* byval(%"class.bssl::Span") align 8) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st*) local_unnamed_addr #1

declare zeroext i1 @_ZN4bssl25tls_append_handshake_dataEP6ssl_stNS_4SpanIKhEE(%struct.ssl_st*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl27tls_open_change_cipher_specEP6ssl_stPmPhNS_4SpanIhEE(%struct.ssl_st*, i64*, i8*, i8*, i64) local_unnamed_addr #0 {
  %6 = alloca i8, align 1
  %7 = alloca %"class.bssl::Span", align 8
  %8 = alloca %"class.bssl::Span", align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #3
  store i8 -86, i8* %6, align 1
  %9 = bitcast %"class.bssl::Span"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #3
  %10 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %7, i64 0, i32 0
  %11 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %7, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #3
  %12 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %8, i64 0, i32 0
  store i8* %3, i8** %12, align 8
  %13 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %8, i64 0, i32 1
  store i64 %4, i64* %13, align 8
  %14 = call i32 @_ZN4bssl15tls_open_recordEP6ssl_stPhPNS_4SpanIhEEPmS2_S4_(%struct.ssl_st* %0, i8* nonnull %6, %"class.bssl::Span"* nonnull %7, i64* %1, i8* %2, %"class.bssl::Span"* nonnull byval(%"class.bssl::Span") align 8 %8) #3
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %29

16:                                               ; preds = %5
  %17 = load i8, i8* %6, align 1
  %18 = icmp eq i8 %17, 20
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  call void @ERR_put_error(i32 16, i32 0, i32 225, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 364) #3
  store i8 10, i8* %2, align 1
  br label %29

20:                                               ; preds = %16
  %21 = load i64, i64* %11, align 8
  %22 = icmp eq i64 %21, 1
  br i1 %22, label %23, label %27

23:                                               ; preds = %20
  %24 = load i8*, i8** %10, align 8
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 1
  br i1 %26, label %28, label %27

27:                                               ; preds = %23, %20
  call void @ERR_put_error(i32 16, i32 0, i32 103, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 370) #3
  store i8 47, i8* %2, align 1
  br label %29

28:                                               ; preds = %23
  call void @_ZN4bssl19ssl_do_msg_callbackEPK6ssl_stiiNS_4SpanIKhEE(%struct.ssl_st* %0, i32 0, i32 20, i8* %24, i64 1) #3
  br label %29

29:                                               ; preds = %5, %28, %27, %19
  %30 = phi i32 [ 4, %19 ], [ 4, %27 ], [ 0, %28 ], [ %14, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #3
  ret i32 %30
}

declare void @_ZN4bssl19ssl_do_msg_callbackEPK6ssl_stiiNS_4SpanIKhEE(%struct.ssl_st*, i32, i32, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st*, i32, i32) local_unnamed_addr #0 {
  %4 = tail call %struct.err_save_state_st* @ERR_save_state() #3
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %6 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %7 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %6, i64 0, i32 13
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %3
  tail call void @ERR_put_error(i32 16, i32 0, i32 194, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 399) #3
  br label %36

11:                                               ; preds = %3
  %12 = icmp eq i32 %1, 1
  %13 = icmp eq i32 %2, 0
  %14 = and i1 %12, %13
  %15 = select i1 %14, i32 1, i32 2
  store i32 %15, i32* %7, align 4
  %16 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %17 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %16, i64 0, i32 23
  %18 = load i16, i16* %17, align 1
  %19 = or i16 %18, 8192
  store i16 %19, i16* %17, align 1
  %20 = trunc i32 %1 to i8
  %21 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %22 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %21, i64 0, i32 45, i64 0
  store i8 %20, i8* %22, align 1
  %23 = trunc i32 %2 to i8
  %24 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %25 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %24, i64 0, i32 45, i64 1
  store i8 %23, i8* %25, align 1
  %26 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %27 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %26, i64 0, i32 5, i32 2
  %28 = load i16, i16* %27, align 2
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %11
  %31 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %32 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %31, align 8
  %33 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %32, i64 0, i32 10
  %34 = load i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)** %33, align 8
  %35 = tail call i32 %34(%struct.ssl_st* %0) #3
  br label %36

36:                                               ; preds = %10, %11, %30
  tail call void @ERR_restore_state(%struct.err_save_state_st* %4) #3
  %37 = icmp eq %struct.err_save_state_st* %4, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %36
  tail call void @ERR_SAVE_STATE_free(%struct.err_save_state_st* nonnull %4) #3
  br label %39

39:                                               ; preds = %36, %38
  ret void
}

declare %struct.err_save_state_st* @ERR_save_state() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl19ssl_send_alert_implEP6ssl_stii(%struct.ssl_st*, i32, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %5 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %5, i64 0, i32 13
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %3
  tail call void @ERR_put_error(i32 16, i32 0, i32 194, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 399) #3
  br label %35

10:                                               ; preds = %3
  %11 = icmp eq i32 %1, 1
  %12 = icmp eq i32 %2, 0
  %13 = and i1 %11, %12
  %14 = select i1 %13, i32 1, i32 2
  store i32 %14, i32* %6, align 4
  %15 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %16 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %15, i64 0, i32 23
  %17 = load i16, i16* %16, align 1
  %18 = or i16 %17, 8192
  store i16 %18, i16* %16, align 1
  %19 = trunc i32 %1 to i8
  %20 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %21 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %20, i64 0, i32 45, i64 0
  store i8 %19, i8* %21, align 1
  %22 = trunc i32 %2 to i8
  %23 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %24 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %23, i64 0, i32 45, i64 1
  store i8 %22, i8* %24, align 1
  %25 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %26 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %25, i64 0, i32 5, i32 2
  %27 = load i16, i16* %26, align 2
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %29, label %35

29:                                               ; preds = %10
  %30 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %31 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %30, align 8
  %32 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %31, i64 0, i32 10
  %33 = load i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)** %32, align 8
  %34 = tail call i32 %33(%struct.ssl_st* %0) #3
  br label %35

35:                                               ; preds = %10, %29, %9
  %36 = phi i32 [ -1, %9 ], [ %34, %29 ], [ -1, %10 ]
  ret i32 %36
}

declare void @ERR_restore_state(%struct.err_save_state_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl18tls_dispatch_alertEP6ssl_st(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 24
  %3 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %2, align 8
  %4 = icmp eq %struct.ssl_quic_method_st* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.ssl_quic_method_st, %struct.ssl_quic_method_st* %3, i64 0, i32 4
  %7 = load i32 (%struct.ssl_st*, i32, i8)*, i32 (%struct.ssl_st*, i32, i8)** %6, align 8
  %8 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %9 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %9, i64 0, i32 18
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %9, i64 0, i32 45, i64 1
  %13 = load i8, i8* %12, align 1
  %14 = tail call i32 %7(%struct.ssl_st* %0, i32 %11, i8 zeroext %13) #3
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %5
  tail call void @ERR_put_error(i32 16, i32 0, i32 298, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 428) #3
  br label %50

17:                                               ; preds = %1
  %18 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %19 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %18, align 8
  %20 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %19, i64 0, i32 45, i64 0
  %21 = tail call fastcc i32 @_ZN4bsslL12do_tls_writeEP6ssl_stiPKhj(%struct.ssl_st* %0, i32 21, i8* %20, i32 2)
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %50

23:                                               ; preds = %5, %17
  %24 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %25 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %24, align 8
  %26 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %25, i64 0, i32 23
  %27 = load i16, i16* %26, align 1
  %28 = and i16 %27, -8193
  store i16 %28, i16* %26, align 1
  %29 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %24, align 8
  %30 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %29, i64 0, i32 45, i64 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 2
  br i1 %32, label %33, label %38

33:                                               ; preds = %23
  %34 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %35 = load %struct.bio_st*, %struct.bio_st** %34, align 8
  %36 = tail call i32 @BIO_flush(%struct.bio_st* %35) #3
  %37 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %24, align 8
  br label %38

38:                                               ; preds = %33, %23
  %39 = phi %"struct.bssl::SSL3_STATE"* [ %37, %33 ], [ %29, %23 ]
  %40 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %39, i64 0, i32 45, i64 0
  tail call void @_ZN4bssl19ssl_do_msg_callbackEPK6ssl_stiiNS_4SpanIKhEE(%struct.ssl_st* %0, i32 1, i32 21, i8* %40, i64 2) #3
  %41 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %24, align 8
  %42 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %41, i64 0, i32 45, i64 0
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = shl nuw nsw i32 %44, 8
  %46 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %41, i64 0, i32 45, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = or i32 %45, %48
  tail call void @_ZN4bssl20ssl_do_info_callbackEPK6ssl_stii(%struct.ssl_st* %0, i32 16392, i32 %49) #3
  br label %50

50:                                               ; preds = %17, %38, %16
  %51 = phi i32 [ 1, %38 ], [ 0, %16 ], [ %21, %17 ]
  ret i32 %51
}

declare i32 @BIO_flush(%struct.bio_st*) local_unnamed_addr #1

declare void @_ZN4bssl20ssl_do_info_callbackEPK6ssl_stii(%struct.ssl_st*, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN4bssl25tls_flush_pending_hs_dataEP6ssl_st(%struct.ssl_st*) local_unnamed_addr #1

declare i64 @SSL_max_seal_overhead(%struct.ssl_st*) local_unnamed_addr #1

declare zeroext i1 @_ZN4bssl9SSLBuffer9EnsureCapEmm(%"class.bssl::SSLBuffer"*, i64, i64) local_unnamed_addr #1

declare i64 @_ZN4bssl25ssl_seal_align_prefix_lenEPK6ssl_st(%struct.ssl_st*) local_unnamed_addr #1

declare void @_ZN4bssl9SSLBuffer8DidWriteEm(%"class.bssl::SSLBuffer"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN4bssl15tls_seal_recordEP6ssl_stPhPmmhPKhm(%struct.ssl_st*, i8*, i64*, i64, i8 zeroext, i8*, i64) local_unnamed_addr #1

declare i32 @_ZN4bssl22ssl_write_buffer_flushEP6ssl_st(%struct.ssl_st*) local_unnamed_addr #1

declare void @BUF_MEM_free(%struct.buf_mem_st*) local_unnamed_addr #1

declare void @ERR_SAVE_STATE_free(%struct.err_save_state_st*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
