; ModuleID = '../../third_party/blink/renderer/core/style/style_path.cc'
source_filename = "../../third_party/blink/renderer/core/style/style_path.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted" }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.7", %"struct.std::__1::atomic.7", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.5, %class.SkTDArray.6, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.5 = type { i8*, i32, i32 }
%class.SkTDArray.6 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.12 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.7" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.12 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.13", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl.15" }
%"struct.std::__1::__cxx_atomic_impl.15" = type { %"struct.std::__1::__cxx_atomic_base_impl.16" }
%"struct.std::__1::__cxx_atomic_base_impl.16" = type { i8 }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.20", i32, [4 x i8], %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.156", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.172", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.195", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.13", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.136", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.56" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__cxx_atomic_impl.59" }
%"struct.std::__1::__cxx_atomic_impl.59" = type { %"struct.std::__1::__cxx_atomic_base_impl.60" }
%"struct.std::__1::__cxx_atomic_base_impl.60" = type { i64 }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::Worklist.67"* }
%"class.blink::Worklist.67" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.56" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::Worklist.74"* }
%"class.blink::Worklist.74" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.56" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::Worklist.81"* }
%"class.blink::Worklist.81" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.56" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::Worklist.88"* }
%"class.blink::Worklist.88" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.56" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist.95"* }
%"class.blink::Worklist.95" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.56" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::Worklist.102"* }
%"class.blink::Worklist.102" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.56" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.blink::Worklist.109"* }
%"class.blink::Worklist.109" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.56" }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.116", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.130", [4 x i8] }>
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118", %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { i64 }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { float }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.139", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.148" }
%"class.WTF::Vector.148" = type { %"class.WTF::VectorBuffer.149" }
%"class.WTF::VectorBuffer.149" = type { %"class.WTF::VectorBufferBase.150" }
%"class.WTF::VectorBufferBase.150" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.164" }
%"class.WTF::VectorBuffer.164" = type { %"class.WTF::VectorBufferBase.165" }
%"class.WTF::VectorBufferBase.165" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.178" }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.67"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.74"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.81"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.88"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.95"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.181" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.201 }
%class.scoped_refptr.201 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted", [4 x i8] }>
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::cssvalue::CSSPathValue" = type <{ %"class.blink::CSSValue", [5 x i8], %class.scoped_refptr, i32, [4 x i8] }>
%class.scoped_refptr = type { %"class.blink::StylePath"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::atomic.222" = type { %"struct.std::__1::__atomic_base.223" }
%"struct.std::__1::__atomic_base.223" = type { %"struct.std::__1::__atomic_base.224" }
%"struct.std::__1::__atomic_base.224" = type { %"struct.std::__1::__cxx_atomic_impl.225" }
%"struct.std::__1::__cxx_atomic_impl.225" = type { %"struct.std::__1::__cxx_atomic_base_impl.226" }
%"struct.std::__1::__cxx_atomic_base_impl.226" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZNK5blink9StylePath11GetWindRuleEv = comdat any

$_ZNK5blink9StylePath7GetTypeEv = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_8cssvalue12CSSPathValueEEEPvm = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink9StylePathE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::StylePath"*)* @_ZN5blink9StylePathD2Ev to i8*), i8* bitcast (void (%"class.blink::StylePath"*)* @_ZN5blink9StylePathD0Ev to i8*), i8* bitcast (void (%"class.blink::StylePath"*, %"class.blink::Path"*, %"class.blink::FloatRect"*, float)* @_ZN5blink9StylePath7GetPathERNS_4PathERKNS_9FloatRectEf to i8*), i8* bitcast (i32 (%"class.blink::StylePath"*)* @_ZNK5blink9StylePath11GetWindRuleEv to i8*), i8* bitcast (i1 (%"class.blink::StylePath"*, %"class.blink::BasicShape"*)* @_ZNK5blink9StylePatheqERKNS_10BasicShapeE to i8*), i8* bitcast (i32 (%"class.blink::StylePath"*)* @_ZNK5blink9StylePath7GetTypeEv to i8*)] }, align 8
@_ZZN5blink9StylePath9EmptyPathEvE10empty_path = internal unnamed_addr global %"class.blink::StylePath"* null, align 8
@_ZGVZN5blink9StylePath9EmptyPathEvE10empty_path = internal global i64 0, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.3 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

@_ZN5blink9StylePathC1ENSt3__110unique_ptrINS_17SVGPathByteStreamENS1_14default_deleteIS3_EEEENS_8WindRuleE = hidden unnamed_addr alias void (%"class.blink::StylePath"*, %"class.blink::SVGPathByteStream"*, i32), void (%"class.blink::StylePath"*, %"class.blink::SVGPathByteStream"*, i32)* @_ZN5blink9StylePathC2ENSt3__110unique_ptrINS_17SVGPathByteStreamENS1_14default_deleteIS3_EEEENS_8WindRuleE
@_ZN5blink9StylePathD1Ev = hidden unnamed_addr alias void (%"class.blink::StylePath"*), void (%"class.blink::StylePath"*)* @_ZN5blink9StylePathD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9StylePathC2ENSt3__110unique_ptrINS_17SVGPathByteStreamENS1_14default_deleteIS3_EEEENS_8WindRuleE(%"class.blink::StylePath"* nocapture, %"class.blink::SVGPathByteStream"*, i32) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.blink::SVGPathByteStream"* %1 to i64
  %5 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink9StylePathE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %4, i64* %8, align 8
  %9 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 2
  %10 = bitcast %"class.std::__1::unique_ptr.1"* %9 to i64*
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 3
  store float 0x7FF8000000000000, float* %11, align 8
  %12 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 4
  store i32 %2, i32* %12, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9StylePathD2Ev(%"class.blink::StylePath"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink9StylePathE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Path"*, %"class.blink::Path"** %3, align 8
  store %"class.blink::Path"* null, %"class.blink::Path"** %3, align 8
  %5 = icmp eq %"class.blink::Path"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %4) #7
  %7 = bitcast %"class.blink::Path"* %4 to i8*
  tail call void @free(i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::SVGPathByteStream"*, %"class.blink::SVGPathByteStream"** %9, align 8
  store %"class.blink::SVGPathByteStream"* null, %"class.blink::SVGPathByteStream"** %9, align 8
  %11 = icmp eq %"class.blink::SVGPathByteStream"* %10, null
  br i1 %11, label %24, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::SVGPathByteStream", %"class.blink::SVGPathByteStream"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %22, label %16, !prof !2

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::SVGPathByteStream", %"class.blink::SVGPathByteStream"* %10, i64 0, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !3

20:                                               ; preds = %16
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %16
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %14) #7
  br label %22

22:                                               ; preds = %21, %12
  %23 = bitcast %"class.blink::SVGPathByteStream"* %10 to i8*
  tail call void @free(i8* %23) #7
  br label %24

24:                                               ; preds = %8, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9StylePathD0Ev(%"class.blink::StylePath"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink9StylePathE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Path"*, %"class.blink::Path"** %3, align 8
  store %"class.blink::Path"* null, %"class.blink::Path"** %3, align 8
  %5 = icmp eq %"class.blink::Path"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %4) #7
  %7 = bitcast %"class.blink::Path"* %4 to i8*
  tail call void @free(i8* %7) #7
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::SVGPathByteStream"*, %"class.blink::SVGPathByteStream"** %9, align 8
  store %"class.blink::SVGPathByteStream"* null, %"class.blink::SVGPathByteStream"** %9, align 8
  %11 = icmp eq %"class.blink::SVGPathByteStream"* %10, null
  br i1 %11, label %24, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::SVGPathByteStream", %"class.blink::SVGPathByteStream"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %22, label %16, !prof !2

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::SVGPathByteStream", %"class.blink::SVGPathByteStream"* %10, i64 0, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !3

20:                                               ; preds = %16
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %16
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %14) #7
  br label %22

22:                                               ; preds = %21, %12
  %23 = bitcast %"class.blink::SVGPathByteStream"* %10 to i8*
  tail call void @free(i8* %23) #7
  br label %24

24:                                               ; preds = %8, %22
  %25 = bitcast %"class.blink::StylePath"* %0 to i8*
  tail call void @free(i8* %25) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::StylePath"* @_ZN5blink9StylePath6CreateENSt3__110unique_ptrINS_17SVGPathByteStreamENS1_14default_deleteIS3_EEEENS_8WindRuleE(%"class.blink::SVGPathByteStream"*, i32) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::SVGPathByteStream"* %0 to i64
  %4 = tail call noalias i8* @malloc(i64 40) #7
  %5 = bitcast i8* %4 to %"class.blink::StylePath"*
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 1, i32* %7, align 4
  %8 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink9StylePathE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 16
  %10 = bitcast i8* %9 to i64*
  store i64 %3, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %4, i64 24
  %12 = bitcast i8* %11 to i64*
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds i8, i8* %4, i64 32
  %14 = bitcast i8* %13 to float*
  store float 0x7FF8000000000000, float* %14, align 8
  %15 = getelementptr inbounds i8, i8* %4, i64 36
  %16 = bitcast i8* %15 to i32*
  store i32 %1, i32* %16, align 4
  ret %"class.blink::StylePath"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StylePath"* @_ZN5blink9StylePath9EmptyPathEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink9StylePath9EmptyPathEvE10empty_path to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %33, !prof !4

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink9StylePath9EmptyPathEvE10empty_path) #7
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %33, label %6

6:                                                ; preds = %3
  %7 = tail call noalias i8* @malloc(i64 16) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #7
  %8 = ptrtoint i8* %7 to i64
  %9 = tail call noalias i8* @malloc(i64 40) #7
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 1, i32* %11, align 4
  %12 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink9StylePathE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 16
  %14 = bitcast i8* %13 to i64*
  store i64 %8, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %9, i64 24
  %16 = bitcast i8* %15 to i64*
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %9, i64 32
  %18 = bitcast i8* %17 to float*
  store float 0x7FF8000000000000, float* %18, align 8
  %19 = getelementptr inbounds i8, i8* %9, i64 36
  %20 = bitcast i8* %19 to i32*
  store i32 0, i32* %20, align 4
  %21 = icmp eq i8* %9, null
  br i1 %21, label %32, label %22

22:                                               ; preds = %6
  %23 = bitcast i8* %10 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #7
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %23) #7
  %24 = load i32, i32* %11, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %22
  %27 = bitcast i8* %9 to %"class.blink::BasicShape"*
  %28 = bitcast i8* %9 to void (%"class.blink::BasicShape"*)***
  %29 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %29, i64 1
  %31 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %30, align 8
  tail call void %31(%"class.blink::BasicShape"* nonnull %27) #7
  br label %32

32:                                               ; preds = %6, %22, %26
  store i8* %9, i8** bitcast (%"class.blink::StylePath"** @_ZZN5blink9StylePath9EmptyPathEvE10empty_path to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink9StylePath9EmptyPathEvE10empty_path) #7
  br label %33

33:                                               ; preds = %3, %32, %0
  %34 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** @_ZZN5blink9StylePath9EmptyPathEvE10empty_path, align 8
  ret %"class.blink::StylePath"* %34
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.blink::Path"* @_ZNK5blink9StylePath7GetPathEv(%"class.blink::StylePath"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Path"*, %"class.blink::Path"** %3, align 8
  %5 = icmp eq %"class.blink::Path"* %4, null
  br i1 %5, label %6, label %23

6:                                                ; preds = %1
  %7 = tail call noalias i8* @malloc(i64 16) #7
  %8 = bitcast i8* %7 to %"class.blink::Path"*
  tail call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* %8) #7
  %9 = ptrtoint i8* %7 to i64
  %10 = load %"class.blink::Path"*, %"class.blink::Path"** %3, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.1"* %2 to i64*
  store i64 %9, i64* %11, align 8
  %12 = icmp eq %"class.blink::Path"* %10, null
  %13 = bitcast i8* %7 to %"class.blink::Path"*
  br i1 %12, label %17, label %14

14:                                               ; preds = %6
  tail call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %10) #7
  %15 = bitcast %"class.blink::Path"* %10 to i8*
  tail call void @free(i8* %15) #7
  %16 = load %"class.blink::Path"*, %"class.blink::Path"** %3, align 8
  br label %17

17:                                               ; preds = %14, %6
  %18 = phi %"class.blink::Path"* [ %16, %14 ], [ %13, %6 ]
  %19 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"class.blink::SVGPathByteStream"*, %"class.blink::SVGPathByteStream"** %19, align 8
  %21 = tail call zeroext i1 @_ZN5blink23BuildPathFromByteStreamERKNS_17SVGPathByteStreamERNS_4PathE(%"class.blink::SVGPathByteStream"* dereferenceable(16) %20, %"class.blink::Path"* dereferenceable(16) %18) #7
  %22 = load %"class.blink::Path"*, %"class.blink::Path"** %3, align 8
  br label %23

23:                                               ; preds = %1, %17
  %24 = phi %"class.blink::Path"* [ %4, %1 ], [ %22, %17 ]
  ret %"class.blink::Path"* %24
}

declare zeroext i1 @_ZN5blink23BuildPathFromByteStreamERKNS_17SVGPathByteStreamERNS_4PathE(%"class.blink::SVGPathByteStream"* dereferenceable(16), %"class.blink::Path"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink9StylePath6lengthEv(%"class.blink::StylePath"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 3
  %3 = load float, float* %2, align 8
  %4 = fcmp uno float %3, 0.000000e+00
  br i1 %4, label %5, label %29

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Path"*, %"class.blink::Path"** %7, align 8
  %9 = icmp eq %"class.blink::Path"* %8, null
  br i1 %9, label %10, label %26

10:                                               ; preds = %5
  %11 = tail call noalias i8* @malloc(i64 16) #7
  %12 = bitcast i8* %11 to %"class.blink::Path"*
  tail call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* %12) #7
  %13 = ptrtoint i8* %11 to i64
  %14 = load %"class.blink::Path"*, %"class.blink::Path"** %7, align 8
  %15 = bitcast %"class.std::__1::unique_ptr.1"* %6 to i64*
  store i64 %13, i64* %15, align 8
  %16 = icmp eq %"class.blink::Path"* %14, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %10
  tail call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %14) #7
  %18 = bitcast %"class.blink::Path"* %14 to i8*
  tail call void @free(i8* %18) #7
  %19 = load %"class.blink::Path"*, %"class.blink::Path"** %7, align 8
  br label %20

20:                                               ; preds = %17, %10
  %21 = phi %"class.blink::Path"* [ %19, %17 ], [ %12, %10 ]
  %22 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = load %"class.blink::SVGPathByteStream"*, %"class.blink::SVGPathByteStream"** %22, align 8
  %24 = tail call zeroext i1 @_ZN5blink23BuildPathFromByteStreamERKNS_17SVGPathByteStreamERNS_4PathE(%"class.blink::SVGPathByteStream"* dereferenceable(16) %23, %"class.blink::Path"* dereferenceable(16) %21) #7
  %25 = load %"class.blink::Path"*, %"class.blink::Path"** %7, align 8
  br label %26

26:                                               ; preds = %5, %20
  %27 = phi %"class.blink::Path"* [ %8, %5 ], [ %25, %20 ]
  %28 = tail call float @_ZNK5blink4Path6lengthEv(%"class.blink::Path"* %27) #7
  store float %28, float* %2, align 8
  br label %29

29:                                               ; preds = %26, %1
  %30 = phi float [ %28, %26 ], [ %3, %1 ]
  ret float %30
}

declare float @_ZNK5blink4Path6lengthEv(%"class.blink::Path"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9StylePath8IsClosedEv(%"class.blink::StylePath"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Path"*, %"class.blink::Path"** %3, align 8
  %5 = icmp eq %"class.blink::Path"* %4, null
  br i1 %5, label %6, label %22

6:                                                ; preds = %1
  %7 = tail call noalias i8* @malloc(i64 16) #7
  %8 = bitcast i8* %7 to %"class.blink::Path"*
  tail call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* %8) #7
  %9 = ptrtoint i8* %7 to i64
  %10 = load %"class.blink::Path"*, %"class.blink::Path"** %3, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.1"* %2 to i64*
  store i64 %9, i64* %11, align 8
  %12 = icmp eq %"class.blink::Path"* %10, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %6
  tail call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %10) #7
  %14 = bitcast %"class.blink::Path"* %10 to i8*
  tail call void @free(i8* %14) #7
  %15 = load %"class.blink::Path"*, %"class.blink::Path"** %3, align 8
  br label %16

16:                                               ; preds = %13, %6
  %17 = phi %"class.blink::Path"* [ %15, %13 ], [ %8, %6 ]
  %18 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.blink::SVGPathByteStream"*, %"class.blink::SVGPathByteStream"** %18, align 8
  %20 = tail call zeroext i1 @_ZN5blink23BuildPathFromByteStreamERKNS_17SVGPathByteStreamERNS_4PathE(%"class.blink::SVGPathByteStream"* dereferenceable(16) %19, %"class.blink::Path"* dereferenceable(16) %17) #7
  %21 = load %"class.blink::Path"*, %"class.blink::Path"** %3, align 8
  br label %22

22:                                               ; preds = %1, %16
  %23 = phi %"class.blink::Path"* [ %4, %1 ], [ %21, %16 ]
  %24 = tail call zeroext i1 @_ZNK5blink4Path8IsClosedEv(%"class.blink::Path"* %23) #7
  ret i1 %24
}

declare zeroext i1 @_ZNK5blink4Path8IsClosedEv(%"class.blink::Path"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink9StylePath16ComputedCSSValueEv(%"class.blink::StylePath"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_8cssvalue12CSSPathValueEEEPvm(i64 24) #7
  %3 = bitcast i8* %2 to %"class.blink::cssvalue::CSSPathValue"*
  %4 = icmp eq %"class.blink::StylePath"* %0, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %6) #7
  br label %7

7:                                                ; preds = %1, %5
  tail call void @_ZN5blink8cssvalue12CSSPathValueC1E13scoped_refptrINS_9StylePathEENS_23PathSerializationFormatE(%"class.blink::cssvalue::CSSPathValue"* %3, %"class.blink::StylePath"* %0, i32 1) #7
  %8 = getelementptr inbounds i8, i8* %2, i64 -4
  %9 = bitcast i8* %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  %12 = bitcast i8* %2 to %"class.blink::CSSValue"*
  ret %"class.blink::CSSValue"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9StylePatheqERKNS_10BasicShapeE(%"class.blink::StylePath"*, %"class.blink::BasicShape"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::StylePath"* %0 to %"class.blink::BasicShape"*
  %4 = bitcast %"class.blink::StylePath"* %0 to i32 (%"class.blink::BasicShape"*)***
  %5 = load i32 (%"class.blink::BasicShape"*)**, i32 (%"class.blink::BasicShape"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::BasicShape"*)*, i32 (%"class.blink::BasicShape"*)** %5, i64 5
  %7 = load i32 (%"class.blink::BasicShape"*)*, i32 (%"class.blink::BasicShape"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::BasicShape"* %3) #7
  %9 = bitcast %"class.blink::BasicShape"* %1 to i32 (%"class.blink::BasicShape"*)***
  %10 = load i32 (%"class.blink::BasicShape"*)**, i32 (%"class.blink::BasicShape"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.blink::BasicShape"*)*, i32 (%"class.blink::BasicShape"*)** %10, i64 5
  %12 = load i32 (%"class.blink::BasicShape"*)*, i32 (%"class.blink::BasicShape"*)** %11, align 8
  %13 = tail call i32 %12(%"class.blink::BasicShape"* %1) #7
  %14 = icmp eq i32 %8, %13
  br i1 %14, label %15, label %43

15:                                               ; preds = %2
  %16 = bitcast %"class.blink::BasicShape"* %1 to %"class.blink::StylePath"*
  %17 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %16, i64 0, i32 4
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %43

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"class.blink::SVGPathByteStream"*, %"class.blink::SVGPathByteStream"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %1, i64 1
  %26 = bitcast %"class.blink::BasicShape"* %25 to %"class.blink::SVGPathByteStream"**
  %27 = load %"class.blink::SVGPathByteStream"*, %"class.blink::SVGPathByteStream"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::SVGPathByteStream", %"class.blink::SVGPathByteStream"* %24, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.blink::SVGPathByteStream", %"class.blink::SVGPathByteStream"* %27, i64 0, i32 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %29, %31
  br i1 %32, label %33, label %43

33:                                               ; preds = %22
  %34 = icmp eq i32 %29, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.blink::SVGPathByteStream", %"class.blink::SVGPathByteStream"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.blink::SVGPathByteStream", %"class.blink::SVGPathByteStream"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = zext i32 %29 to i64
  %41 = tail call i32 @bcmp(i8* %37, i8* %39, i64 %40) #7
  %42 = icmp eq i32 %41, 0
  br label %43

43:                                               ; preds = %35, %33, %22, %15, %2
  %44 = phi i1 [ false, %2 ], [ false, %15 ], [ %42, %35 ], [ false, %22 ], [ true, %33 ]
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9StylePath7GetPathERNS_4PathERKNS_9FloatRectEf(%"class.blink::StylePath"* nocapture, %"class.blink::Path"* dereferenceable(16), %"class.blink::FloatRect"* nocapture readonly dereferenceable(16), float) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::AffineTransform", align 8
  %6 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Path"*, %"class.blink::Path"** %7, align 8
  %9 = icmp eq %"class.blink::Path"* %8, null
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = tail call noalias i8* @malloc(i64 16) #7
  %12 = bitcast i8* %11 to %"class.blink::Path"*
  tail call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* %12) #7
  %13 = ptrtoint i8* %11 to i64
  %14 = load %"class.blink::Path"*, %"class.blink::Path"** %7, align 8
  %15 = bitcast %"class.std::__1::unique_ptr.1"* %6 to i64*
  store i64 %13, i64* %15, align 8
  %16 = icmp eq %"class.blink::Path"* %14, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %10
  tail call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %14) #7
  %18 = bitcast %"class.blink::Path"* %14 to i8*
  tail call void @free(i8* %18) #7
  %19 = load %"class.blink::Path"*, %"class.blink::Path"** %7, align 8
  br label %20

20:                                               ; preds = %17, %10
  %21 = phi %"class.blink::Path"* [ %19, %17 ], [ %12, %10 ]
  %22 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = load %"class.blink::SVGPathByteStream"*, %"class.blink::SVGPathByteStream"** %22, align 8
  %24 = tail call zeroext i1 @_ZN5blink23BuildPathFromByteStreamERKNS_17SVGPathByteStreamERNS_4PathE(%"class.blink::SVGPathByteStream"* dereferenceable(16) %23, %"class.blink::Path"* dereferenceable(16) %21) #7
  %25 = load %"class.blink::Path"*, %"class.blink::Path"** %7, align 8
  br label %26

26:                                               ; preds = %4, %20
  %27 = phi %"class.blink::Path"* [ %8, %4 ], [ %25, %20 ]
  %28 = tail call dereferenceable(16) %"class.blink::Path"* @_ZN5blink4PathaSERKS0_(%"class.blink::Path"* %1, %"class.blink::Path"* dereferenceable(16) %27) #7
  %29 = bitcast %"class.blink::AffineTransform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %29) #7
  %30 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 0
  %31 = load float, float* %30, align 4
  %32 = fpext float %31 to double
  %33 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 1
  %34 = load float, float* %33, align 4
  %35 = fpext float %34 to double
  call void @_ZN5blink15AffineTransformC1Edddddd(%"class.blink::AffineTransform"* nonnull %5, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00, double %32, double %35) #7
  %36 = fpext float %3 to double
  %37 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"* nonnull %5, double %36) #7
  call void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"* %1, %"class.blink::AffineTransform"* dereferenceable(48) %37) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %29) #7
  ret void
}

declare dereferenceable(16) %"class.blink::Path"* @_ZN5blink4PathaSERKS0_(%"class.blink::Path"*, %"class.blink::Path"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"*, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #3

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"*, double) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9StylePath11GetWindRuleEv(%"class.blink::StylePath"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9StylePath7GetTypeEv(%"class.blink::StylePath"*) unnamed_addr #0 comdat align 2 {
  ret i32 5
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

declare void @_ZN5blink15AffineTransformC1Edddddd(%"class.blink::AffineTransform"*, double, double, double, double, double, double) unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink4PathD1Ev(%"class.blink::Path"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink4PathC1Ev(%"class.blink::Path"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_8cssvalue12CSSPathValueEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.222"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.222"*)) #7
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 7
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #7
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #7
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #7
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %34, i8* %35) #7
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #7
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #7
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !3

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #7
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare void @_ZN5blink8cssvalue12CSSPathValueC1E13scoped_refptrINS_9StylePathEENS_23PathSerializationFormatE(%"class.blink::cssvalue::CSSPathValue"*, %"class.blink::StylePath"*, i32) unnamed_addr #3

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSValue"*
  tail call void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.222"*) local_unnamed_addr #3

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #3

declare void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"*) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 1, i32 1048575}
