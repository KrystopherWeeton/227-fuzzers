; ModuleID = '../../third_party/nasm/asm/stdscan.c'
source_filename = "../../third_party/nasm/asm/stdscan.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.tokenval = type { i8*, i64, i64, i32, i8 }

@stdscan_bufptr = internal global i8* null, align 8
@stdscan_templen = internal unnamed_addr global i32 0, align 4
@stdscan_tempstorage = internal unnamed_addr global i8** null, align 8
@.str = private unnamed_addr constant [27 x i8] c"`%s' is not a NASM keyword\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"invalid decorator token inside braces\00", align 1
@nasm_ctype_tab = external local_unnamed_addr global [256 x i16], align 16
@stdscan_tempsize = internal unnamed_addr global i32 0, align 4
@.str.2 = private unnamed_addr constant [42 x i8] c"`%s' is not a valid decorator with braces\00", align 1
@nasm_reg_flags = external local_unnamed_addr constant [0 x i64], align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @stdscan_set(i8*) local_unnamed_addr #0 {
  store i8* %0, i8** @stdscan_bufptr, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @stdscan_get() local_unnamed_addr #1 {
  %1 = load i8*, i8** @stdscan_bufptr, align 8
  ret i8* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @stdscan_reset() local_unnamed_addr #2 {
  %1 = load i32, i32* @stdscan_templen, align 4
  %2 = icmp sgt i32 %1, 0
  br i1 %2, label %3, label %12

3:                                                ; preds = %0, %3
  %4 = phi i32 [ %10, %3 ], [ %1, %0 ]
  %5 = load i8**, i8*** @stdscan_tempstorage, align 8
  %6 = add nsw i32 %4, -1
  store i32 %6, i32* @stdscan_templen, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds i8*, i8** %5, i64 %7
  %9 = load i8*, i8** %8, align 8
  tail call void @nasm_free(i8* %9) #7
  %10 = load i32, i32* @stdscan_templen, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %3, label %12

12:                                               ; preds = %3, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @stdscan_cleanup() local_unnamed_addr #2 {
  %1 = load i32, i32* @stdscan_templen, align 4
  %2 = icmp sgt i32 %1, 0
  br i1 %2, label %3, label %12

3:                                                ; preds = %0, %3
  %4 = phi i32 [ %10, %3 ], [ %1, %0 ]
  %5 = load i8**, i8*** @stdscan_tempstorage, align 8
  %6 = add nsw i32 %4, -1
  store i32 %6, i32* @stdscan_templen, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds i8*, i8** %5, i64 %7
  %9 = load i8*, i8** %8, align 8
  tail call void @nasm_free(i8* %9) #7
  %10 = load i32, i32* @stdscan_templen, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %3, label %12

12:                                               ; preds = %3, %0
  %13 = load i8*, i8** bitcast (i8*** @stdscan_tempstorage to i8**), align 8
  tail call void @nasm_free(i8* %13) #7
  ret void
}

declare void @nasm_free(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @stdscan(i8* nocapture readnone, %struct.tokenval*) local_unnamed_addr #2 {
  %3 = alloca i8, align 1
  %4 = bitcast %struct.tokenval* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false)
  %5 = load i8*, i8** @stdscan_bufptr, align 8
  %6 = tail call i8* @nasm_skip_spaces(i8* %5) #7
  store i8* %6, i8** @stdscan_bufptr, align 8
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 0, i32* %10, align 8
  br label %395

11:                                               ; preds = %2
  %12 = zext i8 %7 to i64
  %13 = getelementptr inbounds [256 x i16], [256 x i16]* @nasm_ctype_tab, i64 0, i64 %12
  %14 = load i16, i16* %13, align 2
  %15 = and i16 %14, 256
  %16 = icmp eq i16 %15, 0
  %17 = icmp eq i8 %7, 36
  br i1 %16, label %18, label %27

18:                                               ; preds = %11
  br i1 %17, label %19, label %106

19:                                               ; preds = %18
  %20 = getelementptr inbounds i8, i8* %6, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i64
  %23 = getelementptr inbounds [256 x i16], [256 x i16]* @nasm_ctype_tab, i64 0, i64 %22
  %24 = load i16, i16* %23, align 2
  %25 = and i16 %24, 256
  %26 = icmp eq i16 %25, 0
  br i1 %26, label %95, label %28

27:                                               ; preds = %11
  br i1 %17, label %28, label %30

28:                                               ; preds = %19, %27
  %29 = getelementptr inbounds i8, i8* %6, i64 1
  store i8* %29, i8** @stdscan_bufptr, align 8
  br label %30

30:                                               ; preds = %28, %27
  %31 = phi i8* [ %29, %28 ], [ %6, %27 ]
  %32 = phi i1 [ true, %28 ], [ false, %27 ]
  br label %33

33:                                               ; preds = %33, %30
  %34 = phi i8* [ %31, %30 ], [ %35, %33 ]
  %35 = getelementptr inbounds i8, i8* %34, i64 1
  store i8* %35, i8** @stdscan_bufptr, align 8
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i16], [256 x i16]* @nasm_ctype_tab, i64 0, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = trunc i16 %39 to i8
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %33, label %42

42:                                               ; preds = %33
  %43 = ptrtoint i8* %35 to i64
  %44 = ptrtoint i8* %31 to i64
  %45 = sub i64 %43, %44
  %46 = icmp slt i64 %45, 4096
  %47 = trunc i64 %45 to i32
  %48 = select i1 %46, i32 %47, i32 4095
  %49 = add nsw i32 %48, 1
  %50 = sext i32 %49 to i64
  %51 = tail call noalias i8* @nasm_malloc(i64 %50) #8
  %52 = sext i32 %48 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %31, i64 %52, i1 false) #7
  %53 = getelementptr inbounds i8, i8* %51, i64 %52
  store i8 0, i8* %53, align 1
  %54 = load i32, i32* @stdscan_templen, align 4
  %55 = load i32, i32* @stdscan_tempsize, align 4
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %57, label %59

57:                                               ; preds = %42
  %58 = load i8**, i8*** @stdscan_tempstorage, align 8
  br label %67

59:                                               ; preds = %42
  %60 = add nsw i32 %55, 256
  store i32 %60, i32* @stdscan_tempsize, align 4
  %61 = load i8*, i8** bitcast (i8*** @stdscan_tempstorage to i8**), align 8
  %62 = sext i32 %60 to i64
  %63 = shl nsw i64 %62, 3
  %64 = tail call i8* @nasm_realloc(i8* %61, i64 %63) #9
  store i8* %64, i8** bitcast (i8*** @stdscan_tempstorage to i8**), align 8
  %65 = bitcast i8* %64 to i8**
  %66 = load i32, i32* @stdscan_templen, align 4
  br label %67

67:                                               ; preds = %57, %59
  %68 = phi i32 [ %54, %57 ], [ %66, %59 ]
  %69 = phi i8** [ %58, %57 ], [ %65, %59 ]
  %70 = add nsw i32 %68, 1
  store i32 %70, i32* @stdscan_templen, align 4
  %71 = sext i32 %68 to i64
  %72 = getelementptr inbounds i8*, i8** %69, i64 %71
  store i8* %51, i8** %72, align 8
  %73 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 0
  store i8* %51, i8** %73, align 8
  br i1 %32, label %78, label %74

74:                                               ; preds = %67
  %75 = load i64, i64* bitcast (i8** @stdscan_bufptr to i64*), align 8
  %76 = sub i64 %75, %44
  %77 = icmp sgt i64 %76, 17
  br i1 %77, label %78, label %80

78:                                               ; preds = %74, %67
  %79 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 256, i32* %79, align 8
  br label %395

80:                                               ; preds = %74
  %81 = tail call i32 @nasm_token_hash(i8* %51, %struct.tokenval* %1) #7
  %82 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 4
  %83 = load i8, i8* %82, align 4
  %84 = and i8 %83, 8
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %89, label %86, !prof !2

86:                                               ; preds = %80
  %87 = load i8*, i8** %73, align 8
  tail call void (i32, i8*, ...) @nasm_warn(i32 1769472, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* %87) #7
  %88 = load i8, i8* %82, align 4
  br label %89

89:                                               ; preds = %80, %86
  %90 = phi i8 [ %83, %80 ], [ %88, %86 ]
  %91 = and i8 %90, 1
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %395, label %93, !prof !2

93:                                               ; preds = %89
  %94 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 256, i32* %94, align 8
  br label %395

95:                                               ; preds = %19
  %96 = and i16 %24, 2104
  %97 = icmp eq i16 %96, 0
  br i1 %97, label %98, label %106

98:                                               ; preds = %95
  store i8* %20, i8** @stdscan_bufptr, align 8
  %99 = load i8, i8* %20, align 1
  %100 = icmp eq i8 %99, 36
  br i1 %100, label %101, label %104

101:                                              ; preds = %98
  %102 = getelementptr inbounds i8, i8* %6, i64 2
  store i8* %102, i8** @stdscan_bufptr, align 8
  %103 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 265, i32* %103, align 8
  br label %395

104:                                              ; preds = %98
  %105 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 264, i32* %105, align 8
  br label %395

106:                                              ; preds = %95, %18
  %107 = and i16 %14, 1056
  %108 = icmp eq i16 %107, 0
  br i1 %108, label %203, label %109

109:                                              ; preds = %106
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #7
  store i8 -86, i8* %3, align 1
  %110 = load i8, i8* %6, align 1
  %111 = icmp eq i8 %110, 36
  br i1 %111, label %112, label %114

112:                                              ; preds = %109
  %113 = getelementptr inbounds i8, i8* %6, i64 1
  store i8* %113, i8** @stdscan_bufptr, align 8
  br label %114

114:                                              ; preds = %112, %109
  %115 = phi i8* [ %6, %109 ], [ %113, %112 ]
  %116 = phi i8 [ 0, %109 ], [ 1, %112 ]
  br label %117

117:                                              ; preds = %145, %114
  %118 = phi i8* [ %115, %114 ], [ %146, %145 ]
  %119 = phi i8 [ %116, %114 ], [ %147, %145 ]
  %120 = phi i8 [ 0, %114 ], [ %148, %145 ]
  %121 = phi i8 [ 0, %114 ], [ %149, %145 ]
  %122 = getelementptr inbounds i8, i8* %118, i64 1
  store i8* %122, i8** @stdscan_bufptr, align 8
  %123 = load i8, i8* %118, align 1
  %124 = icmp ne i8 %119, 0
  br i1 %124, label %130, label %125

125:                                              ; preds = %117
  switch i8 %123, label %139 [
    i8 101, label %126
    i8 69, label %126
    i8 72, label %145
    i8 104, label %145
    i8 88, label %145
    i8 120, label %145
    i8 80, label %135
    i8 112, label %135
  ]

126:                                              ; preds = %125, %125
  %127 = load i8, i8* %122, align 1
  switch i8 %127, label %145 [
    i8 43, label %128
    i8 45, label %128
  ]

128:                                              ; preds = %126, %126
  %129 = getelementptr inbounds i8, i8* %118, i64 2
  store i8* %129, i8** @stdscan_bufptr, align 8
  br label %145

130:                                              ; preds = %117
  %131 = add i8 %123, -72
  %132 = lshr i8 %131, 3
  %133 = shl i8 %131, 5
  %134 = or i8 %132, %133
  switch i8 %134, label %139 [
    i8 0, label %145
    i8 4, label %145
    i8 2, label %145
    i8 6, label %145
    i8 1, label %135
    i8 5, label %135
  ]

135:                                              ; preds = %125, %125, %130, %130
  %136 = load i8, i8* %122, align 1
  switch i8 %136, label %145 [
    i8 43, label %137
    i8 45, label %137
  ]

137:                                              ; preds = %135, %135
  %138 = getelementptr inbounds i8, i8* %118, i64 2
  store i8* %138, i8** @stdscan_bufptr, align 8
  br label %145

139:                                              ; preds = %125, %130
  %140 = zext i8 %123 to i64
  %141 = getelementptr inbounds [256 x i16], [256 x i16]* @nasm_ctype_tab, i64 0, i64 %140
  %142 = load i16, i16* %141, align 2
  %143 = and i16 %142, 2104
  %144 = icmp eq i16 %143, 0
  br i1 %144, label %150, label %145

145:                                              ; preds = %139, %150, %135, %125, %125, %125, %125, %130, %130, %130, %130, %126, %137, %128
  %146 = phi i8* [ %138, %137 ], [ %122, %139 ], [ %129, %128 ], [ %122, %126 ], [ %122, %125 ], [ %122, %125 ], [ %122, %125 ], [ %122, %125 ], [ %122, %130 ], [ %122, %130 ], [ %122, %130 ], [ %122, %130 ], [ %122, %135 ], [ %122, %150 ]
  %147 = phi i8 [ %119, %137 ], [ %119, %139 ], [ %119, %128 ], [ %119, %126 ], [ 1, %125 ], [ 1, %125 ], [ 1, %125 ], [ 1, %125 ], [ 1, %130 ], [ 1, %130 ], [ 1, %130 ], [ 1, %130 ], [ %119, %135 ], [ %119, %150 ]
  %148 = phi i8 [ 1, %137 ], [ %120, %139 ], [ 1, %128 ], [ %120, %126 ], [ %120, %125 ], [ %120, %125 ], [ %120, %125 ], [ %120, %125 ], [ %120, %130 ], [ %120, %130 ], [ %120, %130 ], [ %120, %130 ], [ 1, %135 ], [ 1, %150 ]
  %149 = phi i8 [ %121, %137 ], [ %121, %139 ], [ 1, %128 ], [ 1, %126 ], [ %121, %125 ], [ %121, %125 ], [ %121, %125 ], [ %121, %125 ], [ %121, %130 ], [ %121, %130 ], [ %121, %130 ], [ %121, %130 ], [ %121, %135 ], [ %121, %150 ]
  br label %117

150:                                              ; preds = %139
  %151 = icmp eq i8 %123, 46
  br i1 %151, label %145, label %152

152:                                              ; preds = %150
  store i8* %118, i8** @stdscan_bufptr, align 8
  %153 = icmp eq i8 %121, 0
  %154 = or i1 %124, %153
  %155 = icmp eq i8 %120, 0
  %156 = and i1 %155, %154
  %157 = ptrtoint i8* %118 to i64
  %158 = ptrtoint i8* %6 to i64
  %159 = sub i64 %157, %158
  %160 = shl i64 %159, 32
  %161 = add i64 %160, 4294967296
  %162 = ashr exact i64 %161, 32
  %163 = tail call noalias i8* @nasm_malloc(i64 %162) #8
  %164 = ashr exact i64 %160, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %163, i8* align 1 %6, i64 %164, i1 false) #7
  %165 = getelementptr inbounds i8, i8* %163, i64 %164
  store i8 0, i8* %165, align 1
  %166 = load i32, i32* @stdscan_templen, align 4
  %167 = load i32, i32* @stdscan_tempsize, align 4
  %168 = icmp slt i32 %166, %167
  br i1 %168, label %169, label %171

169:                                              ; preds = %152
  %170 = load i8**, i8*** @stdscan_tempstorage, align 8
  br label %179

171:                                              ; preds = %152
  %172 = add nsw i32 %167, 256
  store i32 %172, i32* @stdscan_tempsize, align 4
  %173 = load i8*, i8** bitcast (i8*** @stdscan_tempstorage to i8**), align 8
  %174 = sext i32 %172 to i64
  %175 = shl nsw i64 %174, 3
  %176 = tail call i8* @nasm_realloc(i8* %173, i64 %175) #9
  store i8* %176, i8** bitcast (i8*** @stdscan_tempstorage to i8**), align 8
  %177 = bitcast i8* %176 to i8**
  %178 = load i32, i32* @stdscan_templen, align 4
  br label %179

179:                                              ; preds = %169, %171
  %180 = phi i32 [ %166, %169 ], [ %178, %171 ]
  %181 = phi i8** [ %170, %169 ], [ %177, %171 ]
  %182 = add nsw i32 %180, 1
  store i32 %182, i32* @stdscan_templen, align 4
  %183 = sext i32 %180 to i64
  %184 = getelementptr inbounds i8*, i8** %181, i64 %183
  store i8* %163, i8** %184, align 8
  br i1 %156, label %185, label %196

185:                                              ; preds = %179
  %186 = call i64 @readnum(i8* %163, i8* nonnull %3) #7
  %187 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 1
  store i64 %186, i64* %187, align 8
  %188 = load i8**, i8*** @stdscan_tempstorage, align 8
  %189 = load i32, i32* @stdscan_templen, align 4
  %190 = add nsw i32 %189, -1
  store i32 %190, i32* @stdscan_templen, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds i8*, i8** %188, i64 %191
  %193 = load i8*, i8** %192, align 8
  call void @nasm_free(i8* %193) #7
  %194 = load i8, i8* %3, align 1, !range !3
  %195 = icmp eq i8 %194, 0
  br i1 %195, label %196, label %200

196:                                              ; preds = %185, %179
  %197 = phi i8* [ %163, %179 ], [ null, %185 ]
  %198 = phi i32 [ 261, %179 ], [ 257, %185 ]
  %199 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 0
  store i8* %197, i8** %199, align 8
  br label %200

200:                                              ; preds = %196, %185
  %201 = phi i32 [ 258, %185 ], [ %198, %196 ]
  %202 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 %201, i32* %202, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #7
  br label %395

203:                                              ; preds = %106
  switch i8 %7, label %390 [
    i8 39, label %204
    i8 34, label %204
    i8 96, label %204
    i8 123, label %216
    i8 59, label %298
    i8 62, label %300
    i8 60, label %312
    i8 47, label %322
    i8 37, label %329
    i8 61, label %336
    i8 33, label %346
    i8 124, label %383
    i8 38, label %369
    i8 94, label %376
  ]

204:                                              ; preds = %203, %203, %203
  %205 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 0
  store i8* %6, i8** %205, align 8
  %206 = tail call i64 @nasm_unquote(i8* %6, i8** nonnull @stdscan_bufptr) #7
  %207 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 2
  store i64 %206, i64* %207, align 8
  %208 = load i8*, i8** @stdscan_bufptr, align 8
  %209 = load i8, i8* %208, align 1
  %210 = icmp eq i8 %209, %7
  br i1 %210, label %213, label %211

211:                                              ; preds = %204
  %212 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 260, i32* %212, align 8
  br label %395

213:                                              ; preds = %204
  %214 = getelementptr inbounds i8, i8* %208, i64 1
  store i8* %214, i8** @stdscan_bufptr, align 8
  %215 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 259, i32* %215, align 8
  br label %395

216:                                              ; preds = %203
  %217 = tail call i8* @nasm_skip_spaces(i8* %6) #7
  %218 = getelementptr inbounds i8, i8* %217, i64 1
  br label %219

219:                                              ; preds = %219, %216
  %220 = phi i8* [ %218, %216 ], [ %227, %219 ]
  store i8* %220, i8** @stdscan_bufptr, align 8
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i64
  %223 = getelementptr inbounds [256 x i16], [256 x i16]* @nasm_ctype_tab, i64 0, i64 %222
  %224 = load i16, i16* %223, align 2
  %225 = and i16 %224, 640
  %226 = icmp eq i16 %225, 0
  %227 = getelementptr inbounds i8, i8* %220, i64 1
  br i1 %226, label %228, label %219

228:                                              ; preds = %219
  %229 = ptrtoint i8* %220 to i64
  %230 = ptrtoint i8* %218 to i64
  %231 = sub i64 %229, %230
  %232 = trunc i64 %231 to i32
  %233 = icmp slt i32 %232, 31
  %234 = select i1 %233, i32 %232, i32 31
  %235 = add nsw i32 %234, 1
  %236 = sext i32 %235 to i64
  %237 = tail call noalias i8* @nasm_malloc(i64 %236) #8
  %238 = sext i32 %234 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %237, i8* align 1 %218, i64 %238, i1 false) #7
  %239 = getelementptr inbounds i8, i8* %237, i64 %238
  store i8 0, i8* %239, align 1
  %240 = load i32, i32* @stdscan_templen, align 4
  %241 = load i32, i32* @stdscan_tempsize, align 4
  %242 = icmp slt i32 %240, %241
  br i1 %242, label %243, label %245

243:                                              ; preds = %228
  %244 = load i8**, i8*** @stdscan_tempstorage, align 8
  br label %253

245:                                              ; preds = %228
  %246 = add nsw i32 %241, 256
  store i32 %246, i32* @stdscan_tempsize, align 4
  %247 = load i8*, i8** bitcast (i8*** @stdscan_tempstorage to i8**), align 8
  %248 = sext i32 %246 to i64
  %249 = shl nsw i64 %248, 3
  %250 = tail call i8* @nasm_realloc(i8* %247, i64 %249) #9
  store i8* %250, i8** bitcast (i8*** @stdscan_tempstorage to i8**), align 8
  %251 = bitcast i8* %250 to i8**
  %252 = load i32, i32* @stdscan_templen, align 4
  br label %253

253:                                              ; preds = %243, %245
  %254 = phi i32 [ %240, %243 ], [ %252, %245 ]
  %255 = phi i8** [ %244, %243 ], [ %251, %245 ]
  %256 = add nsw i32 %254, 1
  store i32 %256, i32* @stdscan_templen, align 4
  %257 = sext i32 %254 to i64
  %258 = getelementptr inbounds i8*, i8** %255, i64 %257
  store i8* %237, i8** %258, align 8
  %259 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 0
  store i8* %237, i8** %259, align 8
  %260 = load i8*, i8** @stdscan_bufptr, align 8
  %261 = tail call i8* @nasm_skip_spaces(i8* %260) #7
  store i8* %261, i8** @stdscan_bufptr, align 8
  %262 = load i8, i8* %261, align 1
  %263 = icmp ne i8 %262, 125
  %264 = icmp sgt i32 %232, 17
  %265 = or i1 %264, %263
  br i1 %265, label %266, label %268

266:                                              ; preds = %253
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #7
  %267 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 -1, i32* %267, align 8
  br label %395

268:                                              ; preds = %253
  %269 = getelementptr inbounds i8, i8* %261, i64 1
  store i8* %269, i8** @stdscan_bufptr, align 8
  %270 = load i8*, i8** %259, align 8
  %271 = tail call i32 @nasm_token_hash(i8* %270, %struct.tokenval* %1) #7
  %272 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 4
  %273 = load i8, i8* %272, align 4
  %274 = sext i8 %273 to i32
  %275 = and i32 %274, 3
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %280

277:                                              ; preds = %268
  %278 = load i8*, i8** %259, align 8
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i8* %278) #7
  %279 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 -1, i32* %279, align 8
  br label %295

280:                                              ; preds = %268
  %281 = and i32 %274, 2
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %295, label %283

283:                                              ; preds = %280
  %284 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 1
  %285 = load i64, i64* %284, align 8
  %286 = add i64 %285, -1
  %287 = icmp ult i64 %286, 240
  br i1 %287, label %288, label %295

288:                                              ; preds = %283
  %289 = getelementptr inbounds [0 x i64], [0 x i64]* @nasm_reg_flags, i64 0, i64 %285
  %290 = load i64, i64* %289, align 8
  %291 = and i64 %290, 32773
  %292 = icmp eq i64 %291, 32773
  br i1 %292, label %293, label %295

293:                                              ; preds = %288
  %294 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 289, i32* %294, align 8
  br label %295

295:                                              ; preds = %277, %280, %283, %288, %293
  %296 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  %297 = load i32, i32* %296, align 8
  br label %395

298:                                              ; preds = %203
  %299 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 0, i32* %299, align 8
  br label %395

300:                                              ; preds = %203
  %301 = getelementptr inbounds i8, i8* %6, i64 1
  %302 = load i8, i8* %301, align 1
  switch i8 %302, label %390 [
    i8 62, label %303
    i8 61, label %366
  ]

303:                                              ; preds = %300
  %304 = getelementptr inbounds i8, i8* %6, i64 2
  %305 = load i8, i8* %304, align 1
  %306 = icmp eq i8 %305, 62
  br i1 %306, label %307, label %310

307:                                              ; preds = %303
  %308 = getelementptr inbounds i8, i8* %6, i64 3
  store i8* %308, i8** @stdscan_bufptr, align 8
  %309 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 271, i32* %309, align 8
  br label %395

310:                                              ; preds = %303
  store i8* %304, i8** @stdscan_bufptr, align 8
  %311 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 270, i32* %311, align 8
  br label %395

312:                                              ; preds = %203
  %313 = getelementptr inbounds i8, i8* %6, i64 1
  %314 = load i8, i8* %313, align 1
  switch i8 %314, label %353 [
    i8 60, label %315
    i8 62, label %343
  ]

315:                                              ; preds = %312
  %316 = getelementptr inbounds i8, i8* %6, i64 2
  %317 = load i8, i8* %316, align 1
  %318 = icmp eq i8 %317, 60
  %319 = select i1 %318, i64 3, i64 2
  %320 = getelementptr inbounds i8, i8* %6, i64 %319
  store i8* %320, i8** @stdscan_bufptr, align 8
  %321 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 269, i32* %321, align 8
  br label %395

322:                                              ; preds = %203
  %323 = getelementptr inbounds i8, i8* %6, i64 1
  %324 = load i8, i8* %323, align 1
  %325 = icmp eq i8 %324, 47
  br i1 %325, label %326, label %390

326:                                              ; preds = %322
  %327 = getelementptr inbounds i8, i8* %6, i64 2
  store i8* %327, i8** @stdscan_bufptr, align 8
  %328 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 272, i32* %328, align 8
  br label %395

329:                                              ; preds = %203
  %330 = getelementptr inbounds i8, i8* %6, i64 1
  %331 = load i8, i8* %330, align 1
  %332 = icmp eq i8 %331, 37
  br i1 %332, label %333, label %390

333:                                              ; preds = %329
  %334 = getelementptr inbounds i8, i8* %6, i64 2
  store i8* %334, i8** @stdscan_bufptr, align 8
  %335 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 273, i32* %335, align 8
  br label %395

336:                                              ; preds = %203
  %337 = getelementptr inbounds i8, i8* %6, i64 1
  %338 = load i8, i8* %337, align 1
  %339 = icmp eq i8 %338, 61
  br i1 %339, label %340, label %390

340:                                              ; preds = %336
  %341 = getelementptr inbounds i8, i8* %6, i64 2
  store i8* %341, i8** @stdscan_bufptr, align 8
  %342 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 61, i32* %342, align 8
  br label %395

343:                                              ; preds = %312
  %344 = getelementptr inbounds i8, i8* %6, i64 2
  store i8* %344, i8** @stdscan_bufptr, align 8
  %345 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 276, i32* %345, align 8
  br label %395

346:                                              ; preds = %203
  %347 = getelementptr inbounds i8, i8* %6, i64 1
  %348 = load i8, i8* %347, align 1
  %349 = icmp eq i8 %348, 61
  br i1 %349, label %350, label %390

350:                                              ; preds = %346
  %351 = getelementptr inbounds i8, i8* %6, i64 2
  store i8* %351, i8** @stdscan_bufptr, align 8
  %352 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 276, i32* %352, align 8
  br label %395

353:                                              ; preds = %312
  %354 = getelementptr inbounds i8, i8* %6, i64 1
  %355 = load i8, i8* %354, align 1
  %356 = icmp eq i8 %355, 61
  br i1 %356, label %357, label %390

357:                                              ; preds = %353
  %358 = getelementptr inbounds i8, i8* %6, i64 2
  %359 = load i8, i8* %358, align 1
  %360 = icmp eq i8 %359, 62
  br i1 %360, label %361, label %364

361:                                              ; preds = %357
  %362 = getelementptr inbounds i8, i8* %6, i64 3
  store i8* %362, i8** @stdscan_bufptr, align 8
  %363 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 277, i32* %363, align 8
  br label %395

364:                                              ; preds = %357
  store i8* %358, i8** @stdscan_bufptr, align 8
  %365 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 275, i32* %365, align 8
  br label %395

366:                                              ; preds = %300
  %367 = getelementptr inbounds i8, i8* %6, i64 2
  store i8* %367, i8** @stdscan_bufptr, align 8
  %368 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 274, i32* %368, align 8
  br label %395

369:                                              ; preds = %203
  %370 = getelementptr inbounds i8, i8* %6, i64 1
  %371 = load i8, i8* %370, align 1
  %372 = icmp eq i8 %371, 38
  br i1 %372, label %373, label %390

373:                                              ; preds = %369
  %374 = getelementptr inbounds i8, i8* %6, i64 2
  store i8* %374, i8** @stdscan_bufptr, align 8
  %375 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 278, i32* %375, align 8
  br label %395

376:                                              ; preds = %203
  %377 = getelementptr inbounds i8, i8* %6, i64 1
  %378 = load i8, i8* %377, align 1
  %379 = icmp eq i8 %378, 94
  br i1 %379, label %380, label %390

380:                                              ; preds = %376
  %381 = getelementptr inbounds i8, i8* %6, i64 2
  store i8* %381, i8** @stdscan_bufptr, align 8
  %382 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 280, i32* %382, align 8
  br label %395

383:                                              ; preds = %203
  %384 = getelementptr inbounds i8, i8* %6, i64 1
  %385 = load i8, i8* %384, align 1
  %386 = icmp eq i8 %385, 124
  br i1 %386, label %387, label %390

387:                                              ; preds = %383
  %388 = getelementptr inbounds i8, i8* %6, i64 2
  store i8* %388, i8** @stdscan_bufptr, align 8
  %389 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 279, i32* %389, align 8
  br label %395

390:                                              ; preds = %300, %203, %353, %346, %322, %336, %329, %369, %376, %383
  %391 = getelementptr inbounds i8, i8* %6, i64 1
  store i8* %391, i8** @stdscan_bufptr, align 8
  %392 = load i8, i8* %6, align 1
  %393 = zext i8 %392 to i32
  %394 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %1, i64 0, i32 3
  store i32 %393, i32* %394, align 8
  br label %395

395:                                              ; preds = %266, %295, %211, %213, %78, %93, %89, %390, %387, %380, %373, %366, %364, %361, %350, %343, %340, %333, %326, %315, %310, %307, %298, %200, %104, %101, %9
  %396 = phi i32 [ %201, %200 ], [ 0, %298 ], [ 271, %307 ], [ 270, %310 ], [ 269, %315 ], [ 272, %326 ], [ 273, %333 ], [ 61, %340 ], [ 276, %343 ], [ 276, %350 ], [ 277, %361 ], [ 275, %364 ], [ 274, %366 ], [ 278, %373 ], [ 280, %380 ], [ 279, %387 ], [ %393, %390 ], [ 265, %101 ], [ 264, %104 ], [ 0, %9 ], [ 256, %78 ], [ 256, %93 ], [ %81, %89 ], [ 260, %211 ], [ 259, %213 ], [ -1, %266 ], [ %297, %295 ]
  ret i32 %396
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare i8* @nasm_skip_spaces(i8*) local_unnamed_addr #3

declare i32 @nasm_token_hash(i8*, %struct.tokenval*) local_unnamed_addr #3

declare void @nasm_warn(i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare i64 @readnum(i8*, i8*) local_unnamed_addr #3

declare i64 @nasm_unquote(i8*, i8**) local_unnamed_addr #3

declare void @nasm_nonfatal(i8*, ...) local_unnamed_addr #3

; Function Attrs: allocsize(0)
declare noalias i8* @nasm_malloc(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: allocsize(1)
declare i8* @nasm_realloc(i8*, i64) local_unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { allocsize(1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind allocsize(0) }
attributes #9 = { nounwind allocsize(1) }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
