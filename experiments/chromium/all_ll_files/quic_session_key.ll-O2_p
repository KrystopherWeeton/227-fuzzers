; ModuleID = '../../net/quic/quic_session_key.cc'
source_filename = "../../net/quic/quic_session_key.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.net::QuicSessionKey" = type <{ %"class.quic::QuicServerId", %"class.net::SocketTag", [7 x i8], %"class.net::NetworkIsolationKey", i32, [4 x i8] }>
%"class.quic::QuicServerId" = type <{ %"class.std::__1::basic_string", i16, i8, [5 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::SocketTag" = type { i8 }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.2" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.2" = type { %"class.absl::optional_internal::optional_data.3" }
%"class.absl::optional_internal::optional_data.3" = type { %"class.absl::optional_internal::optional_data_base.4" }
%"class.absl::optional_internal::optional_data_base.4" = type { %"class.absl::optional_internal::optional_data_dtor_base.5" }
%"class.absl::optional_internal::optional_data_dtor_base.5" = type { i8, %union.anon.6 }
%union.anon.6 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::__tuple_less.10" = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.7", %"class.std::__1::__tuple_leaf.8", %"class.std::__1::__tuple_leaf.9" }
%"class.std::__1::__tuple_leaf" = type { %"class.quic::QuicServerId"* }
%"class.std::__1::__tuple_leaf.7" = type { %"class.net::SocketTag"* }
%"class.std::__1::__tuple_leaf.8" = type { %"class.net::NetworkIsolationKey"* }
%"class.std::__1::__tuple_leaf.9" = type { i32* }
%"class.std::__1::tuple.13" = type { %"struct.std::__1::__tuple_impl.14" }
%"struct.std::__1::__tuple_impl.14" = type { %"class.std::__1::__tuple_leaf.15", %"class.std::__1::__tuple_leaf.16", %"class.std::__1::__tuple_leaf.17" }
%"class.std::__1::__tuple_leaf.15" = type { %"class.absl::optional"* }
%"class.std::__1::__tuple_leaf.16" = type { %"class.absl::optional"* }
%"class.std::__1::__tuple_leaf.17" = type { i8* }

$_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4quic12QuicServerIdERKN3net9SocketTagERKNS8_19NetworkIsolationKeyERKNS8_15SecureDnsPolicyEEEESI_EEbRKT_RKT0_ = comdat any

$_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_ = comdat any

@_ZN3net8features42kPartitionConnectionsByNetworkIsolationKeyE = external global %"struct.base::Feature", align 8

@_ZN3net14QuicSessionKeyC1Ev = hidden unnamed_addr alias void (%"class.net::QuicSessionKey"*), void (%"class.net::QuicSessionKey"*)* @_ZN3net14QuicSessionKeyC2Ev
@_ZN3net14QuicSessionKeyC1ERKNS_12HostPortPairENS_11PrivacyModeERKNS_9SocketTagERKNS_19NetworkIsolationKeyENS_15SecureDnsPolicyE = hidden unnamed_addr alias void (%"class.net::QuicSessionKey"*, %"class.net::HostPortPair"*, i32, %"class.net::SocketTag"*, %"class.net::NetworkIsolationKey"*, i32), void (%"class.net::QuicSessionKey"*, %"class.net::HostPortPair"*, i32, %"class.net::SocketTag"*, %"class.net::NetworkIsolationKey"*, i32)* @_ZN3net14QuicSessionKeyC2ERKNS_12HostPortPairENS_11PrivacyModeERKNS_9SocketTagERKNS_19NetworkIsolationKeyENS_15SecureDnsPolicyE
@_ZN3net14QuicSessionKeyC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEtNS_11PrivacyModeERKNS_9SocketTagERKNS_19NetworkIsolationKeyENS_15SecureDnsPolicyE = hidden unnamed_addr alias void (%"class.net::QuicSessionKey"*, %"class.std::__1::basic_string"*, i16, i32, %"class.net::SocketTag"*, %"class.net::NetworkIsolationKey"*, i32), void (%"class.net::QuicSessionKey"*, %"class.std::__1::basic_string"*, i16, i32, %"class.net::SocketTag"*, %"class.net::NetworkIsolationKey"*, i32)* @_ZN3net14QuicSessionKeyC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEtNS_11PrivacyModeERKNS_9SocketTagERKNS_19NetworkIsolationKeyENS_15SecureDnsPolicyE
@_ZN3net14QuicSessionKeyC1ERKN4quic12QuicServerIdERKNS_9SocketTagERKNS_19NetworkIsolationKeyENS_15SecureDnsPolicyE = hidden unnamed_addr alias void (%"class.net::QuicSessionKey"*, %"class.quic::QuicServerId"*, %"class.net::SocketTag"*, %"class.net::NetworkIsolationKey"*, i32), void (%"class.net::QuicSessionKey"*, %"class.quic::QuicServerId"*, %"class.net::SocketTag"*, %"class.net::NetworkIsolationKey"*, i32)* @_ZN3net14QuicSessionKeyC2ERKN4quic12QuicServerIdERKNS_9SocketTagERKNS_19NetworkIsolationKeyENS_15SecureDnsPolicyE
@_ZN3net14QuicSessionKeyC1ERKS0_ = hidden unnamed_addr alias void (%"class.net::QuicSessionKey"*, %"class.net::QuicSessionKey"*), void (%"class.net::QuicSessionKey"*, %"class.net::QuicSessionKey"*)* @_ZN3net14QuicSessionKeyC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14QuicSessionKeyC2Ev(%"class.net::QuicSessionKey"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 0
  tail call void @_ZN4quic12QuicServerIdC1Ev(%"class.quic::QuicServerId"* %2) #5
  %3 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 3
  tail call void @_ZN3net19NetworkIsolationKeyC1Ev(%"class.net::NetworkIsolationKey"* %3) #5
  ret void
}

declare void @_ZN4quic12QuicServerIdC1Ev(%"class.quic::QuicServerId"*) unnamed_addr #1

declare void @_ZN3net19NetworkIsolationKeyC1Ev(%"class.net::NetworkIsolationKey"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14QuicSessionKeyC2ERKNS_12HostPortPairENS_11PrivacyModeERKNS_9SocketTagERKNS_19NetworkIsolationKeyENS_15SecureDnsPolicyE(%"class.net::QuicSessionKey"*, %"class.net::HostPortPair"* dereferenceable(32), i32, %"class.net::SocketTag"* nocapture readnone dereferenceable(1), %"class.net::NetworkIsolationKey"* dereferenceable(184), i32) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 0, i32 0
  %8 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 0, i32 1
  %9 = load i16, i16* %8, align 8
  tail call void @_ZN3net14QuicSessionKeyC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEtNS_11PrivacyModeERKNS_9SocketTagERKNS_19NetworkIsolationKeyENS_15SecureDnsPolicyE(%"class.net::QuicSessionKey"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %7, i16 zeroext %9, i32 %2, %"class.net::SocketTag"* dereferenceable(1) %3, %"class.net::NetworkIsolationKey"* dereferenceable(184) %4, i32 %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14QuicSessionKeyC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEtNS_11PrivacyModeERKNS_9SocketTagERKNS_19NetworkIsolationKeyENS_15SecureDnsPolicyE(%"class.net::QuicSessionKey"*, %"class.std::__1::basic_string"* dereferenceable(24), i16 zeroext, i32, %"class.net::SocketTag"* nocapture readnone dereferenceable(1), %"class.net::NetworkIsolationKey"* dereferenceable(184), i32) unnamed_addr #0 align 2 {
  %8 = alloca %"class.quic::QuicServerId", align 8
  %9 = bitcast %"class.quic::QuicServerId"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #5
  %10 = add i32 %3, -1
  %11 = icmp ult i32 %10, 2
  call void @_ZN4quic12QuicServerIdC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEtb(%"class.quic::QuicServerId"* nonnull %8, %"class.std::__1::basic_string"* dereferenceable(24) %1, i16 zeroext %2, i1 zeroext %11) #5
  %12 = bitcast %"class.quic::QuicServerId"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %7
  %17 = bitcast %"class.net::QuicSessionKey"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* nonnull align 8 %9, i64 24, i1 false) #5
  br label %24

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %19, i8* %21, i64 %23) #5
  br label %24

24:                                               ; preds = %18, %16
  %25 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %8, i64 0, i32 1
  %27 = bitcast i16* %25 to i8*
  %28 = bitcast i16* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 3, i1 false) #5
  %29 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 3
  %30 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features42kPartitionConnectionsByNetworkIsolationKeyE) #5
  br i1 %30, label %31, label %32

31:                                               ; preds = %24
  call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %29, %"class.net::NetworkIsolationKey"* dereferenceable(184) %5) #5
  br label %33

32:                                               ; preds = %24
  call void @_ZN3net19NetworkIsolationKeyC1Ev(%"class.net::NetworkIsolationKey"* %29) #5
  br label %33

33:                                               ; preds = %31, %32
  %34 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 4
  store i32 %6, i32* %34, align 8
  call void @_ZN4quic12QuicServerIdD1Ev(%"class.quic::QuicServerId"* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4quic12QuicServerIdC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEtb(%"class.quic::QuicServerId"*, %"class.std::__1::basic_string"* dereferenceable(24), i16 zeroext, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14QuicSessionKeyC2ERKN4quic12QuicServerIdERKNS_9SocketTagERKNS_19NetworkIsolationKeyENS_15SecureDnsPolicyE(%"class.net::QuicSessionKey"*, %"class.quic::QuicServerId"* nocapture readonly dereferenceable(32), %"class.net::SocketTag"* nocapture readnone dereferenceable(1), %"class.net::NetworkIsolationKey"* dereferenceable(184), i32) unnamed_addr #0 align 2 {
  %6 = bitcast %"class.quic::QuicServerId"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.net::QuicSessionKey"* %0 to i8*
  %12 = bitcast %"class.quic::QuicServerId"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #5
  br label %19

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %14, i8* %16, i64 %18) #5
  br label %19

19:                                               ; preds = %10, %13
  %20 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %1, i64 0, i32 1
  %22 = bitcast i16* %20 to i8*
  %23 = bitcast i16* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 3, i1 false) #5
  %24 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 3
  %25 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features42kPartitionConnectionsByNetworkIsolationKeyE) #5
  br i1 %25, label %26, label %27

26:                                               ; preds = %19
  tail call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %24, %"class.net::NetworkIsolationKey"* dereferenceable(184) %3) #5
  br label %28

27:                                               ; preds = %19
  tail call void @_ZN3net19NetworkIsolationKeyC1Ev(%"class.net::NetworkIsolationKey"* %24) #5
  br label %28

28:                                               ; preds = %27, %26
  %29 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 4
  store i32 %4, i32* %29, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4quic12QuicServerIdD1Ev(%"class.quic::QuicServerId"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"* dereferenceable(184)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14QuicSessionKeyC2ERKS0_(%"class.net::QuicSessionKey"*, %"class.net::QuicSessionKey"* dereferenceable(232)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::QuicSessionKey"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.net::QuicSessionKey"* %0 to i8*
  %9 = bitcast %"class.net::QuicSessionKey"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #5
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #5
  br label %16

16:                                               ; preds = %7, %10
  %17 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 0, i32 1
  %19 = bitcast i16* %17 to i8*
  %20 = bitcast i16* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 3, i1 false) #5
  %21 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 3
  %22 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 3
  tail call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %21, %"class.net::NetworkIsolationKey"* dereferenceable(184) %22) #5
  %23 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 4
  %24 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  store i32 %25, i32* %23, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net14QuicSessionKeyltERKS0_(%"class.net::QuicSessionKey"*, %"class.net::QuicSessionKey"* dereferenceable(232)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::__tuple_less.10", align 1
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.quic::QuicServerId"* %7, %"class.quic::QuicServerId"** %11, align 8, !alias.scope !2
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 1, i32 0
  store %"class.net::SocketTag"* %8, %"class.net::SocketTag"** %12, align 8, !alias.scope !2
  %13 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 2, i32 0
  store %"class.net::NetworkIsolationKey"* %9, %"class.net::NetworkIsolationKey"** %13, align 8, !alias.scope !2
  %14 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 3, i32 0
  store i32* %10, i32** %14, align 8, !alias.scope !2
  %15 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #5
  %16 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 0
  %17 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 1
  %18 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 3
  %19 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 4
  %20 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.quic::QuicServerId"* %16, %"class.quic::QuicServerId"** %20, align 8, !alias.scope !5
  %21 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.net::SocketTag"* %17, %"class.net::SocketTag"** %21, align 8, !alias.scope !5
  %22 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 2, i32 0
  store %"class.net::NetworkIsolationKey"* %18, %"class.net::NetworkIsolationKey"** %22, align 8, !alias.scope !5
  %23 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 3, i32 0
  store i32* %19, i32** %23, align 8, !alias.scope !5
  %24 = tail call zeroext i1 @_ZNK4quic12QuicServerIdltERKS0_(%"class.quic::QuicServerId"* %7, %"class.quic::QuicServerId"* dereferenceable(32) %16) #5
  br i1 %24, label %30, label %25

25:                                               ; preds = %2
  %26 = tail call zeroext i1 @_ZNK4quic12QuicServerIdltERKS0_(%"class.quic::QuicServerId"* %16, %"class.quic::QuicServerId"* dereferenceable(32) %7) #5
  br i1 %26, label %30, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"struct.std::__1::__tuple_less.10", %"struct.std::__1::__tuple_less.10"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %28) #5
  %29 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4quic12QuicServerIdERKN3net9SocketTagERKNS8_19NetworkIsolationKeyERKNS8_15SecureDnsPolicyEEEESI_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.10"* nonnull %3, %"class.std::__1::tuple"* nonnull dereferenceable(32) %4, %"class.std::__1::tuple"* nonnull dereferenceable(32) %5) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %28) #5
  br label %30

30:                                               ; preds = %2, %25, %27
  %31 = phi i1 [ %29, %27 ], [ true, %2 ], [ false, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #5
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net14QuicSessionKeyeqERKS0_(%"class.net::QuicSessionKey"*, %"class.net::QuicSessionKey"* dereferenceable(232)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK4quic12QuicServerIdeqERKS0_(%"class.quic::QuicServerId"* %3, %"class.quic::QuicServerId"* dereferenceable(32) %4) #5
  br i1 %5, label %6, label %58

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 1
  %9 = tail call zeroext i1 @_ZNK3net9SocketTageqERKS0_(%"class.net::SocketTag"* %7, %"class.net::SocketTag"* dereferenceable(1) %8) #5
  br i1 %9, label %10, label %58

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 3, i32 0
  %12 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 3, i32 0
  %13 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !8
  %15 = icmp ne i8 %14, 0
  %16 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !8
  %18 = icmp ne i8 %17, 0
  %19 = xor i1 %15, %18
  %20 = xor i1 %15, true
  %21 = or i1 %19, %20
  br i1 %21, label %29, label %22

22:                                               ; preds = %10
  %23 = icmp eq i8 %17, 0
  br i1 %23, label %24, label %25, !prof !9

24:                                               ; preds = %22
  tail call void @llvm.trap() #5
  unreachable

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %28 = tail call zeroext i1 @_ZNK3net13SchemefulSiteeqERKS0_(%"class.net::SchemefulSite"* %26, %"class.net::SchemefulSite"* dereferenceable(80) %27) #5
  br i1 %28, label %30, label %58

29:                                               ; preds = %10
  br i1 %19, label %58, label %30

30:                                               ; preds = %29, %25
  %31 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0
  %32 = load i8, i8* %31, align 8, !range !8
  %33 = icmp ne i8 %32, 0
  %34 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0
  %35 = load i8, i8* %34, align 8, !range !8
  %36 = icmp ne i8 %35, 0
  %37 = xor i1 %33, %36
  %38 = xor i1 %33, true
  %39 = or i1 %37, %38
  br i1 %39, label %47, label %40

40:                                               ; preds = %30
  %41 = icmp eq i8 %35, 0
  br i1 %41, label %42, label %43, !prof !9

42:                                               ; preds = %40
  tail call void @llvm.trap() #5
  unreachable

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %46 = tail call zeroext i1 @_ZNK3net13SchemefulSiteeqERKS0_(%"class.net::SchemefulSite"* %44, %"class.net::SchemefulSite"* dereferenceable(80) %45) #5
  br i1 %46, label %48, label %58

47:                                               ; preds = %30
  br i1 %37, label %58, label %48

48:                                               ; preds = %43, %47
  %49 = load i8, i8* %11, align 1, !range !8
  %50 = load i8, i8* %12, align 1, !range !8
  %51 = icmp eq i8 %49, %50
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 4
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 4
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %54, %56
  br label %58

58:                                               ; preds = %25, %29, %43, %47, %52, %48, %6, %2
  %59 = phi i1 [ false, %48 ], [ false, %6 ], [ false, %2 ], [ %57, %52 ], [ false, %47 ], [ false, %43 ], [ false, %29 ], [ false, %25 ]
  ret i1 %59
}

declare zeroext i1 @_ZNK4quic12QuicServerIdeqERKS0_(%"class.quic::QuicServerId"*, %"class.quic::QuicServerId"* dereferenceable(32)) local_unnamed_addr #1

declare zeroext i1 @_ZNK3net9SocketTageqERKS0_(%"class.net::SocketTag"*, %"class.net::SocketTag"* dereferenceable(1)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net14QuicSessionKey17CanUseForAliasingERKS0_(%"class.net::QuicSessionKey"*, %"class.net::QuicSessionKey"* dereferenceable(232)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 0, i32 2
  %4 = load i8, i8* %3, align 2, !range !8
  %5 = icmp ne i8 %4, 0
  %6 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 0, i32 2
  %7 = load i8, i8* %6, align 2, !range !8
  %8 = icmp ne i8 %7, 0
  %9 = xor i1 %5, %8
  br i1 %9, label %62, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 1
  %13 = tail call zeroext i1 @_ZNK3net9SocketTageqERKS0_(%"class.net::SocketTag"* %11, %"class.net::SocketTag"* dereferenceable(1) %12) #5
  br i1 %13, label %14, label %62

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 3, i32 0
  %16 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 3, i32 0
  %17 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 8, !range !8
  %19 = icmp ne i8 %18, 0
  %20 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 8, !range !8
  %22 = icmp ne i8 %21, 0
  %23 = xor i1 %19, %22
  %24 = xor i1 %19, true
  %25 = or i1 %23, %24
  br i1 %25, label %33, label %26

26:                                               ; preds = %14
  %27 = icmp eq i8 %21, 0
  br i1 %27, label %28, label %29, !prof !9

28:                                               ; preds = %26
  tail call void @llvm.trap() #5
  unreachable

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %32 = tail call zeroext i1 @_ZNK3net13SchemefulSiteeqERKS0_(%"class.net::SchemefulSite"* %30, %"class.net::SchemefulSite"* dereferenceable(80) %31) #5
  br i1 %32, label %34, label %62

33:                                               ; preds = %14
  br i1 %23, label %62, label %34

34:                                               ; preds = %33, %29
  %35 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !8
  %37 = icmp ne i8 %36, 0
  %38 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 8, !range !8
  %40 = icmp ne i8 %39, 0
  %41 = xor i1 %37, %40
  %42 = xor i1 %37, true
  %43 = or i1 %41, %42
  br i1 %43, label %51, label %44

44:                                               ; preds = %34
  %45 = icmp eq i8 %39, 0
  br i1 %45, label %46, label %47, !prof !9

46:                                               ; preds = %44
  tail call void @llvm.trap() #5
  unreachable

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %50 = tail call zeroext i1 @_ZNK3net13SchemefulSiteeqERKS0_(%"class.net::SchemefulSite"* %48, %"class.net::SchemefulSite"* dereferenceable(80) %49) #5
  br i1 %50, label %52, label %62

51:                                               ; preds = %34
  br i1 %41, label %62, label %52

52:                                               ; preds = %47, %51
  %53 = load i8, i8* %15, align 1, !range !8
  %54 = load i8, i8* %16, align 1, !range !8
  %55 = icmp eq i8 %53, %54
  br i1 %55, label %56, label %62

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %0, i64 0, i32 4
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %"class.net::QuicSessionKey", %"class.net::QuicSessionKey"* %1, i64 0, i32 4
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %58, %60
  br label %62

62:                                               ; preds = %29, %33, %47, %51, %2, %56, %52, %10
  %63 = phi i1 [ false, %52 ], [ false, %10 ], [ false, %2 ], [ %61, %56 ], [ false, %51 ], [ false, %47 ], [ false, %33 ], [ false, %29 ]
  ret i1 %63
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZNK4quic12QuicServerIdltERKS0_(%"class.quic::QuicServerId"*, %"class.quic::QuicServerId"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4quic12QuicServerIdERKN3net9SocketTagERKNS8_19NetworkIsolationKeyERKNS8_15SecureDnsPolicyEEEESI_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.10"*, %"class.std::__1::tuple"* dereferenceable(32), %"class.std::__1::tuple"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__tuple_less.10", align 1
  %5 = alloca %"class.std::__1::tuple.13", align 8
  %6 = alloca %"class.std::__1::tuple.13", align 8
  %7 = alloca %"struct.std::__1::__tuple_less.10", align 1
  %8 = alloca %"class.std::__1::tuple.13", align 8
  %9 = alloca %"class.std::__1::tuple.13", align 8
  %10 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 1, i32 0
  %11 = load %"class.net::SocketTag"*, %"class.net::SocketTag"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 1, i32 0
  %13 = load %"class.net::SocketTag"*, %"class.net::SocketTag"** %12, align 8
  %14 = tail call zeroext i1 @_ZNK3net9SocketTagltERKS0_(%"class.net::SocketTag"* %11, %"class.net::SocketTag"* dereferenceable(1) %13) #5
  br i1 %14, label %67, label %15

15:                                               ; preds = %3
  %16 = load %"class.net::SocketTag"*, %"class.net::SocketTag"** %12, align 8
  %17 = load %"class.net::SocketTag"*, %"class.net::SocketTag"** %10, align 8
  %18 = tail call zeroext i1 @_ZNK3net9SocketTagltERKS0_(%"class.net::SocketTag"* %16, %"class.net::SocketTag"* dereferenceable(1) %17) #5
  br i1 %18, label %67, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 2, i32 0
  %21 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 2, i32 0
  %23 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %22, align 8
  %24 = bitcast %"class.std::__1::tuple.13"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #5
  %25 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %21, i64 0, i32 1
  %26 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %21, i64 0, i32 2
  %27 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %21, i64 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::tuple.13", %"class.std::__1::tuple.13"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional"* %25, %"class.absl::optional"** %28, align 8, !alias.scope !10
  %29 = getelementptr inbounds %"class.std::__1::tuple.13", %"class.std::__1::tuple.13"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %26, %"class.absl::optional"** %29, align 8, !alias.scope !10
  %30 = getelementptr inbounds %"class.std::__1::tuple.13", %"class.std::__1::tuple.13"* %5, i64 0, i32 0, i32 2, i32 0
  store i8* %27, i8** %30, align 8, !alias.scope !10
  %31 = bitcast %"class.std::__1::tuple.13"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #5
  %32 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %23, i64 0, i32 1
  %33 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %23, i64 0, i32 2
  %34 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %23, i64 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::tuple.13", %"class.std::__1::tuple.13"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional"* %32, %"class.absl::optional"** %35, align 8, !alias.scope !13
  %36 = getelementptr inbounds %"class.std::__1::tuple.13", %"class.std::__1::tuple.13"* %6, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %33, %"class.absl::optional"** %36, align 8, !alias.scope !13
  %37 = getelementptr inbounds %"class.std::__1::tuple.13", %"class.std::__1::tuple.13"* %6, i64 0, i32 0, i32 2, i32 0
  store i8* %34, i8** %37, align 8, !alias.scope !13
  %38 = getelementptr inbounds %"struct.std::__1::__tuple_less.10", %"struct.std::__1::__tuple_less.10"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %38) #5
  %39 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.10"* nonnull %4, %"class.std::__1::tuple.13"* nonnull dereferenceable(24) %5, %"class.std::__1::tuple.13"* nonnull dereferenceable(24) %6) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %38) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #5
  br i1 %39, label %67, label %40

40:                                               ; preds = %19
  %41 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %22, align 8
  %42 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %20, align 8
  %43 = bitcast %"class.std::__1::tuple.13"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #5
  %44 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %41, i64 0, i32 1
  %45 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %41, i64 0, i32 2
  %46 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %41, i64 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::tuple.13", %"class.std::__1::tuple.13"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional"* %44, %"class.absl::optional"** %47, align 8, !alias.scope !16
  %48 = getelementptr inbounds %"class.std::__1::tuple.13", %"class.std::__1::tuple.13"* %8, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %45, %"class.absl::optional"** %48, align 8, !alias.scope !16
  %49 = getelementptr inbounds %"class.std::__1::tuple.13", %"class.std::__1::tuple.13"* %8, i64 0, i32 0, i32 2, i32 0
  store i8* %46, i8** %49, align 8, !alias.scope !16
  %50 = bitcast %"class.std::__1::tuple.13"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #5
  %51 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %42, i64 0, i32 1
  %52 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %42, i64 0, i32 2
  %53 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %42, i64 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::tuple.13", %"class.std::__1::tuple.13"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional"* %51, %"class.absl::optional"** %54, align 8, !alias.scope !19
  %55 = getelementptr inbounds %"class.std::__1::tuple.13", %"class.std::__1::tuple.13"* %9, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %52, %"class.absl::optional"** %55, align 8, !alias.scope !19
  %56 = getelementptr inbounds %"class.std::__1::tuple.13", %"class.std::__1::tuple.13"* %9, i64 0, i32 0, i32 2, i32 0
  store i8* %53, i8** %56, align 8, !alias.scope !19
  %57 = getelementptr inbounds %"struct.std::__1::__tuple_less.10", %"struct.std::__1::__tuple_less.10"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %57) #5
  %58 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.10"* nonnull %7, %"class.std::__1::tuple.13"* nonnull dereferenceable(24) %8, %"class.std::__1::tuple.13"* nonnull dereferenceable(24) %9) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %57) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #5
  br i1 %58, label %67, label %59

59:                                               ; preds = %40
  %60 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 3, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 3, i32 0
  %64 = load i32*, i32** %63, align 8
  %65 = load i32, i32* %64, align 4
  %66 = icmp slt i32 %62, %65
  br label %67

67:                                               ; preds = %59, %40, %19, %15, %3
  %68 = phi i1 [ true, %3 ], [ false, %15 ], [ %66, %59 ], [ true, %19 ], [ false, %40 ]
  ret i1 %68
}

declare zeroext i1 @_ZNK3net9SocketTagltERKS0_(%"class.net::SocketTag"*, %"class.net::SocketTag"* dereferenceable(1)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.10"*, %"class.std::__1::tuple.13"* dereferenceable(24), %"class.std::__1::tuple.13"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::tuple.13", %"class.std::__1::tuple.13"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.absl::optional"*, %"class.absl::optional"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::tuple.13", %"class.std::__1::tuple.13"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.absl::optional"*, %"class.absl::optional"** %6, align 8
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %77, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %16, %"class.net::SchemefulSite"* dereferenceable(80) %17) #5
  br i1 %18, label %77, label %19

19:                                               ; preds = %15
  %20 = load %"class.absl::optional"*, %"class.absl::optional"** %6, align 8
  %21 = load %"class.absl::optional"*, %"class.absl::optional"** %4, align 8
  br label %22

22:                                               ; preds = %19, %3
  %23 = phi %"class.absl::optional"* [ %21, %19 ], [ %5, %3 ]
  %24 = phi %"class.absl::optional"* [ %20, %19 ], [ %7, %3 ]
  %25 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !8
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8, i8* %29, align 8, !range !8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %77, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %35 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %33, %"class.net::SchemefulSite"* dereferenceable(80) %34) #5
  br i1 %35, label %77, label %36

36:                                               ; preds = %22, %32
  %37 = getelementptr inbounds %"class.std::__1::tuple.13", %"class.std::__1::tuple.13"* %1, i64 0, i32 0, i32 1, i32 0
  %38 = load %"class.absl::optional"*, %"class.absl::optional"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::tuple.13", %"class.std::__1::tuple.13"* %2, i64 0, i32 0, i32 1, i32 0
  %40 = load %"class.absl::optional"*, %"class.absl::optional"** %39, align 8
  %41 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 8, !range !8
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %55, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 8, !range !8
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %77, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %40, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %51 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %49, %"class.net::SchemefulSite"* dereferenceable(80) %50) #5
  br i1 %51, label %77, label %52

52:                                               ; preds = %48
  %53 = load %"class.absl::optional"*, %"class.absl::optional"** %39, align 8
  %54 = load %"class.absl::optional"*, %"class.absl::optional"** %37, align 8
  br label %55

55:                                               ; preds = %52, %36
  %56 = phi %"class.absl::optional"* [ %54, %52 ], [ %38, %36 ]
  %57 = phi %"class.absl::optional"* [ %53, %52 ], [ %40, %36 ]
  %58 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8, i8* %58, align 8, !range !8
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %69, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8, i8* %62, align 8, !range !8
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %77, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %57, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %67 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %56, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %68 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %66, %"class.net::SchemefulSite"* dereferenceable(80) %67) #5
  br i1 %68, label %77, label %69

69:                                               ; preds = %65, %55
  %70 = getelementptr inbounds %"class.std::__1::tuple.13", %"class.std::__1::tuple.13"* %1, i64 0, i32 0, i32 2, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = load i8, i8* %71, align 1, !range !8
  %73 = getelementptr inbounds %"class.std::__1::tuple.13", %"class.std::__1::tuple.13"* %2, i64 0, i32 0, i32 2, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = load i8, i8* %74, align 1, !range !8
  %76 = icmp ult i8 %72, %75
  br label %77

77:                                               ; preds = %28, %11, %69, %65, %61, %48, %44, %32, %15
  %78 = phi i1 [ true, %15 ], [ false, %32 ], [ %76, %69 ], [ true, %48 ], [ false, %65 ], [ true, %44 ], [ false, %61 ], [ true, %11 ], [ false, %28 ]
  ret i1 %78
}

declare zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"*, %"class.net::SchemefulSite"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare zeroext i1 @_ZNK3net13SchemefulSiteeqERKS0_(%"class.net::SchemefulSite"*, %"class.net::SchemefulSite"* dereferenceable(80)) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__13tieIJKN4quic12QuicServerIdEKN3net9SocketTagEKNS4_19NetworkIsolationKeyEKNS4_15SecureDnsPolicyEEEENS_5tupleIJDpRT_EEESE_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__13tieIJKN4quic12QuicServerIdEKN3net9SocketTagEKNS4_19NetworkIsolationKeyEKNS4_15SecureDnsPolicyEEEENS_5tupleIJDpRT_EEESE_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__13tieIJKN4quic12QuicServerIdEKN3net9SocketTagEKNS4_19NetworkIsolationKeyEKNS4_15SecureDnsPolicyEEEENS_5tupleIJDpRT_EEESE_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__13tieIJKN4quic12QuicServerIdEKN3net9SocketTagEKNS4_19NetworkIsolationKeyEKNS4_15SecureDnsPolicyEEEENS_5tupleIJDpRT_EEESE_"}
!8 = !{i8 0, i8 2}
!9 = !{!"branch_weights", i32 1, i32 2000}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
