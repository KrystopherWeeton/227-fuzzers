; ModuleID = '../../v8/src/snapshot/context-serializer.cc'
source_filename = "../../v8/src/snapshot/context-serializer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.550" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.146", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.24", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.24", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.24", i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.34", %"class.std::__1::vector.38", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.153", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.168", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.24", i64, i8, %"struct.std::__1::atomic.24", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.172", %"class.std::__1::vector.172", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.327", %"class.std::__1::unique_ptr.366", %"class.std::__1::unique_ptr.405", %"class.std::__1::unique_ptr.435", %"class.std::__1::unique_ptr.441", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.475", %"class.std::__1::unique_ptr.481", %"class.std::__1::shared_ptr.487", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.510", %"class.std::__1::unique_ptr.536", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.542", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.557", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.337", i8, [7 x i8], %"class.std::__1::unordered_map.563", %"class.std::__1::unordered_map.589", %"class.std::__1::unordered_map.563", %"class.std::__1::unordered_map.613", %"class.std::__1::vector.641", i8, %"class.std::__1::unique_ptr.648", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.5", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.21", [4 x i8] }>
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7", %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.29", %"struct.std::__1::atomic.29", %"struct.std::__1::atomic.29" }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.654", %"class.std::__1::unique_ptr.675", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.685", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.825", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.838", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.848", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.860", %"struct.std::__1::atomic.159", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.935", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.978"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.991", i32, i8, i8, i32, i32, %"class.std::__1::vector.997", %"class.std::__1::vector.997", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1004", i64, %"class.std::__1::unordered_map.1005", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.550", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.167", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1057", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1095", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1129", %"class.std::__1::vector.1133", %"class.std::__1::vector.1133", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.654" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.146", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.655", %"class.std::__1::unique_ptr.669" }
%"class.std::__1::unique_ptr.655" = type { %"class.std::__1::__compressed_pair.656" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.657" }
%"struct.std::__1::__compressed_pair_elem.657" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.658" }
%"class.std::__1::vector.658" = type { %"class.std::__1::__vector_base.659" }
%"class.std::__1::__vector_base.659" = type { %"class.std::__1::unique_ptr.660"*, %"class.std::__1::unique_ptr.660"*, %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.1217" }
%"class.std::__1::__compressed_pair.1217" = type { %"struct.std::__1::__compressed_pair_elem.1218" }
%"struct.std::__1::__compressed_pair_elem.1218" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.std::__1::unique_ptr.660"* }
%"class.std::__1::unique_ptr.669" = type { %"class.std::__1::__compressed_pair.670" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.675" = type { %"class.std::__1::__compressed_pair.676" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.678", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.678" = type { %"struct.std::__1::__atomic_base.679" }
%"struct.std::__1::__atomic_base.679" = type { %"struct.std::__1::__cxx_atomic_impl.680" }
%"struct.std::__1::__cxx_atomic_impl.680" = type { %"struct.std::__1::__cxx_atomic_base_impl.681" }
%"struct.std::__1::__cxx_atomic_base_impl.681" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.685" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.686", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.686" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.687", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.687" = type { %"class.std::__1::__vector_base.688" }
%"class.std::__1::__vector_base.688" = type { %"class.std::__1::unique_ptr.689"*, %"class.std::__1::unique_ptr.689"*, %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::unique_ptr.689" = type opaque
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.std::__1::unique_ptr.689"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.695 }
%union.anon.695 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.696", %"class.std::__1::unique_ptr.702", %"struct.std::__1::atomic.159", %"class.std::__1::unique_ptr.708", %"class.std::__1::unique_ptr.714", %"class.std::__1::unique_ptr.720", %"class.std::__1::unique_ptr.726", %"class.std::__1::unique_ptr.732", %"class.std::__1::set.738", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.702" = type { %"class.std::__1::__compressed_pair.703" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.704" }
%"struct.std::__1::__compressed_pair_elem.704" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.708" = type { %"class.std::__1::__compressed_pair.709" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.714" = type { %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.720" = type { %"class.std::__1::__compressed_pair.721" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.722" }
%"struct.std::__1::__compressed_pair_elem.722" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.726" = type { %"class.std::__1::__compressed_pair.727" }
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.732" = type { %"class.std::__1::__compressed_pair.733" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.738" = type { %"class.std::__1::__tree.739" }
%"class.std::__1::__tree.739" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.740", %"class.std::__1::__compressed_pair.744" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.747" }
%"class.v8::internal::TaggedImpl.747" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.746" }
%"class.v8::internal::TaggedImpl.746" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.754", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type { %"class.v8::internal::HeapObjectToIndexHashMap"* }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.760", %"class.v8::internal::DetachableVector.761", %"class.v8::internal::DetachableVector.760", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.761" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.760" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"class.std::__1::unique_ptr.748", %"class.std::__1::unique_ptr.488" }
%"class.std::__1::unique_ptr.748" = type { %"class.std::__1::__compressed_pair.749" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.750" }
%"struct.std::__1::__compressed_pair_elem.750" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.491", %"class.std::__1::set.499" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.491" = type { %"class.std::__1::__tree.492" }
%"class.std::__1::__tree.492" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.493", %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::set.499" = type { %"class.std::__1::__tree.500" }
%"class.std::__1::__tree.500" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.493", %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.762", %"class.std::__1::vector.768", %"class.std::__1::unique_ptr.775", %"class.std::__1::vector.782", %"class.std::__1::unique_ptr.789", i64, %"class.std::__1::vector.795", %"class.std::__1::vector.803", %"class.std::__1::vector.811", i8, i8, i32 }
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.768" = type { %"class.std::__1::__vector_base.769" }
%"class.std::__1::__vector_base.769" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.770" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.771" }
%"struct.std::__1::__compressed_pair_elem.771" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.775" = type { %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"class.v8::internal::GlobalHandles::NodeSpace.778"* }
%"class.v8::internal::GlobalHandles::NodeSpace.778" = type opaque
%"class.std::__1::vector.782" = type { %"class.std::__1::__vector_base.783" }
%"class.std::__1::__vector_base.783" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.784" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.789" = type { %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"struct.std::__1::pair.797"*, %"struct.std::__1::pair.797"*, %"class.std::__1::__compressed_pair.798" }
%"struct.std::__1::pair.797" = type opaque
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"struct.std::__1::pair.797"* }
%"class.std::__1::vector.803" = type { %"class.std::__1::__vector_base.804" }
%"class.std::__1::__vector_base.804" = type { %"struct.std::__1::pair.805"*, %"struct.std::__1::pair.805"*, %"class.std::__1::__compressed_pair.806" }
%"struct.std::__1::pair.805" = type opaque
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"struct.std::__1::pair.805"* }
%"class.std::__1::vector.811" = type { %"class.std::__1::__vector_base.812" }
%"class.std::__1::__vector_base.812" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.813" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.818", %"class.std::__1::vector.825" }
%"class.std::__1::vector.818" = type { %"class.std::__1::__vector_base.819" }
%"class.std::__1::__vector_base.819" = type { i64**, i64**, %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.832" }
%"class.std::__1::unique_ptr.832" = type { %"class.std::__1::__compressed_pair.833" }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.834" }
%"struct.std::__1::__compressed_pair_elem.834" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.825" = type { %"class.std::__1::__vector_base.826" }
%"class.std::__1::__vector_base.826" = type { i32*, i32*, %"class.std::__1::__compressed_pair.827" }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.848" = type { %"struct.std::__1::__atomic_base.849" }
%"struct.std::__1::__atomic_base.849" = type { %"struct.std::__1::__cxx_atomic_impl.850" }
%"struct.std::__1::__cxx_atomic_impl.850" = type { %"struct.std::__1::__cxx_atomic_base_impl.851" }
%"struct.std::__1::__cxx_atomic_base_impl.851" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.855 }
%union.anon.855 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.860" = type { %"class.std::__1::__hash_table.861" }
%"class.std::__1::__hash_table.861" = type <{ %"class.std::__1::unique_ptr.862", %"class.std::__1::__compressed_pair.872", %"class.std::__1::__compressed_pair.877", %"class.std::__1::__compressed_pair.880", [4 x i8] }>
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864", %"struct.std::__1::__compressed_pair_elem.866" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"struct.std::__1::__hash_node_base.865"** }
%"struct.std::__1::__hash_node_base.865" = type { %"struct.std::__1::__hash_node_base.865"* }
%"struct.std::__1::__compressed_pair_elem.866" = type { %"class.std::__1::__bucket_list_deallocator.867" }
%"class.std::__1::__bucket_list_deallocator.867" = type { %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.873" }
%"struct.std::__1::__compressed_pair_elem.873" = type { %"struct.std::__1::__hash_node_base.865" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::atomic.159" = type { %"struct.std::__1::__atomic_base.160" }
%"struct.std::__1::__atomic_base.160" = type { %"struct.std::__1::__cxx_atomic_impl.161" }
%"struct.std::__1::__cxx_atomic_impl.161" = type { %"struct.std::__1::__cxx_atomic_base_impl.162" }
%"struct.std::__1::__cxx_atomic_base_impl.162" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.886", %"class.v8::internal::Handle.892", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.893", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.886" = type { %"class.std::__1::__compressed_pair.887" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.888" }
%"struct.std::__1::__compressed_pair_elem.888" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.892" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.893" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.894", %"class.std::__1::vector.900", %"class.std::__1::unique_ptr.908", %"class.std::__1::unique_ptr.914", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.920", %"class.std::__1::vector.926", %"struct.std::__1::pair.934" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.894" = type { %"class.std::__1::__compressed_pair.895" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.896" }
%"struct.std::__1::__compressed_pair_elem.896" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { %"class.std::__1::unique_ptr.902"*, %"class.std::__1::unique_ptr.902"*, %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::unique_ptr.902" = type opaque
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"class.std::__1::unique_ptr.902"* }
%"class.std::__1::unique_ptr.908" = type { %"class.std::__1::__compressed_pair.909" }
%"class.std::__1::__compressed_pair.909" = type { %"struct.std::__1::__compressed_pair_elem.910" }
%"struct.std::__1::__compressed_pair_elem.910" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.914" = type { %"class.std::__1::__compressed_pair.915" }
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.920" = type { %"class.std::__1::__compressed_pair.921" }
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.922" }
%"struct.std::__1::__compressed_pair_elem.922" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.926" = type { %"class.std::__1::__vector_base.927" }
%"class.std::__1::__vector_base.927" = type { %"struct.std::__1::pair.928"*, %"struct.std::__1::pair.928"*, %"class.std::__1::__compressed_pair.929" }
%"struct.std::__1::pair.928" = type opaque
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.930" }
%"struct.std::__1::__compressed_pair_elem.930" = type { %"struct.std::__1::pair.928"* }
%"struct.std::__1::pair.934" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.1"*, i16, i8*)*, i8* }
%"class.v8::Local.1" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.937" }
%"struct.std::__1::__compressed_pair_elem.937" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.938", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.938" = type { %"class.std::__1::__hash_table.939" }
%"class.std::__1::__hash_table.939" = type <{ %"class.std::__1::unique_ptr.940", %"class.std::__1::__compressed_pair.950", %"class.std::__1::__compressed_pair.955", %"class.std::__1::__compressed_pair.959", [4 x i8] }>
%"class.std::__1::unique_ptr.940" = type { %"class.std::__1::__compressed_pair.941" }
%"class.std::__1::__compressed_pair.941" = type { %"struct.std::__1::__compressed_pair_elem.942", %"struct.std::__1::__compressed_pair_elem.944" }
%"struct.std::__1::__compressed_pair_elem.942" = type { %"struct.std::__1::__hash_node_base.943"** }
%"struct.std::__1::__hash_node_base.943" = type { %"struct.std::__1::__hash_node_base.943"* }
%"struct.std::__1::__compressed_pair_elem.944" = type { %"class.std::__1::__bucket_list_deallocator.945" }
%"class.std::__1::__bucket_list_deallocator.945" = type { %"class.std::__1::__compressed_pair.946" }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.951" }
%"struct.std::__1::__compressed_pair_elem.951" = type { %"struct.std::__1::__hash_node_base.943" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.973" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.967"**, %"struct.std::__1::pair.967"**, %"struct.std::__1::pair.967"**, %"class.std::__1::__compressed_pair.968" }
%"struct.std::__1::pair.967" = type opaque
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"struct.std::__1::__compressed_pair_elem.969" = type { %"struct.std::__1::pair.967"** }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.978" = type { %"class.std::__1::__vector_base.979" }
%"class.std::__1::__vector_base.979" = type { %"class.v8::internal::Handle.980"*, %"class.v8::internal::Handle.980"*, %"class.std::__1::__compressed_pair.981" }
%"class.v8::internal::Handle.980" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.982" }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"class.v8::internal::Handle.980"* }
%"class.v8::internal::AddressToIndexHashMap" = type { %"class.v8::internal::PointerToIndexHashMap.986" }
%"class.v8::internal::PointerToIndexHashMap.986" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<unsigned long, unsigned int, v8::base::KeyEqualityMatcher<long>, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<unsigned long, unsigned int, v8::base::KeyEqualityMatcher<long>, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ i64, i32, i32, i8, [7 x i8] }>
%"class.v8::internal::HeapObjectToIndexHashMap" = type { %"class.v8::internal::PointerToIndexHashMap" }
%"class.v8::internal::PointerToIndexHashMap" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.987" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.987" = type { %"class.std::__1::__vector_base.988" }
%"class.std::__1::__vector_base.988" = type { %"struct.std::__1::pair.967"*, %"struct.std::__1::pair.967"*, %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"struct.std::__1::pair.967"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.843", i32, %"class.v8::Local.1" }
%"class.v8::Local.843" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.818", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.997" = type { %"class.std::__1::__vector_base.998" }
%"class.std::__1::__vector_base.998" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.999" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.1000" }
%"struct.std::__1::__compressed_pair_elem.1000" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1004" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1005" = type { %"class.std::__1::__hash_table.1006" }
%"class.std::__1::__hash_table.1006" = type <{ %"class.std::__1::unique_ptr.1007", %"class.std::__1::__compressed_pair.1017", %"class.std::__1::__compressed_pair.1022", %"class.std::__1::__compressed_pair.1025", [4 x i8] }>
%"class.std::__1::unique_ptr.1007" = type { %"class.std::__1::__compressed_pair.1008" }
%"class.std::__1::__compressed_pair.1008" = type { %"struct.std::__1::__compressed_pair_elem.1009", %"struct.std::__1::__compressed_pair_elem.1011" }
%"struct.std::__1::__compressed_pair_elem.1009" = type { %"struct.std::__1::__hash_node_base.1010"** }
%"struct.std::__1::__hash_node_base.1010" = type { %"struct.std::__1::__hash_node_base.1010"* }
%"struct.std::__1::__compressed_pair_elem.1011" = type { %"class.std::__1::__bucket_list_deallocator.1012" }
%"class.std::__1::__bucket_list_deallocator.1012" = type { %"class.std::__1::__compressed_pair.1013" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"struct.std::__1::__hash_node_base.1010" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.167" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1029", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1054", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1055", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1029" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.545, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.545 = type { i64 }
%"class.std::__1::weak_ptr.1054" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.24", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.167" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1055" = type { %"class.v8::PersistentBase.1056" }
%"class.v8::PersistentBase.1056" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1030", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1030" = type { %"class.std::__1::__hash_table.1031" }
%"class.std::__1::__hash_table.1031" = type <{ %"class.std::__1::unique_ptr.1032", %"class.std::__1::__compressed_pair.1042", %"class.std::__1::__compressed_pair.1047", %"class.std::__1::__compressed_pair.1050", [4 x i8] }>
%"class.std::__1::unique_ptr.1032" = type { %"class.std::__1::__compressed_pair.1033" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.1034", %"struct.std::__1::__compressed_pair_elem.1036" }
%"struct.std::__1::__compressed_pair_elem.1034" = type { %"struct.std::__1::__hash_node_base.1035"** }
%"struct.std::__1::__hash_node_base.1035" = type { %"struct.std::__1::__hash_node_base.1035"* }
%"struct.std::__1::__compressed_pair_elem.1036" = type { %"class.std::__1::__bucket_list_deallocator.1037" }
%"class.std::__1::__bucket_list_deallocator.1037" = type { %"class.std::__1::__compressed_pair.1038" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.1043" }
%"struct.std::__1::__compressed_pair_elem.1043" = type { %"struct.std::__1::__hash_node_base.1035" }
%"class.std::__1::__compressed_pair.1047" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1057" = type { %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1086", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1062", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1066", %"class.std::__1::unique_ptr.1072", %"class.std::__1::unique_ptr.481", %"class.std::__1::vector.1078", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1062" = type { %"struct.std::__1::__atomic_base.1063" }
%"struct.std::__1::__atomic_base.1063" = type { %"struct.std::__1::__cxx_atomic_impl.1064" }
%"struct.std::__1::__cxx_atomic_impl.1064" = type { %"struct.std::__1::__cxx_atomic_base_impl.1065" }
%"struct.std::__1::__cxx_atomic_base_impl.1065" = type { i32 }
%"class.std::__1::unique_ptr.1066" = type { %"class.std::__1::__compressed_pair.1067" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.1068" }
%"struct.std::__1::__compressed_pair_elem.1068" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.818" }
%"class.std::__1::unique_ptr.1072" = type { %"class.std::__1::__compressed_pair.1073" }
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.1074" }
%"struct.std::__1::__compressed_pair_elem.1074" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1078" = type { %"class.std::__1::__vector_base.1079" }
%"class.std::__1::__vector_base.1079" = type { %"struct.std::__1::pair.1080"*, %"struct.std::__1::pair.1080"*, %"class.std::__1::__compressed_pair.1081" }
%"struct.std::__1::pair.1080" = type opaque
%"class.std::__1::__compressed_pair.1081" = type { %"struct.std::__1::__compressed_pair_elem.1082" }
%"struct.std::__1::__compressed_pair_elem.1082" = type { %"struct.std::__1::pair.1080"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.24"*, %"class.std::__1::unique_ptr.104" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.45", %"class.std::__1::vector.45", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.47" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.52" }
%"class.std::__1::__hash_table.52" = type <{ %"class.std::__1::unique_ptr.53", %"class.std::__1::__compressed_pair.63", %"class.std::__1::__compressed_pair.68", %"class.std::__1::__compressed_pair.70", [4 x i8] }>
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55", %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.std::__1::__hash_node_base.56"** }
%"struct.std::__1::__hash_node_base.56" = type { %"struct.std::__1::__hash_node_base.56"* }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.std::__1::__bucket_list_deallocator.58" }
%"class.std::__1::__bucket_list_deallocator.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.std::__1::__hash_node_base.56" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.29", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.93", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.24"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.29", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.29", %"struct.std::__1::atomic.75", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.75" = type { %"struct.std::__1::__atomic_base.76" }
%"struct.std::__1::__atomic_base.76" = type { %"struct.std::__1::__cxx_atomic_impl.77" }
%"struct.std::__1::__cxx_atomic_impl.77" = type { %"struct.std::__1::__cxx_atomic_base_impl.78" }
%"struct.std::__1::__cxx_atomic_base_impl.78" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.79" }
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.81" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.86", %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::atomic.93" = type { %"struct.std::__1::__atomic_base.94" }
%"struct.std::__1::__atomic_base.94" = type { %"struct.std::__1::__cxx_atomic_impl.95" }
%"struct.std::__1::__cxx_atomic_impl.95" = type { %"struct.std::__1::__cxx_atomic_base_impl.96" }
%"struct.std::__1::__cxx_atomic_base_impl.96" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.97", i8, [7 x i8] }>
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { i64*, i64*, %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.24", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1086" = type { %"class.std::__1::__compressed_pair.1087" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1095" = type { %"class.std::__1::__compressed_pair.1096" }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.844", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.844" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1103" }
%"class.std::__1::unordered_map.1103" = type { %"class.std::__1::__hash_table.1104" }
%"class.std::__1::__hash_table.1104" = type <{ %"class.std::__1::unique_ptr.1105", %"class.std::__1::__compressed_pair.1115", %"class.std::__1::__compressed_pair.1120", %"class.std::__1::__compressed_pair.1123", [4 x i8] }>
%"class.std::__1::unique_ptr.1105" = type { %"class.std::__1::__compressed_pair.1106" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.1107", %"struct.std::__1::__compressed_pair_elem.1109" }
%"struct.std::__1::__compressed_pair_elem.1107" = type { %"struct.std::__1::__hash_node_base.1108"** }
%"struct.std::__1::__hash_node_base.1108" = type { %"struct.std::__1::__hash_node_base.1108"* }
%"struct.std::__1::__compressed_pair_elem.1109" = type { %"class.std::__1::__bucket_list_deallocator.1110" }
%"class.std::__1::__bucket_list_deallocator.1110" = type { %"class.std::__1::__compressed_pair.1111" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.1116" }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"struct.std::__1::__hash_node_base.1108" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::atomic.1129" = type { %"struct.std::__1::__atomic_base.1130" }
%"struct.std::__1::__atomic_base.1130" = type { %"struct.std::__1::__cxx_atomic_impl.1131" }
%"struct.std::__1::__cxx_atomic_impl.1131" = type { %"struct.std::__1::__cxx_atomic_base_impl.1132" }
%"struct.std::__1::__cxx_atomic_base_impl.1132" = type { %"class.std::__1::vector.1133"* }
%"class.std::__1::vector.1133" = type { %"class.std::__1::__vector_base.1134" }
%"class.std::__1::__vector_base.1134" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1135" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1135" = type { %"struct.std::__1::__compressed_pair_elem.1136" }
%"struct.std::__1::__compressed_pair_elem.1136" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl.36" }
%"struct.std::__1::__cxx_atomic_impl.36" = type { %"struct.std::__1::__cxx_atomic_base_impl.37" }
%"struct.std::__1::__cxx_atomic_base_impl.37" = type { i32 }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.40" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.110" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.110" = type { %"class.std::__1::__vector_base.111" }
%"class.std::__1::__vector_base.111" = type { %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"*, %"class.std::__1::__compressed_pair.113" }
%"struct.std::__1::pair.112" = type { i32, i64 }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.std::__1::pair.112"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.24", i32, %"struct.std::__1::atomic.24", %"class.v8::base::Mutex", %"struct.std::__1::atomic.24" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.118" }
%"class.std::__1::unordered_map.118" = type { %"class.std::__1::__hash_table.119" }
%"class.std::__1::__hash_table.119" = type <{ %"class.std::__1::unique_ptr.120", %"class.std::__1::__compressed_pair.130", %"class.std::__1::__compressed_pair.135", %"class.std::__1::__compressed_pair.140", [4 x i8] }>
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122", %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"struct.std::__1::__hash_node_base.123"** }
%"struct.std::__1::__hash_node_base.123" = type { %"struct.std::__1::__hash_node_base.123"* }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.std::__1::__bucket_list_deallocator.125" }
%"class.std::__1::__bucket_list_deallocator.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"struct.std::__1::__hash_node_base.123" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.159", %"struct.std::__1::atomic.163", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.163" = type { %"struct.std::__1::__atomic_base.164" }
%"struct.std::__1::__atomic_base.164" = type { %"struct.std::__1::__cxx_atomic_impl.165" }
%"struct.std::__1::__cxx_atomic_impl.165" = type { %"struct.std::__1::__cxx_atomic_base_impl.166" }
%"struct.std::__1::__cxx_atomic_base_impl.166" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.168" = type { %"struct.std::__1::__atomic_base.169" }
%"struct.std::__1::__atomic_base.169" = type { %"struct.std::__1::__cxx_atomic_impl.170" }
%"struct.std::__1::__cxx_atomic_impl.170" = type { %"struct.std::__1::__cxx_atomic_base_impl.171" }
%"struct.std::__1::__cxx_atomic_base_impl.171" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.172" = type { %"class.std::__1::__vector_base.173" }
%"class.std::__1::__vector_base.173" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.174" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.233", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.287", %"class.std::__1::vector.287", %"class.std::__1::vector.287", %"class.std::__1::vector.294", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.188", %"class.std::__1::vector.189", %"class.std::__1::vector.196", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.188" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.24" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.191" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.196" = type { %"class.std::__1::__vector_base.197" }
%"class.std::__1::__vector_base.197" = type { %"class.std::__1::unique_ptr.198"*, %"class.std::__1::unique_ptr.198"*, %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::unique_ptr.198" = type opaque
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.std::__1::unique_ptr.198"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.24" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.210", %"class.v8::internal::Worklist.212", %"class.v8::internal::Worklist.214", %"class.v8::internal::Worklist.216", %"class.v8::internal::Worklist.218" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.24" }
%"class.v8::internal::Worklist.204" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.24" }
%"class.v8::internal::Worklist.206" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.24" }
%"class.v8::internal::Worklist.208" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.24" }
%"class.v8::internal::Worklist.210" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.24" }
%"class.v8::internal::Worklist.212" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.24" }
%"class.v8::internal::Worklist.214" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.24" }
%"class.v8::internal::Worklist.216" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.24" }
%"class.v8::internal::Worklist.218" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.24" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.220", i8, i64 }
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.236" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.188"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.236" = type { %"class.std::__1::__hash_table.237" }
%"class.std::__1::__hash_table.237" = type <{ %"class.std::__1::unique_ptr.238", %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.253", %"class.std::__1::__compressed_pair.256", [4 x i8] }>
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240", %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"struct.std::__1::__hash_node_base.241"** }
%"struct.std::__1::__hash_node_base.241" = type { %"struct.std::__1::__hash_node_base.241"* }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.std::__1::__bucket_list_deallocator.243" }
%"class.std::__1::__bucket_list_deallocator.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"struct.std::__1::__hash_node_base.241" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.263" }
%"class.std::__1::unordered_map.263" = type { %"class.std::__1::__hash_table.264" }
%"class.std::__1::__hash_table.264" = type <{ %"class.std::__1::unique_ptr.265", %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.280", %"class.std::__1::__compressed_pair.283", [4 x i8] }>
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267", %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"struct.std::__1::__hash_node_base.268"** }
%"struct.std::__1::__hash_node_base.268" = type { %"struct.std::__1::__hash_node_base.268"* }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.std::__1::__bucket_list_deallocator.270" }
%"class.std::__1::__bucket_list_deallocator.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"struct.std::__1::__hash_node_base.268" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.294" = type { %"class.std::__1::__vector_base.295" }
%"class.std::__1::__vector_base.295" = type { %"struct.std::__1::pair.296"*, %"struct.std::__1::pair.296"*, %"class.std::__1::__compressed_pair.297" }
%"struct.std::__1::pair.296" = type opaque
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"struct.std::__1::pair.296"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.302", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.287"], [3 x %"class.std::__1::vector.287"], i8, %"struct.std::__1::atomic.159", [6 x i8], %"class.std::__1::vector.287", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.312"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.287", %"class.std::__1::vector.287", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.312" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.337", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.330"], %"class.std::__1::unique_ptr.302" }
%"class.std::__1::vector.330" = type { %"class.std::__1::__vector_base.331" }
%"class.std::__1::__vector_base.331" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.369", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.373", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.378" }
%"struct.std::__1::atomic.369" = type { %"struct.std::__1::__atomic_base.370" }
%"struct.std::__1::__atomic_base.370" = type { %"struct.std::__1::__cxx_atomic_impl.371" }
%"struct.std::__1::__cxx_atomic_impl.371" = type { %"struct.std::__1::__cxx_atomic_base_impl.372" }
%"struct.std::__1::__cxx_atomic_base_impl.372" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.373" = type { %"struct.std::__1::__atomic_base.374" }
%"struct.std::__1::__atomic_base.374" = type { %"struct.std::__1::__cxx_atomic_impl.375" }
%"struct.std::__1::__cxx_atomic_impl.375" = type { %"struct.std::__1::__cxx_atomic_base_impl.376" }
%"struct.std::__1::__cxx_atomic_base_impl.376" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.378" = type { %"class.std::__1::__hash_table.379" }
%"class.std::__1::__hash_table.379" = type <{ %"class.std::__1::unique_ptr.380", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", %"class.std::__1::__compressed_pair.398", [4 x i8] }>
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382", %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.std::__1::__hash_node_base.383"** }
%"struct.std::__1::__hash_node_base.383" = type { %"struct.std::__1::__hash_node_base.383"* }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"class.std::__1::__bucket_list_deallocator.385" }
%"class.std::__1::__bucket_list_deallocator.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"struct.std::__1::__hash_node_base.383" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.302", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.159", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.408", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.408" = type { %"class.std::__1::__hash_table.409" }
%"class.std::__1::__hash_table.409" = type <{ %"class.std::__1::unique_ptr.410", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.425", %"class.std::__1::__compressed_pair.428", [4 x i8] }>
%"class.std::__1::unique_ptr.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412", %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"struct.std::__1::__hash_node_base.413"** }
%"struct.std::__1::__hash_node_base.413" = type { %"struct.std::__1::__hash_node_base.413"* }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.std::__1::__bucket_list_deallocator.415" }
%"class.std::__1::__bucket_list_deallocator.415" = type { %"class.std::__1::__compressed_pair.416" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"struct.std::__1::__hash_node_base.413" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.444" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.487" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.506", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.488", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.506" = type { %"struct.std::__1::__atomic_base.507" }
%"struct.std::__1::__atomic_base.507" = type { %"struct.std::__1::__cxx_atomic_impl.508" }
%"struct.std::__1::__cxx_atomic_impl.508" = type { %"struct.std::__1::__cxx_atomic_base_impl.509" }
%"struct.std::__1::__cxx_atomic_base_impl.509" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.510" = type { %"class.std::__1::__hash_table.511" }
%"class.std::__1::__hash_table.511" = type <{ %"class.std::__1::unique_ptr.512", %"class.std::__1::__compressed_pair.522", %"class.std::__1::__compressed_pair.527", %"class.std::__1::__compressed_pair.530", [4 x i8] }>
%"class.std::__1::unique_ptr.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514", %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"struct.std::__1::__hash_node_base.515"** }
%"struct.std::__1::__hash_node_base.515" = type { %"struct.std::__1::__hash_node_base.515"* }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.std::__1::__bucket_list_deallocator.517" }
%"class.std::__1::__bucket_list_deallocator.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"struct.std::__1::__hash_node_base.515" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type <{ %"class.v8::internal::GlobalSafepoint::Barrier", %"class.v8::internal::Heap"*, %"class.v8::base::Mutex", %"class.v8::internal::LocalHeap"*, i32, [4 x i8] }>
%"class.v8::internal::GlobalSafepoint::Barrier" = type { %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable", %"class.v8::base::ConditionVariable", i8, i32 }
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.550", %"class.std::__1::vector.550" }
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.337" = type { %"class.std::__1::__hash_table.338" }
%"class.std::__1::__hash_table.338" = type <{ %"class.std::__1::unique_ptr.339", %"class.std::__1::__compressed_pair.349", %"class.std::__1::__compressed_pair.354", %"class.std::__1::__compressed_pair.358", [4 x i8] }>
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341", %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.342"** }
%"struct.std::__1::__hash_node_base.342" = type { %"struct.std::__1::__hash_node_base.342"* }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.std::__1::__bucket_list_deallocator.344" }
%"class.std::__1::__bucket_list_deallocator.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"struct.std::__1::__hash_node_base.342" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unordered_map.589" = type { %"class.std::__1::__hash_table.590" }
%"class.std::__1::__hash_table.590" = type <{ %"class.std::__1::unique_ptr.591", %"class.std::__1::__compressed_pair.601", %"class.std::__1::__compressed_pair.606", %"class.std::__1::__compressed_pair.609", [4 x i8] }>
%"class.std::__1::unique_ptr.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593", %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.594"** }
%"struct.std::__1::__hash_node_base.594" = type { %"struct.std::__1::__hash_node_base.594"* }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.std::__1::__bucket_list_deallocator.596" }
%"class.std::__1::__bucket_list_deallocator.596" = type { %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"struct.std::__1::__hash_node_base.594" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unordered_map.563" = type { %"class.std::__1::__hash_table.564" }
%"class.std::__1::__hash_table.564" = type <{ %"class.std::__1::unique_ptr.565", %"class.std::__1::__compressed_pair.575", %"class.std::__1::__compressed_pair.580", %"class.std::__1::__compressed_pair.583", [4 x i8] }>
%"class.std::__1::unique_ptr.565" = type { %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567", %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.568"** }
%"struct.std::__1::__hash_node_base.568" = type { %"struct.std::__1::__hash_node_base.568"* }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"class.std::__1::__bucket_list_deallocator.570" }
%"class.std::__1::__bucket_list_deallocator.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"struct.std::__1::__hash_node_base.568" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unordered_map.613" = type { %"class.std::__1::__hash_table.614" }
%"class.std::__1::__hash_table.614" = type <{ %"class.std::__1::unique_ptr.615", %"class.std::__1::__compressed_pair.625", %"class.std::__1::__compressed_pair.630", %"class.std::__1::__compressed_pair.635", [4 x i8] }>
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617", %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.618"** }
%"struct.std::__1::__hash_node_base.618" = type { %"struct.std::__1::__hash_node_base.618"* }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"class.std::__1::__bucket_list_deallocator.620" }
%"class.std::__1::__bucket_list_deallocator.620" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"struct.std::__1::__hash_node_base.618" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::vector.641" = type { %"class.std::__1::__vector_base.642" }
%"class.std::__1::__vector_base.642" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.643" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.24", i64, %"struct.std::__1::atomic.24" }
%"class.std::__1::vector.146" = type { %"class.std::__1::__vector_base.147" }
%"class.std::__1::__vector_base.147" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.148" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.550" = type { %"class.std::__1::__vector_base.551" }
%"class.std::__1::__vector_base.551" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::ContextSerializer" = type { %"class.v8::internal::Serializer", %"class.v8::internal::StartupSerializer"*, %"struct.v8::SerializeInternalFieldsCallback", i8, %"class.v8::internal::Context", %"class.v8::internal::SnapshotByteSink" }
%"class.v8::internal::Serializer" = type { %"class.v8::internal::SerializerDeserializer", %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::Isolate"*, %"class.v8::internal::Serializer::HotObjectsList", %"class.v8::internal::SerializerReferenceMap", %"class.v8::internal::ExternalReferenceEncoder", %"class.v8::internal::RootIndexMap", %"class.std::__1::unique_ptr.1169", %"class.std::__1::vector", %"class.v8::internal::GlobalHandleVector.1185", i32, i32, i32, [4 x i8], %"class.v8::internal::IdentityMap.1190", i32, i32, %"class.v8::base::Flags", [4 x i64] }
%"class.v8::internal::SerializerDeserializer" = type { %"class.v8::internal::RootVisitor" }
%"class.v8::internal::RootVisitor" = type { i32 (...)** }
%"class.v8::internal::Serializer::HotObjectsList" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::StrongRootsEntry"*, [8 x i64], i32, [4 x i8] }>
%"class.v8::internal::SerializerReferenceMap" = type { %"class.v8::internal::IdentityMap.1140", %"class.std::__1::unordered_map.1141", i32, [4 x i8] }
%"class.v8::internal::IdentityMap.1140" = type { %"class.v8::internal::IdentityMapBase.base", %"class.v8::base::DefaultAllocationPolicy", [6 x i8] }
%"class.v8::internal::IdentityMapBase.base" = type <{ i32 (...)**, %"struct.v8::base::hash", [7 x i8], %"class.v8::internal::Heap"*, i32, i32, i32, i32, i64*, %"class.v8::internal::StrongRootsEntry"*, i64*, i8 }>
%"struct.v8::base::hash" = type { i8 }
%"class.v8::base::DefaultAllocationPolicy" = type { i8 }
%"class.std::__1::unordered_map.1141" = type { %"class.std::__1::__hash_table.1142" }
%"class.std::__1::__hash_table.1142" = type <{ %"class.std::__1::unique_ptr.1143", %"class.std::__1::__compressed_pair.1153", %"class.std::__1::__compressed_pair.1158", %"class.std::__1::__compressed_pair.1163", [4 x i8] }>
%"class.std::__1::unique_ptr.1143" = type { %"class.std::__1::__compressed_pair.1144" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.1145", %"struct.std::__1::__compressed_pair_elem.1147" }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"struct.std::__1::__hash_node_base.1146"** }
%"struct.std::__1::__hash_node_base.1146" = type { %"struct.std::__1::__hash_node_base.1146"* }
%"struct.std::__1::__compressed_pair_elem.1147" = type { %"class.std::__1::__bucket_list_deallocator.1148" }
%"class.std::__1::__bucket_list_deallocator.1148" = type { %"class.std::__1::__compressed_pair.1149" }
%"class.std::__1::__compressed_pair.1149" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.1154" }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"struct.std::__1::__hash_node_base.1146" }
%"class.std::__1::__compressed_pair.1158" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::internal::ExternalReferenceEncoder" = type { %"class.v8::internal::AddressToIndexHashMap"* }
%"class.std::__1::unique_ptr.1169" = type { %"class.std::__1::__compressed_pair.1170" }
%"class.std::__1::__compressed_pair.1170" = type { %"struct.std::__1::__compressed_pair_elem.1171" }
%"struct.std::__1::__compressed_pair_elem.1171" = type { %"class.v8::internal::CodeAddressMap"* }
%"class.v8::internal::CodeAddressMap" = type { %"class.v8::internal::CodeEventLogger", %"class.v8::internal::CodeAddressMap::NameMap" }
%"class.v8::internal::CodeEventLogger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1172" }
%"class.std::__1::unique_ptr.1172" = type { %"class.std::__1::__compressed_pair.1173" }
%"class.std::__1::__compressed_pair.1173" = type { %"struct.std::__1::__compressed_pair_elem.1174" }
%"struct.std::__1::__compressed_pair_elem.1174" = type { %"class.v8::internal::CodeEventLogger::NameBuffer"* }
%"class.v8::internal::CodeEventLogger::NameBuffer" = type opaque
%"class.v8::internal::CodeAddressMap::NameMap" = type { %"class.v8::base::PointerTemplateHashMapImpl" }
%"class.v8::base::PointerTemplateHashMapImpl" = type { %"class.v8::base::TemplateHashMapImpl.1178" }
%"class.v8::base::TemplateHashMapImpl.1178" = type { %"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry.1180"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry.1180" = type <{ i8*, i8*, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.v8::internal::GlobalHandleVector.1185" = type { %"class.std::__1::vector.1186" }
%"class.std::__1::vector.1186" = type { %"class.std::__1::__vector_base.1187" }
%"class.std::__1::__vector_base.1187" = type { i64*, i64*, %"class.std::__1::__compressed_pair.1188" }
%"class.std::__1::__compressed_pair.1188" = type { %"struct.std::__1::__compressed_pair_elem.100", %"struct.std::__1::__compressed_pair_elem.1189" }
%"struct.std::__1::__compressed_pair_elem.1189" = type { %"class.v8::internal::StrongRootBlockAllocator" }
%"class.v8::internal::StrongRootBlockAllocator" = type { %"class.v8::internal::Heap"* }
%"class.v8::internal::IdentityMap.1190" = type { %"class.v8::internal::IdentityMapBase.base", %"class.v8::base::DefaultAllocationPolicy", [6 x i8] }
%"class.v8::base::Flags" = type { i32 }
%"struct.v8::SerializeInternalFieldsCallback" = type { { i8*, i32 } (%"class.v8::Object"*, i32, i8*)*, i8* }
%"class.v8::internal::SnapshotByteSink" = type { %"class.std::__1::vector" }
%"class.v8::internal::StartupSerializer" = type { %"class.v8::internal::RootsSerializer.base", %"class.v8::internal::ReadOnlySerializer"*, %"class.v8::internal::GlobalHandleVector.1194", %"class.v8::internal::GlobalHandleVector.1195" }
%"class.v8::internal::RootsSerializer.base" = type <{ %"class.v8::internal::Serializer", i16, [6 x i8], %"class.std::__1::bitset", %"class.v8::internal::ObjectCacheIndexMap", i8 }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [11 x i64] }
%"class.v8::internal::ObjectCacheIndexMap" = type { %"class.v8::internal::IdentityMap.1192", i32, [4 x i8] }
%"class.v8::internal::IdentityMap.1192" = type { %"class.v8::internal::IdentityMapBase.base", %"class.v8::base::DefaultAllocationPolicy", [6 x i8] }
%"class.v8::internal::ReadOnlySerializer" = type opaque
%"class.v8::internal::GlobalHandleVector.1194" = type { %"class.std::__1::vector.1186" }
%"class.v8::internal::GlobalHandleVector.1195" = type { %"class.std::__1::vector.1186" }
%"class.v8::internal::IdentityMapBase" = type <{ i32 (...)**, %"struct.v8::base::hash", [7 x i8], %"class.v8::internal::Heap"*, i32, i32, i32, i32, i64*, %"class.v8::internal::StrongRootsEntry"*, i64*, i8, [7 x i8] }>
%"class.v8::internal::CombinationAssertScope" = type { i8 }
%"class.v8::internal::NativeContext" = type { %"class.v8::internal::Context" }
%"class.v8::internal::(anonymous namespace)::SanitizeNativeContextScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::NativeContext", %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::Object", %"class.v8::internal::Object" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::Handle<v8::internal::FeedbackVector>::ObjectRef" = type { %"class.v8::internal::FeedbackVector" }
%"class.v8::internal::FeedbackVector" = type { %"class.v8::internal::TorqueGeneratedFeedbackVector" }
%"class.v8::internal::TorqueGeneratedFeedbackVector" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle<v8::internal::JSFunction>::ObjectRef" = type { %"class.v8::internal::JSFunction" }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::base::Optional.1202" = type { %"class.v8::base::internal::OptionalBase.1203" }
%"class.v8::base::internal::OptionalBase.1203" = type { %"struct.v8::base::internal::OptionalStorage.1204" }
%"struct.v8::base::internal::OptionalStorage.1204" = type { %"struct.v8::base::internal::OptionalStorageBase.1205" }
%"struct.v8::base::internal::OptionalStorageBase.1205" = type { i8, %union.anon.1206 }
%union.anon.1206 = type { %"class.std::__1::function" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::HeapObject"*, %"class.v8::internal::CompressedObjectSlot"*, %"class.v8::internal::HeapObject"*)* }
%"class.v8::internal::CompressedObjectSlot" = type { %"class.v8::internal::SlotBase.1207" }
%"class.v8::internal::SlotBase.1207" = type { i64 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Serializer::ObjectSerializer" = type <{ %"class.v8::internal::ObjectVisitor", %"class.v8::internal::Isolate"*, %"class.v8::internal::Serializer"*, %"class.v8::internal::Handle.980", %"class.v8::internal::SnapshotByteSink"*, i32, [4 x i8] }>
%"class.v8::internal::ObjectVisitor" = type { i32 (...)** }
%"class.v8::internal::PerIsolateAssertScope" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.std::__1::vector.1208" = type { %"class.std::__1::__vector_base.1209" }
%"class.std::__1::__vector_base.1209" = type { %"class.v8::StartupData"*, %"class.v8::StartupData"*, %"class.std::__1::__compressed_pair.1210" }
%"class.std::__1::__compressed_pair.1210" = type { %"struct.std::__1::__compressed_pair_elem.1211" }
%"struct.std::__1::__compressed_pair_elem.1211" = type { %"class.v8::StartupData"* }
%"class.v8::internal::FeedbackCell" = type { %"class.v8::internal::TorqueGeneratedFeedbackCell" }
%"class.v8::internal::TorqueGeneratedFeedbackCell" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::Struct" = type { %"class.v8::internal::TorqueGeneratedStruct" }
%"class.v8::internal::TorqueGeneratedStruct" = type { %"class.v8::internal::HeapObject" }

$_ZN2v88internal10SerializerD2Ev = comdat any

$_ZN2v88internal10JSFunction22ResetIfBytecodeFlushedENS_4base8OptionalINSt3__18functionIFvNS0_10HeapObjectENS0_20CompressedObjectSlotES6_EEEEE = comdat any

$_ZN2v88internal11RootVisitor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE = comdat any

$_ZN2v88internal11RootVisitor17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_ = comdat any

$_ZN2v88internal11RootVisitor11SynchronizeENS0_22VisitorSynchronization7SyncTagE = comdat any

$_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEED2Ev = comdat any

$_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEED0Ev = comdat any

$_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEE15NewPointerArrayEm = comdat any

$_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEE18DeletePointerArrayEPmm = comdat any

$_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEED2Ev = comdat any

$_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEED0Ev = comdat any

$_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEE15NewPointerArrayEm = comdat any

$_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEE18DeletePointerArrayEPmm = comdat any

$_ZN2v88internal12FeedbackCell21reset_feedback_vectorENS_4base8OptionalINSt3__18functionIFvNS0_10HeapObjectENS0_20CompressedObjectSlotES6_EEEEE = comdat any

$_ZTVN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEEE = comdat any

$_ZTVN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEEE = comdat any

@_ZTVN2v88internal17ContextSerializerE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::ContextSerializer"*)* @_ZN2v88internal17ContextSerializerD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::ContextSerializer"*)* @_ZN2v88internal17ContextSerializerD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::Serializer"*, i32, i8*, i64, i64)* @_ZN2v88internal10Serializer17VisitRootPointersENS0_4RootEPKcNS0_14FullObjectSlotES5_ to i8*), i8* bitcast (void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)* @_ZN2v88internal11RootVisitor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)* @_ZN2v88internal11RootVisitor17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_ to i8*), i8* bitcast (void (%"class.v8::internal::RootVisitor"*, i32)* @_ZN2v88internal11RootVisitor11SynchronizeENS0_22VisitorSynchronization7SyncTagE to i8*), i8* bitcast (void (%"class.v8::internal::ContextSerializer"*, i64*)* @_ZN2v88internal17ContextSerializer19SerializeObjectImplENS0_6HandleINS0_10HeapObjectEEE to i8*), i8* bitcast (i1 (%"class.v8::internal::Serializer"*, i64)* @_ZN2v88internal10Serializer14MustBeDeferredENS0_10HeapObjectE to i8*)] }, align 8
@.str = private unnamed_addr constant [18 x i8] c"ContextSerializer\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"embedder fields data\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"embedder_fields_count > 0\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"BackRefIndex\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"embedder field index\00", align 1
@.str.8 = private unnamed_addr constant [26 x i8] c"embedder fields data size\00", align 1
@_ZTVN2v88internal10SerializerE = external unnamed_addr constant { [10 x i8*] }, align 8
@_ZTVN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::IdentityMap.1190"*)* @_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEED2Ev to i8*), i8* bitcast (void (%"class.v8::internal::IdentityMap.1190"*)* @_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEED0Ev to i8*), i8* bitcast (i64* (%"class.v8::internal::IdentityMap.1190"*, i64)* @_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEE15NewPointerArrayEm to i8*), i8* bitcast (void (%"class.v8::internal::IdentityMap.1190"*, i64*, i64)* @_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEE18DeletePointerArrayEPmm to i8*)] }, comdat, align 8
@_ZTVN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::IdentityMap.1140"*)* @_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEED2Ev to i8*), i8* bitcast (void (%"class.v8::internal::IdentityMap.1140"*)* @_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEED0Ev to i8*), i8* bitcast (i64* (%"class.v8::internal::IdentityMap.1140"*, i64)* @_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEE15NewPointerArrayEm to i8*), i8* bitcast (void (%"class.v8::internal::IdentityMap.1140"*, i64*, i64)* @_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEE18DeletePointerArrayEPmm to i8*)] }, comdat, align 8
@_ZN2v88internal29FLAG_lazy_feedback_allocationE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal42FLAG_budget_for_feedback_vector_allocationE = external local_unnamed_addr global i32, align 4
@_ZN2v88internal21FLAG_interrupt_budgetE = external local_unnamed_addr global i32, align 4
@_ZN2v88internal19FLAG_flush_bytecodeE = external local_unnamed_addr global i8, align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"value().IsFeedbackVector()\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@_ZTVN2v88internal10Serializer16ObjectSerializerE = external unnamed_addr constant { [20 x i8*] }, align 8
@.str.11 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1

@_ZN2v88internal17ContextSerializerC1EPNS0_7IsolateENS_4base5FlagsINS0_8Snapshot14SerializerFlagEiEEPNS0_17StartupSerializerENS_31SerializeInternalFieldsCallbackE = hidden unnamed_addr alias void (%"class.v8::internal::ContextSerializer"*, %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::StartupSerializer"*, { i8*, i32 } (%"class.v8::Object"*, i32, i8*)*, i8*), void (%"class.v8::internal::ContextSerializer"*, %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::StartupSerializer"*, { i8*, i32 } (%"class.v8::Object"*, i32, i8*)*, i8*)* @_ZN2v88internal17ContextSerializerC2EPNS0_7IsolateENS_4base5FlagsINS0_8Snapshot14SerializerFlagEiEEPNS0_17StartupSerializerENS_31SerializeInternalFieldsCallbackE
@_ZN2v88internal17ContextSerializerD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::ContextSerializer"*), void (%"class.v8::internal::ContextSerializer"*)* @_ZN2v88internal17ContextSerializerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17ContextSerializerC2EPNS0_7IsolateENS_4base5FlagsINS0_8Snapshot14SerializerFlagEiEEPNS0_17StartupSerializerENS_31SerializeInternalFieldsCallbackE(%"class.v8::internal::ContextSerializer"*, %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::StartupSerializer"*, { i8*, i32 } (%"class.v8::Object"*, i32, i8*)*, i8*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal10SerializerC2EPNS0_7IsolateENS_4base5FlagsINS0_8Snapshot14SerializerFlagEiEE(%"class.v8::internal::Serializer"* %7, %"class.v8::internal::Isolate"* %1, i32 %2) #10
  %8 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2v88internal17ContextSerializerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 1
  store %"class.v8::internal::StartupSerializer"* %3, %"class.v8::internal::StartupSerializer"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 2, i32 0
  store { i8*, i32 } (%"class.v8::Object"*, i32, i8*)* %4, { i8*, i32 } (%"class.v8::Object"*, i32, i8*)** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 2, i32 1
  store i8* %5, i8** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 3
  store i8 1, i8* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast i64* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false)
  tail call void @_ZN2v88internal10Serializer24InitializeCodeAddressMapEv(%"class.v8::internal::Serializer"* %7) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN2v88internal10SerializerC2EPNS0_7IsolateENS_4base5FlagsINS0_8Snapshot14SerializerFlagEiEE(%"class.v8::internal::Serializer"*, %"class.v8::internal::Isolate"*, i32) unnamed_addr #2

declare void @_ZN2v88internal10Serializer24InitializeCodeAddressMapEv(%"class.v8::internal::Serializer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17ContextSerializerD2Ev(%"class.v8::internal::ContextSerializer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2v88internal17ContextSerializerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal10Serializer16OutputStatisticsEPKc(%"class.v8::internal::Serializer"* %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0)) #10
  %4 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = ptrtoint i8* %5 to i64
  %9 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %10 = bitcast i8** %9 to i64*
  store i64 %8, i64* %10, align 8
  tail call void @_ZdlPv(i8* nonnull %5) #11
  br label %11

11:                                               ; preds = %1, %7
  tail call void @_ZN2v88internal10SerializerD2Ev(%"class.v8::internal::Serializer"* %3) #10
  ret void
}

declare void @_ZN2v88internal10Serializer16OutputStatisticsEPKc(%"class.v8::internal::Serializer"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal10SerializerD2Ev(%"class.v8::internal::Serializer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2v88internal10SerializerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 14
  %4 = getelementptr inbounds %"class.v8::internal::IdentityMap.1190", %"class.v8::internal::IdentityMap.1190"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = bitcast %"class.v8::internal::IdentityMap.1190"* %3 to %"class.v8::internal::IdentityMapBase"*
  tail call void @_ZN2v88internal15IdentityMapBase5ClearEv(%"class.v8::internal::IdentityMapBase"* %5) #10
  tail call void @_ZN2v88internal15IdentityMapBaseD2Ev(%"class.v8::internal::IdentityMapBase"* %5) #10
  %6 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp eq i64* %7, null
  %9 = ptrtoint i64* %7 to i64
  br i1 %8, label %19, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %12 = bitcast i64** %11 to i64*
  store i64 %9, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast i64** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %9
  %18 = ashr exact i64 %17, 3
  tail call void @_ZN2v88internal24StrongRootBlockAllocator10deallocateEPmm(%"class.v8::internal::StrongRootBlockAllocator"* %13, i64* nonnull %7, i64 %18) #10
  br label %19

19:                                               ; preds = %1, %10
  %20 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 8, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %19
  %24 = ptrtoint i8* %21 to i64
  %25 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 8, i32 0, i32 1
  %26 = bitcast i8** %25 to i64*
  store i64 %24, i64* %26, align 8
  tail call void @_ZdlPv(i8* nonnull %21) #11
  br label %27

27:                                               ; preds = %19, %23
  %28 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %29 = load %"class.v8::internal::CodeAddressMap"*, %"class.v8::internal::CodeAddressMap"** %28, align 8
  store %"class.v8::internal::CodeAddressMap"* null, %"class.v8::internal::CodeAddressMap"** %28, align 8
  %30 = icmp eq %"class.v8::internal::CodeAddressMap"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.v8::internal::CodeAddressMap"* %29 to void (%"class.v8::internal::CodeAddressMap"*)***
  %33 = load void (%"class.v8::internal::CodeAddressMap"*)**, void (%"class.v8::internal::CodeAddressMap"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.v8::internal::CodeAddressMap"*)*, void (%"class.v8::internal::CodeAddressMap"*)** %33, i64 1
  %35 = load void (%"class.v8::internal::CodeAddressMap"*)*, void (%"class.v8::internal::CodeAddressMap"*)** %34, align 8
  tail call void %35(%"class.v8::internal::CodeAddressMap"* nonnull %29) #10
  br label %36

36:                                               ; preds = %27, %31
  %37 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 4
  %38 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.1146"*, %"struct.std::__1::__hash_node_base.1146"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.1146"* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %36, %41
  %42 = phi %"struct.std::__1::__hash_node_base.1146"* [ %44, %41 ], [ %39, %36 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1146", %"struct.std::__1::__hash_node_base.1146"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.1146"*, %"struct.std::__1::__hash_node_base.1146"** %43, align 8
  %45 = bitcast %"struct.std::__1::__hash_node_base.1146"* %42 to i8*
  tail call void @_ZdlPv(i8* %45) #11
  %46 = icmp eq %"struct.std::__1::__hash_node_base.1146"* %44, null
  br i1 %46, label %47, label %41

47:                                               ; preds = %41, %36
  %48 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.1146"**, %"struct.std::__1::__hash_node_base.1146"*** %48, align 8
  store %"struct.std::__1::__hash_node_base.1146"** null, %"struct.std::__1::__hash_node_base.1146"*** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.1146"** %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.std::__1::__hash_node_base.1146"** %49 to i8*
  tail call void @_ZdlPv(i8* %52) #11
  br label %53

53:                                               ; preds = %47, %51
  %54 = getelementptr inbounds %"class.v8::internal::SerializerReferenceMap", %"class.v8::internal::SerializerReferenceMap"* %37, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %55 = bitcast %"class.v8::internal::SerializerReferenceMap"* %37 to %"class.v8::internal::IdentityMapBase"*
  tail call void @_ZN2v88internal15IdentityMapBase5ClearEv(%"class.v8::internal::IdentityMapBase"* %55) #10
  tail call void @_ZN2v88internal15IdentityMapBaseD2Ev(%"class.v8::internal::IdentityMapBase"* %55) #10
  %56 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 3
  tail call void @_ZN2v88internal10Serializer14HotObjectsListD1Ev(%"class.v8::internal::Serializer::HotObjectsList"* %56) #10
  %57 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %64, label %60

60:                                               ; preds = %53
  %61 = ptrtoint i8* %58 to i64
  %62 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %63 = bitcast i8** %62 to i64*
  store i64 %61, i64* %63, align 8
  tail call void @_ZdlPv(i8* nonnull %58) #11
  br label %64

64:                                               ; preds = %53, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17ContextSerializerD0Ev(%"class.v8::internal::ContextSerializer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2v88internal17ContextSerializerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal10Serializer16OutputStatisticsEPKc(%"class.v8::internal::Serializer"* %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0)) #10
  %4 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = ptrtoint i8* %5 to i64
  %9 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %10 = bitcast i8** %9 to i64*
  store i64 %8, i64* %10, align 8
  tail call void @_ZdlPv(i8* nonnull %5) #11
  br label %11

11:                                               ; preds = %1, %7
  tail call void @_ZN2v88internal10SerializerD2Ev(%"class.v8::internal::Serializer"* %3) #10
  %12 = bitcast %"class.v8::internal::ContextSerializer"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17ContextSerializer9SerializeEPNS0_7ContextERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS5_ILS6_1ELb0EEEEEE(%"class.v8::internal::ContextSerializer"*, %"class.v8::internal::Context"*, %"class.v8::internal::CombinationAssertScope"* nocapture readnone dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::NativeContext", align 8
  %5 = alloca %"class.v8::internal::(anonymous namespace)::SanitizeNativeContextScope", align 8
  %6 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 0, i32 4
  %12 = tail call i64 @_ZN2v88internal7Context12global_proxyEv(%"class.v8::internal::Context"* %6) #10
  %13 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 0, i32 4, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %13, align 8
  %16 = shl i32 %14, 2
  %17 = or i32 %16, 1
  %18 = bitcast %"class.v8::internal::SerializerReferenceMap"* %11 to %"class.v8::internal::IdentityMapBase"*
  %19 = tail call i64* @_ZN2v88internal15IdentityMapBase11InsertEntryEm(%"class.v8::internal::IdentityMapBase"* %18, i64 %12) #10
  %20 = bitcast i64* %19 to i32*
  store i32 %17, i32* %20, align 4
  %21 = tail call i64 @_ZN2v88internal7Context12global_proxyEv(%"class.v8::internal::Context"* %6) #10
  %22 = and i64 %21, -4294967296
  %23 = add i64 %21, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = load i32, i32* %13, align 8
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %13, align 8
  %30 = shl i32 %28, 2
  %31 = or i32 %30, 1
  %32 = tail call i64* @_ZN2v88internal15IdentityMapBase11InsertEntryEm(%"class.v8::internal::IdentityMapBase"* %18, i64 %27) #10
  %33 = bitcast i64* %32 to i32*
  store i32 %31, i32* %33, align 4
  %34 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 0, i32 2
  %35 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %35, i64 0, i32 0, i32 7, i32 0, i64 4
  %37 = load i64, i64* %36, align 8
  %38 = load i64, i64* %8, align 8
  %39 = add i64 %38, 1023
  %40 = inttoptr i64 %39 to i32*
  %41 = trunc i64 %37 to i32
  store atomic volatile i32 %41, i32* %40 monotonic, align 4
  %42 = load i64, i64* %8, align 8
  %43 = add i64 %42, 1023
  %44 = and i64 %37, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %78, label %46

46:                                               ; preds = %3
  %47 = and i64 %42, -262144
  %48 = or i64 %47, 8
  %49 = inttoptr i64 %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, 262144
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %59, label %53

53:                                               ; preds = %46
  %54 = or i64 %47, 16
  %55 = inttoptr i64 %54 to %"class.v8::internal::Heap"**
  %56 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %55, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %56, i64 %42, i64 %43, i64 %37) #10
  %57 = load i64, i64* %8, align 8
  %58 = add i64 %57, 1023
  br label %59

59:                                               ; preds = %53, %46
  %60 = phi i64 [ %58, %53 ], [ %43, %46 ]
  %61 = phi i64 [ %57, %53 ], [ %42, %46 ]
  %62 = and i64 %37, -262144
  %63 = or i64 %62, 8
  %64 = inttoptr i64 %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = and i64 %65, 24
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %78, label %68

68:                                               ; preds = %59
  %69 = and i64 %61, -262144
  %70 = or i64 %69, 8
  %71 = inttoptr i64 %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = and i64 %72, 24
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %68
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %61, i64 %60, i64 %37) #10
  %76 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %3, %59, %68, %75
  %79 = phi i64 [ %42, %3 ], [ %61, %59 ], [ %61, %68 ], [ %77, %75 ]
  tail call void @_ZN2v88internal10MathRandom12ResetContextENS0_7ContextE(i64 %79) #10
  %80 = bitcast %"class.v8::internal::(anonymous namespace)::SanitizeNativeContextScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %80) #10
  %81 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %34, align 8
  %82 = load i64, i64* %8, align 8
  %83 = and i64 %82, -4294967296
  %84 = add i64 %82, -1
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %83, %87
  %89 = add i64 %88, 19
  %90 = inttoptr i64 %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i64
  %93 = or i64 %83, %92
  %94 = bitcast %"class.v8::internal::NativeContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94)
  %95 = getelementptr inbounds %"class.v8::internal::NativeContext", %"class.v8::internal::NativeContext"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %93, i64* %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::SanitizeNativeContextScope", %"class.v8::internal::(anonymous namespace)::SanitizeNativeContextScope"* %5, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %81, %"class.v8::internal::Isolate"** %96, align 8
  %97 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::SanitizeNativeContextScope", %"class.v8::internal::(anonymous namespace)::SanitizeNativeContextScope"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %93, i64* %97, align 8
  %98 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::SanitizeNativeContextScope", %"class.v8::internal::(anonymous namespace)::SanitizeNativeContextScope"* %5, i64 0, i32 2
  %99 = add i64 %93, 1027
  %100 = inttoptr i64 %99 to i64*
  %101 = load i64, i64* %100, align 1
  %102 = bitcast %"class.v8::internal::MicrotaskQueue"** %98 to i64*
  store i64 %101, i64* %102, align 8
  %103 = call i64 @_ZN2v88internal13NativeContext21OptimizedCodeListHeadEv(%"class.v8::internal::NativeContext"* nonnull %4) #10
  %104 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::SanitizeNativeContextScope", %"class.v8::internal::(anonymous namespace)::SanitizeNativeContextScope"* %5, i64 0, i32 3, i32 0, i32 0
  store i64 %103, i64* %104, align 8
  %105 = call i64 @_ZN2v88internal13NativeContext23DeoptimizedCodeListHeadEv(%"class.v8::internal::NativeContext"* nonnull %4) #10
  %106 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::SanitizeNativeContextScope", %"class.v8::internal::(anonymous namespace)::SanitizeNativeContextScope"* %5, i64 0, i32 4, i32 0, i32 0
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %81, i64 0, i32 0, i32 7, i32 0, i64 4
  %108 = load i64, i64* %107, align 8
  %109 = load i64, i64* %95, align 8
  %110 = add i64 %109, 1027
  %111 = inttoptr i64 %110 to i64*
  store i64 0, i64* %111, align 1
  call void @_ZN2v88internal13NativeContext24SetOptimizedCodeListHeadENS0_6ObjectE(%"class.v8::internal::NativeContext"* nonnull %4, i64 %108) #10
  call void @_ZN2v88internal13NativeContext26SetDeoptimizedCodeListHeadENS0_6ObjectE(%"class.v8::internal::NativeContext"* nonnull %4, i64 %108) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94)
  %112 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 0, i32 0, i32 0
  %113 = ptrtoint %"class.v8::internal::Context"* %1 to i64
  %114 = bitcast %"class.v8::internal::ContextSerializer"* %0 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)***
  %115 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %115, i64 3
  %117 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)** %116, align 8
  call void %117(%"class.v8::internal::RootVisitor"* %112, i32 18, i8* null, i64 %113) #10
  call void @_ZN2v88internal10Serializer24SerializeDeferredObjectsEv(%"class.v8::internal::Serializer"* %10) #10
  %118 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 5
  %119 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %118, i64 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %122 = load i8*, i8** %121, align 8
  %123 = icmp eq i8* %120, %122
  br i1 %123, label %235, label %124

124:                                              ; preds = %78
  %125 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 0, i32 1
  %126 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %127 = load i8*, i8** %126, align 8
  %128 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8
  %130 = icmp eq i8* %127, %129
  %131 = ptrtoint i8* %129 to i64
  br i1 %130, label %136, label %132

132:                                              ; preds = %124
  store i8 14, i8* %127, align 1
  %133 = getelementptr inbounds i8, i8* %127, i64 1
  %134 = ptrtoint i8* %133 to i64
  %135 = bitcast i8** %126 to i64*
  store i64 %134, i64* %135, align 8
  br label %181

136:                                              ; preds = %124
  %137 = ptrtoint i8* %127 to i64
  %138 = bitcast i8** %126 to i64*
  %139 = bitcast %"class.v8::internal::SnapshotByteSink"* %125 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = sub i64 %137, %140
  %142 = add i64 %141, 1
  %143 = icmp slt i64 %142, 0
  br i1 %143, label %144, label %146

144:                                              ; preds = %136
  %145 = bitcast %"class.v8::internal::SnapshotByteSink"* %125 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %145) #12
  unreachable

146:                                              ; preds = %136
  %147 = bitcast i8** %128 to i64*
  %148 = sub i64 %131, %140
  %149 = icmp ult i64 %148, 4611686018427387903
  br i1 %149, label %150, label %155

150:                                              ; preds = %146
  %151 = shl i64 %148, 1
  %152 = icmp ult i64 %151, %142
  %153 = select i1 %152, i64 %142, i64 %151
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %158, label %155

155:                                              ; preds = %150, %146
  %156 = phi i64 [ %153, %150 ], [ 9223372036854775807, %146 ]
  %157 = call i8* @_Znwm(i64 %156) #11
  br label %158

158:                                              ; preds = %155, %150
  %159 = phi i64 [ %156, %155 ], [ 0, %150 ]
  %160 = phi i8* [ %157, %155 ], [ null, %150 ]
  %161 = getelementptr inbounds i8, i8* %160, i64 %141
  %162 = getelementptr inbounds i8, i8* %160, i64 %159
  %163 = ptrtoint i8* %162 to i64
  store i8 14, i8* %161, align 1
  %164 = getelementptr inbounds i8, i8* %161, i64 1
  %165 = ptrtoint i8* %164 to i64
  %166 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %125, i64 0, i32 0, i32 0, i32 0
  %167 = load i8*, i8** %166, align 8
  %168 = load i64, i64* %138, align 8
  %169 = ptrtoint i8* %167 to i64
  %170 = sub i64 %168, %169
  %171 = sub i64 0, %170
  %172 = getelementptr inbounds i8, i8* %161, i64 %171
  %173 = ptrtoint i8* %172 to i64
  %174 = icmp sgt i64 %170, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %158
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %172, i8* align 1 %167, i64 %170, i1 false) #10
  %176 = load i8*, i8** %166, align 8
  br label %177

177:                                              ; preds = %175, %158
  %178 = phi i8* [ %167, %158 ], [ %176, %175 ]
  store i64 %173, i64* %139, align 8
  store i64 %165, i64* %138, align 8
  store i64 %163, i64* %147, align 8
  %179 = icmp eq i8* %178, null
  br i1 %179, label %181, label %180

180:                                              ; preds = %177
  call void @_ZdlPv(i8* nonnull %178) #11
  br label %181

181:                                              ; preds = %132, %177, %180
  call void @_ZN2v88internal16SnapshotByteSink6AppendERKS1_(%"class.v8::internal::SnapshotByteSink"* %125, %"class.v8::internal::SnapshotByteSink"* dereferenceable(24) %118) #10
  %182 = load i8*, i8** %126, align 8
  %183 = load i8*, i8** %128, align 8
  %184 = icmp eq i8* %182, %183
  %185 = ptrtoint i8* %183 to i64
  br i1 %184, label %190, label %186

186:                                              ; preds = %181
  store i8 11, i8* %182, align 1
  %187 = getelementptr inbounds i8, i8* %182, i64 1
  %188 = ptrtoint i8* %187 to i64
  %189 = bitcast i8** %126 to i64*
  store i64 %188, i64* %189, align 8
  br label %235

190:                                              ; preds = %181
  %191 = ptrtoint i8* %182 to i64
  %192 = bitcast i8** %126 to i64*
  %193 = bitcast %"class.v8::internal::SnapshotByteSink"* %125 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = sub i64 %191, %194
  %196 = add i64 %195, 1
  %197 = icmp slt i64 %196, 0
  br i1 %197, label %198, label %200

198:                                              ; preds = %190
  %199 = bitcast %"class.v8::internal::SnapshotByteSink"* %125 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %199) #12
  unreachable

200:                                              ; preds = %190
  %201 = bitcast i8** %128 to i64*
  %202 = sub i64 %185, %194
  %203 = icmp ult i64 %202, 4611686018427387903
  br i1 %203, label %204, label %209

204:                                              ; preds = %200
  %205 = shl i64 %202, 1
  %206 = icmp ult i64 %205, %196
  %207 = select i1 %206, i64 %196, i64 %205
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %212, label %209

209:                                              ; preds = %204, %200
  %210 = phi i64 [ %207, %204 ], [ 9223372036854775807, %200 ]
  %211 = call i8* @_Znwm(i64 %210) #11
  br label %212

212:                                              ; preds = %209, %204
  %213 = phi i64 [ %210, %209 ], [ 0, %204 ]
  %214 = phi i8* [ %211, %209 ], [ null, %204 ]
  %215 = getelementptr inbounds i8, i8* %214, i64 %195
  %216 = getelementptr inbounds i8, i8* %214, i64 %213
  %217 = ptrtoint i8* %216 to i64
  store i8 11, i8* %215, align 1
  %218 = getelementptr inbounds i8, i8* %215, i64 1
  %219 = ptrtoint i8* %218 to i64
  %220 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %125, i64 0, i32 0, i32 0, i32 0
  %221 = load i8*, i8** %220, align 8
  %222 = load i64, i64* %192, align 8
  %223 = ptrtoint i8* %221 to i64
  %224 = sub i64 %222, %223
  %225 = sub i64 0, %224
  %226 = getelementptr inbounds i8, i8* %215, i64 %225
  %227 = ptrtoint i8* %226 to i64
  %228 = icmp sgt i64 %224, 0
  br i1 %228, label %229, label %231

229:                                              ; preds = %212
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %226, i8* align 1 %221, i64 %224, i1 false) #10
  %230 = load i8*, i8** %220, align 8
  br label %231

231:                                              ; preds = %229, %212
  %232 = phi i8* [ %221, %212 ], [ %230, %229 ]
  store i64 %227, i64* %193, align 8
  store i64 %219, i64* %192, align 8
  store i64 %217, i64* %201, align 8
  %233 = icmp eq i8* %232, null
  br i1 %233, label %235, label %234

234:                                              ; preds = %231
  call void @_ZdlPv(i8* nonnull %232) #11
  br label %235

235:                                              ; preds = %234, %231, %186, %78
  call void @_ZN2v88internal10Serializer3PadEi(%"class.v8::internal::Serializer"* %10, i32 0) #10
  %236 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::SanitizeNativeContextScope", %"class.v8::internal::(anonymous namespace)::SanitizeNativeContextScope"* %5, i64 0, i32 1
  %237 = load i64, i64* %104, align 8
  call void @_ZN2v88internal13NativeContext26SetDeoptimizedCodeListHeadENS0_6ObjectE(%"class.v8::internal::NativeContext"* %236, i64 %237) #10
  %238 = load i64, i64* %106, align 8
  call void @_ZN2v88internal13NativeContext24SetOptimizedCodeListHeadENS0_6ObjectE(%"class.v8::internal::NativeContext"* %236, i64 %238) #10
  %239 = load i64, i64* %102, align 8
  %240 = getelementptr inbounds %"class.v8::internal::NativeContext", %"class.v8::internal::NativeContext"* %236, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load i64, i64* %240, align 8
  %242 = add i64 %241, 1027
  %243 = inttoptr i64 %242 to i64*
  store i64 %239, i64* %243, align 1
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %80) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN2v88internal7Context12global_proxyEv(%"class.v8::internal::Context"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2v88internal10MathRandom12ResetContextENS0_7ContextE(i64) local_unnamed_addr #2

declare void @_ZN2v88internal10Serializer24SerializeDeferredObjectsEv(%"class.v8::internal::Serializer"*) local_unnamed_addr #2

declare void @_ZN2v88internal16SnapshotByteSink6AppendERKS1_(%"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN2v88internal10Serializer3PadEi(%"class.v8::internal::Serializer"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17ContextSerializer19SerializeObjectImplENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::ContextSerializer"*, i64*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::HeapObject", align 8
  %4 = alloca %"class.v8::internal::Handle<v8::internal::FeedbackVector>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::JSFunction>::ObjectRef", align 8
  %6 = alloca %"class.v8::base::Optional.1202", align 8
  %7 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %8 = alloca %"class.v8::internal::Serializer::ObjectSerializer", align 8
  %9 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 0
  %10 = tail call zeroext i1 @_ZN2v88internal10Serializer18SerializeHotObjectENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Serializer"* %9, i64* %1) #10
  br i1 %10, label %340, label %11

11:                                               ; preds = %2
  %12 = tail call zeroext i1 @_ZN2v88internal10Serializer13SerializeRootENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Serializer"* %9, i64* %1) #10
  br i1 %12, label %340, label %13

13:                                               ; preds = %11
  %14 = tail call zeroext i1 @_ZN2v88internal10Serializer22SerializeBackReferenceENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Serializer"* %9, i64* %1) #10
  br i1 %14, label %340, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 1
  %17 = load %"class.v8::internal::StartupSerializer"*, %"class.v8::internal::StartupSerializer"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 0, i32 1
  %19 = tail call zeroext i1 @_ZN2v88internal17StartupSerializer33SerializeUsingReadOnlyObjectCacheEPNS0_16SnapshotByteSinkENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::StartupSerializer"* %17, %"class.v8::internal::SnapshotByteSink"* %18, i64* %1) #10
  br i1 %19, label %340, label %20

20:                                               ; preds = %15
  %21 = load i64, i64* %1, align 8
  %22 = and i64 %21, -4294967296
  %23 = add i64 %21, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = icmp ult i16 %30, 65
  br i1 %31, label %97, label %32

32:                                               ; preds = %20
  %33 = load atomic i32, i32* %24 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %22, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp eq i16 %38, 179
  br i1 %39, label %97, label %40

40:                                               ; preds = %32
  %41 = load atomic i32, i32* %24 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %22, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = icmp eq i16 %46, 66
  br i1 %47, label %97, label %48

48:                                               ; preds = %40
  %49 = load atomic i32, i32* %24 monotonic, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %22, %50
  %52 = add i64 %51, 7
  %53 = inttoptr i64 %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = icmp eq i16 %54, 162
  br i1 %55, label %97, label %56

56:                                               ; preds = %48
  %57 = load atomic i32, i32* %24 monotonic, align 4
  %58 = zext i32 %57 to i64
  %59 = or i64 %22, %58
  %60 = add i64 %59, 7
  %61 = inttoptr i64 %60 to i16*
  %62 = load atomic i16, i16* %61 monotonic, align 2
  %63 = icmp eq i16 %62, 178
  br i1 %63, label %97, label %64

64:                                               ; preds = %56
  %65 = load atomic i32, i32* %24 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %22, %66
  %68 = add i64 %67, 7
  %69 = inttoptr i64 %68 to i16*
  %70 = load atomic i16, i16* %69 monotonic, align 2
  %71 = icmp eq i16 %70, 86
  br i1 %71, label %97, label %72

72:                                               ; preds = %64
  %73 = load atomic i32, i32* %24 monotonic, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %22, %74
  %76 = add i64 %75, 7
  %77 = inttoptr i64 %76 to i16*
  %78 = load atomic i16, i16* %77 monotonic, align 2
  %79 = add i16 %78, -83
  %80 = icmp ult i16 %79, 2
  br i1 %80, label %97, label %81

81:                                               ; preds = %72
  %82 = load atomic i32, i32* %24 monotonic, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %22, %83
  %85 = add i64 %84, 7
  %86 = inttoptr i64 %85 to i16*
  %87 = load atomic i16, i16* %86 monotonic, align 2
  %88 = icmp eq i16 %87, 99
  br i1 %88, label %97, label %89

89:                                               ; preds = %81
  %90 = load atomic i32, i32* %24 monotonic, align 4
  %91 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 0, i32 2
  %92 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %92, i64 0, i32 0, i32 7, i32 0, i64 13
  %94 = load i64, i64* %93, align 8
  %95 = trunc i64 %94 to i32
  %96 = icmp eq i32 %90, %95
  br i1 %96, label %97, label %99

97:                                               ; preds = %20, %32, %40, %48, %56, %64, %72, %81, %89
  %98 = load %"class.v8::internal::StartupSerializer"*, %"class.v8::internal::StartupSerializer"** %16, align 8
  tail call void @_ZN2v88internal17StartupSerializer32SerializeUsingStartupObjectCacheEPNS0_16SnapshotByteSinkENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::StartupSerializer"* %98, %"class.v8::internal::SnapshotByteSink"* %18, i64* %1) #10
  br label %340

99:                                               ; preds = %89
  %100 = load atomic i32, i32* %24 monotonic, align 4
  %101 = zext i32 %100 to i64
  %102 = or i64 %22, %101
  %103 = add i64 %102, 7
  %104 = inttoptr i64 %103 to i16*
  %105 = load atomic i16, i16* %104 monotonic, align 2
  %106 = icmp eq i16 %105, 167
  br i1 %106, label %107, label %116

107:                                              ; preds = %99
  %108 = bitcast %"class.v8::internal::Handle<v8::internal::FeedbackVector>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #10
  %109 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FeedbackVector>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FeedbackVector>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %21, i64* %109, align 8
  %110 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FeedbackVector>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FeedbackVector>::ObjectRef"* %4, i64 0, i32 0
  %111 = call zeroext i1 @_ZN2v88internal14FeedbackVector10ClearSlotsEPNS0_7IsolateE(%"class.v8::internal::FeedbackVector"* nonnull %110, %"class.v8::internal::Isolate"* %92) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #10
  %112 = load i64, i64* %1, align 8
  %113 = and i64 %112, -4294967296
  %114 = add i64 %112, -1
  %115 = inttoptr i64 %114 to i32*
  br label %116

116:                                              ; preds = %107, %99
  %117 = phi i32* [ %115, %107 ], [ %24, %99 ]
  %118 = phi i64 [ %113, %107 ], [ %22, %99 ]
  %119 = phi i64 [ %112, %107 ], [ %21, %99 ]
  %120 = load atomic i32, i32* %117 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %118, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = icmp eq i16 %125, 102
  br i1 %126, label %127, label %135

127:                                              ; preds = %116
  %128 = load i8, i8* @_ZN2v88internal29FLAG_lazy_feedback_allocationE, align 1, !range !2
  %129 = icmp eq i8 %128, 0
  %130 = load i32, i32* @_ZN2v88internal21FLAG_interrupt_budgetE, align 4
  %131 = load i32, i32* @_ZN2v88internal42FLAG_budget_for_feedback_vector_allocationE, align 4
  %132 = select i1 %129, i32 %130, i32 %131
  %133 = add i64 %119, 7
  %134 = inttoptr i64 %133 to i32*
  store i32 %132, i32* %134, align 4
  br label %135

135:                                              ; preds = %127, %116
  %136 = call zeroext i1 @_ZN2v88internal17ContextSerializer35SerializeJSObjectWithEmbedderFieldsENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::ContextSerializer"* %0, i64* %1)
  br i1 %136, label %340, label %137

137:                                              ; preds = %135
  %138 = load i64, i64* %1, align 8
  %139 = and i64 %138, -4294967296
  %140 = add i64 %138, -1
  %141 = inttoptr i64 %140 to i32*
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = zext i32 %142 to i64
  %144 = or i64 %139, %143
  %145 = add i64 %144, 7
  %146 = inttoptr i64 %145 to i16*
  %147 = load atomic i16, i16* %146 monotonic, align 2
  %148 = add i16 %147, -1059
  %149 = icmp ult i16 %148, 15
  br i1 %149, label %150, label %317

150:                                              ; preds = %137
  %151 = bitcast %"class.v8::internal::Handle<v8::internal::JSFunction>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #10
  %152 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSFunction>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSFunction>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %138, i64* %152, align 8
  %153 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSFunction>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSFunction>::ObjectRef"* %5, i64 0, i32 0
  %154 = getelementptr inbounds %"class.v8::base::Optional.1202", %"class.v8::base::Optional.1202"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %154, align 8
  %155 = getelementptr inbounds %"class.v8::base::Optional.1202", %"class.v8::base::Optional.1202"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %156 = bitcast %union.anon.1206* %155 to i8*
  store i8 0, i8* %156, align 8
  call void @_ZN2v88internal10JSFunction22ResetIfBytecodeFlushedENS_4base8OptionalINSt3__18functionIFvNS0_10HeapObjectENS0_20CompressedObjectSlotES6_EEEEE(%"class.v8::internal::JSFunction"* nonnull %153, %"class.v8::base::Optional.1202"* nonnull %6)
  %157 = load i8, i8* %154, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %168, label %159

159:                                              ; preds = %150
  %160 = getelementptr inbounds %"class.v8::base::Optional.1202", %"class.v8::base::Optional.1202"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %161 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %160, align 8
  %162 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %161, i64 0, i32 1
  %163 = load void (i8*)*, void (i8*)** %162, align 8
  %164 = icmp eq void (i8*)* %163, null
  br i1 %164, label %168, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.v8::base::Optional.1202", %"class.v8::base::Optional.1202"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %167 = load i8*, i8** %166, align 8
  call void %163(i8* %167) #10
  br label %168

168:                                              ; preds = %150, %159, %165
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #10
  %169 = load i64, i64* %1, align 8
  %170 = and i64 %169, -4294967296
  %171 = add i64 %169, 23
  %172 = inttoptr i64 %171 to i32*
  %173 = load atomic i32, i32* %172 acquire, align 4
  %174 = zext i32 %173 to i64
  %175 = or i64 %170, %174
  %176 = add i64 %175, 31
  %177 = inttoptr i64 %176 to i32*
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = icmp eq i32 %178, 85
  br i1 %179, label %317, label %180

180:                                              ; preds = %168
  %181 = add i64 %169, 11
  %182 = inttoptr i64 %181 to i32*
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = zext i32 %183 to i64
  %185 = or i64 %170, %184
  %186 = add i64 %185, 3
  %187 = inttoptr i64 %186 to i32*
  %188 = load atomic i32, i32* %187 acquire, align 4
  %189 = zext i32 %188 to i64
  %190 = or i64 %170, %189
  %191 = icmp eq i32 %188, 170
  br i1 %191, label %317, label %192

192:                                              ; preds = %180
  %193 = and i64 %189, 1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %206, label %195

195:                                              ; preds = %192
  %196 = add i64 %190, -1
  %197 = inttoptr i64 %196 to i32*
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = zext i32 %198 to i64
  %200 = or i64 %170, %199
  %201 = add i64 %200, 7
  %202 = inttoptr i64 %201 to i16*
  %203 = load atomic i16, i16* %202 monotonic, align 2
  %204 = add i16 %203, -157
  %205 = icmp ugt i16 %204, 1
  br i1 %205, label %206, label %317

206:                                              ; preds = %192, %195
  %207 = load i64, i64* %1, align 8
  %208 = add i64 %207, 11
  %209 = inttoptr i64 %208 to i32*
  %210 = load atomic i32, i32* %209 monotonic, align 4
  %211 = and i64 %207, -4294967296
  %212 = zext i32 %210 to i64
  %213 = or i64 %211, %212
  %214 = add i64 %213, 3
  %215 = inttoptr i64 %214 to i32*
  %216 = load atomic i32, i32* %215 acquire, align 4
  %217 = zext i32 %216 to i64
  %218 = and i64 %217, 1
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %274, label %220

220:                                              ; preds = %206
  %221 = or i64 %211, %217
  %222 = add i64 %221, -1
  %223 = inttoptr i64 %222 to i32*
  %224 = load atomic i32, i32* %223 monotonic, align 4
  %225 = zext i32 %224 to i64
  %226 = or i64 %211, %225
  %227 = add i64 %226, 7
  %228 = inttoptr i64 %227 to i16*
  %229 = load atomic i16, i16* %228 monotonic, align 2
  %230 = icmp eq i16 %229, 94
  br i1 %230, label %231, label %274

231:                                              ; preds = %220
  %232 = load i64, i64* %1, align 8
  %233 = add i64 %232, 11
  %234 = inttoptr i64 %233 to i32*
  %235 = load atomic i32, i32* %234 monotonic, align 4
  %236 = and i64 %232, -4294967296
  %237 = zext i32 %235 to i64
  %238 = or i64 %236, %237
  %239 = add i64 %238, 3
  %240 = inttoptr i64 %239 to i32*
  %241 = load atomic i32, i32* %240 acquire, align 4
  %242 = zext i32 %241 to i64
  %243 = or i64 %236, %242
  %244 = add i64 %243, 7
  %245 = inttoptr i64 %244 to i32*
  %246 = load i32, i32* %245, align 4
  %247 = zext i32 %246 to i64
  %248 = or i64 %236, %247
  store atomic volatile i32 %246, i32* %240 release, align 4
  %249 = and i64 %247, 1
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %274, label %251

251:                                              ; preds = %231
  %252 = and i64 %238, -262144
  %253 = or i64 %252, 8
  %254 = inttoptr i64 %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = and i64 %255, 262144
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %262, label %258

258:                                              ; preds = %251
  %259 = or i64 %252, 16
  %260 = inttoptr i64 %259 to %"class.v8::internal::Heap"**
  %261 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %260, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %261, i64 %238, i64 %239, i64 %248) #10
  br label %262

262:                                              ; preds = %258, %251
  %263 = and i64 %248, -262144
  %264 = or i64 %263, 8
  %265 = inttoptr i64 %264 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = and i64 %266, 24
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %274, label %269

269:                                              ; preds = %262
  %270 = load i64, i64* %254, align 8
  %271 = and i64 %270, 24
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %274

273:                                              ; preds = %269
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %238, i64 %239, i64 %248) #10
  br label %274

274:                                              ; preds = %206, %273, %269, %262, %231, %220
  %275 = load i64, i64* %1, align 8
  %276 = bitcast %"class.v8::internal::SharedFunctionInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %276) #10
  %277 = add i64 %275, 11
  %278 = inttoptr i64 %277 to i32*
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i64 %275, -4294967296
  %281 = zext i32 %279 to i64
  %282 = or i64 %280, %281
  %283 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %282, i64* %283, align 8
  %284 = call i64 @_ZNK2v88internal18SharedFunctionInfo7GetCodeEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %7) #10
  %285 = add i64 %275, 23
  %286 = inttoptr i64 %285 to i32*
  %287 = trunc i64 %284 to i32
  store atomic volatile i32 %287, i32* %286 release, align 4
  %288 = and i64 %284, 1
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %301, label %290

290:                                              ; preds = %274
  %291 = and i64 %275, -262144
  %292 = or i64 %291, 8
  %293 = inttoptr i64 %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = and i64 %294, 262144
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %301, label %297

297:                                              ; preds = %290
  %298 = or i64 %291, 16
  %299 = inttoptr i64 %298 to %"class.v8::internal::Heap"**
  %300 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %299, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %300, i64 %275, i64 %285, i64 %284) #10
  br label %301

301:                                              ; preds = %297, %290, %274
  %302 = and i64 %284, -262144
  %303 = or i64 %302, 8
  %304 = inttoptr i64 %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = and i64 %305, 24
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %316, label %308

308:                                              ; preds = %301
  %309 = and i64 %275, -262144
  %310 = or i64 %309, 8
  %311 = inttoptr i64 %310 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = and i64 %312, 24
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %315, label %316

315:                                              ; preds = %308
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %275, i64 %285, i64 %284) #10
  br label %316

316:                                              ; preds = %301, %308, %315
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %276) #10
  br label %317

317:                                              ; preds = %180, %168, %195, %316, %137
  %318 = load i64, i64* %1, align 8
  %319 = bitcast %"class.v8::internal::HeapObject"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %319)
  %320 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %318, i64* %320, align 8
  %321 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 3
  %322 = load i8, i8* %321, align 8, !range !2
  %323 = icmp eq i8 %322, 0
  br i1 %323, label %329, label %324

324:                                              ; preds = %317
  %325 = call zeroext i1 @_ZNK2v88internal10HeapObject14NeedsRehashingEv(%"class.v8::internal::HeapObject"* nonnull %3) #10
  br i1 %325, label %326, label %329

326:                                              ; preds = %324
  %327 = call zeroext i1 @_ZNK2v88internal10HeapObject13CanBeRehashedEv(%"class.v8::internal::HeapObject"* nonnull %3) #10
  br i1 %327, label %329, label %328

328:                                              ; preds = %326
  store i8 0, i8* %321, align 8
  br label %329

329:                                              ; preds = %317, %324, %326, %328
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %319)
  %330 = bitcast %"class.v8::internal::Serializer::ObjectSerializer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %330) #10
  %331 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %8, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2v88internal10Serializer16ObjectSerializerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %331, align 8
  %332 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %8, i64 0, i32 1
  %333 = bitcast %"class.v8::internal::Isolate"** %91 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = bitcast %"class.v8::internal::Isolate"** %332 to i64*
  store i64 %334, i64* %335, align 8
  %336 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %8, i64 0, i32 2
  store %"class.v8::internal::Serializer"* %9, %"class.v8::internal::Serializer"** %336, align 8
  %337 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %8, i64 0, i32 3, i32 0, i32 0
  store i64* %1, i64** %337, align 8
  %338 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %8, i64 0, i32 4
  store %"class.v8::internal::SnapshotByteSink"* %18, %"class.v8::internal::SnapshotByteSink"** %338, align 8
  %339 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %8, i64 0, i32 5
  store i32 0, i32* %339, align 8
  call void @_ZN2v88internal10Serializer16ObjectSerializer9SerializeEv(%"class.v8::internal::Serializer::ObjectSerializer"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %330) #10
  br label %340

340:                                              ; preds = %135, %15, %13, %11, %2, %329, %97
  ret void
}

declare zeroext i1 @_ZN2v88internal10Serializer18SerializeHotObjectENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Serializer"*, i64*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal10Serializer13SerializeRootENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Serializer"*, i64*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal10Serializer22SerializeBackReferenceENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Serializer"*, i64*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal17StartupSerializer33SerializeUsingReadOnlyObjectCacheEPNS0_16SnapshotByteSinkENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::StartupSerializer"*, %"class.v8::internal::SnapshotByteSink"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal17ContextSerializer31ShouldBeInTheStartupObjectCacheENS0_10HeapObjectE(%"class.v8::internal::ContextSerializer"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = and i64 %1, -4294967296
  %4 = add i64 %1, -1
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = zext i32 %6 to i64
  %8 = or i64 %3, %7
  %9 = add i64 %8, 7
  %10 = inttoptr i64 %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = icmp ult i16 %11, 65
  br i1 %12, label %78, label %13

13:                                               ; preds = %2
  %14 = load atomic i32, i32* %5 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %3, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = icmp eq i16 %19, 179
  br i1 %20, label %78, label %21

21:                                               ; preds = %13
  %22 = load atomic i32, i32* %5 monotonic, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %3, %23
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = icmp eq i16 %27, 66
  br i1 %28, label %78, label %29

29:                                               ; preds = %21
  %30 = load atomic i32, i32* %5 monotonic, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %3, %31
  %33 = add i64 %32, 7
  %34 = inttoptr i64 %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = icmp eq i16 %35, 162
  br i1 %36, label %78, label %37

37:                                               ; preds = %29
  %38 = load atomic i32, i32* %5 monotonic, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %3, %39
  %41 = add i64 %40, 7
  %42 = inttoptr i64 %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = icmp eq i16 %43, 178
  br i1 %44, label %78, label %45

45:                                               ; preds = %37
  %46 = load atomic i32, i32* %5 monotonic, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %3, %47
  %49 = add i64 %48, 7
  %50 = inttoptr i64 %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = icmp eq i16 %51, 86
  br i1 %52, label %78, label %53

53:                                               ; preds = %45
  %54 = load atomic i32, i32* %5 monotonic, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %3, %55
  %57 = add i64 %56, 7
  %58 = inttoptr i64 %57 to i16*
  %59 = load atomic i16, i16* %58 monotonic, align 2
  %60 = add i16 %59, -83
  %61 = icmp ult i16 %60, 2
  br i1 %61, label %78, label %62

62:                                               ; preds = %53
  %63 = load atomic i32, i32* %5 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %3, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp eq i16 %68, 99
  br i1 %69, label %78, label %70

70:                                               ; preds = %62
  %71 = load atomic i32, i32* %5 monotonic, align 4
  %72 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 0, i32 2
  %73 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %73, i64 0, i32 0, i32 7, i32 0, i64 13
  %75 = load i64, i64* %74, align 8
  %76 = trunc i64 %75 to i32
  %77 = icmp eq i32 %71, %76
  br label %78

78:                                               ; preds = %70, %62, %53, %45, %37, %29, %21, %13, %2
  %79 = phi i1 [ true, %62 ], [ true, %53 ], [ true, %45 ], [ true, %37 ], [ true, %29 ], [ true, %21 ], [ true, %13 ], [ true, %2 ], [ %77, %70 ]
  ret i1 %79
}

declare void @_ZN2v88internal17StartupSerializer32SerializeUsingStartupObjectCacheEPNS0_16SnapshotByteSinkENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::StartupSerializer"*, %"class.v8::internal::SnapshotByteSink"*, i64*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal14FeedbackVector10ClearSlotsEPNS0_7IsolateE(%"class.v8::internal::FeedbackVector"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal17ContextSerializer35SerializeJSObjectWithEmbedderFieldsENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::ContextSerializer"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::PerIsolateAssertScope", align 8
  %4 = alloca %"class.std::__1::vector.97", align 8
  %5 = alloca %"class.std::__1::vector.1208", align 8
  %6 = alloca %"class.v8::internal::Serializer::ObjectSerializer", align 8
  %7 = load i64, i64* %1, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = icmp ugt i16 %16, 188
  br i1 %17, label %18, label %522

18:                                               ; preds = %2
  %19 = load atomic i32, i32* %10 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %8, %20
  %22 = add i64 %21, 3
  %23 = inttoptr i64 %22 to i8*
  %24 = load atomic i8, i8* %23 monotonic, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw nsw i32 %25, 2
  %27 = icmp eq i8 %24, 0
  br i1 %27, label %522, label %28

28:                                               ; preds = %18
  %29 = add i64 %21, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = icmp eq i16 %31, 1057
  br i1 %32, label %39, label %33

33:                                               ; preds = %28
  %34 = add i64 %21, 9
  %35 = inttoptr i64 %34 to i8*
  %36 = load atomic i8, i8* %35 monotonic, align 1
  %37 = icmp slt i8 %36, 0
  %38 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %31, i1 zeroext %37) #10
  br label %39

39:                                               ; preds = %28, %33
  %40 = phi i32 [ %38, %33 ], [ 12, %28 ]
  %41 = sub nsw i32 %26, %40
  %42 = ashr i32 %41, 2
  %43 = load atomic i8, i8* %23 monotonic, align 1
  %44 = zext i8 %43 to i32
  %45 = add i64 %21, 4
  %46 = inttoptr i64 %45 to i8*
  %47 = load atomic i8, i8* %46 monotonic, align 1
  %48 = zext i8 %47 to i32
  %49 = sub nsw i32 %42, %44
  %50 = add nsw i32 %49, %48
  %51 = sdiv i32 %50, 2
  %52 = add nsw i32 %50, 1
  %53 = icmp ult i32 %52, 3
  br i1 %53, label %522, label %54

54:                                               ; preds = %39
  %55 = icmp sgt i32 %50, 1
  br i1 %55, label %57, label %56, !prof !3

56:                                               ; preds = %54
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

57:                                               ; preds = %54
  %58 = bitcast %"class.v8::internal::PerIsolateAssertScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #10
  %59 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 0
  %60 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 0, i32 2
  %61 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %60, align 8
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EEC1EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope"* nonnull %3, %"class.v8::internal::Isolate"* %61) #10
  %62 = bitcast i64* %1 to %"class.v8::Object"*
  %63 = bitcast %"class.std::__1::vector.97"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 0, i64 24, i1 false) #10
  %64 = bitcast %"class.std::__1::vector.1208"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 24, i1 false) #10
  %65 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %4, i64 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %67 = bitcast i64** %65 to i64*
  %68 = bitcast %"class.std::__1::vector.97"* %4 to i64*
  %69 = bitcast i64** %66 to i64*
  %70 = getelementptr inbounds %"class.std::__1::vector.1208", %"class.std::__1::vector.1208"* %5, i64 0, i32 0, i32 1
  %71 = getelementptr inbounds %"class.std::__1::vector.1208", %"class.std::__1::vector.1208"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %72 = bitcast %"class.v8::StartupData"** %70 to i64*
  %73 = bitcast %"class.std::__1::vector.1208"* %5 to i64*
  %74 = bitcast %"class.v8::StartupData"** %71 to i64*
  %75 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 2, i32 0
  %76 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 2, i32 1
  br label %80

77:                                               ; preds = %336
  %78 = getelementptr inbounds %"class.std::__1::vector.1208", %"class.std::__1::vector.1208"* %5, i64 0, i32 0, i32 0
  %79 = zext i32 %51 to i64
  br label %366

80:                                               ; preds = %336, %57
  %81 = phi i32 [ 0, %57 ], [ %337, %336 ]
  %82 = load i64, i64* %1, align 8
  %83 = and i64 %82, -4294967296
  %84 = add i64 %82, -1
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %83, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = icmp eq i16 %91, 1057
  br i1 %92, label %99, label %93

93:                                               ; preds = %80
  %94 = add i64 %88, 9
  %95 = inttoptr i64 %94 to i8*
  %96 = load atomic i8, i8* %95 monotonic, align 1
  %97 = icmp slt i8 %96, 0
  %98 = call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %91, i1 zeroext %97) #10
  br label %99

99:                                               ; preds = %80, %93
  %100 = phi i32 [ %98, %93 ], [ 12, %80 ]
  %101 = shl i32 %81, 3
  %102 = add nsw i32 %100, %101
  %103 = sext i32 %102 to i64
  %104 = add i64 %84, %103
  %105 = inttoptr i64 %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = load i64*, i64** %65, align 8
  %108 = load i64*, i64** %66, align 8
  %109 = icmp ult i64* %107, %108
  %110 = ptrtoint i64* %108 to i64
  br i1 %109, label %111, label %114

111:                                              ; preds = %99
  store i64 %106, i64* %107, align 8
  %112 = getelementptr inbounds i64, i64* %107, i64 1
  %113 = ptrtoint i64* %112 to i64
  store i64 %113, i64* %67, align 8
  br label %157

114:                                              ; preds = %99
  %115 = ptrtoint i64* %107 to i64
  %116 = load i64, i64* %68, align 8
  %117 = sub i64 %115, %116
  %118 = ashr exact i64 %117, 3
  %119 = add nsw i64 %118, 1
  %120 = icmp ugt i64 %119, 2305843009213693951
  br i1 %120, label %121, label %123

121:                                              ; preds = %114
  %122 = bitcast %"class.std::__1::vector.97"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %122) #12
  unreachable

123:                                              ; preds = %114
  %124 = sub i64 %110, %116
  %125 = ashr exact i64 %124, 3
  %126 = icmp ult i64 %125, 1152921504606846975
  br i1 %126, label %127, label %135

127:                                              ; preds = %123
  %128 = ashr exact i64 %124, 2
  %129 = icmp ult i64 %128, %119
  %130 = select i1 %129, i64 %119, i64 %128
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %140, label %132

132:                                              ; preds = %127
  %133 = icmp ugt i64 %130, 2305843009213693951
  br i1 %133, label %134, label %135

134:                                              ; preds = %132
  call void @abort() #12
  unreachable

135:                                              ; preds = %132, %123
  %136 = phi i64 [ %130, %132 ], [ 2305843009213693951, %123 ]
  %137 = shl i64 %136, 3
  %138 = call i8* @_Znwm(i64 %137) #11
  %139 = bitcast i8* %138 to i64*
  br label %140

140:                                              ; preds = %135, %127
  %141 = phi i64 [ %136, %135 ], [ 0, %127 ]
  %142 = phi i8* [ %138, %135 ], [ null, %127 ]
  %143 = phi i64* [ %139, %135 ], [ null, %127 ]
  %144 = getelementptr inbounds i64, i64* %143, i64 %118
  %145 = getelementptr inbounds i64, i64* %143, i64 %141
  %146 = ptrtoint i64* %145 to i64
  store i64 %106, i64* %144, align 8
  %147 = getelementptr inbounds i64, i64* %144, i64 1
  %148 = ptrtoint i64* %147 to i64
  %149 = ptrtoint i64* %143 to i64
  %150 = icmp sgt i64 %117, 0
  br i1 %150, label %151, label %153

151:                                              ; preds = %140
  %152 = inttoptr i64 %116 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 8 %152, i64 %117, i1 false) #10
  br label %153

153:                                              ; preds = %151, %140
  store i64 %149, i64* %68, align 8
  store i64 %148, i64* %67, align 8
  store i64 %146, i64* %69, align 8
  %154 = icmp eq i64 %116, 0
  br i1 %154, label %157, label %155

155:                                              ; preds = %153
  %156 = inttoptr i64 %116 to i8*
  call void @_ZdlPv(i8* %156) #11
  br label %157

157:                                              ; preds = %111, %153, %155
  %158 = inttoptr i64 %104 to i32*
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 1
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %217, label %162

162:                                              ; preds = %157
  %163 = load %"class.v8::StartupData"*, %"class.v8::StartupData"** %70, align 8
  %164 = load %"class.v8::StartupData"*, %"class.v8::StartupData"** %71, align 8
  %165 = icmp ult %"class.v8::StartupData"* %163, %164
  %166 = ptrtoint %"class.v8::StartupData"* %164 to i64
  br i1 %165, label %167, label %172

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %163, i64 0, i32 0
  store i8* null, i8** %168, align 8
  %169 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %163, i64 0, i32 1
  store i32 0, i32* %169, align 8
  %170 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %163, i64 1
  %171 = ptrtoint %"class.v8::StartupData"* %170 to i64
  store i64 %171, i64* %72, align 8
  br label %336

172:                                              ; preds = %162
  %173 = ptrtoint %"class.v8::StartupData"* %163 to i64
  %174 = load i64, i64* %73, align 8
  %175 = sub i64 %173, %174
  %176 = ashr exact i64 %175, 4
  %177 = add nsw i64 %176, 1
  %178 = icmp ugt i64 %177, 1152921504606846975
  br i1 %178, label %179, label %181

179:                                              ; preds = %172
  %180 = bitcast %"class.std::__1::vector.1208"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %180) #12
  unreachable

181:                                              ; preds = %172
  %182 = sub i64 %166, %174
  %183 = ashr exact i64 %182, 4
  %184 = icmp ult i64 %183, 576460752303423487
  br i1 %184, label %185, label %193

185:                                              ; preds = %181
  %186 = ashr exact i64 %182, 3
  %187 = icmp ult i64 %186, %177
  %188 = select i1 %187, i64 %177, i64 %186
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %198, label %190

190:                                              ; preds = %185
  %191 = icmp ugt i64 %188, 1152921504606846975
  br i1 %191, label %192, label %193

192:                                              ; preds = %190
  call void @abort() #12
  unreachable

193:                                              ; preds = %190, %181
  %194 = phi i64 [ %188, %190 ], [ 1152921504606846975, %181 ]
  %195 = shl i64 %194, 4
  %196 = call i8* @_Znwm(i64 %195) #11
  %197 = bitcast i8* %196 to %"class.v8::StartupData"*
  br label %198

198:                                              ; preds = %193, %185
  %199 = phi i64 [ %194, %193 ], [ 0, %185 ]
  %200 = phi i8* [ %196, %193 ], [ null, %185 ]
  %201 = phi %"class.v8::StartupData"* [ %197, %193 ], [ null, %185 ]
  %202 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %201, i64 %176
  %203 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %201, i64 %199
  %204 = ptrtoint %"class.v8::StartupData"* %203 to i64
  %205 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %202, i64 0, i32 0
  store i8* null, i8** %205, align 8
  %206 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %201, i64 %176, i32 1
  store i32 0, i32* %206, align 8
  %207 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %202, i64 1
  %208 = ptrtoint %"class.v8::StartupData"* %207 to i64
  %209 = ptrtoint %"class.v8::StartupData"* %201 to i64
  %210 = icmp sgt i64 %175, 0
  br i1 %210, label %211, label %213

211:                                              ; preds = %198
  %212 = inttoptr i64 %174 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %200, i8* align 8 %212, i64 %175, i1 false) #10
  br label %213

213:                                              ; preds = %211, %198
  store i64 %209, i64* %73, align 8
  store i64 %208, i64* %72, align 8
  store i64 %204, i64* %74, align 8
  %214 = icmp eq i64 %174, 0
  br i1 %214, label %336, label %215

215:                                              ; preds = %213
  %216 = inttoptr i64 %174 to i8*
  call void @_ZdlPv(i8* %216) #11
  br label %336

217:                                              ; preds = %157
  %218 = load { i8*, i32 } (%"class.v8::Object"*, i32, i8*)*, { i8*, i32 } (%"class.v8::Object"*, i32, i8*)** %75, align 8
  %219 = icmp eq { i8*, i32 } (%"class.v8::Object"*, i32, i8*)* %218, null
  %220 = icmp eq i32 %159, 0
  %221 = and i1 %220, %219
  br i1 %221, label %222, label %277

222:                                              ; preds = %217
  %223 = load %"class.v8::StartupData"*, %"class.v8::StartupData"** %70, align 8
  %224 = load %"class.v8::StartupData"*, %"class.v8::StartupData"** %71, align 8
  %225 = icmp ult %"class.v8::StartupData"* %223, %224
  %226 = ptrtoint %"class.v8::StartupData"* %224 to i64
  br i1 %225, label %227, label %232

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %223, i64 0, i32 0
  store i8* null, i8** %228, align 8
  %229 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %223, i64 0, i32 1
  store i32 0, i32* %229, align 8
  %230 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %223, i64 1
  %231 = ptrtoint %"class.v8::StartupData"* %230 to i64
  store i64 %231, i64* %72, align 8
  br label %336

232:                                              ; preds = %222
  %233 = ptrtoint %"class.v8::StartupData"* %223 to i64
  %234 = load i64, i64* %73, align 8
  %235 = sub i64 %233, %234
  %236 = ashr exact i64 %235, 4
  %237 = add nsw i64 %236, 1
  %238 = icmp ugt i64 %237, 1152921504606846975
  br i1 %238, label %239, label %241

239:                                              ; preds = %232
  %240 = bitcast %"class.std::__1::vector.1208"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %240) #12
  unreachable

241:                                              ; preds = %232
  %242 = sub i64 %226, %234
  %243 = ashr exact i64 %242, 4
  %244 = icmp ult i64 %243, 576460752303423487
  br i1 %244, label %245, label %253

245:                                              ; preds = %241
  %246 = ashr exact i64 %242, 3
  %247 = icmp ult i64 %246, %237
  %248 = select i1 %247, i64 %237, i64 %246
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %258, label %250

250:                                              ; preds = %245
  %251 = icmp ugt i64 %248, 1152921504606846975
  br i1 %251, label %252, label %253

252:                                              ; preds = %250
  call void @abort() #12
  unreachable

253:                                              ; preds = %250, %241
  %254 = phi i64 [ %248, %250 ], [ 1152921504606846975, %241 ]
  %255 = shl i64 %254, 4
  %256 = call i8* @_Znwm(i64 %255) #11
  %257 = bitcast i8* %256 to %"class.v8::StartupData"*
  br label %258

258:                                              ; preds = %253, %245
  %259 = phi i64 [ %254, %253 ], [ 0, %245 ]
  %260 = phi i8* [ %256, %253 ], [ null, %245 ]
  %261 = phi %"class.v8::StartupData"* [ %257, %253 ], [ null, %245 ]
  %262 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %261, i64 %236
  %263 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %261, i64 %259
  %264 = ptrtoint %"class.v8::StartupData"* %263 to i64
  %265 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %262, i64 0, i32 0
  store i8* null, i8** %265, align 8
  %266 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %261, i64 %236, i32 1
  store i32 0, i32* %266, align 8
  %267 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %262, i64 1
  %268 = ptrtoint %"class.v8::StartupData"* %267 to i64
  %269 = ptrtoint %"class.v8::StartupData"* %261 to i64
  %270 = icmp sgt i64 %235, 0
  br i1 %270, label %271, label %273

271:                                              ; preds = %258
  %272 = inttoptr i64 %234 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %260, i8* align 8 %272, i64 %235, i1 false) #10
  br label %273

273:                                              ; preds = %271, %258
  store i64 %269, i64* %73, align 8
  store i64 %268, i64* %72, align 8
  store i64 %264, i64* %74, align 8
  %274 = icmp eq i64 %234, 0
  br i1 %274, label %336, label %275

275:                                              ; preds = %273
  %276 = inttoptr i64 %234 to i8*
  call void @_ZdlPv(i8* %276) #11
  br label %336

277:                                              ; preds = %217
  %278 = load i8*, i8** %76, align 8
  %279 = call { i8*, i32 } %218(%"class.v8::Object"* %62, i32 %81, i8* %278) #10
  %280 = extractvalue { i8*, i32 } %279, 0
  %281 = extractvalue { i8*, i32 } %279, 1
  %282 = load %"class.v8::StartupData"*, %"class.v8::StartupData"** %70, align 8
  %283 = load %"class.v8::StartupData"*, %"class.v8::StartupData"** %71, align 8
  %284 = icmp eq %"class.v8::StartupData"* %282, %283
  %285 = ptrtoint %"class.v8::StartupData"* %283 to i64
  br i1 %284, label %291, label %286

286:                                              ; preds = %277
  %287 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %282, i64 0, i32 0
  store i8* %280, i8** %287, align 8
  %288 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %282, i64 0, i32 1
  store i32 %281, i32* %288, align 8
  %289 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %282, i64 1
  %290 = ptrtoint %"class.v8::StartupData"* %289 to i64
  store i64 %290, i64* %72, align 8
  br label %336

291:                                              ; preds = %277
  %292 = ptrtoint %"class.v8::StartupData"* %282 to i64
  %293 = load i64, i64* %73, align 8
  %294 = sub i64 %292, %293
  %295 = ashr exact i64 %294, 4
  %296 = add nsw i64 %295, 1
  %297 = icmp ugt i64 %296, 1152921504606846975
  br i1 %297, label %298, label %300

298:                                              ; preds = %291
  %299 = bitcast %"class.std::__1::vector.1208"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %299) #12
  unreachable

300:                                              ; preds = %291
  %301 = sub i64 %285, %293
  %302 = ashr exact i64 %301, 4
  %303 = icmp ult i64 %302, 576460752303423487
  br i1 %303, label %304, label %312

304:                                              ; preds = %300
  %305 = ashr exact i64 %301, 3
  %306 = icmp ult i64 %305, %296
  %307 = select i1 %306, i64 %296, i64 %305
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %317, label %309

309:                                              ; preds = %304
  %310 = icmp ugt i64 %307, 1152921504606846975
  br i1 %310, label %311, label %312

311:                                              ; preds = %309
  call void @abort() #12
  unreachable

312:                                              ; preds = %309, %300
  %313 = phi i64 [ %307, %309 ], [ 1152921504606846975, %300 ]
  %314 = shl i64 %313, 4
  %315 = call i8* @_Znwm(i64 %314) #11
  %316 = bitcast i8* %315 to %"class.v8::StartupData"*
  br label %317

317:                                              ; preds = %312, %304
  %318 = phi i64 [ %313, %312 ], [ 0, %304 ]
  %319 = phi i8* [ %315, %312 ], [ null, %304 ]
  %320 = phi %"class.v8::StartupData"* [ %316, %312 ], [ null, %304 ]
  %321 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %320, i64 %295
  %322 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %320, i64 %318
  %323 = ptrtoint %"class.v8::StartupData"* %322 to i64
  %324 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %321, i64 0, i32 0
  store i8* %280, i8** %324, align 8
  %325 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %320, i64 %295, i32 1
  store i32 %281, i32* %325, align 8
  %326 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %321, i64 1
  %327 = ptrtoint %"class.v8::StartupData"* %326 to i64
  %328 = ptrtoint %"class.v8::StartupData"* %320 to i64
  %329 = icmp sgt i64 %294, 0
  br i1 %329, label %330, label %332

330:                                              ; preds = %317
  %331 = inttoptr i64 %293 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %319, i8* align 8 %331, i64 %294, i1 false) #10
  br label %332

332:                                              ; preds = %330, %317
  store i64 %328, i64* %73, align 8
  store i64 %327, i64* %72, align 8
  store i64 %323, i64* %74, align 8
  %333 = icmp eq i64 %293, 0
  br i1 %333, label %336, label %334

334:                                              ; preds = %332
  %335 = inttoptr i64 %293 to i8*
  call void @_ZdlPv(i8* %335) #11
  br label %336

336:                                              ; preds = %334, %332, %286, %275, %273, %227, %215, %213, %167
  %337 = add nuw nsw i32 %81, 1
  %338 = icmp eq i32 %337, %51
  br i1 %338, label %77, label %80

339:                                              ; preds = %400
  %340 = bitcast %"class.v8::internal::Serializer::ObjectSerializer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %340) #10
  %341 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 0, i32 1
  %342 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2v88internal10Serializer16ObjectSerializerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %342, align 8
  %343 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %6, i64 0, i32 1
  %344 = bitcast %"class.v8::internal::Isolate"** %60 to i64*
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.v8::internal::Isolate"** %343 to i64*
  store i64 %345, i64* %346, align 8
  %347 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %6, i64 0, i32 2
  store %"class.v8::internal::Serializer"* %59, %"class.v8::internal::Serializer"** %347, align 8
  %348 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %6, i64 0, i32 3, i32 0, i32 0
  store i64* %1, i64** %348, align 8
  %349 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %6, i64 0, i32 4
  store %"class.v8::internal::SnapshotByteSink"* %341, %"class.v8::internal::SnapshotByteSink"** %349, align 8
  %350 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %6, i64 0, i32 5
  store i32 0, i32* %350, align 8
  call void @_ZN2v88internal10Serializer16ObjectSerializer9SerializeEv(%"class.v8::internal::Serializer::ObjectSerializer"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %340) #10
  %351 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 0, i32 4
  %352 = load i64, i64* %1, align 8
  %353 = bitcast %"class.v8::internal::SerializerReferenceMap"* %351 to %"class.v8::internal::IdentityMapBase"*
  %354 = call i64* @_ZNK2v88internal15IdentityMapBase9FindEntryEm(%"class.v8::internal::IdentityMapBase"* %353, i64 %352) #10
  %355 = getelementptr inbounds %"class.std::__1::vector.1208", %"class.std::__1::vector.1208"* %5, i64 0, i32 0, i32 0
  %356 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %4, i64 0, i32 0, i32 0
  %357 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 5
  %358 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %359 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %360 = bitcast i8** %358 to i64*
  %361 = bitcast %"class.v8::internal::SnapshotByteSink"* %357 to i64*
  %362 = bitcast i8** %359 to i64*
  %363 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %357, i64 0, i32 0, i32 0, i32 0
  %364 = bitcast i64* %354 to i32*
  %365 = zext i32 %51 to i64
  br label %422

366:                                              ; preds = %400, %77
  %367 = phi i64 [ 0, %77 ], [ %401, %400 ]
  %368 = load %"class.v8::StartupData"*, %"class.v8::StartupData"** %78, align 8
  %369 = getelementptr %"class.v8::StartupData", %"class.v8::StartupData"* %368, i64 %367, i32 1
  %370 = load i32, i32* %369, align 8
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %400, label %372

372:                                              ; preds = %366
  %373 = load i64, i64* %1, align 8
  %374 = and i64 %373, -4294967296
  %375 = add i64 %373, -1
  %376 = inttoptr i64 %375 to i32*
  %377 = load atomic i32, i32* %376 monotonic, align 4
  %378 = zext i32 %377 to i64
  %379 = or i64 %374, %378
  %380 = add i64 %379, 7
  %381 = inttoptr i64 %380 to i16*
  %382 = load atomic i16, i16* %381 monotonic, align 2
  %383 = icmp eq i16 %382, 1057
  br i1 %383, label %390, label %384

384:                                              ; preds = %372
  %385 = add i64 %379, 9
  %386 = inttoptr i64 %385 to i8*
  %387 = load atomic i8, i8* %386 monotonic, align 1
  %388 = icmp slt i8 %387, 0
  %389 = call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %382, i1 zeroext %388) #10
  br label %390

390:                                              ; preds = %372, %384
  %391 = phi i32 [ %389, %384 ], [ 12, %372 ]
  %392 = trunc i64 %367 to i32
  %393 = shl i32 %392, 3
  %394 = add nsw i32 %391, %393
  %395 = sext i32 %394 to i64
  %396 = add i64 %375, %395
  %397 = inttoptr i64 %396 to i32*
  store atomic volatile i32 0, i32* %397 monotonic, align 4
  %398 = add i64 %396, 4
  %399 = inttoptr i64 %398 to i32*
  store atomic volatile i32 0, i32* %399 monotonic, align 4
  br label %400

400:                                              ; preds = %366, %390
  %401 = add nuw nsw i64 %367, 1
  %402 = icmp eq i64 %401, %79
  br i1 %402, label %339, label %366

403:                                              ; preds = %519
  %404 = getelementptr inbounds %"class.std::__1::vector.1208", %"class.std::__1::vector.1208"* %5, i64 0, i32 0, i32 0
  %405 = load %"class.v8::StartupData"*, %"class.v8::StartupData"** %404, align 8
  %406 = icmp eq %"class.v8::StartupData"* %405, null
  br i1 %406, label %412, label %407

407:                                              ; preds = %403
  %408 = ptrtoint %"class.v8::StartupData"* %405 to i64
  %409 = getelementptr inbounds %"class.std::__1::vector.1208", %"class.std::__1::vector.1208"* %5, i64 0, i32 0, i32 1
  %410 = bitcast %"class.v8::StartupData"** %409 to i64*
  store i64 %408, i64* %410, align 8
  %411 = bitcast %"class.v8::StartupData"* %405 to i8*
  call void @_ZdlPv(i8* %411) #11
  br label %412

412:                                              ; preds = %403, %407
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #10
  %413 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %4, i64 0, i32 0, i32 0
  %414 = load i64*, i64** %413, align 8
  %415 = icmp eq i64* %414, null
  br i1 %415, label %421, label %416

416:                                              ; preds = %412
  %417 = ptrtoint i64* %414 to i64
  %418 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %4, i64 0, i32 0, i32 1
  %419 = bitcast i64** %418 to i64*
  store i64 %417, i64* %419, align 8
  %420 = bitcast i64* %414 to i8*
  call void @_ZdlPv(i8* %420) #11
  br label %421

421:                                              ; preds = %412, %416
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #10
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED1Ev(%"class.v8::internal::PerIsolateAssertScope"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #10
  br label %522

422:                                              ; preds = %519, %339
  %423 = phi i64 [ 0, %339 ], [ %520, %519 ]
  %424 = load %"class.v8::StartupData"*, %"class.v8::StartupData"** %355, align 8
  %425 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %424, i64 %423, i32 0
  %426 = load i8*, i8** %425, align 8
  %427 = getelementptr inbounds %"class.v8::StartupData", %"class.v8::StartupData"* %424, i64 %423, i32 1
  %428 = load i32, i32* %427, align 8
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %519, label %430

430:                                              ; preds = %422
  %431 = load i64, i64* %1, align 8
  %432 = and i64 %431, -4294967296
  %433 = add i64 %431, -1
  %434 = inttoptr i64 %433 to i32*
  %435 = load atomic i32, i32* %434 monotonic, align 4
  %436 = zext i32 %435 to i64
  %437 = or i64 %432, %436
  %438 = add i64 %437, 7
  %439 = inttoptr i64 %438 to i16*
  %440 = load atomic i16, i16* %439 monotonic, align 2
  %441 = icmp eq i16 %440, 1057
  br i1 %441, label %448, label %442

442:                                              ; preds = %430
  %443 = add i64 %437, 9
  %444 = inttoptr i64 %443 to i8*
  %445 = load atomic i8, i8* %444 monotonic, align 1
  %446 = icmp slt i8 %445, 0
  %447 = call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %440, i1 zeroext %446) #10
  br label %448

448:                                              ; preds = %430, %442
  %449 = phi i32 [ %447, %442 ], [ 12, %430 ]
  %450 = trunc i64 %423 to i32
  %451 = shl i32 %450, 3
  %452 = add nsw i32 %449, %451
  %453 = sext i32 %452 to i64
  %454 = add i64 %433, %453
  %455 = load i64*, i64** %356, align 8
  %456 = getelementptr inbounds i64, i64* %455, i64 %423
  %457 = load i64, i64* %456, align 8
  %458 = inttoptr i64 %454 to i32*
  %459 = trunc i64 %457 to i32
  store atomic volatile i32 %459, i32* %458 monotonic, align 4
  %460 = lshr i64 %457, 32
  %461 = add i64 %454, 4
  %462 = trunc i64 %460 to i32
  %463 = inttoptr i64 %461 to i32*
  store atomic volatile i32 %462, i32* %463 monotonic, align 4
  %464 = load i8*, i8** %358, align 8
  %465 = load i8*, i8** %359, align 8
  %466 = icmp eq i8* %464, %465
  %467 = ptrtoint i8* %465 to i64
  br i1 %466, label %471, label %468

468:                                              ; preds = %448
  store i8 0, i8* %464, align 1
  %469 = getelementptr inbounds i8, i8* %464, i64 1
  %470 = ptrtoint i8* %469 to i64
  store i64 %470, i64* %360, align 8
  br label %512

471:                                              ; preds = %448
  %472 = ptrtoint i8* %464 to i64
  %473 = load i64, i64* %361, align 8
  %474 = sub i64 %472, %473
  %475 = add i64 %474, 1
  %476 = icmp slt i64 %475, 0
  br i1 %476, label %477, label %479

477:                                              ; preds = %471
  %478 = bitcast %"class.v8::internal::SnapshotByteSink"* %357 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %478) #12
  unreachable

479:                                              ; preds = %471
  %480 = sub i64 %467, %473
  %481 = icmp ult i64 %480, 4611686018427387903
  br i1 %481, label %482, label %487

482:                                              ; preds = %479
  %483 = shl i64 %480, 1
  %484 = icmp ult i64 %483, %475
  %485 = select i1 %484, i64 %475, i64 %483
  %486 = icmp eq i64 %485, 0
  br i1 %486, label %490, label %487

487:                                              ; preds = %482, %479
  %488 = phi i64 [ %485, %482 ], [ 9223372036854775807, %479 ]
  %489 = call i8* @_Znwm(i64 %488) #11
  br label %490

490:                                              ; preds = %487, %482
  %491 = phi i64 [ %488, %487 ], [ 0, %482 ]
  %492 = phi i8* [ %489, %487 ], [ null, %482 ]
  %493 = getelementptr inbounds i8, i8* %492, i64 %474
  %494 = getelementptr inbounds i8, i8* %492, i64 %491
  %495 = ptrtoint i8* %494 to i64
  store i8 0, i8* %493, align 1
  %496 = getelementptr inbounds i8, i8* %493, i64 1
  %497 = ptrtoint i8* %496 to i64
  %498 = load i8*, i8** %363, align 8
  %499 = load i64, i64* %360, align 8
  %500 = ptrtoint i8* %498 to i64
  %501 = sub i64 %499, %500
  %502 = sub i64 0, %501
  %503 = getelementptr inbounds i8, i8* %493, i64 %502
  %504 = ptrtoint i8* %503 to i64
  %505 = icmp sgt i64 %501, 0
  br i1 %505, label %506, label %508

506:                                              ; preds = %490
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %503, i8* align 1 %498, i64 %501, i1 false) #10
  %507 = load i8*, i8** %363, align 8
  br label %508

508:                                              ; preds = %506, %490
  %509 = phi i8* [ %498, %490 ], [ %507, %506 ]
  store i64 %504, i64* %361, align 8
  store i64 %497, i64* %360, align 8
  store i64 %495, i64* %362, align 8
  %510 = icmp eq i8* %509, null
  br i1 %510, label %512, label %511

511:                                              ; preds = %508
  call void @_ZdlPv(i8* nonnull %509) #11
  br label %512

512:                                              ; preds = %468, %508, %511
  %513 = load i32, i32* %364, align 4
  %514 = lshr i32 %513, 2
  %515 = zext i32 %514 to i64
  call void @_ZN2v88internal16SnapshotByteSink6PutIntEmPKc(%"class.v8::internal::SnapshotByteSink"* %357, i64 %515, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0)) #10
  call void @_ZN2v88internal16SnapshotByteSink6PutIntEmPKc(%"class.v8::internal::SnapshotByteSink"* %357, i64 %423, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0)) #10
  %516 = sext i32 %428 to i64
  call void @_ZN2v88internal16SnapshotByteSink6PutIntEmPKc(%"class.v8::internal::SnapshotByteSink"* %357, i64 %516, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0)) #10
  call void @_ZN2v88internal16SnapshotByteSink6PutRawEPKhiPKc(%"class.v8::internal::SnapshotByteSink"* %357, i8* %426, i32 %428, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0)) #10
  %517 = icmp eq i8* %426, null
  br i1 %517, label %519, label %518

518:                                              ; preds = %512
  call void @_ZdaPv(i8* nonnull %426) #11
  br label %519

519:                                              ; preds = %512, %518, %422
  %520 = add nuw nsw i64 %423, 1
  %521 = icmp eq i64 %520, %365
  br i1 %521, label %403, label %422

522:                                              ; preds = %18, %421, %39, %2
  %523 = phi i1 [ false, %2 ], [ true, %421 ], [ false, %39 ], [ false, %18 ]
  ret i1 %523
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal10JSFunction22ResetIfBytecodeFlushedENS_4base8OptionalINSt3__18functionIFvNS0_10HeapObjectENS0_20CompressedObjectSlotES6_EEEEE(%"class.v8::internal::JSFunction"*, %"class.v8::base::Optional.1202"*) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.v8::internal::FeedbackCell", align 8
  %4 = alloca %"class.v8::base::Optional.1202", align 8
  %5 = load i8, i8* @_ZN2v88internal19FLAG_flush_bytecodeE, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %155, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::JSFunction", %"class.v8::internal::JSFunction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 11
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 acquire, align 4
  %13 = and i64 %9, -4294967296
  %14 = zext i32 %12 to i64
  %15 = or i64 %13, %14
  %16 = load i64, i64* %8, align 8
  %17 = add i64 %16, 23
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i64 %16, -4294967296
  %21 = zext i32 %19 to i64
  %22 = or i64 %20, %21
  %23 = and i64 %14, 1
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %155, label %25

25:                                               ; preds = %7
  %26 = add i64 %15, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %13, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp ne i16 %33, 179
  %35 = and i64 %21, 1
  %36 = icmp eq i64 %35, 0
  %37 = or i1 %36, %34
  br i1 %37, label %155, label %38

38:                                               ; preds = %25
  %39 = add i64 %22, -1
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %20, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = icmp eq i16 %46, 162
  br i1 %47, label %48, label %155

48:                                               ; preds = %38
  %49 = add i64 %15, 3
  %50 = inttoptr i64 %49 to i32*
  %51 = load atomic i32, i32* %50 acquire, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %13, %52
  %54 = icmp eq i32 %51, 170
  br i1 %54, label %69, label %55

55:                                               ; preds = %48
  %56 = and i64 %52, 1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %155, label %58

58:                                               ; preds = %55
  %59 = add i64 %53, -1
  %60 = inttoptr i64 %59 to i32*
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = zext i32 %61 to i64
  %63 = or i64 %13, %62
  %64 = add i64 %63, 7
  %65 = inttoptr i64 %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = add i16 %66, -157
  %68 = icmp ugt i16 %67, 1
  br i1 %68, label %155, label %69

69:                                               ; preds = %48, %58
  %70 = add i64 %22, 31
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = icmp eq i32 %72, 85
  br i1 %73, label %155, label %74

74:                                               ; preds = %69
  %75 = load i64, i64* %8, align 8
  %76 = and i64 %75, -262144
  %77 = or i64 %76, 16
  %78 = inttoptr i64 %77 to i64*
  %79 = load i64, i64* %78, align 16
  %80 = add i64 %79, -41416
  %81 = inttoptr i64 %80 to %"class.v8::internal::Isolate"*
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %81, i64 0, i32 41
  %83 = tail call i64 @_ZN2v88internal8Builtins7builtinEi(%"class.v8::internal::Builtins"* %82, i32 85) #10
  %84 = load i64, i64* %8, align 8
  %85 = add i64 %84, 23
  %86 = inttoptr i64 %85 to i32*
  %87 = trunc i64 %83 to i32
  store atomic volatile i32 %87, i32* %86 monotonic, align 4
  %88 = load i64, i64* %8, align 8
  %89 = add i64 %88, 23
  %90 = and i64 %83, 1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %104, label %92

92:                                               ; preds = %74
  %93 = and i64 %88, -262144
  %94 = or i64 %93, 8
  %95 = inttoptr i64 %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = and i64 %96, 262144
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %104, label %99

99:                                               ; preds = %92
  %100 = or i64 %93, 16
  %101 = inttoptr i64 %100 to %"class.v8::internal::Heap"**
  %102 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %101, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %102, i64 %88, i64 %89, i64 %83) #10
  %103 = load i64, i64* %8, align 8
  br label %104

104:                                              ; preds = %74, %92, %99
  %105 = phi i64 [ %88, %74 ], [ %88, %92 ], [ %103, %99 ]
  %106 = bitcast %"class.v8::internal::FeedbackCell"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #10
  %107 = and i64 %105, -4294967296
  %108 = add i64 %105, 19
  %109 = inttoptr i64 %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %107, %111
  %113 = getelementptr inbounds %"class.v8::internal::FeedbackCell", %"class.v8::internal::FeedbackCell"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"class.v8::base::Optional.1202", %"class.v8::base::Optional.1202"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %114, align 8
  %115 = getelementptr inbounds %"class.v8::base::Optional.1202", %"class.v8::base::Optional.1202"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %116 = bitcast %union.anon.1206* %115 to i8*
  store i8 0, i8* %116, align 8
  %117 = getelementptr inbounds %"class.v8::base::Optional.1202", %"class.v8::base::Optional.1202"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i8, i8* %117, align 8, !range !2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %142, label %120

120:                                              ; preds = %104
  %121 = getelementptr inbounds %"class.v8::base::Optional.1202", %"class.v8::base::Optional.1202"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %122 = getelementptr inbounds %"class.v8::base::Optional.1202", %"class.v8::base::Optional.1202"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %123 = bitcast %"class.std::__1::function"* %122 to i8*
  %124 = bitcast %"class.std::__1::function"* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 16, i1 false) #10
  %125 = getelementptr inbounds %"class.v8::base::Optional.1202", %"class.v8::base::Optional.1202"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %126 = getelementptr inbounds %"class.v8::base::Optional.1202", %"class.v8::base::Optional.1202"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %127 = bitcast %"struct.std::__1::__function::__policy_invoker"* %126 to i64*
  %128 = bitcast %"struct.std::__1::__function::__policy_invoker"* %125 to i64*
  %129 = load i64, i64* %127, align 8
  store i64 %129, i64* %128, align 8
  %130 = getelementptr inbounds %"class.v8::base::Optional.1202", %"class.v8::base::Optional.1202"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %131 = getelementptr inbounds %"class.v8::base::Optional.1202", %"class.v8::base::Optional.1202"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %132 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %131, align 8
  store %"struct.std::__1::__function::__policy"* %132, %"struct.std::__1::__function::__policy"** %130, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %132, i64 0, i32 0
  %134 = load i8* (i8*)*, i8* (i8*)** %133, align 8
  %135 = icmp eq i8* (i8*)* %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %120
  %137 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %121, i64 0, i32 0, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  %139 = tail call i8* %134(i8* %138) #10
  %140 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %122, i64 0, i32 0, i32 0, i32 0
  store i8* %139, i8** %140, align 8
  br label %141

141:                                              ; preds = %136, %120
  store i8 1, i8* %114, align 8
  br label %142

142:                                              ; preds = %104, %141
  call void @_ZN2v88internal12FeedbackCell21reset_feedback_vectorENS_4base8OptionalINSt3__18functionIFvNS0_10HeapObjectENS0_20CompressedObjectSlotES6_EEEEE(%"class.v8::internal::FeedbackCell"* nonnull %3, %"class.v8::base::Optional.1202"* nonnull %4)
  %143 = load i8, i8* %114, align 8, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %154, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.v8::base::Optional.1202", %"class.v8::base::Optional.1202"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %147 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %146, align 8
  %148 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %147, i64 0, i32 1
  %149 = load void (i8*)*, void (i8*)** %148, align 8
  %150 = icmp eq void (i8*)* %149, null
  br i1 %150, label %154, label %151

151:                                              ; preds = %145
  %152 = getelementptr inbounds %"class.v8::base::Optional.1202", %"class.v8::base::Optional.1202"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  call void %149(i8* %153) #10
  br label %154

154:                                              ; preds = %142, %145, %151
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #10
  br label %155

155:                                              ; preds = %69, %55, %7, %58, %25, %38, %2, %154
  ret void
}

declare i64 @_ZNK2v88internal18SharedFunctionInfo7GetCodeEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17ContextSerializer18CheckRehashabilityENS0_10HeapObjectE(%"class.v8::internal::ContextSerializer"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::HeapObject", align 8
  %4 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::ContextSerializer", %"class.v8::internal::ContextSerializer"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = call zeroext i1 @_ZNK2v88internal10HeapObject14NeedsRehashingEv(%"class.v8::internal::HeapObject"* nonnull %3) #10
  br i1 %9, label %10, label %13

10:                                               ; preds = %8
  %11 = call zeroext i1 @_ZNK2v88internal10HeapObject13CanBeRehashedEv(%"class.v8::internal::HeapObject"* nonnull %3) #10
  br i1 %11, label %13, label %12

12:                                               ; preds = %10
  store i8 0, i8* %5, align 8
  br label %13

13:                                               ; preds = %2, %10, %8, %12
  ret void
}

declare void @_ZN2v88internal10Serializer16ObjectSerializer9SerializeEv(%"class.v8::internal::Serializer::ObjectSerializer"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #5

declare void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EEC1EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope"*, %"class.v8::internal::Isolate"*) unnamed_addr #2

declare void @_ZN2v88internal16SnapshotByteSink6PutIntEmPKc(%"class.v8::internal::SnapshotByteSink"*, i64, i8*) local_unnamed_addr #2

declare void @_ZN2v88internal16SnapshotByteSink6PutRawEPKhiPKc(%"class.v8::internal::SnapshotByteSink"*, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED1Ev(%"class.v8::internal::PerIsolateAssertScope"*) unnamed_addr #6

declare zeroext i1 @_ZNK2v88internal10HeapObject14NeedsRehashingEv(%"class.v8::internal::HeapObject"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal10HeapObject13CanBeRehashedEv(%"class.v8::internal::HeapObject"*) local_unnamed_addr #2

declare void @_ZN2v88internal10Serializer17VisitRootPointersENS0_4RootEPKcNS0_14FullObjectSlotES5_(%"class.v8::internal::Serializer"*, i32, i8*, i64, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RootVisitor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE(%"class.v8::internal::RootVisitor"*, i32, i8*, i64) unnamed_addr #0 comdat align 2 {
  %5 = add i64 %3, 8
  %6 = bitcast %"class.v8::internal::RootVisitor"* %0 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)***
  %7 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %7, i64 2
  %9 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %8, align 8
  tail call void %9(%"class.v8::internal::RootVisitor"* %0, i32 %1, i8* %2, i64 %3, i64 %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RootVisitor17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_(%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0)) #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RootVisitor11SynchronizeENS0_22VisitorSynchronization7SyncTagE(%"class.v8::internal::RootVisitor"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN2v88internal10Serializer14MustBeDeferredENS0_10HeapObjectE(%"class.v8::internal::Serializer"*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEED2Ev(%"class.v8::internal::IdentityMap.1190"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IdentityMap.1190", %"class.v8::internal::IdentityMap.1190"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast %"class.v8::internal::IdentityMap.1190"* %0 to %"class.v8::internal::IdentityMapBase"*
  tail call void @_ZN2v88internal15IdentityMapBase5ClearEv(%"class.v8::internal::IdentityMapBase"* %3) #10
  tail call void @_ZN2v88internal15IdentityMapBaseD2Ev(%"class.v8::internal::IdentityMapBase"* %3) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v88internal10Serializer14HotObjectsListD1Ev(%"class.v8::internal::Serializer::HotObjectsList"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN2v88internal15IdentityMapBaseD2Ev(%"class.v8::internal::IdentityMapBase"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEED0Ev(%"class.v8::internal::IdentityMap.1190"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IdentityMap.1190", %"class.v8::internal::IdentityMap.1190"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast %"class.v8::internal::IdentityMap.1190"* %0 to %"class.v8::internal::IdentityMapBase"*
  tail call void @_ZN2v88internal15IdentityMapBase5ClearEv(%"class.v8::internal::IdentityMapBase"* %3) #10
  tail call void @_ZN2v88internal15IdentityMapBaseD2Ev(%"class.v8::internal::IdentityMapBase"* %3) #10
  %4 = bitcast %"class.v8::internal::IdentityMap.1190"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEE15NewPointerArrayEm(%"class.v8::internal::IdentityMap.1190"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = shl i64 %1, 3
  %4 = tail call noalias i8* @malloc(i64 %3) #10
  %5 = bitcast i8* %4 to i64*
  ret i64* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEE18DeletePointerArrayEPmm(%"class.v8::internal::IdentityMap.1190"*, i64*, i64) unnamed_addr #0 comdat align 2 {
  %4 = bitcast i64* %1 to i8*
  tail call void @free(i8* %4) #10
  ret void
}

declare void @_ZN2v88internal15IdentityMapBase5ClearEv(%"class.v8::internal::IdentityMapBase"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN2v88internal24StrongRootBlockAllocator10deallocateEPmm(%"class.v8::internal::StrongRootBlockAllocator"*, i64*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEED2Ev(%"class.v8::internal::IdentityMap.1140"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IdentityMap.1140", %"class.v8::internal::IdentityMap.1140"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast %"class.v8::internal::IdentityMap.1140"* %0 to %"class.v8::internal::IdentityMapBase"*
  tail call void @_ZN2v88internal15IdentityMapBase5ClearEv(%"class.v8::internal::IdentityMapBase"* %3) #10
  tail call void @_ZN2v88internal15IdentityMapBaseD2Ev(%"class.v8::internal::IdentityMapBase"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEED0Ev(%"class.v8::internal::IdentityMap.1140"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IdentityMap.1140", %"class.v8::internal::IdentityMap.1140"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast %"class.v8::internal::IdentityMap.1140"* %0 to %"class.v8::internal::IdentityMapBase"*
  tail call void @_ZN2v88internal15IdentityMapBase5ClearEv(%"class.v8::internal::IdentityMapBase"* %3) #10
  tail call void @_ZN2v88internal15IdentityMapBaseD2Ev(%"class.v8::internal::IdentityMapBase"* %3) #10
  %4 = bitcast %"class.v8::internal::IdentityMap.1140"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEE15NewPointerArrayEm(%"class.v8::internal::IdentityMap.1140"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = shl i64 %1, 3
  %4 = tail call noalias i8* @malloc(i64 %3) #10
  %5 = bitcast i8* %4 to i64*
  ret i64* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEE18DeletePointerArrayEPmm(%"class.v8::internal::IdentityMap.1140"*, i64*, i64) unnamed_addr #0 comdat align 2 {
  %4 = bitcast i64* %1 to i8*
  tail call void @free(i8* %4) #10
  ret void
}

declare i64* @_ZN2v88internal15IdentityMapBase11InsertEntryEm(%"class.v8::internal::IdentityMapBase"*, i64) local_unnamed_addr #2

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #2

declare i64 @_ZN2v88internal13NativeContext21OptimizedCodeListHeadEv(%"class.v8::internal::NativeContext"*) local_unnamed_addr #2

declare i64 @_ZN2v88internal13NativeContext23DeoptimizedCodeListHeadEv(%"class.v8::internal::NativeContext"*) local_unnamed_addr #2

declare void @_ZN2v88internal13NativeContext24SetOptimizedCodeListHeadENS0_6ObjectE(%"class.v8::internal::NativeContext"*, i64) local_unnamed_addr #2

declare void @_ZN2v88internal13NativeContext26SetDeoptimizedCodeListHeadENS0_6ObjectE(%"class.v8::internal::NativeContext"*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare i64 @_ZN2v88internal8Builtins7builtinEi(%"class.v8::internal::Builtins"*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12FeedbackCell21reset_feedback_vectorENS_4base8OptionalINSt3__18functionIFvNS0_10HeapObjectENS0_20CompressedObjectSlotES6_EEEEE(%"class.v8::internal::FeedbackCell"*, %"class.v8::base::Optional.1202"*) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.v8::internal::HeapObject", align 8
  %4 = alloca %"class.v8::internal::CompressedObjectSlot", align 8
  %5 = alloca %"class.v8::internal::HeapObject", align 8
  %6 = load i8, i8* @_ZN2v88internal29FLAG_lazy_feedback_allocationE, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = load i32, i32* @_ZN2v88internal21FLAG_interrupt_budgetE, align 4
  %9 = load i32, i32* @_ZN2v88internal42FLAG_budget_for_feedback_vector_allocationE, align 4
  %10 = select i1 %7, i32 %8, i32 %9
  %11 = getelementptr inbounds %"class.v8::internal::FeedbackCell", %"class.v8::internal::FeedbackCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i32*
  store i32 %10, i32* %14, align 4
  %15 = getelementptr inbounds %"class.v8::internal::FeedbackCell", %"class.v8::internal::FeedbackCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, -4294967296
  %18 = add i64 %16, 3
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %17, %21
  %23 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %24 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %23, i64 0, i32 0, i32 1
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %23, i64 0, i32 1, i64 0
  br label %39

31:                                               ; preds = %25, %2
  %32 = and i64 %22, -262144
  %33 = or i64 %32, 16
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = add i64 %35, -41416
  %37 = inttoptr i64 %36 to %"class.v8::internal::Isolate"*
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %37, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %39

39:                                               ; preds = %29, %31
  %40 = phi i64* [ %38, %31 ], [ %30, %29 ]
  %41 = getelementptr inbounds i64, i64* %40, i64 4
  %42 = load i64, i64* %41, align 8
  %43 = trunc i64 %42 to i32
  %44 = icmp eq i32 %20, %43
  br i1 %44, label %120, label %45

45:                                               ; preds = %39
  %46 = add i64 %22, -1
  %47 = inttoptr i64 %46 to i32*
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %17, %49
  %51 = add i64 %50, 7
  %52 = inttoptr i64 %51 to i16*
  %53 = load atomic i16, i16* %52 monotonic, align 2
  %54 = icmp eq i16 %53, 129
  br i1 %54, label %120, label %55

55:                                               ; preds = %45
  %56 = load atomic i32, i32* %47 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %17, %57
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = icmp eq i16 %61, 167
  br i1 %62, label %64, label %63, !prof !3

63:                                               ; preds = %55
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0)) #12
  unreachable

64:                                               ; preds = %55
  %65 = add i64 %22, 27
  %66 = inttoptr i64 %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  %69 = or i64 %17, %68
  store atomic volatile i32 %67, i32* %19 monotonic, align 4
  %70 = load i64, i64* %15, align 8
  %71 = add i64 %70, 3
  %72 = and i64 %68, 1
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %87, label %74

74:                                               ; preds = %64
  %75 = and i64 %70, -262144
  %76 = or i64 %75, 8
  %77 = inttoptr i64 %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = and i64 %78, 262144
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %87, label %81

81:                                               ; preds = %74
  %82 = or i64 %75, 16
  %83 = inttoptr i64 %82 to %"class.v8::internal::Heap"**
  %84 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %83, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %84, i64 %70, i64 %71, i64 %69) #10
  %85 = load i64, i64* %15, align 8
  %86 = add i64 %85, 3
  br label %87

87:                                               ; preds = %81, %74, %64
  %88 = phi i64 [ %86, %81 ], [ %71, %74 ], [ %71, %64 ]
  %89 = phi i64 [ %85, %81 ], [ %70, %74 ], [ %70, %64 ]
  %90 = and i64 %69, -262144
  %91 = or i64 %90, 8
  %92 = inttoptr i64 %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = and i64 %93, 24
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %104, label %96

96:                                               ; preds = %87
  %97 = and i64 %89, -262144
  %98 = or i64 %97, 8
  %99 = inttoptr i64 %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = and i64 %100, 24
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %96
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %89, i64 %88, i64 %69) #10
  br label %104

104:                                              ; preds = %87, %96, %103
  %105 = getelementptr inbounds %"class.v8::base::Optional.1202", %"class.v8::base::Optional.1202"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %120, label %108

108:                                              ; preds = %104
  %109 = load i64, i64* %15, align 8
  %110 = add i64 %109, 3
  %111 = bitcast %"class.v8::internal::HeapObject"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111)
  %112 = bitcast %"class.v8::internal::CompressedObjectSlot"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112)
  %113 = bitcast %"class.v8::internal::HeapObject"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113)
  %114 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %109, i64* %114, align 8
  %115 = getelementptr inbounds %"class.v8::internal::CompressedObjectSlot", %"class.v8::internal::CompressedObjectSlot"* %4, i64 0, i32 0, i32 0
  store i64 %110, i64* %115, align 8
  %116 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %5, i64 0, i32 0, i32 0, i32 0
  store i64 %69, i64* %116, align 8
  %117 = getelementptr inbounds %"class.v8::base::Optional.1202", %"class.v8::base::Optional.1202"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %118 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::HeapObject"*, %"class.v8::internal::CompressedObjectSlot"*, %"class.v8::internal::HeapObject"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::HeapObject"*, %"class.v8::internal::CompressedObjectSlot"*, %"class.v8::internal::HeapObject"*)** %117, align 8
  %119 = getelementptr inbounds %"class.v8::base::Optional.1202", %"class.v8::base::Optional.1202"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  call void %118(%"union.std::__1::__function::__policy_storage"* %119, %"class.v8::internal::HeapObject"* nonnull dereferenceable(8) %3, %"class.v8::internal::CompressedObjectSlot"* nonnull dereferenceable(8) %4, %"class.v8::internal::HeapObject"* nonnull dereferenceable(8) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113)
  br label %120

120:                                              ; preds = %104, %39, %108, %45
  ret void
}

declare i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext, i1 zeroext) local_unnamed_addr #2

declare i64* @_ZNK2v88internal15IdentityMapBase9FindEntryEm(%"class.v8::internal::IdentityMapBase"*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
