; ModuleID = '../../chrome/browser/predictors/predictors_features.cc'
source_filename = "../../chrome/browser/predictors/predictors_features.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"struct.base::FeatureParam<features::PrefetchSubresourceType, true>::Option" = type { i32, i8* }
%"struct.base::FeatureParam" = type { %"struct.base::Feature"*, i8*, i32, %"struct.base::FeatureParam<features::PrefetchSubresourceType, true>::Option"*, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [36 x i8] c"LoadingPredictorUseLocalPredictions\00", align 1
@_ZN8features36kLoadingPredictorUseLocalPredictionsE = hidden constant %"struct.base::Feature" { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i32 0, i32 0), i32 1 }, align 8
@.str.1 = private unnamed_addr constant [38 x i8] c"LoadingOnlyLearnHighPriorityResources\00", align 1
@_ZN8features38kLoadingOnlyLearnHighPriorityResourcesE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i32 0, i32 0), i32 1 }, align 8
@.str.2 = private unnamed_addr constant [28 x i8] c"LoadingPredictorTableConfig\00", align 1
@_ZN8features28kLoadingPredictorTableConfigE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i32 0, i32 0), i32 0 }, align 8
@.str.3 = private unnamed_addr constant [34 x i8] c"LoadingPreconnectToRedirectTarget\00", align 1
@_ZN8features34kLoadingPreconnectToRedirectTargetE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i32 0, i32 0), i32 0 }, align 8
@.str.4 = private unnamed_addr constant [47 x i8] c"LoadingPredictorDisregardAlwaysAccessesNetwork\00", align 1
@_ZN8features47kLoadingPredictorDisregardAlwaysAccessesNetworkE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i32 0, i32 0), i32 0 }, align 8
@.str.5 = private unnamed_addr constant [37 x i8] c"LoadingPredictorUseOptimizationGuide\00", align 1
@_ZN8features37kLoadingPredictorUseOptimizationGuideE = hidden constant %"struct.base::Feature" { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5, i32 0, i32 0), i32 0 }, align 8
@.str.6 = private unnamed_addr constant [25 x i8] c"LoadingPredictorPrefetch\00", align 1
@_ZN8features25kLoadingPredictorPrefetchE = hidden constant %"struct.base::Feature" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i32 0, i32 0), i32 0 }, align 8
@.str.7 = private unnamed_addr constant [17 x i8] c"subresource_type\00", align 1
@_ZN8featuresL36kPrefetchSubresourceTypeParamOptionsE = internal constant [3 x %"struct.base::FeatureParam<features::PrefetchSubresourceType, true>::Option"] [%"struct.base::FeatureParam<features::PrefetchSubresourceType, true>::Option" { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0) }, %"struct.base::FeatureParam<features::PrefetchSubresourceType, true>::Option" { i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0) }, %"struct.base::FeatureParam<features::PrefetchSubresourceType, true>::Option" { i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0) }], align 16
@_ZN8features40kLoadingPredictorPrefetchSubresourceTypeE = hidden local_unnamed_addr constant %"struct.base::FeatureParam" { %"struct.base::Feature"* @_ZN8features25kLoadingPredictorPrefetchE, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i32 0, i32 0), i32 0, %"struct.base::FeatureParam<features::PrefetchSubresourceType, true>::Option"* getelementptr inbounds ([3 x %"struct.base::FeatureParam<features::PrefetchSubresourceType, true>::Option"], [3 x %"struct.base::FeatureParam<features::PrefetchSubresourceType, true>::Option"]* @_ZN8featuresL36kPrefetchSubresourceTypeParamOptionsE, i32 0, i32 0), i64 3 }, align 8
@.str.8 = private unnamed_addr constant [43 x i8] c"kLoadingPredictorInflightPredictiveActions\00", align 1
@_ZN8features42kLoadingPredictorInflightPredictiveActionsE = hidden constant %"struct.base::Feature" { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i32 0, i32 0), i32 1 }, align 8
@.str.9 = private unnamed_addr constant [16 x i8] c"use_predictions\00", align 1
@.str.10 = private unnamed_addr constant [28 x i8] c"always_retrieve_predictions\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"max_inflight_preresolves\00", align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"max_inflight_prefetches\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"css\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"js_css\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8features25ShouldUseLocalPredictionsEv() local_unnamed_addr #0 {
  %1 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features36kLoadingPredictorUseLocalPredictionsE) #5
  ret i1 %1
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8features37ShouldUseOptimizationGuidePredictionsEv() local_unnamed_addr #0 {
  %1 = alloca %"class.std::__1::basic_string", align 8
  %2 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features37kLoadingPredictorUseOptimizationGuideE) #5
  br i1 %2, label %3, label %15

3:                                                ; preds = %0
  %4 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #5
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  store i8 15, i8* %6, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i64 15, i1 false) #5
  %7 = getelementptr inbounds i8, i8* %4, i64 15
  store i8 0, i8* %7, align 1
  %8 = call zeroext i1 @_ZN4base33GetFieldTrialParamByFeatureAsBoolERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEb(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features37kLoadingPredictorUseOptimizationGuideE, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %1, i1 zeroext true) #5
  %9 = load i8, i8* %6, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %13) #6
  br label %14

14:                                               ; preds = %3, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #5
  br label %15

15:                                               ; preds = %0, %14
  %16 = phi i1 [ %8, %14 ], [ false, %0 ]
  ret i1 %16
}

declare zeroext i1 @_ZN4base33GetFieldTrialParamByFeatureAsBoolERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEb(%"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8features48ShouldAlwaysRetrieveOptimizationGuidePredictionsEv() local_unnamed_addr #0 {
  %1 = alloca %"class.std::__1::basic_string", align 8
  %2 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #5
  %3 = tail call i8* @_Znwm(i64 32) #6
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast i64* %5 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %6, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %3, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i64 0, i64 0), i64 27, i1 false) #5
  %7 = getelementptr inbounds i8, i8* %3, i64 27
  store i8 0, i8* %7, align 1
  %8 = call zeroext i1 @_ZN4base33GetFieldTrialParamByFeatureAsBoolERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEb(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features37kLoadingPredictorUseOptimizationGuideE, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %1, i1 zeroext false) #5
  %9 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %0
  %14 = load i8*, i8** %4, align 8
  call void @_ZdlPv(i8* %14) #6
  br label %15

15:                                               ; preds = %0, %13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #5
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8features25GetMaxInflightPreresolvesEv() local_unnamed_addr #0 {
  %1 = alloca %"class.std::__1::basic_string", align 8
  %2 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #5
  %3 = tail call i8* @_Znwm(i64 32) #6
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast i64* %5 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %6, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %3, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0), i64 24, i1 false) #5
  %7 = getelementptr inbounds i8, i8* %3, i64 24
  store i8 0, i8* %7, align 1
  %8 = call i32 @_ZN4base32GetFieldTrialParamByFeatureAsIntERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEi(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features42kLoadingPredictorInflightPredictiveActionsE, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %1, i32 3) #5
  %9 = sext i32 %8 to i64
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %0
  %15 = load i8*, i8** %4, align 8
  call void @_ZdlPv(i8* %15) #6
  br label %16

16:                                               ; preds = %0, %14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #5
  ret i64 %9
}

declare i32 @_ZN4base32GetFieldTrialParamByFeatureAsIntERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEi(%"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8features24GetMaxInflightPrefetchesEv() local_unnamed_addr #0 {
  %1 = alloca %"class.std::__1::basic_string", align 8
  %2 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #5
  %3 = tail call i8* @_Znwm(i64 32) #6
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast i64* %5 to <2 x i64>*
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %6, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %3, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i64 23, i1 false) #5
  %7 = getelementptr inbounds i8, i8* %3, i64 23
  store i8 0, i8* %7, align 1
  %8 = call i32 @_ZN4base32GetFieldTrialParamByFeatureAsIntERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEi(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features42kLoadingPredictorInflightPredictiveActionsE, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %1, i32 3) #5
  %9 = sext i32 %8 to i64
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %0
  %15 = load i8*, i8** %4, align 8
  call void @_ZdlPv(i8* %15) #6
  br label %16

16:                                               ; preds = %0, %14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #5
  ret i64 %9
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
