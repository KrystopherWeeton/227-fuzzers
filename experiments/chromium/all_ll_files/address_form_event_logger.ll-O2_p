; ModuleID = '../../components/autofill/core/browser/metrics/address_form_event_logger.cc'
source_filename = "../../components/autofill/core/browser/metrics/address_form_event_logger.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.autofill::AddressFormEventLogger" = type { %"class.autofill::FormEventLoggerBase.base", [4 x i8] }
%"class.autofill::FormEventLoggerBase.base" = type <{ i32 (...)**, %"class.std::__1::basic_string", i8, [7 x i8], i64, i64, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, [4 x i8], %"class.absl::optional", %"struct.autofill::FormFieldData", %"class.autofill::AutofillMetrics::FormInteractionsUkmLogger"*, %"class.autofill::LogManager"*, i32 }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"struct.autofill::FormFieldData" = type { %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", %"class.url::Origin", i32, %"class.std::__1::basic_string", i64, i8, i32, i8, i8, i32, i32, i32, i8, i8, %"class.std::__1::basic_string.2", %"class.std::__1::vector", %"class.std::__1::vector", i32, %"class.gfx::RectF", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.autofill::internal::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.autofill::FieldRendererId" = type { %"class.util::IdType" }
%"class.util::IdType" = type { %"class.base::StrongAlias.11" }
%"class.base::StrongAlias.11" = type { i32 }
%"class.autofill::FormRendererId" = type { %"class.util::IdType.12" }
%"class.util::IdType.12" = type { %"class.base::StrongAlias.13" }
%"class.base::StrongAlias.13" = type { i32 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.14" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.14" = type { %"class.absl::optional_internal::optional_data.15" }
%"class.absl::optional_internal::optional_data.15" = type { %"class.absl::optional_internal::optional_data_base.16" }
%"class.absl::optional_internal::optional_data_base.16" = type { %"class.absl::optional_internal::optional_data_dtor_base.17" }
%"class.absl::optional_internal::optional_data_dtor_base.17" = type { i8, %union.anon.18 }
%union.anon.18 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::basic_string.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.5 }
%union.anon.5 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string.2"*, %"class.std::__1::basic_string.2"*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::basic_string.2"* }
%"class.autofill::LogManager" = type opaque
%"class.autofill::AutofillMetrics::FormInteractionsUkmLogger" = type { %"class.ukm::UkmRecorder"*, i64, %"class.base::TimeTicks" }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.autofill::AutofillClient" = type { %"class.autofill::RiskDataLoader" }
%"class.autofill::RiskDataLoader" = type { i32 (...)** }
%"class.autofill::FormEventLoggerBase" = type <{ i32 (...)**, %"class.std::__1::basic_string", i8, [7 x i8], i64, i64, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, [4 x i8], %"class.absl::optional", %"struct.autofill::FormFieldData", %"class.autofill::AutofillMetrics::FormInteractionsUkmLogger"*, %"class.autofill::LogManager"*, i32, [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.autofill::AutofillProfile" = type { %"class.autofill::AutofillDataModel", %"class.autofill::NameInfo", %"class.autofill::EmailInfo", %"class.autofill::CompanyInfo", %"class.autofill::PhoneNumber", %"class.autofill::Address", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.base::Time", i32, i8, i8, %"class.std::__1::map", %"class.std::__1::map", %"class.base::WeakPtrFactory" }
%"class.autofill::AutofillDataModel" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i64, %"class.base::Time", %"class.base::Time" }
%"class.autofill::FormGroup" = type { i32 (...)** }
%"class.autofill::NameInfo" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.autofill::structured_address::AddressComponent"* }
%"class.autofill::structured_address::AddressComponent" = type <{ i32 (...)**, %"class.absl::optional.27", i32, i32, %"class.std::__1::vector.32", %"class.absl::optional.39", %"class.autofill::structured_address::AddressComponent"*, i32, [4 x i8] }>
%"class.absl::optional.27" = type { %"class.absl::optional_internal::optional_data.28" }
%"class.absl::optional_internal::optional_data.28" = type { %"class.absl::optional_internal::optional_data_base.29" }
%"class.absl::optional_internal::optional_data_base.29" = type { %"class.absl::optional_internal::optional_data_dtor_base.30" }
%"class.absl::optional_internal::optional_data_dtor_base.30" = type { i8, %union.anon.31 }
%union.anon.31 = type { %"class.std::__1::basic_string.2" }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.autofill::structured_address::AddressComponent"**, %"class.autofill::structured_address::AddressComponent"**, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.autofill::structured_address::AddressComponent"** }
%"class.absl::optional.39" = type { %"class.absl::optional_internal::optional_data.40" }
%"class.absl::optional_internal::optional_data.40" = type { %"class.absl::optional_internal::optional_data_base.41" }
%"class.absl::optional_internal::optional_data_base.41" = type { %"class.absl::optional_internal::optional_data_dtor_base.42" }
%"class.absl::optional_internal::optional_data_dtor_base.42" = type { i8, %union.anon.43 }
%union.anon.43 = type { %"class.std::__1::vector.44" }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"struct.autofill::structured_address::AddressToken"*, %"struct.autofill::structured_address::AddressToken"*, %"class.std::__1::__compressed_pair.46" }
%"struct.autofill::structured_address::AddressToken" = type opaque
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.autofill::structured_address::AddressToken"* }
%"class.autofill::EmailInfo" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string.2" }
%"class.autofill::CompanyInfo" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string.2", %"class.autofill::AutofillProfile"* }
%"class.autofill::PhoneNumber" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string.2", %"class.autofill::AutofillProfile"*, %"class.autofill::i18n::PhoneObject" }
%"class.autofill::i18n::PhoneObject" = type { %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.52", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.i18n::phonenumbers::PhoneNumber"* }
%"class.i18n::phonenumbers::PhoneNumber" = type opaque
%"class.autofill::Address" = type { %"class.autofill::FormGroup", %"class.std::__1::vector", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string", %"class.autofill::structured_address::Address" }
%"class.autofill::structured_address::Address" = type { %"class.autofill::structured_address::AddressComponent.base", %"class.autofill::structured_address::StreetAddress", %"class.autofill::structured_address::PostalCode", %"class.autofill::structured_address::SortingCode", %"class.autofill::structured_address::DependentLocality", %"class.autofill::structured_address::City", %"class.autofill::structured_address::State", %"class.autofill::structured_address::CountryCode" }
%"class.autofill::structured_address::AddressComponent.base" = type <{ i32 (...)**, %"class.absl::optional.27", i32, i32, %"class.std::__1::vector.32", %"class.absl::optional.39", %"class.autofill::structured_address::AddressComponent"*, i32 }>
%"class.autofill::structured_address::StreetAddress" = type { %"class.autofill::structured_address::AddressComponentWithRewriter.base", [4 x i8], %"class.autofill::structured_address::StreetAndDependentStreetName", %"class.autofill::structured_address::HouseNumber", %"class.autofill::structured_address::Premise", %"class.autofill::structured_address::SubPremise", %"class.std::__1::vector" }
%"class.autofill::structured_address::AddressComponentWithRewriter.base" = type { %"class.autofill::structured_address::AddressComponent.base" }
%"class.autofill::structured_address::StreetAndDependentStreetName" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8], %"class.autofill::structured_address::StreetName", %"class.autofill::structured_address::DependentStreetName" }
%"class.autofill::structured_address::StreetName" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::DependentStreetName" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::HouseNumber" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::Premise" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::SubPremise" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8], %"class.autofill::structured_address::Floor", %"class.autofill::structured_address::Apartment" }
%"class.autofill::structured_address::Floor" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::Apartment" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::PostalCode" = type { %"class.autofill::structured_address::AddressComponentWithRewriter.base", [4 x i8] }
%"class.autofill::structured_address::SortingCode" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::DependentLocality" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::City" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::State" = type { %"class.autofill::structured_address::AddressComponentWithRewriter.base", [4 x i8] }
%"class.autofill::structured_address::CountryCode" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.24" }
%"class.base::time_internal::TimeBase.24" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.66" }
%"struct.std::__1::__atomic_base.66" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.67" }
%"struct.std::__1::atomic.67" = type { %"struct.std::__1::__atomic_base.68" }
%"struct.std::__1::__atomic_base.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { i8 }
%"class.autofill::FormStructure" = type <{ i32 (...)**, %"class.autofill::LanguageCode", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", %"class.std::__1::vector.73", i32, [4 x i8], %class.GURL, %class.GURL, %class.GURL, %"class.url::Origin", i64, %"class.std::__1::vector.86", i64, i32, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.autofill::FormSignature", %"class.base::TimeTicks", %"class.std::__1::map.96", i8, [3 x i8], %"class.absl::optional.107", i32, [4 x i8], i64, i32, i32, %"class.std::__1::unique_ptr.114", i8, i8, [6 x i8], %"class.autofill::internal::TokenType", %"class.autofill::FormRendererId", [4 x i8] }>
%"class.autofill::LanguageCode" = type { %"class.base::StrongAlias.72" }
%"class.base::StrongAlias.72" = type { %"class.std::__1::basic_string" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.75" }
%"struct.std::__1::pair" = type <{ %"class.std::__1::basic_string.2", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.std::__1::pair"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.80" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %class.GURL* }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { %"class.std::__1::unique_ptr.88"*, %"class.std::__1::unique_ptr.88"*, %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::unique_ptr.88" = type opaque
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.std::__1::unique_ptr.88"* }
%"class.autofill::FormSignature" = type { %"class.util::IdType.94" }
%"class.util::IdType.94" = type { %"class.base::StrongAlias.95" }
%"class.base::StrongAlias.95" = type { i64 }
%"class.std::__1::map.96" = type { %"class.std::__1::__tree.97" }
%"class.std::__1::__tree.97" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.absl::optional.107" = type { %"class.absl::optional_internal::optional_data.108" }
%"class.absl::optional_internal::optional_data.108" = type { %"class.absl::optional_internal::optional_data_base.109" }
%"class.absl::optional_internal::optional_data_base.109" = type { %"class.absl::optional_internal::optional_data_dtor_base.110" }
%"class.absl::optional_internal::optional_data_dtor_base.110" = type { i8, [3 x i8], %union.anon.111 }
%union.anon.111 = type { %"struct.std::__1::pair.112" }
%"struct.std::__1::pair.112" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.autofill::RandomizedEncoder"* }
%"class.autofill::RandomizedEncoder" = type opaque
%"class.autofill::AutofillField" = type <{ i32 (...)**, %"struct.autofill::FormFieldData", %"class.absl::optional.120", %"class.std::__1::basic_string.2", i32, i8, [3 x i8], %"class.std::__1::vector.127", i8, [7 x i8], %"class.absl::optional.134", i32, %"class.autofill::AutofillType", i32, i32, %"class.autofill::DenseSet", %"class.std::__1::map.139", i32, %"class.absl::optional.148", [4 x i8], i64, i8, i8, [6 x i8], %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.absl::optional.120" = type { %"class.absl::optional_internal::optional_data.121" }
%"class.absl::optional_internal::optional_data.121" = type { %"class.absl::optional_internal::optional_data_base.122" }
%"class.absl::optional_internal::optional_data_base.122" = type { %"class.absl::optional_internal::optional_data_dtor_base.123" }
%"class.absl::optional_internal::optional_data_dtor_base.123" = type { i8, %union.anon.124 }
%union.anon.124 = type { %"class.autofill::FieldSignature" }
%"class.autofill::FieldSignature" = type { %"class.util::IdType.125" }
%"class.util::IdType.125" = type { %"class.base::StrongAlias.126" }
%"class.base::StrongAlias.126" = type { i32 }
%"class.std::__1::vector.127" = type { %"class.std::__1::__vector_base.128" }
%"class.std::__1::__vector_base.128" = type { %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"*, %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"*, %"class.std::__1::__compressed_pair.129" }
%"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", i32, i8, [3 x i8] }>
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction"* }
%"class.absl::optional.134" = type { %"class.absl::optional_internal::optional_data.135" }
%"class.absl::optional_internal::optional_data.135" = type { %"class.absl::optional_internal::optional_data_base.136" }
%"class.absl::optional_internal::optional_data_base.136" = type { %"class.absl::optional_internal::optional_data_dtor_base.137" }
%"class.absl::optional_internal::optional_data_dtor_base.137" = type { i8, %union.anon.138 }
%union.anon.138 = type { %"class.autofill::PasswordRequirementsSpec" }
%"class.autofill::PasswordRequirementsSpec" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.autofill::PasswordRequirementsSpec_CharacterClass"*, %"class.autofill::PasswordRequirementsSpec_CharacterClass"*, %"class.autofill::PasswordRequirementsSpec_CharacterClass"*, %"class.autofill::PasswordRequirementsSpec_CharacterClass"*, %"class.autofill::PasswordRequirementsSpec_CharacterClass"*, i32, i32, i32, i32 }
%"class.autofill::PasswordRequirementsSpec_CharacterClass" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"struct.google::protobuf::internal::ArenaStringPtr", i32, i32 }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"class.autofill::AutofillType" = type { i32, i32, i32 }
%"class.autofill::DenseSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [2 x i64] }
%"class.std::__1::map.139" = type { %"class.std::__1::__tree.140" }
%"class.std::__1::__tree.140" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.141", %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.absl::optional.148" = type { %"class.absl::optional_internal::optional_data.149" }
%"class.absl::optional_internal::optional_data.149" = type { %"class.absl::optional_internal::optional_data_base.150" }
%"class.absl::optional_internal::optional_data_base.150" = type { %"class.absl::optional_internal::optional_data_dtor_base.151" }
%"class.absl::optional_internal::optional_data_dtor_base.151" = type { i8, %union.anon.152 }
%union.anon.152 = type { i32 }
%"struct.base::UserMetricsAction" = type { i8* }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZN8autofill19FormEventLoggerBase22OnSuggestionsShownOnceEv = comdat any

$_ZN8autofill19FormEventLoggerBase31OnSuggestionsShownSubmittedOnceERKNS_13FormStructureE = comdat any

@.str = private unnamed_addr constant [8 x i8] c"Address\00", align 1
@_ZTVN8autofill22AddressFormEventLoggerE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.autofill::AddressFormEventLogger"*)* @_ZN8autofill22AddressFormEventLoggerD2Ev to i8*), i8* bitcast (void (%"class.autofill::AddressFormEventLogger"*)* @_ZN8autofill22AddressFormEventLoggerD0Ev to i8*), i8* bitcast (void (%"class.autofill::AddressFormEventLogger"*)* @_ZN8autofill22AddressFormEventLogger21RecordPollSuggestionsEv to i8*), i8* bitcast (void (%"class.autofill::AddressFormEventLogger"*)* @_ZN8autofill22AddressFormEventLogger15RecordParseFormEv to i8*), i8* bitcast (void (%"class.autofill::AddressFormEventLogger"*)* @_ZN8autofill22AddressFormEventLogger21RecordShowSuggestionsEv to i8*), i8* bitcast (void (%"class.autofill::FormEventLoggerBase"*, %"class.autofill::FormStructure"*)* @_ZN8autofill19FormEventLoggerBase17LogWillSubmitFormERKNS_13FormStructureE to i8*), i8* bitcast (void (%"class.autofill::FormEventLoggerBase"*, %"class.autofill::FormStructure"*)* @_ZN8autofill19FormEventLoggerBase16LogFormSubmittedERKNS_13FormStructureE to i8*), i8* bitcast (void (%"class.autofill::FormEventLoggerBase"*, i64)* @_ZN8autofill19FormEventLoggerBase24LogUkmInteractedWithFormENS_13FormSignatureE to i8*), i8* bitcast (void (%"class.autofill::FormEventLoggerBase"*)* @_ZN8autofill19FormEventLoggerBase22OnSuggestionsShownOnceEv to i8*), i8* bitcast (void (%"class.autofill::FormEventLoggerBase"*, %"class.autofill::FormStructure"*)* @_ZN8autofill19FormEventLoggerBase31OnSuggestionsShownSubmittedOnceERKNS_13FormStructureE to i8*), i8* bitcast (void (%"class.autofill::AddressFormEventLogger"*, %"class.std::__1::basic_string"*, i32, %"class.autofill::FormStructure"*)* @_ZNK8autofill22AddressFormEventLogger5OnLogERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9FormEventERKNS_13FormStructureE to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [33 x i8] c"Autofill_FilledProfileSuggestion\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c".AddressPlusContact\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"Autofill_PolledProfileSuggestions\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"Autofill_ParsedProfileForm\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"Autofill_ShowedProfileSuggestions\00", align 1

@_ZN8autofill22AddressFormEventLoggerC1EbPNS_15AutofillMetrics25FormInteractionsUkmLoggerEPNS_14AutofillClientE = hidden unnamed_addr alias void (%"class.autofill::AddressFormEventLogger"*, i1, %"class.autofill::AutofillMetrics::FormInteractionsUkmLogger"*, %"class.autofill::AutofillClient"*), void (%"class.autofill::AddressFormEventLogger"*, i1, %"class.autofill::AutofillMetrics::FormInteractionsUkmLogger"*, %"class.autofill::AutofillClient"*)* @_ZN8autofill22AddressFormEventLoggerC2EbPNS_15AutofillMetrics25FormInteractionsUkmLoggerEPNS_14AutofillClientE
@_ZN8autofill22AddressFormEventLoggerD1Ev = hidden unnamed_addr alias void (%"class.autofill::AddressFormEventLogger"*), void (%"class.autofill::AddressFormEventLogger"*)* @_ZN8autofill22AddressFormEventLoggerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill22AddressFormEventLoggerC2EbPNS_15AutofillMetrics25FormInteractionsUkmLoggerEPNS_14AutofillClientE(%"class.autofill::AddressFormEventLogger"*, i1 zeroext, %"class.autofill::AutofillMetrics::FormInteractionsUkmLogger"*, %"class.autofill::AutofillClient"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.autofill::AddressFormEventLogger"* %0 to %"class.autofill::FormEventLoggerBase"*
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #7
  %8 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  store i8 7, i8* %9, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 7, i1 false) #7
  %10 = getelementptr inbounds i8, i8* %7, i64 7
  store i8 0, i8* %10, align 1
  %11 = icmp eq %"class.autofill::AutofillClient"* %3, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %4
  %13 = bitcast %"class.autofill::AutofillClient"* %3 to %"class.autofill::LogManager"* (%"class.autofill::AutofillClient"*)***
  %14 = load %"class.autofill::LogManager"* (%"class.autofill::AutofillClient"*)**, %"class.autofill::LogManager"* (%"class.autofill::AutofillClient"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.autofill::LogManager"* (%"class.autofill::AutofillClient"*)*, %"class.autofill::LogManager"* (%"class.autofill::AutofillClient"*)** %14, i64 62
  %16 = load %"class.autofill::LogManager"* (%"class.autofill::AutofillClient"*)*, %"class.autofill::LogManager"* (%"class.autofill::AutofillClient"*)** %15, align 8
  %17 = tail call %"class.autofill::LogManager"* %16(%"class.autofill::AutofillClient"* nonnull %3) #7
  br label %18

18:                                               ; preds = %4, %12
  %19 = phi %"class.autofill::LogManager"* [ %17, %12 ], [ null, %4 ]
  call void @_ZN8autofill19FormEventLoggerBaseC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEbPNS_15AutofillMetrics25FormInteractionsUkmLoggerEPNS_10LogManagerE(%"class.autofill::FormEventLoggerBase"* %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i1 zeroext %1, %"class.autofill::AutofillMetrics::FormInteractionsUkmLogger"* %2, %"class.autofill::LogManager"* %19) #7
  %20 = load i8, i8* %9, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #8
  br label %25

25:                                               ; preds = %18, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #7
  %26 = getelementptr inbounds %"class.autofill::AddressFormEventLogger", %"class.autofill::AddressFormEventLogger"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN8autofill22AddressFormEventLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN8autofill19FormEventLoggerBaseC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEbPNS_15AutofillMetrics25FormInteractionsUkmLoggerEPNS_10LogManagerE(%"class.autofill::FormEventLoggerBase"*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, %"class.autofill::AutofillMetrics::FormInteractionsUkmLogger"*, %"class.autofill::LogManager"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN8autofill19FormEventLoggerBaseD2Ev(%"class.autofill::FormEventLoggerBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill22AddressFormEventLoggerD2Ev(%"class.autofill::AddressFormEventLogger"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.autofill::AddressFormEventLogger"* %0 to %"class.autofill::FormEventLoggerBase"*
  tail call void @_ZN8autofill19FormEventLoggerBaseD2Ev(%"class.autofill::FormEventLoggerBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill22AddressFormEventLoggerD0Ev(%"class.autofill::AddressFormEventLogger"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.autofill::AddressFormEventLogger"* %0 to %"class.autofill::FormEventLoggerBase"*
  tail call void @_ZN8autofill19FormEventLoggerBaseD2Ev(%"class.autofill::FormEventLoggerBase"* %2) #7
  %3 = bitcast %"class.autofill::AddressFormEventLogger"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill22AddressFormEventLogger19OnDidFillSuggestionERKNS_15AutofillProfileERKNS_13FormStructureERKNS_13AutofillFieldENS_23AutofillSyncSigninStateE(%"class.autofill::AddressFormEventLogger"*, %"class.autofill::AutofillProfile"* nocapture readonly dereferenceable(2856), %"class.autofill::FormStructure"* dereferenceable(752), %"class.autofill::AutofillField"* dereferenceable(912), i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.base::UserMetricsAction", align 8
  %7 = getelementptr inbounds %"class.autofill::AutofillProfile", %"class.autofill::AutofillProfile"* %1, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = bitcast %"class.autofill::AddressFormEventLogger"* %0 to %"class.autofill::FormEventLoggerBase"*
  %10 = getelementptr inbounds %"class.autofill::AddressFormEventLogger", %"class.autofill::AddressFormEventLogger"* %0, i64 0, i32 0, i32 25
  store i32 %4, i32* %10, align 8
  %11 = getelementptr inbounds %"class.autofill::AddressFormEventLogger", %"class.autofill::AddressFormEventLogger"* %0, i64 0, i32 0, i32 23
  %12 = load %"class.autofill::AutofillMetrics::FormInteractionsUkmLogger"*, %"class.autofill::AutofillMetrics::FormInteractionsUkmLogger"** %11, align 8
  tail call void @_ZN8autofill15AutofillMetrics25FormInteractionsUkmLogger20LogDidFillSuggestionEibRKNS_13FormStructureERKNS_13AutofillFieldE(%"class.autofill::AutofillMetrics::FormInteractionsUkmLogger"* %12, i32 %8, i1 zeroext false, %"class.autofill::FormStructure"* dereferenceable(752) %2, %"class.autofill::AutofillField"* dereferenceable(912) %3) #7
  %13 = icmp eq i32 %8, 1
  %14 = select i1 %13, i32 4, i32 3
  tail call void @_ZNK8autofill19FormEventLoggerBase3LogENS_9FormEventERKNS_13FormStructureE(%"class.autofill::FormEventLoggerBase"* %9, i32 %14, %"class.autofill::FormStructure"* dereferenceable(752) %2) #7
  %15 = getelementptr inbounds %"class.autofill::AddressFormEventLogger", %"class.autofill::AddressFormEventLogger"* %0, i64 0, i32 0, i32 11
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %5
  store i8 1, i8* %15, align 1
  %19 = getelementptr inbounds %"class.autofill::AddressFormEventLogger", %"class.autofill::AddressFormEventLogger"* %0, i64 0, i32 0, i32 15
  %20 = zext i1 %13 to i8
  store i8 %20, i8* %19, align 1
  %21 = select i1 %13, i32 7, i32 6
  tail call void @_ZNK8autofill19FormEventLoggerBase3LogENS_9FormEventERKNS_13FormStructureE(%"class.autofill::FormEventLoggerBase"* %9, i32 %21, %"class.autofill::FormStructure"* dereferenceable(752) %2) #7
  br label %22

22:                                               ; preds = %5, %18
  %23 = bitcast %"struct.base::UserMetricsAction"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #7
  %24 = getelementptr inbounds %"struct.base::UserMetricsAction", %"struct.base::UserMetricsAction"* %6, i64 0, i32 0
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i8** %24, align 8
  call void @_ZN4base12RecordActionERKNS_17UserMetricsActionE(%"struct.base::UserMetricsAction"* nonnull dereferenceable(8) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #7
  ret void
}

declare void @_ZN8autofill15AutofillMetrics25FormInteractionsUkmLogger20LogDidFillSuggestionEibRKNS_13FormStructureERKNS_13AutofillFieldE(%"class.autofill::AutofillMetrics::FormInteractionsUkmLogger"*, i32, i1 zeroext, %"class.autofill::FormStructure"* dereferenceable(752), %"class.autofill::AutofillField"* dereferenceable(912)) local_unnamed_addr #2

declare void @_ZNK8autofill19FormEventLoggerBase3LogENS_9FormEventERKNS_13FormStructureE(%"class.autofill::FormEventLoggerBase"*, i32, %"class.autofill::FormStructure"* dereferenceable(752)) local_unnamed_addr #2

declare void @_ZN4base12RecordActionERKNS_17UserMetricsActionE(%"struct.base::UserMetricsAction"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill22AddressFormEventLogger27OnDidSeeFillableDynamicFormENS_23AutofillSyncSigninStateERKNS_13FormStructureE(%"class.autofill::AddressFormEventLogger"*, i32, %"class.autofill::FormStructure"* dereferenceable(752)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.autofill::AddressFormEventLogger"* %0 to %"class.autofill::FormEventLoggerBase"*
  %5 = getelementptr inbounds %"class.autofill::AddressFormEventLogger", %"class.autofill::AddressFormEventLogger"* %0, i64 0, i32 0, i32 25
  store i32 %1, i32* %5, align 8
  tail call void @_ZNK8autofill19FormEventLoggerBase3LogENS_9FormEventERKNS_13FormStructureE(%"class.autofill::FormEventLoggerBase"* %4, i32 27, %"class.autofill::FormStructure"* dereferenceable(752) %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill22AddressFormEventLogger11OnDidRefillENS_23AutofillSyncSigninStateERKNS_13FormStructureE(%"class.autofill::AddressFormEventLogger"*, i32, %"class.autofill::FormStructure"* dereferenceable(752)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.autofill::AddressFormEventLogger"* %0 to %"class.autofill::FormEventLoggerBase"*
  %5 = getelementptr inbounds %"class.autofill::AddressFormEventLogger", %"class.autofill::AddressFormEventLogger"* %0, i64 0, i32 0, i32 25
  store i32 %1, i32* %5, align 8
  tail call void @_ZNK8autofill19FormEventLoggerBase3LogENS_9FormEventERKNS_13FormStructureE(%"class.autofill::FormEventLoggerBase"* %4, i32 28, %"class.autofill::FormStructure"* dereferenceable(752) %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill22AddressFormEventLogger25OnSubsequentRefillAttemptENS_23AutofillSyncSigninStateERKNS_13FormStructureE(%"class.autofill::AddressFormEventLogger"*, i32, %"class.autofill::FormStructure"* dereferenceable(752)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.autofill::AddressFormEventLogger"* %0 to %"class.autofill::FormEventLoggerBase"*
  %5 = getelementptr inbounds %"class.autofill::AddressFormEventLogger", %"class.autofill::AddressFormEventLogger"* %0, i64 0, i32 0, i32 25
  store i32 %1, i32* %5, align 8
  tail call void @_ZNK8autofill19FormEventLoggerBase3LogENS_9FormEventERKNS_13FormStructureE(%"class.autofill::FormEventLoggerBase"* %4, i32 29, %"class.autofill::FormStructure"* dereferenceable(752) %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8autofill22AddressFormEventLogger5OnLogERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9FormEventERKNS_13FormStructureE(%"class.autofill::AddressFormEventLogger"* nocapture readnone, %"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.autofill::FormStructure"* dereferenceable(752)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = tail call i32 @_ZN8autofill9data_util15DetermineGroupsERKNS_13FormStructureE(%"class.autofill::FormStructure"* dereferenceable(752) %3) #7
  %9 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #7
  %10 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #7
  call void @_ZN8autofill9data_util27GetSuffixForProfileFormTypeEj(%"class.std::__1::basic_string"* nonnull sret %6, i32 %8) #7
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1, !noalias !3
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8, !noalias !3
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8, !noalias !3
  %19 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %20 = zext i8 %13 to i64
  %21 = select i1 %14, i8* %16, i8* %19
  %22 = select i1 %14, i64 %18, i64 %20
  %23 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm(%"class.std::__1::basic_string"* nonnull %6, i64 0, i8* %21, i64 %22) #7, !noalias !3
  %24 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %24, i64 24, i1 false) #7
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #7, !noalias !3
  call void @_ZN4base23UmaHistogramExactLinearERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i32 %2, i32 35) #7
  %25 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %4
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #8
  br label %32

32:                                               ; preds = %4, %29
  %33 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #8
  br label %40

40:                                               ; preds = %32, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #7
  %41 = call zeroext i1 @_ZN8autofill9data_util15ContainsAddressEj(i32 %8) #7
  br i1 %41, label %42, label %87

42:                                               ; preds = %40
  %43 = call zeroext i1 @_ZN8autofill9data_util13ContainsPhoneEj(i32 %8) #7
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = call zeroext i1 @_ZN8autofill9data_util13ContainsEmailEj(i32 %8) #7
  br i1 %45, label %46, label %87

46:                                               ; preds = %44, %42
  %47 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #7
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 24, i1 false) #7, !alias.scope !6
  %51 = load i8, i8* %12, align 1, !noalias !6
  %52 = icmp slt i8 %51, 0
  %53 = load i64, i64* %17, align 8
  %54 = load i8*, i8** %15, align 8
  %55 = zext i8 %51 to i64
  %56 = select i1 %52, i64 %53, i64 %55
  %57 = select i1 %52, i8* %54, i8* %19
  %58 = add i64 %56, 19
  %59 = icmp ugt i64 %58, -17
  br i1 %59, label %60, label %62

60:                                               ; preds = %46
  %61 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %61) #9
  unreachable

62:                                               ; preds = %46
  %63 = icmp ult i64 %58, 23
  br i1 %63, label %69, label %64

64:                                               ; preds = %62
  %65 = add nuw i64 %56, 35
  %66 = and i64 %65, -16
  %67 = call i8* @_Znwm(i64 %66) #8
  store i8* %67, i8** %48, align 8, !alias.scope !6
  %68 = or i64 %66, -9223372036854775808
  store i64 %68, i64* %50, align 8, !alias.scope !6
  store i64 %56, i64* %49, align 8, !alias.scope !6
  br label %74

69:                                               ; preds = %62
  %70 = trunc i64 %56 to i8
  %71 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  store i8 %70, i8* %72, align 1, !alias.scope !6
  %73 = icmp eq i64 %56, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %64, %69
  %75 = phi i8* [ %67, %64 ], [ %47, %69 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %75, i8* align 1 %57, i64 %56, i1 false) #7
  br label %76

76:                                               ; preds = %69, %74
  %77 = phi i8* [ %47, %69 ], [ %75, %74 ]
  %78 = getelementptr inbounds i8, i8* %77, i64 %56
  store i8 0, i8* %78, align 1
  %79 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i64 19) #7
  call void @_ZN4base23UmaHistogramExactLinearERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, i32 %2, i32 35) #7
  %80 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %76
  %85 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %85) #8
  br label %86

86:                                               ; preds = %76, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #7
  br label %87

87:                                               ; preds = %86, %44, %40
  ret void
}

declare i32 @_ZN8autofill9data_util15DetermineGroupsERKNS_13FormStructureE(%"class.autofill::FormStructure"* dereferenceable(752)) local_unnamed_addr #2

declare void @_ZN8autofill9data_util27GetSuffixForProfileFormTypeEj(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN8autofill9data_util15ContainsAddressEj(i32) local_unnamed_addr #2

declare zeroext i1 @_ZN8autofill9data_util13ContainsPhoneEj(i32) local_unnamed_addr #2

declare zeroext i1 @_ZN8autofill9data_util13ContainsEmailEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill22AddressFormEventLogger21RecordPollSuggestionsEv(%"class.autofill::AddressFormEventLogger"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.base::UserMetricsAction", align 8
  %3 = bitcast %"struct.base::UserMetricsAction"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7
  %4 = getelementptr inbounds %"struct.base::UserMetricsAction", %"struct.base::UserMetricsAction"* %2, i64 0, i32 0
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i8** %4, align 8
  call void @_ZN4base12RecordActionERKNS_17UserMetricsActionE(%"struct.base::UserMetricsAction"* nonnull dereferenceable(8) %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill22AddressFormEventLogger15RecordParseFormEv(%"class.autofill::AddressFormEventLogger"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.base::UserMetricsAction", align 8
  %3 = bitcast %"struct.base::UserMetricsAction"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7
  %4 = getelementptr inbounds %"struct.base::UserMetricsAction", %"struct.base::UserMetricsAction"* %2, i64 0, i32 0
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i8** %4, align 8
  call void @_ZN4base12RecordActionERKNS_17UserMetricsActionE(%"struct.base::UserMetricsAction"* nonnull dereferenceable(8) %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill22AddressFormEventLogger21RecordShowSuggestionsEv(%"class.autofill::AddressFormEventLogger"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.base::UserMetricsAction", align 8
  %3 = bitcast %"struct.base::UserMetricsAction"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7
  %4 = getelementptr inbounds %"struct.base::UserMetricsAction", %"struct.base::UserMetricsAction"* %2, i64 0, i32 0
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i8** %4, align 8
  call void @_ZN4base12RecordActionERKNS_17UserMetricsActionE(%"struct.base::UserMetricsAction"* nonnull dereferenceable(8) %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7
  ret void
}

declare void @_ZN8autofill19FormEventLoggerBase17LogWillSubmitFormERKNS_13FormStructureE(%"class.autofill::FormEventLoggerBase"*, %"class.autofill::FormStructure"* dereferenceable(752)) unnamed_addr #2

declare void @_ZN8autofill19FormEventLoggerBase16LogFormSubmittedERKNS_13FormStructureE(%"class.autofill::FormEventLoggerBase"*, %"class.autofill::FormStructure"* dereferenceable(752)) unnamed_addr #2

declare void @_ZN8autofill19FormEventLoggerBase24LogUkmInteractedWithFormENS_13FormSignatureE(%"class.autofill::FormEventLoggerBase"*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8autofill19FormEventLoggerBase22OnSuggestionsShownOnceEv(%"class.autofill::FormEventLoggerBase"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8autofill19FormEventLoggerBase31OnSuggestionsShownSubmittedOnceERKNS_13FormStructureE(%"class.autofill::FormEventLoggerBase"*, %"class.autofill::FormStructure"* dereferenceable(752)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm(%"class.std::__1::basic_string"*, i64, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base23UmaHistogramExactLinearERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEii(%"class.std::__1::basic_string"* dereferenceable(24), i32, i32) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_OS9_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_OS9_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
