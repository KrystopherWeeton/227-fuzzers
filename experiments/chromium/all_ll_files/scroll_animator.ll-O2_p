; ModuleID = '../../ui/views/animation/scroll_animator.cc'
source_filename = "../../ui/views/animation/scroll_animator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.views::ScrollAnimator" = type { %"class.gfx::AnimationDelegate", %"class.views::ScrollDelegate"*, float, float, float, float, float, %"class.std::__1::unique_ptr" }
%"class.gfx::AnimationDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::SlideAnimation"* }
%"class.gfx::SlideAnimation" = type { %"class.gfx::LinearAnimation.base", %"class.gfx::AnimationDelegate"*, i32, %"class.absl::optional", double, double, double, %"class.base::TimeDelta", double }
%"class.gfx::LinearAnimation.base" = type <{ %"class.gfx::Animation", %"class.base::TimeDelta", double, i8 }>
%"class.gfx::Animation" = type { %"class.gfx::AnimationContainerElement", %"class.base::TimeDelta", i8, %"class.gfx::AnimationDelegate"*, %class.scoped_refptr, %"class.base::TimeTicks" }
%"class.gfx::AnimationContainerElement" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.gfx::AnimationContainer"* }
%"class.gfx::AnimationContainer" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.views::ScrollDelegate" = type { i32 (...)** }

$_ZN3gfx17AnimationDelegate24AnimationContainerWasSetEPNS_18AnimationContainerE = comdat any

@_ZTVN5views14ScrollAnimatorE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::ScrollAnimator"*)* @_ZN5views14ScrollAnimatorD2Ev to i8*), i8* bitcast (void (%"class.views::ScrollAnimator"*)* @_ZN5views14ScrollAnimatorD0Ev to i8*), i8* bitcast (void (%"class.views::ScrollAnimator"*, %"class.gfx::Animation"*)* @_ZN5views14ScrollAnimator14AnimationEndedEPKN3gfx9AnimationE to i8*), i8* bitcast (void (%"class.views::ScrollAnimator"*, %"class.gfx::Animation"*)* @_ZN5views14ScrollAnimator19AnimationProgressedEPKN3gfx9AnimationE to i8*), i8* bitcast (void (%"class.views::ScrollAnimator"*, %"class.gfx::Animation"*)* @_ZN5views14ScrollAnimator17AnimationCanceledEPKN3gfx9AnimationE to i8*), i8* bitcast (void (%"class.gfx::AnimationDelegate"*, %"class.gfx::AnimationContainer"*)* @_ZN3gfx17AnimationDelegate24AnimationContainerWasSetEPNS_18AnimationContainerE to i8*)] }, align 8

@_ZN5views14ScrollAnimatorC1EPNS_14ScrollDelegateE = hidden unnamed_addr alias void (%"class.views::ScrollAnimator"*, %"class.views::ScrollDelegate"*), void (%"class.views::ScrollAnimator"*, %"class.views::ScrollDelegate"*)* @_ZN5views14ScrollAnimatorC2EPNS_14ScrollDelegateE
@_ZN5views14ScrollAnimatorD1Ev = hidden unnamed_addr alias void (%"class.views::ScrollAnimator"*), void (%"class.views::ScrollAnimator"*)* @_ZN5views14ScrollAnimatorD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5views14ScrollAnimatorC2EPNS_14ScrollDelegateE(%"class.views::ScrollAnimator"* nocapture, %"class.views::ScrollDelegate"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5views14ScrollAnimatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 1
  store %"class.views::ScrollDelegate"* %1, %"class.views::ScrollDelegate"** %4, align 8
  %5 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 6
  %7 = bitcast float* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  store float -1.500000e+03, float* %6, align 8
  %8 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 7
  %9 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 0, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14ScrollAnimatorD2Ev(%"class.views::ScrollAnimator"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5views14ScrollAnimatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = bitcast float* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #7
  %6 = load %"class.gfx::SlideAnimation"*, %"class.gfx::SlideAnimation"** %4, align 8
  store %"class.gfx::SlideAnimation"* null, %"class.gfx::SlideAnimation"** %4, align 8
  %7 = icmp eq %"class.gfx::SlideAnimation"* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store %"class.gfx::SlideAnimation"* null, %"class.gfx::SlideAnimation"** %4, align 8
  br label %21

9:                                                ; preds = %1
  %10 = bitcast %"class.gfx::SlideAnimation"* %6 to void (%"class.gfx::SlideAnimation"*)***
  %11 = load void (%"class.gfx::SlideAnimation"*)**, void (%"class.gfx::SlideAnimation"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %11, i64 4
  %13 = load void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %12, align 8
  tail call void %13(%"class.gfx::SlideAnimation"* nonnull %6) #7
  %14 = load %"class.gfx::SlideAnimation"*, %"class.gfx::SlideAnimation"** %4, align 8
  store %"class.gfx::SlideAnimation"* null, %"class.gfx::SlideAnimation"** %4, align 8
  %15 = icmp eq %"class.gfx::SlideAnimation"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %9
  %17 = bitcast %"class.gfx::SlideAnimation"* %14 to void (%"class.gfx::SlideAnimation"*)***
  %18 = load void (%"class.gfx::SlideAnimation"*)**, void (%"class.gfx::SlideAnimation"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %18, i64 4
  %20 = load void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %19, align 8
  tail call void %20(%"class.gfx::SlideAnimation"* nonnull %14) #7
  br label %21

21:                                               ; preds = %8, %9, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14ScrollAnimator4StopEv(%"class.views::ScrollAnimator"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = bitcast float* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false)
  %5 = load %"class.gfx::SlideAnimation"*, %"class.gfx::SlideAnimation"** %3, align 8
  store %"class.gfx::SlideAnimation"* null, %"class.gfx::SlideAnimation"** %3, align 8
  %6 = icmp eq %"class.gfx::SlideAnimation"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.gfx::SlideAnimation"* %5 to void (%"class.gfx::SlideAnimation"*)***
  %9 = load void (%"class.gfx::SlideAnimation"*)**, void (%"class.gfx::SlideAnimation"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %9, i64 4
  %11 = load void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %10, align 8
  tail call void %11(%"class.gfx::SlideAnimation"* nonnull %5) #7
  br label %12

12:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14ScrollAnimatorD0Ev(%"class.views::ScrollAnimator"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5views14ScrollAnimatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = bitcast float* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #7
  %6 = load %"class.gfx::SlideAnimation"*, %"class.gfx::SlideAnimation"** %4, align 8
  store %"class.gfx::SlideAnimation"* null, %"class.gfx::SlideAnimation"** %4, align 8
  %7 = icmp eq %"class.gfx::SlideAnimation"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.gfx::SlideAnimation"* %6 to void (%"class.gfx::SlideAnimation"*)***
  %10 = load void (%"class.gfx::SlideAnimation"*)**, void (%"class.gfx::SlideAnimation"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %10, i64 4
  %12 = load void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %11, align 8
  tail call void %12(%"class.gfx::SlideAnimation"* nonnull %6) #7
  %13 = load %"class.gfx::SlideAnimation"*, %"class.gfx::SlideAnimation"** %4, align 8
  store %"class.gfx::SlideAnimation"* null, %"class.gfx::SlideAnimation"** %4, align 8
  %14 = icmp eq %"class.gfx::SlideAnimation"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %8
  %16 = bitcast %"class.gfx::SlideAnimation"* %13 to void (%"class.gfx::SlideAnimation"*)***
  %17 = load void (%"class.gfx::SlideAnimation"*)**, void (%"class.gfx::SlideAnimation"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %17, i64 4
  %19 = load void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %18, align 8
  tail call void %19(%"class.gfx::SlideAnimation"* nonnull %13) #7
  br label %20

20:                                               ; preds = %1, %8, %15
  %21 = bitcast %"class.views::ScrollAnimator"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14ScrollAnimator5StartEff(%"class.views::ScrollAnimator"*, float, float) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 6
  %5 = load float, float* %4, align 8
  %6 = fcmp ult float %5, 0.000000e+00
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  store float -1.500000e+03, float* %4, align 8
  br label %8

8:                                                ; preds = %3, %7
  %9 = phi float [ %5, %3 ], [ -1.500000e+03, %7 ]
  %10 = tail call float @llvm.fabs.f32(float %1) #7
  %11 = tail call float @llvm.fabs.f32(float %2) #7
  %12 = fcmp olt float %10, %11
  %13 = select i1 %12, float %11, float %10
  %14 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 4
  store float 0.000000e+00, float* %14, align 8
  %15 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 2
  store float %1, float* %15, align 8
  %16 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 3
  store float %2, float* %16, align 4
  %17 = fsub float -0.000000e+00, %13
  %18 = fdiv float %17, %9
  %19 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 5
  store float %18, float* %19, align 4
  %20 = tail call i8* @_Znwm(i64 136) #8
  %21 = bitcast i8* %20 to %"class.gfx::SlideAnimation"*
  %22 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 0
  tail call void @_ZN3gfx14SlideAnimationC1EPNS_17AnimationDelegateE(%"class.gfx::SlideAnimation"* nonnull %21, %"class.gfx::AnimationDelegate"* %22) #7
  %23 = ptrtoint i8* %20 to i64
  %24 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 7
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.gfx::SlideAnimation"*, %"class.gfx::SlideAnimation"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr"* %24 to i64*
  store i64 %23, i64* %27, align 8
  %28 = icmp eq %"class.gfx::SlideAnimation"* %26, null
  %29 = bitcast i8* %20 to %"class.gfx::SlideAnimation"*
  br i1 %28, label %36, label %30

30:                                               ; preds = %8
  %31 = bitcast %"class.gfx::SlideAnimation"* %26 to void (%"class.gfx::SlideAnimation"*)***
  %32 = load void (%"class.gfx::SlideAnimation"*)**, void (%"class.gfx::SlideAnimation"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %32, i64 4
  %34 = load void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %33, align 8
  tail call void %34(%"class.gfx::SlideAnimation"* nonnull %26) #7
  %35 = load %"class.gfx::SlideAnimation"*, %"class.gfx::SlideAnimation"** %25, align 8
  br label %36

36:                                               ; preds = %30, %8
  %37 = phi %"class.gfx::SlideAnimation"* [ %35, %30 ], [ %29, %8 ]
  %38 = load float, float* %19, align 4
  %39 = fpext float %38 to double
  %40 = fmul double %39, 1.000000e+06
  %41 = fcmp ult double %40, 0xC3E0000000000000
  %42 = fcmp ugt double %40, 0x43DFFFFFFFFFFFFF
  %43 = fcmp ogt double %40, 0xC3E0000000000000
  %44 = select i1 %43, double %40, double 0xC3E0000000000000
  %45 = fptosi double %44 to i64
  %46 = select i1 %41, i64 0, i64 9223372036854775807
  %47 = select i1 %42, i64 %46, i64 %45
  %48 = bitcast %"class.gfx::SlideAnimation"* %37 to void (%"class.gfx::SlideAnimation"*, i64)***
  %49 = load void (%"class.gfx::SlideAnimation"*, i64)**, void (%"class.gfx::SlideAnimation"*, i64)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.gfx::SlideAnimation"*, i64)*, void (%"class.gfx::SlideAnimation"*, i64)** %49, i64 13
  %51 = load void (%"class.gfx::SlideAnimation"*, i64)*, void (%"class.gfx::SlideAnimation"*, i64)** %50, align 8
  tail call void %51(%"class.gfx::SlideAnimation"* %37, i64 %47) #7
  %52 = load %"class.gfx::SlideAnimation"*, %"class.gfx::SlideAnimation"** %25, align 8
  %53 = bitcast %"class.gfx::SlideAnimation"* %52 to void (%"class.gfx::SlideAnimation"*)***
  %54 = load void (%"class.gfx::SlideAnimation"*)**, void (%"class.gfx::SlideAnimation"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %54, i64 11
  %56 = load void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %55, align 8
  tail call void %56(%"class.gfx::SlideAnimation"* %52) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14ScrollAnimator14AnimationEndedEPKN3gfx9AnimationE(%"class.views::ScrollAnimator"* nocapture, %"class.gfx::Animation"* nocapture readnone) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = bitcast float* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #7
  %6 = load %"class.gfx::SlideAnimation"*, %"class.gfx::SlideAnimation"** %4, align 8
  store %"class.gfx::SlideAnimation"* null, %"class.gfx::SlideAnimation"** %4, align 8
  %7 = icmp eq %"class.gfx::SlideAnimation"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.gfx::SlideAnimation"* %6 to void (%"class.gfx::SlideAnimation"*)***
  %10 = load void (%"class.gfx::SlideAnimation"*)**, void (%"class.gfx::SlideAnimation"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %10, i64 4
  %12 = load void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %11, align 8
  tail call void %12(%"class.gfx::SlideAnimation"* nonnull %6) #7
  br label %13

13:                                               ; preds = %2, %8
  %14 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 1
  %15 = load %"class.views::ScrollDelegate"*, %"class.views::ScrollDelegate"** %14, align 8
  %16 = bitcast %"class.views::ScrollDelegate"* %15 to void (%"class.views::ScrollDelegate"*)***
  %17 = load void (%"class.views::ScrollDelegate"*)**, void (%"class.views::ScrollDelegate"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.views::ScrollDelegate"*)*, void (%"class.views::ScrollDelegate"*)** %17, i64 1
  %19 = load void (%"class.views::ScrollDelegate"*)*, void (%"class.views::ScrollDelegate"*)** %18, align 8
  tail call void %19(%"class.views::ScrollDelegate"* %15) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14ScrollAnimator19AnimationProgressedEPKN3gfx9AnimationE(%"class.views::ScrollAnimator"* nocapture, %"class.gfx::Animation"*) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.gfx::Animation"* %1 to double (%"class.gfx::Animation"*)***
  %4 = load double (%"class.gfx::Animation"*)**, double (%"class.gfx::Animation"*)*** %3, align 8
  %5 = getelementptr inbounds double (%"class.gfx::Animation"*)*, double (%"class.gfx::Animation"*)** %4, i64 5
  %6 = load double (%"class.gfx::Animation"*)*, double (%"class.gfx::Animation"*)** %5, align 8
  %7 = tail call double %6(%"class.gfx::Animation"* %1) #7
  %8 = fptrunc double %7 to float
  %9 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 5
  %10 = load float, float* %9, align 4
  %11 = fmul float %10, %8
  %12 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 2
  %13 = load float, float* %12, align 8
  %14 = fcmp ogt float %13, 0.000000e+00
  %15 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 6
  %16 = load float, float* %15, align 8
  %17 = fsub float -0.000000e+00, %16
  %18 = select i1 %14, float %16, float %17
  %19 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 3
  %20 = load float, float* %19, align 4
  %21 = fcmp ogt float %20, 0.000000e+00
  %22 = select i1 %21, float %16, float %17
  %23 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 4
  %24 = load float, float* %23, align 8
  %25 = fsub float -0.000000e+00, %13
  %26 = fdiv float %25, %18
  %27 = fcmp olt float %26, %11
  %28 = select i1 %27, float %26, float %11
  %29 = fmul float %18, 5.000000e-01
  %30 = fmul float %29, %28
  %31 = fadd float %13, %30
  %32 = fmul float %28, %31
  %33 = fcmp olt float %26, %24
  %34 = select i1 %33, float %26, float %24
  %35 = fmul float %29, %34
  %36 = fadd float %13, %35
  %37 = fmul float %34, %36
  %38 = fsub float %32, %37
  %39 = fsub float -0.000000e+00, %20
  %40 = fdiv float %39, %22
  %41 = fcmp olt float %40, %11
  %42 = select i1 %41, float %40, float %11
  %43 = fmul float %22, 5.000000e-01
  %44 = fmul float %43, %42
  %45 = fadd float %20, %44
  %46 = fmul float %42, %45
  %47 = fcmp olt float %40, %24
  %48 = select i1 %47, float %40, float %24
  %49 = fmul float %43, %48
  %50 = fadd float %20, %49
  %51 = fmul float %48, %50
  %52 = fsub float %46, %51
  store float %11, float* %23, align 8
  %53 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 1
  %54 = load %"class.views::ScrollDelegate"*, %"class.views::ScrollDelegate"** %53, align 8
  %55 = bitcast %"class.views::ScrollDelegate"* %54 to i1 (%"class.views::ScrollDelegate"*, float, float)***
  %56 = load i1 (%"class.views::ScrollDelegate"*, float, float)**, i1 (%"class.views::ScrollDelegate"*, float, float)*** %55, align 8
  %57 = load i1 (%"class.views::ScrollDelegate"*, float, float)*, i1 (%"class.views::ScrollDelegate"*, float, float)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.views::ScrollDelegate"* %54, float %38, float %52) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14ScrollAnimator17AnimationCanceledEPKN3gfx9AnimationE(%"class.views::ScrollAnimator"* nocapture, %"class.gfx::Animation"* nocapture readnone) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.views::ScrollAnimator", %"class.views::ScrollAnimator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = bitcast float* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #7
  %6 = load %"class.gfx::SlideAnimation"*, %"class.gfx::SlideAnimation"** %4, align 8
  store %"class.gfx::SlideAnimation"* null, %"class.gfx::SlideAnimation"** %4, align 8
  %7 = icmp eq %"class.gfx::SlideAnimation"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.gfx::SlideAnimation"* %6 to void (%"class.gfx::SlideAnimation"*)***
  %10 = load void (%"class.gfx::SlideAnimation"*)**, void (%"class.gfx::SlideAnimation"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %10, i64 4
  %12 = load void (%"class.gfx::SlideAnimation"*)*, void (%"class.gfx::SlideAnimation"*)** %11, align 8
  tail call void %12(%"class.gfx::SlideAnimation"* nonnull %6) #7
  br label %13

13:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx17AnimationDelegate24AnimationContainerWasSetEPNS_18AnimationContainerE(%"class.gfx::AnimationDelegate"*, %"class.gfx::AnimationContainer"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN3gfx14SlideAnimationC1EPNS_17AnimationDelegateE(%"class.gfx::SlideAnimation"*, %"class.gfx::AnimationDelegate"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
