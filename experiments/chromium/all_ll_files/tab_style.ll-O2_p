; ModuleID = '../../chrome/browser/ui/tabs/tab_style.cc'
source_filename = "../../chrome/browser/ui/tabs/tab_style.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.TabStyle = type { i32 (...)** }
%"class.gfx::Size" = type { i32, i32 }
%"class.views::LayoutProvider" = type { i32 (...)**, %"class.views::TypographyProvider" }
%"class.views::TypographyProvider" = type { i32 (...)** }
%"class.ui::TouchUiController" = type { i8, i32, %"class.base::RepeatingCallbackList" }
%"class.base::RepeatingCallbackList" = type { %"class.base::internal::CallbackListBase" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list", i8, %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.3", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }

@_ZTV8TabStyle = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.TabStyle*)* @_ZN8TabStyleD2Ev to i8*), i8* bitcast (void (%class.TabStyle*)* @_ZN8TabStyleD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN8TabStyleD1Ev = hidden unnamed_addr alias void (%class.TabStyle*), void (%class.TabStyle*)* @_ZN8TabStyleD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8TabStyleD2Ev(%class.TabStyle* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN8TabStyleD0Ev(%class.TabStyle* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8TabStyle16GetStandardWidthEv() local_unnamed_addr #3 align 2 {
  %1 = alloca %"class.gfx::Size", align 4
  %2 = tail call %"class.views::LayoutProvider"* @_ZN5views14LayoutProvider3GetEv() #7
  %3 = bitcast %"class.gfx::Size"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7
  %4 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  store i32 0, i32* %5, align 4
  %6 = bitcast %"class.views::LayoutProvider"* %2 to i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)***
  %7 = load i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)**, i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)*, i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)** %7, i64 6
  %9 = load i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)*, i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)** %8, align 8
  %10 = call i32 %9(%"class.views::LayoutProvider"* %2, i32 3, %"class.gfx::Size"* nonnull dereferenceable(8) %1) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7
  %11 = shl nsw i32 %10, 1
  %12 = or i32 %11, 1
  %13 = add nsw i32 %12, 239
  ret i32 %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8TabStyle13GetTabOverlapEv() local_unnamed_addr #3 align 2 {
  %1 = alloca %"class.gfx::Size", align 4
  %2 = tail call %"class.views::LayoutProvider"* @_ZN5views14LayoutProvider3GetEv() #7
  %3 = bitcast %"class.gfx::Size"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7
  %4 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  store i32 0, i32* %5, align 4
  %6 = bitcast %"class.views::LayoutProvider"* %2 to i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)***
  %7 = load i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)**, i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)*, i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)** %7, i64 6
  %9 = load i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)*, i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)** %8, align 8
  %10 = call i32 %9(%"class.views::LayoutProvider"* %2, i32 3, %"class.gfx::Size"* nonnull dereferenceable(8) %1) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7
  %11 = shl nsw i32 %10, 1
  %12 = or i32 %11, 1
  ret i32 %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8TabStyle14GetPinnedWidthEv() local_unnamed_addr #3 align 2 {
  %1 = alloca %"class.gfx::Size", align 4
  %2 = tail call %"class.views::LayoutProvider"* @_ZN5views14LayoutProvider3GetEv() #7
  %3 = bitcast %"class.gfx::Size"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7
  %4 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  store i32 0, i32* %5, align 4
  %6 = bitcast %"class.views::LayoutProvider"* %2 to i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)***
  %7 = load i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)**, i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)*, i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)** %7, i64 6
  %9 = load i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)*, i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)** %8, align 8
  %10 = call i32 %9(%"class.views::LayoutProvider"* %2, i32 3, %"class.gfx::Size"* nonnull dereferenceable(8) %1) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7
  %11 = shl i32 %10, 2
  %12 = add nsw i32 %11, 24
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8TabStyle30GetContentsHorizontalInsetSizeEv() local_unnamed_addr #3 align 2 {
  %1 = alloca %"class.gfx::Size", align 4
  %2 = tail call %"class.views::LayoutProvider"* @_ZN5views14LayoutProvider3GetEv() #7
  %3 = bitcast %"class.gfx::Size"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7
  %4 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  store i32 0, i32* %5, align 4
  %6 = bitcast %"class.views::LayoutProvider"* %2 to i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)***
  %7 = load i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)**, i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)*, i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)** %7, i64 6
  %9 = load i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)*, i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)** %8, align 8
  %10 = call i32 %9(%"class.views::LayoutProvider"* %2, i32 3, %"class.gfx::Size"* nonnull dereferenceable(8) %1) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7
  %11 = shl nsw i32 %10, 1
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8TabStyle15GetCornerRadiusEv() local_unnamed_addr #3 align 2 {
  %1 = alloca %"class.gfx::Size", align 4
  %2 = tail call %"class.views::LayoutProvider"* @_ZN5views14LayoutProvider3GetEv() #7
  %3 = bitcast %"class.gfx::Size"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7
  %4 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  store i32 0, i32* %5, align 4
  %6 = bitcast %"class.views::LayoutProvider"* %2 to i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)***
  %7 = load i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)**, i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)*, i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)** %7, i64 6
  %9 = load i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)*, i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)** %8, align 8
  %10 = call i32 %9(%"class.views::LayoutProvider"* %2, i32 3, %"class.gfx::Size"* nonnull dereferenceable(8) %1) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8TabStyle22GetDragHandleExtensionEi(i32) local_unnamed_addr #3 align 2 {
  %2 = tail call %"class.ui::TouchUiController"* @_ZN2ui17TouchUiController3GetEv() #7
  %3 = getelementptr inbounds %"class.ui::TouchUiController", %"class.ui::TouchUiController"* %2, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %10 [
    i32 2, label %9
    i32 1, label %5
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::TouchUiController", %"class.ui::TouchUiController"* %2, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %5, %1
  br label %10

10:                                               ; preds = %1, %5, %9
  %11 = phi i32 [ 24, %9 ], [ 20, %5 ], [ 20, %1 ]
  %12 = sub nsw i32 %0, %11
  %13 = sdiv i32 %12, 2
  %14 = add nsw i32 %13, -1
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN8TabStyle21GetTabInternalPaddingEv() local_unnamed_addr #3 align 2 {
  %1 = alloca %"class.gfx::Size", align 4
  %2 = tail call %"class.views::LayoutProvider"* @_ZN5views14LayoutProvider3GetEv() #7
  %3 = bitcast %"class.gfx::Size"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7
  %4 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  store i32 0, i32* %5, align 4
  %6 = bitcast %"class.views::LayoutProvider"* %2 to i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)***
  %7 = load i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)**, i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)*, i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)** %7, i64 6
  %9 = load i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)*, i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)** %8, align 8
  %10 = call i32 %9(%"class.views::LayoutProvider"* %2, i32 3, %"class.gfx::Size"* nonnull dereferenceable(8) %1) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7
  %11 = icmp sgt i32 %10, 0
  %12 = sub nuw nsw i32 2147483647, %10
  %13 = icmp ult i32 %12, %10
  %14 = and i1 %11, %13
  br i1 %14, label %21, label %15

15:                                               ; preds = %0
  %16 = icmp slt i32 %10, 0
  %17 = sub nsw i32 -2147483648, %10
  %18 = icmp sgt i32 %17, %10
  %19 = and i1 %16, %18
  %20 = select i1 %19, i32 %17, i32 %10
  br label %21

21:                                               ; preds = %0, %15
  %22 = phi i32 [ %20, %15 ], [ %12, %0 ]
  %23 = zext i32 %10 to i64
  %24 = shl nuw i64 %23, 32
  %25 = insertvalue { i64, i64 } undef, i64 %24, 0
  %26 = zext i32 %22 to i64
  %27 = shl nuw i64 %26, 32
  %28 = insertvalue { i64, i64 } %25, i64 %27, 1
  ret { i64, i64 } %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8TabStyle16GetSeparatorSizeEv() local_unnamed_addr #3 align 2 {
  %1 = tail call %"class.ui::TouchUiController"* @_ZN2ui17TouchUiController3GetEv() #7
  %2 = getelementptr inbounds %"class.ui::TouchUiController", %"class.ui::TouchUiController"* %1, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %9 [
    i32 2, label %8
    i32 1, label %4
  ]

4:                                                ; preds = %0
  %5 = getelementptr inbounds %"class.ui::TouchUiController", %"class.ui::TouchUiController"* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %4, %0
  br label %9

9:                                                ; preds = %0, %4, %8
  %10 = phi i64 [ 103079215105, %8 ], [ 85899345921, %4 ], [ 85899345921, %0 ]
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8TabStyle19GetPreviewImageSizeEv() local_unnamed_addr #3 align 2 {
  %1 = alloca %"class.gfx::Size", align 4
  %2 = tail call %"class.views::LayoutProvider"* @_ZN5views14LayoutProvider3GetEv() #7
  %3 = bitcast %"class.gfx::Size"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7
  %4 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  store i32 0, i32* %5, align 4
  %6 = bitcast %"class.views::LayoutProvider"* %2 to i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)***
  %7 = load i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)**, i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)*, i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)** %7, i64 6
  %9 = load i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)*, i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)** %8, align 8
  %10 = call i32 %9(%"class.views::LayoutProvider"* %2, i32 3, %"class.gfx::Size"* nonnull dereferenceable(8) %1) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7
  %11 = shl nsw i32 %10, 1
  %12 = or i32 %11, 1
  %13 = add nsw i32 %12, 239
  %14 = sitofp i32 %13 to float
  %15 = fdiv float %14, 0x3FFC71C720000000
  %16 = fptosi float %15 to i32
  %17 = icmp sgt i32 %13, 0
  %18 = select i1 %17, i32 %13, i32 0
  %19 = icmp sgt i32 %16, 0
  %20 = select i1 %19, i32 %16, i32 0
  %21 = zext i32 %20 to i64
  %22 = shl nuw nsw i64 %21, 32
  %23 = zext i32 %18 to i64
  %24 = or i64 %22, %23
  ret i64 %24
}

declare %"class.views::LayoutProvider"* @_ZN5views14LayoutProvider3GetEv() local_unnamed_addr #5

declare void @__cxa_pure_virtual() unnamed_addr

declare %"class.ui::TouchUiController"* @_ZN2ui17TouchUiController3GetEv() local_unnamed_addr #5

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
