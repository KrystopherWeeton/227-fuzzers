; ModuleID = '../../native_client/src/trusted/desc/nacl_desc_dir.c'
source_filename = "../../native_client/src/trusted/desc/nacl_desc_dir.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NaClDescVtbl = type { %struct.NaClRefCountVtbl, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i64, i32)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i32 (%struct.NaClDesc*, %struct.nacl_abi_stat*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i32 (%struct.NaClDesc*, i64*, i64*)*, i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32, i32, i8*)*, i32 (%struct.NaClDesc*, i32*, i8*)*, void (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 }
%struct.NaClRefCountVtbl = type { void (%struct.NaClRefCount*)* }
%struct.NaClRefCount = type { %struct.NaClRefCountVtbl*, %struct.NaClFastMutex, i64 }
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.NaClDesc = type { %struct.NaClRefCount, i32, i32, i32, i8* }
%struct.NaClDescEffector = type opaque
%struct.nacl_abi_stat = type { i64, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i64, i64, i64, i64, i64 }
%struct.NaClDescXferState = type { i8*, i8*, i32*, i32* }
%struct.nacl_abi_timespec = type { i64, i32 }
%struct.NaClImcTypedMsgHdr = type opaque
%struct.NaClMessageHeader = type { %struct.NaClIOVec*, i32, i32*, i32, i32 }
%struct.NaClIOVec = type { i8*, i64 }
%struct.NaClDescDirDesc = type { %struct.NaClDesc, %struct.NaClHostDir* }
%struct.NaClHostDir = type { %struct.NaClMutex, i32, i64, i64, [4096 x i8] }
%struct.NaClMutex = type { %union.pthread_mutex_t, i32 }

@kNaClDescDirDescVtbl = internal constant %struct.NaClDescVtbl { %struct.NaClRefCountVtbl { void (%struct.NaClRefCount*)* @NaClDescDirDescDtor }, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)* @NaClDescMapNotImplemented, i64 (%struct.NaClDesc*, i8*, i64)* @NaClDescDirDescRead, i64 (%struct.NaClDesc*, i8*, i64)* @NaClDescWriteNotImplemented, i64 (%struct.NaClDesc*, i64, i32)* @NaClDescDirDescSeek, i64 (%struct.NaClDesc*, i8*, i64, i64)* @NaClDescPReadNotImplemented, i64 (%struct.NaClDesc*, i8*, i64, i64)* @NaClDescPWriteNotImplemented, i32 (%struct.NaClDesc*, %struct.nacl_abi_stat*)* @NaClDescDirDescFstat, i32 (%struct.NaClDesc*)* @NaClDescDirDescFchdir, i32 (%struct.NaClDesc*, i32)* @NaClDescDirDescFchmod, i32 (%struct.NaClDesc*)* @NaClDescDirDescFsync, i32 (%struct.NaClDesc*)* @NaClDescDirDescFdatasync, i32 (%struct.NaClDesc*, i64)* @NaClDescFtruncateNotImplemented, i64 (%struct.NaClDesc*, i8*, i64)* @NaClDescDirDescGetdents, i32 (%struct.NaClDesc*, i64*, i64*)* @NaClDescExternalizeSizeNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)* @NaClDescExternalizeNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescLockNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescTryLockNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescUnlockNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc*)* @NaClDescWaitNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*)* @NaClDescTimedWaitAbsNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescSignalNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescBroadcastNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)* @NaClDescSendMsgNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)* @NaClDescRecvMsgNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)* @NaClDescLowLevelSendMsgNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)* @NaClDescLowLevelRecvMsgNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc**)* @NaClDescConnectAddrNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc**)* @NaClDescAcceptConnNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescPostNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescSemWaitNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescGetValueNotImplemented, i32 (%struct.NaClDesc*, i32, i32, i8*)* @NaClDescSetMetadata, i32 (%struct.NaClDesc*, i32*, i8*)* @NaClDescGetMetadata, void (%struct.NaClDesc*, i32)* @NaClDescSetFlags, i32 (%struct.NaClDesc*)* @NaClDescGetFlags, i32 (%struct.NaClDesc*)* @NaClDescIsattyNotImplemented, i32 1 }, align 8
@.str = private unnamed_addr constant [44 x i8] c"NaClDescDirDescMake: no memory for 0x%08lx\0A\00", align 1
@.str.1 = private unnamed_addr constant [66 x i8] c"NaClDescDirDescMake: NaClDescDirDescCtor(0x%08lx,0x%08lx) failed\0A\00", align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"NaClDescDirDescOpen: no memory for %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [52 x i8] c"NaClDescDirDescOpen: NaClHostDirOpen failed for %s\0A\00", align 1
@kNaClDescVtbl = external constant %struct.NaClDescVtbl, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClDescDirDescCtor(%struct.NaClDescDirDesc*, %struct.NaClHostDir*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.NaClDescDirDesc, %struct.NaClDescDirDesc* %0, i64 0, i32 0
  %4 = getelementptr inbounds %struct.NaClDescDirDesc, %struct.NaClDescDirDesc* %0, i64 0, i32 0, i32 0, i32 0
  store %struct.NaClRefCountVtbl* null, %struct.NaClRefCountVtbl** %4, align 8
  %5 = tail call i32 @NaClDescCtor(%struct.NaClDesc* %3) #5
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.NaClDescDirDesc, %struct.NaClDescDirDesc* %0, i64 0, i32 1
  store %struct.NaClHostDir* %1, %struct.NaClHostDir** %8, align 8
  store %struct.NaClRefCountVtbl* getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescDirDescVtbl, i64 0, i32 0), %struct.NaClRefCountVtbl** %4, align 8
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi i32 [ 1, %7 ], [ 0, %2 ]
  ret i32 %10
}

declare i32 @NaClDescCtor(%struct.NaClDesc*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.NaClDescDirDesc* @NaClDescDirDescMake(%struct.NaClHostDir*) local_unnamed_addr #0 {
  %2 = tail call noalias i8* @malloc(i64 88) #5
  %3 = bitcast i8* %2 to %struct.NaClDescDirDesc*
  %4 = icmp eq i8* %2, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = ptrtoint %struct.NaClHostDir* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i64 %6) #5
  br label %7

7:                                                ; preds = %5, %1
  %8 = bitcast i8* %2 to %struct.NaClDesc*
  %9 = bitcast i8* %2 to %struct.NaClRefCountVtbl**
  store %struct.NaClRefCountVtbl* null, %struct.NaClRefCountVtbl** %9, align 8
  %10 = tail call i32 @NaClDescCtor(%struct.NaClDesc* %8) #5
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds i8, i8* %2, i64 80
  %14 = bitcast i8* %13 to %struct.NaClHostDir**
  store %struct.NaClHostDir* %0, %struct.NaClHostDir** %14, align 8
  store %struct.NaClRefCountVtbl* getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescDirDescVtbl, i64 0, i32 0), %struct.NaClRefCountVtbl** %9, align 8
  br label %18

15:                                               ; preds = %7
  %16 = ptrtoint i8* %2 to i64
  %17 = ptrtoint %struct.NaClHostDir* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i64 %16, i64 %17) #5
  br label %18

18:                                               ; preds = %12, %15
  ret %struct.NaClDescDirDesc* %3
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.NaClDescDirDesc* @NaClDescDirDescOpen(i8*) local_unnamed_addr #0 {
  %2 = tail call noalias i8* @malloc(i64 4168) #5
  %3 = bitcast i8* %2 to %struct.NaClHostDir*
  %4 = icmp eq i8* %2, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0), i8* %0) #5
  br label %6

6:                                                ; preds = %5, %1
  %7 = tail call i32 @NaClHostDirOpen(%struct.NaClHostDir* %3, i8* %0) #5
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.3, i64 0, i64 0), i8* %0) #5
  br label %10

10:                                               ; preds = %6, %9
  %11 = tail call noalias i8* @malloc(i64 88) #5
  %12 = bitcast i8* %11 to %struct.NaClDescDirDesc*
  %13 = icmp eq i8* %11, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  %15 = ptrtoint i8* %2 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i64 %15) #5
  br label %16

16:                                               ; preds = %14, %10
  %17 = bitcast i8* %11 to %struct.NaClDesc*
  %18 = bitcast i8* %11 to %struct.NaClRefCountVtbl**
  store %struct.NaClRefCountVtbl* null, %struct.NaClRefCountVtbl** %18, align 8
  %19 = tail call i32 @NaClDescCtor(%struct.NaClDesc* %17) #5
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds i8, i8* %11, i64 80
  %23 = bitcast i8* %22 to i8**
  store i8* %2, i8** %23, align 8
  store %struct.NaClRefCountVtbl* getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescDirDescVtbl, i64 0, i32 0), %struct.NaClRefCountVtbl** %18, align 8
  br label %27

24:                                               ; preds = %16
  %25 = ptrtoint i8* %11 to i64
  %26 = ptrtoint i8* %2 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i64 %25, i64 %26) #5
  br label %27

27:                                               ; preds = %21, %24
  ret %struct.NaClDescDirDesc* %12
}

declare i32 @NaClHostDirOpen(%struct.NaClHostDir*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @NaClDescDirDescDtor(%struct.NaClRefCount*) #0 {
  %2 = getelementptr inbounds %struct.NaClRefCount, %struct.NaClRefCount* %0, i64 1, i32 1, i32 0, i32 0, i32 4
  %3 = bitcast i32* %2 to %struct.NaClHostDir**
  %4 = load %struct.NaClHostDir*, %struct.NaClHostDir** %3, align 8
  %5 = tail call i32 @NaClHostDirClose(%struct.NaClHostDir* %4) #5
  %6 = bitcast i32* %2 to i8**
  %7 = load i8*, i8** %6, align 8
  tail call void @free(i8* %7) #5
  store %struct.NaClHostDir* null, %struct.NaClHostDir** %3, align 8
  %8 = getelementptr inbounds %struct.NaClRefCount, %struct.NaClRefCount* %0, i64 0, i32 0
  store %struct.NaClRefCountVtbl* getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescVtbl, i64 0, i32 0), %struct.NaClRefCountVtbl** %8, align 8
  %9 = load void (%struct.NaClRefCount*)*, void (%struct.NaClRefCount*)** getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescVtbl, i64 0, i32 0, i32 0), align 8
  tail call void %9(%struct.NaClRefCount* %0) #5
  ret void
}

declare i64 @NaClDescMapNotImplemented(%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64) #1

; Function Attrs: nounwind ssp uwtable
define internal i64 @NaClDescDirDescRead(%struct.NaClDesc* nocapture readonly, i8*, i64) #0 {
  %4 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1
  %5 = bitcast %struct.NaClDesc* %4 to %struct.NaClHostDir**
  %6 = load %struct.NaClHostDir*, %struct.NaClHostDir** %5, align 8
  %7 = tail call i64 @NaClHostDirGetdents(%struct.NaClHostDir* %6, i8* %1, i64 %2) #5
  ret i64 %7
}

declare i64 @NaClDescWriteNotImplemented(%struct.NaClDesc*, i8*, i64) #1

; Function Attrs: nounwind ssp uwtable
define internal i64 @NaClDescDirDescSeek(%struct.NaClDesc* nocapture readonly, i64, i32) #0 {
  %4 = icmp eq i64 %1, 0
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1
  %9 = bitcast %struct.NaClDesc* %8 to %struct.NaClHostDir**
  %10 = load %struct.NaClHostDir*, %struct.NaClHostDir** %9, align 8
  %11 = tail call i32 @NaClHostDirRewind(%struct.NaClHostDir* %10) #5
  br label %12

12:                                               ; preds = %3, %7
  %13 = phi i64 [ 0, %7 ], [ -22, %3 ]
  ret i64 %13
}

declare i64 @NaClDescPReadNotImplemented(%struct.NaClDesc*, i8*, i64, i64) #1

declare i64 @NaClDescPWriteNotImplemented(%struct.NaClDesc*, i8*, i64, i64) #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @NaClDescDirDescFstat(%struct.NaClDesc* nocapture readnone, %struct.nacl_abi_stat* nocapture) #0 {
  %3 = bitcast %struct.nacl_abi_stat* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 104, i1 false)
  %4 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %1, i64 0, i32 2
  store i32 16704, i32* %4, align 8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @NaClDescDirDescFchdir(%struct.NaClDesc* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1
  %3 = bitcast %struct.NaClDesc* %2 to %struct.NaClHostDir**
  %4 = load %struct.NaClHostDir*, %struct.NaClHostDir** %3, align 8
  %5 = tail call i32 @NaClHostDirFchdir(%struct.NaClHostDir* %4) #5
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @NaClDescDirDescFchmod(%struct.NaClDesc* nocapture readonly, i32) #0 {
  %3 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1
  %4 = bitcast %struct.NaClDesc* %3 to %struct.NaClHostDir**
  %5 = load %struct.NaClHostDir*, %struct.NaClHostDir** %4, align 8
  %6 = tail call i32 @NaClHostDirFchmod(%struct.NaClHostDir* %5, i32 %1) #5
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @NaClDescDirDescFsync(%struct.NaClDesc* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1
  %3 = bitcast %struct.NaClDesc* %2 to %struct.NaClHostDir**
  %4 = load %struct.NaClHostDir*, %struct.NaClHostDir** %3, align 8
  %5 = tail call i32 @NaClHostDirFsync(%struct.NaClHostDir* %4) #5
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @NaClDescDirDescFdatasync(%struct.NaClDesc* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1
  %3 = bitcast %struct.NaClDesc* %2 to %struct.NaClHostDir**
  %4 = load %struct.NaClHostDir*, %struct.NaClHostDir** %3, align 8
  %5 = tail call i32 @NaClHostDirFdatasync(%struct.NaClHostDir* %4) #5
  ret i32 %5
}

declare i32 @NaClDescFtruncateNotImplemented(%struct.NaClDesc*, i64) #1

; Function Attrs: nounwind ssp uwtable
define internal i64 @NaClDescDirDescGetdents(%struct.NaClDesc* nocapture readonly, i8*, i64) #0 {
  %4 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1
  %5 = bitcast %struct.NaClDesc* %4 to %struct.NaClHostDir**
  %6 = load %struct.NaClHostDir*, %struct.NaClHostDir** %5, align 8
  %7 = tail call i64 @NaClHostDirGetdents(%struct.NaClHostDir* %6, i8* %1, i64 %2) #5
  ret i64 %7
}

declare i32 @NaClDescExternalizeSizeNotImplemented(%struct.NaClDesc*, i64*, i64*) #1

declare i32 @NaClDescExternalizeNotImplemented(%struct.NaClDesc*, %struct.NaClDescXferState*) #1

declare i32 @NaClDescLockNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescTryLockNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescUnlockNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescWaitNotImplemented(%struct.NaClDesc*, %struct.NaClDesc*) #1

declare i32 @NaClDescTimedWaitAbsNotImplemented(%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*) #1

declare i32 @NaClDescSignalNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescBroadcastNotImplemented(%struct.NaClDesc*) #1

declare i64 @NaClDescSendMsgNotImplemented(%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32) #1

declare i64 @NaClDescRecvMsgNotImplemented(%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32) #1

declare i64 @NaClDescLowLevelSendMsgNotImplemented(%struct.NaClDesc*, %struct.NaClMessageHeader*, i32) #1

declare i64 @NaClDescLowLevelRecvMsgNotImplemented(%struct.NaClDesc*, %struct.NaClMessageHeader*, i32) #1

declare i32 @NaClDescConnectAddrNotImplemented(%struct.NaClDesc*, %struct.NaClDesc**) #1

declare i32 @NaClDescAcceptConnNotImplemented(%struct.NaClDesc*, %struct.NaClDesc**) #1

declare i32 @NaClDescPostNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescSemWaitNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescGetValueNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescSetMetadata(%struct.NaClDesc*, i32, i32, i8*) #1

declare i32 @NaClDescGetMetadata(%struct.NaClDesc*, i32*, i8*) #1

declare void @NaClDescSetFlags(%struct.NaClDesc*, i32) #1

declare i32 @NaClDescGetFlags(%struct.NaClDesc*) #1

declare i32 @NaClDescIsattyNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClHostDirClose(%struct.NaClHostDir*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare i32 @NaClHostDirRewind(%struct.NaClHostDir*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare i32 @NaClHostDirFchdir(%struct.NaClHostDir*) local_unnamed_addr #1

declare i32 @NaClHostDirFchmod(%struct.NaClHostDir*, i32) local_unnamed_addr #1

declare i32 @NaClHostDirFsync(%struct.NaClHostDir*) local_unnamed_addr #1

declare i32 @NaClHostDirFdatasync(%struct.NaClHostDir*) local_unnamed_addr #1

declare i64 @NaClHostDirGetdents(%struct.NaClHostDir*, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
