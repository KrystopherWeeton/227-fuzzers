; ModuleID = '../../third_party/webrtc/modules/audio_processing/aec3/reverb_decay_estimator.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aec3/reverb_decay_estimator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::ReverbDecayEstimator" = type <{ i32, i32, i8, [3 x i8], %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", i32, i32, i32, i32, i8, [7 x i8], %"class.std::__1::vector", float, float, float, [4 x i8] }>
%"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor" = type { float, float, float, i32, i32 }
%"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator" = type <{ %"class.std::__1::vector", %"class.std::__1::vector", i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }
%"struct.webrtc::EchoCanceller3Config" = type { %"struct.webrtc::EchoCanceller3Config::Buffering", %"struct.webrtc::EchoCanceller3Config::Delay", %"struct.webrtc::EchoCanceller3Config::Filter", %"struct.webrtc::EchoCanceller3Config::Erle", %"struct.webrtc::EchoCanceller3Config::EpStrength", %"struct.webrtc::EchoCanceller3Config::EchoAudibility", %"struct.webrtc::EchoCanceller3Config::RenderLevels", %"struct.webrtc::EchoCanceller3Config::EchoRemovalControl", [6 x i8], %"struct.webrtc::EchoCanceller3Config::EchoModel", %"struct.webrtc::EchoCanceller3Config::ComfortNoise", [4 x i8], %"struct.webrtc::EchoCanceller3Config::Suppressor" }
%"struct.webrtc::EchoCanceller3Config::Buffering" = type { i64, i64 }
%"struct.webrtc::EchoCanceller3Config::Delay" = type { i64, i64, i64, i64, i64, i64, float, float, float, %"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds", i8, i8, %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing", %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing" }
%"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds" = type { i32, i32 }
%"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing" = type { i8, i8, float, i8 }
%"struct.webrtc::EchoCanceller3Config::Filter" = type <{ %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", i64, float, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration" = type { i64, float, float, float, float, float }
%"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration" = type { i64, float, float }
%"struct.webrtc::EchoCanceller3Config::Erle" = type <{ float, float, float, i8, [3 x i8], i64, i8, i8, [6 x i8] }>
%"struct.webrtc::EchoCanceller3Config::EpStrength" = type <{ float, float, i8, i8, i8, i8 }>
%"struct.webrtc::EchoCanceller3Config::EchoAudibility" = type <{ float, float, float, float, float, float, i8, i8, [2 x i8] }>
%"struct.webrtc::EchoCanceller3Config::RenderLevels" = type { float, float, float, float }
%"struct.webrtc::EchoCanceller3Config::EchoRemovalControl" = type { i8, i8 }
%"struct.webrtc::EchoCanceller3Config::EchoModel" = type <{ i64, float, float, float, float, i64, i64, i8, [7 x i8] }>
%"struct.webrtc::EchoCanceller3Config::ComfortNoise" = type { float }
%"struct.webrtc::EchoCanceller3Config::Suppressor" = type <{ i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection", i8, [3 x i8], %"struct.webrtc::EchoCanceller3Config::Suppressor::HighBandsSuppression", float, i8, [7 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning" = type { %"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds", %"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds" = type { float, float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection" = type <{ float, float, float, i32, i32, i8, [3 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection" = type { i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion" = type { i64, i64 }
%"struct.webrtc::EchoCanceller3Config::Suppressor::HighBandsSuppression" = type { float, float, float, float }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { float }
%"struct.std::__1::array" = type { [64 x float] }
%"class.webrtc::ApmDataDumper" = type { i8 }

@_ZN6webrtc20ReverbDecayEstimatorC1ERKNS_20EchoCanceller3ConfigE = hidden unnamed_addr alias void (%"class.webrtc::ReverbDecayEstimator"*, %"struct.webrtc::EchoCanceller3Config"*), void (%"class.webrtc::ReverbDecayEstimator"*, %"struct.webrtc::EchoCanceller3Config"*)* @_ZN6webrtc20ReverbDecayEstimatorC2ERKNS_20EchoCanceller3ConfigE
@_ZN6webrtc20ReverbDecayEstimatorD1Ev = hidden unnamed_addr alias void (%"class.webrtc::ReverbDecayEstimator"*), void (%"class.webrtc::ReverbDecayEstimator"*)* @_ZN6webrtc20ReverbDecayEstimatorD2Ev
@_ZN6webrtc20ReverbDecayEstimator26EarlyReverbLengthEstimatorC1Ei = hidden unnamed_addr alias void (%"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"*, i32), void (%"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"*, i32)* @_ZN6webrtc20ReverbDecayEstimator26EarlyReverbLengthEstimatorC2Ei
@_ZN6webrtc20ReverbDecayEstimator26EarlyReverbLengthEstimatorD1Ev = hidden unnamed_addr alias void (%"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"*), void (%"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"*)* @_ZN6webrtc20ReverbDecayEstimator26EarlyReverbLengthEstimatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20ReverbDecayEstimatorC2ERKNS_20EchoCanceller3ConfigE(%"class.webrtc::ReverbDecayEstimator"*, %"struct.webrtc::EchoCanceller3Config"* nocapture readonly dereferenceable(560)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %1, i64 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i32
  store i32 %6, i32* %3, align 8
  %7 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 1
  %8 = shl i32 %6, 6
  store i32 %8, i32* %7, align 4
  %9 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %1, i64 0, i32 4, i32 1
  %11 = load float, float* %10, align 4
  %12 = fcmp olt float %11, 0.000000e+00
  %13 = zext i1 %12 to i8
  store i8 %13, i8* %9, align 8
  %14 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4
  %15 = bitcast %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 20, i1 false) #11
  %16 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 5
  %17 = load i64, i64* %4, align 8
  %18 = trunc i64 %17 to i32
  %19 = add i32 %18, -3
  tail call void @_ZN6webrtc20ReverbDecayEstimator26EarlyReverbLengthEstimatorC2Ei(%"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %16, i32 %19)
  %20 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 6
  store i32 3, i32* %20, align 8
  %21 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 7
  store i32 3, i32* %21, align 4
  %22 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 8
  %23 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 12
  %24 = bitcast i32* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 9, i1 false)
  %25 = load i64, i64* %4, align 8
  %26 = bitcast %"class.std::__1::vector"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #11
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %42, label %28

28:                                               ; preds = %2
  %29 = icmp ugt i64 %25, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::vector"* %23 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #12
  unreachable

32:                                               ; preds = %28
  %33 = shl i64 %25, 2
  %34 = tail call i8* @_Znwm(i64 %33) #13
  %35 = bitcast i8* %34 to float*
  %36 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 12, i32 0, i32 1
  %37 = bitcast %"class.std::__1::vector"* %23 to i8**
  store i8* %34, i8** %37, align 8
  %38 = getelementptr inbounds float, float* %35, i64 %25
  %39 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  store float* %38, float** %39, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %34, i8 0, i64 %33, i1 false)
  %40 = bitcast float** %36 to i64*
  %41 = ptrtoint float* %38 to i64
  store i64 %41, i64* %40, align 8
  br label %42

42:                                               ; preds = %2, %32
  %43 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 13
  %44 = load float, float* %10, align 4
  %45 = tail call float @llvm.fabs.f32(float %44) #11
  store float %45, float* %43, align 8
  %46 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 14
  store float 0.000000e+00, float* %46, align 4
  %47 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 15
  store float 0.000000e+00, float* %47, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20ReverbDecayEstimatorD2Ev(%"class.webrtc::ReverbDecayEstimator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load float*, float** %2, align 8
  %4 = icmp eq float* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint float* %3 to i64
  %7 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 12, i32 0, i32 1
  %8 = bitcast float** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  %12 = load float*, float** %11, align 8
  %13 = icmp eq float* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint float* %12 to i64
  %16 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 5, i32 1, i32 0, i32 1
  %17 = bitcast float** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast float* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %14, %10
  %20 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %21 = load float*, float** %20, align 8
  %22 = icmp eq float* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint float* %21 to i64
  %25 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %26 = bitcast float** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast float* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #13
  br label %28

28:                                               ; preds = %19, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20ReverbDecayEstimator6UpdateEN3rtc9ArrayViewIKfLln4711EEERKN4absl8optionalIfEEibb(%"class.webrtc::ReverbDecayEstimator"* nocapture, float*, i64, %"class.absl::optional"* nocapture readonly dereferenceable(8), i32, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %8 = trunc i64 %2 to i32
  br i1 %6, label %75, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, -4
  %13 = icmp slt i32 %12, %4
  br i1 %13, label %21, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, %8
  %18 = icmp sgt i32 %4, 0
  %19 = and i1 %18, %17
  %20 = and i1 %19, %5
  br i1 %20, label %48, label %21

21:                                               ; preds = %9, %14
  %22 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 5, i32 2
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  %24 = load float*, float** %23, align 8
  %25 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 5, i32 1, i32 0, i32 1
  %26 = bitcast float** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = ptrtoint float* %24 to i64
  %29 = sub i64 %27, %28
  %30 = icmp sgt i64 %29, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %21
  %32 = bitcast float* %24 to i8*
  %33 = and i64 %29, -4
  %34 = icmp ult i64 %29, 4
  %35 = sext i1 %34 to i64
  %36 = shl nsw i64 %35, 2
  %37 = sub i64 %33, %36
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %32, i8 0, i64 %37, i1 false) #11
  br label %38

38:                                               ; preds = %21, %31
  %39 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 5, i32 3
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 0
  store float 0.000000e+00, float* %40, align 4
  %41 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 1
  store float -0.000000e+00, float* %41, align 4
  %42 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 2
  store float 0.000000e+00, float* %42, align 4
  %43 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 3
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 4
  store i32 0, i32* %44, align 4
  %45 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 15
  store float 0.000000e+00, float* %45, align 8
  %46 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 6
  %47 = bitcast i32* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 17, i1 false) #11
  br label %75

48:                                               ; preds = %14
  %49 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 2
  %50 = load i8, i8* %49, align 8, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %75, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8, i8* %53, align 4, !range !2
  %55 = icmp eq i8 %54, 0
  %56 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %57 = load float, float* %56, align 4
  %58 = fmul float %57, 0x3FC99999A0000000
  %59 = select i1 %55, float 0.000000e+00, float %58
  %60 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 15
  %61 = load float, float* %60, align 4
  %62 = fcmp olt float %59, %61
  %63 = select i1 %62, float %61, float %59
  store float %63, float* %60, align 8
  %64 = fcmp oeq float %63, 0.000000e+00
  br i1 %64, label %75, label %65

65:                                               ; preds = %52
  %66 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 8
  %67 = load i32, i32* %66, align 8
  %68 = icmp slt i32 %67, %11
  %69 = icmp eq i64 %2, 0
  %70 = select i1 %69, float* null, float* %1
  br i1 %68, label %71, label %74

71:                                               ; preds = %65
  tail call void @_ZN6webrtc20ReverbDecayEstimator13AnalyzeFilterEN3rtc9ArrayViewIKfLln4711EEE(%"class.webrtc::ReverbDecayEstimator"* %0, float* %70, i64 %2)
  %72 = load i32, i32* %66, align 8
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %66, align 8
  br label %75

74:                                               ; preds = %65
  tail call void @_ZN6webrtc20ReverbDecayEstimator13EstimateDecayEN3rtc9ArrayViewIKfLln4711EEEi(%"class.webrtc::ReverbDecayEstimator"* %0, float* %70, i64 %2, i32 %4)
  br label %75

75:                                               ; preds = %52, %74, %71, %38, %48, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20ReverbDecayEstimator20ResetDecayEstimationEv(%"class.webrtc::ReverbDecayEstimator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 5, i32 2
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 5, i32 1, i32 0, i32 1
  %6 = bitcast float** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint float* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %18

11:                                               ; preds = %1
  %12 = bitcast float* %4 to i8*
  %13 = and i64 %9, -4
  %14 = icmp ult i64 %9, 4
  %15 = sext i1 %14 to i64
  %16 = shl nsw i64 %15, 2
  %17 = sub i64 %13, %16
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 %17, i1 false) #11
  br label %18

18:                                               ; preds = %1, %11
  %19 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 5, i32 3
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 0
  store float 0.000000e+00, float* %20, align 4
  %21 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 1
  store float -0.000000e+00, float* %21, align 4
  %22 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 2
  store float 0.000000e+00, float* %22, align 4
  %23 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 3
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 4
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 15
  store float 0.000000e+00, float* %25, align 8
  %26 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 6
  %27 = bitcast i32* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 17, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20ReverbDecayEstimator13AnalyzeFilterEN3rtc9ArrayViewIKfLln4711EEE(%"class.webrtc::ReverbDecayEstimator"* nocapture, float*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::array", align 16
  %5 = bitcast %"struct.std::__1::array"* %4 to i8*
  %6 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 8
  %8 = sext i32 %7 to i64
  %9 = shl nsw i64 %8, 6
  %10 = getelementptr inbounds float, float* %1, i64 %9
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -1, i64 256, i1 false)
  %11 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 0
  %12 = add nsw i64 %9, 64
  %13 = getelementptr float, float* %1, i64 %12
  %14 = bitcast float* %13 to %"struct.std::__1::array"*
  %15 = icmp ult %"struct.std::__1::array"* %4, %14
  %16 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 1, i32 0, i64 0
  %17 = icmp ult float* %10, %16
  %18 = and i1 %15, %17
  br i1 %18, label %114, label %19

19:                                               ; preds = %3
  %20 = bitcast float* %10 to <4 x float>*
  %21 = load <4 x float>, <4 x float>* %20, align 4, !alias.scope !3
  %22 = fmul <4 x float> %21, %21
  %23 = bitcast %"struct.std::__1::array"* %4 to <4 x float>*
  store <4 x float> %22, <4 x float>* %23, align 16, !alias.scope !6, !noalias !3
  %24 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 4
  %25 = getelementptr inbounds float, float* %10, i64 4
  %26 = bitcast float* %25 to <4 x float>*
  %27 = load <4 x float>, <4 x float>* %26, align 4, !alias.scope !3
  %28 = fmul <4 x float> %27, %27
  %29 = bitcast float* %24 to <4 x float>*
  store <4 x float> %28, <4 x float>* %29, align 16, !alias.scope !6, !noalias !3
  %30 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 8
  %31 = getelementptr inbounds float, float* %10, i64 8
  %32 = bitcast float* %31 to <4 x float>*
  %33 = load <4 x float>, <4 x float>* %32, align 4, !alias.scope !3
  %34 = fmul <4 x float> %33, %33
  %35 = bitcast float* %30 to <4 x float>*
  store <4 x float> %34, <4 x float>* %35, align 16, !alias.scope !6, !noalias !3
  %36 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 12
  %37 = getelementptr inbounds float, float* %10, i64 12
  %38 = bitcast float* %37 to <4 x float>*
  %39 = load <4 x float>, <4 x float>* %38, align 4, !alias.scope !3
  %40 = fmul <4 x float> %39, %39
  %41 = bitcast float* %36 to <4 x float>*
  store <4 x float> %40, <4 x float>* %41, align 16, !alias.scope !6, !noalias !3
  %42 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 16
  %43 = getelementptr inbounds float, float* %10, i64 16
  %44 = bitcast float* %43 to <4 x float>*
  %45 = load <4 x float>, <4 x float>* %44, align 4, !alias.scope !3
  %46 = fmul <4 x float> %45, %45
  %47 = bitcast float* %42 to <4 x float>*
  store <4 x float> %46, <4 x float>* %47, align 16, !alias.scope !6, !noalias !3
  %48 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 20
  %49 = getelementptr inbounds float, float* %10, i64 20
  %50 = bitcast float* %49 to <4 x float>*
  %51 = load <4 x float>, <4 x float>* %50, align 4, !alias.scope !3
  %52 = fmul <4 x float> %51, %51
  %53 = bitcast float* %48 to <4 x float>*
  store <4 x float> %52, <4 x float>* %53, align 16, !alias.scope !6, !noalias !3
  %54 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 24
  %55 = getelementptr inbounds float, float* %10, i64 24
  %56 = bitcast float* %55 to <4 x float>*
  %57 = load <4 x float>, <4 x float>* %56, align 4, !alias.scope !3
  %58 = fmul <4 x float> %57, %57
  %59 = bitcast float* %54 to <4 x float>*
  store <4 x float> %58, <4 x float>* %59, align 16, !alias.scope !6, !noalias !3
  %60 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 28
  %61 = getelementptr inbounds float, float* %10, i64 28
  %62 = bitcast float* %61 to <4 x float>*
  %63 = load <4 x float>, <4 x float>* %62, align 4, !alias.scope !3
  %64 = fmul <4 x float> %63, %63
  %65 = bitcast float* %60 to <4 x float>*
  store <4 x float> %64, <4 x float>* %65, align 16, !alias.scope !6, !noalias !3
  %66 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 32
  %67 = getelementptr inbounds float, float* %10, i64 32
  %68 = bitcast float* %67 to <4 x float>*
  %69 = load <4 x float>, <4 x float>* %68, align 4, !alias.scope !3
  %70 = fmul <4 x float> %69, %69
  %71 = bitcast float* %66 to <4 x float>*
  store <4 x float> %70, <4 x float>* %71, align 16, !alias.scope !6, !noalias !3
  %72 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 36
  %73 = getelementptr inbounds float, float* %10, i64 36
  %74 = bitcast float* %73 to <4 x float>*
  %75 = load <4 x float>, <4 x float>* %74, align 4, !alias.scope !3
  %76 = fmul <4 x float> %75, %75
  %77 = bitcast float* %72 to <4 x float>*
  store <4 x float> %76, <4 x float>* %77, align 16, !alias.scope !6, !noalias !3
  %78 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 40
  %79 = getelementptr inbounds float, float* %10, i64 40
  %80 = bitcast float* %79 to <4 x float>*
  %81 = load <4 x float>, <4 x float>* %80, align 4, !alias.scope !3
  %82 = fmul <4 x float> %81, %81
  %83 = bitcast float* %78 to <4 x float>*
  store <4 x float> %82, <4 x float>* %83, align 16, !alias.scope !6, !noalias !3
  %84 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 44
  %85 = getelementptr inbounds float, float* %10, i64 44
  %86 = bitcast float* %85 to <4 x float>*
  %87 = load <4 x float>, <4 x float>* %86, align 4, !alias.scope !3
  %88 = fmul <4 x float> %87, %87
  %89 = bitcast float* %84 to <4 x float>*
  store <4 x float> %88, <4 x float>* %89, align 16, !alias.scope !6, !noalias !3
  %90 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 48
  %91 = getelementptr inbounds float, float* %10, i64 48
  %92 = bitcast float* %91 to <4 x float>*
  %93 = load <4 x float>, <4 x float>* %92, align 4, !alias.scope !3
  %94 = fmul <4 x float> %93, %93
  %95 = bitcast float* %90 to <4 x float>*
  store <4 x float> %94, <4 x float>* %95, align 16, !alias.scope !6, !noalias !3
  %96 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 52
  %97 = getelementptr inbounds float, float* %10, i64 52
  %98 = bitcast float* %97 to <4 x float>*
  %99 = load <4 x float>, <4 x float>* %98, align 4, !alias.scope !3
  %100 = fmul <4 x float> %99, %99
  %101 = bitcast float* %96 to <4 x float>*
  store <4 x float> %100, <4 x float>* %101, align 16, !alias.scope !6, !noalias !3
  %102 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 56
  %103 = getelementptr inbounds float, float* %10, i64 56
  %104 = bitcast float* %103 to <4 x float>*
  %105 = load <4 x float>, <4 x float>* %104, align 4, !alias.scope !3
  %106 = fmul <4 x float> %105, %105
  %107 = bitcast float* %102 to <4 x float>*
  store <4 x float> %106, <4 x float>* %107, align 16, !alias.scope !6, !noalias !3
  %108 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 60
  %109 = getelementptr inbounds float, float* %10, i64 60
  %110 = bitcast float* %109 to <4 x float>*
  %111 = load <4 x float>, <4 x float>* %110, align 4, !alias.scope !3
  %112 = fmul <4 x float> %111, %111
  %113 = bitcast float* %108 to <4 x float>*
  store <4 x float> %112, <4 x float>* %113, align 16, !alias.scope !6, !noalias !3
  br label %138

114:                                              ; preds = %3, %114
  %115 = phi float* [ %136, %114 ], [ %11, %3 ]
  %116 = phi i64 [ %135, %114 ], [ 0, %3 ]
  %117 = getelementptr inbounds float, float* %10, i64 %116
  %118 = load float, float* %117, align 4
  %119 = fmul float %118, %118
  store float %119, float* %115, align 4
  %120 = or i64 %116, 1
  %121 = getelementptr inbounds float, float* %115, i64 1
  %122 = getelementptr inbounds float, float* %10, i64 %120
  %123 = load float, float* %122, align 4
  %124 = fmul float %123, %123
  store float %124, float* %121, align 4
  %125 = or i64 %116, 2
  %126 = getelementptr inbounds float, float* %115, i64 2
  %127 = getelementptr inbounds float, float* %10, i64 %125
  %128 = load float, float* %127, align 4
  %129 = fmul float %128, %128
  store float %129, float* %126, align 4
  %130 = or i64 %116, 3
  %131 = getelementptr inbounds float, float* %115, i64 3
  %132 = getelementptr inbounds float, float* %10, i64 %130
  %133 = load float, float* %132, align 4
  %134 = fmul float %133, %133
  store float %134, float* %131, align 4
  %135 = add nuw nsw i64 %116, 4
  %136 = getelementptr inbounds float, float* %115, i64 4
  %137 = icmp eq i64 %135, 64
  br i1 %137, label %138, label %114, !llvm.loop !8

138:                                              ; preds = %114, %19
  %139 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 14
  %140 = load float, float* %139, align 4
  %141 = load i32, i32* %6, align 8
  %142 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 12, i32 0, i32 0
  %143 = load float*, float** %142, align 8
  br label %144

144:                                              ; preds = %144, %138
  %145 = phi float [ 0.000000e+00, %138 ], [ %177, %144 ]
  %146 = phi i64 [ 0, %138 ], [ %178, %144 ]
  %147 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %146
  %148 = load float, float* %147, align 16
  %149 = fadd float %145, %148
  %150 = or i64 %146, 1
  %151 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %150
  %152 = load float, float* %151, align 4
  %153 = fadd float %149, %152
  %154 = or i64 %146, 2
  %155 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %154
  %156 = load float, float* %155, align 8
  %157 = fadd float %153, %156
  %158 = or i64 %146, 3
  %159 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %158
  %160 = load float, float* %159, align 4
  %161 = fadd float %157, %160
  %162 = or i64 %146, 4
  %163 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %162
  %164 = load float, float* %163, align 16
  %165 = fadd float %161, %164
  %166 = or i64 %146, 5
  %167 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %166
  %168 = load float, float* %167, align 4
  %169 = fadd float %165, %168
  %170 = or i64 %146, 6
  %171 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %170
  %172 = load float, float* %171, align 8
  %173 = fadd float %169, %172
  %174 = or i64 %146, 7
  %175 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %174
  %176 = load float, float* %175, align 4
  %177 = fadd float %173, %176
  %178 = add nuw nsw i64 %146, 8
  %179 = icmp eq i64 %178, 64
  br i1 %179, label %180, label %144

180:                                              ; preds = %144
  %181 = sext i32 %141 to i64
  %182 = getelementptr inbounds float, float* %143, i64 %181
  %183 = fmul float %177, 1.562500e-02
  %184 = fcmp olt float %183, 0x3949F623E0000000
  %185 = select i1 %184, float 0x3949F623E0000000, float %183
  %186 = load float, float* %182, align 4
  %187 = fmul float %185, 0x3FF19999A0000000
  %188 = fcmp ule float %186, %187
  %189 = fmul float %185, 0x3FECCCCCC0000000
  %190 = fcmp uge float %186, %189
  %191 = and i1 %190, %188
  store float %185, float* %182, align 4
  %192 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 10
  %193 = load i8, i8* %192, align 8, !range !2
  %194 = icmp eq i8 %193, 0
  %195 = and i1 %191, %194
  br i1 %195, label %197, label %196

196:                                              ; preds = %180
  store i8 1, i8* %192, align 8
  br label %204

197:                                              ; preds = %180
  %198 = fcmp ule float %185, %140
  %199 = zext i1 %198 to i8
  store i8 %199, i8* %192, align 8
  br i1 %198, label %204, label %200

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 9
  %202 = load i32, i32* %201, align 4
  %203 = add nsw i32 %202, 1
  store i32 %203, i32* %201, align 4
  br label %204

204:                                              ; preds = %196, %200, %197
  %205 = load i32, i32* %6, align 8
  %206 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 7
  %207 = load i32, i32* %206, align 4
  %208 = icmp sgt i32 %205, %207
  br i1 %208, label %250, label %209

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 6
  %211 = load i32, i32* %210, align 8
  %212 = icmp slt i32 %205, %211
  %213 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 64
  br i1 %212, label %220, label %214

214:                                              ; preds = %209
  %215 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 2
  %216 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 0
  %217 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 4
  %218 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 5
  %219 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 15
  br label %223

220:                                              ; preds = %209
  %221 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 5
  %222 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 15
  br label %240

223:                                              ; preds = %214, %223
  %224 = phi float* [ %11, %214 ], [ %238, %223 ]
  %225 = load float, float* %224, align 4
  %226 = fpext float %225 to double
  %227 = fadd double %226, 1.000000e-10
  %228 = fptrunc double %227 to float
  %229 = call float @_ZN6webrtc15FastApproxLog2fEf(float %228) #11
  %230 = load float, float* %215, align 4
  %231 = fmul float %229, %230
  %232 = load float, float* %216, align 4
  %233 = fadd float %232, %231
  store float %233, float* %216, align 4
  %234 = fadd float %230, 1.000000e+00
  store float %234, float* %215, align 4
  %235 = load i32, i32* %217, align 4
  %236 = add nsw i32 %235, 1
  store i32 %236, i32* %217, align 4
  %237 = load float, float* %219, align 8
  call void @_ZN6webrtc20ReverbDecayEstimator26EarlyReverbLengthEstimator10AccumulateEff(%"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %218, float %229, float %237)
  %238 = getelementptr inbounds float, float* %224, i64 1
  %239 = icmp eq float* %238, %213
  br i1 %239, label %250, label %223

240:                                              ; preds = %220, %240
  %241 = phi float* [ %11, %220 ], [ %248, %240 ]
  %242 = load float, float* %241, align 4
  %243 = fpext float %242 to double
  %244 = fadd double %243, 1.000000e-10
  %245 = fptrunc double %244 to float
  %246 = call float @_ZN6webrtc15FastApproxLog2fEf(float %245) #11
  %247 = load float, float* %222, align 8
  call void @_ZN6webrtc20ReverbDecayEstimator26EarlyReverbLengthEstimator10AccumulateEff(%"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %221, float %246, float %247)
  %248 = getelementptr inbounds float, float* %241, i64 1
  %249 = icmp eq float* %248, %213
  br i1 %249, label %250, label %240

250:                                              ; preds = %223, %240, %204
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20ReverbDecayEstimator13EstimateDecayEN3rtc9ArrayViewIKfLln4711EEEi(%"class.webrtc::ReverbDecayEstimator"* nocapture, float*, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = add nsw i32 %3, 3
  %6 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, %5
  %9 = select i1 %8, i32 %7, i32 %5
  %10 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 8
  store i32 %9, i32* %10, align 8
  %11 = icmp eq i64 %2, 0
  %12 = select i1 %11, float* null, float* %1
  %13 = sext i32 %9 to i64
  %14 = shl nsw i64 %13, 6
  %15 = getelementptr inbounds float, float* %12, i64 %14
  %16 = add nsw i32 %9, 1
  %17 = sext i32 %16 to i64
  %18 = shl nsw i64 %17, 6
  %19 = getelementptr inbounds float, float* %12, i64 %18
  br label %20

20:                                               ; preds = %20, %4
  %21 = phi float [ 0.000000e+00, %4 ], [ %53, %20 ]
  %22 = phi float* [ %15, %4 ], [ %54, %20 ]
  %23 = load float, float* %22, align 4
  %24 = fmul float %23, %23
  %25 = fadd float %21, %24
  %26 = getelementptr inbounds float, float* %22, i64 1
  %27 = load float, float* %26, align 4
  %28 = fmul float %27, %27
  %29 = fadd float %25, %28
  %30 = getelementptr inbounds float, float* %22, i64 2
  %31 = load float, float* %30, align 4
  %32 = fmul float %31, %31
  %33 = fadd float %29, %32
  %34 = getelementptr inbounds float, float* %22, i64 3
  %35 = load float, float* %34, align 4
  %36 = fmul float %35, %35
  %37 = fadd float %33, %36
  %38 = getelementptr inbounds float, float* %22, i64 4
  %39 = load float, float* %38, align 4
  %40 = fmul float %39, %39
  %41 = fadd float %37, %40
  %42 = getelementptr inbounds float, float* %22, i64 5
  %43 = load float, float* %42, align 4
  %44 = fmul float %43, %43
  %45 = fadd float %41, %44
  %46 = getelementptr inbounds float, float* %22, i64 6
  %47 = load float, float* %46, align 4
  %48 = fmul float %47, %47
  %49 = fadd float %45, %48
  %50 = getelementptr inbounds float, float* %22, i64 7
  %51 = load float, float* %50, align 4
  %52 = fmul float %51, %51
  %53 = fadd float %49, %52
  %54 = getelementptr inbounds float, float* %22, i64 8
  %55 = icmp eq float* %54, %19
  br i1 %55, label %56, label %20

56:                                               ; preds = %20
  %57 = fmul float %53, 1.562500e-02
  %58 = lshr i64 %2, 6
  %59 = shl i64 %58, 32
  %60 = add i64 %59, -4294967296
  %61 = ashr exact i64 %60, 26
  %62 = getelementptr inbounds float, float* %12, i64 %61
  %63 = ashr exact i64 %59, 26
  %64 = getelementptr inbounds float, float* %12, i64 %63
  %65 = lshr exact i64 %60, 24
  %66 = sub nsw i64 28, %65
  %67 = lshr exact i64 %66, 2
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 7
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %81, label %71

71:                                               ; preds = %56, %71
  %72 = phi float [ %77, %71 ], [ 0.000000e+00, %56 ]
  %73 = phi float* [ %78, %71 ], [ %62, %56 ]
  %74 = phi i64 [ %79, %71 ], [ %69, %56 ]
  %75 = load float, float* %73, align 4
  %76 = fmul float %75, %75
  %77 = fadd float %72, %76
  %78 = getelementptr inbounds float, float* %73, i64 1
  %79 = add i64 %74, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %71, !llvm.loop !10

81:                                               ; preds = %56, %71
  %82 = phi float [ undef, %56 ], [ %77, %71 ]
  %83 = phi float [ 0.000000e+00, %56 ], [ %77, %71 ]
  %84 = phi float* [ %62, %56 ], [ %78, %71 ]
  br label %85

85:                                               ; preds = %85, %81
  %86 = phi float [ %83, %81 ], [ %118, %85 ]
  %87 = phi float* [ %84, %81 ], [ %119, %85 ]
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %88
  %90 = fadd float %86, %89
  %91 = getelementptr inbounds float, float* %87, i64 1
  %92 = load float, float* %91, align 4
  %93 = fmul float %92, %92
  %94 = fadd float %90, %93
  %95 = getelementptr inbounds float, float* %87, i64 2
  %96 = load float, float* %95, align 4
  %97 = fmul float %96, %96
  %98 = fadd float %94, %97
  %99 = getelementptr inbounds float, float* %87, i64 3
  %100 = load float, float* %99, align 4
  %101 = fmul float %100, %100
  %102 = fadd float %98, %101
  %103 = getelementptr inbounds float, float* %87, i64 4
  %104 = load float, float* %103, align 4
  %105 = fmul float %104, %104
  %106 = fadd float %102, %105
  %107 = getelementptr inbounds float, float* %87, i64 5
  %108 = load float, float* %107, align 4
  %109 = fmul float %108, %108
  %110 = fadd float %106, %109
  %111 = getelementptr inbounds float, float* %87, i64 6
  %112 = load float, float* %111, align 4
  %113 = fmul float %112, %112
  %114 = fadd float %110, %113
  %115 = getelementptr inbounds float, float* %87, i64 7
  %116 = load float, float* %115, align 4
  %117 = fmul float %116, %116
  %118 = fadd float %114, %117
  %119 = getelementptr inbounds float, float* %87, i64 8
  %120 = icmp eq float* %119, %64
  br i1 %120, label %121, label %85

121:                                              ; preds = %85
  %122 = fmul float %118, 1.562500e-02
  %123 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 14
  store float %122, float* %123, align 4
  %124 = sext i32 %3 to i64
  %125 = shl nsw i64 %124, 6
  %126 = getelementptr inbounds float, float* %12, i64 %125
  %127 = add nsw i32 %3, 1
  %128 = sext i32 %127 to i64
  %129 = shl nsw i64 %128, 6
  %130 = getelementptr inbounds float, float* %12, i64 %129
  %131 = getelementptr inbounds float, float* %126, i64 1
  %132 = icmp eq float* %131, %130
  br i1 %132, label %178, label %133

133:                                              ; preds = %121, %133
  %134 = phi float* [ %143, %133 ], [ %131, %121 ]
  %135 = phi float* [ %142, %133 ], [ %126, %121 ]
  %136 = phi i64 [ %144, %133 ], [ 3, %121 ]
  %137 = load float, float* %135, align 4
  %138 = load float, float* %134, align 4
  %139 = fmul float %137, %137
  %140 = fmul float %138, %138
  %141 = fcmp olt float %139, %140
  %142 = select i1 %141, float* %134, float* %135
  %143 = getelementptr inbounds float, float* %134, i64 1
  %144 = add i64 %136, -1
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %133, !llvm.loop !12

146:                                              ; preds = %133, %146
  %147 = phi float* [ %176, %146 ], [ %143, %133 ]
  %148 = phi float* [ %175, %146 ], [ %142, %133 ]
  %149 = load float, float* %148, align 4
  %150 = load float, float* %147, align 4
  %151 = fmul float %149, %149
  %152 = fmul float %150, %150
  %153 = fcmp olt float %151, %152
  %154 = select i1 %153, float* %147, float* %148
  %155 = getelementptr inbounds float, float* %147, i64 1
  %156 = load float, float* %154, align 4
  %157 = load float, float* %155, align 4
  %158 = fmul float %156, %156
  %159 = fmul float %157, %157
  %160 = fcmp olt float %158, %159
  %161 = select i1 %160, float* %155, float* %154
  %162 = getelementptr inbounds float, float* %147, i64 2
  %163 = load float, float* %161, align 4
  %164 = load float, float* %162, align 4
  %165 = fmul float %163, %163
  %166 = fmul float %164, %164
  %167 = fcmp olt float %165, %166
  %168 = select i1 %167, float* %162, float* %161
  %169 = getelementptr inbounds float, float* %147, i64 3
  %170 = load float, float* %168, align 4
  %171 = load float, float* %169, align 4
  %172 = fmul float %170, %170
  %173 = fmul float %171, %171
  %174 = fcmp olt float %172, %173
  %175 = select i1 %174, float* %169, float* %168
  %176 = getelementptr inbounds float, float* %147, i64 4
  %177 = icmp eq float* %176, %130
  br i1 %177, label %178, label %146

178:                                              ; preds = %146, %121
  %179 = phi float* [ %126, %121 ], [ %175, %146 ]
  %180 = load float, float* %179, align 4
  %181 = fmul float %180, %180
  %182 = fmul float %122, 4.000000e+00
  %183 = fcmp ogt float %57, %182
  %184 = fmul float %122, 2.000000e+00
  %185 = fcmp ogt float %57, %184
  %186 = fcmp olt float %181, 1.000000e+02
  %187 = and i1 %185, %186
  %188 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 5
  %189 = tail call i32 @_ZN6webrtc20ReverbDecayEstimator26EarlyReverbLengthEstimator8EstimateEv(%"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %188)
  %190 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 9
  %191 = load i32, i32* %190, align 4
  %192 = sub nsw i32 %191, %189
  %193 = icmp sgt i32 %192, 0
  %194 = select i1 %193, i32 %192, i32 0
  %195 = icmp sgt i32 %194, 4
  br i1 %195, label %196, label %258

196:                                              ; preds = %178
  br i1 %187, label %197, label %231

197:                                              ; preds = %196
  %198 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 4
  %199 = load i32, i32* %198, align 4
  %200 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 3
  %201 = load i32, i32* %200, align 4
  %202 = icmp eq i32 %199, %201
  %203 = icmp ne i32 %201, 0
  %204 = and i1 %202, %203
  br i1 %204, label %205, label %231

205:                                              ; preds = %197
  %206 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 1
  %207 = load float, float* %206, align 4
  %208 = fcmp oeq float %207, 0.000000e+00
  br i1 %208, label %214, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 0
  %211 = load float, float* %210, align 4
  %212 = fdiv float %211, %207
  %213 = fmul float %212, 6.400000e+01
  br label %214

214:                                              ; preds = %205, %209
  %215 = phi float [ %213, %209 ], [ 0.000000e+00, %205 ]
  %216 = tail call float @exp2f(float %215) #14
  %217 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 13
  %218 = load float, float* %217, align 8
  %219 = fmul float %218, 0x3FEF0A3D80000000
  %220 = fcmp olt float %219, %216
  %221 = select i1 %220, float %216, float %219
  %222 = fcmp ogt float %221, 0x3FEE666660000000
  %223 = select i1 %222, float 0x3FEE666660000000, float %221
  %224 = fcmp olt float %223, 0x3F947AE140000000
  %225 = select i1 %224, float 0x3F947AE140000000, float %223
  %226 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 15
  %227 = load float, float* %226, align 8
  %228 = fsub float %225, %218
  %229 = fmul float %227, %228
  %230 = fadd float %218, %229
  store float %230, float* %217, align 8
  br label %231

231:                                              ; preds = %214, %197, %196
  %232 = shl i32 %194, 6
  %233 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 0
  store float 0.000000e+00, float* %233, align 4
  %234 = sitofp i32 %232 to float
  %235 = mul nsw i32 %232, %232
  %236 = sitofp i32 %235 to float
  %237 = fadd float %236, -1.000000e+00
  %238 = fmul float %237, %234
  %239 = fmul float %238, 0x3FB5555560000000
  %240 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 1
  store float %239, float* %240, align 4
  %241 = icmp sgt i32 %232, 0
  br i1 %241, label %242, label %247

242:                                              ; preds = %231
  %243 = sub nsw i32 0, %232
  %244 = sitofp i32 %243 to float
  %245 = fmul float %244, 5.000000e-01
  %246 = fadd float %245, 5.000000e-01
  br label %247

247:                                              ; preds = %231, %242
  %248 = phi float [ %246, %242 ], [ 0.000000e+00, %231 ]
  %249 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 2
  store float %248, float* %249, align 4
  %250 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 3
  store i32 %232, i32* %250, align 4
  %251 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 4
  store i32 0, i32* %251, align 4
  %252 = add nsw i32 %189, %5
  %253 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 6
  store i32 %252, i32* %253, align 8
  %254 = load i32, i32* %10, align 8
  %255 = load i32, i32* %190, align 4
  %256 = add i32 %254, -1
  %257 = add i32 %256, %255
  br label %265

258:                                              ; preds = %178
  %259 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 0
  store float 0.000000e+00, float* %259, align 4
  %260 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 1
  store float -0.000000e+00, float* %260, align 4
  %261 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 2
  store float 0.000000e+00, float* %261, align 4
  %262 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 3
  store i32 0, i32* %262, align 4
  %263 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 4, i32 4
  store i32 0, i32* %263, align 4
  %264 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 6
  store i32 0, i32* %264, align 8
  br label %265

265:                                              ; preds = %258, %247
  %266 = phi i32 [ 0, %258 ], [ %257, %247 ]
  %267 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 7
  store i32 %266, i32* %267, align 4
  %268 = and i1 %183, %187
  %269 = xor i1 %268, true
  %270 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 10
  %271 = zext i1 %269 to i8
  store i8 %271, i8* %270, align 8
  store i32 0, i32* %190, align 4
  %272 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 15
  store float 0.000000e+00, float* %272, align 8
  %273 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 5, i32 2
  store i32 0, i32* %273, align 8
  %274 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  %275 = load float*, float** %274, align 8
  %276 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 5, i32 1, i32 0, i32 1
  %277 = bitcast float** %276 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = ptrtoint float* %275 to i64
  %280 = sub i64 %278, %279
  %281 = icmp sgt i64 %280, 0
  br i1 %281, label %282, label %289

282:                                              ; preds = %265
  %283 = bitcast float* %275 to i8*
  %284 = and i64 %280, -4
  %285 = icmp ult i64 %280, 4
  %286 = sext i1 %285 to i64
  %287 = shl nsw i64 %286, 2
  %288 = sub i64 %284, %287
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %283, i8 0, i64 %288, i1 false) #11
  br label %289

289:                                              ; preds = %265, %282
  %290 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator", %"class.webrtc::ReverbDecayEstimator"* %0, i64 0, i32 5, i32 3
  store i32 0, i32* %290, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20ReverbDecayEstimator26EarlyReverbLengthEstimator5ResetEv(%"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 2
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = bitcast float** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint float* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %18

11:                                               ; preds = %1
  %12 = bitcast float* %4 to i8*
  %13 = and i64 %9, -4
  %14 = icmp ult i64 %9, 4
  %15 = sext i1 %14 to i64
  %16 = shl nsw i64 %15, 2
  %17 = sub i64 %13, %16
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 %17, i1 false)
  br label %18

18:                                               ; preds = %11, %1
  %19 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 3
  store i32 0, i32* %19, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc20ReverbDecayEstimator25LateReverbLinearRegressor5ResetEi(%"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor", %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor"* %0, i64 0, i32 0
  store float 0.000000e+00, float* %3, align 4
  %4 = sitofp i32 %1 to float
  %5 = mul nsw i32 %1, %1
  %6 = sitofp i32 %5 to float
  %7 = fadd float %6, -1.000000e+00
  %8 = fmul float %7, %4
  %9 = fmul float %8, 0x3FB5555560000000
  %10 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor", %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor"* %0, i64 0, i32 1
  store float %9, float* %10, align 4
  %11 = icmp sgt i32 %1, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %2
  %13 = sub nsw i32 0, %1
  %14 = sitofp i32 %13 to float
  %15 = fmul float %14, 5.000000e-01
  %16 = fadd float %15, 5.000000e-01
  br label %17

17:                                               ; preds = %2, %12
  %18 = phi float [ %16, %12 ], [ 0.000000e+00, %2 ]
  %19 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor", %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor"* %0, i64 0, i32 2
  store float %18, float* %19, align 4
  %20 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor", %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor"* %0, i64 0, i32 3
  store i32 %1, i32* %20, align 4
  %21 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor", %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor"* %0, i64 0, i32 4
  store i32 0, i32* %21, align 4
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN6webrtc20ReverbDecayEstimator26EarlyReverbLengthEstimator8EstimateEv(%"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = icmp slt i32 %3, 9
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load float*, float** %6, align 8
  %8 = getelementptr inbounds float, float* %7, i64 9
  %9 = sext i32 %3 to i64
  %10 = getelementptr inbounds float, float* %7, i64 %9
  %11 = ptrtoint float* %8 to i64
  %12 = add i32 %3, -9
  %13 = icmp ult i32 %12, 2
  br i1 %13, label %75, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds float, float* %7, i64 10
  %16 = shl nsw i64 %9, 2
  %17 = add nsw i64 %16, -44
  %18 = lshr exact i64 %17, 2
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %14, %22
  %23 = phi float* [ %32, %22 ], [ %15, %14 ]
  %24 = phi i64 [ %31, %22 ], [ %11, %14 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %14 ]
  %26 = ptrtoint float* %23 to i64
  %27 = inttoptr i64 %24 to float*
  %28 = load float, float* %23, align 4
  %29 = load float, float* %27, align 4
  %30 = fcmp olt float %28, %29
  %31 = select i1 %30, i64 %26, i64 %24
  %32 = getelementptr inbounds float, float* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !13

35:                                               ; preds = %22, %14
  %36 = phi i64 [ undef, %14 ], [ %31, %22 ]
  %37 = phi float* [ %15, %14 ], [ %32, %22 ]
  %38 = phi i64 [ %11, %14 ], [ %31, %22 ]
  %39 = icmp ult i64 %17, 12
  br i1 %39, label %72, label %40

40:                                               ; preds = %35, %40
  %41 = phi float* [ %70, %40 ], [ %37, %35 ]
  %42 = phi i64 [ %69, %40 ], [ %38, %35 ]
  %43 = ptrtoint float* %41 to i64
  %44 = inttoptr i64 %42 to float*
  %45 = load float, float* %41, align 4
  %46 = load float, float* %44, align 4
  %47 = fcmp olt float %45, %46
  %48 = select i1 %47, i64 %43, i64 %42
  %49 = getelementptr inbounds float, float* %41, i64 1
  %50 = ptrtoint float* %49 to i64
  %51 = inttoptr i64 %48 to float*
  %52 = load float, float* %49, align 4
  %53 = load float, float* %51, align 4
  %54 = fcmp olt float %52, %53
  %55 = select i1 %54, i64 %50, i64 %48
  %56 = getelementptr inbounds float, float* %41, i64 2
  %57 = ptrtoint float* %56 to i64
  %58 = inttoptr i64 %55 to float*
  %59 = load float, float* %56, align 4
  %60 = load float, float* %58, align 4
  %61 = fcmp olt float %59, %60
  %62 = select i1 %61, i64 %57, i64 %55
  %63 = getelementptr inbounds float, float* %41, i64 3
  %64 = ptrtoint float* %63 to i64
  %65 = inttoptr i64 %62 to float*
  %66 = load float, float* %63, align 4
  %67 = load float, float* %65, align 4
  %68 = fcmp olt float %66, %67
  %69 = select i1 %68, i64 %64, i64 %62
  %70 = getelementptr inbounds float, float* %41, i64 4
  %71 = icmp eq float* %70, %10
  br i1 %71, label %72, label %40

72:                                               ; preds = %40, %35
  %73 = phi i64 [ %36, %35 ], [ %69, %40 ]
  %74 = inttoptr i64 %73 to float*
  br label %75

75:                                               ; preds = %72, %5
  %76 = phi float* [ %8, %5 ], [ %74, %72 ]
  %77 = load float, float* %76, align 4
  %78 = fmul float %77, 0x3FECCCCCC0000000
  %79 = getelementptr inbounds float, float* %7, i64 1
  %80 = load float, float* %79, align 4
  %81 = fcmp ogt float %80, 0x40C3CCE540000000
  br i1 %81, label %88, label %84

82:                                               ; preds = %154, %149, %1
  %83 = phi i32 [ 0, %1 ], [ 9, %149 ], [ 9, %154 ]
  ret i32 %83

84:                                               ; preds = %75
  %85 = fcmp olt float %80, 0xC0D72DBD00000000
  %86 = fcmp olt float %80, %78
  %87 = and i1 %85, %86
  br i1 %87, label %88, label %89

88:                                               ; preds = %84, %75
  br label %89

89:                                               ; preds = %88, %84
  %90 = phi i32 [ 1, %88 ], [ 0, %84 ]
  %91 = getelementptr inbounds float, float* %7, i64 2
  %92 = load float, float* %91, align 4
  %93 = fcmp ogt float %92, 0x40C3CCE540000000
  br i1 %93, label %98, label %94

94:                                               ; preds = %89
  %95 = fcmp olt float %92, 0xC0D72DBD00000000
  %96 = fcmp olt float %92, %78
  %97 = and i1 %95, %96
  br i1 %97, label %98, label %99

98:                                               ; preds = %94, %89
  br label %99

99:                                               ; preds = %98, %94
  %100 = phi i32 [ 2, %98 ], [ %90, %94 ]
  %101 = getelementptr inbounds float, float* %7, i64 3
  %102 = load float, float* %101, align 4
  %103 = fcmp ogt float %102, 0x40C3CCE540000000
  br i1 %103, label %108, label %104

104:                                              ; preds = %99
  %105 = fcmp olt float %102, 0xC0D72DBD00000000
  %106 = fcmp olt float %102, %78
  %107 = and i1 %105, %106
  br i1 %107, label %108, label %109

108:                                              ; preds = %104, %99
  br label %109

109:                                              ; preds = %108, %104
  %110 = phi i32 [ 3, %108 ], [ %100, %104 ]
  %111 = getelementptr inbounds float, float* %7, i64 4
  %112 = load float, float* %111, align 4
  %113 = fcmp ogt float %112, 0x40C3CCE540000000
  br i1 %113, label %118, label %114

114:                                              ; preds = %109
  %115 = fcmp olt float %112, 0xC0D72DBD00000000
  %116 = fcmp olt float %112, %78
  %117 = and i1 %115, %116
  br i1 %117, label %118, label %119

118:                                              ; preds = %114, %109
  br label %119

119:                                              ; preds = %118, %114
  %120 = phi i32 [ 4, %118 ], [ %110, %114 ]
  %121 = getelementptr inbounds float, float* %7, i64 5
  %122 = load float, float* %121, align 4
  %123 = fcmp ogt float %122, 0x40C3CCE540000000
  br i1 %123, label %128, label %124

124:                                              ; preds = %119
  %125 = fcmp olt float %122, 0xC0D72DBD00000000
  %126 = fcmp olt float %122, %78
  %127 = and i1 %125, %126
  br i1 %127, label %128, label %129

128:                                              ; preds = %124, %119
  br label %129

129:                                              ; preds = %128, %124
  %130 = phi i32 [ 5, %128 ], [ %120, %124 ]
  %131 = getelementptr inbounds float, float* %7, i64 6
  %132 = load float, float* %131, align 4
  %133 = fcmp ogt float %132, 0x40C3CCE540000000
  br i1 %133, label %138, label %134

134:                                              ; preds = %129
  %135 = fcmp olt float %132, 0xC0D72DBD00000000
  %136 = fcmp olt float %132, %78
  %137 = and i1 %135, %136
  br i1 %137, label %138, label %139

138:                                              ; preds = %134, %129
  br label %139

139:                                              ; preds = %138, %134
  %140 = phi i32 [ 6, %138 ], [ %130, %134 ]
  %141 = getelementptr inbounds float, float* %7, i64 7
  %142 = load float, float* %141, align 4
  %143 = fcmp ogt float %142, 0x40C3CCE540000000
  br i1 %143, label %148, label %144

144:                                              ; preds = %139
  %145 = fcmp olt float %142, 0xC0D72DBD00000000
  %146 = fcmp olt float %142, %78
  %147 = and i1 %145, %146
  br i1 %147, label %148, label %149

148:                                              ; preds = %144, %139
  br label %149

149:                                              ; preds = %148, %144
  %150 = phi i32 [ 7, %148 ], [ %140, %144 ]
  %151 = getelementptr inbounds float, float* %7, i64 8
  %152 = load float, float* %151, align 4
  %153 = fcmp ogt float %152, 0x40C3CCE540000000
  br i1 %153, label %82, label %154

154:                                              ; preds = %149
  %155 = fcmp olt float %152, 0xC0D72DBD00000000
  %156 = fcmp olt float %152, %78
  %157 = and i1 %155, %156
  br i1 %157, label %82, label %158

158:                                              ; preds = %154
  %159 = icmp eq i32 %150, 0
  %160 = add nuw nsw i32 %150, 1
  %161 = select i1 %159, i32 0, i32 %160
  ret i32 %161
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZN6webrtc20ReverbDecayEstimator25LateReverbLinearRegressor8EstimateEv(%"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor", %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor"* %0, i64 0, i32 1
  %3 = load float, float* %2, align 4
  %4 = fcmp oeq float %3, 0.000000e+00
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor", %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor"* %0, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = fdiv float %7, %3
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi float [ %8, %5 ], [ 0.000000e+00, %1 ]
  ret float %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare float @_ZN6webrtc15FastApproxLog2fEf(float) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc20ReverbDecayEstimator25LateReverbLinearRegressor10AccumulateEf(%"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor"* nocapture, float) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor", %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor"* %0, i64 0, i32 2
  %4 = load float, float* %3, align 4
  %5 = fmul float %4, %1
  %6 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor", %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor"* %0, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = fadd float %7, %5
  store float %8, float* %6, align 4
  %9 = fadd float %4, 1.000000e+00
  store float %9, float* %3, align 4
  %10 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor", %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20ReverbDecayEstimator26EarlyReverbLengthEstimator10AccumulateEff(%"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* nocapture, float, float) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 5
  %7 = select i1 %6, i32 %5, i32 5
  %8 = add nsw i32 %7, -5
  %9 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = bitcast float** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = lshr exact i64 %15, 2
  %17 = trunc i64 %16 to i32
  %18 = add i32 %17, -1
  %19 = icmp slt i32 %18, %5
  %20 = select i1 %19, i32 %18, i32 %5
  %21 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 2
  %22 = fmul float %1, 6.400000e+01
  %23 = icmp slt i32 %20, %8
  br i1 %23, label %57, label %24

24:                                               ; preds = %3
  %25 = inttoptr i64 %14 to float*
  %26 = load i32, i32* %21, align 8
  %27 = sitofp i32 %26 to float
  %28 = fadd float %27, -1.915000e+02
  %29 = fmul float %28, %1
  %30 = sub nsw i32 %5, %20
  %31 = sitofp i32 %30 to float
  %32 = fmul float %22, %31
  %33 = fadd float %29, %32
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %35 = sext i32 %20 to i64
  %36 = sext i32 %8 to i64
  %37 = getelementptr inbounds float, float* %25, i64 %35
  %38 = load float, float* %37, align 4
  %39 = fadd float %33, %38
  store float %39, float* %37, align 4
  %40 = icmp sgt i32 %20, %8
  br i1 %40, label %41, label %57

41:                                               ; preds = %24
  %42 = sub nsw i64 %35, %36
  %43 = and i64 %42, 1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %41
  %46 = fadd float %22, %33
  %47 = add nsw i64 %35, -1
  %48 = load float*, float** %34, align 8
  %49 = getelementptr inbounds float, float* %48, i64 %47
  %50 = load float, float* %49, align 4
  %51 = fadd float %46, %50
  store float %51, float* %49, align 4
  br label %52

52:                                               ; preds = %41, %45
  %53 = phi float [ %33, %41 ], [ %46, %45 ]
  %54 = phi i64 [ %35, %41 ], [ %47, %45 ]
  %55 = add nsw i64 %36, 1
  %56 = icmp eq i64 %55, %35
  br i1 %56, label %57, label %61

57:                                               ; preds = %52, %61, %24, %3
  %58 = load i32, i32* %21, align 8
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %21, align 8
  %60 = icmp eq i32 %59, 64
  br i1 %60, label %77, label %100

61:                                               ; preds = %52, %61
  %62 = phi float [ %70, %61 ], [ %53, %52 ]
  %63 = phi i64 [ %71, %61 ], [ %54, %52 ]
  %64 = fadd float %22, %62
  %65 = add nsw i64 %63, -1
  %66 = load float*, float** %34, align 8
  %67 = getelementptr inbounds float, float* %66, i64 %65
  %68 = load float, float* %67, align 4
  %69 = fadd float %64, %68
  store float %69, float* %67, align 4
  %70 = fadd float %22, %64
  %71 = add nsw i64 %63, -2
  %72 = load float*, float** %34, align 8
  %73 = getelementptr inbounds float, float* %72, i64 %71
  %74 = load float, float* %73, align 4
  %75 = fadd float %70, %74
  store float %75, float* %73, align 4
  %76 = icmp sgt i64 %71, %36
  br i1 %76, label %61, label %57

77:                                               ; preds = %57
  %78 = load i32, i32* %4, align 4
  %79 = icmp sgt i32 %78, 4
  br i1 %79, label %80, label %97

80:                                               ; preds = %77
  %81 = add nsw i32 %78, -5
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %84 = load float*, float** %83, align 8
  %85 = getelementptr inbounds float, float* %84, i64 %82
  %86 = load float, float* %85, align 4
  %87 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 0, i32 0, i32 0
  %88 = load float*, float** %87, align 8
  %89 = getelementptr inbounds float, float* %88, i64 %82
  %90 = load float, float* %89, align 4
  %91 = fsub float %86, %90
  %92 = fmul float %91, %2
  %93 = fadd float %90, %92
  store float %93, float* %89, align 4
  %94 = add nsw i32 %78, -4
  %95 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 4
  store i32 %94, i32* %95, align 8
  %96 = load i32, i32* %4, align 4
  br label %97

97:                                               ; preds = %80, %77
  %98 = phi i32 [ %96, %80 ], [ %78, %77 ]
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %4, align 4
  store i32 0, i32* %21, align 8
  br label %100

100:                                              ; preds = %97, %57
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden void @_ZNK6webrtc20ReverbDecayEstimator4DumpEPNS_13ApmDataDumperE(%"class.webrtc::ReverbDecayEstimator"* nocapture, %"class.webrtc::ApmDataDumper"* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden void @_ZNK6webrtc20ReverbDecayEstimator26EarlyReverbLengthEstimator4DumpEPNS_13ApmDataDumperE(%"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* nocapture, %"class.webrtc::ApmDataDumper"* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20ReverbDecayEstimator26EarlyReverbLengthEstimatorC2Ei(%"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"*, i32) unnamed_addr #0 align 2 {
  %3 = add nsw i32 %1, -6
  %4 = sext i32 %3 to i64
  %5 = bitcast %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #11
  %6 = icmp eq i32 %3, 0
  br i1 %6, label %22, label %7

7:                                                ; preds = %2
  %8 = icmp slt i32 %3, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %7
  %10 = bitcast %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %10) #12
  unreachable

11:                                               ; preds = %7
  %12 = shl nsw i64 %4, 2
  %13 = tail call i8* @_Znwm(i64 %12) #13
  %14 = bitcast i8* %13 to float*
  %15 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0 to i8**
  store i8* %13, i8** %16, align 8
  %17 = getelementptr inbounds float, float* %14, i64 %4
  %18 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store float* %17, float** %18, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 0, i64 %12, i1 false)
  %19 = bitcast float** %15 to i64*
  %20 = ptrtoint float* %17 to i64
  store i64 %20, i64* %19, align 8
  %21 = ptrtoint i8* %13 to i64
  br label %22

22:                                               ; preds = %2, %11
  %23 = phi i64 [ %21, %11 ], [ 0, %2 ]
  %24 = phi i64 [ %20, %11 ], [ 0, %2 ]
  %25 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 1
  %26 = sub i64 %24, %23
  %27 = ashr exact i64 %26, 2
  %28 = bitcast %"class.std::__1::vector"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #11
  %29 = icmp eq i64 %26, 0
  br i1 %29, label %44, label %30

30:                                               ; preds = %22
  %31 = icmp ugt i64 %27, 4611686018427387903
  br i1 %31, label %32, label %34

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector"* %25 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %33) #12
  unreachable

34:                                               ; preds = %30
  %35 = tail call i8* @_Znwm(i64 %26) #13
  %36 = bitcast i8* %35 to float*
  %37 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 1, i32 0, i32 1
  %38 = bitcast %"class.std::__1::vector"* %25 to i8**
  store i8* %35, i8** %38, align 8
  %39 = getelementptr inbounds float, float* %36, i64 %27
  %40 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store float* %39, float** %40, align 8
  %41 = and i64 %26, -4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %35, i8 0, i64 %41, i1 false)
  %42 = bitcast float** %37 to i64*
  %43 = ptrtoint float* %39 to i64
  store i64 %43, i64* %42, align 8
  br label %44

44:                                               ; preds = %22, %34
  %45 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 2
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 3
  store i32 0, i32* %46, align 4
  %47 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 4
  store i32 0, i32* %47, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20ReverbDecayEstimator26EarlyReverbLengthEstimatorD2Ev(%"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load float*, float** %2, align 8
  %4 = icmp eq float* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint float* %3 to i64
  %7 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast float** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load float*, float** %11, align 8
  %13 = icmp eq float* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint float* %12 to i64
  %16 = getelementptr inbounds %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast float** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast float* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare float @exp2f(float) local_unnamed_addr

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !11}
