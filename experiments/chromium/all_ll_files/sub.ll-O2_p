; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/sub.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/sub.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { {}*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteSubParams = type { i32 }
%"struct.tflite::ops::builtin::sub::OpData" = type { i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.tflite::ArithmeticParams" = type { i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"struct.tflite::NdArrayDesc" = type { [5 x i32], [5 x i32] }
%class.anon = type { i32**, %"struct.tflite::NdArrayDesc"*, i32**, %"struct.tflite::NdArrayDesc"*, i32**, %"struct.tflite::NdArrayDesc"*, %"struct.tflite::ArithmeticParams"* }
%class.anon.1 = type { float**, %"struct.tflite::NdArrayDesc"*, float**, %"struct.tflite::NdArrayDesc"*, float**, %"struct.tflite::NdArrayDesc"*, %"struct.tflite::ArithmeticParams"* }
%"struct.tflite::NdArrayDesc.3" = type { [4 x i32], [4 x i32] }
%class.anon.4 = type { i16**, %"struct.tflite::NdArrayDesc"*, i16**, %"struct.tflite::NdArrayDesc"*, i16**, %"struct.tflite::NdArrayDesc"*, %"struct.tflite::ArithmeticParams"* }

$_ZN6tflite3ops7builtin3sub4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin3sub4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin3sub4EvalILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin3sub13EvalQuantizedILNS2_10KernelTypeE0EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_ = comdat any

$_ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE0EiEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_ = comdat any

$_ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE0EfEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_ = comdat any

$_ZN6tflite13reference_ops16BroadcastSubSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKiS7_S9_S7_Pi = comdat any

$_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi5EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_ = comdat any

$_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops16BroadcastSubSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKiS8_SA_S8_PiEUlSB_E_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SB_ = comdat any

$_ZN6tflite13reference_ops16BroadcastSubSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKfS7_S9_S7_Pf = comdat any

$_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops16BroadcastSubSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKfS8_SA_S8_PfEUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SC_ = comdat any

$_ZN6tflite13reference_ops22ProcessBroadcastShapesERKNS_12RuntimeShapeES3_PNS_16ArithmeticParamsE = comdat any

$_ZN6tflite21reference_integer_ops18BroadcastAdd4DSlowERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKaS6_S8_S6_Pa = comdat any

$_ZN6tflite13reference_ops18BroadcastAdd4DSlowERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS6_S8_S6_Ph = comdat any

$_ZN6tflite13reference_ops16BroadcastSubSlowIsLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops5Sub16ERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKsS6_S8_S6_Ps = comdat any

$_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_ = comdat any

$_ZN6tflite21reference_integer_ops14AddElementwiseEiRKNS_16ArithmeticParamsEPKaS5_Pa = comdat any

$_ZN6tflite13reference_ops14AddElementwiseEiRKNS_16ArithmeticParamsEPKhS5_Ph = comdat any

$_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops16BroadcastSubSlowIsLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S8_SB_S8_PS9_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_ = comdat any

$_ZN6tflite3ops7builtin3sub13EvalQuantizedILNS2_10KernelTypeE1EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_ = comdat any

$_ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE1EiEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_ = comdat any

$_ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE1EfEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_ = comdat any

$_ZN6tflite13optimized_ops14AddElementwiseEiRKNS_16ArithmeticParamsEPKhS5_Ph = comdat any

$_ZN6tflite13optimized_ops18AddScalarBroadcastEiRKNS_16ArithmeticParamsEhPKhPh = comdat any

$_ZN6tflite3ops7builtin3sub13EvalQuantizedILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_ = comdat any

$_ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE2EiEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_ = comdat any

$_ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE2EfEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_ = comdat any

@.str = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.3 = private unnamed_addr constant [60 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/sub.cc\00", align 1
@.str.4 = private unnamed_addr constant [60 x i8] c"output->type == kTfLiteUInt8 || output->type == kTfLiteInt8\00", align 1
@.str.5 = private unnamed_addr constant [58 x i8] c"input1_quantization_params.zero_point >= integer_type_min\00", align 1
@.str.6 = private unnamed_addr constant [58 x i8] c"input1_quantization_params.zero_point <= integer_type_max\00", align 1
@.str.7 = private unnamed_addr constant [58 x i8] c"input2_quantization_params.zero_point >= integer_type_min\00", align 1
@.str.8 = private unnamed_addr constant [58 x i8] c"input2_quantization_params.zero_point <= integer_type_max\00", align 1
@.str.9 = private unnamed_addr constant [58 x i8] c"output_quantization_params.zero_point >= integer_type_min\00", align 1
@.str.10 = private unnamed_addr constant [58 x i8] c"output_quantization_params.zero_point <= integer_type_max\00", align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.12 = private unnamed_addr constant [26 x i8] c"input1->params.zero_point\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.14 = private unnamed_addr constant [26 x i8] c"input2->params.zero_point\00", align 1
@.str.15 = private unnamed_addr constant [26 x i8] c"output->params.zero_point\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"input1_scale_is_pot\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"input2_scale_is_pot\00", align 1
@.str.18 = private unnamed_addr constant [20 x i8] c"output_scale_is_pot\00", align 1
@.str.19 = private unnamed_addr constant [51 x i8] c"data->input1_shift == 0 || data->input2_shift == 0\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"data->input1_shift <= 0\00", align 1
@.str.21 = private unnamed_addr constant [24 x i8] c"data->input2_shift <= 0\00", align 1
@.str.22 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.24 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.26 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.27 = private unnamed_addr constant [13 x i8] c"input1->type\00", align 1
@.str.28 = private unnamed_addr constant [13 x i8] c"input2->type\00", align 1
@_ZZN6tflite3ops7builtin16Register_SUB_REFEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin3sub4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin3sub4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3sub7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3sub4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin24Register_SUB_GENERIC_OPTEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin3sub4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin3sub4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3sub7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3sub4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin21Register_SUB_NEON_OPTEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin3sub4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin3sub4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3sub7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3sub4EvalILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str.30 = private unnamed_addr constant [67 x i8] c"output type %d is not supported, requires float|uint8|int32 types.\00", align 1
@.str.31 = private unnamed_addr constant [33 x i8] c"output type %s is not supported.\00", align 1
@__const._ZN6tflite3ops7builtin3sub13EvalQuantizedILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.op_params = private unnamed_addr constant { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] } { i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, [5 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766] }, align 4
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer
@switch.table._ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE2EiEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_ = private unnamed_addr constant [3 x i32] [i32 0, i32 -1, i32 0], align 4
@switch.table._ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE2EiEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_.46 = private unnamed_addr constant [3 x i32] [i32 2147483647, i32 1, i32 6], align 4
@switch.table._ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE2EfEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_ = private unnamed_addr constant [3 x float] [float 0.000000e+00, float -1.000000e+00, float 0.000000e+00], align 4
@switch.table._ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE2EfEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_.47 = private unnamed_addr constant [3 x float] [float 0x47EFFFFFE0000000, float 1.000000e+00, float 6.000000e+00], align 4

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull i8* @_ZN6tflite3ops7builtin3sub4InitEP13TfLiteContextPKcm(%struct.TfLiteContext* nocapture readnone, i8* nocapture readnone, i64) #0 {
  %4 = tail call i8* @_Znwm(i64 52) #10
  store i8 0, i8* %4, align 4
  ret i8* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite3ops7builtin3sub4FreeEP13TfLiteContextPv(%struct.TfLiteContext* nocapture readnone, i8*) #3 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @_ZdlPv(i8* nonnull %1) #10
  br label %5

5:                                                ; preds = %4, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin3sub16Prepare8BitSubOpEP13TfLiteContextPK12TfLiteTensorS7_PS5_P15TfLiteSubParamsPNS2_6OpDataEi(%struct.TfLiteContext*, %struct.TfLiteTensor* nocapture readonly, %struct.TfLiteTensor* nocapture readonly, %struct.TfLiteTensor*, %struct.TfLiteSubParams* nocapture readonly, %"struct.tflite::ops::builtin::sub::OpData"*, i32) local_unnamed_addr #3 {
  %8 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  switch i32 %9, label %10 [
    i32 3, label %14
    i32 9, label %13
  ]

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %12 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %11, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %12(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 92, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.4, i64 0, i64 0)) #11
  br label %93

13:                                               ; preds = %7
  br label %14

14:                                               ; preds = %7, %13
  %15 = phi i32 [ -128, %13 ], [ 0, %7 ]
  %16 = phi i32 [ 127, %13 ], [ 255, %7 ]
  %17 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 3, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, %15
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %22 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %21, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %22(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 108, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5, i64 0, i64 0)) #11
  br label %93

23:                                               ; preds = %14
  %24 = icmp sgt i32 %18, %16
  br i1 %24, label %25, label %28

25:                                               ; preds = %23
  %26 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %27 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %26, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %27(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 110, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.6, i64 0, i64 0)) #11
  br label %93

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 3, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %30, %15
  br i1 %31, label %32, label %35

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %34 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %33, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %34(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 112, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.7, i64 0, i64 0)) #11
  br label %93

35:                                               ; preds = %28
  %36 = icmp sgt i32 %30, %16
  br i1 %36, label %37, label %40

37:                                               ; preds = %35
  %38 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %39 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %38, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %39(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 114, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.8, i64 0, i64 0)) #11
  br label %93

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 3, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %42, %15
  br i1 %43, label %44, label %47

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %46 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %45, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %46(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 116, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.9, i64 0, i64 0)) #11
  br label %93

47:                                               ; preds = %40
  %48 = icmp sgt i32 %42, %16
  br i1 %48, label %49, label %52

49:                                               ; preds = %47
  %50 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %51 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %50, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %51(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 118, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.10, i64 0, i64 0)) #11
  br label %93

52:                                               ; preds = %47
  %53 = sub nsw i32 0, %18
  %54 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %5, i64 0, i32 10
  store i32 %53, i32* %54, align 4
  %55 = load i32, i32* %29, align 4
  %56 = sub nsw i32 0, %55
  %57 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %5, i64 0, i32 11
  store i32 %56, i32* %57, align 4
  %58 = load i32, i32* %41, align 4
  %59 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %5, i64 0, i32 12
  store i32 %58, i32* %59, align 4
  %60 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %5, i64 0, i32 9
  store i32 20, i32* %60, align 4
  %61 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 3, i32 0
  %62 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 3, i32 0
  %63 = load float, float* %61, align 4
  %64 = load float, float* %62, align 4
  %65 = fcmp olt float %63, %64
  %66 = select i1 %65, float %64, float %63
  %67 = fpext float %63 to double
  %68 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 3, i32 0
  %69 = load float, float* %68, align 4
  %70 = insertelement <2 x float> undef, float %66, i32 0
  %71 = insertelement <2 x float> %70, float %69, i32 1
  %72 = fmul <2 x float> %71, <float 2.000000e+00, float 0x4130000000000000>
  %73 = fpext <2 x float> %72 to <2 x double>
  %74 = extractelement <2 x double> %73, i32 0
  %75 = fdiv double %67, %74
  %76 = fpext float %64 to double
  %77 = fdiv double %76, %74
  %78 = extractelement <2 x double> %73, i32 1
  %79 = fdiv double %74, %78
  %80 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %5, i64 0, i32 5
  %81 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %5, i64 0, i32 1
  tail call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %75, i32* %80, i32* %81) #11
  %82 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %5, i64 0, i32 6
  %83 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %5, i64 0, i32 2
  tail call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %77, i32* %82, i32* %83) #11
  %84 = load i32, i32* %82, align 4
  %85 = mul nsw i32 %84, %6
  store i32 %85, i32* %82, align 4
  %86 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %5, i64 0, i32 7
  %87 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %5, i64 0, i32 8
  tail call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %79, i32* %86, i32* %87) #11
  %88 = getelementptr inbounds %struct.TfLiteSubParams, %struct.TfLiteSubParams* %4, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %5, i64 0, i32 3
  %91 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %5, i64 0, i32 4
  %92 = tail call i32 @_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPiS5_(%struct.TfLiteContext* %0, i32 %89, %struct.TfLiteTensor* %3, i32* %90, i32* %91) #11
  br label %93

93:                                               ; preds = %20, %25, %32, %37, %44, %49, %52, %10
  %94 = phi i32 [ 1, %10 ], [ 1, %49 ], [ 1, %44 ], [ 1, %37 ], [ 1, %32 ], [ 1, %25 ], [ 1, %20 ], [ %92, %52 ]
  ret i32 %94
}

declare void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double, i32*, i32*) local_unnamed_addr #5

declare i32 @_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPiS5_(%struct.TfLiteContext*, i32, %struct.TfLiteTensor*, i32*, i32*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin3sub17PrepareInt16SubOpEP13TfLiteContextPK12TfLiteTensorS7_PS5_P15TfLiteSubParamsPNS2_6OpDataE(%struct.TfLiteContext*, %struct.TfLiteTensor* nocapture readonly, %struct.TfLiteTensor* nocapture readonly, %struct.TfLiteTensor*, %struct.TfLiteSubParams* nocapture readonly, %"struct.tflite::ops::builtin::sub::OpData"*) local_unnamed_addr #3 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 3, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %15 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %14, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %15(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 164, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i32 %11, i32 0) #11
  br label %90

16:                                               ; preds = %6
  %17 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 3, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %22 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %21, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %22(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 165, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i32 %18, i32 0) #11
  br label %90

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 3, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %29 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %28, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %29(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 166, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i32 %25, i32 0) #11
  br label %90

30:                                               ; preds = %23
  %31 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #11
  store i32 -1431655766, i32* %7, align 4
  %32 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 3, i32 0
  %33 = load float, float* %32, align 8
  %34 = call zeroext i1 @_ZN6tflite11CheckedLog2EfPi(float %33, i32* nonnull %7) #11
  br i1 %34, label %38, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %37 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %36, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %37(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 171, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0)) #11
  br label %88

38:                                               ; preds = %30
  %39 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #11
  store i32 -1431655766, i32* %8, align 4
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 3, i32 0
  %41 = load float, float* %40, align 8
  %42 = call zeroext i1 @_ZN6tflite11CheckedLog2EfPi(float %41, i32* nonnull %8) #11
  br i1 %42, label %46, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %45 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %44, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %45(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0)) #11
  br label %86

46:                                               ; preds = %38
  %47 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #11
  store i32 -1431655766, i32* %9, align 4
  %48 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 3, i32 0
  %49 = load float, float* %48, align 8
  %50 = call zeroext i1 @_ZN6tflite11CheckedLog2EfPi(float %49, i32* nonnull %9) #11
  br i1 %50, label %54, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %53 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %52, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %53(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 181, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i64 0, i64 0)) #11
  br label %84

54:                                               ; preds = %46
  %55 = load i32, i32* %7, align 4
  %56 = load i32, i32* %9, align 4
  %57 = sub nsw i32 %55, %56
  %58 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %5, i64 0, i32 1
  store i32 %57, i32* %58, align 4
  %59 = load i32, i32* %8, align 4
  %60 = sub nsw i32 %59, %56
  %61 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %5, i64 0, i32 2
  store i32 %60, i32* %61, align 4
  %62 = icmp eq i32 %57, 0
  %63 = icmp eq i32 %60, 0
  %64 = or i1 %62, %63
  br i1 %64, label %68, label %65

65:                                               ; preds = %54
  %66 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %67 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %66, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %67(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 188, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.19, i64 0, i64 0)) #11
  br label %84

68:                                               ; preds = %54
  %69 = icmp slt i32 %57, 1
  br i1 %69, label %73, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %72 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %71, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %72(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 189, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i64 0, i64 0)) #11
  br label %84

73:                                               ; preds = %68
  %74 = icmp slt i32 %60, 1
  br i1 %74, label %78, label %75

75:                                               ; preds = %73
  %76 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %77 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %76, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %77(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 190, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i64 0, i64 0)) #11
  br label %84

78:                                               ; preds = %73
  %79 = getelementptr inbounds %struct.TfLiteSubParams, %struct.TfLiteSubParams* %4, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %5, i64 0, i32 3
  %82 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %5, i64 0, i32 4
  %83 = call i32 @_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPiS5_(%struct.TfLiteContext* %0, i32 %80, %struct.TfLiteTensor* %3, i32* %81, i32* %82) #11
  br label %84

84:                                               ; preds = %78, %75, %70, %65, %51
  %85 = phi i32 [ 1, %75 ], [ 1, %70 ], [ 1, %65 ], [ 1, %51 ], [ %83, %78 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #11
  br label %86

86:                                               ; preds = %84, %43
  %87 = phi i32 [ %85, %84 ], [ 1, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #11
  br label %88

88:                                               ; preds = %86, %35
  %89 = phi i32 [ %87, %86 ], [ 1, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #11
  br label %90

90:                                               ; preds = %88, %27, %20, %13
  %91 = phi i32 [ 1, %13 ], [ 1, %20 ], [ 1, %27 ], [ %89, %88 ]
  ret i32 %91
}

declare zeroext i1 @_ZN6tflite11CheckedLog2EfPi(float, i32*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin3sub7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #3 {
  %3 = alloca %struct.TfLiteIntArray*, align 8
  %4 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %5 = bitcast i8** %4 to %"struct.tflite::ops::builtin::sub::OpData"**
  %6 = load %"struct.tflite::ops::builtin::sub::OpData"*, %"struct.tflite::ops::builtin::sub::OpData"** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %8 = bitcast i8** %7 to %struct.TfLiteSubParams**
  %9 = load %struct.TfLiteSubParams*, %struct.TfLiteSubParams** %8, align 8
  %10 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %11 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %10, align 8
  %12 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %17 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %16, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %17(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 202, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i32 %13, i32 2) #11
  br label %100

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %20 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %19, align 8
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %26 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %25, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %26(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 203, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0), i32 %22, i32 1) #11
  br label %100

27:                                               ; preds = %18
  %28 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %11, i64 0, i32 1, i64 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %33 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %32, align 8
  %34 = sext i32 %29 to i64
  %35 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 %34
  br label %36

36:                                               ; preds = %27, %31
  %37 = phi %struct.TfLiteTensor* [ %35, %31 ], [ null, %27 ]
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %11, i64 0, i32 1, i64 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %43 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %42, align 8
  %44 = sext i32 %39 to i64
  %45 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %43, i64 %44
  br label %46

46:                                               ; preds = %36, %41
  %47 = phi %struct.TfLiteTensor* [ %45, %41 ], [ null, %36 ]
  %48 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %20, i64 0, i32 1, i64 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %53 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %52, align 8
  %54 = sext i32 %49 to i64
  %55 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %53, i64 %54
  br label %56

56:                                               ; preds = %46, %51
  %57 = phi %struct.TfLiteTensor* [ %55, %51 ], [ null, %46 ]
  %58 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %47, i64 0, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %59, %61
  br i1 %62, label %69, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %65 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %64, align 8
  %66 = tail call i8* @TfLiteTypeGetName(i32 %59) #11
  %67 = load i32, i32* %60, align 8
  %68 = tail call i8* @TfLiteTypeGetName(i32 %67) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %65(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 209, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0), i8* %66, i8* %68) #11
  br label %100

69:                                               ; preds = %56
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 0
  store i32 %59, i32* %70, align 8
  %71 = tail call zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor* %37, %struct.TfLiteTensor* %47) #11
  %72 = xor i1 %71, true
  %73 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %6, i64 0, i32 0
  %74 = zext i1 %72 to i8
  store i8 %74, i8* %73, align 4
  %75 = bitcast %struct.TfLiteIntArray** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #11
  store %struct.TfLiteIntArray* null, %struct.TfLiteIntArray** %3, align 8
  %76 = load i8, i8* %73, align 4, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %69
  %79 = call i32 @_ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %37, %struct.TfLiteTensor* %47, %struct.TfLiteIntArray** nonnull %3) #11
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %85, label %98

81:                                               ; preds = %69
  %82 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 0, i32 2
  %83 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %82, align 8
  %84 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %83) #11
  store %struct.TfLiteIntArray* %84, %struct.TfLiteIntArray** %3, align 8
  br label %85

85:                                               ; preds = %78, %81
  %86 = load i32, i32* %70, align 8
  switch i32 %86, label %93 [
    i32 3, label %87
    i32 9, label %87
    i32 7, label %90
  ]

87:                                               ; preds = %85, %85
  %88 = call i32 @_ZN6tflite3ops7builtin3sub16Prepare8BitSubOpEP13TfLiteContextPK12TfLiteTensorS7_PS5_P15TfLiteSubParamsPNS2_6OpDataEi(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %37, %struct.TfLiteTensor* %47, %struct.TfLiteTensor* %57, %struct.TfLiteSubParams* %9, %"struct.tflite::ops::builtin::sub::OpData"* %6, i32 -1)
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %93, label %98

90:                                               ; preds = %85
  %91 = call i32 @_ZN6tflite3ops7builtin3sub17PrepareInt16SubOpEP13TfLiteContextPK12TfLiteTensorS7_PS5_P15TfLiteSubParamsPNS2_6OpDataE(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %37, %struct.TfLiteTensor* %47, %struct.TfLiteTensor* %57, %struct.TfLiteSubParams* %9, %"struct.tflite::ops::builtin::sub::OpData"* %6)
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %98

93:                                               ; preds = %85, %90, %87
  %94 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %95 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %94, align 8
  %96 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %97 = call i32 %95(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %57, %struct.TfLiteIntArray* %96) #11
  br label %98

98:                                               ; preds = %78, %87, %90, %93
  %99 = phi i32 [ %97, %93 ], [ %88, %87 ], [ %91, %90 ], [ %79, %78 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #11
  br label %100

100:                                              ; preds = %63, %98, %24, %15
  %101 = phi i32 [ 1, %15 ], [ 1, %24 ], [ 1, %63 ], [ %99, %98 ]
  ret i32 %101
}

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #5

declare zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #5

declare i32 @_ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray(%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteIntArray**) local_unnamed_addr #5

declare %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin16Register_SUB_REFEv() local_unnamed_addr #6 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin16Register_SUB_REFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin3sub4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #3 comdat {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %4 = bitcast i8** %3 to %struct.TfLiteSubParams**
  %5 = load %struct.TfLiteSubParams*, %struct.TfLiteSubParams** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %7 = bitcast i8** %6 to %"struct.tflite::ops::builtin::sub::OpData"**
  %8 = load %"struct.tflite::ops::builtin::sub::OpData"*, %"struct.tflite::ops::builtin::sub::OpData"** %7, align 8
  %9 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %10 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %9, align 8
  %11 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %16 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 %17
  br label %19

19:                                               ; preds = %2, %14
  %20 = phi %struct.TfLiteTensor* [ %18, %14 ], [ null, %2 ]
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %19, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %19 ]
  %31 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %32 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %31, align 8
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %38 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %37, align 8
  %39 = sext i32 %34 to i64
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 %39
  br label %41

41:                                               ; preds = %29, %36
  %42 = phi %struct.TfLiteTensor* [ %40, %36 ], [ null, %29 ]
  %43 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  switch i32 %44, label %56 [
    i32 1, label %45
    i32 2, label %45
    i32 3, label %55
    i32 9, label %55
    i32 7, label %55
  ]

45:                                               ; preds = %41, %41
  %46 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %8, i64 0, i32 0
  %47 = load i8, i8* %46, align 4, !range !2
  %48 = icmp ne i8 %47, 0
  switch i32 %44, label %51 [
    i32 2, label %49
    i32 1, label %50
  ]

49:                                               ; preds = %45
  tail call void @_ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE0EiEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteSubParams* %5, %"struct.tflite::ops::builtin::sub::OpData"* %8, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, i1 zeroext %48, %struct.TfLiteTensor* %42) #11
  br label %59

50:                                               ; preds = %45
  tail call void @_ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE0EfEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteSubParams* %5, %"struct.tflite::ops::builtin::sub::OpData"* %8, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, i1 zeroext %48, %struct.TfLiteTensor* %42) #11
  br label %59

51:                                               ; preds = %45
  %52 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %53 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %52, align 8
  %54 = tail call i8* @TfLiteTypeGetName(i32 %44) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %53(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.31, i64 0, i64 0), i8* %54) #11
  br label %59

55:                                               ; preds = %41, %41, %41
  tail call void @_ZN6tflite3ops7builtin3sub13EvalQuantizedILNS2_10KernelTypeE0EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteSubParams* %5, %"struct.tflite::ops::builtin::sub::OpData"* %8, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, %struct.TfLiteTensor* %42)
  br label %59

56:                                               ; preds = %41
  %57 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %58 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %57, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %58(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.30, i64 0, i64 0), i32 %44) #11
  br label %59

59:                                               ; preds = %51, %50, %49, %55, %56
  %60 = phi i32 [ 1, %56 ], [ 0, %55 ], [ 0, %49 ], [ 0, %50 ], [ 0, %51 ]
  ret i32 %60
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin24Register_SUB_GENERIC_OPTEv() local_unnamed_addr #6 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin24Register_SUB_GENERIC_OPTEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin3sub4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #3 comdat {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %4 = bitcast i8** %3 to %struct.TfLiteSubParams**
  %5 = load %struct.TfLiteSubParams*, %struct.TfLiteSubParams** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %7 = bitcast i8** %6 to %"struct.tflite::ops::builtin::sub::OpData"**
  %8 = load %"struct.tflite::ops::builtin::sub::OpData"*, %"struct.tflite::ops::builtin::sub::OpData"** %7, align 8
  %9 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %10 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %9, align 8
  %11 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %16 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 %17
  br label %19

19:                                               ; preds = %2, %14
  %20 = phi %struct.TfLiteTensor* [ %18, %14 ], [ null, %2 ]
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %19, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %19 ]
  %31 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %32 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %31, align 8
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %38 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %37, align 8
  %39 = sext i32 %34 to i64
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 %39
  br label %41

41:                                               ; preds = %29, %36
  %42 = phi %struct.TfLiteTensor* [ %40, %36 ], [ null, %29 ]
  %43 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  switch i32 %44, label %56 [
    i32 1, label %45
    i32 2, label %45
    i32 3, label %55
    i32 9, label %55
    i32 7, label %55
  ]

45:                                               ; preds = %41, %41
  %46 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %8, i64 0, i32 0
  %47 = load i8, i8* %46, align 4, !range !2
  %48 = icmp ne i8 %47, 0
  switch i32 %44, label %51 [
    i32 2, label %49
    i32 1, label %50
  ]

49:                                               ; preds = %45
  tail call void @_ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE1EiEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteSubParams* %5, %"struct.tflite::ops::builtin::sub::OpData"* %8, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, i1 zeroext %48, %struct.TfLiteTensor* %42) #11
  br label %59

50:                                               ; preds = %45
  tail call void @_ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE1EfEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteSubParams* %5, %"struct.tflite::ops::builtin::sub::OpData"* %8, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, i1 zeroext %48, %struct.TfLiteTensor* %42) #11
  br label %59

51:                                               ; preds = %45
  %52 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %53 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %52, align 8
  %54 = tail call i8* @TfLiteTypeGetName(i32 %44) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %53(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.31, i64 0, i64 0), i8* %54) #11
  br label %59

55:                                               ; preds = %41, %41, %41
  tail call void @_ZN6tflite3ops7builtin3sub13EvalQuantizedILNS2_10KernelTypeE1EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteSubParams* %5, %"struct.tflite::ops::builtin::sub::OpData"* %8, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, %struct.TfLiteTensor* %42)
  br label %59

56:                                               ; preds = %41
  %57 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %58 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %57, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %58(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.30, i64 0, i64 0), i32 %44) #11
  br label %59

59:                                               ; preds = %51, %50, %49, %55, %56
  %60 = phi i32 [ 1, %56 ], [ 0, %55 ], [ 0, %49 ], [ 0, %50 ], [ 0, %51 ]
  ret i32 %60
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin21Register_SUB_NEON_OPTEv() local_unnamed_addr #6 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin21Register_SUB_NEON_OPTEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin3sub4EvalILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #3 comdat {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %4 = bitcast i8** %3 to %struct.TfLiteSubParams**
  %5 = load %struct.TfLiteSubParams*, %struct.TfLiteSubParams** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %7 = bitcast i8** %6 to %"struct.tflite::ops::builtin::sub::OpData"**
  %8 = load %"struct.tflite::ops::builtin::sub::OpData"*, %"struct.tflite::ops::builtin::sub::OpData"** %7, align 8
  %9 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %10 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %9, align 8
  %11 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %16 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 %17
  br label %19

19:                                               ; preds = %2, %14
  %20 = phi %struct.TfLiteTensor* [ %18, %14 ], [ null, %2 ]
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %10, i64 0, i32 1, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %19, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %19 ]
  %31 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %32 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %31, align 8
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %38 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %37, align 8
  %39 = sext i32 %34 to i64
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 %39
  br label %41

41:                                               ; preds = %29, %36
  %42 = phi %struct.TfLiteTensor* [ %40, %36 ], [ null, %29 ]
  %43 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  switch i32 %44, label %56 [
    i32 1, label %45
    i32 2, label %45
    i32 3, label %55
    i32 9, label %55
    i32 7, label %55
  ]

45:                                               ; preds = %41, %41
  %46 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %8, i64 0, i32 0
  %47 = load i8, i8* %46, align 4, !range !2
  %48 = icmp ne i8 %47, 0
  switch i32 %44, label %51 [
    i32 2, label %49
    i32 1, label %50
  ]

49:                                               ; preds = %45
  tail call void @_ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE2EiEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteSubParams* %5, %"struct.tflite::ops::builtin::sub::OpData"* %8, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, i1 zeroext %48, %struct.TfLiteTensor* %42) #11
  br label %59

50:                                               ; preds = %45
  tail call void @_ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE2EfEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteSubParams* %5, %"struct.tflite::ops::builtin::sub::OpData"* %8, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, i1 zeroext %48, %struct.TfLiteTensor* %42) #11
  br label %59

51:                                               ; preds = %45
  %52 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %53 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %52, align 8
  %54 = tail call i8* @TfLiteTypeGetName(i32 %44) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %53(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.31, i64 0, i64 0), i8* %54) #11
  br label %59

55:                                               ; preds = %41, %41, %41
  tail call void @_ZN6tflite3ops7builtin3sub13EvalQuantizedILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteSubParams* %5, %"struct.tflite::ops::builtin::sub::OpData"* %8, %struct.TfLiteTensor* %20, %struct.TfLiteTensor* %30, %struct.TfLiteTensor* %42)
  br label %59

56:                                               ; preds = %41
  %57 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %58 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %57, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %58(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.30, i64 0, i64 0), i32 %44) #11
  br label %59

59:                                               ; preds = %51, %50, %49, %55, %56
  %60 = phi i32 [ 1, %56 ], [ 0, %55 ], [ 0, %49 ], [ 0, %50 ], [ 0, %51 ]
  ret i32 %60
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin12Register_SUBEv() local_unnamed_addr #6 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin24Register_SUB_GENERIC_OPTEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin3sub13EvalQuantizedILNS2_10KernelTypeE0EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteSubParams*, %"struct.tflite::ops::builtin::sub::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %8 = alloca %"struct.tflite::ArithmeticParams", align 4
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"class.tflite::RuntimeShape", align 8
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca %"class.tflite::RuntimeShape", align 8
  %22 = alloca %"class.tflite::RuntimeShape", align 8
  %23 = alloca %"class.tflite::RuntimeShape", align 8
  %24 = alloca %"class.tflite::RuntimeShape", align 8
  %25 = alloca %"class.tflite::RuntimeShape", align 8
  %26 = alloca %"class.tflite::RuntimeShape", align 8
  %27 = alloca %"class.tflite::RuntimeShape", align 8
  %28 = alloca %"class.tflite::RuntimeShape", align 8
  %29 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %29) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %29, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3sub13EvalQuantizedILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.op_params, i64 0, i32 0), i64 80, i1 false)
  %30 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 9
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 6
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 10
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 1
  store i32 %34, i32* %35, align 4
  %36 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 7
  store i32 %37, i32* %38, align 4
  %39 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 8
  store i32 %40, i32* %41, align 4
  %42 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 11
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 2
  store i32 %43, i32* %44, align 4
  %45 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 6
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 9
  store i32 %46, i32* %47, align 4
  %48 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 10
  store i32 %49, i32* %50, align 4
  %51 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 12
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 3
  store i32 %52, i32* %53, align 4
  %54 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 7
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 4
  store i32 %55, i32* %56, align 4
  %57 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 8
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 5
  store i32 %58, i32* %59, align 4
  %60 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 3
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 4
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 11
  store i32 %61, i32* %64, align 4
  %65 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 12
  store i32 %63, i32* %65, align 4
  %66 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %66) #11
  %67 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %67, label %68, label %70

68:                                               ; preds = %7
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %69, align 8, !alias.scope !3
  br label %95

70:                                               ; preds = %7
  %71 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %72 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %71, align 8, !noalias !3
  %73 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %72, i64 0, i32 0
  %74 = load i32, i32* %73, align 4, !noalias !3
  %75 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %72, i64 0, i32 1, i64 0
  %76 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %74, i32* %76, align 8, !alias.scope !3
  %77 = icmp sgt i32 %74, 5
  br i1 %77, label %78, label %85

78:                                               ; preds = %70
  %79 = sext i32 %74 to i64
  %80 = shl nsw i64 %79, 2
  %81 = tail call i8* @_Znam(i64 %80) #10, !noalias !3
  %82 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %83 = bitcast i32** %82 to i8**
  store i8* %81, i8** %83, align 8, !alias.scope !3
  %84 = bitcast i8* %81 to i32*
  br label %90

85:                                               ; preds = %70
  %86 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %87 = bitcast %union.anon* %86 to i32*
  %88 = sext i32 %74 to i64
  %89 = shl nsw i64 %88, 2
  br label %90

90:                                               ; preds = %85, %78
  %91 = phi i64 [ %80, %78 ], [ %89, %85 ]
  %92 = phi i32* [ %84, %78 ], [ %87, %85 ]
  %93 = bitcast i32* %92 to i8*
  %94 = bitcast i32* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %94, i64 %91, i1 false) #11
  br label %95

95:                                               ; preds = %68, %90
  %96 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %96) #11
  %97 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %97, label %98, label %100

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %99, align 8, !alias.scope !6
  br label %125

100:                                              ; preds = %95
  %101 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %102 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %101, align 8, !noalias !6
  %103 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %102, i64 0, i32 0
  %104 = load i32, i32* %103, align 4, !noalias !6
  %105 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %102, i64 0, i32 1, i64 0
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %104, i32* %106, align 8, !alias.scope !6
  %107 = icmp sgt i32 %104, 5
  br i1 %107, label %108, label %115

108:                                              ; preds = %100
  %109 = sext i32 %104 to i64
  %110 = shl nsw i64 %109, 2
  %111 = tail call i8* @_Znam(i64 %110) #10, !noalias !6
  %112 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %113 = bitcast i32** %112 to i8**
  store i8* %111, i8** %113, align 8, !alias.scope !6
  %114 = bitcast i8* %111 to i32*
  br label %120

115:                                              ; preds = %100
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %117 = bitcast %union.anon* %116 to i32*
  %118 = sext i32 %104 to i64
  %119 = shl nsw i64 %118, 2
  br label %120

120:                                              ; preds = %115, %108
  %121 = phi i64 [ %110, %108 ], [ %119, %115 ]
  %122 = phi i32* [ %114, %108 ], [ %117, %115 ]
  %123 = bitcast i32* %122 to i8*
  %124 = bitcast i32* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %123, i8* align 4 %124, i64 %121, i1 false) #11
  br label %125

125:                                              ; preds = %98, %120
  %126 = call zeroext i1 @_ZN6tflite13reference_ops22ProcessBroadcastShapesERKNS_12RuntimeShapeES3_PNS_16ArithmeticParamsE(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, %"struct.tflite::ArithmeticParams"* nonnull %8)
  %127 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = icmp sgt i32 %128, 5
  br i1 %129, label %130, label %136

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %132 = load i32*, i32** %131, align 8
  %133 = icmp eq i32* %132, null
  br i1 %133, label %136, label %134

134:                                              ; preds = %130
  %135 = bitcast i32* %132 to i8*
  call void @_ZdaPv(i8* %135) #10
  br label %136

136:                                              ; preds = %125, %130, %134
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %96) #11
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %138 = load i32, i32* %137, align 8
  %139 = icmp sgt i32 %138, 5
  br i1 %139, label %140, label %146

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %142 = load i32*, i32** %141, align 8
  %143 = icmp eq i32* %142, null
  br i1 %143, label %146, label %144

144:                                              ; preds = %140
  %145 = bitcast i32* %142 to i8*
  call void @_ZdaPv(i8* %145) #10
  br label %146

146:                                              ; preds = %136, %140, %144
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %66) #11
  %147 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 0
  %148 = load i32, i32* %147, align 8
  switch i32 %148, label %1331 [
    i32 9, label %149
    i32 3, label %740
  ]

149:                                              ; preds = %146
  br i1 %126, label %150, label %280

150:                                              ; preds = %149
  %151 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %151) #11
  br i1 %67, label %152, label %154

152:                                              ; preds = %150
  %153 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %153, align 8, !alias.scope !9
  br label %182

154:                                              ; preds = %150
  %155 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %156 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %155, align 8, !noalias !9
  %157 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %156, i64 0, i32 0
  %158 = load i32, i32* %157, align 4, !noalias !9
  %159 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %156, i64 0, i32 1, i64 0
  %160 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %158, i32* %160, align 8, !alias.scope !9
  %161 = icmp sgt i32 %158, 5
  br i1 %161, label %162, label %169

162:                                              ; preds = %154
  %163 = sext i32 %158 to i64
  %164 = shl nsw i64 %163, 2
  %165 = call i8* @_Znam(i64 %164) #10, !noalias !9
  %166 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %167 = bitcast i32** %166 to i8**
  store i8* %165, i8** %167, align 8, !alias.scope !9
  %168 = bitcast i8* %165 to i32*
  br label %174

169:                                              ; preds = %154
  %170 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %171 = bitcast %union.anon* %170 to i32*
  %172 = sext i32 %158 to i64
  %173 = shl nsw i64 %172, 2
  br label %174

174:                                              ; preds = %169, %162
  %175 = phi i64 [ %164, %162 ], [ %173, %169 ]
  %176 = phi i32* [ %168, %162 ], [ %171, %169 ]
  %177 = bitcast i32* %176 to i8*
  %178 = bitcast i32* %159 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %177, i8* align 4 %178, i64 %175, i1 false) #11
  %179 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %180 = bitcast %union.TfLitePtrUnion* %179 to i8**
  %181 = load i8*, i8** %180, align 8
  br label %182

182:                                              ; preds = %152, %174
  %183 = phi i8* [ %181, %174 ], [ null, %152 ]
  %184 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %184) #11
  br i1 %97, label %185, label %187

185:                                              ; preds = %182
  %186 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %186, align 8, !alias.scope !12
  br label %215

187:                                              ; preds = %182
  %188 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %189 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %188, align 8, !noalias !12
  %190 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %189, i64 0, i32 0
  %191 = load i32, i32* %190, align 4, !noalias !12
  %192 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %189, i64 0, i32 1, i64 0
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %191, i32* %193, align 8, !alias.scope !12
  %194 = icmp sgt i32 %191, 5
  br i1 %194, label %195, label %202

195:                                              ; preds = %187
  %196 = sext i32 %191 to i64
  %197 = shl nsw i64 %196, 2
  %198 = call i8* @_Znam(i64 %197) #10, !noalias !12
  %199 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %200 = bitcast i32** %199 to i8**
  store i8* %198, i8** %200, align 8, !alias.scope !12
  %201 = bitcast i8* %198 to i32*
  br label %207

202:                                              ; preds = %187
  %203 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %204 = bitcast %union.anon* %203 to i32*
  %205 = sext i32 %191 to i64
  %206 = shl nsw i64 %205, 2
  br label %207

207:                                              ; preds = %202, %195
  %208 = phi i64 [ %197, %195 ], [ %206, %202 ]
  %209 = phi i32* [ %201, %195 ], [ %204, %202 ]
  %210 = bitcast i32* %209 to i8*
  %211 = bitcast i32* %192 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %210, i8* align 4 %211, i64 %208, i1 false) #11
  %212 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %213 = bitcast %union.TfLitePtrUnion* %212 to i8**
  %214 = load i8*, i8** %213, align 8
  br label %215

215:                                              ; preds = %185, %207
  %216 = phi i8* [ %214, %207 ], [ null, %185 ]
  %217 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %217) #11
  %218 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %218, label %219, label %221

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %220, align 8, !alias.scope !15
  br label %249

221:                                              ; preds = %215
  %222 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %223 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %222, align 8, !noalias !15
  %224 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %223, i64 0, i32 0
  %225 = load i32, i32* %224, align 4, !noalias !15
  %226 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %223, i64 0, i32 1, i64 0
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %225, i32* %227, align 8, !alias.scope !15
  %228 = icmp sgt i32 %225, 5
  br i1 %228, label %229, label %236

229:                                              ; preds = %221
  %230 = sext i32 %225 to i64
  %231 = shl nsw i64 %230, 2
  %232 = call i8* @_Znam(i64 %231) #10, !noalias !15
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %234 = bitcast i32** %233 to i8**
  store i8* %232, i8** %234, align 8, !alias.scope !15
  %235 = bitcast i8* %232 to i32*
  br label %241

236:                                              ; preds = %221
  %237 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %238 = bitcast %union.anon* %237 to i32*
  %239 = sext i32 %225 to i64
  %240 = shl nsw i64 %239, 2
  br label %241

241:                                              ; preds = %236, %229
  %242 = phi i64 [ %231, %229 ], [ %240, %236 ]
  %243 = phi i32* [ %235, %229 ], [ %238, %236 ]
  %244 = bitcast i32* %243 to i8*
  %245 = bitcast i32* %226 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %244, i8* align 4 %245, i64 %242, i1 false) #11
  %246 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %247 = bitcast %union.TfLitePtrUnion* %246 to i8**
  %248 = load i8*, i8** %247, align 8
  br label %249

249:                                              ; preds = %219, %241
  %250 = phi i8* [ %248, %241 ], [ null, %219 ]
  call void @_ZN6tflite21reference_integer_ops18BroadcastAdd4DSlowERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKaS6_S8_S6_Pa(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i8* %183, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i8* %216, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i8* %250)
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %252 = load i32, i32* %251, align 8
  %253 = icmp sgt i32 %252, 5
  br i1 %253, label %254, label %260

254:                                              ; preds = %249
  %255 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %256 = load i32*, i32** %255, align 8
  %257 = icmp eq i32* %256, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %254
  %259 = bitcast i32* %256 to i8*
  call void @_ZdaPv(i8* %259) #10
  br label %260

260:                                              ; preds = %249, %254, %258
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %217) #11
  %261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %262 = load i32, i32* %261, align 8
  %263 = icmp sgt i32 %262, 5
  br i1 %263, label %264, label %270

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %266 = load i32*, i32** %265, align 8
  %267 = icmp eq i32* %266, null
  br i1 %267, label %270, label %268

268:                                              ; preds = %264
  %269 = bitcast i32* %266 to i8*
  call void @_ZdaPv(i8* %269) #10
  br label %270

270:                                              ; preds = %260, %264, %268
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %184) #11
  %271 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %272 = load i32, i32* %271, align 8
  %273 = icmp sgt i32 %272, 5
  br i1 %273, label %274, label %1592

274:                                              ; preds = %270
  %275 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %276 = load i32*, i32** %275, align 8
  %277 = icmp eq i32* %276, null
  br i1 %277, label %1592, label %278

278:                                              ; preds = %274
  %279 = bitcast i32* %276 to i8*
  call void @_ZdaPv(i8* %279) #10
  br label %1592

280:                                              ; preds = %149
  %281 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %281) #11
  br i1 %67, label %282, label %284

282:                                              ; preds = %280
  %283 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %283, align 8, !alias.scope !18
  br label %312

284:                                              ; preds = %280
  %285 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %286 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %285, align 8, !noalias !18
  %287 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %286, i64 0, i32 0
  %288 = load i32, i32* %287, align 4, !noalias !18
  %289 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %286, i64 0, i32 1, i64 0
  %290 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %288, i32* %290, align 8, !alias.scope !18
  %291 = icmp sgt i32 %288, 5
  br i1 %291, label %292, label %299

292:                                              ; preds = %284
  %293 = sext i32 %288 to i64
  %294 = shl nsw i64 %293, 2
  %295 = call i8* @_Znam(i64 %294) #10, !noalias !18
  %296 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %297 = bitcast i32** %296 to i8**
  store i8* %295, i8** %297, align 8, !alias.scope !18
  %298 = bitcast i8* %295 to i32*
  br label %304

299:                                              ; preds = %284
  %300 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %301 = bitcast %union.anon* %300 to i32*
  %302 = sext i32 %288 to i64
  %303 = shl nsw i64 %302, 2
  br label %304

304:                                              ; preds = %299, %292
  %305 = phi i64 [ %294, %292 ], [ %303, %299 ]
  %306 = phi i32* [ %298, %292 ], [ %301, %299 ]
  %307 = bitcast i32* %306 to i8*
  %308 = bitcast i32* %289 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %307, i8* align 4 %308, i64 %305, i1 false) #11
  %309 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %310 = bitcast %union.TfLitePtrUnion* %309 to i8**
  %311 = load i8*, i8** %310, align 8
  br label %312

312:                                              ; preds = %282, %304
  %313 = phi i32 [ %288, %304 ], [ 0, %282 ]
  %314 = phi i8* [ %311, %304 ], [ null, %282 ]
  %315 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %315) #11
  br i1 %97, label %316, label %318

316:                                              ; preds = %312
  %317 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %317, align 8, !alias.scope !21
  br label %346

318:                                              ; preds = %312
  %319 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %320 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %319, align 8, !noalias !21
  %321 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %320, i64 0, i32 0
  %322 = load i32, i32* %321, align 4, !noalias !21
  %323 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %320, i64 0, i32 1, i64 0
  %324 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %322, i32* %324, align 8, !alias.scope !21
  %325 = icmp sgt i32 %322, 5
  br i1 %325, label %326, label %333

326:                                              ; preds = %318
  %327 = sext i32 %322 to i64
  %328 = shl nsw i64 %327, 2
  %329 = call i8* @_Znam(i64 %328) #10, !noalias !21
  %330 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %331 = bitcast i32** %330 to i8**
  store i8* %329, i8** %331, align 8, !alias.scope !21
  %332 = bitcast i8* %329 to i32*
  br label %338

333:                                              ; preds = %318
  %334 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %335 = bitcast %union.anon* %334 to i32*
  %336 = sext i32 %322 to i64
  %337 = shl nsw i64 %336, 2
  br label %338

338:                                              ; preds = %333, %326
  %339 = phi i64 [ %328, %326 ], [ %337, %333 ]
  %340 = phi i32* [ %332, %326 ], [ %335, %333 ]
  %341 = bitcast i32* %340 to i8*
  %342 = bitcast i32* %323 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %341, i8* align 4 %342, i64 %339, i1 false) #11
  %343 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %344 = bitcast %union.TfLitePtrUnion* %343 to i8**
  %345 = load i8*, i8** %344, align 8
  br label %346

346:                                              ; preds = %316, %338
  %347 = phi i32 [ %322, %338 ], [ 0, %316 ]
  %348 = phi i8* [ %345, %338 ], [ null, %316 ]
  %349 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %349) #11
  %350 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %350, label %351, label %353

351:                                              ; preds = %346
  %352 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %352, align 8, !alias.scope !24
  br label %381

353:                                              ; preds = %346
  %354 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %355 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %354, align 8, !noalias !24
  %356 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %355, i64 0, i32 0
  %357 = load i32, i32* %356, align 4, !noalias !24
  %358 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %355, i64 0, i32 1, i64 0
  %359 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %357, i32* %359, align 8, !alias.scope !24
  %360 = icmp sgt i32 %357, 5
  br i1 %360, label %361, label %368

361:                                              ; preds = %353
  %362 = sext i32 %357 to i64
  %363 = shl nsw i64 %362, 2
  %364 = call i8* @_Znam(i64 %363) #10, !noalias !24
  %365 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %366 = bitcast i32** %365 to i8**
  store i8* %364, i8** %366, align 8, !alias.scope !24
  %367 = bitcast i8* %364 to i32*
  br label %373

368:                                              ; preds = %353
  %369 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %370 = bitcast %union.anon* %369 to i32*
  %371 = sext i32 %357 to i64
  %372 = shl nsw i64 %371, 2
  br label %373

373:                                              ; preds = %368, %361
  %374 = phi i64 [ %363, %361 ], [ %372, %368 ]
  %375 = phi i32* [ %367, %361 ], [ %370, %368 ]
  %376 = bitcast i32* %375 to i8*
  %377 = bitcast i32* %358 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %376, i8* align 4 %377, i64 %374, i1 false) #11
  %378 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %379 = bitcast %union.TfLitePtrUnion* %378 to i8**
  %380 = load i8*, i8** %379, align 8
  br label %381

381:                                              ; preds = %351, %373
  %382 = phi i32 [ %357, %373 ], [ 0, %351 ]
  %383 = phi i8* [ %380, %373 ], [ null, %351 ]
  %384 = icmp sgt i32 %313, 5
  %385 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  br i1 %384, label %386, label %389

386:                                              ; preds = %381
  %387 = getelementptr inbounds %union.anon, %union.anon* %385, i64 0, i32 0
  %388 = load i32*, i32** %387, align 8
  br label %392

389:                                              ; preds = %381
  %390 = bitcast %union.anon* %385 to i32*
  %391 = icmp sgt i32 %313, 0
  br i1 %391, label %392, label %492

392:                                              ; preds = %389, %386
  %393 = phi i32* [ %388, %386 ], [ %390, %389 ]
  %394 = zext i32 %313 to i64
  %395 = icmp ult i32 %313, 8
  br i1 %395, label %481, label %396

396:                                              ; preds = %392
  %397 = and i64 %394, 4294967288
  %398 = add nsw i64 %397, -8
  %399 = lshr exact i64 %398, 3
  %400 = add nuw nsw i64 %399, 1
  %401 = and i64 %400, 3
  %402 = icmp ult i64 %398, 24
  br i1 %402, label %448, label %403

403:                                              ; preds = %396
  %404 = sub nsw i64 %400, %401
  br label %405

405:                                              ; preds = %405, %403
  %406 = phi i64 [ 0, %403 ], [ %445, %405 ]
  %407 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %403 ], [ %443, %405 ]
  %408 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %403 ], [ %444, %405 ]
  %409 = phi i64 [ %404, %403 ], [ %446, %405 ]
  %410 = getelementptr inbounds i32, i32* %393, i64 %406
  %411 = bitcast i32* %410 to <4 x i32>*
  %412 = load <4 x i32>, <4 x i32>* %411, align 4
  %413 = getelementptr inbounds i32, i32* %410, i64 4
  %414 = bitcast i32* %413 to <4 x i32>*
  %415 = load <4 x i32>, <4 x i32>* %414, align 4
  %416 = mul nsw <4 x i32> %412, %407
  %417 = mul nsw <4 x i32> %415, %408
  %418 = or i64 %406, 8
  %419 = getelementptr inbounds i32, i32* %393, i64 %418
  %420 = bitcast i32* %419 to <4 x i32>*
  %421 = load <4 x i32>, <4 x i32>* %420, align 4
  %422 = getelementptr inbounds i32, i32* %419, i64 4
  %423 = bitcast i32* %422 to <4 x i32>*
  %424 = load <4 x i32>, <4 x i32>* %423, align 4
  %425 = mul nsw <4 x i32> %421, %416
  %426 = mul nsw <4 x i32> %424, %417
  %427 = or i64 %406, 16
  %428 = getelementptr inbounds i32, i32* %393, i64 %427
  %429 = bitcast i32* %428 to <4 x i32>*
  %430 = load <4 x i32>, <4 x i32>* %429, align 4
  %431 = getelementptr inbounds i32, i32* %428, i64 4
  %432 = bitcast i32* %431 to <4 x i32>*
  %433 = load <4 x i32>, <4 x i32>* %432, align 4
  %434 = mul nsw <4 x i32> %430, %425
  %435 = mul nsw <4 x i32> %433, %426
  %436 = or i64 %406, 24
  %437 = getelementptr inbounds i32, i32* %393, i64 %436
  %438 = bitcast i32* %437 to <4 x i32>*
  %439 = load <4 x i32>, <4 x i32>* %438, align 4
  %440 = getelementptr inbounds i32, i32* %437, i64 4
  %441 = bitcast i32* %440 to <4 x i32>*
  %442 = load <4 x i32>, <4 x i32>* %441, align 4
  %443 = mul nsw <4 x i32> %439, %434
  %444 = mul nsw <4 x i32> %442, %435
  %445 = add i64 %406, 32
  %446 = add i64 %409, -4
  %447 = icmp eq i64 %446, 0
  br i1 %447, label %448, label %405, !llvm.loop !27

448:                                              ; preds = %405, %396
  %449 = phi <4 x i32> [ undef, %396 ], [ %443, %405 ]
  %450 = phi <4 x i32> [ undef, %396 ], [ %444, %405 ]
  %451 = phi i64 [ 0, %396 ], [ %445, %405 ]
  %452 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %396 ], [ %443, %405 ]
  %453 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %396 ], [ %444, %405 ]
  %454 = icmp eq i64 %401, 0
  br i1 %454, label %471, label %455

455:                                              ; preds = %448, %455
  %456 = phi i64 [ %468, %455 ], [ %451, %448 ]
  %457 = phi <4 x i32> [ %466, %455 ], [ %452, %448 ]
  %458 = phi <4 x i32> [ %467, %455 ], [ %453, %448 ]
  %459 = phi i64 [ %469, %455 ], [ %401, %448 ]
  %460 = getelementptr inbounds i32, i32* %393, i64 %456
  %461 = bitcast i32* %460 to <4 x i32>*
  %462 = load <4 x i32>, <4 x i32>* %461, align 4
  %463 = getelementptr inbounds i32, i32* %460, i64 4
  %464 = bitcast i32* %463 to <4 x i32>*
  %465 = load <4 x i32>, <4 x i32>* %464, align 4
  %466 = mul nsw <4 x i32> %462, %457
  %467 = mul nsw <4 x i32> %465, %458
  %468 = add i64 %456, 8
  %469 = add i64 %459, -1
  %470 = icmp eq i64 %469, 0
  br i1 %470, label %471, label %455, !llvm.loop !29

471:                                              ; preds = %455, %448
  %472 = phi <4 x i32> [ %449, %448 ], [ %466, %455 ]
  %473 = phi <4 x i32> [ %450, %448 ], [ %467, %455 ]
  %474 = mul <4 x i32> %473, %472
  %475 = shufflevector <4 x i32> %474, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %476 = mul <4 x i32> %474, %475
  %477 = shufflevector <4 x i32> %476, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %478 = mul <4 x i32> %476, %477
  %479 = extractelement <4 x i32> %478, i32 0
  %480 = icmp eq i64 %397, %394
  br i1 %480, label %492, label %481

481:                                              ; preds = %471, %392
  %482 = phi i64 [ 0, %392 ], [ %397, %471 ]
  %483 = phi i32 [ 1, %392 ], [ %479, %471 ]
  br label %484

484:                                              ; preds = %481, %484
  %485 = phi i64 [ %490, %484 ], [ %482, %481 ]
  %486 = phi i32 [ %489, %484 ], [ %483, %481 ]
  %487 = getelementptr inbounds i32, i32* %393, i64 %485
  %488 = load i32, i32* %487, align 4
  %489 = mul nsw i32 %488, %486
  %490 = add nuw nsw i64 %485, 1
  %491 = icmp eq i64 %490, %394
  br i1 %491, label %492, label %484, !llvm.loop !31

492:                                              ; preds = %484, %471, %389
  %493 = phi i32 [ 1, %389 ], [ %479, %471 ], [ %489, %484 ]
  %494 = icmp sgt i32 %347, 5
  %495 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  br i1 %494, label %496, label %499

496:                                              ; preds = %492
  %497 = getelementptr inbounds %union.anon, %union.anon* %495, i64 0, i32 0
  %498 = load i32*, i32** %497, align 8
  br label %502

499:                                              ; preds = %492
  %500 = bitcast %union.anon* %495 to i32*
  %501 = icmp sgt i32 %347, 0
  br i1 %501, label %502, label %602

502:                                              ; preds = %499, %496
  %503 = phi i32* [ %498, %496 ], [ %500, %499 ]
  %504 = zext i32 %347 to i64
  %505 = icmp ult i32 %347, 8
  br i1 %505, label %591, label %506

506:                                              ; preds = %502
  %507 = and i64 %504, 4294967288
  %508 = add nsw i64 %507, -8
  %509 = lshr exact i64 %508, 3
  %510 = add nuw nsw i64 %509, 1
  %511 = and i64 %510, 3
  %512 = icmp ult i64 %508, 24
  br i1 %512, label %558, label %513

513:                                              ; preds = %506
  %514 = sub nsw i64 %510, %511
  br label %515

515:                                              ; preds = %515, %513
  %516 = phi i64 [ 0, %513 ], [ %555, %515 ]
  %517 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %513 ], [ %553, %515 ]
  %518 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %513 ], [ %554, %515 ]
  %519 = phi i64 [ %514, %513 ], [ %556, %515 ]
  %520 = getelementptr inbounds i32, i32* %503, i64 %516
  %521 = bitcast i32* %520 to <4 x i32>*
  %522 = load <4 x i32>, <4 x i32>* %521, align 4
  %523 = getelementptr inbounds i32, i32* %520, i64 4
  %524 = bitcast i32* %523 to <4 x i32>*
  %525 = load <4 x i32>, <4 x i32>* %524, align 4
  %526 = mul nsw <4 x i32> %522, %517
  %527 = mul nsw <4 x i32> %525, %518
  %528 = or i64 %516, 8
  %529 = getelementptr inbounds i32, i32* %503, i64 %528
  %530 = bitcast i32* %529 to <4 x i32>*
  %531 = load <4 x i32>, <4 x i32>* %530, align 4
  %532 = getelementptr inbounds i32, i32* %529, i64 4
  %533 = bitcast i32* %532 to <4 x i32>*
  %534 = load <4 x i32>, <4 x i32>* %533, align 4
  %535 = mul nsw <4 x i32> %531, %526
  %536 = mul nsw <4 x i32> %534, %527
  %537 = or i64 %516, 16
  %538 = getelementptr inbounds i32, i32* %503, i64 %537
  %539 = bitcast i32* %538 to <4 x i32>*
  %540 = load <4 x i32>, <4 x i32>* %539, align 4
  %541 = getelementptr inbounds i32, i32* %538, i64 4
  %542 = bitcast i32* %541 to <4 x i32>*
  %543 = load <4 x i32>, <4 x i32>* %542, align 4
  %544 = mul nsw <4 x i32> %540, %535
  %545 = mul nsw <4 x i32> %543, %536
  %546 = or i64 %516, 24
  %547 = getelementptr inbounds i32, i32* %503, i64 %546
  %548 = bitcast i32* %547 to <4 x i32>*
  %549 = load <4 x i32>, <4 x i32>* %548, align 4
  %550 = getelementptr inbounds i32, i32* %547, i64 4
  %551 = bitcast i32* %550 to <4 x i32>*
  %552 = load <4 x i32>, <4 x i32>* %551, align 4
  %553 = mul nsw <4 x i32> %549, %544
  %554 = mul nsw <4 x i32> %552, %545
  %555 = add i64 %516, 32
  %556 = add i64 %519, -4
  %557 = icmp eq i64 %556, 0
  br i1 %557, label %558, label %515, !llvm.loop !33

558:                                              ; preds = %515, %506
  %559 = phi <4 x i32> [ undef, %506 ], [ %553, %515 ]
  %560 = phi <4 x i32> [ undef, %506 ], [ %554, %515 ]
  %561 = phi i64 [ 0, %506 ], [ %555, %515 ]
  %562 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %506 ], [ %553, %515 ]
  %563 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %506 ], [ %554, %515 ]
  %564 = icmp eq i64 %511, 0
  br i1 %564, label %581, label %565

565:                                              ; preds = %558, %565
  %566 = phi i64 [ %578, %565 ], [ %561, %558 ]
  %567 = phi <4 x i32> [ %576, %565 ], [ %562, %558 ]
  %568 = phi <4 x i32> [ %577, %565 ], [ %563, %558 ]
  %569 = phi i64 [ %579, %565 ], [ %511, %558 ]
  %570 = getelementptr inbounds i32, i32* %503, i64 %566
  %571 = bitcast i32* %570 to <4 x i32>*
  %572 = load <4 x i32>, <4 x i32>* %571, align 4
  %573 = getelementptr inbounds i32, i32* %570, i64 4
  %574 = bitcast i32* %573 to <4 x i32>*
  %575 = load <4 x i32>, <4 x i32>* %574, align 4
  %576 = mul nsw <4 x i32> %572, %567
  %577 = mul nsw <4 x i32> %575, %568
  %578 = add i64 %566, 8
  %579 = add i64 %569, -1
  %580 = icmp eq i64 %579, 0
  br i1 %580, label %581, label %565, !llvm.loop !34

581:                                              ; preds = %565, %558
  %582 = phi <4 x i32> [ %559, %558 ], [ %576, %565 ]
  %583 = phi <4 x i32> [ %560, %558 ], [ %577, %565 ]
  %584 = mul <4 x i32> %583, %582
  %585 = shufflevector <4 x i32> %584, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %586 = mul <4 x i32> %584, %585
  %587 = shufflevector <4 x i32> %586, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %588 = mul <4 x i32> %586, %587
  %589 = extractelement <4 x i32> %588, i32 0
  %590 = icmp eq i64 %507, %504
  br i1 %590, label %602, label %591

591:                                              ; preds = %581, %502
  %592 = phi i64 [ 0, %502 ], [ %507, %581 ]
  %593 = phi i32 [ 1, %502 ], [ %589, %581 ]
  br label %594

594:                                              ; preds = %591, %594
  %595 = phi i64 [ %600, %594 ], [ %592, %591 ]
  %596 = phi i32 [ %599, %594 ], [ %593, %591 ]
  %597 = getelementptr inbounds i32, i32* %503, i64 %595
  %598 = load i32, i32* %597, align 4
  %599 = mul nsw i32 %598, %596
  %600 = add nuw nsw i64 %595, 1
  %601 = icmp eq i64 %600, %504
  br i1 %601, label %602, label %594, !llvm.loop !35

602:                                              ; preds = %594, %581, %499
  %603 = phi i32 [ 1, %499 ], [ %589, %581 ], [ %599, %594 ]
  %604 = icmp sgt i32 %382, 5
  %605 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  br i1 %604, label %606, label %609

606:                                              ; preds = %602
  %607 = getelementptr inbounds %union.anon, %union.anon* %605, i64 0, i32 0
  %608 = load i32*, i32** %607, align 8
  br label %612

609:                                              ; preds = %602
  %610 = bitcast %union.anon* %605 to i32*
  %611 = icmp sgt i32 %382, 0
  br i1 %611, label %612, label %712

612:                                              ; preds = %609, %606
  %613 = phi i32* [ %608, %606 ], [ %610, %609 ]
  %614 = zext i32 %382 to i64
  %615 = icmp ult i32 %382, 8
  br i1 %615, label %701, label %616

616:                                              ; preds = %612
  %617 = and i64 %614, 4294967288
  %618 = add nsw i64 %617, -8
  %619 = lshr exact i64 %618, 3
  %620 = add nuw nsw i64 %619, 1
  %621 = and i64 %620, 3
  %622 = icmp ult i64 %618, 24
  br i1 %622, label %668, label %623

623:                                              ; preds = %616
  %624 = sub nsw i64 %620, %621
  br label %625

625:                                              ; preds = %625, %623
  %626 = phi i64 [ 0, %623 ], [ %665, %625 ]
  %627 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %623 ], [ %663, %625 ]
  %628 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %623 ], [ %664, %625 ]
  %629 = phi i64 [ %624, %623 ], [ %666, %625 ]
  %630 = getelementptr inbounds i32, i32* %613, i64 %626
  %631 = bitcast i32* %630 to <4 x i32>*
  %632 = load <4 x i32>, <4 x i32>* %631, align 4
  %633 = getelementptr inbounds i32, i32* %630, i64 4
  %634 = bitcast i32* %633 to <4 x i32>*
  %635 = load <4 x i32>, <4 x i32>* %634, align 4
  %636 = mul nsw <4 x i32> %632, %627
  %637 = mul nsw <4 x i32> %635, %628
  %638 = or i64 %626, 8
  %639 = getelementptr inbounds i32, i32* %613, i64 %638
  %640 = bitcast i32* %639 to <4 x i32>*
  %641 = load <4 x i32>, <4 x i32>* %640, align 4
  %642 = getelementptr inbounds i32, i32* %639, i64 4
  %643 = bitcast i32* %642 to <4 x i32>*
  %644 = load <4 x i32>, <4 x i32>* %643, align 4
  %645 = mul nsw <4 x i32> %641, %636
  %646 = mul nsw <4 x i32> %644, %637
  %647 = or i64 %626, 16
  %648 = getelementptr inbounds i32, i32* %613, i64 %647
  %649 = bitcast i32* %648 to <4 x i32>*
  %650 = load <4 x i32>, <4 x i32>* %649, align 4
  %651 = getelementptr inbounds i32, i32* %648, i64 4
  %652 = bitcast i32* %651 to <4 x i32>*
  %653 = load <4 x i32>, <4 x i32>* %652, align 4
  %654 = mul nsw <4 x i32> %650, %645
  %655 = mul nsw <4 x i32> %653, %646
  %656 = or i64 %626, 24
  %657 = getelementptr inbounds i32, i32* %613, i64 %656
  %658 = bitcast i32* %657 to <4 x i32>*
  %659 = load <4 x i32>, <4 x i32>* %658, align 4
  %660 = getelementptr inbounds i32, i32* %657, i64 4
  %661 = bitcast i32* %660 to <4 x i32>*
  %662 = load <4 x i32>, <4 x i32>* %661, align 4
  %663 = mul nsw <4 x i32> %659, %654
  %664 = mul nsw <4 x i32> %662, %655
  %665 = add i64 %626, 32
  %666 = add i64 %629, -4
  %667 = icmp eq i64 %666, 0
  br i1 %667, label %668, label %625, !llvm.loop !36

668:                                              ; preds = %625, %616
  %669 = phi <4 x i32> [ undef, %616 ], [ %663, %625 ]
  %670 = phi <4 x i32> [ undef, %616 ], [ %664, %625 ]
  %671 = phi i64 [ 0, %616 ], [ %665, %625 ]
  %672 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %616 ], [ %663, %625 ]
  %673 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %616 ], [ %664, %625 ]
  %674 = icmp eq i64 %621, 0
  br i1 %674, label %691, label %675

675:                                              ; preds = %668, %675
  %676 = phi i64 [ %688, %675 ], [ %671, %668 ]
  %677 = phi <4 x i32> [ %686, %675 ], [ %672, %668 ]
  %678 = phi <4 x i32> [ %687, %675 ], [ %673, %668 ]
  %679 = phi i64 [ %689, %675 ], [ %621, %668 ]
  %680 = getelementptr inbounds i32, i32* %613, i64 %676
  %681 = bitcast i32* %680 to <4 x i32>*
  %682 = load <4 x i32>, <4 x i32>* %681, align 4
  %683 = getelementptr inbounds i32, i32* %680, i64 4
  %684 = bitcast i32* %683 to <4 x i32>*
  %685 = load <4 x i32>, <4 x i32>* %684, align 4
  %686 = mul nsw <4 x i32> %682, %677
  %687 = mul nsw <4 x i32> %685, %678
  %688 = add i64 %676, 8
  %689 = add i64 %679, -1
  %690 = icmp eq i64 %689, 0
  br i1 %690, label %691, label %675, !llvm.loop !37

691:                                              ; preds = %675, %668
  %692 = phi <4 x i32> [ %669, %668 ], [ %686, %675 ]
  %693 = phi <4 x i32> [ %670, %668 ], [ %687, %675 ]
  %694 = mul <4 x i32> %693, %692
  %695 = shufflevector <4 x i32> %694, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %696 = mul <4 x i32> %694, %695
  %697 = shufflevector <4 x i32> %696, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %698 = mul <4 x i32> %696, %697
  %699 = extractelement <4 x i32> %698, i32 0
  %700 = icmp eq i64 %617, %614
  br i1 %700, label %712, label %701

701:                                              ; preds = %691, %612
  %702 = phi i64 [ 0, %612 ], [ %617, %691 ]
  %703 = phi i32 [ 1, %612 ], [ %699, %691 ]
  br label %704

704:                                              ; preds = %701, %704
  %705 = phi i64 [ %710, %704 ], [ %702, %701 ]
  %706 = phi i32 [ %709, %704 ], [ %703, %701 ]
  %707 = getelementptr inbounds i32, i32* %613, i64 %705
  %708 = load i32, i32* %707, align 4
  %709 = mul nsw i32 %708, %706
  %710 = add nuw nsw i64 %705, 1
  %711 = icmp eq i64 %710, %614
  br i1 %711, label %712, label %704, !llvm.loop !38

712:                                              ; preds = %704, %691, %609
  %713 = phi i32 [ 1, %609 ], [ %699, %691 ], [ %709, %704 ]
  %714 = icmp eq i32 %493, %603
  br i1 %714, label %716, label %715

715:                                              ; preds = %712
  call void @abort() #12
  unreachable

716:                                              ; preds = %712
  %717 = icmp eq i32 %493, %713
  br i1 %717, label %719, label %718

718:                                              ; preds = %716
  call void @abort() #12
  unreachable

719:                                              ; preds = %716
  call void @_ZN6tflite21reference_integer_ops14AddElementwiseEiRKNS_16ArithmeticParamsEPKaS5_Pa(i32 %493, %"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, i8* %314, i8* %348, i8* %383) #11
  br i1 %604, label %720, label %726

720:                                              ; preds = %719
  %721 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %722 = load i32*, i32** %721, align 8
  %723 = icmp eq i32* %722, null
  br i1 %723, label %726, label %724

724:                                              ; preds = %720
  %725 = bitcast i32* %722 to i8*
  call void @_ZdaPv(i8* %725) #10
  br label %726

726:                                              ; preds = %719, %720, %724
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %349) #11
  br i1 %494, label %727, label %733

727:                                              ; preds = %726
  %728 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %729 = load i32*, i32** %728, align 8
  %730 = icmp eq i32* %729, null
  br i1 %730, label %733, label %731

731:                                              ; preds = %727
  %732 = bitcast i32* %729 to i8*
  call void @_ZdaPv(i8* %732) #10
  br label %733

733:                                              ; preds = %726, %727, %731
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %315) #11
  br i1 %384, label %734, label %1592

734:                                              ; preds = %733
  %735 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %736 = load i32*, i32** %735, align 8
  %737 = icmp eq i32* %736, null
  br i1 %737, label %1592, label %738

738:                                              ; preds = %734
  %739 = bitcast i32* %736 to i8*
  call void @_ZdaPv(i8* %739) #10
  br label %1592

740:                                              ; preds = %146
  br i1 %126, label %741, label %871

741:                                              ; preds = %740
  %742 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %742) #11
  br i1 %67, label %743, label %745

743:                                              ; preds = %741
  %744 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %744, align 8, !alias.scope !39
  br label %773

745:                                              ; preds = %741
  %746 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %747 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %746, align 8, !noalias !39
  %748 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %747, i64 0, i32 0
  %749 = load i32, i32* %748, align 4, !noalias !39
  %750 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %747, i64 0, i32 1, i64 0
  %751 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %749, i32* %751, align 8, !alias.scope !39
  %752 = icmp sgt i32 %749, 5
  br i1 %752, label %753, label %760

753:                                              ; preds = %745
  %754 = sext i32 %749 to i64
  %755 = shl nsw i64 %754, 2
  %756 = call i8* @_Znam(i64 %755) #10, !noalias !39
  %757 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %758 = bitcast i32** %757 to i8**
  store i8* %756, i8** %758, align 8, !alias.scope !39
  %759 = bitcast i8* %756 to i32*
  br label %765

760:                                              ; preds = %745
  %761 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %762 = bitcast %union.anon* %761 to i32*
  %763 = sext i32 %749 to i64
  %764 = shl nsw i64 %763, 2
  br label %765

765:                                              ; preds = %760, %753
  %766 = phi i64 [ %755, %753 ], [ %764, %760 ]
  %767 = phi i32* [ %759, %753 ], [ %762, %760 ]
  %768 = bitcast i32* %767 to i8*
  %769 = bitcast i32* %750 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %768, i8* align 4 %769, i64 %766, i1 false) #11
  %770 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %771 = bitcast %union.TfLitePtrUnion* %770 to i8**
  %772 = load i8*, i8** %771, align 8
  br label %773

773:                                              ; preds = %743, %765
  %774 = phi i8* [ %772, %765 ], [ null, %743 ]
  %775 = bitcast %"class.tflite::RuntimeShape"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %775) #11
  br i1 %97, label %776, label %778

776:                                              ; preds = %773
  %777 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 0, i32* %777, align 8, !alias.scope !42
  br label %806

778:                                              ; preds = %773
  %779 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %780 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %779, align 8, !noalias !42
  %781 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %780, i64 0, i32 0
  %782 = load i32, i32* %781, align 4, !noalias !42
  %783 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %780, i64 0, i32 1, i64 0
  %784 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 %782, i32* %784, align 8, !alias.scope !42
  %785 = icmp sgt i32 %782, 5
  br i1 %785, label %786, label %793

786:                                              ; preds = %778
  %787 = sext i32 %782 to i64
  %788 = shl nsw i64 %787, 2
  %789 = call i8* @_Znam(i64 %788) #10, !noalias !42
  %790 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %791 = bitcast i32** %790 to i8**
  store i8* %789, i8** %791, align 8, !alias.scope !42
  %792 = bitcast i8* %789 to i32*
  br label %798

793:                                              ; preds = %778
  %794 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %795 = bitcast %union.anon* %794 to i32*
  %796 = sext i32 %782 to i64
  %797 = shl nsw i64 %796, 2
  br label %798

798:                                              ; preds = %793, %786
  %799 = phi i64 [ %788, %786 ], [ %797, %793 ]
  %800 = phi i32* [ %792, %786 ], [ %795, %793 ]
  %801 = bitcast i32* %800 to i8*
  %802 = bitcast i32* %783 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %801, i8* align 4 %802, i64 %799, i1 false) #11
  %803 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %804 = bitcast %union.TfLitePtrUnion* %803 to i8**
  %805 = load i8*, i8** %804, align 8
  br label %806

806:                                              ; preds = %776, %798
  %807 = phi i8* [ %805, %798 ], [ null, %776 ]
  %808 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %808) #11
  %809 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %809, label %810, label %812

810:                                              ; preds = %806
  %811 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %811, align 8, !alias.scope !45
  br label %840

812:                                              ; preds = %806
  %813 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %814 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %813, align 8, !noalias !45
  %815 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %814, i64 0, i32 0
  %816 = load i32, i32* %815, align 4, !noalias !45
  %817 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %814, i64 0, i32 1, i64 0
  %818 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %816, i32* %818, align 8, !alias.scope !45
  %819 = icmp sgt i32 %816, 5
  br i1 %819, label %820, label %827

820:                                              ; preds = %812
  %821 = sext i32 %816 to i64
  %822 = shl nsw i64 %821, 2
  %823 = call i8* @_Znam(i64 %822) #10, !noalias !45
  %824 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %825 = bitcast i32** %824 to i8**
  store i8* %823, i8** %825, align 8, !alias.scope !45
  %826 = bitcast i8* %823 to i32*
  br label %832

827:                                              ; preds = %812
  %828 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %829 = bitcast %union.anon* %828 to i32*
  %830 = sext i32 %816 to i64
  %831 = shl nsw i64 %830, 2
  br label %832

832:                                              ; preds = %827, %820
  %833 = phi i64 [ %822, %820 ], [ %831, %827 ]
  %834 = phi i32* [ %826, %820 ], [ %829, %827 ]
  %835 = bitcast i32* %834 to i8*
  %836 = bitcast i32* %817 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %835, i8* align 4 %836, i64 %833, i1 false) #11
  %837 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %838 = bitcast %union.TfLitePtrUnion* %837 to i8**
  %839 = load i8*, i8** %838, align 8
  br label %840

840:                                              ; preds = %810, %832
  %841 = phi i8* [ %839, %832 ], [ null, %810 ]
  call void @_ZN6tflite13reference_ops18BroadcastAdd4DSlowERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS6_S8_S6_Ph(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, i8* %774, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %18, i8* %807, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %19, i8* %841)
  %842 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  %843 = load i32, i32* %842, align 8
  %844 = icmp sgt i32 %843, 5
  br i1 %844, label %845, label %851

845:                                              ; preds = %840
  %846 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %847 = load i32*, i32** %846, align 8
  %848 = icmp eq i32* %847, null
  br i1 %848, label %851, label %849

849:                                              ; preds = %845
  %850 = bitcast i32* %847 to i8*
  call void @_ZdaPv(i8* %850) #10
  br label %851

851:                                              ; preds = %840, %845, %849
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %808) #11
  %852 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  %853 = load i32, i32* %852, align 8
  %854 = icmp sgt i32 %853, 5
  br i1 %854, label %855, label %861

855:                                              ; preds = %851
  %856 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %857 = load i32*, i32** %856, align 8
  %858 = icmp eq i32* %857, null
  br i1 %858, label %861, label %859

859:                                              ; preds = %855
  %860 = bitcast i32* %857 to i8*
  call void @_ZdaPv(i8* %860) #10
  br label %861

861:                                              ; preds = %851, %855, %859
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %775) #11
  %862 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %863 = load i32, i32* %862, align 8
  %864 = icmp sgt i32 %863, 5
  br i1 %864, label %865, label %1592

865:                                              ; preds = %861
  %866 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %867 = load i32*, i32** %866, align 8
  %868 = icmp eq i32* %867, null
  br i1 %868, label %1592, label %869

869:                                              ; preds = %865
  %870 = bitcast i32* %867 to i8*
  call void @_ZdaPv(i8* %870) #10
  br label %1592

871:                                              ; preds = %740
  %872 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %872) #11
  br i1 %67, label %873, label %875

873:                                              ; preds = %871
  %874 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %874, align 8, !alias.scope !48
  br label %903

875:                                              ; preds = %871
  %876 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %877 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %876, align 8, !noalias !48
  %878 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %877, i64 0, i32 0
  %879 = load i32, i32* %878, align 4, !noalias !48
  %880 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %877, i64 0, i32 1, i64 0
  %881 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %879, i32* %881, align 8, !alias.scope !48
  %882 = icmp sgt i32 %879, 5
  br i1 %882, label %883, label %890

883:                                              ; preds = %875
  %884 = sext i32 %879 to i64
  %885 = shl nsw i64 %884, 2
  %886 = call i8* @_Znam(i64 %885) #10, !noalias !48
  %887 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %888 = bitcast i32** %887 to i8**
  store i8* %886, i8** %888, align 8, !alias.scope !48
  %889 = bitcast i8* %886 to i32*
  br label %895

890:                                              ; preds = %875
  %891 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %892 = bitcast %union.anon* %891 to i32*
  %893 = sext i32 %879 to i64
  %894 = shl nsw i64 %893, 2
  br label %895

895:                                              ; preds = %890, %883
  %896 = phi i64 [ %885, %883 ], [ %894, %890 ]
  %897 = phi i32* [ %889, %883 ], [ %892, %890 ]
  %898 = bitcast i32* %897 to i8*
  %899 = bitcast i32* %880 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %898, i8* align 4 %899, i64 %896, i1 false) #11
  %900 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %901 = bitcast %union.TfLitePtrUnion* %900 to i8**
  %902 = load i8*, i8** %901, align 8
  br label %903

903:                                              ; preds = %873, %895
  %904 = phi i32 [ %879, %895 ], [ 0, %873 ]
  %905 = phi i8* [ %902, %895 ], [ null, %873 ]
  %906 = bitcast %"class.tflite::RuntimeShape"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %906) #11
  br i1 %97, label %907, label %909

907:                                              ; preds = %903
  %908 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 0, i32* %908, align 8, !alias.scope !51
  br label %937

909:                                              ; preds = %903
  %910 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %911 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %910, align 8, !noalias !51
  %912 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %911, i64 0, i32 0
  %913 = load i32, i32* %912, align 4, !noalias !51
  %914 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %911, i64 0, i32 1, i64 0
  %915 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 %913, i32* %915, align 8, !alias.scope !51
  %916 = icmp sgt i32 %913, 5
  br i1 %916, label %917, label %924

917:                                              ; preds = %909
  %918 = sext i32 %913 to i64
  %919 = shl nsw i64 %918, 2
  %920 = call i8* @_Znam(i64 %919) #10, !noalias !51
  %921 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %922 = bitcast i32** %921 to i8**
  store i8* %920, i8** %922, align 8, !alias.scope !51
  %923 = bitcast i8* %920 to i32*
  br label %929

924:                                              ; preds = %909
  %925 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1
  %926 = bitcast %union.anon* %925 to i32*
  %927 = sext i32 %913 to i64
  %928 = shl nsw i64 %927, 2
  br label %929

929:                                              ; preds = %924, %917
  %930 = phi i64 [ %919, %917 ], [ %928, %924 ]
  %931 = phi i32* [ %923, %917 ], [ %926, %924 ]
  %932 = bitcast i32* %931 to i8*
  %933 = bitcast i32* %914 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %932, i8* align 4 %933, i64 %930, i1 false) #11
  %934 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %935 = bitcast %union.TfLitePtrUnion* %934 to i8**
  %936 = load i8*, i8** %935, align 8
  br label %937

937:                                              ; preds = %907, %929
  %938 = phi i32 [ %913, %929 ], [ 0, %907 ]
  %939 = phi i8* [ %936, %929 ], [ null, %907 ]
  %940 = bitcast %"class.tflite::RuntimeShape"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %940) #11
  %941 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %941, label %942, label %944

942:                                              ; preds = %937
  %943 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 0, i32* %943, align 8, !alias.scope !54
  br label %972

944:                                              ; preds = %937
  %945 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %946 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %945, align 8, !noalias !54
  %947 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %946, i64 0, i32 0
  %948 = load i32, i32* %947, align 4, !noalias !54
  %949 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %946, i64 0, i32 1, i64 0
  %950 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 %948, i32* %950, align 8, !alias.scope !54
  %951 = icmp sgt i32 %948, 5
  br i1 %951, label %952, label %959

952:                                              ; preds = %944
  %953 = sext i32 %948 to i64
  %954 = shl nsw i64 %953, 2
  %955 = call i8* @_Znam(i64 %954) #10, !noalias !54
  %956 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %957 = bitcast i32** %956 to i8**
  store i8* %955, i8** %957, align 8, !alias.scope !54
  %958 = bitcast i8* %955 to i32*
  br label %964

959:                                              ; preds = %944
  %960 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  %961 = bitcast %union.anon* %960 to i32*
  %962 = sext i32 %948 to i64
  %963 = shl nsw i64 %962, 2
  br label %964

964:                                              ; preds = %959, %952
  %965 = phi i64 [ %954, %952 ], [ %963, %959 ]
  %966 = phi i32* [ %958, %952 ], [ %961, %959 ]
  %967 = bitcast i32* %966 to i8*
  %968 = bitcast i32* %949 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %967, i8* align 4 %968, i64 %965, i1 false) #11
  %969 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %970 = bitcast %union.TfLitePtrUnion* %969 to i8**
  %971 = load i8*, i8** %970, align 8
  br label %972

972:                                              ; preds = %942, %964
  %973 = phi i32 [ %948, %964 ], [ 0, %942 ]
  %974 = phi i8* [ %971, %964 ], [ null, %942 ]
  %975 = icmp sgt i32 %904, 5
  %976 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  br i1 %975, label %977, label %980

977:                                              ; preds = %972
  %978 = getelementptr inbounds %union.anon, %union.anon* %976, i64 0, i32 0
  %979 = load i32*, i32** %978, align 8
  br label %983

980:                                              ; preds = %972
  %981 = bitcast %union.anon* %976 to i32*
  %982 = icmp sgt i32 %904, 0
  br i1 %982, label %983, label %1083

983:                                              ; preds = %980, %977
  %984 = phi i32* [ %979, %977 ], [ %981, %980 ]
  %985 = zext i32 %904 to i64
  %986 = icmp ult i32 %904, 8
  br i1 %986, label %1072, label %987

987:                                              ; preds = %983
  %988 = and i64 %985, 4294967288
  %989 = add nsw i64 %988, -8
  %990 = lshr exact i64 %989, 3
  %991 = add nuw nsw i64 %990, 1
  %992 = and i64 %991, 3
  %993 = icmp ult i64 %989, 24
  br i1 %993, label %1039, label %994

994:                                              ; preds = %987
  %995 = sub nsw i64 %991, %992
  br label %996

996:                                              ; preds = %996, %994
  %997 = phi i64 [ 0, %994 ], [ %1036, %996 ]
  %998 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %994 ], [ %1034, %996 ]
  %999 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %994 ], [ %1035, %996 ]
  %1000 = phi i64 [ %995, %994 ], [ %1037, %996 ]
  %1001 = getelementptr inbounds i32, i32* %984, i64 %997
  %1002 = bitcast i32* %1001 to <4 x i32>*
  %1003 = load <4 x i32>, <4 x i32>* %1002, align 4
  %1004 = getelementptr inbounds i32, i32* %1001, i64 4
  %1005 = bitcast i32* %1004 to <4 x i32>*
  %1006 = load <4 x i32>, <4 x i32>* %1005, align 4
  %1007 = mul nsw <4 x i32> %1003, %998
  %1008 = mul nsw <4 x i32> %1006, %999
  %1009 = or i64 %997, 8
  %1010 = getelementptr inbounds i32, i32* %984, i64 %1009
  %1011 = bitcast i32* %1010 to <4 x i32>*
  %1012 = load <4 x i32>, <4 x i32>* %1011, align 4
  %1013 = getelementptr inbounds i32, i32* %1010, i64 4
  %1014 = bitcast i32* %1013 to <4 x i32>*
  %1015 = load <4 x i32>, <4 x i32>* %1014, align 4
  %1016 = mul nsw <4 x i32> %1012, %1007
  %1017 = mul nsw <4 x i32> %1015, %1008
  %1018 = or i64 %997, 16
  %1019 = getelementptr inbounds i32, i32* %984, i64 %1018
  %1020 = bitcast i32* %1019 to <4 x i32>*
  %1021 = load <4 x i32>, <4 x i32>* %1020, align 4
  %1022 = getelementptr inbounds i32, i32* %1019, i64 4
  %1023 = bitcast i32* %1022 to <4 x i32>*
  %1024 = load <4 x i32>, <4 x i32>* %1023, align 4
  %1025 = mul nsw <4 x i32> %1021, %1016
  %1026 = mul nsw <4 x i32> %1024, %1017
  %1027 = or i64 %997, 24
  %1028 = getelementptr inbounds i32, i32* %984, i64 %1027
  %1029 = bitcast i32* %1028 to <4 x i32>*
  %1030 = load <4 x i32>, <4 x i32>* %1029, align 4
  %1031 = getelementptr inbounds i32, i32* %1028, i64 4
  %1032 = bitcast i32* %1031 to <4 x i32>*
  %1033 = load <4 x i32>, <4 x i32>* %1032, align 4
  %1034 = mul nsw <4 x i32> %1030, %1025
  %1035 = mul nsw <4 x i32> %1033, %1026
  %1036 = add i64 %997, 32
  %1037 = add i64 %1000, -4
  %1038 = icmp eq i64 %1037, 0
  br i1 %1038, label %1039, label %996, !llvm.loop !57

1039:                                             ; preds = %996, %987
  %1040 = phi <4 x i32> [ undef, %987 ], [ %1034, %996 ]
  %1041 = phi <4 x i32> [ undef, %987 ], [ %1035, %996 ]
  %1042 = phi i64 [ 0, %987 ], [ %1036, %996 ]
  %1043 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %987 ], [ %1034, %996 ]
  %1044 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %987 ], [ %1035, %996 ]
  %1045 = icmp eq i64 %992, 0
  br i1 %1045, label %1062, label %1046

1046:                                             ; preds = %1039, %1046
  %1047 = phi i64 [ %1059, %1046 ], [ %1042, %1039 ]
  %1048 = phi <4 x i32> [ %1057, %1046 ], [ %1043, %1039 ]
  %1049 = phi <4 x i32> [ %1058, %1046 ], [ %1044, %1039 ]
  %1050 = phi i64 [ %1060, %1046 ], [ %992, %1039 ]
  %1051 = getelementptr inbounds i32, i32* %984, i64 %1047
  %1052 = bitcast i32* %1051 to <4 x i32>*
  %1053 = load <4 x i32>, <4 x i32>* %1052, align 4
  %1054 = getelementptr inbounds i32, i32* %1051, i64 4
  %1055 = bitcast i32* %1054 to <4 x i32>*
  %1056 = load <4 x i32>, <4 x i32>* %1055, align 4
  %1057 = mul nsw <4 x i32> %1053, %1048
  %1058 = mul nsw <4 x i32> %1056, %1049
  %1059 = add i64 %1047, 8
  %1060 = add i64 %1050, -1
  %1061 = icmp eq i64 %1060, 0
  br i1 %1061, label %1062, label %1046, !llvm.loop !58

1062:                                             ; preds = %1046, %1039
  %1063 = phi <4 x i32> [ %1040, %1039 ], [ %1057, %1046 ]
  %1064 = phi <4 x i32> [ %1041, %1039 ], [ %1058, %1046 ]
  %1065 = mul <4 x i32> %1064, %1063
  %1066 = shufflevector <4 x i32> %1065, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1067 = mul <4 x i32> %1065, %1066
  %1068 = shufflevector <4 x i32> %1067, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1069 = mul <4 x i32> %1067, %1068
  %1070 = extractelement <4 x i32> %1069, i32 0
  %1071 = icmp eq i64 %988, %985
  br i1 %1071, label %1083, label %1072

1072:                                             ; preds = %1062, %983
  %1073 = phi i64 [ 0, %983 ], [ %988, %1062 ]
  %1074 = phi i32 [ 1, %983 ], [ %1070, %1062 ]
  br label %1075

1075:                                             ; preds = %1072, %1075
  %1076 = phi i64 [ %1081, %1075 ], [ %1073, %1072 ]
  %1077 = phi i32 [ %1080, %1075 ], [ %1074, %1072 ]
  %1078 = getelementptr inbounds i32, i32* %984, i64 %1076
  %1079 = load i32, i32* %1078, align 4
  %1080 = mul nsw i32 %1079, %1077
  %1081 = add nuw nsw i64 %1076, 1
  %1082 = icmp eq i64 %1081, %985
  br i1 %1082, label %1083, label %1075, !llvm.loop !59

1083:                                             ; preds = %1075, %1062, %980
  %1084 = phi i32 [ 1, %980 ], [ %1070, %1062 ], [ %1080, %1075 ]
  %1085 = icmp sgt i32 %938, 5
  %1086 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1
  br i1 %1085, label %1087, label %1090

1087:                                             ; preds = %1083
  %1088 = getelementptr inbounds %union.anon, %union.anon* %1086, i64 0, i32 0
  %1089 = load i32*, i32** %1088, align 8
  br label %1093

1090:                                             ; preds = %1083
  %1091 = bitcast %union.anon* %1086 to i32*
  %1092 = icmp sgt i32 %938, 0
  br i1 %1092, label %1093, label %1193

1093:                                             ; preds = %1090, %1087
  %1094 = phi i32* [ %1089, %1087 ], [ %1091, %1090 ]
  %1095 = zext i32 %938 to i64
  %1096 = icmp ult i32 %938, 8
  br i1 %1096, label %1182, label %1097

1097:                                             ; preds = %1093
  %1098 = and i64 %1095, 4294967288
  %1099 = add nsw i64 %1098, -8
  %1100 = lshr exact i64 %1099, 3
  %1101 = add nuw nsw i64 %1100, 1
  %1102 = and i64 %1101, 3
  %1103 = icmp ult i64 %1099, 24
  br i1 %1103, label %1149, label %1104

1104:                                             ; preds = %1097
  %1105 = sub nsw i64 %1101, %1102
  br label %1106

1106:                                             ; preds = %1106, %1104
  %1107 = phi i64 [ 0, %1104 ], [ %1146, %1106 ]
  %1108 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1104 ], [ %1144, %1106 ]
  %1109 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1104 ], [ %1145, %1106 ]
  %1110 = phi i64 [ %1105, %1104 ], [ %1147, %1106 ]
  %1111 = getelementptr inbounds i32, i32* %1094, i64 %1107
  %1112 = bitcast i32* %1111 to <4 x i32>*
  %1113 = load <4 x i32>, <4 x i32>* %1112, align 4
  %1114 = getelementptr inbounds i32, i32* %1111, i64 4
  %1115 = bitcast i32* %1114 to <4 x i32>*
  %1116 = load <4 x i32>, <4 x i32>* %1115, align 4
  %1117 = mul nsw <4 x i32> %1113, %1108
  %1118 = mul nsw <4 x i32> %1116, %1109
  %1119 = or i64 %1107, 8
  %1120 = getelementptr inbounds i32, i32* %1094, i64 %1119
  %1121 = bitcast i32* %1120 to <4 x i32>*
  %1122 = load <4 x i32>, <4 x i32>* %1121, align 4
  %1123 = getelementptr inbounds i32, i32* %1120, i64 4
  %1124 = bitcast i32* %1123 to <4 x i32>*
  %1125 = load <4 x i32>, <4 x i32>* %1124, align 4
  %1126 = mul nsw <4 x i32> %1122, %1117
  %1127 = mul nsw <4 x i32> %1125, %1118
  %1128 = or i64 %1107, 16
  %1129 = getelementptr inbounds i32, i32* %1094, i64 %1128
  %1130 = bitcast i32* %1129 to <4 x i32>*
  %1131 = load <4 x i32>, <4 x i32>* %1130, align 4
  %1132 = getelementptr inbounds i32, i32* %1129, i64 4
  %1133 = bitcast i32* %1132 to <4 x i32>*
  %1134 = load <4 x i32>, <4 x i32>* %1133, align 4
  %1135 = mul nsw <4 x i32> %1131, %1126
  %1136 = mul nsw <4 x i32> %1134, %1127
  %1137 = or i64 %1107, 24
  %1138 = getelementptr inbounds i32, i32* %1094, i64 %1137
  %1139 = bitcast i32* %1138 to <4 x i32>*
  %1140 = load <4 x i32>, <4 x i32>* %1139, align 4
  %1141 = getelementptr inbounds i32, i32* %1138, i64 4
  %1142 = bitcast i32* %1141 to <4 x i32>*
  %1143 = load <4 x i32>, <4 x i32>* %1142, align 4
  %1144 = mul nsw <4 x i32> %1140, %1135
  %1145 = mul nsw <4 x i32> %1143, %1136
  %1146 = add i64 %1107, 32
  %1147 = add i64 %1110, -4
  %1148 = icmp eq i64 %1147, 0
  br i1 %1148, label %1149, label %1106, !llvm.loop !60

1149:                                             ; preds = %1106, %1097
  %1150 = phi <4 x i32> [ undef, %1097 ], [ %1144, %1106 ]
  %1151 = phi <4 x i32> [ undef, %1097 ], [ %1145, %1106 ]
  %1152 = phi i64 [ 0, %1097 ], [ %1146, %1106 ]
  %1153 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1097 ], [ %1144, %1106 ]
  %1154 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1097 ], [ %1145, %1106 ]
  %1155 = icmp eq i64 %1102, 0
  br i1 %1155, label %1172, label %1156

1156:                                             ; preds = %1149, %1156
  %1157 = phi i64 [ %1169, %1156 ], [ %1152, %1149 ]
  %1158 = phi <4 x i32> [ %1167, %1156 ], [ %1153, %1149 ]
  %1159 = phi <4 x i32> [ %1168, %1156 ], [ %1154, %1149 ]
  %1160 = phi i64 [ %1170, %1156 ], [ %1102, %1149 ]
  %1161 = getelementptr inbounds i32, i32* %1094, i64 %1157
  %1162 = bitcast i32* %1161 to <4 x i32>*
  %1163 = load <4 x i32>, <4 x i32>* %1162, align 4
  %1164 = getelementptr inbounds i32, i32* %1161, i64 4
  %1165 = bitcast i32* %1164 to <4 x i32>*
  %1166 = load <4 x i32>, <4 x i32>* %1165, align 4
  %1167 = mul nsw <4 x i32> %1163, %1158
  %1168 = mul nsw <4 x i32> %1166, %1159
  %1169 = add i64 %1157, 8
  %1170 = add i64 %1160, -1
  %1171 = icmp eq i64 %1170, 0
  br i1 %1171, label %1172, label %1156, !llvm.loop !61

1172:                                             ; preds = %1156, %1149
  %1173 = phi <4 x i32> [ %1150, %1149 ], [ %1167, %1156 ]
  %1174 = phi <4 x i32> [ %1151, %1149 ], [ %1168, %1156 ]
  %1175 = mul <4 x i32> %1174, %1173
  %1176 = shufflevector <4 x i32> %1175, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1177 = mul <4 x i32> %1175, %1176
  %1178 = shufflevector <4 x i32> %1177, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1179 = mul <4 x i32> %1177, %1178
  %1180 = extractelement <4 x i32> %1179, i32 0
  %1181 = icmp eq i64 %1098, %1095
  br i1 %1181, label %1193, label %1182

1182:                                             ; preds = %1172, %1093
  %1183 = phi i64 [ 0, %1093 ], [ %1098, %1172 ]
  %1184 = phi i32 [ 1, %1093 ], [ %1180, %1172 ]
  br label %1185

1185:                                             ; preds = %1182, %1185
  %1186 = phi i64 [ %1191, %1185 ], [ %1183, %1182 ]
  %1187 = phi i32 [ %1190, %1185 ], [ %1184, %1182 ]
  %1188 = getelementptr inbounds i32, i32* %1094, i64 %1186
  %1189 = load i32, i32* %1188, align 4
  %1190 = mul nsw i32 %1189, %1187
  %1191 = add nuw nsw i64 %1186, 1
  %1192 = icmp eq i64 %1191, %1095
  br i1 %1192, label %1193, label %1185, !llvm.loop !62

1193:                                             ; preds = %1185, %1172, %1090
  %1194 = phi i32 [ 1, %1090 ], [ %1180, %1172 ], [ %1190, %1185 ]
  %1195 = icmp sgt i32 %973, 5
  %1196 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  br i1 %1195, label %1197, label %1200

1197:                                             ; preds = %1193
  %1198 = getelementptr inbounds %union.anon, %union.anon* %1196, i64 0, i32 0
  %1199 = load i32*, i32** %1198, align 8
  br label %1203

1200:                                             ; preds = %1193
  %1201 = bitcast %union.anon* %1196 to i32*
  %1202 = icmp sgt i32 %973, 0
  br i1 %1202, label %1203, label %1303

1203:                                             ; preds = %1200, %1197
  %1204 = phi i32* [ %1199, %1197 ], [ %1201, %1200 ]
  %1205 = zext i32 %973 to i64
  %1206 = icmp ult i32 %973, 8
  br i1 %1206, label %1292, label %1207

1207:                                             ; preds = %1203
  %1208 = and i64 %1205, 4294967288
  %1209 = add nsw i64 %1208, -8
  %1210 = lshr exact i64 %1209, 3
  %1211 = add nuw nsw i64 %1210, 1
  %1212 = and i64 %1211, 3
  %1213 = icmp ult i64 %1209, 24
  br i1 %1213, label %1259, label %1214

1214:                                             ; preds = %1207
  %1215 = sub nsw i64 %1211, %1212
  br label %1216

1216:                                             ; preds = %1216, %1214
  %1217 = phi i64 [ 0, %1214 ], [ %1256, %1216 ]
  %1218 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1214 ], [ %1254, %1216 ]
  %1219 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1214 ], [ %1255, %1216 ]
  %1220 = phi i64 [ %1215, %1214 ], [ %1257, %1216 ]
  %1221 = getelementptr inbounds i32, i32* %1204, i64 %1217
  %1222 = bitcast i32* %1221 to <4 x i32>*
  %1223 = load <4 x i32>, <4 x i32>* %1222, align 4
  %1224 = getelementptr inbounds i32, i32* %1221, i64 4
  %1225 = bitcast i32* %1224 to <4 x i32>*
  %1226 = load <4 x i32>, <4 x i32>* %1225, align 4
  %1227 = mul nsw <4 x i32> %1223, %1218
  %1228 = mul nsw <4 x i32> %1226, %1219
  %1229 = or i64 %1217, 8
  %1230 = getelementptr inbounds i32, i32* %1204, i64 %1229
  %1231 = bitcast i32* %1230 to <4 x i32>*
  %1232 = load <4 x i32>, <4 x i32>* %1231, align 4
  %1233 = getelementptr inbounds i32, i32* %1230, i64 4
  %1234 = bitcast i32* %1233 to <4 x i32>*
  %1235 = load <4 x i32>, <4 x i32>* %1234, align 4
  %1236 = mul nsw <4 x i32> %1232, %1227
  %1237 = mul nsw <4 x i32> %1235, %1228
  %1238 = or i64 %1217, 16
  %1239 = getelementptr inbounds i32, i32* %1204, i64 %1238
  %1240 = bitcast i32* %1239 to <4 x i32>*
  %1241 = load <4 x i32>, <4 x i32>* %1240, align 4
  %1242 = getelementptr inbounds i32, i32* %1239, i64 4
  %1243 = bitcast i32* %1242 to <4 x i32>*
  %1244 = load <4 x i32>, <4 x i32>* %1243, align 4
  %1245 = mul nsw <4 x i32> %1241, %1236
  %1246 = mul nsw <4 x i32> %1244, %1237
  %1247 = or i64 %1217, 24
  %1248 = getelementptr inbounds i32, i32* %1204, i64 %1247
  %1249 = bitcast i32* %1248 to <4 x i32>*
  %1250 = load <4 x i32>, <4 x i32>* %1249, align 4
  %1251 = getelementptr inbounds i32, i32* %1248, i64 4
  %1252 = bitcast i32* %1251 to <4 x i32>*
  %1253 = load <4 x i32>, <4 x i32>* %1252, align 4
  %1254 = mul nsw <4 x i32> %1250, %1245
  %1255 = mul nsw <4 x i32> %1253, %1246
  %1256 = add i64 %1217, 32
  %1257 = add i64 %1220, -4
  %1258 = icmp eq i64 %1257, 0
  br i1 %1258, label %1259, label %1216, !llvm.loop !63

1259:                                             ; preds = %1216, %1207
  %1260 = phi <4 x i32> [ undef, %1207 ], [ %1254, %1216 ]
  %1261 = phi <4 x i32> [ undef, %1207 ], [ %1255, %1216 ]
  %1262 = phi i64 [ 0, %1207 ], [ %1256, %1216 ]
  %1263 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1207 ], [ %1254, %1216 ]
  %1264 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1207 ], [ %1255, %1216 ]
  %1265 = icmp eq i64 %1212, 0
  br i1 %1265, label %1282, label %1266

1266:                                             ; preds = %1259, %1266
  %1267 = phi i64 [ %1279, %1266 ], [ %1262, %1259 ]
  %1268 = phi <4 x i32> [ %1277, %1266 ], [ %1263, %1259 ]
  %1269 = phi <4 x i32> [ %1278, %1266 ], [ %1264, %1259 ]
  %1270 = phi i64 [ %1280, %1266 ], [ %1212, %1259 ]
  %1271 = getelementptr inbounds i32, i32* %1204, i64 %1267
  %1272 = bitcast i32* %1271 to <4 x i32>*
  %1273 = load <4 x i32>, <4 x i32>* %1272, align 4
  %1274 = getelementptr inbounds i32, i32* %1271, i64 4
  %1275 = bitcast i32* %1274 to <4 x i32>*
  %1276 = load <4 x i32>, <4 x i32>* %1275, align 4
  %1277 = mul nsw <4 x i32> %1273, %1268
  %1278 = mul nsw <4 x i32> %1276, %1269
  %1279 = add i64 %1267, 8
  %1280 = add i64 %1270, -1
  %1281 = icmp eq i64 %1280, 0
  br i1 %1281, label %1282, label %1266, !llvm.loop !64

1282:                                             ; preds = %1266, %1259
  %1283 = phi <4 x i32> [ %1260, %1259 ], [ %1277, %1266 ]
  %1284 = phi <4 x i32> [ %1261, %1259 ], [ %1278, %1266 ]
  %1285 = mul <4 x i32> %1284, %1283
  %1286 = shufflevector <4 x i32> %1285, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1287 = mul <4 x i32> %1285, %1286
  %1288 = shufflevector <4 x i32> %1287, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1289 = mul <4 x i32> %1287, %1288
  %1290 = extractelement <4 x i32> %1289, i32 0
  %1291 = icmp eq i64 %1208, %1205
  br i1 %1291, label %1303, label %1292

1292:                                             ; preds = %1282, %1203
  %1293 = phi i64 [ 0, %1203 ], [ %1208, %1282 ]
  %1294 = phi i32 [ 1, %1203 ], [ %1290, %1282 ]
  br label %1295

1295:                                             ; preds = %1292, %1295
  %1296 = phi i64 [ %1301, %1295 ], [ %1293, %1292 ]
  %1297 = phi i32 [ %1300, %1295 ], [ %1294, %1292 ]
  %1298 = getelementptr inbounds i32, i32* %1204, i64 %1296
  %1299 = load i32, i32* %1298, align 4
  %1300 = mul nsw i32 %1299, %1297
  %1301 = add nuw nsw i64 %1296, 1
  %1302 = icmp eq i64 %1301, %1205
  br i1 %1302, label %1303, label %1295, !llvm.loop !65

1303:                                             ; preds = %1295, %1282, %1200
  %1304 = phi i32 [ 1, %1200 ], [ %1290, %1282 ], [ %1300, %1295 ]
  %1305 = icmp eq i32 %1084, %1194
  br i1 %1305, label %1307, label %1306

1306:                                             ; preds = %1303
  call void @abort() #12
  unreachable

1307:                                             ; preds = %1303
  %1308 = icmp eq i32 %1084, %1304
  br i1 %1308, label %1310, label %1309

1309:                                             ; preds = %1307
  call void @abort() #12
  unreachable

1310:                                             ; preds = %1307
  call void @_ZN6tflite13reference_ops14AddElementwiseEiRKNS_16ArithmeticParamsEPKhS5_Ph(i32 %1084, %"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, i8* %905, i8* %939, i8* %974) #11
  br i1 %1195, label %1311, label %1317

1311:                                             ; preds = %1310
  %1312 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %1313 = load i32*, i32** %1312, align 8
  %1314 = icmp eq i32* %1313, null
  br i1 %1314, label %1317, label %1315

1315:                                             ; preds = %1311
  %1316 = bitcast i32* %1313 to i8*
  call void @_ZdaPv(i8* %1316) #10
  br label %1317

1317:                                             ; preds = %1310, %1311, %1315
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %940) #11
  br i1 %1085, label %1318, label %1324

1318:                                             ; preds = %1317
  %1319 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %1320 = load i32*, i32** %1319, align 8
  %1321 = icmp eq i32* %1320, null
  br i1 %1321, label %1324, label %1322

1322:                                             ; preds = %1318
  %1323 = bitcast i32* %1320 to i8*
  call void @_ZdaPv(i8* %1323) #10
  br label %1324

1324:                                             ; preds = %1317, %1318, %1322
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %906) #11
  br i1 %975, label %1325, label %1592

1325:                                             ; preds = %1324
  %1326 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1327 = load i32*, i32** %1326, align 8
  %1328 = icmp eq i32* %1327, null
  br i1 %1328, label %1592, label %1329

1329:                                             ; preds = %1325
  %1330 = bitcast i32* %1327 to i8*
  call void @_ZdaPv(i8* %1330) #10
  br label %1592

1331:                                             ; preds = %146
  br i1 %126, label %1332, label %1462

1332:                                             ; preds = %1331
  %1333 = bitcast %"class.tflite::RuntimeShape"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1333) #11
  br i1 %67, label %1334, label %1336

1334:                                             ; preds = %1332
  %1335 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 0, i32* %1335, align 8, !alias.scope !66
  br label %1364

1336:                                             ; preds = %1332
  %1337 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %1338 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1337, align 8, !noalias !66
  %1339 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1338, i64 0, i32 0
  %1340 = load i32, i32* %1339, align 4, !noalias !66
  %1341 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1338, i64 0, i32 1, i64 0
  %1342 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 %1340, i32* %1342, align 8, !alias.scope !66
  %1343 = icmp sgt i32 %1340, 5
  br i1 %1343, label %1344, label %1351

1344:                                             ; preds = %1336
  %1345 = sext i32 %1340 to i64
  %1346 = shl nsw i64 %1345, 2
  %1347 = call i8* @_Znam(i64 %1346) #10, !noalias !66
  %1348 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %1349 = bitcast i32** %1348 to i8**
  store i8* %1347, i8** %1349, align 8, !alias.scope !66
  %1350 = bitcast i8* %1347 to i32*
  br label %1356

1351:                                             ; preds = %1336
  %1352 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1
  %1353 = bitcast %union.anon* %1352 to i32*
  %1354 = sext i32 %1340 to i64
  %1355 = shl nsw i64 %1354, 2
  br label %1356

1356:                                             ; preds = %1351, %1344
  %1357 = phi i64 [ %1346, %1344 ], [ %1355, %1351 ]
  %1358 = phi i32* [ %1350, %1344 ], [ %1353, %1351 ]
  %1359 = bitcast i32* %1358 to i8*
  %1360 = bitcast i32* %1341 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1359, i8* align 4 %1360, i64 %1357, i1 false) #11
  %1361 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %1362 = bitcast %union.TfLitePtrUnion* %1361 to i16**
  %1363 = load i16*, i16** %1362, align 8
  br label %1364

1364:                                             ; preds = %1334, %1356
  %1365 = phi i16* [ %1363, %1356 ], [ null, %1334 ]
  %1366 = bitcast %"class.tflite::RuntimeShape"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1366) #11
  br i1 %97, label %1367, label %1369

1367:                                             ; preds = %1364
  %1368 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 0, i32* %1368, align 8, !alias.scope !69
  br label %1397

1369:                                             ; preds = %1364
  %1370 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %1371 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1370, align 8, !noalias !69
  %1372 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1371, i64 0, i32 0
  %1373 = load i32, i32* %1372, align 4, !noalias !69
  %1374 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1371, i64 0, i32 1, i64 0
  %1375 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 %1373, i32* %1375, align 8, !alias.scope !69
  %1376 = icmp sgt i32 %1373, 5
  br i1 %1376, label %1377, label %1384

1377:                                             ; preds = %1369
  %1378 = sext i32 %1373 to i64
  %1379 = shl nsw i64 %1378, 2
  %1380 = call i8* @_Znam(i64 %1379) #10, !noalias !69
  %1381 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %1382 = bitcast i32** %1381 to i8**
  store i8* %1380, i8** %1382, align 8, !alias.scope !69
  %1383 = bitcast i8* %1380 to i32*
  br label %1389

1384:                                             ; preds = %1369
  %1385 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1
  %1386 = bitcast %union.anon* %1385 to i32*
  %1387 = sext i32 %1373 to i64
  %1388 = shl nsw i64 %1387, 2
  br label %1389

1389:                                             ; preds = %1384, %1377
  %1390 = phi i64 [ %1379, %1377 ], [ %1388, %1384 ]
  %1391 = phi i32* [ %1383, %1377 ], [ %1386, %1384 ]
  %1392 = bitcast i32* %1391 to i8*
  %1393 = bitcast i32* %1374 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1392, i8* align 4 %1393, i64 %1390, i1 false) #11
  %1394 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %1395 = bitcast %union.TfLitePtrUnion* %1394 to i16**
  %1396 = load i16*, i16** %1395, align 8
  br label %1397

1397:                                             ; preds = %1367, %1389
  %1398 = phi i16* [ %1396, %1389 ], [ null, %1367 ]
  %1399 = bitcast %"class.tflite::RuntimeShape"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1399) #11
  %1400 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %1400, label %1401, label %1403

1401:                                             ; preds = %1397
  %1402 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 0, i32* %1402, align 8, !alias.scope !72
  br label %1431

1403:                                             ; preds = %1397
  %1404 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %1405 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1404, align 8, !noalias !72
  %1406 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1405, i64 0, i32 0
  %1407 = load i32, i32* %1406, align 4, !noalias !72
  %1408 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1405, i64 0, i32 1, i64 0
  %1409 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 %1407, i32* %1409, align 8, !alias.scope !72
  %1410 = icmp sgt i32 %1407, 5
  br i1 %1410, label %1411, label %1418

1411:                                             ; preds = %1403
  %1412 = sext i32 %1407 to i64
  %1413 = shl nsw i64 %1412, 2
  %1414 = call i8* @_Znam(i64 %1413) #10, !noalias !72
  %1415 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1416 = bitcast i32** %1415 to i8**
  store i8* %1414, i8** %1416, align 8, !alias.scope !72
  %1417 = bitcast i8* %1414 to i32*
  br label %1423

1418:                                             ; preds = %1403
  %1419 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %1420 = bitcast %union.anon* %1419 to i32*
  %1421 = sext i32 %1407 to i64
  %1422 = shl nsw i64 %1421, 2
  br label %1423

1423:                                             ; preds = %1418, %1411
  %1424 = phi i64 [ %1413, %1411 ], [ %1422, %1418 ]
  %1425 = phi i32* [ %1417, %1411 ], [ %1420, %1418 ]
  %1426 = bitcast i32* %1425 to i8*
  %1427 = bitcast i32* %1408 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1426, i8* align 4 %1427, i64 %1424, i1 false) #11
  %1428 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %1429 = bitcast %union.TfLitePtrUnion* %1428 to i16**
  %1430 = load i16*, i16** %1429, align 8
  br label %1431

1431:                                             ; preds = %1401, %1423
  %1432 = phi i16* [ %1430, %1423 ], [ null, %1401 ]
  call void @_ZN6tflite13reference_ops16BroadcastSubSlowIsLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %23, i16* %1365, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %24, i16* %1398, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %25, i16* %1432)
  %1433 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  %1434 = load i32, i32* %1433, align 8
  %1435 = icmp sgt i32 %1434, 5
  br i1 %1435, label %1436, label %1442

1436:                                             ; preds = %1431
  %1437 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1438 = load i32*, i32** %1437, align 8
  %1439 = icmp eq i32* %1438, null
  br i1 %1439, label %1442, label %1440

1440:                                             ; preds = %1436
  %1441 = bitcast i32* %1438 to i8*
  call void @_ZdaPv(i8* %1441) #10
  br label %1442

1442:                                             ; preds = %1431, %1436, %1440
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1399) #11
  %1443 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  %1444 = load i32, i32* %1443, align 8
  %1445 = icmp sgt i32 %1444, 5
  br i1 %1445, label %1446, label %1452

1446:                                             ; preds = %1442
  %1447 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %1448 = load i32*, i32** %1447, align 8
  %1449 = icmp eq i32* %1448, null
  br i1 %1449, label %1452, label %1450

1450:                                             ; preds = %1446
  %1451 = bitcast i32* %1448 to i8*
  call void @_ZdaPv(i8* %1451) #10
  br label %1452

1452:                                             ; preds = %1442, %1446, %1450
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1366) #11
  %1453 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  %1454 = load i32, i32* %1453, align 8
  %1455 = icmp sgt i32 %1454, 5
  br i1 %1455, label %1456, label %1592

1456:                                             ; preds = %1452
  %1457 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %1458 = load i32*, i32** %1457, align 8
  %1459 = icmp eq i32* %1458, null
  br i1 %1459, label %1592, label %1460

1460:                                             ; preds = %1456
  %1461 = bitcast i32* %1458 to i8*
  call void @_ZdaPv(i8* %1461) #10
  br label %1592

1462:                                             ; preds = %1331
  %1463 = bitcast %"class.tflite::RuntimeShape"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1463) #11
  br i1 %67, label %1464, label %1466

1464:                                             ; preds = %1462
  %1465 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 0, i32* %1465, align 8, !alias.scope !75
  br label %1494

1466:                                             ; preds = %1462
  %1467 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %1468 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1467, align 8, !noalias !75
  %1469 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1468, i64 0, i32 0
  %1470 = load i32, i32* %1469, align 4, !noalias !75
  %1471 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1468, i64 0, i32 1, i64 0
  %1472 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 %1470, i32* %1472, align 8, !alias.scope !75
  %1473 = icmp sgt i32 %1470, 5
  br i1 %1473, label %1474, label %1481

1474:                                             ; preds = %1466
  %1475 = sext i32 %1470 to i64
  %1476 = shl nsw i64 %1475, 2
  %1477 = call i8* @_Znam(i64 %1476) #10, !noalias !75
  %1478 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1479 = bitcast i32** %1478 to i8**
  store i8* %1477, i8** %1479, align 8, !alias.scope !75
  %1480 = bitcast i8* %1477 to i32*
  br label %1486

1481:                                             ; preds = %1466
  %1482 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1
  %1483 = bitcast %union.anon* %1482 to i32*
  %1484 = sext i32 %1470 to i64
  %1485 = shl nsw i64 %1484, 2
  br label %1486

1486:                                             ; preds = %1481, %1474
  %1487 = phi i64 [ %1476, %1474 ], [ %1485, %1481 ]
  %1488 = phi i32* [ %1480, %1474 ], [ %1483, %1481 ]
  %1489 = bitcast i32* %1488 to i8*
  %1490 = bitcast i32* %1471 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1489, i8* align 4 %1490, i64 %1487, i1 false) #11
  %1491 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %1492 = bitcast %union.TfLitePtrUnion* %1491 to i16**
  %1493 = load i16*, i16** %1492, align 8
  br label %1494

1494:                                             ; preds = %1464, %1486
  %1495 = phi i16* [ %1493, %1486 ], [ null, %1464 ]
  %1496 = bitcast %"class.tflite::RuntimeShape"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1496) #11
  br i1 %97, label %1497, label %1499

1497:                                             ; preds = %1494
  %1498 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 0, i32* %1498, align 8, !alias.scope !78
  br label %1527

1499:                                             ; preds = %1494
  %1500 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %1501 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1500, align 8, !noalias !78
  %1502 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1501, i64 0, i32 0
  %1503 = load i32, i32* %1502, align 4, !noalias !78
  %1504 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1501, i64 0, i32 1, i64 0
  %1505 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 %1503, i32* %1505, align 8, !alias.scope !78
  %1506 = icmp sgt i32 %1503, 5
  br i1 %1506, label %1507, label %1514

1507:                                             ; preds = %1499
  %1508 = sext i32 %1503 to i64
  %1509 = shl nsw i64 %1508, 2
  %1510 = call i8* @_Znam(i64 %1509) #10, !noalias !78
  %1511 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %1512 = bitcast i32** %1511 to i8**
  store i8* %1510, i8** %1512, align 8, !alias.scope !78
  %1513 = bitcast i8* %1510 to i32*
  br label %1519

1514:                                             ; preds = %1499
  %1515 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1
  %1516 = bitcast %union.anon* %1515 to i32*
  %1517 = sext i32 %1503 to i64
  %1518 = shl nsw i64 %1517, 2
  br label %1519

1519:                                             ; preds = %1514, %1507
  %1520 = phi i64 [ %1509, %1507 ], [ %1518, %1514 ]
  %1521 = phi i32* [ %1513, %1507 ], [ %1516, %1514 ]
  %1522 = bitcast i32* %1521 to i8*
  %1523 = bitcast i32* %1504 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1522, i8* align 4 %1523, i64 %1520, i1 false) #11
  %1524 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %1525 = bitcast %union.TfLitePtrUnion* %1524 to i16**
  %1526 = load i16*, i16** %1525, align 8
  br label %1527

1527:                                             ; preds = %1497, %1519
  %1528 = phi i16* [ %1526, %1519 ], [ null, %1497 ]
  %1529 = bitcast %"class.tflite::RuntimeShape"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1529) #11
  %1530 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %1530, label %1531, label %1533

1531:                                             ; preds = %1527
  %1532 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  store i32 0, i32* %1532, align 8, !alias.scope !81
  br label %1561

1533:                                             ; preds = %1527
  %1534 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %1535 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1534, align 8, !noalias !81
  %1536 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1535, i64 0, i32 0
  %1537 = load i32, i32* %1536, align 4, !noalias !81
  %1538 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1535, i64 0, i32 1, i64 0
  %1539 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  store i32 %1537, i32* %1539, align 8, !alias.scope !81
  %1540 = icmp sgt i32 %1537, 5
  br i1 %1540, label %1541, label %1548

1541:                                             ; preds = %1533
  %1542 = sext i32 %1537 to i64
  %1543 = shl nsw i64 %1542, 2
  %1544 = call i8* @_Znam(i64 %1543) #10, !noalias !81
  %1545 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1, i32 0
  %1546 = bitcast i32** %1545 to i8**
  store i8* %1544, i8** %1546, align 8, !alias.scope !81
  %1547 = bitcast i8* %1544 to i32*
  br label %1553

1548:                                             ; preds = %1533
  %1549 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1
  %1550 = bitcast %union.anon* %1549 to i32*
  %1551 = sext i32 %1537 to i64
  %1552 = shl nsw i64 %1551, 2
  br label %1553

1553:                                             ; preds = %1548, %1541
  %1554 = phi i64 [ %1543, %1541 ], [ %1552, %1548 ]
  %1555 = phi i32* [ %1547, %1541 ], [ %1550, %1548 ]
  %1556 = bitcast i32* %1555 to i8*
  %1557 = bitcast i32* %1538 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1556, i8* align 4 %1557, i64 %1554, i1 false) #11
  %1558 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %1559 = bitcast %union.TfLitePtrUnion* %1558 to i16**
  %1560 = load i16*, i16** %1559, align 8
  br label %1561

1561:                                             ; preds = %1531, %1553
  %1562 = phi i16* [ %1560, %1553 ], [ null, %1531 ]
  call void @_ZN6tflite13reference_ops5Sub16ERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKsS6_S8_S6_Ps(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %26, i16* %1495, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %27, i16* %1528, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %28, i16* %1562)
  %1563 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  %1564 = load i32, i32* %1563, align 8
  %1565 = icmp sgt i32 %1564, 5
  br i1 %1565, label %1566, label %1572

1566:                                             ; preds = %1561
  %1567 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1, i32 0
  %1568 = load i32*, i32** %1567, align 8
  %1569 = icmp eq i32* %1568, null
  br i1 %1569, label %1572, label %1570

1570:                                             ; preds = %1566
  %1571 = bitcast i32* %1568 to i8*
  call void @_ZdaPv(i8* %1571) #10
  br label %1572

1572:                                             ; preds = %1561, %1566, %1570
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1529) #11
  %1573 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  %1574 = load i32, i32* %1573, align 8
  %1575 = icmp sgt i32 %1574, 5
  br i1 %1575, label %1576, label %1582

1576:                                             ; preds = %1572
  %1577 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %1578 = load i32*, i32** %1577, align 8
  %1579 = icmp eq i32* %1578, null
  br i1 %1579, label %1582, label %1580

1580:                                             ; preds = %1576
  %1581 = bitcast i32* %1578 to i8*
  call void @_ZdaPv(i8* %1581) #10
  br label %1582

1582:                                             ; preds = %1572, %1576, %1580
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1496) #11
  %1583 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  %1584 = load i32, i32* %1583, align 8
  %1585 = icmp sgt i32 %1584, 5
  br i1 %1585, label %1586, label %1592

1586:                                             ; preds = %1582
  %1587 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1588 = load i32*, i32** %1587, align 8
  %1589 = icmp eq i32* %1588, null
  br i1 %1589, label %1592, label %1590

1590:                                             ; preds = %1586
  %1591 = bitcast i32* %1588 to i8*
  call void @_ZdaPv(i8* %1591) #10
  br label %1592

1592:                                             ; preds = %1590, %1586, %1582, %1460, %1456, %1452, %1329, %1325, %1324, %869, %865, %861, %738, %734, %733, %278, %274, %270
  %1593 = phi i8* [ %151, %270 ], [ %151, %274 ], [ %151, %278 ], [ %281, %733 ], [ %281, %734 ], [ %281, %738 ], [ %742, %861 ], [ %742, %865 ], [ %742, %869 ], [ %872, %1324 ], [ %872, %1325 ], [ %872, %1329 ], [ %1333, %1452 ], [ %1333, %1456 ], [ %1333, %1460 ], [ %1463, %1582 ], [ %1463, %1586 ], [ %1463, %1590 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1593) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %29) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE0EiEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteSubParams*, %"struct.tflite::ops::builtin::sub::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, i1 zeroext, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %9 = alloca %"struct.tflite::ArithmeticParams", align 4
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = getelementptr inbounds %struct.TfLiteSubParams, %struct.TfLiteSubParams* %2, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, -1
  %19 = icmp ult i32 %18, 3
  br i1 %19, label %20, label %27

20:                                               ; preds = %8
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE2EiEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_, i64 0, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %18 to i64
  %25 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE2EiEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_.46, i64 0, i64 %24
  %26 = load i32, i32* %25, align 4
  br label %27

27:                                               ; preds = %8, %20
  %28 = phi i32 [ %23, %20 ], [ -2147483648, %8 ]
  %29 = phi i32 [ %26, %20 ], [ 2147483647, %8 ]
  %30 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %30) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3sub13EvalQuantizedILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.op_params, i64 0, i32 0), i64 80, i1 false)
  %31 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 11
  store i32 %28, i32* %31, align 4
  %32 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 12
  store i32 %29, i32* %32, align 4
  br i1 %6, label %33, label %162

33:                                               ; preds = %27
  %34 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #11
  %35 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %37, align 8, !alias.scope !84
  br label %65

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %40 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %39, align 8, !noalias !84
  %41 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 4, !noalias !84
  %43 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %40, i64 0, i32 1, i64 0
  %44 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %42, i32* %44, align 8, !alias.scope !84
  %45 = icmp sgt i32 %42, 5
  br i1 %45, label %46, label %53

46:                                               ; preds = %38
  %47 = sext i32 %42 to i64
  %48 = shl nsw i64 %47, 2
  %49 = tail call i8* @_Znam(i64 %48) #10, !noalias !84
  %50 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %51 = bitcast i32** %50 to i8**
  store i8* %49, i8** %51, align 8, !alias.scope !84
  %52 = bitcast i8* %49 to i32*
  br label %58

53:                                               ; preds = %38
  %54 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %55 = bitcast %union.anon* %54 to i32*
  %56 = sext i32 %42 to i64
  %57 = shl nsw i64 %56, 2
  br label %58

58:                                               ; preds = %53, %46
  %59 = phi i64 [ %48, %46 ], [ %57, %53 ]
  %60 = phi i32* [ %52, %46 ], [ %55, %53 ]
  %61 = bitcast i32* %60 to i8*
  %62 = bitcast i32* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 4 %62, i64 %59, i1 false) #11
  %63 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %64 = load i32*, i32** %63, align 8
  br label %65

65:                                               ; preds = %36, %58
  %66 = phi i32* [ %64, %58 ], [ null, %36 ]
  %67 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #11
  %68 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %70, align 8, !alias.scope !87
  br label %98

71:                                               ; preds = %65
  %72 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %73 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %72, align 8, !noalias !87
  %74 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 0
  %75 = load i32, i32* %74, align 4, !noalias !87
  %76 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 1, i64 0
  %77 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %75, i32* %77, align 8, !alias.scope !87
  %78 = icmp sgt i32 %75, 5
  br i1 %78, label %79, label %86

79:                                               ; preds = %71
  %80 = sext i32 %75 to i64
  %81 = shl nsw i64 %80, 2
  %82 = tail call i8* @_Znam(i64 %81) #10, !noalias !87
  %83 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %84 = bitcast i32** %83 to i8**
  store i8* %82, i8** %84, align 8, !alias.scope !87
  %85 = bitcast i8* %82 to i32*
  br label %91

86:                                               ; preds = %71
  %87 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %88 = bitcast %union.anon* %87 to i32*
  %89 = sext i32 %75 to i64
  %90 = shl nsw i64 %89, 2
  br label %91

91:                                               ; preds = %86, %79
  %92 = phi i64 [ %81, %79 ], [ %90, %86 ]
  %93 = phi i32* [ %85, %79 ], [ %88, %86 ]
  %94 = bitcast i32* %93 to i8*
  %95 = bitcast i32* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 4 %95, i64 %92, i1 false) #11
  %96 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1, i32 0
  %97 = load i32*, i32** %96, align 8
  br label %98

98:                                               ; preds = %69, %91
  %99 = phi i32* [ %97, %91 ], [ null, %69 ]
  %100 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #11
  %101 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %103, align 8, !alias.scope !90
  br label %131

104:                                              ; preds = %98
  %105 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %106 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %105, align 8, !noalias !90
  %107 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %106, i64 0, i32 0
  %108 = load i32, i32* %107, align 4, !noalias !90
  %109 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %106, i64 0, i32 1, i64 0
  %110 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %108, i32* %110, align 8, !alias.scope !90
  %111 = icmp sgt i32 %108, 5
  br i1 %111, label %112, label %119

112:                                              ; preds = %104
  %113 = sext i32 %108 to i64
  %114 = shl nsw i64 %113, 2
  %115 = tail call i8* @_Znam(i64 %114) #10, !noalias !90
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %117 = bitcast i32** %116 to i8**
  store i8* %115, i8** %117, align 8, !alias.scope !90
  %118 = bitcast i8* %115 to i32*
  br label %124

119:                                              ; preds = %104
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %121 = bitcast %union.anon* %120 to i32*
  %122 = sext i32 %108 to i64
  %123 = shl nsw i64 %122, 2
  br label %124

124:                                              ; preds = %119, %112
  %125 = phi i64 [ %114, %112 ], [ %123, %119 ]
  %126 = phi i32* [ %118, %112 ], [ %121, %119 ]
  %127 = bitcast i32* %126 to i8*
  %128 = bitcast i32* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %127, i8* align 4 %128, i64 %125, i1 false) #11
  %129 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1, i32 0
  %130 = load i32*, i32** %129, align 8
  br label %131

131:                                              ; preds = %102, %124
  %132 = phi i32* [ %130, %124 ], [ null, %102 ]
  call void @_ZN6tflite13reference_ops16BroadcastSubSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKiS7_S9_S7_Pi(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i32* %66, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i32* %99, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i32* %132)
  %133 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %134 = load i32, i32* %133, align 8
  %135 = icmp sgt i32 %134, 5
  br i1 %135, label %136, label %142

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %138 = load i32*, i32** %137, align 8
  %139 = icmp eq i32* %138, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %136
  %141 = bitcast i32* %138 to i8*
  call void @_ZdaPv(i8* %141) #10
  br label %142

142:                                              ; preds = %131, %136, %140
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #11
  %143 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %144 = load i32, i32* %143, align 8
  %145 = icmp sgt i32 %144, 5
  br i1 %145, label %146, label %152

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %148 = load i32*, i32** %147, align 8
  %149 = icmp eq i32* %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %146
  %151 = bitcast i32* %148 to i8*
  call void @_ZdaPv(i8* %151) #10
  br label %152

152:                                              ; preds = %142, %146, %150
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #11
  %153 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %154 = load i32, i32* %153, align 8
  %155 = icmp sgt i32 %154, 5
  br i1 %155, label %156, label %724

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %158 = load i32*, i32** %157, align 8
  %159 = icmp eq i32* %158, null
  br i1 %159, label %724, label %160

160:                                              ; preds = %156
  %161 = bitcast i32* %158 to i8*
  call void @_ZdaPv(i8* %161) #10
  br label %724

162:                                              ; preds = %27
  %163 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %163) #11
  %164 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %164, label %165, label %167

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %166, align 8, !alias.scope !93
  br label %194

167:                                              ; preds = %162
  %168 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %169 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %168, align 8, !noalias !93
  %170 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %169, i64 0, i32 0
  %171 = load i32, i32* %170, align 4, !noalias !93
  %172 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %169, i64 0, i32 1, i64 0
  %173 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %171, i32* %173, align 8, !alias.scope !93
  %174 = icmp sgt i32 %171, 5
  br i1 %174, label %175, label %182

175:                                              ; preds = %167
  %176 = sext i32 %171 to i64
  %177 = shl nsw i64 %176, 2
  %178 = tail call i8* @_Znam(i64 %177) #10, !noalias !93
  %179 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %180 = bitcast i32** %179 to i8**
  store i8* %178, i8** %180, align 8, !alias.scope !93
  %181 = bitcast i8* %178 to i32*
  br label %187

182:                                              ; preds = %167
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %184 = bitcast %union.anon* %183 to i32*
  %185 = sext i32 %171 to i64
  %186 = shl nsw i64 %185, 2
  br label %187

187:                                              ; preds = %182, %175
  %188 = phi i64 [ %177, %175 ], [ %186, %182 ]
  %189 = phi i32* [ %181, %175 ], [ %184, %182 ]
  %190 = bitcast i32* %189 to i8*
  %191 = bitcast i32* %172 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %190, i8* align 4 %191, i64 %188, i1 false) #11
  %192 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %193 = load i32*, i32** %192, align 8
  br label %194

194:                                              ; preds = %165, %187
  %195 = phi i32 [ %171, %187 ], [ 0, %165 ]
  %196 = phi i32* [ %193, %187 ], [ null, %165 ]
  %197 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %197) #11
  %198 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %198, label %199, label %201

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %200, align 8, !alias.scope !96
  br label %228

201:                                              ; preds = %194
  %202 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %203 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %202, align 8, !noalias !96
  %204 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %203, i64 0, i32 0
  %205 = load i32, i32* %204, align 4, !noalias !96
  %206 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %203, i64 0, i32 1, i64 0
  %207 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %205, i32* %207, align 8, !alias.scope !96
  %208 = icmp sgt i32 %205, 5
  br i1 %208, label %209, label %216

209:                                              ; preds = %201
  %210 = sext i32 %205 to i64
  %211 = shl nsw i64 %210, 2
  %212 = tail call i8* @_Znam(i64 %211) #10, !noalias !96
  %213 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %214 = bitcast i32** %213 to i8**
  store i8* %212, i8** %214, align 8, !alias.scope !96
  %215 = bitcast i8* %212 to i32*
  br label %221

216:                                              ; preds = %201
  %217 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %218 = bitcast %union.anon* %217 to i32*
  %219 = sext i32 %205 to i64
  %220 = shl nsw i64 %219, 2
  br label %221

221:                                              ; preds = %216, %209
  %222 = phi i64 [ %211, %209 ], [ %220, %216 ]
  %223 = phi i32* [ %215, %209 ], [ %218, %216 ]
  %224 = bitcast i32* %223 to i8*
  %225 = bitcast i32* %206 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %224, i8* align 4 %225, i64 %222, i1 false) #11
  %226 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1, i32 0
  %227 = load i32*, i32** %226, align 8
  br label %228

228:                                              ; preds = %199, %221
  %229 = phi i32 [ %205, %221 ], [ 0, %199 ]
  %230 = phi i32* [ %227, %221 ], [ null, %199 ]
  %231 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %231) #11
  %232 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %232, label %233, label %235

233:                                              ; preds = %228
  %234 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %234, align 8, !alias.scope !99
  br label %262

235:                                              ; preds = %228
  %236 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %237 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %236, align 8, !noalias !99
  %238 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %237, i64 0, i32 0
  %239 = load i32, i32* %238, align 4, !noalias !99
  %240 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %237, i64 0, i32 1, i64 0
  %241 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %239, i32* %241, align 8, !alias.scope !99
  %242 = icmp sgt i32 %239, 5
  br i1 %242, label %243, label %250

243:                                              ; preds = %235
  %244 = sext i32 %239 to i64
  %245 = shl nsw i64 %244, 2
  %246 = tail call i8* @_Znam(i64 %245) #10, !noalias !99
  %247 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %248 = bitcast i32** %247 to i8**
  store i8* %246, i8** %248, align 8, !alias.scope !99
  %249 = bitcast i8* %246 to i32*
  br label %255

250:                                              ; preds = %235
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %252 = bitcast %union.anon* %251 to i32*
  %253 = sext i32 %239 to i64
  %254 = shl nsw i64 %253, 2
  br label %255

255:                                              ; preds = %250, %243
  %256 = phi i64 [ %245, %243 ], [ %254, %250 ]
  %257 = phi i32* [ %249, %243 ], [ %252, %250 ]
  %258 = bitcast i32* %257 to i8*
  %259 = bitcast i32* %240 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %258, i8* align 4 %259, i64 %256, i1 false) #11
  %260 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1, i32 0
  %261 = load i32*, i32** %260, align 8
  br label %262

262:                                              ; preds = %233, %255
  %263 = phi i32 [ %239, %255 ], [ 0, %233 ]
  %264 = phi i32* [ %261, %255 ], [ null, %233 ]
  %265 = icmp sgt i32 %195, 5
  %266 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  br i1 %265, label %267, label %270

267:                                              ; preds = %262
  %268 = getelementptr inbounds %union.anon, %union.anon* %266, i64 0, i32 0
  %269 = load i32*, i32** %268, align 8
  br label %273

270:                                              ; preds = %262
  %271 = bitcast %union.anon* %266 to i32*
  %272 = icmp sgt i32 %195, 0
  br i1 %272, label %273, label %373

273:                                              ; preds = %270, %267
  %274 = phi i32* [ %269, %267 ], [ %271, %270 ]
  %275 = zext i32 %195 to i64
  %276 = icmp ult i32 %195, 8
  br i1 %276, label %362, label %277

277:                                              ; preds = %273
  %278 = and i64 %275, 4294967288
  %279 = add nsw i64 %278, -8
  %280 = lshr exact i64 %279, 3
  %281 = add nuw nsw i64 %280, 1
  %282 = and i64 %281, 3
  %283 = icmp ult i64 %279, 24
  br i1 %283, label %329, label %284

284:                                              ; preds = %277
  %285 = sub nsw i64 %281, %282
  br label %286

286:                                              ; preds = %286, %284
  %287 = phi i64 [ 0, %284 ], [ %326, %286 ]
  %288 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %284 ], [ %324, %286 ]
  %289 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %284 ], [ %325, %286 ]
  %290 = phi i64 [ %285, %284 ], [ %327, %286 ]
  %291 = getelementptr inbounds i32, i32* %274, i64 %287
  %292 = bitcast i32* %291 to <4 x i32>*
  %293 = load <4 x i32>, <4 x i32>* %292, align 4
  %294 = getelementptr inbounds i32, i32* %291, i64 4
  %295 = bitcast i32* %294 to <4 x i32>*
  %296 = load <4 x i32>, <4 x i32>* %295, align 4
  %297 = mul nsw <4 x i32> %293, %288
  %298 = mul nsw <4 x i32> %296, %289
  %299 = or i64 %287, 8
  %300 = getelementptr inbounds i32, i32* %274, i64 %299
  %301 = bitcast i32* %300 to <4 x i32>*
  %302 = load <4 x i32>, <4 x i32>* %301, align 4
  %303 = getelementptr inbounds i32, i32* %300, i64 4
  %304 = bitcast i32* %303 to <4 x i32>*
  %305 = load <4 x i32>, <4 x i32>* %304, align 4
  %306 = mul nsw <4 x i32> %302, %297
  %307 = mul nsw <4 x i32> %305, %298
  %308 = or i64 %287, 16
  %309 = getelementptr inbounds i32, i32* %274, i64 %308
  %310 = bitcast i32* %309 to <4 x i32>*
  %311 = load <4 x i32>, <4 x i32>* %310, align 4
  %312 = getelementptr inbounds i32, i32* %309, i64 4
  %313 = bitcast i32* %312 to <4 x i32>*
  %314 = load <4 x i32>, <4 x i32>* %313, align 4
  %315 = mul nsw <4 x i32> %311, %306
  %316 = mul nsw <4 x i32> %314, %307
  %317 = or i64 %287, 24
  %318 = getelementptr inbounds i32, i32* %274, i64 %317
  %319 = bitcast i32* %318 to <4 x i32>*
  %320 = load <4 x i32>, <4 x i32>* %319, align 4
  %321 = getelementptr inbounds i32, i32* %318, i64 4
  %322 = bitcast i32* %321 to <4 x i32>*
  %323 = load <4 x i32>, <4 x i32>* %322, align 4
  %324 = mul nsw <4 x i32> %320, %315
  %325 = mul nsw <4 x i32> %323, %316
  %326 = add i64 %287, 32
  %327 = add i64 %290, -4
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %329, label %286, !llvm.loop !102

329:                                              ; preds = %286, %277
  %330 = phi <4 x i32> [ undef, %277 ], [ %324, %286 ]
  %331 = phi <4 x i32> [ undef, %277 ], [ %325, %286 ]
  %332 = phi i64 [ 0, %277 ], [ %326, %286 ]
  %333 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %277 ], [ %324, %286 ]
  %334 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %277 ], [ %325, %286 ]
  %335 = icmp eq i64 %282, 0
  br i1 %335, label %352, label %336

336:                                              ; preds = %329, %336
  %337 = phi i64 [ %349, %336 ], [ %332, %329 ]
  %338 = phi <4 x i32> [ %347, %336 ], [ %333, %329 ]
  %339 = phi <4 x i32> [ %348, %336 ], [ %334, %329 ]
  %340 = phi i64 [ %350, %336 ], [ %282, %329 ]
  %341 = getelementptr inbounds i32, i32* %274, i64 %337
  %342 = bitcast i32* %341 to <4 x i32>*
  %343 = load <4 x i32>, <4 x i32>* %342, align 4
  %344 = getelementptr inbounds i32, i32* %341, i64 4
  %345 = bitcast i32* %344 to <4 x i32>*
  %346 = load <4 x i32>, <4 x i32>* %345, align 4
  %347 = mul nsw <4 x i32> %343, %338
  %348 = mul nsw <4 x i32> %346, %339
  %349 = add i64 %337, 8
  %350 = add i64 %340, -1
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %352, label %336, !llvm.loop !103

352:                                              ; preds = %336, %329
  %353 = phi <4 x i32> [ %330, %329 ], [ %347, %336 ]
  %354 = phi <4 x i32> [ %331, %329 ], [ %348, %336 ]
  %355 = mul <4 x i32> %354, %353
  %356 = shufflevector <4 x i32> %355, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %357 = mul <4 x i32> %355, %356
  %358 = shufflevector <4 x i32> %357, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %359 = mul <4 x i32> %357, %358
  %360 = extractelement <4 x i32> %359, i32 0
  %361 = icmp eq i64 %278, %275
  br i1 %361, label %373, label %362

362:                                              ; preds = %352, %273
  %363 = phi i64 [ 0, %273 ], [ %278, %352 ]
  %364 = phi i32 [ 1, %273 ], [ %360, %352 ]
  br label %365

365:                                              ; preds = %362, %365
  %366 = phi i64 [ %371, %365 ], [ %363, %362 ]
  %367 = phi i32 [ %370, %365 ], [ %364, %362 ]
  %368 = getelementptr inbounds i32, i32* %274, i64 %366
  %369 = load i32, i32* %368, align 4
  %370 = mul nsw i32 %369, %367
  %371 = add nuw nsw i64 %366, 1
  %372 = icmp eq i64 %371, %275
  br i1 %372, label %373, label %365, !llvm.loop !104

373:                                              ; preds = %365, %352, %270
  %374 = phi i32 [ 1, %270 ], [ %360, %352 ], [ %370, %365 ]
  %375 = icmp sgt i32 %229, 5
  %376 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  br i1 %375, label %377, label %380

377:                                              ; preds = %373
  %378 = getelementptr inbounds %union.anon, %union.anon* %376, i64 0, i32 0
  %379 = load i32*, i32** %378, align 8
  br label %383

380:                                              ; preds = %373
  %381 = bitcast %union.anon* %376 to i32*
  %382 = icmp sgt i32 %229, 0
  br i1 %382, label %383, label %483

383:                                              ; preds = %380, %377
  %384 = phi i32* [ %379, %377 ], [ %381, %380 ]
  %385 = zext i32 %229 to i64
  %386 = icmp ult i32 %229, 8
  br i1 %386, label %472, label %387

387:                                              ; preds = %383
  %388 = and i64 %385, 4294967288
  %389 = add nsw i64 %388, -8
  %390 = lshr exact i64 %389, 3
  %391 = add nuw nsw i64 %390, 1
  %392 = and i64 %391, 3
  %393 = icmp ult i64 %389, 24
  br i1 %393, label %439, label %394

394:                                              ; preds = %387
  %395 = sub nsw i64 %391, %392
  br label %396

396:                                              ; preds = %396, %394
  %397 = phi i64 [ 0, %394 ], [ %436, %396 ]
  %398 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %394 ], [ %434, %396 ]
  %399 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %394 ], [ %435, %396 ]
  %400 = phi i64 [ %395, %394 ], [ %437, %396 ]
  %401 = getelementptr inbounds i32, i32* %384, i64 %397
  %402 = bitcast i32* %401 to <4 x i32>*
  %403 = load <4 x i32>, <4 x i32>* %402, align 4
  %404 = getelementptr inbounds i32, i32* %401, i64 4
  %405 = bitcast i32* %404 to <4 x i32>*
  %406 = load <4 x i32>, <4 x i32>* %405, align 4
  %407 = mul nsw <4 x i32> %403, %398
  %408 = mul nsw <4 x i32> %406, %399
  %409 = or i64 %397, 8
  %410 = getelementptr inbounds i32, i32* %384, i64 %409
  %411 = bitcast i32* %410 to <4 x i32>*
  %412 = load <4 x i32>, <4 x i32>* %411, align 4
  %413 = getelementptr inbounds i32, i32* %410, i64 4
  %414 = bitcast i32* %413 to <4 x i32>*
  %415 = load <4 x i32>, <4 x i32>* %414, align 4
  %416 = mul nsw <4 x i32> %412, %407
  %417 = mul nsw <4 x i32> %415, %408
  %418 = or i64 %397, 16
  %419 = getelementptr inbounds i32, i32* %384, i64 %418
  %420 = bitcast i32* %419 to <4 x i32>*
  %421 = load <4 x i32>, <4 x i32>* %420, align 4
  %422 = getelementptr inbounds i32, i32* %419, i64 4
  %423 = bitcast i32* %422 to <4 x i32>*
  %424 = load <4 x i32>, <4 x i32>* %423, align 4
  %425 = mul nsw <4 x i32> %421, %416
  %426 = mul nsw <4 x i32> %424, %417
  %427 = or i64 %397, 24
  %428 = getelementptr inbounds i32, i32* %384, i64 %427
  %429 = bitcast i32* %428 to <4 x i32>*
  %430 = load <4 x i32>, <4 x i32>* %429, align 4
  %431 = getelementptr inbounds i32, i32* %428, i64 4
  %432 = bitcast i32* %431 to <4 x i32>*
  %433 = load <4 x i32>, <4 x i32>* %432, align 4
  %434 = mul nsw <4 x i32> %430, %425
  %435 = mul nsw <4 x i32> %433, %426
  %436 = add i64 %397, 32
  %437 = add i64 %400, -4
  %438 = icmp eq i64 %437, 0
  br i1 %438, label %439, label %396, !llvm.loop !105

439:                                              ; preds = %396, %387
  %440 = phi <4 x i32> [ undef, %387 ], [ %434, %396 ]
  %441 = phi <4 x i32> [ undef, %387 ], [ %435, %396 ]
  %442 = phi i64 [ 0, %387 ], [ %436, %396 ]
  %443 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %387 ], [ %434, %396 ]
  %444 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %387 ], [ %435, %396 ]
  %445 = icmp eq i64 %392, 0
  br i1 %445, label %462, label %446

446:                                              ; preds = %439, %446
  %447 = phi i64 [ %459, %446 ], [ %442, %439 ]
  %448 = phi <4 x i32> [ %457, %446 ], [ %443, %439 ]
  %449 = phi <4 x i32> [ %458, %446 ], [ %444, %439 ]
  %450 = phi i64 [ %460, %446 ], [ %392, %439 ]
  %451 = getelementptr inbounds i32, i32* %384, i64 %447
  %452 = bitcast i32* %451 to <4 x i32>*
  %453 = load <4 x i32>, <4 x i32>* %452, align 4
  %454 = getelementptr inbounds i32, i32* %451, i64 4
  %455 = bitcast i32* %454 to <4 x i32>*
  %456 = load <4 x i32>, <4 x i32>* %455, align 4
  %457 = mul nsw <4 x i32> %453, %448
  %458 = mul nsw <4 x i32> %456, %449
  %459 = add i64 %447, 8
  %460 = add i64 %450, -1
  %461 = icmp eq i64 %460, 0
  br i1 %461, label %462, label %446, !llvm.loop !106

462:                                              ; preds = %446, %439
  %463 = phi <4 x i32> [ %440, %439 ], [ %457, %446 ]
  %464 = phi <4 x i32> [ %441, %439 ], [ %458, %446 ]
  %465 = mul <4 x i32> %464, %463
  %466 = shufflevector <4 x i32> %465, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %467 = mul <4 x i32> %465, %466
  %468 = shufflevector <4 x i32> %467, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %469 = mul <4 x i32> %467, %468
  %470 = extractelement <4 x i32> %469, i32 0
  %471 = icmp eq i64 %388, %385
  br i1 %471, label %483, label %472

472:                                              ; preds = %462, %383
  %473 = phi i64 [ 0, %383 ], [ %388, %462 ]
  %474 = phi i32 [ 1, %383 ], [ %470, %462 ]
  br label %475

475:                                              ; preds = %472, %475
  %476 = phi i64 [ %481, %475 ], [ %473, %472 ]
  %477 = phi i32 [ %480, %475 ], [ %474, %472 ]
  %478 = getelementptr inbounds i32, i32* %384, i64 %476
  %479 = load i32, i32* %478, align 4
  %480 = mul nsw i32 %479, %477
  %481 = add nuw nsw i64 %476, 1
  %482 = icmp eq i64 %481, %385
  br i1 %482, label %483, label %475, !llvm.loop !107

483:                                              ; preds = %475, %462, %380
  %484 = phi i32 [ 1, %380 ], [ %470, %462 ], [ %480, %475 ]
  %485 = icmp sgt i32 %263, 5
  %486 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  br i1 %485, label %487, label %490

487:                                              ; preds = %483
  %488 = getelementptr inbounds %union.anon, %union.anon* %486, i64 0, i32 0
  %489 = load i32*, i32** %488, align 8
  br label %493

490:                                              ; preds = %483
  %491 = bitcast %union.anon* %486 to i32*
  %492 = icmp sgt i32 %263, 0
  br i1 %492, label %493, label %593

493:                                              ; preds = %490, %487
  %494 = phi i32* [ %489, %487 ], [ %491, %490 ]
  %495 = zext i32 %263 to i64
  %496 = icmp ult i32 %263, 8
  br i1 %496, label %582, label %497

497:                                              ; preds = %493
  %498 = and i64 %495, 4294967288
  %499 = add nsw i64 %498, -8
  %500 = lshr exact i64 %499, 3
  %501 = add nuw nsw i64 %500, 1
  %502 = and i64 %501, 3
  %503 = icmp ult i64 %499, 24
  br i1 %503, label %549, label %504

504:                                              ; preds = %497
  %505 = sub nsw i64 %501, %502
  br label %506

506:                                              ; preds = %506, %504
  %507 = phi i64 [ 0, %504 ], [ %546, %506 ]
  %508 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %504 ], [ %544, %506 ]
  %509 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %504 ], [ %545, %506 ]
  %510 = phi i64 [ %505, %504 ], [ %547, %506 ]
  %511 = getelementptr inbounds i32, i32* %494, i64 %507
  %512 = bitcast i32* %511 to <4 x i32>*
  %513 = load <4 x i32>, <4 x i32>* %512, align 4
  %514 = getelementptr inbounds i32, i32* %511, i64 4
  %515 = bitcast i32* %514 to <4 x i32>*
  %516 = load <4 x i32>, <4 x i32>* %515, align 4
  %517 = mul nsw <4 x i32> %513, %508
  %518 = mul nsw <4 x i32> %516, %509
  %519 = or i64 %507, 8
  %520 = getelementptr inbounds i32, i32* %494, i64 %519
  %521 = bitcast i32* %520 to <4 x i32>*
  %522 = load <4 x i32>, <4 x i32>* %521, align 4
  %523 = getelementptr inbounds i32, i32* %520, i64 4
  %524 = bitcast i32* %523 to <4 x i32>*
  %525 = load <4 x i32>, <4 x i32>* %524, align 4
  %526 = mul nsw <4 x i32> %522, %517
  %527 = mul nsw <4 x i32> %525, %518
  %528 = or i64 %507, 16
  %529 = getelementptr inbounds i32, i32* %494, i64 %528
  %530 = bitcast i32* %529 to <4 x i32>*
  %531 = load <4 x i32>, <4 x i32>* %530, align 4
  %532 = getelementptr inbounds i32, i32* %529, i64 4
  %533 = bitcast i32* %532 to <4 x i32>*
  %534 = load <4 x i32>, <4 x i32>* %533, align 4
  %535 = mul nsw <4 x i32> %531, %526
  %536 = mul nsw <4 x i32> %534, %527
  %537 = or i64 %507, 24
  %538 = getelementptr inbounds i32, i32* %494, i64 %537
  %539 = bitcast i32* %538 to <4 x i32>*
  %540 = load <4 x i32>, <4 x i32>* %539, align 4
  %541 = getelementptr inbounds i32, i32* %538, i64 4
  %542 = bitcast i32* %541 to <4 x i32>*
  %543 = load <4 x i32>, <4 x i32>* %542, align 4
  %544 = mul nsw <4 x i32> %540, %535
  %545 = mul nsw <4 x i32> %543, %536
  %546 = add i64 %507, 32
  %547 = add i64 %510, -4
  %548 = icmp eq i64 %547, 0
  br i1 %548, label %549, label %506, !llvm.loop !108

549:                                              ; preds = %506, %497
  %550 = phi <4 x i32> [ undef, %497 ], [ %544, %506 ]
  %551 = phi <4 x i32> [ undef, %497 ], [ %545, %506 ]
  %552 = phi i64 [ 0, %497 ], [ %546, %506 ]
  %553 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %497 ], [ %544, %506 ]
  %554 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %497 ], [ %545, %506 ]
  %555 = icmp eq i64 %502, 0
  br i1 %555, label %572, label %556

556:                                              ; preds = %549, %556
  %557 = phi i64 [ %569, %556 ], [ %552, %549 ]
  %558 = phi <4 x i32> [ %567, %556 ], [ %553, %549 ]
  %559 = phi <4 x i32> [ %568, %556 ], [ %554, %549 ]
  %560 = phi i64 [ %570, %556 ], [ %502, %549 ]
  %561 = getelementptr inbounds i32, i32* %494, i64 %557
  %562 = bitcast i32* %561 to <4 x i32>*
  %563 = load <4 x i32>, <4 x i32>* %562, align 4
  %564 = getelementptr inbounds i32, i32* %561, i64 4
  %565 = bitcast i32* %564 to <4 x i32>*
  %566 = load <4 x i32>, <4 x i32>* %565, align 4
  %567 = mul nsw <4 x i32> %563, %558
  %568 = mul nsw <4 x i32> %566, %559
  %569 = add i64 %557, 8
  %570 = add i64 %560, -1
  %571 = icmp eq i64 %570, 0
  br i1 %571, label %572, label %556, !llvm.loop !109

572:                                              ; preds = %556, %549
  %573 = phi <4 x i32> [ %550, %549 ], [ %567, %556 ]
  %574 = phi <4 x i32> [ %551, %549 ], [ %568, %556 ]
  %575 = mul <4 x i32> %574, %573
  %576 = shufflevector <4 x i32> %575, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %577 = mul <4 x i32> %575, %576
  %578 = shufflevector <4 x i32> %577, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %579 = mul <4 x i32> %577, %578
  %580 = extractelement <4 x i32> %579, i32 0
  %581 = icmp eq i64 %498, %495
  br i1 %581, label %593, label %582

582:                                              ; preds = %572, %493
  %583 = phi i64 [ 0, %493 ], [ %498, %572 ]
  %584 = phi i32 [ 1, %493 ], [ %580, %572 ]
  br label %585

585:                                              ; preds = %582, %585
  %586 = phi i64 [ %591, %585 ], [ %583, %582 ]
  %587 = phi i32 [ %590, %585 ], [ %584, %582 ]
  %588 = getelementptr inbounds i32, i32* %494, i64 %586
  %589 = load i32, i32* %588, align 4
  %590 = mul nsw i32 %589, %587
  %591 = add nuw nsw i64 %586, 1
  %592 = icmp eq i64 %591, %495
  br i1 %592, label %593, label %585, !llvm.loop !110

593:                                              ; preds = %585, %572, %490
  %594 = phi i32 [ 1, %490 ], [ %580, %572 ], [ %590, %585 ]
  %595 = icmp eq i32 %374, %484
  br i1 %595, label %597, label %596

596:                                              ; preds = %593
  tail call void @abort() #12
  unreachable

597:                                              ; preds = %593
  %598 = icmp eq i32 %374, %594
  br i1 %598, label %599, label %682

599:                                              ; preds = %597
  %600 = icmp sgt i32 %374, 0
  br i1 %600, label %601, label %703

601:                                              ; preds = %599
  %602 = zext i32 %374 to i64
  %603 = load i32, i32* %196, align 4
  %604 = load i32, i32* %230, align 4
  %605 = sub nsw i32 %603, %604
  %606 = sitofp i32 %605 to float
  %607 = sitofp i32 %28 to float
  %608 = sitofp i32 %29 to float
  %609 = fcmp olt float %606, %607
  %610 = select i1 %609, float %607, float %606
  %611 = fcmp ogt float %610, %608
  %612 = select i1 %611, float %608, float %610
  %613 = fptosi float %612 to i32
  store i32 %613, i32* %264, align 4
  %614 = icmp eq i32 %374, 1
  br i1 %614, label %703, label %615

615:                                              ; preds = %601
  %616 = add nsw i64 %602, -1
  %617 = icmp ult i64 %616, 4
  br i1 %617, label %618, label %620

618:                                              ; preds = %680, %620, %615
  %619 = phi i64 [ 1, %620 ], [ 1, %615 ], [ %651, %680 ]
  br label %683

620:                                              ; preds = %615
  %621 = getelementptr i32, i32* %264, i64 1
  %622 = bitcast i32* %621 to i8*
  %623 = getelementptr i32, i32* %264, i64 %602
  %624 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 11
  %625 = bitcast i32* %624 to i8*
  %626 = getelementptr inbounds i8, i8* %625, i64 1
  %627 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 12
  %628 = bitcast i32* %627 to i8*
  %629 = getelementptr inbounds i8, i8* %628, i64 1
  %630 = getelementptr i32, i32* %196, i64 1
  %631 = getelementptr i32, i32* %196, i64 %602
  %632 = getelementptr i32, i32* %230, i64 1
  %633 = getelementptr i32, i32* %230, i64 %602
  %634 = icmp ugt i8* %626, %622
  %635 = icmp ult i32* %31, %623
  %636 = and i1 %634, %635
  %637 = icmp ugt i8* %629, %622
  %638 = icmp ult i32* %32, %623
  %639 = and i1 %637, %638
  %640 = or i1 %636, %639
  %641 = icmp ult i32* %621, %631
  %642 = icmp ult i32* %630, %623
  %643 = and i1 %641, %642
  %644 = or i1 %640, %643
  %645 = icmp ult i32* %621, %633
  %646 = icmp ult i32* %632, %623
  %647 = and i1 %645, %646
  %648 = or i1 %644, %647
  br i1 %648, label %618, label %649

649:                                              ; preds = %620
  %650 = and i64 %616, -4
  %651 = or i64 %650, 1
  %652 = load i32, i32* %31, align 4, !alias.scope !111
  %653 = insertelement <4 x i32> undef, i32 %652, i32 0
  %654 = shufflevector <4 x i32> %653, <4 x i32> undef, <4 x i32> zeroinitializer
  %655 = load i32, i32* %32, align 4, !alias.scope !114
  %656 = insertelement <4 x i32> undef, i32 %655, i32 0
  %657 = shufflevector <4 x i32> %656, <4 x i32> undef, <4 x i32> zeroinitializer
  %658 = sitofp <4 x i32> %654 to <4 x float>
  %659 = sitofp <4 x i32> %657 to <4 x float>
  br label %660

660:                                              ; preds = %660, %649
  %661 = phi i64 [ 0, %649 ], [ %678, %660 ]
  %662 = or i64 %661, 1
  %663 = getelementptr inbounds i32, i32* %196, i64 %662
  %664 = bitcast i32* %663 to <4 x i32>*
  %665 = load <4 x i32>, <4 x i32>* %664, align 4, !alias.scope !116
  %666 = getelementptr inbounds i32, i32* %230, i64 %662
  %667 = bitcast i32* %666 to <4 x i32>*
  %668 = load <4 x i32>, <4 x i32>* %667, align 4, !alias.scope !118
  %669 = sub nsw <4 x i32> %665, %668
  %670 = sitofp <4 x i32> %669 to <4 x float>
  %671 = fcmp olt <4 x float> %670, %658
  %672 = select <4 x i1> %671, <4 x float> %658, <4 x float> %670
  %673 = fcmp ogt <4 x float> %672, %659
  %674 = select <4 x i1> %673, <4 x float> %659, <4 x float> %672
  %675 = fptosi <4 x float> %674 to <4 x i32>
  %676 = getelementptr inbounds i32, i32* %264, i64 %662
  %677 = bitcast i32* %676 to <4 x i32>*
  store <4 x i32> %675, <4 x i32>* %677, align 4, !alias.scope !120, !noalias !122
  %678 = add i64 %661, 4
  %679 = icmp eq i64 %678, %650
  br i1 %679, label %680, label %660, !llvm.loop !123

680:                                              ; preds = %660
  %681 = icmp eq i64 %616, %650
  br i1 %681, label %703, label %618

682:                                              ; preds = %597
  tail call void @abort() #12
  unreachable

683:                                              ; preds = %618, %683
  %684 = phi i64 [ %701, %683 ], [ %619, %618 ]
  %685 = load i32, i32* %31, align 4
  %686 = load i32, i32* %32, align 4
  %687 = getelementptr inbounds i32, i32* %196, i64 %684
  %688 = load i32, i32* %687, align 4
  %689 = getelementptr inbounds i32, i32* %230, i64 %684
  %690 = load i32, i32* %689, align 4
  %691 = sub nsw i32 %688, %690
  %692 = sitofp i32 %691 to float
  %693 = sitofp i32 %685 to float
  %694 = sitofp i32 %686 to float
  %695 = fcmp olt float %692, %693
  %696 = select i1 %695, float %693, float %692
  %697 = fcmp ogt float %696, %694
  %698 = select i1 %697, float %694, float %696
  %699 = fptosi float %698 to i32
  %700 = getelementptr inbounds i32, i32* %264, i64 %684
  store i32 %699, i32* %700, align 4
  %701 = add nuw nsw i64 %684, 1
  %702 = icmp eq i64 %701, %602
  br i1 %702, label %703, label %683, !llvm.loop !124

703:                                              ; preds = %683, %601, %680, %599
  br i1 %485, label %704, label %710

704:                                              ; preds = %703
  %705 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %706 = load i32*, i32** %705, align 8
  %707 = icmp eq i32* %706, null
  br i1 %707, label %710, label %708

708:                                              ; preds = %704
  %709 = bitcast i32* %706 to i8*
  tail call void @_ZdaPv(i8* %709) #10
  br label %710

710:                                              ; preds = %703, %704, %708
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %231) #11
  br i1 %375, label %711, label %717

711:                                              ; preds = %710
  %712 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %713 = load i32*, i32** %712, align 8
  %714 = icmp eq i32* %713, null
  br i1 %714, label %717, label %715

715:                                              ; preds = %711
  %716 = bitcast i32* %713 to i8*
  tail call void @_ZdaPv(i8* %716) #10
  br label %717

717:                                              ; preds = %710, %711, %715
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %197) #11
  br i1 %265, label %718, label %724

718:                                              ; preds = %717
  %719 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %720 = load i32*, i32** %719, align 8
  %721 = icmp eq i32* %720, null
  br i1 %721, label %724, label %722

722:                                              ; preds = %718
  %723 = bitcast i32* %720 to i8*
  tail call void @_ZdaPv(i8* %723) #10
  br label %724

724:                                              ; preds = %722, %718, %717, %160, %156, %152
  %725 = phi i8* [ %34, %152 ], [ %34, %156 ], [ %34, %160 ], [ %163, %717 ], [ %163, %718 ], [ %163, %722 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %725) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %30) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE0EfEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteSubParams*, %"struct.tflite::ops::builtin::sub::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, i1 zeroext, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %9 = alloca %"struct.tflite::ArithmeticParams", align 4
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = getelementptr inbounds %struct.TfLiteSubParams, %struct.TfLiteSubParams* %2, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, -1
  %19 = icmp ult i32 %18, 3
  br i1 %19, label %20, label %27

20:                                               ; preds = %8
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE2EfEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_, i64 0, i64 %21
  %23 = load float, float* %22, align 4
  %24 = sext i32 %18 to i64
  %25 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE2EfEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_.47, i64 0, i64 %24
  %26 = load float, float* %25, align 4
  br label %27

27:                                               ; preds = %8, %20
  %28 = phi float [ %23, %20 ], [ 0xC7EFFFFFE0000000, %8 ]
  %29 = phi float [ %26, %20 ], [ 0x47EFFFFFE0000000, %8 ]
  %30 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %30) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3sub13EvalQuantizedILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.op_params, i64 0, i32 0), i64 80, i1 false)
  %31 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 13
  store float %28, float* %31, align 4
  %32 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 14
  store float %29, float* %32, align 4
  br i1 %6, label %33, label %165

33:                                               ; preds = %27
  %34 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #11
  %35 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %37, align 8, !alias.scope !125
  br label %66

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %40 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %39, align 8, !noalias !125
  %41 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 4, !noalias !125
  %43 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %40, i64 0, i32 1, i64 0
  %44 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %42, i32* %44, align 8, !alias.scope !125
  %45 = icmp sgt i32 %42, 5
  br i1 %45, label %46, label %53

46:                                               ; preds = %38
  %47 = sext i32 %42 to i64
  %48 = shl nsw i64 %47, 2
  %49 = tail call i8* @_Znam(i64 %48) #10, !noalias !125
  %50 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %51 = bitcast i32** %50 to i8**
  store i8* %49, i8** %51, align 8, !alias.scope !125
  %52 = bitcast i8* %49 to i32*
  br label %58

53:                                               ; preds = %38
  %54 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %55 = bitcast %union.anon* %54 to i32*
  %56 = sext i32 %42 to i64
  %57 = shl nsw i64 %56, 2
  br label %58

58:                                               ; preds = %53, %46
  %59 = phi i64 [ %48, %46 ], [ %57, %53 ]
  %60 = phi i32* [ %52, %46 ], [ %55, %53 ]
  %61 = bitcast i32* %60 to i8*
  %62 = bitcast i32* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 4 %62, i64 %59, i1 false) #11
  %63 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %64 = bitcast %union.TfLitePtrUnion* %63 to float**
  %65 = load float*, float** %64, align 8
  br label %66

66:                                               ; preds = %36, %58
  %67 = phi float* [ %65, %58 ], [ null, %36 ]
  %68 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68) #11
  %69 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %71, align 8, !alias.scope !128
  br label %100

72:                                               ; preds = %66
  %73 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %74 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %73, align 8, !noalias !128
  %75 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %74, i64 0, i32 0
  %76 = load i32, i32* %75, align 4, !noalias !128
  %77 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %74, i64 0, i32 1, i64 0
  %78 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %76, i32* %78, align 8, !alias.scope !128
  %79 = icmp sgt i32 %76, 5
  br i1 %79, label %80, label %87

80:                                               ; preds = %72
  %81 = sext i32 %76 to i64
  %82 = shl nsw i64 %81, 2
  %83 = tail call i8* @_Znam(i64 %82) #10, !noalias !128
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %85 = bitcast i32** %84 to i8**
  store i8* %83, i8** %85, align 8, !alias.scope !128
  %86 = bitcast i8* %83 to i32*
  br label %92

87:                                               ; preds = %72
  %88 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %89 = bitcast %union.anon* %88 to i32*
  %90 = sext i32 %76 to i64
  %91 = shl nsw i64 %90, 2
  br label %92

92:                                               ; preds = %87, %80
  %93 = phi i64 [ %82, %80 ], [ %91, %87 ]
  %94 = phi i32* [ %86, %80 ], [ %89, %87 ]
  %95 = bitcast i32* %94 to i8*
  %96 = bitcast i32* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* align 4 %96, i64 %93, i1 false) #11
  %97 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %98 = bitcast %union.TfLitePtrUnion* %97 to float**
  %99 = load float*, float** %98, align 8
  br label %100

100:                                              ; preds = %70, %92
  %101 = phi float* [ %99, %92 ], [ null, %70 ]
  %102 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %102) #11
  %103 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %105, align 8, !alias.scope !131
  br label %134

106:                                              ; preds = %100
  %107 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %108 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %107, align 8, !noalias !131
  %109 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %108, i64 0, i32 0
  %110 = load i32, i32* %109, align 4, !noalias !131
  %111 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %108, i64 0, i32 1, i64 0
  %112 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %110, i32* %112, align 8, !alias.scope !131
  %113 = icmp sgt i32 %110, 5
  br i1 %113, label %114, label %121

114:                                              ; preds = %106
  %115 = sext i32 %110 to i64
  %116 = shl nsw i64 %115, 2
  %117 = tail call i8* @_Znam(i64 %116) #10, !noalias !131
  %118 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %119 = bitcast i32** %118 to i8**
  store i8* %117, i8** %119, align 8, !alias.scope !131
  %120 = bitcast i8* %117 to i32*
  br label %126

121:                                              ; preds = %106
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %123 = bitcast %union.anon* %122 to i32*
  %124 = sext i32 %110 to i64
  %125 = shl nsw i64 %124, 2
  br label %126

126:                                              ; preds = %121, %114
  %127 = phi i64 [ %116, %114 ], [ %125, %121 ]
  %128 = phi i32* [ %120, %114 ], [ %123, %121 ]
  %129 = bitcast i32* %128 to i8*
  %130 = bitcast i32* %111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %129, i8* align 4 %130, i64 %127, i1 false) #11
  %131 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1
  %132 = bitcast %union.TfLitePtrUnion* %131 to float**
  %133 = load float*, float** %132, align 8
  br label %134

134:                                              ; preds = %104, %126
  %135 = phi float* [ %133, %126 ], [ null, %104 ]
  call void @_ZN6tflite13reference_ops16BroadcastSubSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKfS7_S9_S7_Pf(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, float* %67, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, float* %101, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, float* %135)
  %136 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %137 = load i32, i32* %136, align 8
  %138 = icmp sgt i32 %137, 5
  br i1 %138, label %139, label %145

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %141 = load i32*, i32** %140, align 8
  %142 = icmp eq i32* %141, null
  br i1 %142, label %145, label %143

143:                                              ; preds = %139
  %144 = bitcast i32* %141 to i8*
  call void @_ZdaPv(i8* %144) #10
  br label %145

145:                                              ; preds = %134, %139, %143
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %102) #11
  %146 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %147 = load i32, i32* %146, align 8
  %148 = icmp sgt i32 %147, 5
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %151 = load i32*, i32** %150, align 8
  %152 = icmp eq i32* %151, null
  br i1 %152, label %155, label %153

153:                                              ; preds = %149
  %154 = bitcast i32* %151 to i8*
  call void @_ZdaPv(i8* %154) #10
  br label %155

155:                                              ; preds = %145, %149, %153
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %68) #11
  %156 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %157 = load i32, i32* %156, align 8
  %158 = icmp sgt i32 %157, 5
  br i1 %158, label %159, label %752

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %161 = load i32*, i32** %160, align 8
  %162 = icmp eq i32* %161, null
  br i1 %162, label %752, label %163

163:                                              ; preds = %159
  %164 = bitcast i32* %161 to i8*
  call void @_ZdaPv(i8* %164) #10
  br label %752

165:                                              ; preds = %27
  %166 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %166) #11
  %167 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %167, label %168, label %170

168:                                              ; preds = %165
  %169 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %169, align 8, !alias.scope !134
  br label %198

170:                                              ; preds = %165
  %171 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %172 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %171, align 8, !noalias !134
  %173 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %172, i64 0, i32 0
  %174 = load i32, i32* %173, align 4, !noalias !134
  %175 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %172, i64 0, i32 1, i64 0
  %176 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %174, i32* %176, align 8, !alias.scope !134
  %177 = icmp sgt i32 %174, 5
  br i1 %177, label %178, label %185

178:                                              ; preds = %170
  %179 = sext i32 %174 to i64
  %180 = shl nsw i64 %179, 2
  %181 = tail call i8* @_Znam(i64 %180) #10, !noalias !134
  %182 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %183 = bitcast i32** %182 to i8**
  store i8* %181, i8** %183, align 8, !alias.scope !134
  %184 = bitcast i8* %181 to i32*
  br label %190

185:                                              ; preds = %170
  %186 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %187 = bitcast %union.anon* %186 to i32*
  %188 = sext i32 %174 to i64
  %189 = shl nsw i64 %188, 2
  br label %190

190:                                              ; preds = %185, %178
  %191 = phi i64 [ %180, %178 ], [ %189, %185 ]
  %192 = phi i32* [ %184, %178 ], [ %187, %185 ]
  %193 = bitcast i32* %192 to i8*
  %194 = bitcast i32* %175 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %193, i8* align 4 %194, i64 %191, i1 false) #11
  %195 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %196 = bitcast %union.TfLitePtrUnion* %195 to float**
  %197 = load float*, float** %196, align 8
  br label %198

198:                                              ; preds = %168, %190
  %199 = phi i32 [ %174, %190 ], [ 0, %168 ]
  %200 = phi float* [ %197, %190 ], [ null, %168 ]
  %201 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %201) #11
  %202 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %202, label %203, label %205

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %204, align 8, !alias.scope !137
  br label %233

205:                                              ; preds = %198
  %206 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %207 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %206, align 8, !noalias !137
  %208 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %207, i64 0, i32 0
  %209 = load i32, i32* %208, align 4, !noalias !137
  %210 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %207, i64 0, i32 1, i64 0
  %211 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %209, i32* %211, align 8, !alias.scope !137
  %212 = icmp sgt i32 %209, 5
  br i1 %212, label %213, label %220

213:                                              ; preds = %205
  %214 = sext i32 %209 to i64
  %215 = shl nsw i64 %214, 2
  %216 = tail call i8* @_Znam(i64 %215) #10, !noalias !137
  %217 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %218 = bitcast i32** %217 to i8**
  store i8* %216, i8** %218, align 8, !alias.scope !137
  %219 = bitcast i8* %216 to i32*
  br label %225

220:                                              ; preds = %205
  %221 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %222 = bitcast %union.anon* %221 to i32*
  %223 = sext i32 %209 to i64
  %224 = shl nsw i64 %223, 2
  br label %225

225:                                              ; preds = %220, %213
  %226 = phi i64 [ %215, %213 ], [ %224, %220 ]
  %227 = phi i32* [ %219, %213 ], [ %222, %220 ]
  %228 = bitcast i32* %227 to i8*
  %229 = bitcast i32* %210 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %228, i8* align 4 %229, i64 %226, i1 false) #11
  %230 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %231 = bitcast %union.TfLitePtrUnion* %230 to float**
  %232 = load float*, float** %231, align 8
  br label %233

233:                                              ; preds = %203, %225
  %234 = phi i32 [ %209, %225 ], [ 0, %203 ]
  %235 = phi float* [ %232, %225 ], [ null, %203 ]
  %236 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %236) #11
  %237 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %237, label %238, label %240

238:                                              ; preds = %233
  %239 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %239, align 8, !alias.scope !140
  br label %268

240:                                              ; preds = %233
  %241 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %242 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %241, align 8, !noalias !140
  %243 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %242, i64 0, i32 0
  %244 = load i32, i32* %243, align 4, !noalias !140
  %245 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %242, i64 0, i32 1, i64 0
  %246 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %244, i32* %246, align 8, !alias.scope !140
  %247 = icmp sgt i32 %244, 5
  br i1 %247, label %248, label %255

248:                                              ; preds = %240
  %249 = sext i32 %244 to i64
  %250 = shl nsw i64 %249, 2
  %251 = tail call i8* @_Znam(i64 %250) #10, !noalias !140
  %252 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %253 = bitcast i32** %252 to i8**
  store i8* %251, i8** %253, align 8, !alias.scope !140
  %254 = bitcast i8* %251 to i32*
  br label %260

255:                                              ; preds = %240
  %256 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %257 = bitcast %union.anon* %256 to i32*
  %258 = sext i32 %244 to i64
  %259 = shl nsw i64 %258, 2
  br label %260

260:                                              ; preds = %255, %248
  %261 = phi i64 [ %250, %248 ], [ %259, %255 ]
  %262 = phi i32* [ %254, %248 ], [ %257, %255 ]
  %263 = bitcast i32* %262 to i8*
  %264 = bitcast i32* %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %263, i8* align 4 %264, i64 %261, i1 false) #11
  %265 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1
  %266 = bitcast %union.TfLitePtrUnion* %265 to float**
  %267 = load float*, float** %266, align 8
  br label %268

268:                                              ; preds = %238, %260
  %269 = phi i32 [ %244, %260 ], [ 0, %238 ]
  %270 = phi float* [ %267, %260 ], [ null, %238 ]
  %271 = icmp sgt i32 %199, 5
  %272 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  br i1 %271, label %273, label %276

273:                                              ; preds = %268
  %274 = getelementptr inbounds %union.anon, %union.anon* %272, i64 0, i32 0
  %275 = load i32*, i32** %274, align 8
  br label %279

276:                                              ; preds = %268
  %277 = bitcast %union.anon* %272 to i32*
  %278 = icmp sgt i32 %199, 0
  br i1 %278, label %279, label %379

279:                                              ; preds = %276, %273
  %280 = phi i32* [ %275, %273 ], [ %277, %276 ]
  %281 = zext i32 %199 to i64
  %282 = icmp ult i32 %199, 8
  br i1 %282, label %368, label %283

283:                                              ; preds = %279
  %284 = and i64 %281, 4294967288
  %285 = add nsw i64 %284, -8
  %286 = lshr exact i64 %285, 3
  %287 = add nuw nsw i64 %286, 1
  %288 = and i64 %287, 3
  %289 = icmp ult i64 %285, 24
  br i1 %289, label %335, label %290

290:                                              ; preds = %283
  %291 = sub nsw i64 %287, %288
  br label %292

292:                                              ; preds = %292, %290
  %293 = phi i64 [ 0, %290 ], [ %332, %292 ]
  %294 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %290 ], [ %330, %292 ]
  %295 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %290 ], [ %331, %292 ]
  %296 = phi i64 [ %291, %290 ], [ %333, %292 ]
  %297 = getelementptr inbounds i32, i32* %280, i64 %293
  %298 = bitcast i32* %297 to <4 x i32>*
  %299 = load <4 x i32>, <4 x i32>* %298, align 4
  %300 = getelementptr inbounds i32, i32* %297, i64 4
  %301 = bitcast i32* %300 to <4 x i32>*
  %302 = load <4 x i32>, <4 x i32>* %301, align 4
  %303 = mul nsw <4 x i32> %299, %294
  %304 = mul nsw <4 x i32> %302, %295
  %305 = or i64 %293, 8
  %306 = getelementptr inbounds i32, i32* %280, i64 %305
  %307 = bitcast i32* %306 to <4 x i32>*
  %308 = load <4 x i32>, <4 x i32>* %307, align 4
  %309 = getelementptr inbounds i32, i32* %306, i64 4
  %310 = bitcast i32* %309 to <4 x i32>*
  %311 = load <4 x i32>, <4 x i32>* %310, align 4
  %312 = mul nsw <4 x i32> %308, %303
  %313 = mul nsw <4 x i32> %311, %304
  %314 = or i64 %293, 16
  %315 = getelementptr inbounds i32, i32* %280, i64 %314
  %316 = bitcast i32* %315 to <4 x i32>*
  %317 = load <4 x i32>, <4 x i32>* %316, align 4
  %318 = getelementptr inbounds i32, i32* %315, i64 4
  %319 = bitcast i32* %318 to <4 x i32>*
  %320 = load <4 x i32>, <4 x i32>* %319, align 4
  %321 = mul nsw <4 x i32> %317, %312
  %322 = mul nsw <4 x i32> %320, %313
  %323 = or i64 %293, 24
  %324 = getelementptr inbounds i32, i32* %280, i64 %323
  %325 = bitcast i32* %324 to <4 x i32>*
  %326 = load <4 x i32>, <4 x i32>* %325, align 4
  %327 = getelementptr inbounds i32, i32* %324, i64 4
  %328 = bitcast i32* %327 to <4 x i32>*
  %329 = load <4 x i32>, <4 x i32>* %328, align 4
  %330 = mul nsw <4 x i32> %326, %321
  %331 = mul nsw <4 x i32> %329, %322
  %332 = add i64 %293, 32
  %333 = add i64 %296, -4
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %292, !llvm.loop !143

335:                                              ; preds = %292, %283
  %336 = phi <4 x i32> [ undef, %283 ], [ %330, %292 ]
  %337 = phi <4 x i32> [ undef, %283 ], [ %331, %292 ]
  %338 = phi i64 [ 0, %283 ], [ %332, %292 ]
  %339 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %283 ], [ %330, %292 ]
  %340 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %283 ], [ %331, %292 ]
  %341 = icmp eq i64 %288, 0
  br i1 %341, label %358, label %342

342:                                              ; preds = %335, %342
  %343 = phi i64 [ %355, %342 ], [ %338, %335 ]
  %344 = phi <4 x i32> [ %353, %342 ], [ %339, %335 ]
  %345 = phi <4 x i32> [ %354, %342 ], [ %340, %335 ]
  %346 = phi i64 [ %356, %342 ], [ %288, %335 ]
  %347 = getelementptr inbounds i32, i32* %280, i64 %343
  %348 = bitcast i32* %347 to <4 x i32>*
  %349 = load <4 x i32>, <4 x i32>* %348, align 4
  %350 = getelementptr inbounds i32, i32* %347, i64 4
  %351 = bitcast i32* %350 to <4 x i32>*
  %352 = load <4 x i32>, <4 x i32>* %351, align 4
  %353 = mul nsw <4 x i32> %349, %344
  %354 = mul nsw <4 x i32> %352, %345
  %355 = add i64 %343, 8
  %356 = add i64 %346, -1
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %358, label %342, !llvm.loop !144

358:                                              ; preds = %342, %335
  %359 = phi <4 x i32> [ %336, %335 ], [ %353, %342 ]
  %360 = phi <4 x i32> [ %337, %335 ], [ %354, %342 ]
  %361 = mul <4 x i32> %360, %359
  %362 = shufflevector <4 x i32> %361, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %363 = mul <4 x i32> %361, %362
  %364 = shufflevector <4 x i32> %363, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %365 = mul <4 x i32> %363, %364
  %366 = extractelement <4 x i32> %365, i32 0
  %367 = icmp eq i64 %284, %281
  br i1 %367, label %379, label %368

368:                                              ; preds = %358, %279
  %369 = phi i64 [ 0, %279 ], [ %284, %358 ]
  %370 = phi i32 [ 1, %279 ], [ %366, %358 ]
  br label %371

371:                                              ; preds = %368, %371
  %372 = phi i64 [ %377, %371 ], [ %369, %368 ]
  %373 = phi i32 [ %376, %371 ], [ %370, %368 ]
  %374 = getelementptr inbounds i32, i32* %280, i64 %372
  %375 = load i32, i32* %374, align 4
  %376 = mul nsw i32 %375, %373
  %377 = add nuw nsw i64 %372, 1
  %378 = icmp eq i64 %377, %281
  br i1 %378, label %379, label %371, !llvm.loop !145

379:                                              ; preds = %371, %358, %276
  %380 = phi i32 [ 1, %276 ], [ %366, %358 ], [ %376, %371 ]
  %381 = icmp sgt i32 %234, 5
  %382 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  br i1 %381, label %383, label %386

383:                                              ; preds = %379
  %384 = getelementptr inbounds %union.anon, %union.anon* %382, i64 0, i32 0
  %385 = load i32*, i32** %384, align 8
  br label %389

386:                                              ; preds = %379
  %387 = bitcast %union.anon* %382 to i32*
  %388 = icmp sgt i32 %234, 0
  br i1 %388, label %389, label %489

389:                                              ; preds = %386, %383
  %390 = phi i32* [ %385, %383 ], [ %387, %386 ]
  %391 = zext i32 %234 to i64
  %392 = icmp ult i32 %234, 8
  br i1 %392, label %478, label %393

393:                                              ; preds = %389
  %394 = and i64 %391, 4294967288
  %395 = add nsw i64 %394, -8
  %396 = lshr exact i64 %395, 3
  %397 = add nuw nsw i64 %396, 1
  %398 = and i64 %397, 3
  %399 = icmp ult i64 %395, 24
  br i1 %399, label %445, label %400

400:                                              ; preds = %393
  %401 = sub nsw i64 %397, %398
  br label %402

402:                                              ; preds = %402, %400
  %403 = phi i64 [ 0, %400 ], [ %442, %402 ]
  %404 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %400 ], [ %440, %402 ]
  %405 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %400 ], [ %441, %402 ]
  %406 = phi i64 [ %401, %400 ], [ %443, %402 ]
  %407 = getelementptr inbounds i32, i32* %390, i64 %403
  %408 = bitcast i32* %407 to <4 x i32>*
  %409 = load <4 x i32>, <4 x i32>* %408, align 4
  %410 = getelementptr inbounds i32, i32* %407, i64 4
  %411 = bitcast i32* %410 to <4 x i32>*
  %412 = load <4 x i32>, <4 x i32>* %411, align 4
  %413 = mul nsw <4 x i32> %409, %404
  %414 = mul nsw <4 x i32> %412, %405
  %415 = or i64 %403, 8
  %416 = getelementptr inbounds i32, i32* %390, i64 %415
  %417 = bitcast i32* %416 to <4 x i32>*
  %418 = load <4 x i32>, <4 x i32>* %417, align 4
  %419 = getelementptr inbounds i32, i32* %416, i64 4
  %420 = bitcast i32* %419 to <4 x i32>*
  %421 = load <4 x i32>, <4 x i32>* %420, align 4
  %422 = mul nsw <4 x i32> %418, %413
  %423 = mul nsw <4 x i32> %421, %414
  %424 = or i64 %403, 16
  %425 = getelementptr inbounds i32, i32* %390, i64 %424
  %426 = bitcast i32* %425 to <4 x i32>*
  %427 = load <4 x i32>, <4 x i32>* %426, align 4
  %428 = getelementptr inbounds i32, i32* %425, i64 4
  %429 = bitcast i32* %428 to <4 x i32>*
  %430 = load <4 x i32>, <4 x i32>* %429, align 4
  %431 = mul nsw <4 x i32> %427, %422
  %432 = mul nsw <4 x i32> %430, %423
  %433 = or i64 %403, 24
  %434 = getelementptr inbounds i32, i32* %390, i64 %433
  %435 = bitcast i32* %434 to <4 x i32>*
  %436 = load <4 x i32>, <4 x i32>* %435, align 4
  %437 = getelementptr inbounds i32, i32* %434, i64 4
  %438 = bitcast i32* %437 to <4 x i32>*
  %439 = load <4 x i32>, <4 x i32>* %438, align 4
  %440 = mul nsw <4 x i32> %436, %431
  %441 = mul nsw <4 x i32> %439, %432
  %442 = add i64 %403, 32
  %443 = add i64 %406, -4
  %444 = icmp eq i64 %443, 0
  br i1 %444, label %445, label %402, !llvm.loop !146

445:                                              ; preds = %402, %393
  %446 = phi <4 x i32> [ undef, %393 ], [ %440, %402 ]
  %447 = phi <4 x i32> [ undef, %393 ], [ %441, %402 ]
  %448 = phi i64 [ 0, %393 ], [ %442, %402 ]
  %449 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %393 ], [ %440, %402 ]
  %450 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %393 ], [ %441, %402 ]
  %451 = icmp eq i64 %398, 0
  br i1 %451, label %468, label %452

452:                                              ; preds = %445, %452
  %453 = phi i64 [ %465, %452 ], [ %448, %445 ]
  %454 = phi <4 x i32> [ %463, %452 ], [ %449, %445 ]
  %455 = phi <4 x i32> [ %464, %452 ], [ %450, %445 ]
  %456 = phi i64 [ %466, %452 ], [ %398, %445 ]
  %457 = getelementptr inbounds i32, i32* %390, i64 %453
  %458 = bitcast i32* %457 to <4 x i32>*
  %459 = load <4 x i32>, <4 x i32>* %458, align 4
  %460 = getelementptr inbounds i32, i32* %457, i64 4
  %461 = bitcast i32* %460 to <4 x i32>*
  %462 = load <4 x i32>, <4 x i32>* %461, align 4
  %463 = mul nsw <4 x i32> %459, %454
  %464 = mul nsw <4 x i32> %462, %455
  %465 = add i64 %453, 8
  %466 = add i64 %456, -1
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %468, label %452, !llvm.loop !147

468:                                              ; preds = %452, %445
  %469 = phi <4 x i32> [ %446, %445 ], [ %463, %452 ]
  %470 = phi <4 x i32> [ %447, %445 ], [ %464, %452 ]
  %471 = mul <4 x i32> %470, %469
  %472 = shufflevector <4 x i32> %471, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %473 = mul <4 x i32> %471, %472
  %474 = shufflevector <4 x i32> %473, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %475 = mul <4 x i32> %473, %474
  %476 = extractelement <4 x i32> %475, i32 0
  %477 = icmp eq i64 %394, %391
  br i1 %477, label %489, label %478

478:                                              ; preds = %468, %389
  %479 = phi i64 [ 0, %389 ], [ %394, %468 ]
  %480 = phi i32 [ 1, %389 ], [ %476, %468 ]
  br label %481

481:                                              ; preds = %478, %481
  %482 = phi i64 [ %487, %481 ], [ %479, %478 ]
  %483 = phi i32 [ %486, %481 ], [ %480, %478 ]
  %484 = getelementptr inbounds i32, i32* %390, i64 %482
  %485 = load i32, i32* %484, align 4
  %486 = mul nsw i32 %485, %483
  %487 = add nuw nsw i64 %482, 1
  %488 = icmp eq i64 %487, %391
  br i1 %488, label %489, label %481, !llvm.loop !148

489:                                              ; preds = %481, %468, %386
  %490 = phi i32 [ 1, %386 ], [ %476, %468 ], [ %486, %481 ]
  %491 = icmp sgt i32 %269, 5
  %492 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  br i1 %491, label %493, label %496

493:                                              ; preds = %489
  %494 = getelementptr inbounds %union.anon, %union.anon* %492, i64 0, i32 0
  %495 = load i32*, i32** %494, align 8
  br label %499

496:                                              ; preds = %489
  %497 = bitcast %union.anon* %492 to i32*
  %498 = icmp sgt i32 %269, 0
  br i1 %498, label %499, label %599

499:                                              ; preds = %496, %493
  %500 = phi i32* [ %495, %493 ], [ %497, %496 ]
  %501 = zext i32 %269 to i64
  %502 = icmp ult i32 %269, 8
  br i1 %502, label %588, label %503

503:                                              ; preds = %499
  %504 = and i64 %501, 4294967288
  %505 = add nsw i64 %504, -8
  %506 = lshr exact i64 %505, 3
  %507 = add nuw nsw i64 %506, 1
  %508 = and i64 %507, 3
  %509 = icmp ult i64 %505, 24
  br i1 %509, label %555, label %510

510:                                              ; preds = %503
  %511 = sub nsw i64 %507, %508
  br label %512

512:                                              ; preds = %512, %510
  %513 = phi i64 [ 0, %510 ], [ %552, %512 ]
  %514 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %510 ], [ %550, %512 ]
  %515 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %510 ], [ %551, %512 ]
  %516 = phi i64 [ %511, %510 ], [ %553, %512 ]
  %517 = getelementptr inbounds i32, i32* %500, i64 %513
  %518 = bitcast i32* %517 to <4 x i32>*
  %519 = load <4 x i32>, <4 x i32>* %518, align 4
  %520 = getelementptr inbounds i32, i32* %517, i64 4
  %521 = bitcast i32* %520 to <4 x i32>*
  %522 = load <4 x i32>, <4 x i32>* %521, align 4
  %523 = mul nsw <4 x i32> %519, %514
  %524 = mul nsw <4 x i32> %522, %515
  %525 = or i64 %513, 8
  %526 = getelementptr inbounds i32, i32* %500, i64 %525
  %527 = bitcast i32* %526 to <4 x i32>*
  %528 = load <4 x i32>, <4 x i32>* %527, align 4
  %529 = getelementptr inbounds i32, i32* %526, i64 4
  %530 = bitcast i32* %529 to <4 x i32>*
  %531 = load <4 x i32>, <4 x i32>* %530, align 4
  %532 = mul nsw <4 x i32> %528, %523
  %533 = mul nsw <4 x i32> %531, %524
  %534 = or i64 %513, 16
  %535 = getelementptr inbounds i32, i32* %500, i64 %534
  %536 = bitcast i32* %535 to <4 x i32>*
  %537 = load <4 x i32>, <4 x i32>* %536, align 4
  %538 = getelementptr inbounds i32, i32* %535, i64 4
  %539 = bitcast i32* %538 to <4 x i32>*
  %540 = load <4 x i32>, <4 x i32>* %539, align 4
  %541 = mul nsw <4 x i32> %537, %532
  %542 = mul nsw <4 x i32> %540, %533
  %543 = or i64 %513, 24
  %544 = getelementptr inbounds i32, i32* %500, i64 %543
  %545 = bitcast i32* %544 to <4 x i32>*
  %546 = load <4 x i32>, <4 x i32>* %545, align 4
  %547 = getelementptr inbounds i32, i32* %544, i64 4
  %548 = bitcast i32* %547 to <4 x i32>*
  %549 = load <4 x i32>, <4 x i32>* %548, align 4
  %550 = mul nsw <4 x i32> %546, %541
  %551 = mul nsw <4 x i32> %549, %542
  %552 = add i64 %513, 32
  %553 = add i64 %516, -4
  %554 = icmp eq i64 %553, 0
  br i1 %554, label %555, label %512, !llvm.loop !149

555:                                              ; preds = %512, %503
  %556 = phi <4 x i32> [ undef, %503 ], [ %550, %512 ]
  %557 = phi <4 x i32> [ undef, %503 ], [ %551, %512 ]
  %558 = phi i64 [ 0, %503 ], [ %552, %512 ]
  %559 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %503 ], [ %550, %512 ]
  %560 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %503 ], [ %551, %512 ]
  %561 = icmp eq i64 %508, 0
  br i1 %561, label %578, label %562

562:                                              ; preds = %555, %562
  %563 = phi i64 [ %575, %562 ], [ %558, %555 ]
  %564 = phi <4 x i32> [ %573, %562 ], [ %559, %555 ]
  %565 = phi <4 x i32> [ %574, %562 ], [ %560, %555 ]
  %566 = phi i64 [ %576, %562 ], [ %508, %555 ]
  %567 = getelementptr inbounds i32, i32* %500, i64 %563
  %568 = bitcast i32* %567 to <4 x i32>*
  %569 = load <4 x i32>, <4 x i32>* %568, align 4
  %570 = getelementptr inbounds i32, i32* %567, i64 4
  %571 = bitcast i32* %570 to <4 x i32>*
  %572 = load <4 x i32>, <4 x i32>* %571, align 4
  %573 = mul nsw <4 x i32> %569, %564
  %574 = mul nsw <4 x i32> %572, %565
  %575 = add i64 %563, 8
  %576 = add i64 %566, -1
  %577 = icmp eq i64 %576, 0
  br i1 %577, label %578, label %562, !llvm.loop !150

578:                                              ; preds = %562, %555
  %579 = phi <4 x i32> [ %556, %555 ], [ %573, %562 ]
  %580 = phi <4 x i32> [ %557, %555 ], [ %574, %562 ]
  %581 = mul <4 x i32> %580, %579
  %582 = shufflevector <4 x i32> %581, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %583 = mul <4 x i32> %581, %582
  %584 = shufflevector <4 x i32> %583, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %585 = mul <4 x i32> %583, %584
  %586 = extractelement <4 x i32> %585, i32 0
  %587 = icmp eq i64 %504, %501
  br i1 %587, label %599, label %588

588:                                              ; preds = %578, %499
  %589 = phi i64 [ 0, %499 ], [ %504, %578 ]
  %590 = phi i32 [ 1, %499 ], [ %586, %578 ]
  br label %591

591:                                              ; preds = %588, %591
  %592 = phi i64 [ %597, %591 ], [ %589, %588 ]
  %593 = phi i32 [ %596, %591 ], [ %590, %588 ]
  %594 = getelementptr inbounds i32, i32* %500, i64 %592
  %595 = load i32, i32* %594, align 4
  %596 = mul nsw i32 %595, %593
  %597 = add nuw nsw i64 %592, 1
  %598 = icmp eq i64 %597, %501
  br i1 %598, label %599, label %591, !llvm.loop !151

599:                                              ; preds = %591, %578, %496
  %600 = phi i32 [ 1, %496 ], [ %586, %578 ], [ %596, %591 ]
  %601 = icmp eq i32 %380, %490
  br i1 %601, label %603, label %602

602:                                              ; preds = %599
  tail call void @abort() #12
  unreachable

603:                                              ; preds = %599
  %604 = icmp eq i32 %380, %600
  br i1 %604, label %605, label %701

605:                                              ; preds = %603
  %606 = icmp sgt i32 %380, 0
  br i1 %606, label %607, label %731

607:                                              ; preds = %605
  %608 = zext i32 %380 to i64
  %609 = load float, float* %200, align 4
  %610 = load float, float* %235, align 4
  %611 = fsub float %609, %610
  %612 = fcmp olt float %611, %28
  %613 = select i1 %612, float %28, float %611
  %614 = fcmp ogt float %613, %29
  %615 = select i1 %614, float %29, float %613
  store float %615, float* %270, align 4
  %616 = icmp eq i32 %380, 1
  br i1 %616, label %731, label %617

617:                                              ; preds = %607
  %618 = add nsw i64 %608, -1
  %619 = icmp ult i64 %618, 4
  br i1 %619, label %620, label %643

620:                                              ; preds = %699, %643, %617
  %621 = phi i64 [ 1, %643 ], [ 1, %617 ], [ %674, %699 ]
  %622 = xor i64 %621, -1
  %623 = and i64 %608, 1
  %624 = icmp eq i64 %623, 0
  br i1 %624, label %625, label %639

625:                                              ; preds = %620
  %626 = load float, float* %31, align 4
  %627 = load float, float* %32, align 4
  %628 = getelementptr inbounds float, float* %200, i64 %621
  %629 = load float, float* %628, align 4
  %630 = getelementptr inbounds float, float* %235, i64 %621
  %631 = load float, float* %630, align 4
  %632 = fsub float %629, %631
  %633 = fcmp olt float %632, %626
  %634 = select i1 %633, float %626, float %632
  %635 = fcmp ogt float %634, %627
  %636 = select i1 %635, float %627, float %634
  %637 = getelementptr inbounds float, float* %270, i64 %621
  store float %636, float* %637, align 4
  %638 = add nuw nsw i64 %621, 1
  br label %639

639:                                              ; preds = %620, %625
  %640 = phi i64 [ %621, %620 ], [ %638, %625 ]
  %641 = sub nsw i64 0, %608
  %642 = icmp eq i64 %622, %641
  br i1 %642, label %731, label %702

643:                                              ; preds = %617
  %644 = getelementptr float, float* %270, i64 1
  %645 = bitcast float* %644 to i8*
  %646 = getelementptr float, float* %270, i64 %608
  %647 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 13
  %648 = bitcast float* %647 to i8*
  %649 = getelementptr inbounds i8, i8* %648, i64 1
  %650 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 14
  %651 = bitcast float* %650 to i8*
  %652 = getelementptr inbounds i8, i8* %651, i64 1
  %653 = getelementptr float, float* %200, i64 1
  %654 = getelementptr float, float* %200, i64 %608
  %655 = getelementptr float, float* %235, i64 1
  %656 = getelementptr float, float* %235, i64 %608
  %657 = icmp ugt i8* %649, %645
  %658 = icmp ult float* %31, %646
  %659 = and i1 %657, %658
  %660 = icmp ugt i8* %652, %645
  %661 = icmp ult float* %32, %646
  %662 = and i1 %660, %661
  %663 = or i1 %659, %662
  %664 = icmp ult float* %644, %654
  %665 = icmp ult float* %653, %646
  %666 = and i1 %664, %665
  %667 = or i1 %663, %666
  %668 = icmp ult float* %644, %656
  %669 = icmp ult float* %655, %646
  %670 = and i1 %668, %669
  %671 = or i1 %667, %670
  br i1 %671, label %620, label %672

672:                                              ; preds = %643
  %673 = and i64 %618, -4
  %674 = or i64 %673, 1
  %675 = load float, float* %31, align 4, !alias.scope !152
  %676 = insertelement <4 x float> undef, float %675, i32 0
  %677 = shufflevector <4 x float> %676, <4 x float> undef, <4 x i32> zeroinitializer
  %678 = load float, float* %32, align 4, !alias.scope !155
  %679 = insertelement <4 x float> undef, float %678, i32 0
  %680 = shufflevector <4 x float> %679, <4 x float> undef, <4 x i32> zeroinitializer
  br label %681

681:                                              ; preds = %681, %672
  %682 = phi i64 [ 0, %672 ], [ %697, %681 ]
  %683 = or i64 %682, 1
  %684 = getelementptr inbounds float, float* %200, i64 %683
  %685 = bitcast float* %684 to <4 x float>*
  %686 = load <4 x float>, <4 x float>* %685, align 4, !alias.scope !157
  %687 = getelementptr inbounds float, float* %235, i64 %683
  %688 = bitcast float* %687 to <4 x float>*
  %689 = load <4 x float>, <4 x float>* %688, align 4, !alias.scope !159
  %690 = fsub <4 x float> %686, %689
  %691 = fcmp olt <4 x float> %690, %677
  %692 = select <4 x i1> %691, <4 x float> %677, <4 x float> %690
  %693 = fcmp ogt <4 x float> %692, %680
  %694 = select <4 x i1> %693, <4 x float> %680, <4 x float> %692
  %695 = getelementptr inbounds float, float* %270, i64 %683
  %696 = bitcast float* %695 to <4 x float>*
  store <4 x float> %694, <4 x float>* %696, align 4, !alias.scope !161, !noalias !163
  %697 = add i64 %682, 4
  %698 = icmp eq i64 %697, %673
  br i1 %698, label %699, label %681, !llvm.loop !164

699:                                              ; preds = %681
  %700 = icmp eq i64 %618, %673
  br i1 %700, label %731, label %620

701:                                              ; preds = %603
  tail call void @abort() #12
  unreachable

702:                                              ; preds = %639, %702
  %703 = phi i64 [ %729, %702 ], [ %640, %639 ]
  %704 = load float, float* %31, align 4
  %705 = load float, float* %32, align 4
  %706 = getelementptr inbounds float, float* %200, i64 %703
  %707 = load float, float* %706, align 4
  %708 = getelementptr inbounds float, float* %235, i64 %703
  %709 = load float, float* %708, align 4
  %710 = fsub float %707, %709
  %711 = fcmp olt float %710, %704
  %712 = select i1 %711, float %704, float %710
  %713 = fcmp ogt float %712, %705
  %714 = select i1 %713, float %705, float %712
  %715 = getelementptr inbounds float, float* %270, i64 %703
  store float %714, float* %715, align 4
  %716 = add nuw nsw i64 %703, 1
  %717 = load float, float* %31, align 4
  %718 = load float, float* %32, align 4
  %719 = getelementptr inbounds float, float* %200, i64 %716
  %720 = load float, float* %719, align 4
  %721 = getelementptr inbounds float, float* %235, i64 %716
  %722 = load float, float* %721, align 4
  %723 = fsub float %720, %722
  %724 = fcmp olt float %723, %717
  %725 = select i1 %724, float %717, float %723
  %726 = fcmp ogt float %725, %718
  %727 = select i1 %726, float %718, float %725
  %728 = getelementptr inbounds float, float* %270, i64 %716
  store float %727, float* %728, align 4
  %729 = add nuw nsw i64 %703, 2
  %730 = icmp eq i64 %729, %608
  br i1 %730, label %731, label %702, !llvm.loop !165

731:                                              ; preds = %639, %702, %607, %699, %605
  br i1 %491, label %732, label %738

732:                                              ; preds = %731
  %733 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %734 = load i32*, i32** %733, align 8
  %735 = icmp eq i32* %734, null
  br i1 %735, label %738, label %736

736:                                              ; preds = %732
  %737 = bitcast i32* %734 to i8*
  tail call void @_ZdaPv(i8* %737) #10
  br label %738

738:                                              ; preds = %731, %732, %736
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %236) #11
  br i1 %381, label %739, label %745

739:                                              ; preds = %738
  %740 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %741 = load i32*, i32** %740, align 8
  %742 = icmp eq i32* %741, null
  br i1 %742, label %745, label %743

743:                                              ; preds = %739
  %744 = bitcast i32* %741 to i8*
  tail call void @_ZdaPv(i8* %744) #10
  br label %745

745:                                              ; preds = %738, %739, %743
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %201) #11
  br i1 %271, label %746, label %752

746:                                              ; preds = %745
  %747 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %748 = load i32*, i32** %747, align 8
  %749 = icmp eq i32* %748, null
  br i1 %749, label %752, label %750

750:                                              ; preds = %746
  %751 = bitcast i32* %748 to i8*
  tail call void @_ZdaPv(i8* %751) #10
  br label %752

752:                                              ; preds = %750, %746, %745, %163, %159, %155
  %753 = phi i8* [ %34, %155 ], [ %34, %159 ], [ %34, %163 ], [ %166, %745 ], [ %166, %746 ], [ %166, %750 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %753) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %30) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops16BroadcastSubSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKiS7_S9_S7_Pi(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*) local_unnamed_addr #7 comdat {
  %8 = alloca [5 x i32], align 16
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca %"struct.tflite::NdArrayDesc", align 4
  %13 = alloca %"struct.tflite::NdArrayDesc", align 4
  %14 = alloca %"struct.tflite::NdArrayDesc", align 4
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %class.anon, align 8
  store i32* %2, i32** %9, align 8
  store i32* %4, i32** %10, align 8
  store i32* %6, i32** %11, align 8
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %18 = bitcast %"struct.tflite::NdArrayDesc"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %18, i8 -86, i64 40, i1 false)
  %19 = bitcast %"struct.tflite::NdArrayDesc"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %19, i8 -86, i64 40, i1 false)
  %20 = bitcast %"struct.tflite::NdArrayDesc"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %20, i8 -86, i64 40, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi5EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %12, %"struct.tflite::NdArrayDesc"* nonnull %13)
  %21 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %22, align 8, !alias.scope !166
  %23 = load i32, i32* %17, align 8, !noalias !166
  %24 = icmp sgt i32 %23, 5
  br i1 %24, label %25, label %26

25:                                               ; preds = %7
  call void @abort() #12, !noalias !166
  unreachable

26:                                               ; preds = %7
  store i32 5, i32* %22, align 8, !alias.scope !166
  %27 = sub i32 5, %23
  %28 = icmp sgt i32 %27, 0
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to [5 x i32]*
  br i1 %28, label %31, label %110

31:                                               ; preds = %26
  %32 = zext i32 %27 to i64
  %33 = icmp ult i32 %27, 8
  br i1 %33, label %103, label %34

34:                                               ; preds = %31
  %35 = and i64 %32, 4294967288
  %36 = add nsw i64 %35, -8
  %37 = lshr exact i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = and i64 %38, 7
  %40 = icmp ult i64 %36, 56
  br i1 %40, label %88, label %41

41:                                               ; preds = %34
  %42 = sub nsw i64 %38, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %85, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %86, %43 ]
  %46 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %44
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !166
  %48 = getelementptr inbounds i32, i32* %46, i64 4
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !166
  %50 = or i64 %44, 8
  %51 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %50
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !166
  %53 = getelementptr inbounds i32, i32* %51, i64 4
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !166
  %55 = or i64 %44, 16
  %56 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %55
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !166
  %58 = getelementptr inbounds i32, i32* %56, i64 4
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !166
  %60 = or i64 %44, 24
  %61 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %60
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !166
  %63 = getelementptr inbounds i32, i32* %61, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !166
  %65 = or i64 %44, 32
  %66 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %65
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !166
  %68 = getelementptr inbounds i32, i32* %66, i64 4
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !166
  %70 = or i64 %44, 40
  %71 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %70
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !166
  %73 = getelementptr inbounds i32, i32* %71, i64 4
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !166
  %75 = or i64 %44, 48
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %75
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !166
  %78 = getelementptr inbounds i32, i32* %76, i64 4
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %79, align 8, !alias.scope !166
  %80 = or i64 %44, 56
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %80
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !166
  %83 = getelementptr inbounds i32, i32* %81, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !166
  %85 = add i64 %44, 64
  %86 = add i64 %45, -8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %43, !llvm.loop !169

88:                                               ; preds = %43, %34
  %89 = phi i64 [ 0, %34 ], [ %85, %43 ]
  %90 = icmp eq i64 %39, 0
  br i1 %90, label %101, label %91

91:                                               ; preds = %88, %91
  %92 = phi i64 [ %98, %91 ], [ %89, %88 ]
  %93 = phi i64 [ %99, %91 ], [ %39, %88 ]
  %94 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %92
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %95, align 8, !alias.scope !166
  %96 = getelementptr inbounds i32, i32* %94, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %97, align 8, !alias.scope !166
  %98 = add i64 %92, 8
  %99 = add i64 %93, -1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %91, !llvm.loop !170

101:                                              ; preds = %91, %88
  %102 = icmp eq i64 %35, %32
  br i1 %102, label %110, label %103

103:                                              ; preds = %101, %31
  %104 = phi i64 [ 0, %31 ], [ %35, %101 ]
  br label %105

105:                                              ; preds = %103, %105
  %106 = phi i64 [ %108, %105 ], [ %104, %103 ]
  %107 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %106
  store i32 1, i32* %107, align 4, !alias.scope !166
  %108 = add nuw nsw i64 %106, 1
  %109 = icmp eq i64 %108, %32
  br i1 %109, label %110, label %105, !llvm.loop !171

110:                                              ; preds = %105, %101, %26
  %111 = getelementptr inbounds %union.anon, %union.anon* %29, i64 0, i32 0
  %112 = bitcast %union.anon* %29 to i32*
  %113 = sext i32 %27 to i64
  %114 = getelementptr inbounds i32, i32* %112, i64 %113
  %115 = bitcast i32* %114 to i8*
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %117 = bitcast %union.anon* %116 to i8*
  %118 = sext i32 %23 to i64
  %119 = shl nsw i64 %118, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %115, i8* align 4 %117, i64 %119, i1 false) #11
  %120 = load i32, i32* %22, align 8
  %121 = icmp sgt i32 %120, 5
  %122 = load i32*, i32** %111, align 8
  %123 = getelementptr inbounds i32, i32* %122, i64 4
  %124 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 1, i64 8
  %125 = bitcast i8* %124 to i32*
  %126 = select i1 %121, i32* %123, i32* %125
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 4
  store i32 %127, i32* %128, align 4
  %129 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 4
  store i32 1, i32* %129, align 4
  %130 = load i32, i32* %126, align 4
  %131 = getelementptr inbounds i32, i32* %122, i64 3
  %132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 1, i64 4
  %133 = bitcast i8* %132 to i32*
  %134 = select i1 %121, i32* %131, i32* %133
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 3
  store i32 %135, i32* %136, align 4
  %137 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 3
  store i32 %130, i32* %137, align 4
  %138 = load i32, i32* %134, align 4
  %139 = mul nsw i32 %138, %130
  %140 = getelementptr inbounds i32, i32* %122, i64 2
  %141 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 1
  %142 = bitcast [16 x i8]* %141 to i32*
  %143 = select i1 %121, i32* %140, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 2
  store i32 %144, i32* %145, align 4
  %146 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 2
  store i32 %139, i32* %146, align 4
  %147 = load i32, i32* %143, align 4
  %148 = mul nsw i32 %147, %139
  %149 = getelementptr inbounds i32, i32* %122, i64 1
  %150 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 1
  %151 = select i1 %121, i32* %149, i32* %150
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 1
  store i32 %152, i32* %153, align 4
  %154 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 1
  store i32 %148, i32* %154, align 4
  %155 = load i32, i32* %151, align 4
  %156 = mul nsw i32 %155, %148
  %157 = select i1 %121, i32* %122, i32* %112
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 0
  store i32 %158, i32* %159, align 4
  %160 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 0
  store i32 %156, i32* %160, align 4
  %161 = xor i1 %121, true
  %162 = icmp eq i32* %122, null
  %163 = or i1 %162, %161
  br i1 %163, label %166, label %164

164:                                              ; preds = %110
  %165 = bitcast i32* %122 to i8*
  call void @_ZdaPv(i8* %165) #10
  br label %166

166:                                              ; preds = %110, %164
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #11
  %167 = bitcast %class.anon* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %167) #11
  %168 = getelementptr inbounds %class.anon, %class.anon* %16, i64 0, i32 0
  store i32** %11, i32*** %168, align 8
  %169 = getelementptr inbounds %class.anon, %class.anon* %16, i64 0, i32 1
  store %"struct.tflite::NdArrayDesc"* %14, %"struct.tflite::NdArrayDesc"** %169, align 8
  %170 = getelementptr inbounds %class.anon, %class.anon* %16, i64 0, i32 2
  store i32** %9, i32*** %170, align 8
  %171 = getelementptr inbounds %class.anon, %class.anon* %16, i64 0, i32 3
  store %"struct.tflite::NdArrayDesc"* %12, %"struct.tflite::NdArrayDesc"** %171, align 8
  %172 = getelementptr inbounds %class.anon, %class.anon* %16, i64 0, i32 4
  store i32** %10, i32*** %172, align 8
  %173 = getelementptr inbounds %class.anon, %class.anon* %16, i64 0, i32 5
  store %"struct.tflite::NdArrayDesc"* %13, %"struct.tflite::NdArrayDesc"** %173, align 8
  %174 = getelementptr inbounds %class.anon, %class.anon* %16, i64 0, i32 6
  store %"struct.tflite::ArithmeticParams"* %0, %"struct.tflite::ArithmeticParams"** %174, align 8
  %175 = bitcast [5 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %175) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %175, i8 0, i64 20, i1 false) #11
  %176 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 0
  call void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops16BroadcastSubSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKiS8_SA_S8_PiEUlSB_E_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SB_(%"struct.tflite::NdArrayDesc"* nonnull dereferenceable(40) %14, %class.anon* nonnull dereferenceable(56) %16, i32* nonnull %176) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %175) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %167) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi5EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"*) local_unnamed_addr #7 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %8, align 8, !alias.scope !172
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8, !noalias !172
  %11 = icmp sgt i32 %10, 5
  br i1 %11, label %12, label %13

12:                                               ; preds = %4
  tail call void @abort() #12, !noalias !172
  unreachable

13:                                               ; preds = %4
  store i32 5, i32* %8, align 8, !alias.scope !172
  %14 = sub i32 5, %10
  %15 = icmp sgt i32 %14, 0
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %15, label %17, label %97

17:                                               ; preds = %13
  %18 = bitcast %union.anon* %16 to [5 x i32]*
  %19 = zext i32 %14 to i64
  %20 = icmp ult i32 %14, 8
  br i1 %20, label %90, label %21

21:                                               ; preds = %17
  %22 = and i64 %19, 4294967288
  %23 = add nsw i64 %22, -8
  %24 = lshr exact i64 %23, 3
  %25 = add nuw nsw i64 %24, 1
  %26 = and i64 %25, 7
  %27 = icmp ult i64 %23, 56
  br i1 %27, label %75, label %28

28:                                               ; preds = %21
  %29 = sub nsw i64 %25, %26
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %72, %30 ]
  %32 = phi i64 [ %29, %28 ], [ %73, %30 ]
  %33 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %31
  %34 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %34, align 8, !alias.scope !172
  %35 = getelementptr inbounds i32, i32* %33, i64 4
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !172
  %37 = or i64 %31, 8
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %37
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %39, align 8, !alias.scope !172
  %40 = getelementptr inbounds i32, i32* %38, i64 4
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !172
  %42 = or i64 %31, 16
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !172
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !172
  %47 = or i64 %31, 24
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !172
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !172
  %52 = or i64 %31, 32
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !172
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !172
  %57 = or i64 %31, 40
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !172
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !172
  %62 = or i64 %31, 48
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !172
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !172
  %67 = or i64 %31, 56
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !172
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !172
  %72 = add i64 %31, 64
  %73 = add i64 %32, -8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %30, !llvm.loop !175

75:                                               ; preds = %30, %21
  %76 = phi i64 [ 0, %21 ], [ %72, %30 ]
  %77 = icmp eq i64 %26, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %75, %78
  %79 = phi i64 [ %85, %78 ], [ %76, %75 ]
  %80 = phi i64 [ %86, %78 ], [ %26, %75 ]
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %79
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !172
  %83 = getelementptr inbounds i32, i32* %81, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !172
  %85 = add i64 %79, 8
  %86 = add i64 %80, -1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %78, !llvm.loop !176

88:                                               ; preds = %78, %75
  %89 = icmp eq i64 %22, %19
  br i1 %89, label %97, label %90

90:                                               ; preds = %88, %17
  %91 = phi i64 [ 0, %17 ], [ %22, %88 ]
  br label %92

92:                                               ; preds = %90, %92
  %93 = phi i64 [ %95, %92 ], [ %91, %90 ]
  %94 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %93
  store i32 1, i32* %94, align 4, !alias.scope !172
  %95 = add nuw nsw i64 %93, 1
  %96 = icmp eq i64 %95, %19
  br i1 %96, label %97, label %92, !llvm.loop !177

97:                                               ; preds = %92, %88, %13
  %98 = getelementptr inbounds %union.anon, %union.anon* %16, i64 0, i32 0
  %99 = bitcast %union.anon* %16 to i32*
  %100 = sext i32 %14 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = bitcast i32* %101 to i8*
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %104 = bitcast %union.anon* %103 to i8*
  %105 = sext i32 %10 to i64
  %106 = shl nsw i64 %105, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %104, i64 %106, i1 false) #11
  %107 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %107) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 -86, i64 32, i1 false)
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %108, align 8, !alias.scope !178
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %110 = load i32, i32* %109, align 8, !noalias !178
  %111 = icmp sgt i32 %110, 5
  br i1 %111, label %112, label %113

112:                                              ; preds = %97
  tail call void @abort() #12, !noalias !178
  unreachable

113:                                              ; preds = %97
  store i32 5, i32* %108, align 8, !alias.scope !178
  %114 = sub i32 5, %110
  %115 = icmp sgt i32 %114, 0
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %117 = bitcast %union.anon* %116 to [5 x i32]*
  br i1 %115, label %118, label %197

118:                                              ; preds = %113
  %119 = zext i32 %114 to i64
  %120 = icmp ult i32 %114, 8
  br i1 %120, label %190, label %121

121:                                              ; preds = %118
  %122 = and i64 %119, 4294967288
  %123 = add nsw i64 %122, -8
  %124 = lshr exact i64 %123, 3
  %125 = add nuw nsw i64 %124, 1
  %126 = and i64 %125, 7
  %127 = icmp ult i64 %123, 56
  br i1 %127, label %175, label %128

128:                                              ; preds = %121
  %129 = sub nsw i64 %125, %126
  br label %130

130:                                              ; preds = %130, %128
  %131 = phi i64 [ 0, %128 ], [ %172, %130 ]
  %132 = phi i64 [ %129, %128 ], [ %173, %130 ]
  %133 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %131
  %134 = bitcast i32* %133 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %134, align 8, !alias.scope !178
  %135 = getelementptr inbounds i32, i32* %133, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %136, align 8, !alias.scope !178
  %137 = or i64 %131, 8
  %138 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %137
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %139, align 8, !alias.scope !178
  %140 = getelementptr inbounds i32, i32* %138, i64 4
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %141, align 8, !alias.scope !178
  %142 = or i64 %131, 16
  %143 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %142
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %144, align 8, !alias.scope !178
  %145 = getelementptr inbounds i32, i32* %143, i64 4
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !178
  %147 = or i64 %131, 24
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %147
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %149, align 8, !alias.scope !178
  %150 = getelementptr inbounds i32, i32* %148, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !178
  %152 = or i64 %131, 32
  %153 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %152
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %154, align 8, !alias.scope !178
  %155 = getelementptr inbounds i32, i32* %153, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !178
  %157 = or i64 %131, 40
  %158 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %157
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %159, align 8, !alias.scope !178
  %160 = getelementptr inbounds i32, i32* %158, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !178
  %162 = or i64 %131, 48
  %163 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %164, align 8, !alias.scope !178
  %165 = getelementptr inbounds i32, i32* %163, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !178
  %167 = or i64 %131, 56
  %168 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %167
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %169, align 8, !alias.scope !178
  %170 = getelementptr inbounds i32, i32* %168, i64 4
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !178
  %172 = add i64 %131, 64
  %173 = add i64 %132, -8
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %130, !llvm.loop !181

175:                                              ; preds = %130, %121
  %176 = phi i64 [ 0, %121 ], [ %172, %130 ]
  %177 = icmp eq i64 %126, 0
  br i1 %177, label %188, label %178

178:                                              ; preds = %175, %178
  %179 = phi i64 [ %185, %178 ], [ %176, %175 ]
  %180 = phi i64 [ %186, %178 ], [ %126, %175 ]
  %181 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %179
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %182, align 8, !alias.scope !178
  %183 = getelementptr inbounds i32, i32* %181, i64 4
  %184 = bitcast i32* %183 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %184, align 8, !alias.scope !178
  %185 = add i64 %179, 8
  %186 = add i64 %180, -1
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %178, !llvm.loop !182

188:                                              ; preds = %178, %175
  %189 = icmp eq i64 %122, %119
  br i1 %189, label %197, label %190

190:                                              ; preds = %188, %118
  %191 = phi i64 [ 0, %118 ], [ %122, %188 ]
  br label %192

192:                                              ; preds = %190, %192
  %193 = phi i64 [ %195, %192 ], [ %191, %190 ]
  %194 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 %193
  store i32 1, i32* %194, align 4, !alias.scope !178
  %195 = add nuw nsw i64 %193, 1
  %196 = icmp eq i64 %195, %119
  br i1 %196, label %197, label %192, !llvm.loop !183

197:                                              ; preds = %192, %188, %113
  %198 = getelementptr inbounds %union.anon, %union.anon* %116, i64 0, i32 0
  %199 = bitcast %union.anon* %116 to i32*
  %200 = sext i32 %114 to i64
  %201 = getelementptr inbounds i32, i32* %199, i64 %200
  %202 = bitcast i32* %201 to i8*
  %203 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %204 = bitcast %union.anon* %203 to i8*
  %205 = sext i32 %110 to i64
  %206 = shl nsw i64 %205, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %202, i8* align 4 %204, i64 %206, i1 false) #11
  %207 = bitcast %union.anon* %16 to [5 x i32]*
  %208 = load i32, i32* %8, align 8
  %209 = icmp sgt i32 %208, 5
  %210 = load i32*, i32** %98, align 8
  %211 = getelementptr inbounds i32, i32* %210, i64 4
  %212 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 8
  %213 = bitcast i8* %212 to i32*
  %214 = select i1 %209, i32* %211, i32* %213
  %215 = load i32, i32* %214, align 4
  %216 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 4
  store i32 %215, i32* %216, align 4
  %217 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 4
  store i32 1, i32* %217, align 4
  %218 = load i32, i32* %214, align 4
  %219 = getelementptr inbounds i32, i32* %210, i64 3
  %220 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %221 = bitcast i8* %220 to i32*
  %222 = select i1 %209, i32* %219, i32* %221
  %223 = load i32, i32* %222, align 4
  %224 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 3
  store i32 %223, i32* %224, align 4
  %225 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 3
  store i32 %218, i32* %225, align 4
  %226 = load i32, i32* %222, align 4
  %227 = mul nsw i32 %226, %218
  %228 = getelementptr inbounds i32, i32* %210, i64 2
  %229 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %230 = bitcast [16 x i8]* %229 to i32*
  %231 = select i1 %209, i32* %228, i32* %230
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 2
  store i32 %232, i32* %233, align 4
  %234 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 2
  store i32 %227, i32* %234, align 4
  %235 = load i32, i32* %231, align 4
  %236 = mul nsw i32 %235, %227
  %237 = getelementptr inbounds i32, i32* %210, i64 1
  %238 = getelementptr inbounds [5 x i32], [5 x i32]* %207, i64 0, i64 1
  %239 = select i1 %209, i32* %237, i32* %238
  %240 = load i32, i32* %239, align 4
  %241 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 1
  store i32 %240, i32* %241, align 4
  %242 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 1
  store i32 %236, i32* %242, align 4
  %243 = load i32, i32* %239, align 4
  %244 = mul nsw i32 %243, %236
  %245 = select i1 %209, i32* %210, i32* %99
  %246 = load i32, i32* %245, align 4
  %247 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 0
  store i32 %246, i32* %247, align 4
  %248 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 0
  store i32 %244, i32* %248, align 4
  %249 = load i32, i32* %108, align 8
  %250 = icmp sgt i32 %249, 5
  %251 = load i32*, i32** %198, align 8
  %252 = getelementptr inbounds i32, i32* %251, i64 4
  %253 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 8
  %254 = bitcast i8* %253 to i32*
  %255 = select i1 %250, i32* %252, i32* %254
  %256 = load i32, i32* %255, align 4
  %257 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 4
  store i32 %256, i32* %257, align 4
  %258 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 4
  store i32 1, i32* %258, align 4
  %259 = load i32, i32* %255, align 4
  %260 = getelementptr inbounds i32, i32* %251, i64 3
  %261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %262 = bitcast i8* %261 to i32*
  %263 = select i1 %250, i32* %260, i32* %262
  %264 = load i32, i32* %263, align 4
  %265 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 3
  store i32 %264, i32* %265, align 4
  %266 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 3
  store i32 %259, i32* %266, align 4
  %267 = load i32, i32* %263, align 4
  %268 = mul nsw i32 %267, %259
  %269 = getelementptr inbounds i32, i32* %251, i64 2
  %270 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %271 = bitcast [16 x i8]* %270 to i32*
  %272 = select i1 %250, i32* %269, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 2
  store i32 %273, i32* %274, align 4
  %275 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 2
  store i32 %268, i32* %275, align 4
  %276 = load i32, i32* %272, align 4
  %277 = mul nsw i32 %276, %268
  %278 = getelementptr inbounds i32, i32* %251, i64 1
  %279 = getelementptr inbounds [5 x i32], [5 x i32]* %117, i64 0, i64 1
  %280 = select i1 %250, i32* %278, i32* %279
  %281 = load i32, i32* %280, align 4
  %282 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 1
  store i32 %281, i32* %282, align 4
  %283 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 1
  store i32 %277, i32* %283, align 4
  %284 = load i32, i32* %280, align 4
  %285 = mul nsw i32 %284, %277
  %286 = select i1 %250, i32* %251, i32* %199
  %287 = load i32, i32* %286, align 4
  %288 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 0
  store i32 %287, i32* %288, align 4
  %289 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 0
  store i32 %285, i32* %289, align 4
  %290 = bitcast %union.anon* %16 to i32*
  %291 = select i1 %209, i32* %210, i32* %290
  %292 = load i32, i32* %291, align 4
  %293 = bitcast %union.anon* %116 to i32*
  %294 = select i1 %250, i32* %251, i32* %293
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %292, %295
  br i1 %296, label %311, label %307

297:                                              ; preds = %361
  %298 = bitcast i32* %251 to i8*
  tail call void @_ZdaPv(i8* %298) #10
  br label %299

299:                                              ; preds = %361, %297
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %107) #11
  br i1 %209, label %300, label %306

300:                                              ; preds = %299
  %301 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %302 = load i32*, i32** %301, align 8
  %303 = icmp eq i32* %302, null
  br i1 %303, label %306, label %304

304:                                              ; preds = %300
  %305 = bitcast i32* %302 to i8*
  tail call void @_ZdaPv(i8* %305) #10
  br label %306

306:                                              ; preds = %299, %300, %304
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #11
  ret void

307:                                              ; preds = %197
  %308 = icmp eq i32 %292, 1
  br i1 %308, label %309, label %310

309:                                              ; preds = %307
  store i32 0, i32* %248, align 4
  store i32 %295, i32* %247, align 4
  br label %311

310:                                              ; preds = %307
  store i32 0, i32* %289, align 4
  store i32 %292, i32* %288, align 4
  br label %311

311:                                              ; preds = %197, %309, %310
  %312 = load i32, i32* %239, align 4
  %313 = load i32, i32* %280, align 4
  %314 = icmp eq i32 %312, %313
  br i1 %314, label %319, label %315

315:                                              ; preds = %311
  %316 = icmp eq i32 %312, 1
  br i1 %316, label %318, label %317

317:                                              ; preds = %315
  store i32 0, i32* %283, align 4
  store i32 %312, i32* %282, align 4
  br label %319

318:                                              ; preds = %315
  store i32 0, i32* %242, align 4
  store i32 %313, i32* %241, align 4
  br label %319

319:                                              ; preds = %318, %317, %311
  %320 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %321 = bitcast [16 x i8]* %320 to i32*
  %322 = select i1 %209, i32* %228, i32* %321
  %323 = load i32, i32* %322, align 4
  %324 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %325 = bitcast [16 x i8]* %324 to i32*
  %326 = select i1 %250, i32* %269, i32* %325
  %327 = load i32, i32* %326, align 4
  %328 = icmp eq i32 %323, %327
  br i1 %328, label %333, label %329

329:                                              ; preds = %319
  %330 = icmp eq i32 %323, 1
  br i1 %330, label %332, label %331

331:                                              ; preds = %329
  store i32 0, i32* %275, align 4
  store i32 %323, i32* %274, align 4
  br label %333

332:                                              ; preds = %329
  store i32 0, i32* %234, align 4
  store i32 %327, i32* %233, align 4
  br label %333

333:                                              ; preds = %332, %331, %319
  %334 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %335 = bitcast i8* %334 to i32*
  %336 = select i1 %209, i32* %219, i32* %335
  %337 = load i32, i32* %336, align 4
  %338 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %339 = bitcast i8* %338 to i32*
  %340 = select i1 %250, i32* %260, i32* %339
  %341 = load i32, i32* %340, align 4
  %342 = icmp eq i32 %337, %341
  br i1 %342, label %347, label %343

343:                                              ; preds = %333
  %344 = icmp eq i32 %337, 1
  br i1 %344, label %346, label %345

345:                                              ; preds = %343
  store i32 0, i32* %266, align 4
  store i32 %337, i32* %265, align 4
  br label %347

346:                                              ; preds = %343
  store i32 0, i32* %225, align 4
  store i32 %341, i32* %224, align 4
  br label %347

347:                                              ; preds = %346, %345, %333
  %348 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 8
  %349 = bitcast i8* %348 to i32*
  %350 = select i1 %209, i32* %211, i32* %349
  %351 = load i32, i32* %350, align 4
  %352 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 8
  %353 = bitcast i8* %352 to i32*
  %354 = select i1 %250, i32* %252, i32* %353
  %355 = load i32, i32* %354, align 4
  %356 = icmp eq i32 %351, %355
  br i1 %356, label %361, label %357

357:                                              ; preds = %347
  %358 = icmp eq i32 %351, 1
  br i1 %358, label %360, label %359

359:                                              ; preds = %357
  store i32 0, i32* %258, align 4
  store i32 %351, i32* %257, align 4
  br label %361

360:                                              ; preds = %357
  store i32 0, i32* %217, align 4
  store i32 %355, i32* %216, align 4
  br label %361

361:                                              ; preds = %360, %359, %347
  %362 = xor i1 %250, true
  %363 = icmp eq i32* %251, null
  %364 = or i1 %363, %362
  br i1 %364, label %299, label %297
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops16BroadcastSubSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKiS8_SA_S8_PiEUlSB_E_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SB_(%"struct.tflite::NdArrayDesc"* dereferenceable(40), %class.anon* dereferenceable(56), i32*) local_unnamed_addr #3 comdat {
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %164

7:                                                ; preds = %3
  %8 = getelementptr inbounds i32, i32* %2, i64 1
  %9 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 1
  %10 = getelementptr inbounds i32, i32* %2, i64 2
  %11 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 2
  %12 = getelementptr inbounds i32, i32* %2, i64 3
  %13 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 3
  %14 = getelementptr inbounds i32, i32* %2, i64 4
  %15 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 4
  %16 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 2
  %17 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 3
  %18 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 4
  %19 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 5
  %20 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 6
  %21 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 0
  %22 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 1
  br label %23

23:                                               ; preds = %7, %159
  %24 = phi i32 [ 0, %7 ], [ %161, %159 ]
  store i32 0, i32* %8, align 4
  %25 = load i32, i32* %9, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %159

27:                                               ; preds = %23, %152
  %28 = phi i32 [ %154, %152 ], [ 0, %23 ]
  store i32 0, i32* %10, align 4
  %29 = load i32, i32* %11, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %152

31:                                               ; preds = %27, %145
  %32 = phi i32 [ %147, %145 ], [ 0, %27 ]
  store i32 0, i32* %12, align 4
  %33 = load i32, i32* %13, align 4
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %145

35:                                               ; preds = %31, %138
  %36 = phi i32 [ %140, %138 ], [ 0, %31 ]
  store i32 0, i32* %14, align 4
  %37 = load i32, i32* %15, align 4
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %138

39:                                               ; preds = %35, %39
  %40 = phi i32 [ %134, %39 ], [ 0, %35 ]
  %41 = phi i32 [ %137, %39 ], [ %36, %35 ]
  %42 = load i32**, i32*** %16, align 8
  %43 = load i32*, i32** %42, align 8
  %44 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %17, align 8
  %45 = load i32, i32* %2, align 4
  %46 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %44, i64 0, i32 1, i64 0
  %47 = load i32, i32* %46, align 4
  %48 = mul nsw i32 %47, %45
  %49 = load i32, i32* %8, align 4
  %50 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %44, i64 0, i32 1, i64 1
  %51 = load i32, i32* %50, align 4
  %52 = mul nsw i32 %51, %49
  %53 = add nsw i32 %52, %48
  %54 = load i32, i32* %10, align 4
  %55 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %44, i64 0, i32 1, i64 2
  %56 = load i32, i32* %55, align 4
  %57 = mul nsw i32 %56, %54
  %58 = add nsw i32 %53, %57
  %59 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %44, i64 0, i32 1, i64 3
  %60 = load i32, i32* %59, align 4
  %61 = mul nsw i32 %60, %41
  %62 = add nsw i32 %58, %61
  %63 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %44, i64 0, i32 1, i64 4
  %64 = load i32, i32* %63, align 4
  %65 = mul nsw i32 %64, %40
  %66 = add nsw i32 %62, %65
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i32, i32* %43, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = load i32**, i32*** %18, align 8
  %71 = load i32*, i32** %70, align 8
  %72 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %19, align 8
  %73 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %72, i64 0, i32 1, i64 0
  %74 = load i32, i32* %73, align 4
  %75 = mul nsw i32 %74, %45
  %76 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %72, i64 0, i32 1, i64 1
  %77 = load i32, i32* %76, align 4
  %78 = mul nsw i32 %77, %49
  %79 = add nsw i32 %78, %75
  %80 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %72, i64 0, i32 1, i64 2
  %81 = load i32, i32* %80, align 4
  %82 = mul nsw i32 %81, %54
  %83 = add nsw i32 %79, %82
  %84 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %72, i64 0, i32 1, i64 3
  %85 = load i32, i32* %84, align 4
  %86 = mul nsw i32 %85, %41
  %87 = add nsw i32 %83, %86
  %88 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %72, i64 0, i32 1, i64 4
  %89 = load i32, i32* %88, align 4
  %90 = mul nsw i32 %89, %40
  %91 = add nsw i32 %87, %90
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i32, i32* %71, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = sub nsw i32 %69, %94
  %96 = sitofp i32 %95 to float
  %97 = load %"struct.tflite::ArithmeticParams"*, %"struct.tflite::ArithmeticParams"** %20, align 8
  %98 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %97, i64 0, i32 11
  %99 = load i32, i32* %98, align 4
  %100 = sitofp i32 %99 to float
  %101 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %97, i64 0, i32 12
  %102 = load i32, i32* %101, align 4
  %103 = sitofp i32 %102 to float
  %104 = fcmp olt float %96, %100
  %105 = select i1 %104, float %100, float %96
  %106 = fcmp ogt float %105, %103
  %107 = select i1 %106, float %103, float %105
  %108 = fptosi float %107 to i32
  %109 = load i32**, i32*** %21, align 8
  %110 = load i32*, i32** %109, align 8
  %111 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %22, align 8
  %112 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %111, i64 0, i32 1, i64 0
  %113 = load i32, i32* %112, align 4
  %114 = mul nsw i32 %113, %45
  %115 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %111, i64 0, i32 1, i64 1
  %116 = load i32, i32* %115, align 4
  %117 = mul nsw i32 %116, %49
  %118 = add nsw i32 %117, %114
  %119 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %111, i64 0, i32 1, i64 2
  %120 = load i32, i32* %119, align 4
  %121 = mul nsw i32 %120, %54
  %122 = add nsw i32 %118, %121
  %123 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %111, i64 0, i32 1, i64 3
  %124 = load i32, i32* %123, align 4
  %125 = mul nsw i32 %124, %41
  %126 = add nsw i32 %122, %125
  %127 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %111, i64 0, i32 1, i64 4
  %128 = load i32, i32* %127, align 4
  %129 = mul nsw i32 %128, %40
  %130 = add nsw i32 %126, %129
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i32, i32* %110, i64 %131
  store i32 %108, i32* %132, align 4
  %133 = load i32, i32* %14, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %14, align 4
  %135 = load i32, i32* %15, align 4
  %136 = icmp slt i32 %134, %135
  %137 = load i32, i32* %12, align 4
  br i1 %136, label %39, label %138

138:                                              ; preds = %39, %35
  %139 = phi i32 [ %36, %35 ], [ %137, %39 ]
  %140 = add nsw i32 %139, 1
  store i32 %140, i32* %12, align 4
  %141 = load i32, i32* %13, align 4
  %142 = icmp slt i32 %140, %141
  br i1 %142, label %35, label %143

143:                                              ; preds = %138
  %144 = load i32, i32* %10, align 4
  br label %145

145:                                              ; preds = %143, %31
  %146 = phi i32 [ %144, %143 ], [ %32, %31 ]
  %147 = add nsw i32 %146, 1
  store i32 %147, i32* %10, align 4
  %148 = load i32, i32* %11, align 4
  %149 = icmp slt i32 %147, %148
  br i1 %149, label %31, label %150

150:                                              ; preds = %145
  %151 = load i32, i32* %8, align 4
  br label %152

152:                                              ; preds = %150, %27
  %153 = phi i32 [ %151, %150 ], [ %28, %27 ]
  %154 = add nsw i32 %153, 1
  store i32 %154, i32* %8, align 4
  %155 = load i32, i32* %9, align 4
  %156 = icmp slt i32 %154, %155
  br i1 %156, label %27, label %157

157:                                              ; preds = %152
  %158 = load i32, i32* %2, align 4
  br label %159

159:                                              ; preds = %157, %23
  %160 = phi i32 [ %158, %157 ], [ %24, %23 ]
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %2, align 4
  %162 = load i32, i32* %4, align 4
  %163 = icmp slt i32 %161, %162
  br i1 %163, label %23, label %164

164:                                              ; preds = %159, %3
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops16BroadcastSubSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKfS7_S9_S7_Pf(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #7 comdat {
  %8 = alloca [5 x i32], align 16
  %9 = alloca float*, align 8
  %10 = alloca float*, align 8
  %11 = alloca float*, align 8
  %12 = alloca %"struct.tflite::NdArrayDesc", align 4
  %13 = alloca %"struct.tflite::NdArrayDesc", align 4
  %14 = alloca %"struct.tflite::NdArrayDesc", align 4
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %class.anon.1, align 8
  store float* %2, float** %9, align 8
  store float* %4, float** %10, align 8
  store float* %6, float** %11, align 8
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %18 = bitcast %"struct.tflite::NdArrayDesc"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %18, i8 -86, i64 40, i1 false)
  %19 = bitcast %"struct.tflite::NdArrayDesc"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %19, i8 -86, i64 40, i1 false)
  %20 = bitcast %"struct.tflite::NdArrayDesc"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %20, i8 -86, i64 40, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi5EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %12, %"struct.tflite::NdArrayDesc"* nonnull %13)
  %21 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %22, align 8, !alias.scope !184
  %23 = load i32, i32* %17, align 8, !noalias !184
  %24 = icmp sgt i32 %23, 5
  br i1 %24, label %25, label %26

25:                                               ; preds = %7
  call void @abort() #12, !noalias !184
  unreachable

26:                                               ; preds = %7
  store i32 5, i32* %22, align 8, !alias.scope !184
  %27 = sub i32 5, %23
  %28 = icmp sgt i32 %27, 0
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to [5 x i32]*
  br i1 %28, label %31, label %110

31:                                               ; preds = %26
  %32 = zext i32 %27 to i64
  %33 = icmp ult i32 %27, 8
  br i1 %33, label %103, label %34

34:                                               ; preds = %31
  %35 = and i64 %32, 4294967288
  %36 = add nsw i64 %35, -8
  %37 = lshr exact i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = and i64 %38, 7
  %40 = icmp ult i64 %36, 56
  br i1 %40, label %88, label %41

41:                                               ; preds = %34
  %42 = sub nsw i64 %38, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %85, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %86, %43 ]
  %46 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %44
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !184
  %48 = getelementptr inbounds i32, i32* %46, i64 4
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !184
  %50 = or i64 %44, 8
  %51 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %50
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !184
  %53 = getelementptr inbounds i32, i32* %51, i64 4
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !184
  %55 = or i64 %44, 16
  %56 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %55
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !184
  %58 = getelementptr inbounds i32, i32* %56, i64 4
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !184
  %60 = or i64 %44, 24
  %61 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %60
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !184
  %63 = getelementptr inbounds i32, i32* %61, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !184
  %65 = or i64 %44, 32
  %66 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %65
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !184
  %68 = getelementptr inbounds i32, i32* %66, i64 4
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !184
  %70 = or i64 %44, 40
  %71 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %70
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !184
  %73 = getelementptr inbounds i32, i32* %71, i64 4
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !184
  %75 = or i64 %44, 48
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %75
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !184
  %78 = getelementptr inbounds i32, i32* %76, i64 4
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %79, align 8, !alias.scope !184
  %80 = or i64 %44, 56
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %80
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !184
  %83 = getelementptr inbounds i32, i32* %81, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !184
  %85 = add i64 %44, 64
  %86 = add i64 %45, -8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %43, !llvm.loop !187

88:                                               ; preds = %43, %34
  %89 = phi i64 [ 0, %34 ], [ %85, %43 ]
  %90 = icmp eq i64 %39, 0
  br i1 %90, label %101, label %91

91:                                               ; preds = %88, %91
  %92 = phi i64 [ %98, %91 ], [ %89, %88 ]
  %93 = phi i64 [ %99, %91 ], [ %39, %88 ]
  %94 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %92
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %95, align 8, !alias.scope !184
  %96 = getelementptr inbounds i32, i32* %94, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %97, align 8, !alias.scope !184
  %98 = add i64 %92, 8
  %99 = add i64 %93, -1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %91, !llvm.loop !188

101:                                              ; preds = %91, %88
  %102 = icmp eq i64 %35, %32
  br i1 %102, label %110, label %103

103:                                              ; preds = %101, %31
  %104 = phi i64 [ 0, %31 ], [ %35, %101 ]
  br label %105

105:                                              ; preds = %103, %105
  %106 = phi i64 [ %108, %105 ], [ %104, %103 ]
  %107 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %106
  store i32 1, i32* %107, align 4, !alias.scope !184
  %108 = add nuw nsw i64 %106, 1
  %109 = icmp eq i64 %108, %32
  br i1 %109, label %110, label %105, !llvm.loop !189

110:                                              ; preds = %105, %101, %26
  %111 = getelementptr inbounds %union.anon, %union.anon* %29, i64 0, i32 0
  %112 = bitcast %union.anon* %29 to i32*
  %113 = sext i32 %27 to i64
  %114 = getelementptr inbounds i32, i32* %112, i64 %113
  %115 = bitcast i32* %114 to i8*
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %117 = bitcast %union.anon* %116 to i8*
  %118 = sext i32 %23 to i64
  %119 = shl nsw i64 %118, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %115, i8* align 4 %117, i64 %119, i1 false) #11
  %120 = load i32, i32* %22, align 8
  %121 = icmp sgt i32 %120, 5
  %122 = load i32*, i32** %111, align 8
  %123 = getelementptr inbounds i32, i32* %122, i64 4
  %124 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 1, i64 8
  %125 = bitcast i8* %124 to i32*
  %126 = select i1 %121, i32* %123, i32* %125
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 4
  store i32 %127, i32* %128, align 4
  %129 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 4
  store i32 1, i32* %129, align 4
  %130 = load i32, i32* %126, align 4
  %131 = getelementptr inbounds i32, i32* %122, i64 3
  %132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 1, i64 4
  %133 = bitcast i8* %132 to i32*
  %134 = select i1 %121, i32* %131, i32* %133
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 3
  store i32 %135, i32* %136, align 4
  %137 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 3
  store i32 %130, i32* %137, align 4
  %138 = load i32, i32* %134, align 4
  %139 = mul nsw i32 %138, %130
  %140 = getelementptr inbounds i32, i32* %122, i64 2
  %141 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 1
  %142 = bitcast [16 x i8]* %141 to i32*
  %143 = select i1 %121, i32* %140, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 2
  store i32 %144, i32* %145, align 4
  %146 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 2
  store i32 %139, i32* %146, align 4
  %147 = load i32, i32* %143, align 4
  %148 = mul nsw i32 %147, %139
  %149 = getelementptr inbounds i32, i32* %122, i64 1
  %150 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 1
  %151 = select i1 %121, i32* %149, i32* %150
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 1
  store i32 %152, i32* %153, align 4
  %154 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 1
  store i32 %148, i32* %154, align 4
  %155 = load i32, i32* %151, align 4
  %156 = mul nsw i32 %155, %148
  %157 = select i1 %121, i32* %122, i32* %112
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 0
  store i32 %158, i32* %159, align 4
  %160 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 0
  store i32 %156, i32* %160, align 4
  %161 = xor i1 %121, true
  %162 = icmp eq i32* %122, null
  %163 = or i1 %162, %161
  br i1 %163, label %166, label %164

164:                                              ; preds = %110
  %165 = bitcast i32* %122 to i8*
  call void @_ZdaPv(i8* %165) #10
  br label %166

166:                                              ; preds = %110, %164
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #11
  %167 = bitcast %class.anon.1* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %167) #11
  %168 = getelementptr inbounds %class.anon.1, %class.anon.1* %16, i64 0, i32 0
  store float** %11, float*** %168, align 8
  %169 = getelementptr inbounds %class.anon.1, %class.anon.1* %16, i64 0, i32 1
  store %"struct.tflite::NdArrayDesc"* %14, %"struct.tflite::NdArrayDesc"** %169, align 8
  %170 = getelementptr inbounds %class.anon.1, %class.anon.1* %16, i64 0, i32 2
  store float** %9, float*** %170, align 8
  %171 = getelementptr inbounds %class.anon.1, %class.anon.1* %16, i64 0, i32 3
  store %"struct.tflite::NdArrayDesc"* %12, %"struct.tflite::NdArrayDesc"** %171, align 8
  %172 = getelementptr inbounds %class.anon.1, %class.anon.1* %16, i64 0, i32 4
  store float** %10, float*** %172, align 8
  %173 = getelementptr inbounds %class.anon.1, %class.anon.1* %16, i64 0, i32 5
  store %"struct.tflite::NdArrayDesc"* %13, %"struct.tflite::NdArrayDesc"** %173, align 8
  %174 = getelementptr inbounds %class.anon.1, %class.anon.1* %16, i64 0, i32 6
  store %"struct.tflite::ArithmeticParams"* %0, %"struct.tflite::ArithmeticParams"** %174, align 8
  %175 = bitcast [5 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %175) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %175, i8 0, i64 20, i1 false) #11
  %176 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 0
  call void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops16BroadcastSubSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKfS8_SA_S8_PfEUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SC_(%"struct.tflite::NdArrayDesc"* nonnull dereferenceable(40) %14, %class.anon.1* nonnull dereferenceable(56) %16, i32* nonnull %176) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %175) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %167) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops16BroadcastSubSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKfS8_SA_S8_PfEUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SC_(%"struct.tflite::NdArrayDesc"* dereferenceable(40), %class.anon.1* dereferenceable(56), i32*) local_unnamed_addr #3 comdat {
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %160

7:                                                ; preds = %3
  %8 = getelementptr inbounds i32, i32* %2, i64 1
  %9 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 1
  %10 = getelementptr inbounds i32, i32* %2, i64 2
  %11 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 2
  %12 = getelementptr inbounds i32, i32* %2, i64 3
  %13 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 3
  %14 = getelementptr inbounds i32, i32* %2, i64 4
  %15 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 4
  %16 = getelementptr inbounds %class.anon.1, %class.anon.1* %1, i64 0, i32 2
  %17 = getelementptr inbounds %class.anon.1, %class.anon.1* %1, i64 0, i32 3
  %18 = getelementptr inbounds %class.anon.1, %class.anon.1* %1, i64 0, i32 4
  %19 = getelementptr inbounds %class.anon.1, %class.anon.1* %1, i64 0, i32 5
  %20 = getelementptr inbounds %class.anon.1, %class.anon.1* %1, i64 0, i32 6
  %21 = getelementptr inbounds %class.anon.1, %class.anon.1* %1, i64 0, i32 0
  %22 = getelementptr inbounds %class.anon.1, %class.anon.1* %1, i64 0, i32 1
  br label %23

23:                                               ; preds = %7, %155
  %24 = phi i32 [ 0, %7 ], [ %157, %155 ]
  store i32 0, i32* %8, align 4
  %25 = load i32, i32* %9, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %155

27:                                               ; preds = %23, %148
  %28 = phi i32 [ %150, %148 ], [ 0, %23 ]
  store i32 0, i32* %10, align 4
  %29 = load i32, i32* %11, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %148

31:                                               ; preds = %27, %141
  %32 = phi i32 [ %143, %141 ], [ 0, %27 ]
  store i32 0, i32* %12, align 4
  %33 = load i32, i32* %13, align 4
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %141

35:                                               ; preds = %31, %134
  %36 = phi i32 [ %136, %134 ], [ 0, %31 ]
  store i32 0, i32* %14, align 4
  %37 = load i32, i32* %15, align 4
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %134

39:                                               ; preds = %35, %39
  %40 = phi i32 [ %130, %39 ], [ 0, %35 ]
  %41 = phi i32 [ %133, %39 ], [ %36, %35 ]
  %42 = load float**, float*** %16, align 8
  %43 = load float*, float** %42, align 8
  %44 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %17, align 8
  %45 = load i32, i32* %2, align 4
  %46 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %44, i64 0, i32 1, i64 0
  %47 = load i32, i32* %46, align 4
  %48 = mul nsw i32 %47, %45
  %49 = load i32, i32* %8, align 4
  %50 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %44, i64 0, i32 1, i64 1
  %51 = load i32, i32* %50, align 4
  %52 = mul nsw i32 %51, %49
  %53 = add nsw i32 %52, %48
  %54 = load i32, i32* %10, align 4
  %55 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %44, i64 0, i32 1, i64 2
  %56 = load i32, i32* %55, align 4
  %57 = mul nsw i32 %56, %54
  %58 = add nsw i32 %53, %57
  %59 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %44, i64 0, i32 1, i64 3
  %60 = load i32, i32* %59, align 4
  %61 = mul nsw i32 %60, %41
  %62 = add nsw i32 %58, %61
  %63 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %44, i64 0, i32 1, i64 4
  %64 = load i32, i32* %63, align 4
  %65 = mul nsw i32 %64, %40
  %66 = add nsw i32 %62, %65
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds float, float* %43, i64 %67
  %69 = load float, float* %68, align 4
  %70 = load float**, float*** %18, align 8
  %71 = load float*, float** %70, align 8
  %72 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %19, align 8
  %73 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %72, i64 0, i32 1, i64 0
  %74 = load i32, i32* %73, align 4
  %75 = mul nsw i32 %74, %45
  %76 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %72, i64 0, i32 1, i64 1
  %77 = load i32, i32* %76, align 4
  %78 = mul nsw i32 %77, %49
  %79 = add nsw i32 %78, %75
  %80 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %72, i64 0, i32 1, i64 2
  %81 = load i32, i32* %80, align 4
  %82 = mul nsw i32 %81, %54
  %83 = add nsw i32 %79, %82
  %84 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %72, i64 0, i32 1, i64 3
  %85 = load i32, i32* %84, align 4
  %86 = mul nsw i32 %85, %41
  %87 = add nsw i32 %83, %86
  %88 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %72, i64 0, i32 1, i64 4
  %89 = load i32, i32* %88, align 4
  %90 = mul nsw i32 %89, %40
  %91 = add nsw i32 %87, %90
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds float, float* %71, i64 %92
  %94 = load float, float* %93, align 4
  %95 = fsub float %69, %94
  %96 = load %"struct.tflite::ArithmeticParams"*, %"struct.tflite::ArithmeticParams"** %20, align 8
  %97 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %96, i64 0, i32 13
  %98 = load float, float* %97, align 4
  %99 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %96, i64 0, i32 14
  %100 = load float, float* %99, align 4
  %101 = fcmp olt float %95, %98
  %102 = select i1 %101, float %98, float %95
  %103 = fcmp ogt float %102, %100
  %104 = select i1 %103, float %100, float %102
  %105 = load float**, float*** %21, align 8
  %106 = load float*, float** %105, align 8
  %107 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %22, align 8
  %108 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %107, i64 0, i32 1, i64 0
  %109 = load i32, i32* %108, align 4
  %110 = mul nsw i32 %109, %45
  %111 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %107, i64 0, i32 1, i64 1
  %112 = load i32, i32* %111, align 4
  %113 = mul nsw i32 %112, %49
  %114 = add nsw i32 %113, %110
  %115 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %107, i64 0, i32 1, i64 2
  %116 = load i32, i32* %115, align 4
  %117 = mul nsw i32 %116, %54
  %118 = add nsw i32 %114, %117
  %119 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %107, i64 0, i32 1, i64 3
  %120 = load i32, i32* %119, align 4
  %121 = mul nsw i32 %120, %41
  %122 = add nsw i32 %118, %121
  %123 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %107, i64 0, i32 1, i64 4
  %124 = load i32, i32* %123, align 4
  %125 = mul nsw i32 %124, %40
  %126 = add nsw i32 %122, %125
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds float, float* %106, i64 %127
  store float %104, float* %128, align 4
  %129 = load i32, i32* %14, align 4
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %14, align 4
  %131 = load i32, i32* %15, align 4
  %132 = icmp slt i32 %130, %131
  %133 = load i32, i32* %12, align 4
  br i1 %132, label %39, label %134

134:                                              ; preds = %39, %35
  %135 = phi i32 [ %36, %35 ], [ %133, %39 ]
  %136 = add nsw i32 %135, 1
  store i32 %136, i32* %12, align 4
  %137 = load i32, i32* %13, align 4
  %138 = icmp slt i32 %136, %137
  br i1 %138, label %35, label %139

139:                                              ; preds = %134
  %140 = load i32, i32* %10, align 4
  br label %141

141:                                              ; preds = %139, %31
  %142 = phi i32 [ %140, %139 ], [ %32, %31 ]
  %143 = add nsw i32 %142, 1
  store i32 %143, i32* %10, align 4
  %144 = load i32, i32* %11, align 4
  %145 = icmp slt i32 %143, %144
  br i1 %145, label %31, label %146

146:                                              ; preds = %141
  %147 = load i32, i32* %8, align 4
  br label %148

148:                                              ; preds = %146, %27
  %149 = phi i32 [ %147, %146 ], [ %28, %27 ]
  %150 = add nsw i32 %149, 1
  store i32 %150, i32* %8, align 4
  %151 = load i32, i32* %9, align 4
  %152 = icmp slt i32 %150, %151
  br i1 %152, label %27, label %153

153:                                              ; preds = %148
  %154 = load i32, i32* %2, align 4
  br label %155

155:                                              ; preds = %153, %23
  %156 = phi i32 [ %154, %153 ], [ %24, %23 ]
  %157 = add nsw i32 %156, 1
  store i32 %157, i32* %2, align 4
  %158 = load i32, i32* %4, align 4
  %159 = icmp slt i32 %157, %158
  br i1 %159, label %23, label %160

160:                                              ; preds = %155, %3
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6tflite13reference_ops22ProcessBroadcastShapesERKNS_12RuntimeShapeES3_PNS_16ArithmeticParamsE(%"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"struct.tflite::ArithmeticParams"*) local_unnamed_addr #7 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %8, %10
  %12 = select i1 %11, i32 %10, i32 %8
  %13 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 0
  store i8 4, i8* %13, align 4
  %14 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %12, i32* %15, align 8
  %16 = icmp sgt i32 %12, 5
  br i1 %16, label %17, label %23

17:                                               ; preds = %3
  %18 = sext i32 %12 to i64
  %19 = shl nuw nsw i64 %18, 2
  %20 = tail call i8* @_Znam(i64 %19) #10
  %21 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %22 = bitcast i32** %21 to i8**
  store i8* %20, i8** %22, align 8
  br label %25

23:                                               ; preds = %3
  %24 = icmp sgt i32 %12, 0
  br i1 %24, label %25, label %73

25:                                               ; preds = %23, %17
  %26 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %27 = bitcast %union.anon* %26 to [5 x i32]*
  %28 = getelementptr inbounds %union.anon, %union.anon* %26, i64 0, i32 0
  %29 = zext i32 %12 to i64
  %30 = add nsw i64 %29, -1
  %31 = and i64 %29, 3
  %32 = icmp ult i64 %30, 3
  br i1 %32, label %60, label %33

33:                                               ; preds = %25
  %34 = sub nsw i64 %29, %31
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ 0, %33 ], [ %57, %35 ]
  %37 = phi i64 [ %34, %33 ], [ %58, %35 ]
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %27, i64 0, i64 %36
  %39 = load i32*, i32** %28, align 8
  %40 = getelementptr inbounds i32, i32* %39, i64 %36
  %41 = select i1 %16, i32* %40, i32* %38
  store i32 1, i32* %41, align 4
  %42 = or i64 %36, 1
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %27, i64 0, i64 %42
  %44 = load i32*, i32** %28, align 8
  %45 = getelementptr inbounds i32, i32* %44, i64 %42
  %46 = select i1 %16, i32* %45, i32* %43
  store i32 1, i32* %46, align 4
  %47 = or i64 %36, 2
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %27, i64 0, i64 %47
  %49 = load i32*, i32** %28, align 8
  %50 = getelementptr inbounds i32, i32* %49, i64 %47
  %51 = select i1 %16, i32* %50, i32* %48
  store i32 1, i32* %51, align 4
  %52 = or i64 %36, 3
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %27, i64 0, i64 %52
  %54 = load i32*, i32** %28, align 8
  %55 = getelementptr inbounds i32, i32* %54, i64 %52
  %56 = select i1 %16, i32* %55, i32* %53
  store i32 1, i32* %56, align 4
  %57 = add nuw nsw i64 %36, 4
  %58 = add i64 %37, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %35

60:                                               ; preds = %35, %25
  %61 = phi i64 [ 0, %25 ], [ %57, %35 ]
  %62 = icmp eq i64 %31, 0
  br i1 %62, label %73, label %63

63:                                               ; preds = %60, %63
  %64 = phi i64 [ %70, %63 ], [ %61, %60 ]
  %65 = phi i64 [ %71, %63 ], [ %31, %60 ]
  %66 = getelementptr inbounds [5 x i32], [5 x i32]* %27, i64 0, i64 %64
  %67 = load i32*, i32** %28, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %64
  %69 = select i1 %16, i32* %68, i32* %66
  store i32 1, i32* %69, align 4
  %70 = add nuw nsw i64 %64, 1
  %71 = add i64 %65, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %63, !llvm.loop !190

73:                                               ; preds = %60, %63, %23
  %74 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %74) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 32, i1 false)
  %75 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %75, align 8, !alias.scope !191
  %76 = load i32, i32* %7, align 8, !noalias !191
  %77 = icmp slt i32 %12, %76
  br i1 %77, label %78, label %79

78:                                               ; preds = %73
  tail call void @abort() #12, !noalias !191
  unreachable

79:                                               ; preds = %73
  store i32 %12, i32* %75, align 8, !alias.scope !191
  br i1 %16, label %80, label %86

80:                                               ; preds = %79
  %81 = sext i32 %12 to i64
  %82 = shl nuw nsw i64 %81, 2
  %83 = tail call i8* @_Znam(i64 %82) #10, !noalias !191
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %85 = bitcast i32** %84 to i8**
  store i8* %83, i8** %85, align 8, !alias.scope !191
  br label %86

86:                                               ; preds = %80, %79
  %87 = sub i32 %12, %76
  %88 = icmp sgt i32 %87, 0
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %88, label %90, label %139

90:                                               ; preds = %86
  %91 = bitcast %union.anon* %89 to [5 x i32]*
  %92 = getelementptr inbounds %union.anon, %union.anon* %89, i64 0, i32 0
  %93 = zext i32 %87 to i64
  %94 = add nsw i64 %93, -1
  %95 = and i64 %93, 3
  %96 = icmp ult i64 %94, 3
  br i1 %96, label %99, label %97

97:                                               ; preds = %90
  %98 = sub nsw i64 %93, %95
  br label %114

99:                                               ; preds = %114, %90
  %100 = phi i64 [ 0, %90 ], [ %136, %114 ]
  %101 = icmp eq i64 %95, 0
  br i1 %101, label %112, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %109, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %110, %102 ], [ %95, %99 ]
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %91, i64 0, i64 %103
  %106 = load i32*, i32** %92, align 8
  %107 = getelementptr inbounds i32, i32* %106, i64 %103
  %108 = select i1 %16, i32* %107, i32* %105
  store i32 1, i32* %108, align 4
  %109 = add nuw nsw i64 %103, 1
  %110 = add i64 %104, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %102, !llvm.loop !194

112:                                              ; preds = %102, %99
  %113 = load i32, i32* %7, align 8, !noalias !191
  br label %139

114:                                              ; preds = %114, %97
  %115 = phi i64 [ 0, %97 ], [ %136, %114 ]
  %116 = phi i64 [ %98, %97 ], [ %137, %114 ]
  %117 = getelementptr inbounds [5 x i32], [5 x i32]* %91, i64 0, i64 %115
  %118 = load i32*, i32** %92, align 8
  %119 = getelementptr inbounds i32, i32* %118, i64 %115
  %120 = select i1 %16, i32* %119, i32* %117
  store i32 1, i32* %120, align 4
  %121 = or i64 %115, 1
  %122 = getelementptr inbounds [5 x i32], [5 x i32]* %91, i64 0, i64 %121
  %123 = load i32*, i32** %92, align 8
  %124 = getelementptr inbounds i32, i32* %123, i64 %121
  %125 = select i1 %16, i32* %124, i32* %122
  store i32 1, i32* %125, align 4
  %126 = or i64 %115, 2
  %127 = getelementptr inbounds [5 x i32], [5 x i32]* %91, i64 0, i64 %126
  %128 = load i32*, i32** %92, align 8
  %129 = getelementptr inbounds i32, i32* %128, i64 %126
  %130 = select i1 %16, i32* %129, i32* %127
  store i32 1, i32* %130, align 4
  %131 = or i64 %115, 3
  %132 = getelementptr inbounds [5 x i32], [5 x i32]* %91, i64 0, i64 %131
  %133 = load i32*, i32** %92, align 8
  %134 = getelementptr inbounds i32, i32* %133, i64 %131
  %135 = select i1 %16, i32* %134, i32* %132
  store i32 1, i32* %135, align 4
  %136 = add nuw nsw i64 %115, 4
  %137 = add i64 %116, -4
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %99, label %114

139:                                              ; preds = %86, %112
  %140 = phi i32 [ %113, %112 ], [ %76, %86 ]
  %141 = getelementptr inbounds %union.anon, %union.anon* %89, i64 0, i32 0
  %142 = load i32*, i32** %141, align 8, !alias.scope !191
  %143 = bitcast %union.anon* %89 to i32*
  %144 = select i1 %16, i32* %142, i32* %143
  %145 = sext i32 %87 to i64
  %146 = getelementptr inbounds i32, i32* %144, i64 %145
  %147 = bitcast i32* %146 to i8*
  %148 = icmp sgt i32 %140, 5
  %149 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %150 = getelementptr inbounds %union.anon, %union.anon* %149, i64 0, i32 0
  %151 = load i32*, i32** %150, align 8, !noalias !191
  %152 = bitcast %union.anon* %149 to i32*
  %153 = select i1 %148, i32* %151, i32* %152
  %154 = bitcast i32* %153 to i8*
  %155 = sext i32 %140 to i64
  %156 = shl nsw i64 %155, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %147, i8* align 4 %154, i64 %156, i1 false) #11
  %157 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %157) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %157, i8 -86, i64 32, i1 false)
  %158 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %158, align 8, !alias.scope !195
  %159 = load i32, i32* %9, align 8, !noalias !195
  %160 = icmp slt i32 %12, %159
  br i1 %160, label %161, label %162

161:                                              ; preds = %139
  tail call void @abort() #12, !noalias !195
  unreachable

162:                                              ; preds = %139
  store i32 %12, i32* %158, align 8, !alias.scope !195
  br i1 %16, label %163, label %169

163:                                              ; preds = %162
  %164 = sext i32 %12 to i64
  %165 = shl nuw nsw i64 %164, 2
  %166 = tail call i8* @_Znam(i64 %165) #10, !noalias !195
  %167 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %168 = bitcast i32** %167 to i8**
  store i8* %166, i8** %168, align 8, !alias.scope !195
  br label %169

169:                                              ; preds = %163, %162
  %170 = sub i32 %12, %159
  %171 = icmp sgt i32 %170, 0
  %172 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %171, label %173, label %222

173:                                              ; preds = %169
  %174 = bitcast %union.anon* %172 to [5 x i32]*
  %175 = getelementptr inbounds %union.anon, %union.anon* %172, i64 0, i32 0
  %176 = zext i32 %170 to i64
  %177 = add nsw i64 %176, -1
  %178 = and i64 %176, 3
  %179 = icmp ult i64 %177, 3
  br i1 %179, label %182, label %180

180:                                              ; preds = %173
  %181 = sub nsw i64 %176, %178
  br label %197

182:                                              ; preds = %197, %173
  %183 = phi i64 [ 0, %173 ], [ %219, %197 ]
  %184 = icmp eq i64 %178, 0
  br i1 %184, label %195, label %185

185:                                              ; preds = %182, %185
  %186 = phi i64 [ %192, %185 ], [ %183, %182 ]
  %187 = phi i64 [ %193, %185 ], [ %178, %182 ]
  %188 = getelementptr inbounds [5 x i32], [5 x i32]* %174, i64 0, i64 %186
  %189 = load i32*, i32** %175, align 8
  %190 = getelementptr inbounds i32, i32* %189, i64 %186
  %191 = select i1 %16, i32* %190, i32* %188
  store i32 1, i32* %191, align 4
  %192 = add nuw nsw i64 %186, 1
  %193 = add i64 %187, -1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %185, !llvm.loop !198

195:                                              ; preds = %185, %182
  %196 = load i32, i32* %9, align 8, !noalias !195
  br label %222

197:                                              ; preds = %197, %180
  %198 = phi i64 [ 0, %180 ], [ %219, %197 ]
  %199 = phi i64 [ %181, %180 ], [ %220, %197 ]
  %200 = getelementptr inbounds [5 x i32], [5 x i32]* %174, i64 0, i64 %198
  %201 = load i32*, i32** %175, align 8
  %202 = getelementptr inbounds i32, i32* %201, i64 %198
  %203 = select i1 %16, i32* %202, i32* %200
  store i32 1, i32* %203, align 4
  %204 = or i64 %198, 1
  %205 = getelementptr inbounds [5 x i32], [5 x i32]* %174, i64 0, i64 %204
  %206 = load i32*, i32** %175, align 8
  %207 = getelementptr inbounds i32, i32* %206, i64 %204
  %208 = select i1 %16, i32* %207, i32* %205
  store i32 1, i32* %208, align 4
  %209 = or i64 %198, 2
  %210 = getelementptr inbounds [5 x i32], [5 x i32]* %174, i64 0, i64 %209
  %211 = load i32*, i32** %175, align 8
  %212 = getelementptr inbounds i32, i32* %211, i64 %209
  %213 = select i1 %16, i32* %212, i32* %210
  store i32 1, i32* %213, align 4
  %214 = or i64 %198, 3
  %215 = getelementptr inbounds [5 x i32], [5 x i32]* %174, i64 0, i64 %214
  %216 = load i32*, i32** %175, align 8
  %217 = getelementptr inbounds i32, i32* %216, i64 %214
  %218 = select i1 %16, i32* %217, i32* %215
  store i32 1, i32* %218, align 4
  %219 = add nuw nsw i64 %198, 4
  %220 = add i64 %199, -4
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %182, label %197

222:                                              ; preds = %169, %195
  %223 = phi i32 [ %196, %195 ], [ %159, %169 ]
  %224 = getelementptr inbounds %union.anon, %union.anon* %172, i64 0, i32 0
  %225 = load i32*, i32** %224, align 8, !alias.scope !195
  %226 = bitcast %union.anon* %172 to i32*
  %227 = select i1 %16, i32* %225, i32* %226
  %228 = sext i32 %170 to i64
  %229 = getelementptr inbounds i32, i32* %227, i64 %228
  %230 = bitcast i32* %229 to i8*
  %231 = icmp sgt i32 %223, 5
  %232 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %233 = getelementptr inbounds %union.anon, %union.anon* %232, i64 0, i32 0
  %234 = load i32*, i32** %233, align 8, !noalias !195
  %235 = bitcast %union.anon* %232 to i32*
  %236 = select i1 %231, i32* %234, i32* %235
  %237 = bitcast i32* %236 to i8*
  %238 = sext i32 %223 to i64
  %239 = shl nsw i64 %238, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %230, i8* align 4 %237, i64 %239, i1 false) #11
  %240 = load i32, i32* %75, align 8
  %241 = load i32, i32* %158, align 8
  %242 = icmp eq i32 %240, %241
  br i1 %242, label %243, label %256

243:                                              ; preds = %222
  %244 = icmp sgt i32 %240, 5
  %245 = load i32*, i32** %141, align 8
  %246 = select i1 %244, i32* %245, i32* %143
  %247 = bitcast i32* %246 to i8*
  %248 = load i32*, i32** %224, align 8
  %249 = select i1 %244, i32* %248, i32* %226
  %250 = bitcast i32* %249 to i8*
  %251 = sext i32 %240 to i64
  %252 = shl nsw i64 %251, 2
  %253 = call i32 @bcmp(i8* %247, i8* %250, i64 %252) #11
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %243
  store i8 1, i8* %13, align 4
  br label %556

256:                                              ; preds = %222, %243
  %257 = add nsw i32 %12, -1
  %258 = icmp sgt i32 %12, 0
  br i1 %258, label %259, label %298

259:                                              ; preds = %256
  %260 = icmp sgt i32 %240, 5
  %261 = load i32*, i32** %141, align 8
  %262 = bitcast %union.anon* %89 to [5 x i32]*
  %263 = icmp sgt i32 %241, 5
  %264 = load i32*, i32** %224, align 8
  %265 = bitcast %union.anon* %172 to [5 x i32]*
  %266 = sext i32 %12 to i64
  br label %267

267:                                              ; preds = %259, %296
  %268 = phi i64 [ %266, %259 ], [ %269, %296 ]
  %269 = add nsw i64 %268, -1
  %270 = getelementptr inbounds i32, i32* %261, i64 %269
  %271 = getelementptr inbounds [5 x i32], [5 x i32]* %262, i64 0, i64 %269
  %272 = select i1 %260, i32* %270, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds i32, i32* %264, i64 %269
  %275 = getelementptr inbounds [5 x i32], [5 x i32]* %265, i64 0, i64 %269
  %276 = select i1 %263, i32* %274, i32* %275
  %277 = load i32, i32* %276, align 4
  %278 = icmp eq i32 %273, %277
  br i1 %278, label %296, label %279

279:                                              ; preds = %267
  %280 = shl i64 %269, 32
  %281 = ashr exact i64 %280, 32
  %282 = getelementptr inbounds i32, i32* %261, i64 %281
  %283 = getelementptr inbounds [5 x i32], [5 x i32]* %262, i64 0, i64 %281
  %284 = select i1 %260, i32* %282, i32* %283
  %285 = load i32, i32* %284, align 4
  %286 = icmp eq i32 %285, 1
  br i1 %286, label %287, label %288

287:                                              ; preds = %279
  store i8 2, i8* %13, align 4
  br label %298

288:                                              ; preds = %279
  %289 = getelementptr inbounds i32, i32* %264, i64 %281
  %290 = getelementptr inbounds [5 x i32], [5 x i32]* %265, i64 0, i64 %281
  %291 = select i1 %263, i32* %289, i32* %290
  %292 = load i32, i32* %291, align 4
  %293 = icmp eq i32 %292, 1
  br i1 %293, label %294, label %295

294:                                              ; preds = %288
  store i8 3, i8* %13, align 4
  br label %298

295:                                              ; preds = %288
  store i8 4, i8* %13, align 4
  br label %556

296:                                              ; preds = %267
  %297 = icmp sgt i64 %269, 0
  br i1 %297, label %267, label %298

298:                                              ; preds = %296, %256, %294, %287
  %299 = load i8, i8* %13, align 4
  %300 = and i8 %299, -2
  %301 = icmp eq i8 %300, 2
  br i1 %301, label %303, label %302

302:                                              ; preds = %298
  store i8 1, i8* %13, align 4
  br label %556

303:                                              ; preds = %298
  %304 = icmp eq i8 %299, 3
  %305 = select i1 %304, %"class.tflite::RuntimeShape"* %6, %"class.tflite::RuntimeShape"* %5
  %306 = select i1 %304, %"class.tflite::RuntimeShape"* %5, %"class.tflite::RuntimeShape"* %6
  %307 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 15, i64 0
  %308 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 15, i64 1
  %309 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 15, i64 2
  %310 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 15, i64 3
  %311 = bitcast i32* %307 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %311, align 4
  %312 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %2, i64 0, i32 15, i64 4
  store i32 1, i32* %312, align 4
  br i1 %258, label %313, label %363

313:                                              ; preds = %303
  %314 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 0
  %315 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 1
  %316 = bitcast %union.anon* %315 to [5 x i32]*
  %317 = getelementptr inbounds %union.anon, %union.anon* %315, i64 0, i32 0
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 0
  %319 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 1
  %320 = bitcast %union.anon* %319 to [5 x i32]*
  %321 = getelementptr inbounds %union.anon, %union.anon* %319, i64 0, i32 0
  %322 = sext i32 %12 to i64
  %323 = load i32, i32* %314, align 8
  %324 = icmp sgt i32 %323, 5
  br label %325

325:                                              ; preds = %313, %355
  %326 = phi i32 [ 1, %313 ], [ %358, %355 ]
  %327 = phi i64 [ %322, %313 ], [ %329, %355 ]
  %328 = phi i32 [ %257, %313 ], [ %359, %355 ]
  %329 = add nsw i64 %327, -1
  br i1 %324, label %330, label %333

330:                                              ; preds = %325
  %331 = load i32*, i32** %317, align 8
  %332 = getelementptr inbounds i32, i32* %331, i64 %329
  br label %335

333:                                              ; preds = %325
  %334 = getelementptr inbounds [5 x i32], [5 x i32]* %316, i64 0, i64 %329
  br label %335

335:                                              ; preds = %330, %333
  %336 = phi i32* [ %332, %330 ], [ %334, %333 ]
  %337 = load i32, i32* %336, align 4
  %338 = load i32, i32* %318, align 8
  %339 = icmp sgt i32 %338, 5
  br i1 %339, label %340, label %343

340:                                              ; preds = %335
  %341 = load i32*, i32** %321, align 8
  %342 = getelementptr inbounds i32, i32* %341, i64 %329
  br label %345

343:                                              ; preds = %335
  %344 = getelementptr inbounds [5 x i32], [5 x i32]* %320, i64 0, i64 %329
  br label %345

345:                                              ; preds = %340, %343
  %346 = phi i32* [ %342, %340 ], [ %344, %343 ]
  %347 = load i32, i32* %346, align 4
  %348 = icmp eq i32 %337, %347
  br i1 %348, label %349, label %361

349:                                              ; preds = %345
  br i1 %339, label %350, label %353

350:                                              ; preds = %349
  %351 = load i32*, i32** %321, align 8
  %352 = getelementptr inbounds i32, i32* %351, i64 %329
  br label %355

353:                                              ; preds = %349
  %354 = getelementptr inbounds [5 x i32], [5 x i32]* %320, i64 0, i64 %329
  br label %355

355:                                              ; preds = %350, %353
  %356 = phi i32* [ %352, %350 ], [ %354, %353 ]
  %357 = load i32, i32* %356, align 4
  %358 = mul nsw i32 %326, %357
  store i32 %358, i32* %312, align 4
  %359 = add nsw i32 %328, -1
  %360 = icmp sgt i64 %329, 0
  br i1 %360, label %325, label %363

361:                                              ; preds = %345
  %362 = trunc i64 %329 to i32
  br label %363

363:                                              ; preds = %355, %361, %303
  %364 = phi i32 [ %257, %303 ], [ %362, %361 ], [ %359, %355 ]
  %365 = icmp sgt i32 %364, -1
  br i1 %365, label %366, label %556

366:                                              ; preds = %363
  %367 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 0
  %368 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 1
  %369 = bitcast %union.anon* %368 to [5 x i32]*
  %370 = getelementptr inbounds %union.anon, %union.anon* %368, i64 0, i32 0
  %371 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 0
  %372 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 1
  %373 = bitcast %union.anon* %372 to [5 x i32]*
  %374 = getelementptr inbounds %union.anon, %union.anon* %372, i64 0, i32 0
  %375 = sext i32 %364 to i64
  %376 = load i32, i32* %367, align 8
  %377 = icmp sgt i32 %376, 5
  br label %378

378:                                              ; preds = %366, %399
  %379 = phi i32 [ 1, %366 ], [ %402, %399 ]
  %380 = phi i64 [ %375, %366 ], [ %403, %399 ]
  %381 = phi i32 [ %364, %366 ], [ %404, %399 ]
  br i1 %377, label %382, label %385

382:                                              ; preds = %378
  %383 = load i32*, i32** %370, align 8
  %384 = getelementptr inbounds i32, i32* %383, i64 %380
  br label %387

385:                                              ; preds = %378
  %386 = getelementptr inbounds [5 x i32], [5 x i32]* %369, i64 0, i64 %380
  br label %387

387:                                              ; preds = %382, %385
  %388 = phi i32* [ %384, %382 ], [ %386, %385 ]
  %389 = load i32, i32* %388, align 4
  %390 = icmp eq i32 %389, 1
  br i1 %390, label %391, label %406

391:                                              ; preds = %387
  %392 = load i32, i32* %371, align 8
  %393 = icmp sgt i32 %392, 5
  br i1 %393, label %394, label %397

394:                                              ; preds = %391
  %395 = load i32*, i32** %374, align 8
  %396 = getelementptr inbounds i32, i32* %395, i64 %380
  br label %399

397:                                              ; preds = %391
  %398 = getelementptr inbounds [5 x i32], [5 x i32]* %373, i64 0, i64 %380
  br label %399

399:                                              ; preds = %394, %397
  %400 = phi i32* [ %396, %394 ], [ %398, %397 ]
  %401 = load i32, i32* %400, align 4
  %402 = mul nsw i32 %379, %401
  store i32 %402, i32* %310, align 4
  %403 = add nsw i64 %380, -1
  %404 = add nsw i32 %381, -1
  %405 = icmp sgt i64 %380, 0
  br i1 %405, label %378, label %408

406:                                              ; preds = %387
  %407 = trunc i64 %380 to i32
  br label %408

408:                                              ; preds = %399, %406
  %409 = phi i32 [ %407, %406 ], [ %404, %399 ]
  %410 = icmp sgt i32 %409, -1
  br i1 %410, label %411, label %556

411:                                              ; preds = %408
  %412 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 0
  %413 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 1
  %414 = bitcast %union.anon* %413 to [5 x i32]*
  %415 = getelementptr inbounds %union.anon, %union.anon* %413, i64 0, i32 0
  %416 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 0
  %417 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 1
  %418 = bitcast %union.anon* %417 to [5 x i32]*
  %419 = getelementptr inbounds %union.anon, %union.anon* %417, i64 0, i32 0
  %420 = sext i32 %409 to i64
  %421 = load i32, i32* %412, align 8
  %422 = icmp sgt i32 %421, 5
  br label %423

423:                                              ; preds = %411, %452
  %424 = phi i32 [ 1, %411 ], [ %455, %452 ]
  %425 = phi i64 [ %420, %411 ], [ %456, %452 ]
  %426 = phi i32 [ %409, %411 ], [ %457, %452 ]
  br i1 %422, label %427, label %430

427:                                              ; preds = %423
  %428 = load i32*, i32** %415, align 8
  %429 = getelementptr inbounds i32, i32* %428, i64 %425
  br label %432

430:                                              ; preds = %423
  %431 = getelementptr inbounds [5 x i32], [5 x i32]* %414, i64 0, i64 %425
  br label %432

432:                                              ; preds = %427, %430
  %433 = phi i32* [ %429, %427 ], [ %431, %430 ]
  %434 = load i32, i32* %433, align 4
  %435 = load i32, i32* %416, align 8
  %436 = icmp sgt i32 %435, 5
  br i1 %436, label %437, label %440

437:                                              ; preds = %432
  %438 = load i32*, i32** %419, align 8
  %439 = getelementptr inbounds i32, i32* %438, i64 %425
  br label %442

440:                                              ; preds = %432
  %441 = getelementptr inbounds [5 x i32], [5 x i32]* %418, i64 0, i64 %425
  br label %442

442:                                              ; preds = %437, %440
  %443 = phi i32* [ %439, %437 ], [ %441, %440 ]
  %444 = load i32, i32* %443, align 4
  %445 = icmp eq i32 %434, %444
  br i1 %445, label %446, label %459

446:                                              ; preds = %442
  br i1 %422, label %447, label %450

447:                                              ; preds = %446
  %448 = load i32*, i32** %415, align 8
  %449 = getelementptr inbounds i32, i32* %448, i64 %425
  br label %452

450:                                              ; preds = %446
  %451 = getelementptr inbounds [5 x i32], [5 x i32]* %414, i64 0, i64 %425
  br label %452

452:                                              ; preds = %447, %450
  %453 = phi i32* [ %449, %447 ], [ %451, %450 ]
  %454 = load i32, i32* %453, align 4
  %455 = mul nsw i32 %424, %454
  store i32 %455, i32* %309, align 4
  %456 = add nsw i64 %425, -1
  %457 = add nsw i32 %426, -1
  %458 = icmp sgt i64 %425, 0
  br i1 %458, label %423, label %461

459:                                              ; preds = %442
  %460 = trunc i64 %425 to i32
  br label %461

461:                                              ; preds = %452, %459
  %462 = phi i32 [ %460, %459 ], [ %457, %452 ]
  %463 = icmp sgt i32 %462, -1
  br i1 %463, label %464, label %556

464:                                              ; preds = %461
  %465 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 0
  %466 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 1
  %467 = bitcast %union.anon* %466 to [5 x i32]*
  %468 = getelementptr inbounds %union.anon, %union.anon* %466, i64 0, i32 0
  %469 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 0
  %470 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 1
  %471 = bitcast %union.anon* %470 to [5 x i32]*
  %472 = getelementptr inbounds %union.anon, %union.anon* %470, i64 0, i32 0
  %473 = sext i32 %462 to i64
  %474 = load i32, i32* %465, align 8
  %475 = icmp sgt i32 %474, 5
  br label %476

476:                                              ; preds = %464, %497
  %477 = phi i32 [ 1, %464 ], [ %500, %497 ]
  %478 = phi i64 [ %473, %464 ], [ %501, %497 ]
  %479 = phi i32 [ %462, %464 ], [ %502, %497 ]
  br i1 %475, label %480, label %483

480:                                              ; preds = %476
  %481 = load i32*, i32** %468, align 8
  %482 = getelementptr inbounds i32, i32* %481, i64 %478
  br label %485

483:                                              ; preds = %476
  %484 = getelementptr inbounds [5 x i32], [5 x i32]* %467, i64 0, i64 %478
  br label %485

485:                                              ; preds = %480, %483
  %486 = phi i32* [ %482, %480 ], [ %484, %483 ]
  %487 = load i32, i32* %486, align 4
  %488 = icmp eq i32 %487, 1
  br i1 %488, label %489, label %504

489:                                              ; preds = %485
  %490 = load i32, i32* %469, align 8
  %491 = icmp sgt i32 %490, 5
  br i1 %491, label %492, label %495

492:                                              ; preds = %489
  %493 = load i32*, i32** %472, align 8
  %494 = getelementptr inbounds i32, i32* %493, i64 %478
  br label %497

495:                                              ; preds = %489
  %496 = getelementptr inbounds [5 x i32], [5 x i32]* %471, i64 0, i64 %478
  br label %497

497:                                              ; preds = %492, %495
  %498 = phi i32* [ %494, %492 ], [ %496, %495 ]
  %499 = load i32, i32* %498, align 4
  %500 = mul nsw i32 %477, %499
  store i32 %500, i32* %308, align 4
  %501 = add nsw i64 %478, -1
  %502 = add nsw i32 %479, -1
  %503 = icmp sgt i64 %478, 0
  br i1 %503, label %476, label %506

504:                                              ; preds = %485
  %505 = trunc i64 %478 to i32
  br label %506

506:                                              ; preds = %497, %504
  %507 = phi i32 [ %505, %504 ], [ %502, %497 ]
  %508 = icmp sgt i32 %507, -1
  br i1 %508, label %509, label %556

509:                                              ; preds = %506
  %510 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 0
  %511 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %305, i64 0, i32 1
  %512 = bitcast %union.anon* %511 to [5 x i32]*
  %513 = getelementptr inbounds %union.anon, %union.anon* %511, i64 0, i32 0
  %514 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 0
  %515 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %306, i64 0, i32 1
  %516 = bitcast %union.anon* %515 to [5 x i32]*
  %517 = getelementptr inbounds %union.anon, %union.anon* %515, i64 0, i32 0
  %518 = sext i32 %507 to i64
  %519 = load i32, i32* %510, align 8
  %520 = icmp sgt i32 %519, 5
  br label %521

521:                                              ; preds = %509, %549
  %522 = phi i32 [ 1, %509 ], [ %552, %549 ]
  %523 = phi i64 [ %518, %509 ], [ %553, %549 ]
  br i1 %520, label %524, label %527

524:                                              ; preds = %521
  %525 = load i32*, i32** %513, align 8
  %526 = getelementptr inbounds i32, i32* %525, i64 %523
  br label %529

527:                                              ; preds = %521
  %528 = getelementptr inbounds [5 x i32], [5 x i32]* %512, i64 0, i64 %523
  br label %529

529:                                              ; preds = %524, %527
  %530 = phi i32* [ %526, %524 ], [ %528, %527 ]
  %531 = load i32, i32* %530, align 4
  %532 = load i32, i32* %514, align 8
  %533 = icmp sgt i32 %532, 5
  br i1 %533, label %534, label %537

534:                                              ; preds = %529
  %535 = load i32*, i32** %517, align 8
  %536 = getelementptr inbounds i32, i32* %535, i64 %523
  br label %539

537:                                              ; preds = %529
  %538 = getelementptr inbounds [5 x i32], [5 x i32]* %516, i64 0, i64 %523
  br label %539

539:                                              ; preds = %534, %537
  %540 = phi i32* [ %536, %534 ], [ %538, %537 ]
  %541 = load i32, i32* %540, align 4
  %542 = icmp eq i32 %531, %541
  br i1 %542, label %543, label %555

543:                                              ; preds = %539
  br i1 %533, label %544, label %547

544:                                              ; preds = %543
  %545 = load i32*, i32** %517, align 8
  %546 = getelementptr inbounds i32, i32* %545, i64 %523
  br label %549

547:                                              ; preds = %543
  %548 = getelementptr inbounds [5 x i32], [5 x i32]* %516, i64 0, i64 %523
  br label %549

549:                                              ; preds = %544, %547
  %550 = phi i32* [ %546, %544 ], [ %548, %547 ]
  %551 = load i32, i32* %550, align 4
  %552 = mul nsw i32 %522, %551
  store i32 %552, i32* %307, align 4
  %553 = add nsw i64 %523, -1
  %554 = icmp sgt i64 %523, 0
  br i1 %554, label %521, label %556

555:                                              ; preds = %539
  store i8 4, i8* %13, align 4
  br label %556

556:                                              ; preds = %549, %363, %408, %461, %506, %555, %295, %302, %255
  %557 = phi i1 [ false, %255 ], [ false, %302 ], [ true, %295 ], [ true, %555 ], [ true, %506 ], [ true, %461 ], [ true, %408 ], [ true, %363 ], [ true, %549 ]
  %558 = icmp sgt i32 %241, 5
  br i1 %558, label %559, label %565

559:                                              ; preds = %556
  %560 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %561 = load i32*, i32** %560, align 8
  %562 = icmp eq i32* %561, null
  br i1 %562, label %565, label %563

563:                                              ; preds = %559
  %564 = bitcast i32* %561 to i8*
  tail call void @_ZdaPv(i8* %564) #10
  br label %565

565:                                              ; preds = %556, %559, %563
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %157) #11
  %566 = icmp sgt i32 %240, 5
  br i1 %566, label %567, label %573

567:                                              ; preds = %565
  %568 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %569 = load i32*, i32** %568, align 8
  %570 = icmp eq i32* %569, null
  br i1 %570, label %573, label %571

571:                                              ; preds = %567
  %572 = bitcast i32* %569 to i8*
  tail call void @_ZdaPv(i8* %572) #10
  br label %573

573:                                              ; preds = %565, %567, %571
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %74) #11
  br i1 %16, label %574, label %580

574:                                              ; preds = %573
  %575 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %576 = load i32*, i32** %575, align 8
  %577 = icmp eq i32* %576, null
  br i1 %577, label %580, label %578

578:                                              ; preds = %574
  %579 = bitcast i32* %576 to i8*
  tail call void @_ZdaPv(i8* %579) #10
  br label %580

580:                                              ; preds = %573, %574, %578
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #11
  ret i1 %557
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite21reference_integer_ops18BroadcastAdd4DSlowERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKaS6_S8_S6_Pa(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #7 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc.3", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc.3", align 4
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = bitcast %"struct.tflite::NdArrayDesc.3"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %8, i64 0, i32 1, i64 0
  %13 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %8, i64 0, i32 1, i64 1
  %14 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %8, i64 0, i32 1, i64 2
  %15 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %8, i64 0, i32 1, i64 3
  %16 = bitcast %"struct.tflite::NdArrayDesc.3"* %9 to i8*
  %17 = bitcast %"struct.tflite::NdArrayDesc.3"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #11
  %18 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %9, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %9, i64 0, i32 1, i64 1
  %20 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %9, i64 0, i32 1, i64 2
  %21 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %9, i64 0, i32 1, i64 3
  %22 = bitcast %"struct.tflite::NdArrayDesc.3"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %22, i8 -86, i64 32, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc.3"* nonnull %8, %"struct.tflite::NdArrayDesc.3"* nonnull %9)
  %23 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 32, i1 false)
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %24, align 8, !alias.scope !199
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %26 = load i32, i32* %25, align 8, !noalias !199
  %27 = icmp sgt i32 %26, 4
  br i1 %27, label %28, label %29

28:                                               ; preds = %7
  call void @abort() #12, !noalias !199
  unreachable

29:                                               ; preds = %7
  store i32 4, i32* %24, align 8, !alias.scope !199
  %30 = sub i32 4, %26
  %31 = icmp sgt i32 %30, 0
  %32 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  br i1 %31, label %33, label %113

33:                                               ; preds = %29
  %34 = bitcast %union.anon* %32 to [5 x i32]*
  %35 = zext i32 %30 to i64
  %36 = icmp ult i32 %30, 8
  br i1 %36, label %106, label %37

37:                                               ; preds = %33
  %38 = and i64 %35, 4294967288
  %39 = add nsw i64 %38, -8
  %40 = lshr exact i64 %39, 3
  %41 = add nuw nsw i64 %40, 1
  %42 = and i64 %41, 7
  %43 = icmp ult i64 %39, 56
  br i1 %43, label %91, label %44

44:                                               ; preds = %37
  %45 = sub nsw i64 %41, %42
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi i64 [ 0, %44 ], [ %88, %46 ]
  %48 = phi i64 [ %45, %44 ], [ %89, %46 ]
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %47
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !199
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !199
  %53 = or i64 %47, 8
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !199
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !199
  %58 = or i64 %47, 16
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !199
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !199
  %63 = or i64 %47, 24
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !199
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !199
  %68 = or i64 %47, 32
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !199
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !199
  %73 = or i64 %47, 40
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !199
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !199
  %78 = or i64 %47, 48
  %79 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %78
  %80 = bitcast i32* %79 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %80, align 8, !alias.scope !199
  %81 = getelementptr inbounds i32, i32* %79, i64 4
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !199
  %83 = or i64 %47, 56
  %84 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %83
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %85, align 8, !alias.scope !199
  %86 = getelementptr inbounds i32, i32* %84, i64 4
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %87, align 8, !alias.scope !199
  %88 = add i64 %47, 64
  %89 = add i64 %48, -8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %46, !llvm.loop !202

91:                                               ; preds = %46, %37
  %92 = phi i64 [ 0, %37 ], [ %88, %46 ]
  %93 = icmp eq i64 %42, 0
  br i1 %93, label %104, label %94

94:                                               ; preds = %91, %94
  %95 = phi i64 [ %101, %94 ], [ %92, %91 ]
  %96 = phi i64 [ %102, %94 ], [ %42, %91 ]
  %97 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %95
  %98 = bitcast i32* %97 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %98, align 8, !alias.scope !199
  %99 = getelementptr inbounds i32, i32* %97, i64 4
  %100 = bitcast i32* %99 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %100, align 8, !alias.scope !199
  %101 = add i64 %95, 8
  %102 = add i64 %96, -1
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %94, !llvm.loop !203

104:                                              ; preds = %94, %91
  %105 = icmp eq i64 %38, %35
  br i1 %105, label %113, label %106

106:                                              ; preds = %104, %33
  %107 = phi i64 [ 0, %33 ], [ %38, %104 ]
  br label %108

108:                                              ; preds = %106, %108
  %109 = phi i64 [ %111, %108 ], [ %107, %106 ]
  %110 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %109
  store i32 1, i32* %110, align 4, !alias.scope !199
  %111 = add nuw nsw i64 %109, 1
  %112 = icmp eq i64 %111, %35
  br i1 %112, label %113, label %108, !llvm.loop !204

113:                                              ; preds = %108, %104, %29
  %114 = getelementptr inbounds %union.anon, %union.anon* %32, i64 0, i32 0
  %115 = bitcast %union.anon* %32 to i32*
  %116 = sext i32 %30 to i64
  %117 = getelementptr inbounds i32, i32* %115, i64 %116
  %118 = bitcast i32* %117 to i8*
  %119 = icmp sgt i32 %26, 5
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %121 = getelementptr inbounds %union.anon, %union.anon* %120, i64 0, i32 0
  %122 = load i32*, i32** %121, align 8, !noalias !199
  %123 = bitcast %union.anon* %120 to i32*
  %124 = select i1 %119, i32* %122, i32* %123
  %125 = bitcast i32* %124 to i8*
  %126 = sext i32 %26 to i64
  %127 = shl nsw i64 %126, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %118, i8* align 4 %125, i64 %127, i1 false) #11
  %128 = load i32, i32* %24, align 8
  %129 = icmp sgt i32 %128, 5
  %130 = load i32*, i32** %114, align 8
  %131 = select i1 %129, i32* %130, i32* %115
  %132 = load i32, i32* %131, align 4
  %133 = icmp sgt i32 %132, 0
  br i1 %133, label %134, label %165

134:                                              ; preds = %113
  %135 = bitcast %union.anon* %32 to [5 x i32]*
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %135, i64 0, i64 1
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 1
  %138 = bitcast [16 x i8]* %137 to i32*
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 1, i64 4
  %140 = bitcast i8* %139 to i32*
  %141 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 1
  %142 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 2
  %143 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 6
  %144 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 7
  %145 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 8
  %146 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 9
  %147 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 10
  %148 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 4
  %149 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 5
  %150 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 3
  %151 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 12
  %152 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 11
  %153 = getelementptr inbounds i32, i32* %115, i64 1
  %154 = getelementptr inbounds i32, i32* %130, i64 1
  %155 = select i1 %129, i32* %154, i32* %136
  %156 = getelementptr inbounds i32, i32* %130, i64 2
  %157 = select i1 %129, i32* %156, i32* %138
  %158 = getelementptr inbounds i32, i32* %130, i64 3
  %159 = select i1 %129, i32* %158, i32* %140
  br label %160

160:                                              ; preds = %134, %184
  %161 = phi i32 [ %132, %134 ], [ %185, %184 ]
  %162 = phi i32 [ 0, %134 ], [ %186, %184 ]
  %163 = load i32, i32* %155, align 4
  %164 = icmp sgt i32 %163, 0
  br i1 %164, label %172, label %184

165:                                              ; preds = %184, %113
  %166 = xor i1 %129, true
  %167 = icmp eq i32* %130, null
  %168 = or i1 %167, %166
  br i1 %168, label %171, label %169

169:                                              ; preds = %165
  %170 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %170) #10
  br label %171

171:                                              ; preds = %165, %169
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  ret void

172:                                              ; preds = %160, %199
  %173 = phi i32 [ %200, %199 ], [ %163, %160 ]
  %174 = phi i32 [ %201, %199 ], [ 0, %160 ]
  %175 = load i32, i32* %157, align 4
  %176 = icmp sgt i32 %175, 0
  br i1 %176, label %177, label %199

177:                                              ; preds = %172
  %178 = load i32, i32* %153, align 4
  %179 = mul nsw i32 %178, %162
  %180 = add nsw i32 %179, %174
  %181 = load i32, i32* %159, align 4
  br label %188

182:                                              ; preds = %199
  %183 = load i32, i32* %131, align 4
  br label %184

184:                                              ; preds = %182, %160
  %185 = phi i32 [ %183, %182 ], [ %161, %160 ]
  %186 = add nuw nsw i32 %162, 1
  %187 = icmp slt i32 %186, %185
  br i1 %187, label %160, label %165

188:                                              ; preds = %177, %205
  %189 = phi i32 [ %175, %177 ], [ %206, %205 ]
  %190 = phi i32 [ %181, %177 ], [ %207, %205 ]
  %191 = phi i32 [ 0, %177 ], [ %208, %205 ]
  %192 = icmp sgt i32 %190, 0
  br i1 %192, label %193, label %205

193:                                              ; preds = %188
  %194 = load i32, i32* %138, align 8
  %195 = mul nsw i32 %180, %194
  %196 = add nsw i32 %195, %191
  br label %210

197:                                              ; preds = %205
  %198 = load i32, i32* %155, align 4
  br label %199

199:                                              ; preds = %197, %172
  %200 = phi i32 [ %198, %197 ], [ %173, %172 ]
  %201 = add nuw nsw i32 %174, 1
  %202 = icmp slt i32 %201, %200
  br i1 %202, label %172, label %182

203:                                              ; preds = %334
  %204 = load i32, i32* %157, align 4
  br label %205

205:                                              ; preds = %203, %188
  %206 = phi i32 [ %204, %203 ], [ %189, %188 ]
  %207 = phi i32 [ %364, %203 ], [ %190, %188 ]
  %208 = add nuw nsw i32 %191, 1
  %209 = icmp slt i32 %208, %206
  br i1 %209, label %188, label %197

210:                                              ; preds = %193, %334
  %211 = phi i32 [ 0, %193 ], [ %363, %334 ]
  %212 = load i32, i32* %141, align 4
  %213 = load i32, i32* %12, align 4
  %214 = mul nsw i32 %213, %162
  %215 = load i32, i32* %13, align 4
  %216 = mul nsw i32 %215, %174
  %217 = add nsw i32 %216, %214
  %218 = load i32, i32* %14, align 4
  %219 = mul nsw i32 %218, %191
  %220 = add nsw i32 %217, %219
  %221 = load i32, i32* %15, align 4
  %222 = mul nsw i32 %221, %211
  %223 = add nsw i32 %220, %222
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds i8, i8* %2, i64 %224
  %226 = load i8, i8* %225, align 1
  %227 = sext i8 %226 to i32
  %228 = add nsw i32 %212, %227
  %229 = load i32, i32* %142, align 4
  %230 = load i32, i32* %18, align 4
  %231 = mul nsw i32 %230, %162
  %232 = load i32, i32* %19, align 4
  %233 = mul nsw i32 %232, %174
  %234 = add nsw i32 %233, %231
  %235 = load i32, i32* %20, align 4
  %236 = mul nsw i32 %235, %191
  %237 = add nsw i32 %234, %236
  %238 = load i32, i32* %21, align 4
  %239 = mul nsw i32 %238, %211
  %240 = add nsw i32 %237, %239
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds i8, i8* %4, i64 %241
  %243 = load i8, i8* %242, align 1
  %244 = sext i8 %243 to i32
  %245 = add nsw i32 %229, %244
  %246 = load i32, i32* %143, align 4
  %247 = shl i32 %228, %246
  %248 = shl i32 %245, %246
  %249 = load i32, i32* %144, align 4
  %250 = load i32, i32* %145, align 4
  %251 = icmp eq i32 %247, %249
  br i1 %251, label %256, label %252

252:                                              ; preds = %210
  %253 = sext i32 %247 to i64
  %254 = sext i32 %249 to i64
  %255 = mul nsw i64 %254, %253
  br label %260

256:                                              ; preds = %210
  %257 = icmp eq i32 %247, -2147483648
  %258 = sext i32 %247 to i64
  %259 = mul nsw i64 %258, %258
  br i1 %257, label %267, label %260

260:                                              ; preds = %256, %252
  %261 = phi i64 [ %255, %252 ], [ %259, %256 ]
  %262 = icmp sgt i64 %261, -1
  %263 = select i1 %262, i64 1073741824, i64 -1073741823
  %264 = add nsw i64 %263, %261
  %265 = sdiv i64 %264, 2147483648
  %266 = trunc i64 %265 to i32
  br label %267

267:                                              ; preds = %256, %260
  %268 = phi i32 [ %266, %260 ], [ 2147483647, %256 ]
  %269 = sub nsw i32 0, %250
  %270 = zext i32 %269 to i64
  %271 = shl nsw i64 -1, %270
  %272 = trunc i64 %271 to i32
  %273 = xor i32 %272, -1
  %274 = and i32 %268, %273
  %275 = ashr i32 %273, 1
  %276 = lshr i32 %268, 31
  %277 = add nsw i32 %276, %275
  %278 = ashr i32 %268, %269
  %279 = icmp sgt i32 %274, %277
  %280 = zext i1 %279 to i32
  %281 = load i32, i32* %146, align 4
  %282 = load i32, i32* %147, align 4
  %283 = icmp eq i32 %248, %281
  br i1 %283, label %288, label %284

284:                                              ; preds = %267
  %285 = sext i32 %248 to i64
  %286 = sext i32 %281 to i64
  %287 = mul nsw i64 %286, %285
  br label %292

288:                                              ; preds = %267
  %289 = icmp eq i32 %248, -2147483648
  %290 = sext i32 %248 to i64
  %291 = mul nsw i64 %290, %290
  br i1 %289, label %299, label %292

292:                                              ; preds = %288, %284
  %293 = phi i64 [ %287, %284 ], [ %291, %288 ]
  %294 = icmp sgt i64 %293, -1
  %295 = select i1 %294, i64 1073741824, i64 -1073741823
  %296 = add nsw i64 %295, %293
  %297 = sdiv i64 %296, 2147483648
  %298 = trunc i64 %297 to i32
  br label %299

299:                                              ; preds = %288, %292
  %300 = phi i32 [ %298, %292 ], [ 2147483647, %288 ]
  %301 = sub nsw i32 0, %282
  %302 = zext i32 %301 to i64
  %303 = shl nsw i64 -1, %302
  %304 = trunc i64 %303 to i32
  %305 = xor i32 %304, -1
  %306 = and i32 %300, %305
  %307 = ashr i32 %305, 1
  %308 = lshr i32 %300, 31
  %309 = add nsw i32 %308, %307
  %310 = ashr i32 %300, %301
  %311 = icmp sgt i32 %306, %309
  %312 = zext i1 %311 to i32
  %313 = add i32 %278, %280
  %314 = add i32 %313, %310
  %315 = add i32 %314, %312
  %316 = load i32, i32* %148, align 4
  %317 = load i32, i32* %149, align 4
  %318 = icmp eq i32 %315, %316
  br i1 %318, label %323, label %319

319:                                              ; preds = %299
  %320 = sext i32 %315 to i64
  %321 = sext i32 %316 to i64
  %322 = mul nsw i64 %320, %321
  br label %327

323:                                              ; preds = %299
  %324 = icmp eq i32 %315, -2147483648
  %325 = sext i32 %315 to i64
  %326 = mul nsw i64 %325, %325
  br i1 %324, label %334, label %327

327:                                              ; preds = %323, %319
  %328 = phi i64 [ %322, %319 ], [ %326, %323 ]
  %329 = icmp sgt i64 %328, -1
  %330 = select i1 %329, i64 1073741824, i64 -1073741823
  %331 = add nsw i64 %330, %328
  %332 = sdiv i64 %331, 2147483648
  %333 = trunc i64 %332 to i32
  br label %334

334:                                              ; preds = %323, %327
  %335 = phi i32 [ %333, %327 ], [ 2147483647, %323 ]
  %336 = sub nsw i32 0, %317
  %337 = zext i32 %336 to i64
  %338 = shl nsw i64 -1, %337
  %339 = trunc i64 %338 to i32
  %340 = xor i32 %339, -1
  %341 = and i32 %335, %340
  %342 = ashr i32 %340, 1
  %343 = lshr i32 %335, 31
  %344 = add nsw i32 %343, %342
  %345 = ashr i32 %335, %336
  %346 = icmp sgt i32 %341, %344
  %347 = zext i1 %346 to i32
  %348 = load i32, i32* %150, align 4
  %349 = add i32 %348, %345
  %350 = add i32 %349, %347
  %351 = load i32, i32* %152, align 4
  %352 = icmp slt i32 %351, %350
  %353 = select i1 %352, i32 %350, i32 %351
  %354 = load i32, i32* %151, align 4
  %355 = icmp slt i32 %353, %354
  %356 = select i1 %355, i32 %353, i32 %354
  %357 = trunc i32 %356 to i8
  %358 = load i32, i32* %140, align 4
  %359 = mul nsw i32 %196, %358
  %360 = add nsw i32 %359, %211
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds i8, i8* %6, i64 %361
  store i8 %357, i8* %362, align 1
  %363 = add nuw nsw i32 %211, 1
  %364 = load i32, i32* %159, align 4
  %365 = icmp slt i32 %363, %364
  br i1 %365, label %210, label %203
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops18BroadcastAdd4DSlowERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS6_S8_S6_Ph(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #7 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc.3", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc.3", align 4
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = bitcast %"struct.tflite::NdArrayDesc.3"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %8, i64 0, i32 1, i64 0
  %13 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %8, i64 0, i32 1, i64 1
  %14 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %8, i64 0, i32 1, i64 2
  %15 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %8, i64 0, i32 1, i64 3
  %16 = bitcast %"struct.tflite::NdArrayDesc.3"* %9 to i8*
  %17 = bitcast %"struct.tflite::NdArrayDesc.3"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #11
  %18 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %9, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %9, i64 0, i32 1, i64 1
  %20 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %9, i64 0, i32 1, i64 2
  %21 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %9, i64 0, i32 1, i64 3
  %22 = bitcast %"struct.tflite::NdArrayDesc.3"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %22, i8 -86, i64 32, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc.3"* nonnull %8, %"struct.tflite::NdArrayDesc.3"* nonnull %9)
  %23 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 32, i1 false)
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %24, align 8, !alias.scope !205
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %26 = load i32, i32* %25, align 8, !noalias !205
  %27 = icmp sgt i32 %26, 4
  br i1 %27, label %28, label %29

28:                                               ; preds = %7
  call void @abort() #12, !noalias !205
  unreachable

29:                                               ; preds = %7
  store i32 4, i32* %24, align 8, !alias.scope !205
  %30 = sub i32 4, %26
  %31 = icmp sgt i32 %30, 0
  %32 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  br i1 %31, label %33, label %113

33:                                               ; preds = %29
  %34 = bitcast %union.anon* %32 to [5 x i32]*
  %35 = zext i32 %30 to i64
  %36 = icmp ult i32 %30, 8
  br i1 %36, label %106, label %37

37:                                               ; preds = %33
  %38 = and i64 %35, 4294967288
  %39 = add nsw i64 %38, -8
  %40 = lshr exact i64 %39, 3
  %41 = add nuw nsw i64 %40, 1
  %42 = and i64 %41, 7
  %43 = icmp ult i64 %39, 56
  br i1 %43, label %91, label %44

44:                                               ; preds = %37
  %45 = sub nsw i64 %41, %42
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi i64 [ 0, %44 ], [ %88, %46 ]
  %48 = phi i64 [ %45, %44 ], [ %89, %46 ]
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %47
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !205
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !205
  %53 = or i64 %47, 8
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !205
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !205
  %58 = or i64 %47, 16
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !205
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !205
  %63 = or i64 %47, 24
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !205
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !205
  %68 = or i64 %47, 32
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !205
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !205
  %73 = or i64 %47, 40
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !205
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !205
  %78 = or i64 %47, 48
  %79 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %78
  %80 = bitcast i32* %79 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %80, align 8, !alias.scope !205
  %81 = getelementptr inbounds i32, i32* %79, i64 4
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !205
  %83 = or i64 %47, 56
  %84 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %83
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %85, align 8, !alias.scope !205
  %86 = getelementptr inbounds i32, i32* %84, i64 4
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %87, align 8, !alias.scope !205
  %88 = add i64 %47, 64
  %89 = add i64 %48, -8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %46, !llvm.loop !208

91:                                               ; preds = %46, %37
  %92 = phi i64 [ 0, %37 ], [ %88, %46 ]
  %93 = icmp eq i64 %42, 0
  br i1 %93, label %104, label %94

94:                                               ; preds = %91, %94
  %95 = phi i64 [ %101, %94 ], [ %92, %91 ]
  %96 = phi i64 [ %102, %94 ], [ %42, %91 ]
  %97 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %95
  %98 = bitcast i32* %97 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %98, align 8, !alias.scope !205
  %99 = getelementptr inbounds i32, i32* %97, i64 4
  %100 = bitcast i32* %99 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %100, align 8, !alias.scope !205
  %101 = add i64 %95, 8
  %102 = add i64 %96, -1
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %94, !llvm.loop !209

104:                                              ; preds = %94, %91
  %105 = icmp eq i64 %38, %35
  br i1 %105, label %113, label %106

106:                                              ; preds = %104, %33
  %107 = phi i64 [ 0, %33 ], [ %38, %104 ]
  br label %108

108:                                              ; preds = %106, %108
  %109 = phi i64 [ %111, %108 ], [ %107, %106 ]
  %110 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 %109
  store i32 1, i32* %110, align 4, !alias.scope !205
  %111 = add nuw nsw i64 %109, 1
  %112 = icmp eq i64 %111, %35
  br i1 %112, label %113, label %108, !llvm.loop !210

113:                                              ; preds = %108, %104, %29
  %114 = getelementptr inbounds %union.anon, %union.anon* %32, i64 0, i32 0
  %115 = bitcast %union.anon* %32 to i32*
  %116 = sext i32 %30 to i64
  %117 = getelementptr inbounds i32, i32* %115, i64 %116
  %118 = bitcast i32* %117 to i8*
  %119 = icmp sgt i32 %26, 5
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %121 = getelementptr inbounds %union.anon, %union.anon* %120, i64 0, i32 0
  %122 = load i32*, i32** %121, align 8, !noalias !205
  %123 = bitcast %union.anon* %120 to i32*
  %124 = select i1 %119, i32* %122, i32* %123
  %125 = bitcast i32* %124 to i8*
  %126 = sext i32 %26 to i64
  %127 = shl nsw i64 %126, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %118, i8* align 4 %125, i64 %127, i1 false) #11
  %128 = load i32, i32* %24, align 8
  %129 = icmp sgt i32 %128, 5
  %130 = load i32*, i32** %114, align 8
  %131 = select i1 %129, i32* %130, i32* %115
  %132 = load i32, i32* %131, align 4
  %133 = icmp sgt i32 %132, 0
  br i1 %133, label %134, label %165

134:                                              ; preds = %113
  %135 = bitcast %union.anon* %32 to [5 x i32]*
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %135, i64 0, i64 1
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 1
  %138 = bitcast [16 x i8]* %137 to i32*
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 1, i64 4
  %140 = bitcast i8* %139 to i32*
  %141 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 1
  %142 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 2
  %143 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 6
  %144 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 7
  %145 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 8
  %146 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 9
  %147 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 10
  %148 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 4
  %149 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 5
  %150 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 3
  %151 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 12
  %152 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 11
  %153 = getelementptr inbounds i32, i32* %115, i64 1
  %154 = getelementptr inbounds i32, i32* %130, i64 1
  %155 = select i1 %129, i32* %154, i32* %136
  %156 = getelementptr inbounds i32, i32* %130, i64 2
  %157 = select i1 %129, i32* %156, i32* %138
  %158 = getelementptr inbounds i32, i32* %130, i64 3
  %159 = select i1 %129, i32* %158, i32* %140
  br label %160

160:                                              ; preds = %134, %184
  %161 = phi i32 [ %132, %134 ], [ %185, %184 ]
  %162 = phi i32 [ 0, %134 ], [ %186, %184 ]
  %163 = load i32, i32* %155, align 4
  %164 = icmp sgt i32 %163, 0
  br i1 %164, label %172, label %184

165:                                              ; preds = %184, %113
  %166 = xor i1 %129, true
  %167 = icmp eq i32* %130, null
  %168 = or i1 %167, %166
  br i1 %168, label %171, label %169

169:                                              ; preds = %165
  %170 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %170) #10
  br label %171

171:                                              ; preds = %165, %169
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  ret void

172:                                              ; preds = %160, %199
  %173 = phi i32 [ %200, %199 ], [ %163, %160 ]
  %174 = phi i32 [ %201, %199 ], [ 0, %160 ]
  %175 = load i32, i32* %157, align 4
  %176 = icmp sgt i32 %175, 0
  br i1 %176, label %177, label %199

177:                                              ; preds = %172
  %178 = load i32, i32* %153, align 4
  %179 = mul nsw i32 %178, %162
  %180 = add nsw i32 %179, %174
  %181 = load i32, i32* %159, align 4
  br label %188

182:                                              ; preds = %199
  %183 = load i32, i32* %131, align 4
  br label %184

184:                                              ; preds = %182, %160
  %185 = phi i32 [ %183, %182 ], [ %161, %160 ]
  %186 = add nuw nsw i32 %162, 1
  %187 = icmp slt i32 %186, %185
  br i1 %187, label %160, label %165

188:                                              ; preds = %177, %205
  %189 = phi i32 [ %175, %177 ], [ %206, %205 ]
  %190 = phi i32 [ %181, %177 ], [ %207, %205 ]
  %191 = phi i32 [ 0, %177 ], [ %208, %205 ]
  %192 = icmp sgt i32 %190, 0
  br i1 %192, label %193, label %205

193:                                              ; preds = %188
  %194 = load i32, i32* %138, align 8
  %195 = mul nsw i32 %180, %194
  %196 = add nsw i32 %195, %191
  br label %210

197:                                              ; preds = %205
  %198 = load i32, i32* %155, align 4
  br label %199

199:                                              ; preds = %197, %172
  %200 = phi i32 [ %198, %197 ], [ %173, %172 ]
  %201 = add nuw nsw i32 %174, 1
  %202 = icmp slt i32 %201, %200
  br i1 %202, label %172, label %182

203:                                              ; preds = %334
  %204 = load i32, i32* %157, align 4
  br label %205

205:                                              ; preds = %203, %188
  %206 = phi i32 [ %204, %203 ], [ %189, %188 ]
  %207 = phi i32 [ %364, %203 ], [ %190, %188 ]
  %208 = add nuw nsw i32 %191, 1
  %209 = icmp slt i32 %208, %206
  br i1 %209, label %188, label %197

210:                                              ; preds = %193, %334
  %211 = phi i32 [ 0, %193 ], [ %363, %334 ]
  %212 = load i32, i32* %141, align 4
  %213 = load i32, i32* %12, align 4
  %214 = mul nsw i32 %213, %162
  %215 = load i32, i32* %13, align 4
  %216 = mul nsw i32 %215, %174
  %217 = add nsw i32 %216, %214
  %218 = load i32, i32* %14, align 4
  %219 = mul nsw i32 %218, %191
  %220 = add nsw i32 %217, %219
  %221 = load i32, i32* %15, align 4
  %222 = mul nsw i32 %221, %211
  %223 = add nsw i32 %220, %222
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds i8, i8* %2, i64 %224
  %226 = load i8, i8* %225, align 1
  %227 = zext i8 %226 to i32
  %228 = add nsw i32 %212, %227
  %229 = load i32, i32* %142, align 4
  %230 = load i32, i32* %18, align 4
  %231 = mul nsw i32 %230, %162
  %232 = load i32, i32* %19, align 4
  %233 = mul nsw i32 %232, %174
  %234 = add nsw i32 %233, %231
  %235 = load i32, i32* %20, align 4
  %236 = mul nsw i32 %235, %191
  %237 = add nsw i32 %234, %236
  %238 = load i32, i32* %21, align 4
  %239 = mul nsw i32 %238, %211
  %240 = add nsw i32 %237, %239
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds i8, i8* %4, i64 %241
  %243 = load i8, i8* %242, align 1
  %244 = zext i8 %243 to i32
  %245 = add nsw i32 %229, %244
  %246 = load i32, i32* %143, align 4
  %247 = shl i32 %228, %246
  %248 = shl i32 %245, %246
  %249 = load i32, i32* %144, align 4
  %250 = load i32, i32* %145, align 4
  %251 = icmp eq i32 %247, %249
  br i1 %251, label %256, label %252

252:                                              ; preds = %210
  %253 = sext i32 %247 to i64
  %254 = sext i32 %249 to i64
  %255 = mul nsw i64 %254, %253
  br label %260

256:                                              ; preds = %210
  %257 = icmp eq i32 %247, -2147483648
  %258 = sext i32 %247 to i64
  %259 = mul nsw i64 %258, %258
  br i1 %257, label %267, label %260

260:                                              ; preds = %256, %252
  %261 = phi i64 [ %255, %252 ], [ %259, %256 ]
  %262 = icmp sgt i64 %261, -1
  %263 = select i1 %262, i64 1073741824, i64 -1073741823
  %264 = add nsw i64 %263, %261
  %265 = sdiv i64 %264, 2147483648
  %266 = trunc i64 %265 to i32
  br label %267

267:                                              ; preds = %256, %260
  %268 = phi i32 [ %266, %260 ], [ 2147483647, %256 ]
  %269 = sub nsw i32 0, %250
  %270 = zext i32 %269 to i64
  %271 = shl nsw i64 -1, %270
  %272 = trunc i64 %271 to i32
  %273 = xor i32 %272, -1
  %274 = and i32 %268, %273
  %275 = ashr i32 %273, 1
  %276 = lshr i32 %268, 31
  %277 = add nsw i32 %276, %275
  %278 = ashr i32 %268, %269
  %279 = icmp sgt i32 %274, %277
  %280 = zext i1 %279 to i32
  %281 = load i32, i32* %146, align 4
  %282 = load i32, i32* %147, align 4
  %283 = icmp eq i32 %248, %281
  br i1 %283, label %288, label %284

284:                                              ; preds = %267
  %285 = sext i32 %248 to i64
  %286 = sext i32 %281 to i64
  %287 = mul nsw i64 %286, %285
  br label %292

288:                                              ; preds = %267
  %289 = icmp eq i32 %248, -2147483648
  %290 = sext i32 %248 to i64
  %291 = mul nsw i64 %290, %290
  br i1 %289, label %299, label %292

292:                                              ; preds = %288, %284
  %293 = phi i64 [ %287, %284 ], [ %291, %288 ]
  %294 = icmp sgt i64 %293, -1
  %295 = select i1 %294, i64 1073741824, i64 -1073741823
  %296 = add nsw i64 %295, %293
  %297 = sdiv i64 %296, 2147483648
  %298 = trunc i64 %297 to i32
  br label %299

299:                                              ; preds = %288, %292
  %300 = phi i32 [ %298, %292 ], [ 2147483647, %288 ]
  %301 = sub nsw i32 0, %282
  %302 = zext i32 %301 to i64
  %303 = shl nsw i64 -1, %302
  %304 = trunc i64 %303 to i32
  %305 = xor i32 %304, -1
  %306 = and i32 %300, %305
  %307 = ashr i32 %305, 1
  %308 = lshr i32 %300, 31
  %309 = add nsw i32 %308, %307
  %310 = ashr i32 %300, %301
  %311 = icmp sgt i32 %306, %309
  %312 = zext i1 %311 to i32
  %313 = add i32 %278, %280
  %314 = add i32 %313, %310
  %315 = add i32 %314, %312
  %316 = load i32, i32* %148, align 4
  %317 = load i32, i32* %149, align 4
  %318 = icmp eq i32 %315, %316
  br i1 %318, label %323, label %319

319:                                              ; preds = %299
  %320 = sext i32 %315 to i64
  %321 = sext i32 %316 to i64
  %322 = mul nsw i64 %320, %321
  br label %327

323:                                              ; preds = %299
  %324 = icmp eq i32 %315, -2147483648
  %325 = sext i32 %315 to i64
  %326 = mul nsw i64 %325, %325
  br i1 %324, label %334, label %327

327:                                              ; preds = %323, %319
  %328 = phi i64 [ %322, %319 ], [ %326, %323 ]
  %329 = icmp sgt i64 %328, -1
  %330 = select i1 %329, i64 1073741824, i64 -1073741823
  %331 = add nsw i64 %330, %328
  %332 = sdiv i64 %331, 2147483648
  %333 = trunc i64 %332 to i32
  br label %334

334:                                              ; preds = %323, %327
  %335 = phi i32 [ %333, %327 ], [ 2147483647, %323 ]
  %336 = sub nsw i32 0, %317
  %337 = zext i32 %336 to i64
  %338 = shl nsw i64 -1, %337
  %339 = trunc i64 %338 to i32
  %340 = xor i32 %339, -1
  %341 = and i32 %335, %340
  %342 = ashr i32 %340, 1
  %343 = lshr i32 %335, 31
  %344 = add nsw i32 %343, %342
  %345 = ashr i32 %335, %336
  %346 = icmp sgt i32 %341, %344
  %347 = zext i1 %346 to i32
  %348 = load i32, i32* %150, align 4
  %349 = add i32 %348, %345
  %350 = add i32 %349, %347
  %351 = load i32, i32* %152, align 4
  %352 = icmp slt i32 %351, %350
  %353 = select i1 %352, i32 %350, i32 %351
  %354 = load i32, i32* %151, align 4
  %355 = icmp slt i32 %353, %354
  %356 = select i1 %355, i32 %353, i32 %354
  %357 = trunc i32 %356 to i8
  %358 = load i32, i32* %140, align 4
  %359 = mul nsw i32 %196, %358
  %360 = add nsw i32 %359, %211
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds i8, i8* %6, i64 %361
  store i8 %357, i8* %362, align 1
  %363 = add nuw nsw i32 %211, 1
  %364 = load i32, i32* %159, align 4
  %365 = icmp slt i32 %363, %364
  br i1 %365, label %210, label %203
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops16BroadcastSubSlowIsLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), i16*, %"class.tflite::RuntimeShape"* dereferenceable(32), i16*, %"class.tflite::RuntimeShape"* dereferenceable(32), i16*) local_unnamed_addr #3 comdat {
  %8 = alloca [5 x i32], align 16
  %9 = alloca i16*, align 8
  %10 = alloca i16*, align 8
  %11 = alloca i16*, align 8
  %12 = alloca %"struct.tflite::NdArrayDesc", align 4
  %13 = alloca %"struct.tflite::NdArrayDesc", align 4
  %14 = alloca %"struct.tflite::NdArrayDesc", align 4
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %class.anon.4, align 8
  store i16* %2, i16** %9, align 8
  store i16* %4, i16** %10, align 8
  store i16* %6, i16** %11, align 8
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %18 = bitcast %"struct.tflite::NdArrayDesc"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %18, i8 -86, i64 40, i1 false)
  %19 = bitcast %"struct.tflite::NdArrayDesc"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %19, i8 -86, i64 40, i1 false)
  %20 = bitcast %"struct.tflite::NdArrayDesc"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %20, i8 -86, i64 40, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi5EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %12, %"struct.tflite::NdArrayDesc"* nonnull %13)
  %21 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %22, align 8, !alias.scope !211
  %23 = load i32, i32* %17, align 8, !noalias !211
  %24 = icmp sgt i32 %23, 5
  br i1 %24, label %25, label %26

25:                                               ; preds = %7
  call void @abort() #12, !noalias !211
  unreachable

26:                                               ; preds = %7
  store i32 5, i32* %22, align 8, !alias.scope !211
  %27 = sub i32 5, %23
  %28 = icmp sgt i32 %27, 0
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %30 = bitcast %union.anon* %29 to [5 x i32]*
  br i1 %28, label %31, label %110

31:                                               ; preds = %26
  %32 = zext i32 %27 to i64
  %33 = icmp ult i32 %27, 8
  br i1 %33, label %103, label %34

34:                                               ; preds = %31
  %35 = and i64 %32, 4294967288
  %36 = add nsw i64 %35, -8
  %37 = lshr exact i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = and i64 %38, 7
  %40 = icmp ult i64 %36, 56
  br i1 %40, label %88, label %41

41:                                               ; preds = %34
  %42 = sub nsw i64 %38, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %85, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %86, %43 ]
  %46 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %44
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !211
  %48 = getelementptr inbounds i32, i32* %46, i64 4
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !211
  %50 = or i64 %44, 8
  %51 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %50
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !211
  %53 = getelementptr inbounds i32, i32* %51, i64 4
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !211
  %55 = or i64 %44, 16
  %56 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %55
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !211
  %58 = getelementptr inbounds i32, i32* %56, i64 4
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !211
  %60 = or i64 %44, 24
  %61 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %60
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !211
  %63 = getelementptr inbounds i32, i32* %61, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !211
  %65 = or i64 %44, 32
  %66 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %65
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !211
  %68 = getelementptr inbounds i32, i32* %66, i64 4
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !211
  %70 = or i64 %44, 40
  %71 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %70
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !211
  %73 = getelementptr inbounds i32, i32* %71, i64 4
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !211
  %75 = or i64 %44, 48
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %75
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !211
  %78 = getelementptr inbounds i32, i32* %76, i64 4
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %79, align 8, !alias.scope !211
  %80 = or i64 %44, 56
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %80
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !211
  %83 = getelementptr inbounds i32, i32* %81, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !211
  %85 = add i64 %44, 64
  %86 = add i64 %45, -8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %43, !llvm.loop !214

88:                                               ; preds = %43, %34
  %89 = phi i64 [ 0, %34 ], [ %85, %43 ]
  %90 = icmp eq i64 %39, 0
  br i1 %90, label %101, label %91

91:                                               ; preds = %88, %91
  %92 = phi i64 [ %98, %91 ], [ %89, %88 ]
  %93 = phi i64 [ %99, %91 ], [ %39, %88 ]
  %94 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %92
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %95, align 8, !alias.scope !211
  %96 = getelementptr inbounds i32, i32* %94, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %97, align 8, !alias.scope !211
  %98 = add i64 %92, 8
  %99 = add i64 %93, -1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %91, !llvm.loop !215

101:                                              ; preds = %91, %88
  %102 = icmp eq i64 %35, %32
  br i1 %102, label %110, label %103

103:                                              ; preds = %101, %31
  %104 = phi i64 [ 0, %31 ], [ %35, %101 ]
  br label %105

105:                                              ; preds = %103, %105
  %106 = phi i64 [ %108, %105 ], [ %104, %103 ]
  %107 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 %106
  store i32 1, i32* %107, align 4, !alias.scope !211
  %108 = add nuw nsw i64 %106, 1
  %109 = icmp eq i64 %108, %32
  br i1 %109, label %110, label %105, !llvm.loop !216

110:                                              ; preds = %105, %101, %26
  %111 = getelementptr inbounds %union.anon, %union.anon* %29, i64 0, i32 0
  %112 = bitcast %union.anon* %29 to i32*
  %113 = sext i32 %27 to i64
  %114 = getelementptr inbounds i32, i32* %112, i64 %113
  %115 = bitcast i32* %114 to i8*
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %117 = bitcast %union.anon* %116 to i8*
  %118 = sext i32 %23 to i64
  %119 = shl nsw i64 %118, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %115, i8* align 4 %117, i64 %119, i1 false) #11
  %120 = load i32, i32* %22, align 8
  %121 = icmp sgt i32 %120, 5
  %122 = load i32*, i32** %111, align 8
  %123 = getelementptr inbounds i32, i32* %122, i64 4
  %124 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 1, i64 8
  %125 = bitcast i8* %124 to i32*
  %126 = select i1 %121, i32* %123, i32* %125
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 4
  store i32 %127, i32* %128, align 4
  %129 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 4
  store i32 1, i32* %129, align 4
  %130 = load i32, i32* %126, align 4
  %131 = getelementptr inbounds i32, i32* %122, i64 3
  %132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 1, i64 4
  %133 = bitcast i8* %132 to i32*
  %134 = select i1 %121, i32* %131, i32* %133
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 3
  store i32 %135, i32* %136, align 4
  %137 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 3
  store i32 %130, i32* %137, align 4
  %138 = load i32, i32* %134, align 4
  %139 = mul nsw i32 %138, %130
  %140 = getelementptr inbounds i32, i32* %122, i64 2
  %141 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 1
  %142 = bitcast [16 x i8]* %141 to i32*
  %143 = select i1 %121, i32* %140, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 2
  store i32 %144, i32* %145, align 4
  %146 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 2
  store i32 %139, i32* %146, align 4
  %147 = load i32, i32* %143, align 4
  %148 = mul nsw i32 %147, %139
  %149 = getelementptr inbounds i32, i32* %122, i64 1
  %150 = getelementptr inbounds [5 x i32], [5 x i32]* %30, i64 0, i64 1
  %151 = select i1 %121, i32* %149, i32* %150
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 1
  store i32 %152, i32* %153, align 4
  %154 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 1
  store i32 %148, i32* %154, align 4
  %155 = load i32, i32* %151, align 4
  %156 = mul nsw i32 %155, %148
  %157 = select i1 %121, i32* %122, i32* %112
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 0, i64 0
  store i32 %158, i32* %159, align 4
  %160 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %14, i64 0, i32 1, i64 0
  store i32 %156, i32* %160, align 4
  %161 = xor i1 %121, true
  %162 = icmp eq i32* %122, null
  %163 = or i1 %162, %161
  br i1 %163, label %166, label %164

164:                                              ; preds = %110
  %165 = bitcast i32* %122 to i8*
  call void @_ZdaPv(i8* %165) #10
  br label %166

166:                                              ; preds = %110, %164
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #11
  %167 = bitcast %class.anon.4* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %167) #11
  %168 = getelementptr inbounds %class.anon.4, %class.anon.4* %16, i64 0, i32 0
  store i16** %11, i16*** %168, align 8
  %169 = getelementptr inbounds %class.anon.4, %class.anon.4* %16, i64 0, i32 1
  store %"struct.tflite::NdArrayDesc"* %14, %"struct.tflite::NdArrayDesc"** %169, align 8
  %170 = getelementptr inbounds %class.anon.4, %class.anon.4* %16, i64 0, i32 2
  store i16** %9, i16*** %170, align 8
  %171 = getelementptr inbounds %class.anon.4, %class.anon.4* %16, i64 0, i32 3
  store %"struct.tflite::NdArrayDesc"* %12, %"struct.tflite::NdArrayDesc"** %171, align 8
  %172 = getelementptr inbounds %class.anon.4, %class.anon.4* %16, i64 0, i32 4
  store i16** %10, i16*** %172, align 8
  %173 = getelementptr inbounds %class.anon.4, %class.anon.4* %16, i64 0, i32 5
  store %"struct.tflite::NdArrayDesc"* %13, %"struct.tflite::NdArrayDesc"** %173, align 8
  %174 = getelementptr inbounds %class.anon.4, %class.anon.4* %16, i64 0, i32 6
  store %"struct.tflite::ArithmeticParams"* %0, %"struct.tflite::ArithmeticParams"** %174, align 8
  %175 = bitcast [5 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %175) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %175, i8 0, i64 20, i1 false) #11
  %176 = getelementptr inbounds [5 x i32], [5 x i32]* %8, i64 0, i64 0
  call void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops16BroadcastSubSlowIsLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S8_SB_S8_PS9_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_(%"struct.tflite::NdArrayDesc"* nonnull dereferenceable(40) %14, %class.anon.4* nonnull dereferenceable(56) %16, i32* nonnull %176) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %175) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %167) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops5Sub16ERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKsS6_S8_S6_Ps(%"struct.tflite::ArithmeticParams"* dereferenceable(80), %"class.tflite::RuntimeShape"* dereferenceable(32), i16*, %"class.tflite::RuntimeShape"* dereferenceable(32), i16*, %"class.tflite::RuntimeShape"* dereferenceable(32), i16*) local_unnamed_addr #7 comdat {
  %8 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 8
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, 5
  %13 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  br i1 %12, label %14, label %17

14:                                               ; preds = %7
  %15 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %16 = load i32*, i32** %15, align 8
  br label %20

17:                                               ; preds = %7
  %18 = bitcast %union.anon* %13 to i32*
  %19 = icmp sgt i32 %11, 0
  br i1 %19, label %20, label %120

20:                                               ; preds = %17, %14
  %21 = phi i32* [ %16, %14 ], [ %18, %17 ]
  %22 = zext i32 %11 to i64
  %23 = icmp ult i32 %11, 8
  br i1 %23, label %109, label %24

24:                                               ; preds = %20
  %25 = and i64 %22, 4294967288
  %26 = add nsw i64 %25, -8
  %27 = lshr exact i64 %26, 3
  %28 = add nuw nsw i64 %27, 1
  %29 = and i64 %28, 3
  %30 = icmp ult i64 %26, 24
  br i1 %30, label %76, label %31

31:                                               ; preds = %24
  %32 = sub nsw i64 %28, %29
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi i64 [ 0, %31 ], [ %73, %33 ]
  %35 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %31 ], [ %71, %33 ]
  %36 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %31 ], [ %72, %33 ]
  %37 = phi i64 [ %32, %31 ], [ %74, %33 ]
  %38 = getelementptr inbounds i32, i32* %21, i64 %34
  %39 = bitcast i32* %38 to <4 x i32>*
  %40 = load <4 x i32>, <4 x i32>* %39, align 4
  %41 = getelementptr inbounds i32, i32* %38, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  %43 = load <4 x i32>, <4 x i32>* %42, align 4
  %44 = mul nsw <4 x i32> %40, %35
  %45 = mul nsw <4 x i32> %43, %36
  %46 = or i64 %34, 8
  %47 = getelementptr inbounds i32, i32* %21, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  %49 = load <4 x i32>, <4 x i32>* %48, align 4
  %50 = getelementptr inbounds i32, i32* %47, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  %52 = load <4 x i32>, <4 x i32>* %51, align 4
  %53 = mul nsw <4 x i32> %49, %44
  %54 = mul nsw <4 x i32> %52, %45
  %55 = or i64 %34, 16
  %56 = getelementptr inbounds i32, i32* %21, i64 %55
  %57 = bitcast i32* %56 to <4 x i32>*
  %58 = load <4 x i32>, <4 x i32>* %57, align 4
  %59 = getelementptr inbounds i32, i32* %56, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  %61 = load <4 x i32>, <4 x i32>* %60, align 4
  %62 = mul nsw <4 x i32> %58, %53
  %63 = mul nsw <4 x i32> %61, %54
  %64 = or i64 %34, 24
  %65 = getelementptr inbounds i32, i32* %21, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  %67 = load <4 x i32>, <4 x i32>* %66, align 4
  %68 = getelementptr inbounds i32, i32* %65, i64 4
  %69 = bitcast i32* %68 to <4 x i32>*
  %70 = load <4 x i32>, <4 x i32>* %69, align 4
  %71 = mul nsw <4 x i32> %67, %62
  %72 = mul nsw <4 x i32> %70, %63
  %73 = add i64 %34, 32
  %74 = add i64 %37, -4
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %33, !llvm.loop !217

76:                                               ; preds = %33, %24
  %77 = phi <4 x i32> [ undef, %24 ], [ %71, %33 ]
  %78 = phi <4 x i32> [ undef, %24 ], [ %72, %33 ]
  %79 = phi i64 [ 0, %24 ], [ %73, %33 ]
  %80 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %24 ], [ %71, %33 ]
  %81 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %24 ], [ %72, %33 ]
  %82 = icmp eq i64 %29, 0
  br i1 %82, label %99, label %83

83:                                               ; preds = %76, %83
  %84 = phi i64 [ %96, %83 ], [ %79, %76 ]
  %85 = phi <4 x i32> [ %94, %83 ], [ %80, %76 ]
  %86 = phi <4 x i32> [ %95, %83 ], [ %81, %76 ]
  %87 = phi i64 [ %97, %83 ], [ %29, %76 ]
  %88 = getelementptr inbounds i32, i32* %21, i64 %84
  %89 = bitcast i32* %88 to <4 x i32>*
  %90 = load <4 x i32>, <4 x i32>* %89, align 4
  %91 = getelementptr inbounds i32, i32* %88, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  %93 = load <4 x i32>, <4 x i32>* %92, align 4
  %94 = mul nsw <4 x i32> %90, %85
  %95 = mul nsw <4 x i32> %93, %86
  %96 = add i64 %84, 8
  %97 = add i64 %87, -1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %83, !llvm.loop !218

99:                                               ; preds = %83, %76
  %100 = phi <4 x i32> [ %77, %76 ], [ %94, %83 ]
  %101 = phi <4 x i32> [ %78, %76 ], [ %95, %83 ]
  %102 = mul <4 x i32> %101, %100
  %103 = shufflevector <4 x i32> %102, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %104 = mul <4 x i32> %102, %103
  %105 = shufflevector <4 x i32> %104, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %106 = mul <4 x i32> %104, %105
  %107 = extractelement <4 x i32> %106, i32 0
  %108 = icmp eq i64 %25, %22
  br i1 %108, label %120, label %109

109:                                              ; preds = %99, %20
  %110 = phi i64 [ 0, %20 ], [ %25, %99 ]
  %111 = phi i32 [ 1, %20 ], [ %107, %99 ]
  br label %112

112:                                              ; preds = %109, %112
  %113 = phi i64 [ %118, %112 ], [ %110, %109 ]
  %114 = phi i32 [ %117, %112 ], [ %111, %109 ]
  %115 = getelementptr inbounds i32, i32* %21, i64 %113
  %116 = load i32, i32* %115, align 4
  %117 = mul nsw i32 %116, %114
  %118 = add nuw nsw i64 %113, 1
  %119 = icmp eq i64 %118, %22
  br i1 %119, label %120, label %112, !llvm.loop !219

120:                                              ; preds = %112, %99, %17
  %121 = phi i32 [ 1, %17 ], [ %107, %99 ], [ %117, %112 ]
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %123 = load i32, i32* %122, align 8
  %124 = icmp sgt i32 %123, 5
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  br i1 %124, label %126, label %129

126:                                              ; preds = %120
  %127 = getelementptr inbounds %union.anon, %union.anon* %125, i64 0, i32 0
  %128 = load i32*, i32** %127, align 8
  br label %132

129:                                              ; preds = %120
  %130 = bitcast %union.anon* %125 to i32*
  %131 = icmp sgt i32 %123, 0
  br i1 %131, label %132, label %232

132:                                              ; preds = %129, %126
  %133 = phi i32* [ %128, %126 ], [ %130, %129 ]
  %134 = zext i32 %123 to i64
  %135 = icmp ult i32 %123, 8
  br i1 %135, label %221, label %136

136:                                              ; preds = %132
  %137 = and i64 %134, 4294967288
  %138 = add nsw i64 %137, -8
  %139 = lshr exact i64 %138, 3
  %140 = add nuw nsw i64 %139, 1
  %141 = and i64 %140, 3
  %142 = icmp ult i64 %138, 24
  br i1 %142, label %188, label %143

143:                                              ; preds = %136
  %144 = sub nsw i64 %140, %141
  br label %145

145:                                              ; preds = %145, %143
  %146 = phi i64 [ 0, %143 ], [ %185, %145 ]
  %147 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %143 ], [ %183, %145 ]
  %148 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %143 ], [ %184, %145 ]
  %149 = phi i64 [ %144, %143 ], [ %186, %145 ]
  %150 = getelementptr inbounds i32, i32* %133, i64 %146
  %151 = bitcast i32* %150 to <4 x i32>*
  %152 = load <4 x i32>, <4 x i32>* %151, align 4
  %153 = getelementptr inbounds i32, i32* %150, i64 4
  %154 = bitcast i32* %153 to <4 x i32>*
  %155 = load <4 x i32>, <4 x i32>* %154, align 4
  %156 = mul nsw <4 x i32> %152, %147
  %157 = mul nsw <4 x i32> %155, %148
  %158 = or i64 %146, 8
  %159 = getelementptr inbounds i32, i32* %133, i64 %158
  %160 = bitcast i32* %159 to <4 x i32>*
  %161 = load <4 x i32>, <4 x i32>* %160, align 4
  %162 = getelementptr inbounds i32, i32* %159, i64 4
  %163 = bitcast i32* %162 to <4 x i32>*
  %164 = load <4 x i32>, <4 x i32>* %163, align 4
  %165 = mul nsw <4 x i32> %161, %156
  %166 = mul nsw <4 x i32> %164, %157
  %167 = or i64 %146, 16
  %168 = getelementptr inbounds i32, i32* %133, i64 %167
  %169 = bitcast i32* %168 to <4 x i32>*
  %170 = load <4 x i32>, <4 x i32>* %169, align 4
  %171 = getelementptr inbounds i32, i32* %168, i64 4
  %172 = bitcast i32* %171 to <4 x i32>*
  %173 = load <4 x i32>, <4 x i32>* %172, align 4
  %174 = mul nsw <4 x i32> %170, %165
  %175 = mul nsw <4 x i32> %173, %166
  %176 = or i64 %146, 24
  %177 = getelementptr inbounds i32, i32* %133, i64 %176
  %178 = bitcast i32* %177 to <4 x i32>*
  %179 = load <4 x i32>, <4 x i32>* %178, align 4
  %180 = getelementptr inbounds i32, i32* %177, i64 4
  %181 = bitcast i32* %180 to <4 x i32>*
  %182 = load <4 x i32>, <4 x i32>* %181, align 4
  %183 = mul nsw <4 x i32> %179, %174
  %184 = mul nsw <4 x i32> %182, %175
  %185 = add i64 %146, 32
  %186 = add i64 %149, -4
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %145, !llvm.loop !220

188:                                              ; preds = %145, %136
  %189 = phi <4 x i32> [ undef, %136 ], [ %183, %145 ]
  %190 = phi <4 x i32> [ undef, %136 ], [ %184, %145 ]
  %191 = phi i64 [ 0, %136 ], [ %185, %145 ]
  %192 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %136 ], [ %183, %145 ]
  %193 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %136 ], [ %184, %145 ]
  %194 = icmp eq i64 %141, 0
  br i1 %194, label %211, label %195

195:                                              ; preds = %188, %195
  %196 = phi i64 [ %208, %195 ], [ %191, %188 ]
  %197 = phi <4 x i32> [ %206, %195 ], [ %192, %188 ]
  %198 = phi <4 x i32> [ %207, %195 ], [ %193, %188 ]
  %199 = phi i64 [ %209, %195 ], [ %141, %188 ]
  %200 = getelementptr inbounds i32, i32* %133, i64 %196
  %201 = bitcast i32* %200 to <4 x i32>*
  %202 = load <4 x i32>, <4 x i32>* %201, align 4
  %203 = getelementptr inbounds i32, i32* %200, i64 4
  %204 = bitcast i32* %203 to <4 x i32>*
  %205 = load <4 x i32>, <4 x i32>* %204, align 4
  %206 = mul nsw <4 x i32> %202, %197
  %207 = mul nsw <4 x i32> %205, %198
  %208 = add i64 %196, 8
  %209 = add i64 %199, -1
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %211, label %195, !llvm.loop !221

211:                                              ; preds = %195, %188
  %212 = phi <4 x i32> [ %189, %188 ], [ %206, %195 ]
  %213 = phi <4 x i32> [ %190, %188 ], [ %207, %195 ]
  %214 = mul <4 x i32> %213, %212
  %215 = shufflevector <4 x i32> %214, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %216 = mul <4 x i32> %214, %215
  %217 = shufflevector <4 x i32> %216, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %218 = mul <4 x i32> %216, %217
  %219 = extractelement <4 x i32> %218, i32 0
  %220 = icmp eq i64 %137, %134
  br i1 %220, label %232, label %221

221:                                              ; preds = %211, %132
  %222 = phi i64 [ 0, %132 ], [ %137, %211 ]
  %223 = phi i32 [ 1, %132 ], [ %219, %211 ]
  br label %224

224:                                              ; preds = %221, %224
  %225 = phi i64 [ %230, %224 ], [ %222, %221 ]
  %226 = phi i32 [ %229, %224 ], [ %223, %221 ]
  %227 = getelementptr inbounds i32, i32* %133, i64 %225
  %228 = load i32, i32* %227, align 4
  %229 = mul nsw i32 %228, %226
  %230 = add nuw nsw i64 %225, 1
  %231 = icmp eq i64 %230, %134
  br i1 %231, label %232, label %224, !llvm.loop !222

232:                                              ; preds = %224, %211, %129
  %233 = phi i32 [ 1, %129 ], [ %219, %211 ], [ %229, %224 ]
  %234 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %235 = load i32, i32* %234, align 8
  %236 = icmp sgt i32 %235, 5
  %237 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %236, label %238, label %241

238:                                              ; preds = %232
  %239 = getelementptr inbounds %union.anon, %union.anon* %237, i64 0, i32 0
  %240 = load i32*, i32** %239, align 8
  br label %244

241:                                              ; preds = %232
  %242 = bitcast %union.anon* %237 to i32*
  %243 = icmp sgt i32 %235, 0
  br i1 %243, label %244, label %344

244:                                              ; preds = %241, %238
  %245 = phi i32* [ %240, %238 ], [ %242, %241 ]
  %246 = zext i32 %235 to i64
  %247 = icmp ult i32 %235, 8
  br i1 %247, label %333, label %248

248:                                              ; preds = %244
  %249 = and i64 %246, 4294967288
  %250 = add nsw i64 %249, -8
  %251 = lshr exact i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 3
  %254 = icmp ult i64 %250, 24
  br i1 %254, label %300, label %255

255:                                              ; preds = %248
  %256 = sub nsw i64 %252, %253
  br label %257

257:                                              ; preds = %257, %255
  %258 = phi i64 [ 0, %255 ], [ %297, %257 ]
  %259 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %255 ], [ %295, %257 ]
  %260 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %255 ], [ %296, %257 ]
  %261 = phi i64 [ %256, %255 ], [ %298, %257 ]
  %262 = getelementptr inbounds i32, i32* %245, i64 %258
  %263 = bitcast i32* %262 to <4 x i32>*
  %264 = load <4 x i32>, <4 x i32>* %263, align 4
  %265 = getelementptr inbounds i32, i32* %262, i64 4
  %266 = bitcast i32* %265 to <4 x i32>*
  %267 = load <4 x i32>, <4 x i32>* %266, align 4
  %268 = mul nsw <4 x i32> %264, %259
  %269 = mul nsw <4 x i32> %267, %260
  %270 = or i64 %258, 8
  %271 = getelementptr inbounds i32, i32* %245, i64 %270
  %272 = bitcast i32* %271 to <4 x i32>*
  %273 = load <4 x i32>, <4 x i32>* %272, align 4
  %274 = getelementptr inbounds i32, i32* %271, i64 4
  %275 = bitcast i32* %274 to <4 x i32>*
  %276 = load <4 x i32>, <4 x i32>* %275, align 4
  %277 = mul nsw <4 x i32> %273, %268
  %278 = mul nsw <4 x i32> %276, %269
  %279 = or i64 %258, 16
  %280 = getelementptr inbounds i32, i32* %245, i64 %279
  %281 = bitcast i32* %280 to <4 x i32>*
  %282 = load <4 x i32>, <4 x i32>* %281, align 4
  %283 = getelementptr inbounds i32, i32* %280, i64 4
  %284 = bitcast i32* %283 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4
  %286 = mul nsw <4 x i32> %282, %277
  %287 = mul nsw <4 x i32> %285, %278
  %288 = or i64 %258, 24
  %289 = getelementptr inbounds i32, i32* %245, i64 %288
  %290 = bitcast i32* %289 to <4 x i32>*
  %291 = load <4 x i32>, <4 x i32>* %290, align 4
  %292 = getelementptr inbounds i32, i32* %289, i64 4
  %293 = bitcast i32* %292 to <4 x i32>*
  %294 = load <4 x i32>, <4 x i32>* %293, align 4
  %295 = mul nsw <4 x i32> %291, %286
  %296 = mul nsw <4 x i32> %294, %287
  %297 = add i64 %258, 32
  %298 = add i64 %261, -4
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %257, !llvm.loop !223

300:                                              ; preds = %257, %248
  %301 = phi <4 x i32> [ undef, %248 ], [ %295, %257 ]
  %302 = phi <4 x i32> [ undef, %248 ], [ %296, %257 ]
  %303 = phi i64 [ 0, %248 ], [ %297, %257 ]
  %304 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %248 ], [ %295, %257 ]
  %305 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %248 ], [ %296, %257 ]
  %306 = icmp eq i64 %253, 0
  br i1 %306, label %323, label %307

307:                                              ; preds = %300, %307
  %308 = phi i64 [ %320, %307 ], [ %303, %300 ]
  %309 = phi <4 x i32> [ %318, %307 ], [ %304, %300 ]
  %310 = phi <4 x i32> [ %319, %307 ], [ %305, %300 ]
  %311 = phi i64 [ %321, %307 ], [ %253, %300 ]
  %312 = getelementptr inbounds i32, i32* %245, i64 %308
  %313 = bitcast i32* %312 to <4 x i32>*
  %314 = load <4 x i32>, <4 x i32>* %313, align 4
  %315 = getelementptr inbounds i32, i32* %312, i64 4
  %316 = bitcast i32* %315 to <4 x i32>*
  %317 = load <4 x i32>, <4 x i32>* %316, align 4
  %318 = mul nsw <4 x i32> %314, %309
  %319 = mul nsw <4 x i32> %317, %310
  %320 = add i64 %308, 8
  %321 = add i64 %311, -1
  %322 = icmp eq i64 %321, 0
  br i1 %322, label %323, label %307, !llvm.loop !224

323:                                              ; preds = %307, %300
  %324 = phi <4 x i32> [ %301, %300 ], [ %318, %307 ]
  %325 = phi <4 x i32> [ %302, %300 ], [ %319, %307 ]
  %326 = mul <4 x i32> %325, %324
  %327 = shufflevector <4 x i32> %326, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %328 = mul <4 x i32> %326, %327
  %329 = shufflevector <4 x i32> %328, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %330 = mul <4 x i32> %328, %329
  %331 = extractelement <4 x i32> %330, i32 0
  %332 = icmp eq i64 %249, %246
  br i1 %332, label %344, label %333

333:                                              ; preds = %323, %244
  %334 = phi i64 [ 0, %244 ], [ %249, %323 ]
  %335 = phi i32 [ 1, %244 ], [ %331, %323 ]
  br label %336

336:                                              ; preds = %333, %336
  %337 = phi i64 [ %342, %336 ], [ %334, %333 ]
  %338 = phi i32 [ %341, %336 ], [ %335, %333 ]
  %339 = getelementptr inbounds i32, i32* %245, i64 %337
  %340 = load i32, i32* %339, align 4
  %341 = mul nsw i32 %340, %338
  %342 = add nuw nsw i64 %337, 1
  %343 = icmp eq i64 %342, %246
  br i1 %343, label %344, label %336, !llvm.loop !225

344:                                              ; preds = %336, %323, %241
  %345 = phi i32 [ 1, %241 ], [ %331, %323 ], [ %341, %336 ]
  %346 = icmp eq i32 %121, %233
  br i1 %346, label %348, label %347

347:                                              ; preds = %344
  tail call void @abort() #12
  unreachable

348:                                              ; preds = %344
  %349 = icmp eq i32 %121, %345
  br i1 %349, label %351, label %350

350:                                              ; preds = %348
  tail call void @abort() #12
  unreachable

351:                                              ; preds = %348
  %352 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 11
  %353 = load i32, i32* %352, align 4
  %354 = trunc i32 %353 to i16
  %355 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 12
  %356 = load i32, i32* %355, align 4
  %357 = trunc i32 %356 to i16
  %358 = icmp eq i32 %9, 0
  %359 = select i1 %358, i16* %2, i16* %4
  %360 = select i1 %358, i16* %4, i16* %2
  %361 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %0, i64 0, i32 10
  %362 = load i32, i32* %361, align 4
  %363 = select i1 %358, i32 %362, i32 %9
  %364 = sub nsw i32 0, %363
  %365 = icmp sgt i32 %121, 0
  br i1 %358, label %435, label %366

366:                                              ; preds = %351
  br i1 %365, label %367, label %564

367:                                              ; preds = %366
  %368 = zext i32 %364 to i64
  %369 = shl nsw i64 -1, %368
  %370 = trunc i64 %369 to i16
  %371 = xor i16 %370, -1
  %372 = ashr i16 %371, 1
  %373 = zext i32 %121 to i64
  %374 = icmp ult i32 %121, 8
  br i1 %374, label %375, label %377

375:                                              ; preds = %433, %377, %367
  %376 = phi i64 [ 0, %377 ], [ 0, %367 ], [ %389, %433 ]
  br label %534

377:                                              ; preds = %367
  %378 = getelementptr i16, i16* %6, i64 %373
  %379 = getelementptr i16, i16* %360, i64 %373
  %380 = getelementptr i16, i16* %359, i64 %373
  %381 = icmp ugt i16* %379, %6
  %382 = icmp ult i16* %360, %378
  %383 = and i1 %381, %382
  %384 = icmp ugt i16* %380, %6
  %385 = icmp ult i16* %359, %378
  %386 = and i1 %384, %385
  %387 = or i1 %383, %386
  br i1 %387, label %375, label %388

388:                                              ; preds = %377
  %389 = and i64 %373, 4294967288
  %390 = insertelement <8 x i16> undef, i16 %371, i32 0
  %391 = shufflevector <8 x i16> %390, <8 x i16> undef, <8 x i32> zeroinitializer
  %392 = insertelement <8 x i16> undef, i16 %372, i32 0
  %393 = shufflevector <8 x i16> %392, <8 x i16> undef, <8 x i32> zeroinitializer
  %394 = insertelement <8 x i32> undef, i32 %364, i32 0
  %395 = shufflevector <8 x i32> %394, <8 x i32> undef, <8 x i32> zeroinitializer
  %396 = insertelement <8 x i16> undef, i16 %354, i32 0
  %397 = shufflevector <8 x i16> %396, <8 x i16> undef, <8 x i32> zeroinitializer
  %398 = insertelement <8 x i16> undef, i16 %357, i32 0
  %399 = shufflevector <8 x i16> %398, <8 x i16> undef, <8 x i32> zeroinitializer
  br label %400

400:                                              ; preds = %400, %388
  %401 = phi i64 [ 0, %388 ], [ %431, %400 ]
  %402 = getelementptr inbounds i16, i16* %359, i64 %401
  %403 = bitcast i16* %402 to <8 x i16>*
  %404 = load <8 x i16>, <8 x i16>* %403, align 2, !alias.scope !226
  %405 = getelementptr inbounds i16, i16* %360, i64 %401
  %406 = bitcast i16* %405 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !229
  %408 = and <8 x i16> %407, %391
  %409 = lshr <8 x i16> %407, <i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15>
  %410 = add nsw <8 x i16> %409, %393
  %411 = sext <8 x i16> %407 to <8 x i32>
  %412 = ashr <8 x i32> %411, %395
  %413 = icmp sgt <8 x i16> %408, %410
  %414 = zext <8 x i1> %413 to <8 x i32>
  %415 = add nsw <8 x i32> %412, %414
  %416 = shl <8 x i32> %415, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %417 = ashr exact <8 x i32> %416, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %418 = sext <8 x i16> %404 to <8 x i32>
  %419 = sub nsw <8 x i32> %417, %418
  %420 = icmp sgt <8 x i32> %419, <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>
  %421 = select <8 x i1> %420, <8 x i32> %419, <8 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>
  %422 = icmp slt <8 x i32> %421, <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>
  %423 = select <8 x i1> %422, <8 x i32> %421, <8 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>
  %424 = trunc <8 x i32> %423 to <8 x i16>
  %425 = icmp slt <8 x i16> %397, %424
  %426 = select <8 x i1> %425, <8 x i16> %424, <8 x i16> %397
  %427 = icmp slt <8 x i16> %426, %399
  %428 = select <8 x i1> %427, <8 x i16> %426, <8 x i16> %399
  %429 = getelementptr inbounds i16, i16* %6, i64 %401
  %430 = bitcast i16* %429 to <8 x i16>*
  store <8 x i16> %428, <8 x i16>* %430, align 2, !alias.scope !231, !noalias !233
  %431 = add i64 %401, 8
  %432 = icmp eq i64 %431, %389
  br i1 %432, label %433, label %400, !llvm.loop !234

433:                                              ; preds = %400
  %434 = icmp eq i64 %389, %373
  br i1 %434, label %564, label %375

435:                                              ; preds = %351
  br i1 %365, label %436, label %564

436:                                              ; preds = %435
  %437 = zext i32 %364 to i64
  %438 = shl nsw i64 -1, %437
  %439 = trunc i64 %438 to i16
  %440 = xor i16 %439, -1
  %441 = ashr i16 %440, 1
  %442 = zext i32 %121 to i64
  %443 = icmp ult i32 %121, 8
  br i1 %443, label %502, label %444

444:                                              ; preds = %436
  %445 = getelementptr i16, i16* %6, i64 %442
  %446 = getelementptr i16, i16* %360, i64 %442
  %447 = getelementptr i16, i16* %359, i64 %442
  %448 = icmp ugt i16* %446, %6
  %449 = icmp ult i16* %360, %445
  %450 = and i1 %448, %449
  %451 = icmp ugt i16* %447, %6
  %452 = icmp ult i16* %359, %445
  %453 = and i1 %451, %452
  %454 = or i1 %450, %453
  br i1 %454, label %502, label %455

455:                                              ; preds = %444
  %456 = and i64 %442, 4294967288
  %457 = insertelement <8 x i16> undef, i16 %440, i32 0
  %458 = shufflevector <8 x i16> %457, <8 x i16> undef, <8 x i32> zeroinitializer
  %459 = insertelement <8 x i16> undef, i16 %441, i32 0
  %460 = shufflevector <8 x i16> %459, <8 x i16> undef, <8 x i32> zeroinitializer
  %461 = insertelement <8 x i32> undef, i32 %364, i32 0
  %462 = shufflevector <8 x i32> %461, <8 x i32> undef, <8 x i32> zeroinitializer
  %463 = insertelement <8 x i16> undef, i16 %354, i32 0
  %464 = shufflevector <8 x i16> %463, <8 x i16> undef, <8 x i32> zeroinitializer
  %465 = insertelement <8 x i16> undef, i16 %357, i32 0
  %466 = shufflevector <8 x i16> %465, <8 x i16> undef, <8 x i32> zeroinitializer
  br label %467

467:                                              ; preds = %467, %455
  %468 = phi i64 [ 0, %455 ], [ %498, %467 ]
  %469 = getelementptr inbounds i16, i16* %359, i64 %468
  %470 = bitcast i16* %469 to <8 x i16>*
  %471 = load <8 x i16>, <8 x i16>* %470, align 2, !alias.scope !235
  %472 = getelementptr inbounds i16, i16* %360, i64 %468
  %473 = bitcast i16* %472 to <8 x i16>*
  %474 = load <8 x i16>, <8 x i16>* %473, align 2, !alias.scope !238
  %475 = and <8 x i16> %474, %458
  %476 = lshr <8 x i16> %474, <i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15, i16 15>
  %477 = add nsw <8 x i16> %476, %460
  %478 = sext <8 x i16> %474 to <8 x i32>
  %479 = ashr <8 x i32> %478, %462
  %480 = icmp sgt <8 x i16> %475, %477
  %481 = zext <8 x i1> %480 to <8 x i32>
  %482 = add nsw <8 x i32> %479, %481
  %483 = sext <8 x i16> %471 to <8 x i32>
  %484 = shl <8 x i32> %482, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %485 = ashr exact <8 x i32> %484, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %486 = sub nsw <8 x i32> %483, %485
  %487 = icmp sgt <8 x i32> %486, <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>
  %488 = select <8 x i1> %487, <8 x i32> %486, <8 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>
  %489 = icmp slt <8 x i32> %488, <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>
  %490 = select <8 x i1> %489, <8 x i32> %488, <8 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>
  %491 = trunc <8 x i32> %490 to <8 x i16>
  %492 = icmp slt <8 x i16> %464, %491
  %493 = select <8 x i1> %492, <8 x i16> %491, <8 x i16> %464
  %494 = icmp slt <8 x i16> %493, %466
  %495 = select <8 x i1> %494, <8 x i16> %493, <8 x i16> %466
  %496 = getelementptr inbounds i16, i16* %6, i64 %468
  %497 = bitcast i16* %496 to <8 x i16>*
  store <8 x i16> %495, <8 x i16>* %497, align 2, !alias.scope !240, !noalias !242
  %498 = add i64 %468, 8
  %499 = icmp eq i64 %498, %456
  br i1 %499, label %500, label %467, !llvm.loop !243

500:                                              ; preds = %467
  %501 = icmp eq i64 %456, %442
  br i1 %501, label %564, label %502

502:                                              ; preds = %500, %444, %436
  %503 = phi i64 [ 0, %444 ], [ 0, %436 ], [ %456, %500 ]
  br label %504

504:                                              ; preds = %502, %504
  %505 = phi i64 [ %532, %504 ], [ %503, %502 ]
  %506 = getelementptr inbounds i16, i16* %359, i64 %505
  %507 = load i16, i16* %506, align 2
  %508 = getelementptr inbounds i16, i16* %360, i64 %505
  %509 = load i16, i16* %508, align 2
  %510 = and i16 %509, %440
  %511 = lshr i16 %509, 15
  %512 = add nsw i16 %511, %441
  %513 = sext i16 %509 to i32
  %514 = ashr i32 %513, %364
  %515 = icmp sgt i16 %510, %512
  %516 = zext i1 %515 to i32
  %517 = add nsw i32 %514, %516
  %518 = sext i16 %507 to i32
  %519 = shl i32 %517, 16
  %520 = ashr exact i32 %519, 16
  %521 = sub nsw i32 %518, %520
  %522 = icmp sgt i32 %521, -32768
  %523 = select i1 %522, i32 %521, i32 -32768
  %524 = icmp slt i32 %523, 32767
  %525 = select i1 %524, i32 %523, i32 32767
  %526 = trunc i32 %525 to i16
  %527 = icmp slt i16 %354, %526
  %528 = select i1 %527, i16 %526, i16 %354
  %529 = icmp slt i16 %528, %357
  %530 = select i1 %529, i16 %528, i16 %357
  %531 = getelementptr inbounds i16, i16* %6, i64 %505
  store i16 %530, i16* %531, align 2
  %532 = add nuw nsw i64 %505, 1
  %533 = icmp eq i64 %532, %442
  br i1 %533, label %564, label %504, !llvm.loop !244

534:                                              ; preds = %375, %534
  %535 = phi i64 [ %562, %534 ], [ %376, %375 ]
  %536 = getelementptr inbounds i16, i16* %359, i64 %535
  %537 = load i16, i16* %536, align 2
  %538 = getelementptr inbounds i16, i16* %360, i64 %535
  %539 = load i16, i16* %538, align 2
  %540 = and i16 %539, %371
  %541 = lshr i16 %539, 15
  %542 = add nsw i16 %541, %372
  %543 = sext i16 %539 to i32
  %544 = ashr i32 %543, %364
  %545 = icmp sgt i16 %540, %542
  %546 = zext i1 %545 to i32
  %547 = add nsw i32 %544, %546
  %548 = shl i32 %547, 16
  %549 = ashr exact i32 %548, 16
  %550 = sext i16 %537 to i32
  %551 = sub nsw i32 %549, %550
  %552 = icmp sgt i32 %551, -32768
  %553 = select i1 %552, i32 %551, i32 -32768
  %554 = icmp slt i32 %553, 32767
  %555 = select i1 %554, i32 %553, i32 32767
  %556 = trunc i32 %555 to i16
  %557 = icmp slt i16 %354, %556
  %558 = select i1 %557, i16 %556, i16 %354
  %559 = icmp slt i16 %558, %357
  %560 = select i1 %559, i16 %558, i16 %357
  %561 = getelementptr inbounds i16, i16* %6, i64 %535
  store i16 %560, i16* %561, align 2
  %562 = add nuw nsw i64 %535, 1
  %563 = icmp eq i64 %562, %373
  br i1 %563, label %564, label %534, !llvm.loop !245

564:                                              ; preds = %534, %504, %433, %500, %366, %435
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"struct.tflite::NdArrayDesc.3"*, %"struct.tflite::NdArrayDesc.3"*) local_unnamed_addr #7 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %8, align 8, !alias.scope !246
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8, !noalias !246
  %11 = icmp sgt i32 %10, 4
  br i1 %11, label %12, label %13

12:                                               ; preds = %4
  tail call void @abort() #12, !noalias !246
  unreachable

13:                                               ; preds = %4
  store i32 4, i32* %8, align 8, !alias.scope !246
  %14 = sub i32 4, %10
  %15 = icmp sgt i32 %14, 0
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %15, label %17, label %97

17:                                               ; preds = %13
  %18 = bitcast %union.anon* %16 to [5 x i32]*
  %19 = zext i32 %14 to i64
  %20 = icmp ult i32 %14, 8
  br i1 %20, label %90, label %21

21:                                               ; preds = %17
  %22 = and i64 %19, 4294967288
  %23 = add nsw i64 %22, -8
  %24 = lshr exact i64 %23, 3
  %25 = add nuw nsw i64 %24, 1
  %26 = and i64 %25, 7
  %27 = icmp ult i64 %23, 56
  br i1 %27, label %75, label %28

28:                                               ; preds = %21
  %29 = sub nsw i64 %25, %26
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %72, %30 ]
  %32 = phi i64 [ %29, %28 ], [ %73, %30 ]
  %33 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %31
  %34 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %34, align 8, !alias.scope !246
  %35 = getelementptr inbounds i32, i32* %33, i64 4
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !246
  %37 = or i64 %31, 8
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %37
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %39, align 8, !alias.scope !246
  %40 = getelementptr inbounds i32, i32* %38, i64 4
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !246
  %42 = or i64 %31, 16
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !246
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !246
  %47 = or i64 %31, 24
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !246
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !246
  %52 = or i64 %31, 32
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !246
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !246
  %57 = or i64 %31, 40
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !246
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !246
  %62 = or i64 %31, 48
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !246
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !246
  %67 = or i64 %31, 56
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !246
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !246
  %72 = add i64 %31, 64
  %73 = add i64 %32, -8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %30, !llvm.loop !249

75:                                               ; preds = %30, %21
  %76 = phi i64 [ 0, %21 ], [ %72, %30 ]
  %77 = icmp eq i64 %26, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %75, %78
  %79 = phi i64 [ %85, %78 ], [ %76, %75 ]
  %80 = phi i64 [ %86, %78 ], [ %26, %75 ]
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %79
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !246
  %83 = getelementptr inbounds i32, i32* %81, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !246
  %85 = add i64 %79, 8
  %86 = add i64 %80, -1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %78, !llvm.loop !250

88:                                               ; preds = %78, %75
  %89 = icmp eq i64 %22, %19
  br i1 %89, label %97, label %90

90:                                               ; preds = %88, %17
  %91 = phi i64 [ 0, %17 ], [ %22, %88 ]
  br label %92

92:                                               ; preds = %90, %92
  %93 = phi i64 [ %95, %92 ], [ %91, %90 ]
  %94 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %93
  store i32 1, i32* %94, align 4, !alias.scope !246
  %95 = add nuw nsw i64 %93, 1
  %96 = icmp eq i64 %95, %19
  br i1 %96, label %97, label %92, !llvm.loop !251

97:                                               ; preds = %92, %88, %13
  %98 = getelementptr inbounds %union.anon, %union.anon* %16, i64 0, i32 0
  %99 = bitcast %union.anon* %16 to i32*
  %100 = sext i32 %14 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = bitcast i32* %101 to i8*
  %103 = icmp sgt i32 %10, 5
  %104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %105 = getelementptr inbounds %union.anon, %union.anon* %104, i64 0, i32 0
  %106 = load i32*, i32** %105, align 8, !noalias !246
  %107 = bitcast %union.anon* %104 to i32*
  %108 = select i1 %103, i32* %106, i32* %107
  %109 = bitcast i32* %108 to i8*
  %110 = sext i32 %10 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %109, i64 %111, i1 false) #11
  %112 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %112) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 32, i1 false)
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %113, align 8, !alias.scope !252
  %114 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %115 = load i32, i32* %114, align 8, !noalias !252
  %116 = icmp sgt i32 %115, 4
  br i1 %116, label %117, label %118

117:                                              ; preds = %97
  tail call void @abort() #12, !noalias !252
  unreachable

118:                                              ; preds = %97
  store i32 4, i32* %113, align 8, !alias.scope !252
  %119 = sub i32 4, %115
  %120 = icmp sgt i32 %119, 0
  %121 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %122 = bitcast %union.anon* %121 to [5 x i32]*
  br i1 %120, label %123, label %202

123:                                              ; preds = %118
  %124 = zext i32 %119 to i64
  %125 = icmp ult i32 %119, 8
  br i1 %125, label %195, label %126

126:                                              ; preds = %123
  %127 = and i64 %124, 4294967288
  %128 = add nsw i64 %127, -8
  %129 = lshr exact i64 %128, 3
  %130 = add nuw nsw i64 %129, 1
  %131 = and i64 %130, 7
  %132 = icmp ult i64 %128, 56
  br i1 %132, label %180, label %133

133:                                              ; preds = %126
  %134 = sub nsw i64 %130, %131
  br label %135

135:                                              ; preds = %135, %133
  %136 = phi i64 [ 0, %133 ], [ %177, %135 ]
  %137 = phi i64 [ %134, %133 ], [ %178, %135 ]
  %138 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %136
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %139, align 8, !alias.scope !252
  %140 = getelementptr inbounds i32, i32* %138, i64 4
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %141, align 8, !alias.scope !252
  %142 = or i64 %136, 8
  %143 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %142
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %144, align 8, !alias.scope !252
  %145 = getelementptr inbounds i32, i32* %143, i64 4
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !252
  %147 = or i64 %136, 16
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %147
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %149, align 8, !alias.scope !252
  %150 = getelementptr inbounds i32, i32* %148, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !252
  %152 = or i64 %136, 24
  %153 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %152
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %154, align 8, !alias.scope !252
  %155 = getelementptr inbounds i32, i32* %153, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !252
  %157 = or i64 %136, 32
  %158 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %157
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %159, align 8, !alias.scope !252
  %160 = getelementptr inbounds i32, i32* %158, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !252
  %162 = or i64 %136, 40
  %163 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %164, align 8, !alias.scope !252
  %165 = getelementptr inbounds i32, i32* %163, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !252
  %167 = or i64 %136, 48
  %168 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %167
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %169, align 8, !alias.scope !252
  %170 = getelementptr inbounds i32, i32* %168, i64 4
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !252
  %172 = or i64 %136, 56
  %173 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %172
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %174, align 8, !alias.scope !252
  %175 = getelementptr inbounds i32, i32* %173, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %176, align 8, !alias.scope !252
  %177 = add i64 %136, 64
  %178 = add i64 %137, -8
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %135, !llvm.loop !255

180:                                              ; preds = %135, %126
  %181 = phi i64 [ 0, %126 ], [ %177, %135 ]
  %182 = icmp eq i64 %131, 0
  br i1 %182, label %193, label %183

183:                                              ; preds = %180, %183
  %184 = phi i64 [ %190, %183 ], [ %181, %180 ]
  %185 = phi i64 [ %191, %183 ], [ %131, %180 ]
  %186 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %184
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %187, align 8, !alias.scope !252
  %188 = getelementptr inbounds i32, i32* %186, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %189, align 8, !alias.scope !252
  %190 = add i64 %184, 8
  %191 = add i64 %185, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %183, !llvm.loop !256

193:                                              ; preds = %183, %180
  %194 = icmp eq i64 %127, %124
  br i1 %194, label %202, label %195

195:                                              ; preds = %193, %123
  %196 = phi i64 [ 0, %123 ], [ %127, %193 ]
  br label %197

197:                                              ; preds = %195, %197
  %198 = phi i64 [ %200, %197 ], [ %196, %195 ]
  %199 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %198
  store i32 1, i32* %199, align 4, !alias.scope !252
  %200 = add nuw nsw i64 %198, 1
  %201 = icmp eq i64 %200, %124
  br i1 %201, label %202, label %197, !llvm.loop !257

202:                                              ; preds = %197, %193, %118
  %203 = getelementptr inbounds %union.anon, %union.anon* %121, i64 0, i32 0
  %204 = bitcast %union.anon* %121 to i32*
  %205 = sext i32 %119 to i64
  %206 = getelementptr inbounds i32, i32* %204, i64 %205
  %207 = bitcast i32* %206 to i8*
  %208 = icmp sgt i32 %115, 5
  %209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %210 = getelementptr inbounds %union.anon, %union.anon* %209, i64 0, i32 0
  %211 = load i32*, i32** %210, align 8, !noalias !252
  %212 = bitcast %union.anon* %209 to i32*
  %213 = select i1 %208, i32* %211, i32* %212
  %214 = bitcast i32* %213 to i8*
  %215 = sext i32 %115 to i64
  %216 = shl nsw i64 %215, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %207, i8* align 4 %214, i64 %216, i1 false) #11
  %217 = bitcast %union.anon* %16 to [5 x i32]*
  %218 = load i32, i32* %8, align 8
  %219 = icmp sgt i32 %218, 5
  %220 = load i32*, i32** %98, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 3
  %222 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %223 = bitcast i8* %222 to i32*
  %224 = select i1 %219, i32* %221, i32* %223
  %225 = load i32, i32* %224, align 4
  %226 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %2, i64 0, i32 0, i64 3
  store i32 %225, i32* %226, align 4
  %227 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %2, i64 0, i32 1, i64 3
  store i32 1, i32* %227, align 4
  %228 = load i32, i32* %224, align 4
  %229 = getelementptr inbounds i32, i32* %220, i64 2
  %230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %231 = bitcast [16 x i8]* %230 to i32*
  %232 = select i1 %219, i32* %229, i32* %231
  %233 = load i32, i32* %232, align 4
  %234 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %2, i64 0, i32 0, i64 2
  store i32 %233, i32* %234, align 4
  %235 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %2, i64 0, i32 1, i64 2
  store i32 %228, i32* %235, align 4
  %236 = load i32, i32* %232, align 4
  %237 = mul nsw i32 %236, %228
  %238 = getelementptr inbounds i32, i32* %220, i64 1
  %239 = getelementptr inbounds [5 x i32], [5 x i32]* %217, i64 0, i64 1
  %240 = select i1 %219, i32* %238, i32* %239
  %241 = load i32, i32* %240, align 4
  %242 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %2, i64 0, i32 0, i64 1
  store i32 %241, i32* %242, align 4
  %243 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %2, i64 0, i32 1, i64 1
  store i32 %237, i32* %243, align 4
  %244 = load i32, i32* %240, align 4
  %245 = mul nsw i32 %244, %237
  %246 = select i1 %219, i32* %220, i32* %99
  %247 = load i32, i32* %246, align 4
  %248 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %2, i64 0, i32 0, i64 0
  store i32 %247, i32* %248, align 4
  %249 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %2, i64 0, i32 1, i64 0
  store i32 %245, i32* %249, align 4
  %250 = load i32, i32* %113, align 8
  %251 = icmp sgt i32 %250, 5
  %252 = load i32*, i32** %203, align 8
  %253 = getelementptr inbounds i32, i32* %252, i64 3
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %255 = bitcast i8* %254 to i32*
  %256 = select i1 %251, i32* %253, i32* %255
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %3, i64 0, i32 0, i64 3
  store i32 %257, i32* %258, align 4
  %259 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %3, i64 0, i32 1, i64 3
  store i32 1, i32* %259, align 4
  %260 = load i32, i32* %256, align 4
  %261 = getelementptr inbounds i32, i32* %252, i64 2
  %262 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %263 = bitcast [16 x i8]* %262 to i32*
  %264 = select i1 %251, i32* %261, i32* %263
  %265 = load i32, i32* %264, align 4
  %266 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %3, i64 0, i32 0, i64 2
  store i32 %265, i32* %266, align 4
  %267 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %3, i64 0, i32 1, i64 2
  store i32 %260, i32* %267, align 4
  %268 = load i32, i32* %264, align 4
  %269 = mul nsw i32 %268, %260
  %270 = getelementptr inbounds i32, i32* %252, i64 1
  %271 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 1
  %272 = select i1 %251, i32* %270, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %3, i64 0, i32 0, i64 1
  store i32 %273, i32* %274, align 4
  %275 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %3, i64 0, i32 1, i64 1
  store i32 %269, i32* %275, align 4
  %276 = load i32, i32* %272, align 4
  %277 = mul nsw i32 %276, %269
  %278 = select i1 %251, i32* %252, i32* %204
  %279 = load i32, i32* %278, align 4
  %280 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %3, i64 0, i32 0, i64 0
  store i32 %279, i32* %280, align 4
  %281 = getelementptr inbounds %"struct.tflite::NdArrayDesc.3", %"struct.tflite::NdArrayDesc.3"* %3, i64 0, i32 1, i64 0
  store i32 %277, i32* %281, align 4
  %282 = bitcast %union.anon* %16 to i32*
  %283 = select i1 %219, i32* %220, i32* %282
  %284 = load i32, i32* %283, align 4
  %285 = bitcast %union.anon* %121 to i32*
  %286 = select i1 %251, i32* %252, i32* %285
  %287 = load i32, i32* %286, align 4
  %288 = icmp eq i32 %284, %287
  br i1 %288, label %302, label %298

289:                                              ; preds = %338
  %290 = bitcast i32* %252 to i8*
  tail call void @_ZdaPv(i8* %290) #10
  br label %291

291:                                              ; preds = %338, %289
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %112) #11
  %292 = xor i1 %219, true
  %293 = icmp eq i32* %220, null
  %294 = or i1 %293, %292
  br i1 %294, label %297, label %295

295:                                              ; preds = %291
  %296 = bitcast i32* %220 to i8*
  tail call void @_ZdaPv(i8* %296) #10
  br label %297

297:                                              ; preds = %291, %295
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #11
  ret void

298:                                              ; preds = %202
  %299 = icmp eq i32 %284, 1
  br i1 %299, label %300, label %301

300:                                              ; preds = %298
  store i32 0, i32* %249, align 4
  store i32 %287, i32* %248, align 4
  br label %302

301:                                              ; preds = %298
  store i32 0, i32* %281, align 4
  store i32 %284, i32* %280, align 4
  br label %302

302:                                              ; preds = %202, %300, %301
  %303 = load i32, i32* %240, align 4
  %304 = load i32, i32* %272, align 4
  %305 = icmp eq i32 %303, %304
  br i1 %305, label %310, label %306

306:                                              ; preds = %302
  %307 = icmp eq i32 %303, 1
  br i1 %307, label %309, label %308

308:                                              ; preds = %306
  store i32 0, i32* %275, align 4
  store i32 %303, i32* %274, align 4
  br label %310

309:                                              ; preds = %306
  store i32 0, i32* %243, align 4
  store i32 %304, i32* %242, align 4
  br label %310

310:                                              ; preds = %309, %308, %302
  %311 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %312 = bitcast [16 x i8]* %311 to i32*
  %313 = select i1 %219, i32* %229, i32* %312
  %314 = load i32, i32* %313, align 4
  %315 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %316 = bitcast [16 x i8]* %315 to i32*
  %317 = select i1 %251, i32* %261, i32* %316
  %318 = load i32, i32* %317, align 4
  %319 = icmp eq i32 %314, %318
  br i1 %319, label %324, label %320

320:                                              ; preds = %310
  %321 = icmp eq i32 %314, 1
  br i1 %321, label %323, label %322

322:                                              ; preds = %320
  store i32 0, i32* %267, align 4
  store i32 %314, i32* %266, align 4
  br label %324

323:                                              ; preds = %320
  store i32 0, i32* %235, align 4
  store i32 %318, i32* %234, align 4
  br label %324

324:                                              ; preds = %323, %322, %310
  %325 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %326 = bitcast i8* %325 to i32*
  %327 = select i1 %219, i32* %221, i32* %326
  %328 = load i32, i32* %327, align 4
  %329 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %330 = bitcast i8* %329 to i32*
  %331 = select i1 %251, i32* %253, i32* %330
  %332 = load i32, i32* %331, align 4
  %333 = icmp eq i32 %328, %332
  br i1 %333, label %338, label %334

334:                                              ; preds = %324
  %335 = icmp eq i32 %328, 1
  br i1 %335, label %337, label %336

336:                                              ; preds = %334
  store i32 0, i32* %259, align 4
  store i32 %328, i32* %258, align 4
  br label %338

337:                                              ; preds = %334
  store i32 0, i32* %227, align 4
  store i32 %332, i32* %226, align 4
  br label %338

338:                                              ; preds = %337, %336, %324
  %339 = xor i1 %251, true
  %340 = icmp eq i32* %252, null
  %341 = or i1 %340, %339
  br i1 %341, label %291, label %289
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite21reference_integer_ops14AddElementwiseEiRKNS_16ArithmeticParamsEPKaS5_Pa(i32, %"struct.tflite::ArithmeticParams"* dereferenceable(80), i8*, i8*, i8*) local_unnamed_addr #7 comdat {
  %6 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 1
  %8 = icmp sgt i32 %0, 0
  br i1 %8, label %9, label %21

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 6
  %11 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 7
  %12 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 8
  %13 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 9
  %14 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 10
  %15 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 4
  %16 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 5
  %17 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 3
  %18 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 12
  %19 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 11
  %20 = zext i32 %0 to i64
  br label %22

21:                                               ; preds = %122, %5
  ret void

22:                                               ; preds = %122, %9
  %23 = phi i64 [ 0, %9 ], [ %147, %122 ]
  %24 = load i32, i32* %7, align 4
  %25 = getelementptr inbounds i8, i8* %2, i64 %23
  %26 = load i8, i8* %25, align 1
  %27 = sext i8 %26 to i32
  %28 = add nsw i32 %24, %27
  %29 = load i32, i32* %6, align 4
  %30 = getelementptr inbounds i8, i8* %3, i64 %23
  %31 = load i8, i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = add nsw i32 %29, %32
  %34 = load i32, i32* %10, align 4
  %35 = shl i32 %28, %34
  %36 = shl i32 %33, %34
  %37 = load i32, i32* %11, align 4
  %38 = load i32, i32* %12, align 4
  %39 = icmp eq i32 %35, %37
  br i1 %39, label %44, label %40

40:                                               ; preds = %22
  %41 = sext i32 %35 to i64
  %42 = sext i32 %37 to i64
  %43 = mul nsw i64 %42, %41
  br label %48

44:                                               ; preds = %22
  %45 = icmp eq i32 %35, -2147483648
  %46 = sext i32 %35 to i64
  %47 = mul nsw i64 %46, %46
  br i1 %45, label %55, label %48

48:                                               ; preds = %44, %40
  %49 = phi i64 [ %43, %40 ], [ %47, %44 ]
  %50 = icmp sgt i64 %49, -1
  %51 = select i1 %50, i64 1073741824, i64 -1073741823
  %52 = add nsw i64 %51, %49
  %53 = sdiv i64 %52, 2147483648
  %54 = trunc i64 %53 to i32
  br label %55

55:                                               ; preds = %44, %48
  %56 = phi i32 [ %54, %48 ], [ 2147483647, %44 ]
  %57 = sub nsw i32 0, %38
  %58 = zext i32 %57 to i64
  %59 = shl nsw i64 -1, %58
  %60 = trunc i64 %59 to i32
  %61 = xor i32 %60, -1
  %62 = and i32 %56, %61
  %63 = ashr i32 %61, 1
  %64 = lshr i32 %56, 31
  %65 = add nsw i32 %64, %63
  %66 = ashr i32 %56, %57
  %67 = icmp sgt i32 %62, %65
  %68 = zext i1 %67 to i32
  %69 = load i32, i32* %13, align 4
  %70 = load i32, i32* %14, align 4
  %71 = icmp eq i32 %36, %69
  br i1 %71, label %76, label %72

72:                                               ; preds = %55
  %73 = sext i32 %36 to i64
  %74 = sext i32 %69 to i64
  %75 = mul nsw i64 %74, %73
  br label %80

76:                                               ; preds = %55
  %77 = icmp eq i32 %36, -2147483648
  %78 = sext i32 %36 to i64
  %79 = mul nsw i64 %78, %78
  br i1 %77, label %87, label %80

80:                                               ; preds = %76, %72
  %81 = phi i64 [ %75, %72 ], [ %79, %76 ]
  %82 = icmp sgt i64 %81, -1
  %83 = select i1 %82, i64 1073741824, i64 -1073741823
  %84 = add nsw i64 %83, %81
  %85 = sdiv i64 %84, 2147483648
  %86 = trunc i64 %85 to i32
  br label %87

87:                                               ; preds = %76, %80
  %88 = phi i32 [ %86, %80 ], [ 2147483647, %76 ]
  %89 = sub nsw i32 0, %70
  %90 = zext i32 %89 to i64
  %91 = shl nsw i64 -1, %90
  %92 = trunc i64 %91 to i32
  %93 = xor i32 %92, -1
  %94 = and i32 %88, %93
  %95 = ashr i32 %93, 1
  %96 = lshr i32 %88, 31
  %97 = add nsw i32 %96, %95
  %98 = ashr i32 %88, %89
  %99 = icmp sgt i32 %94, %97
  %100 = zext i1 %99 to i32
  %101 = add i32 %66, %68
  %102 = add i32 %101, %98
  %103 = add i32 %102, %100
  %104 = load i32, i32* %15, align 4
  %105 = load i32, i32* %16, align 4
  %106 = icmp eq i32 %103, %104
  br i1 %106, label %111, label %107

107:                                              ; preds = %87
  %108 = sext i32 %103 to i64
  %109 = sext i32 %104 to i64
  %110 = mul nsw i64 %108, %109
  br label %115

111:                                              ; preds = %87
  %112 = icmp eq i32 %103, -2147483648
  %113 = sext i32 %103 to i64
  %114 = mul nsw i64 %113, %113
  br i1 %112, label %122, label %115

115:                                              ; preds = %111, %107
  %116 = phi i64 [ %110, %107 ], [ %114, %111 ]
  %117 = icmp sgt i64 %116, -1
  %118 = select i1 %117, i64 1073741824, i64 -1073741823
  %119 = add nsw i64 %118, %116
  %120 = sdiv i64 %119, 2147483648
  %121 = trunc i64 %120 to i32
  br label %122

122:                                              ; preds = %111, %115
  %123 = phi i32 [ %121, %115 ], [ 2147483647, %111 ]
  %124 = sub nsw i32 0, %105
  %125 = zext i32 %124 to i64
  %126 = shl nsw i64 -1, %125
  %127 = trunc i64 %126 to i32
  %128 = xor i32 %127, -1
  %129 = and i32 %123, %128
  %130 = ashr i32 %128, 1
  %131 = lshr i32 %123, 31
  %132 = add nsw i32 %131, %130
  %133 = ashr i32 %123, %124
  %134 = icmp sgt i32 %129, %132
  %135 = zext i1 %134 to i32
  %136 = load i32, i32* %17, align 4
  %137 = add i32 %136, %133
  %138 = add i32 %137, %135
  %139 = load i32, i32* %19, align 4
  %140 = icmp slt i32 %139, %138
  %141 = select i1 %140, i32 %138, i32 %139
  %142 = load i32, i32* %18, align 4
  %143 = icmp slt i32 %141, %142
  %144 = select i1 %143, i32 %141, i32 %142
  %145 = trunc i32 %144 to i8
  %146 = getelementptr inbounds i8, i8* %4, i64 %23
  store i8 %145, i8* %146, align 1
  %147 = add nuw nsw i64 %23, 1
  %148 = icmp eq i64 %147, %20
  br i1 %148, label %21, label %22
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops14AddElementwiseEiRKNS_16ArithmeticParamsEPKhS5_Ph(i32, %"struct.tflite::ArithmeticParams"* dereferenceable(80), i8*, i8*, i8*) local_unnamed_addr #7 comdat {
  %6 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 1
  %8 = icmp sgt i32 %0, 0
  br i1 %8, label %9, label %21

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 6
  %11 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 7
  %12 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 8
  %13 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 9
  %14 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 10
  %15 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 4
  %16 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 5
  %17 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 3
  %18 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 12
  %19 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 11
  %20 = zext i32 %0 to i64
  br label %22

21:                                               ; preds = %122, %5
  ret void

22:                                               ; preds = %122, %9
  %23 = phi i64 [ 0, %9 ], [ %147, %122 ]
  %24 = load i32, i32* %7, align 4
  %25 = getelementptr inbounds i8, i8* %2, i64 %23
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = add nsw i32 %24, %27
  %29 = load i32, i32* %6, align 4
  %30 = getelementptr inbounds i8, i8* %3, i64 %23
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = add nsw i32 %29, %32
  %34 = load i32, i32* %10, align 4
  %35 = shl i32 %28, %34
  %36 = shl i32 %33, %34
  %37 = load i32, i32* %11, align 4
  %38 = load i32, i32* %12, align 4
  %39 = icmp eq i32 %35, %37
  br i1 %39, label %44, label %40

40:                                               ; preds = %22
  %41 = sext i32 %35 to i64
  %42 = sext i32 %37 to i64
  %43 = mul nsw i64 %42, %41
  br label %48

44:                                               ; preds = %22
  %45 = icmp eq i32 %35, -2147483648
  %46 = sext i32 %35 to i64
  %47 = mul nsw i64 %46, %46
  br i1 %45, label %55, label %48

48:                                               ; preds = %44, %40
  %49 = phi i64 [ %43, %40 ], [ %47, %44 ]
  %50 = icmp sgt i64 %49, -1
  %51 = select i1 %50, i64 1073741824, i64 -1073741823
  %52 = add nsw i64 %51, %49
  %53 = sdiv i64 %52, 2147483648
  %54 = trunc i64 %53 to i32
  br label %55

55:                                               ; preds = %44, %48
  %56 = phi i32 [ %54, %48 ], [ 2147483647, %44 ]
  %57 = sub nsw i32 0, %38
  %58 = zext i32 %57 to i64
  %59 = shl nsw i64 -1, %58
  %60 = trunc i64 %59 to i32
  %61 = xor i32 %60, -1
  %62 = and i32 %56, %61
  %63 = ashr i32 %61, 1
  %64 = lshr i32 %56, 31
  %65 = add nsw i32 %64, %63
  %66 = ashr i32 %56, %57
  %67 = icmp sgt i32 %62, %65
  %68 = zext i1 %67 to i32
  %69 = load i32, i32* %13, align 4
  %70 = load i32, i32* %14, align 4
  %71 = icmp eq i32 %36, %69
  br i1 %71, label %76, label %72

72:                                               ; preds = %55
  %73 = sext i32 %36 to i64
  %74 = sext i32 %69 to i64
  %75 = mul nsw i64 %74, %73
  br label %80

76:                                               ; preds = %55
  %77 = icmp eq i32 %36, -2147483648
  %78 = sext i32 %36 to i64
  %79 = mul nsw i64 %78, %78
  br i1 %77, label %87, label %80

80:                                               ; preds = %76, %72
  %81 = phi i64 [ %75, %72 ], [ %79, %76 ]
  %82 = icmp sgt i64 %81, -1
  %83 = select i1 %82, i64 1073741824, i64 -1073741823
  %84 = add nsw i64 %83, %81
  %85 = sdiv i64 %84, 2147483648
  %86 = trunc i64 %85 to i32
  br label %87

87:                                               ; preds = %76, %80
  %88 = phi i32 [ %86, %80 ], [ 2147483647, %76 ]
  %89 = sub nsw i32 0, %70
  %90 = zext i32 %89 to i64
  %91 = shl nsw i64 -1, %90
  %92 = trunc i64 %91 to i32
  %93 = xor i32 %92, -1
  %94 = and i32 %88, %93
  %95 = ashr i32 %93, 1
  %96 = lshr i32 %88, 31
  %97 = add nsw i32 %96, %95
  %98 = ashr i32 %88, %89
  %99 = icmp sgt i32 %94, %97
  %100 = zext i1 %99 to i32
  %101 = add i32 %66, %68
  %102 = add i32 %101, %98
  %103 = add i32 %102, %100
  %104 = load i32, i32* %15, align 4
  %105 = load i32, i32* %16, align 4
  %106 = icmp eq i32 %103, %104
  br i1 %106, label %111, label %107

107:                                              ; preds = %87
  %108 = sext i32 %103 to i64
  %109 = sext i32 %104 to i64
  %110 = mul nsw i64 %108, %109
  br label %115

111:                                              ; preds = %87
  %112 = icmp eq i32 %103, -2147483648
  %113 = sext i32 %103 to i64
  %114 = mul nsw i64 %113, %113
  br i1 %112, label %122, label %115

115:                                              ; preds = %111, %107
  %116 = phi i64 [ %110, %107 ], [ %114, %111 ]
  %117 = icmp sgt i64 %116, -1
  %118 = select i1 %117, i64 1073741824, i64 -1073741823
  %119 = add nsw i64 %118, %116
  %120 = sdiv i64 %119, 2147483648
  %121 = trunc i64 %120 to i32
  br label %122

122:                                              ; preds = %111, %115
  %123 = phi i32 [ %121, %115 ], [ 2147483647, %111 ]
  %124 = sub nsw i32 0, %105
  %125 = zext i32 %124 to i64
  %126 = shl nsw i64 -1, %125
  %127 = trunc i64 %126 to i32
  %128 = xor i32 %127, -1
  %129 = and i32 %123, %128
  %130 = ashr i32 %128, 1
  %131 = lshr i32 %123, 31
  %132 = add nsw i32 %131, %130
  %133 = ashr i32 %123, %124
  %134 = icmp sgt i32 %129, %132
  %135 = zext i1 %134 to i32
  %136 = load i32, i32* %17, align 4
  %137 = add i32 %136, %133
  %138 = add i32 %137, %135
  %139 = load i32, i32* %19, align 4
  %140 = icmp slt i32 %139, %138
  %141 = select i1 %140, i32 %138, i32 %139
  %142 = load i32, i32* %18, align 4
  %143 = icmp slt i32 %141, %142
  %144 = select i1 %143, i32 %141, i32 %142
  %145 = trunc i32 %144 to i8
  %146 = getelementptr inbounds i8, i8* %4, i64 %23
  store i8 %145, i8* %146, align 1
  %147 = add nuw nsw i64 %23, 1
  %148 = icmp eq i64 %147, %20
  br i1 %148, label %21, label %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15NDOpsHelperImplILi5ELi0EZNS_13reference_ops16BroadcastSubSlowIsLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S8_SB_S8_PS9_EUlPiE_EENSt3__19enable_ifIXneT0_miT_Li1EEvE4typeERKNS_11NdArrayDescIXT_EEERKT1_SD_(%"struct.tflite::NdArrayDesc"* dereferenceable(40), %class.anon.4* dereferenceable(56), i32*) local_unnamed_addr #3 comdat {
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %166

7:                                                ; preds = %3
  %8 = getelementptr inbounds i32, i32* %2, i64 1
  %9 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 1
  %10 = getelementptr inbounds i32, i32* %2, i64 2
  %11 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 2
  %12 = getelementptr inbounds i32, i32* %2, i64 3
  %13 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 3
  %14 = getelementptr inbounds i32, i32* %2, i64 4
  %15 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %0, i64 0, i32 0, i64 4
  %16 = getelementptr inbounds %class.anon.4, %class.anon.4* %1, i64 0, i32 2
  %17 = getelementptr inbounds %class.anon.4, %class.anon.4* %1, i64 0, i32 3
  %18 = getelementptr inbounds %class.anon.4, %class.anon.4* %1, i64 0, i32 4
  %19 = getelementptr inbounds %class.anon.4, %class.anon.4* %1, i64 0, i32 5
  %20 = getelementptr inbounds %class.anon.4, %class.anon.4* %1, i64 0, i32 6
  %21 = getelementptr inbounds %class.anon.4, %class.anon.4* %1, i64 0, i32 0
  %22 = getelementptr inbounds %class.anon.4, %class.anon.4* %1, i64 0, i32 1
  br label %23

23:                                               ; preds = %7, %161
  %24 = phi i32 [ 0, %7 ], [ %163, %161 ]
  store i32 0, i32* %8, align 4
  %25 = load i32, i32* %9, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %161

27:                                               ; preds = %23, %154
  %28 = phi i32 [ %156, %154 ], [ 0, %23 ]
  store i32 0, i32* %10, align 4
  %29 = load i32, i32* %11, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %154

31:                                               ; preds = %27, %147
  %32 = phi i32 [ %149, %147 ], [ 0, %27 ]
  store i32 0, i32* %12, align 4
  %33 = load i32, i32* %13, align 4
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %147

35:                                               ; preds = %31, %140
  %36 = phi i32 [ %142, %140 ], [ 0, %31 ]
  store i32 0, i32* %14, align 4
  %37 = load i32, i32* %15, align 4
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %140

39:                                               ; preds = %35, %39
  %40 = phi i32 [ %136, %39 ], [ 0, %35 ]
  %41 = phi i32 [ %139, %39 ], [ %36, %35 ]
  %42 = load i16**, i16*** %16, align 8
  %43 = load i16*, i16** %42, align 8
  %44 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %17, align 8
  %45 = load i32, i32* %2, align 4
  %46 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %44, i64 0, i32 1, i64 0
  %47 = load i32, i32* %46, align 4
  %48 = mul nsw i32 %47, %45
  %49 = load i32, i32* %8, align 4
  %50 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %44, i64 0, i32 1, i64 1
  %51 = load i32, i32* %50, align 4
  %52 = mul nsw i32 %51, %49
  %53 = add nsw i32 %52, %48
  %54 = load i32, i32* %10, align 4
  %55 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %44, i64 0, i32 1, i64 2
  %56 = load i32, i32* %55, align 4
  %57 = mul nsw i32 %56, %54
  %58 = add nsw i32 %53, %57
  %59 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %44, i64 0, i32 1, i64 3
  %60 = load i32, i32* %59, align 4
  %61 = mul nsw i32 %60, %41
  %62 = add nsw i32 %58, %61
  %63 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %44, i64 0, i32 1, i64 4
  %64 = load i32, i32* %63, align 4
  %65 = mul nsw i32 %64, %40
  %66 = add nsw i32 %62, %65
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i16, i16* %43, i64 %67
  %69 = load i16, i16* %68, align 2
  %70 = sext i16 %69 to i32
  %71 = load i16**, i16*** %18, align 8
  %72 = load i16*, i16** %71, align 8
  %73 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %19, align 8
  %74 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 0
  %75 = load i32, i32* %74, align 4
  %76 = mul nsw i32 %75, %45
  %77 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 1
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %49
  %80 = add nsw i32 %79, %76
  %81 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 2
  %82 = load i32, i32* %81, align 4
  %83 = mul nsw i32 %82, %54
  %84 = add nsw i32 %80, %83
  %85 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 3
  %86 = load i32, i32* %85, align 4
  %87 = mul nsw i32 %86, %41
  %88 = add nsw i32 %84, %87
  %89 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %73, i64 0, i32 1, i64 4
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %40
  %92 = add nsw i32 %88, %91
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i16, i16* %72, i64 %93
  %95 = load i16, i16* %94, align 2
  %96 = sext i16 %95 to i32
  %97 = sub nsw i32 %70, %96
  %98 = sitofp i32 %97 to float
  %99 = load %"struct.tflite::ArithmeticParams"*, %"struct.tflite::ArithmeticParams"** %20, align 8
  %100 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %99, i64 0, i32 11
  %101 = load i32, i32* %100, align 4
  %102 = sitofp i32 %101 to float
  %103 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %99, i64 0, i32 12
  %104 = load i32, i32* %103, align 4
  %105 = sitofp i32 %104 to float
  %106 = fcmp olt float %98, %102
  %107 = select i1 %106, float %102, float %98
  %108 = fcmp ogt float %107, %105
  %109 = select i1 %108, float %105, float %107
  %110 = fptosi float %109 to i16
  %111 = load i16**, i16*** %21, align 8
  %112 = load i16*, i16** %111, align 8
  %113 = load %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"** %22, align 8
  %114 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %113, i64 0, i32 1, i64 0
  %115 = load i32, i32* %114, align 4
  %116 = mul nsw i32 %115, %45
  %117 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %113, i64 0, i32 1, i64 1
  %118 = load i32, i32* %117, align 4
  %119 = mul nsw i32 %118, %49
  %120 = add nsw i32 %119, %116
  %121 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %113, i64 0, i32 1, i64 2
  %122 = load i32, i32* %121, align 4
  %123 = mul nsw i32 %122, %54
  %124 = add nsw i32 %120, %123
  %125 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %113, i64 0, i32 1, i64 3
  %126 = load i32, i32* %125, align 4
  %127 = mul nsw i32 %126, %41
  %128 = add nsw i32 %124, %127
  %129 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %113, i64 0, i32 1, i64 4
  %130 = load i32, i32* %129, align 4
  %131 = mul nsw i32 %130, %40
  %132 = add nsw i32 %128, %131
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i16, i16* %112, i64 %133
  store i16 %110, i16* %134, align 2
  %135 = load i32, i32* %14, align 4
  %136 = add nsw i32 %135, 1
  store i32 %136, i32* %14, align 4
  %137 = load i32, i32* %15, align 4
  %138 = icmp slt i32 %136, %137
  %139 = load i32, i32* %12, align 4
  br i1 %138, label %39, label %140

140:                                              ; preds = %39, %35
  %141 = phi i32 [ %36, %35 ], [ %139, %39 ]
  %142 = add nsw i32 %141, 1
  store i32 %142, i32* %12, align 4
  %143 = load i32, i32* %13, align 4
  %144 = icmp slt i32 %142, %143
  br i1 %144, label %35, label %145

145:                                              ; preds = %140
  %146 = load i32, i32* %10, align 4
  br label %147

147:                                              ; preds = %145, %31
  %148 = phi i32 [ %146, %145 ], [ %32, %31 ]
  %149 = add nsw i32 %148, 1
  store i32 %149, i32* %10, align 4
  %150 = load i32, i32* %11, align 4
  %151 = icmp slt i32 %149, %150
  br i1 %151, label %31, label %152

152:                                              ; preds = %147
  %153 = load i32, i32* %8, align 4
  br label %154

154:                                              ; preds = %152, %27
  %155 = phi i32 [ %153, %152 ], [ %28, %27 ]
  %156 = add nsw i32 %155, 1
  store i32 %156, i32* %8, align 4
  %157 = load i32, i32* %9, align 4
  %158 = icmp slt i32 %156, %157
  br i1 %158, label %27, label %159

159:                                              ; preds = %154
  %160 = load i32, i32* %2, align 4
  br label %161

161:                                              ; preds = %159, %23
  %162 = phi i32 [ %160, %159 ], [ %24, %23 ]
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %2, align 4
  %164 = load i32, i32* %4, align 4
  %165 = icmp slt i32 %163, %164
  br i1 %165, label %23, label %166

166:                                              ; preds = %161, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin3sub13EvalQuantizedILNS2_10KernelTypeE1EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteSubParams*, %"struct.tflite::ops::builtin::sub::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %8 = alloca %"struct.tflite::ArithmeticParams", align 4
  %9 = alloca %"struct.tflite::ArithmeticParams", align 4
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"class.tflite::RuntimeShape", align 8
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca %"class.tflite::RuntimeShape", align 8
  %22 = alloca %"class.tflite::RuntimeShape", align 8
  %23 = alloca %"class.tflite::RuntimeShape", align 8
  %24 = alloca %"class.tflite::RuntimeShape", align 8
  %25 = alloca %"class.tflite::RuntimeShape", align 8
  %26 = alloca %"class.tflite::RuntimeShape", align 8
  %27 = alloca %"class.tflite::RuntimeShape", align 8
  %28 = alloca %"class.tflite::RuntimeShape", align 8
  %29 = alloca %"class.tflite::RuntimeShape", align 8
  %30 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %30) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3sub13EvalQuantizedILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.op_params, i64 0, i32 0), i64 80, i1 false)
  %31 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 9
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 6
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 10
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 1
  store i32 %35, i32* %36, align 4
  %37 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 5
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 7
  store i32 %38, i32* %39, align 4
  %40 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 8
  store i32 %41, i32* %42, align 4
  %43 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 11
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 2
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 6
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 9
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 10
  store i32 %50, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 12
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 3
  store i32 %53, i32* %54, align 4
  %55 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 7
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 4
  store i32 %56, i32* %57, align 4
  %58 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 8
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 5
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 4
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 11
  store i32 %62, i32* %65, align 4
  %66 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 12
  store i32 %64, i32* %66, align 4
  %67 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #11
  %68 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %68, label %69, label %71

69:                                               ; preds = %7
  %70 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %70, align 8, !alias.scope !258
  br label %96

71:                                               ; preds = %7
  %72 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %73 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %72, align 8, !noalias !258
  %74 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 0
  %75 = load i32, i32* %74, align 4, !noalias !258
  %76 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 1, i64 0
  %77 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %75, i32* %77, align 8, !alias.scope !258
  %78 = icmp sgt i32 %75, 5
  br i1 %78, label %79, label %86

79:                                               ; preds = %71
  %80 = sext i32 %75 to i64
  %81 = shl nsw i64 %80, 2
  %82 = tail call i8* @_Znam(i64 %81) #10, !noalias !258
  %83 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %84 = bitcast i32** %83 to i8**
  store i8* %82, i8** %84, align 8, !alias.scope !258
  %85 = bitcast i8* %82 to i32*
  br label %91

86:                                               ; preds = %71
  %87 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %88 = bitcast %union.anon* %87 to i32*
  %89 = sext i32 %75 to i64
  %90 = shl nsw i64 %89, 2
  br label %91

91:                                               ; preds = %86, %79
  %92 = phi i64 [ %81, %79 ], [ %90, %86 ]
  %93 = phi i32* [ %85, %79 ], [ %88, %86 ]
  %94 = bitcast i32* %93 to i8*
  %95 = bitcast i32* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 4 %95, i64 %92, i1 false) #11
  br label %96

96:                                               ; preds = %69, %91
  %97 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %97) #11
  %98 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %98, label %99, label %101

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %100, align 8, !alias.scope !261
  br label %126

101:                                              ; preds = %96
  %102 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %103 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %102, align 8, !noalias !261
  %104 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 0
  %105 = load i32, i32* %104, align 4, !noalias !261
  %106 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 1, i64 0
  %107 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %105, i32* %107, align 8, !alias.scope !261
  %108 = icmp sgt i32 %105, 5
  br i1 %108, label %109, label %116

109:                                              ; preds = %101
  %110 = sext i32 %105 to i64
  %111 = shl nsw i64 %110, 2
  %112 = tail call i8* @_Znam(i64 %111) #10, !noalias !261
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %114 = bitcast i32** %113 to i8**
  store i8* %112, i8** %114, align 8, !alias.scope !261
  %115 = bitcast i8* %112 to i32*
  br label %121

116:                                              ; preds = %101
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %118 = bitcast %union.anon* %117 to i32*
  %119 = sext i32 %105 to i64
  %120 = shl nsw i64 %119, 2
  br label %121

121:                                              ; preds = %116, %109
  %122 = phi i64 [ %111, %109 ], [ %120, %116 ]
  %123 = phi i32* [ %115, %109 ], [ %118, %116 ]
  %124 = bitcast i32* %123 to i8*
  %125 = bitcast i32* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %124, i8* align 4 %125, i64 %122, i1 false) #11
  br label %126

126:                                              ; preds = %99, %121
  %127 = call zeroext i1 @_ZN6tflite13reference_ops22ProcessBroadcastShapesERKNS_12RuntimeShapeES3_PNS_16ArithmeticParamsE(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, %"struct.tflite::ArithmeticParams"* nonnull %9)
  %128 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %129 = load i32, i32* %128, align 8
  %130 = icmp sgt i32 %129, 5
  br i1 %130, label %131, label %137

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %133 = load i32*, i32** %132, align 8
  %134 = icmp eq i32* %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %131
  %136 = bitcast i32* %133 to i8*
  call void @_ZdaPv(i8* %136) #10
  br label %137

137:                                              ; preds = %126, %131, %135
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %97) #11
  %138 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %139 = load i32, i32* %138, align 8
  %140 = icmp sgt i32 %139, 5
  br i1 %140, label %141, label %147

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %143 = load i32*, i32** %142, align 8
  %144 = icmp eq i32* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %141
  %146 = bitcast i32* %143 to i8*
  call void @_ZdaPv(i8* %146) #10
  br label %147

147:                                              ; preds = %137, %141, %145
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #11
  %148 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 0
  %149 = load i32, i32* %148, align 8
  switch i32 %149, label %1447 [
    i32 9, label %150
    i32 3, label %741
  ]

150:                                              ; preds = %147
  br i1 %127, label %151, label %281

151:                                              ; preds = %150
  %152 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %152) #11
  br i1 %68, label %153, label %155

153:                                              ; preds = %151
  %154 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %154, align 8, !alias.scope !264
  br label %183

155:                                              ; preds = %151
  %156 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %157 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %156, align 8, !noalias !264
  %158 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %157, i64 0, i32 0
  %159 = load i32, i32* %158, align 4, !noalias !264
  %160 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %157, i64 0, i32 1, i64 0
  %161 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %159, i32* %161, align 8, !alias.scope !264
  %162 = icmp sgt i32 %159, 5
  br i1 %162, label %163, label %170

163:                                              ; preds = %155
  %164 = sext i32 %159 to i64
  %165 = shl nsw i64 %164, 2
  %166 = call i8* @_Znam(i64 %165) #10, !noalias !264
  %167 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %168 = bitcast i32** %167 to i8**
  store i8* %166, i8** %168, align 8, !alias.scope !264
  %169 = bitcast i8* %166 to i32*
  br label %175

170:                                              ; preds = %155
  %171 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %172 = bitcast %union.anon* %171 to i32*
  %173 = sext i32 %159 to i64
  %174 = shl nsw i64 %173, 2
  br label %175

175:                                              ; preds = %170, %163
  %176 = phi i64 [ %165, %163 ], [ %174, %170 ]
  %177 = phi i32* [ %169, %163 ], [ %172, %170 ]
  %178 = bitcast i32* %177 to i8*
  %179 = bitcast i32* %160 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %178, i8* align 4 %179, i64 %176, i1 false) #11
  %180 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %181 = bitcast %union.TfLitePtrUnion* %180 to i8**
  %182 = load i8*, i8** %181, align 8
  br label %183

183:                                              ; preds = %153, %175
  %184 = phi i8* [ %182, %175 ], [ null, %153 ]
  %185 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %185) #11
  br i1 %98, label %186, label %188

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %187, align 8, !alias.scope !267
  br label %216

188:                                              ; preds = %183
  %189 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %190 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %189, align 8, !noalias !267
  %191 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %190, i64 0, i32 0
  %192 = load i32, i32* %191, align 4, !noalias !267
  %193 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %190, i64 0, i32 1, i64 0
  %194 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %192, i32* %194, align 8, !alias.scope !267
  %195 = icmp sgt i32 %192, 5
  br i1 %195, label %196, label %203

196:                                              ; preds = %188
  %197 = sext i32 %192 to i64
  %198 = shl nsw i64 %197, 2
  %199 = call i8* @_Znam(i64 %198) #10, !noalias !267
  %200 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %201 = bitcast i32** %200 to i8**
  store i8* %199, i8** %201, align 8, !alias.scope !267
  %202 = bitcast i8* %199 to i32*
  br label %208

203:                                              ; preds = %188
  %204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %205 = bitcast %union.anon* %204 to i32*
  %206 = sext i32 %192 to i64
  %207 = shl nsw i64 %206, 2
  br label %208

208:                                              ; preds = %203, %196
  %209 = phi i64 [ %198, %196 ], [ %207, %203 ]
  %210 = phi i32* [ %202, %196 ], [ %205, %203 ]
  %211 = bitcast i32* %210 to i8*
  %212 = bitcast i32* %193 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %211, i8* align 4 %212, i64 %209, i1 false) #11
  %213 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %214 = bitcast %union.TfLitePtrUnion* %213 to i8**
  %215 = load i8*, i8** %214, align 8
  br label %216

216:                                              ; preds = %186, %208
  %217 = phi i8* [ %215, %208 ], [ null, %186 ]
  %218 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %218) #11
  %219 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %219, label %220, label %222

220:                                              ; preds = %216
  %221 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %221, align 8, !alias.scope !270
  br label %250

222:                                              ; preds = %216
  %223 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %224 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %223, align 8, !noalias !270
  %225 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %224, i64 0, i32 0
  %226 = load i32, i32* %225, align 4, !noalias !270
  %227 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %224, i64 0, i32 1, i64 0
  %228 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %226, i32* %228, align 8, !alias.scope !270
  %229 = icmp sgt i32 %226, 5
  br i1 %229, label %230, label %237

230:                                              ; preds = %222
  %231 = sext i32 %226 to i64
  %232 = shl nsw i64 %231, 2
  %233 = call i8* @_Znam(i64 %232) #10, !noalias !270
  %234 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %235 = bitcast i32** %234 to i8**
  store i8* %233, i8** %235, align 8, !alias.scope !270
  %236 = bitcast i8* %233 to i32*
  br label %242

237:                                              ; preds = %222
  %238 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %239 = bitcast %union.anon* %238 to i32*
  %240 = sext i32 %226 to i64
  %241 = shl nsw i64 %240, 2
  br label %242

242:                                              ; preds = %237, %230
  %243 = phi i64 [ %232, %230 ], [ %241, %237 ]
  %244 = phi i32* [ %236, %230 ], [ %239, %237 ]
  %245 = bitcast i32* %244 to i8*
  %246 = bitcast i32* %227 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %245, i8* align 4 %246, i64 %243, i1 false) #11
  %247 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %248 = bitcast %union.TfLitePtrUnion* %247 to i8**
  %249 = load i8*, i8** %248, align 8
  br label %250

250:                                              ; preds = %220, %242
  %251 = phi i8* [ %249, %242 ], [ null, %220 ]
  call void @_ZN6tflite21reference_integer_ops18BroadcastAdd4DSlowERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKaS6_S8_S6_Pa(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i8* %184, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i8* %217, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i8* %251)
  %252 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %253 = load i32, i32* %252, align 8
  %254 = icmp sgt i32 %253, 5
  br i1 %254, label %255, label %261

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %257 = load i32*, i32** %256, align 8
  %258 = icmp eq i32* %257, null
  br i1 %258, label %261, label %259

259:                                              ; preds = %255
  %260 = bitcast i32* %257 to i8*
  call void @_ZdaPv(i8* %260) #10
  br label %261

261:                                              ; preds = %250, %255, %259
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %218) #11
  %262 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %263 = load i32, i32* %262, align 8
  %264 = icmp sgt i32 %263, 5
  br i1 %264, label %265, label %271

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %267 = load i32*, i32** %266, align 8
  %268 = icmp eq i32* %267, null
  br i1 %268, label %271, label %269

269:                                              ; preds = %265
  %270 = bitcast i32* %267 to i8*
  call void @_ZdaPv(i8* %270) #10
  br label %271

271:                                              ; preds = %261, %265, %269
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %185) #11
  %272 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %273 = load i32, i32* %272, align 8
  %274 = icmp sgt i32 %273, 5
  br i1 %274, label %275, label %1708

275:                                              ; preds = %271
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %277 = load i32*, i32** %276, align 8
  %278 = icmp eq i32* %277, null
  br i1 %278, label %1708, label %279

279:                                              ; preds = %275
  %280 = bitcast i32* %277 to i8*
  call void @_ZdaPv(i8* %280) #10
  br label %1708

281:                                              ; preds = %150
  %282 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %282) #11
  br i1 %68, label %283, label %285

283:                                              ; preds = %281
  %284 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %284, align 8, !alias.scope !273
  br label %313

285:                                              ; preds = %281
  %286 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %287 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %286, align 8, !noalias !273
  %288 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %287, i64 0, i32 0
  %289 = load i32, i32* %288, align 4, !noalias !273
  %290 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %287, i64 0, i32 1, i64 0
  %291 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %289, i32* %291, align 8, !alias.scope !273
  %292 = icmp sgt i32 %289, 5
  br i1 %292, label %293, label %300

293:                                              ; preds = %285
  %294 = sext i32 %289 to i64
  %295 = shl nsw i64 %294, 2
  %296 = call i8* @_Znam(i64 %295) #10, !noalias !273
  %297 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %298 = bitcast i32** %297 to i8**
  store i8* %296, i8** %298, align 8, !alias.scope !273
  %299 = bitcast i8* %296 to i32*
  br label %305

300:                                              ; preds = %285
  %301 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %302 = bitcast %union.anon* %301 to i32*
  %303 = sext i32 %289 to i64
  %304 = shl nsw i64 %303, 2
  br label %305

305:                                              ; preds = %300, %293
  %306 = phi i64 [ %295, %293 ], [ %304, %300 ]
  %307 = phi i32* [ %299, %293 ], [ %302, %300 ]
  %308 = bitcast i32* %307 to i8*
  %309 = bitcast i32* %290 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %308, i8* align 4 %309, i64 %306, i1 false) #11
  %310 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %311 = bitcast %union.TfLitePtrUnion* %310 to i8**
  %312 = load i8*, i8** %311, align 8
  br label %313

313:                                              ; preds = %283, %305
  %314 = phi i32 [ %289, %305 ], [ 0, %283 ]
  %315 = phi i8* [ %312, %305 ], [ null, %283 ]
  %316 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %316) #11
  br i1 %98, label %317, label %319

317:                                              ; preds = %313
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %318, align 8, !alias.scope !276
  br label %347

319:                                              ; preds = %313
  %320 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %321 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %320, align 8, !noalias !276
  %322 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %321, i64 0, i32 0
  %323 = load i32, i32* %322, align 4, !noalias !276
  %324 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %321, i64 0, i32 1, i64 0
  %325 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %323, i32* %325, align 8, !alias.scope !276
  %326 = icmp sgt i32 %323, 5
  br i1 %326, label %327, label %334

327:                                              ; preds = %319
  %328 = sext i32 %323 to i64
  %329 = shl nsw i64 %328, 2
  %330 = call i8* @_Znam(i64 %329) #10, !noalias !276
  %331 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %332 = bitcast i32** %331 to i8**
  store i8* %330, i8** %332, align 8, !alias.scope !276
  %333 = bitcast i8* %330 to i32*
  br label %339

334:                                              ; preds = %319
  %335 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %336 = bitcast %union.anon* %335 to i32*
  %337 = sext i32 %323 to i64
  %338 = shl nsw i64 %337, 2
  br label %339

339:                                              ; preds = %334, %327
  %340 = phi i64 [ %329, %327 ], [ %338, %334 ]
  %341 = phi i32* [ %333, %327 ], [ %336, %334 ]
  %342 = bitcast i32* %341 to i8*
  %343 = bitcast i32* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %342, i8* align 4 %343, i64 %340, i1 false) #11
  %344 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %345 = bitcast %union.TfLitePtrUnion* %344 to i8**
  %346 = load i8*, i8** %345, align 8
  br label %347

347:                                              ; preds = %317, %339
  %348 = phi i32 [ %323, %339 ], [ 0, %317 ]
  %349 = phi i8* [ %346, %339 ], [ null, %317 ]
  %350 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %350) #11
  %351 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %351, label %352, label %354

352:                                              ; preds = %347
  %353 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %353, align 8, !alias.scope !279
  br label %382

354:                                              ; preds = %347
  %355 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %356 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %355, align 8, !noalias !279
  %357 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %356, i64 0, i32 0
  %358 = load i32, i32* %357, align 4, !noalias !279
  %359 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %356, i64 0, i32 1, i64 0
  %360 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %358, i32* %360, align 8, !alias.scope !279
  %361 = icmp sgt i32 %358, 5
  br i1 %361, label %362, label %369

362:                                              ; preds = %354
  %363 = sext i32 %358 to i64
  %364 = shl nsw i64 %363, 2
  %365 = call i8* @_Znam(i64 %364) #10, !noalias !279
  %366 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %367 = bitcast i32** %366 to i8**
  store i8* %365, i8** %367, align 8, !alias.scope !279
  %368 = bitcast i8* %365 to i32*
  br label %374

369:                                              ; preds = %354
  %370 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %371 = bitcast %union.anon* %370 to i32*
  %372 = sext i32 %358 to i64
  %373 = shl nsw i64 %372, 2
  br label %374

374:                                              ; preds = %369, %362
  %375 = phi i64 [ %364, %362 ], [ %373, %369 ]
  %376 = phi i32* [ %368, %362 ], [ %371, %369 ]
  %377 = bitcast i32* %376 to i8*
  %378 = bitcast i32* %359 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %377, i8* align 4 %378, i64 %375, i1 false) #11
  %379 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %380 = bitcast %union.TfLitePtrUnion* %379 to i8**
  %381 = load i8*, i8** %380, align 8
  br label %382

382:                                              ; preds = %352, %374
  %383 = phi i32 [ %358, %374 ], [ 0, %352 ]
  %384 = phi i8* [ %381, %374 ], [ null, %352 ]
  %385 = icmp sgt i32 %314, 5
  %386 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  br i1 %385, label %387, label %390

387:                                              ; preds = %382
  %388 = getelementptr inbounds %union.anon, %union.anon* %386, i64 0, i32 0
  %389 = load i32*, i32** %388, align 8
  br label %393

390:                                              ; preds = %382
  %391 = bitcast %union.anon* %386 to i32*
  %392 = icmp sgt i32 %314, 0
  br i1 %392, label %393, label %493

393:                                              ; preds = %390, %387
  %394 = phi i32* [ %389, %387 ], [ %391, %390 ]
  %395 = zext i32 %314 to i64
  %396 = icmp ult i32 %314, 8
  br i1 %396, label %482, label %397

397:                                              ; preds = %393
  %398 = and i64 %395, 4294967288
  %399 = add nsw i64 %398, -8
  %400 = lshr exact i64 %399, 3
  %401 = add nuw nsw i64 %400, 1
  %402 = and i64 %401, 3
  %403 = icmp ult i64 %399, 24
  br i1 %403, label %449, label %404

404:                                              ; preds = %397
  %405 = sub nsw i64 %401, %402
  br label %406

406:                                              ; preds = %406, %404
  %407 = phi i64 [ 0, %404 ], [ %446, %406 ]
  %408 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %404 ], [ %444, %406 ]
  %409 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %404 ], [ %445, %406 ]
  %410 = phi i64 [ %405, %404 ], [ %447, %406 ]
  %411 = getelementptr inbounds i32, i32* %394, i64 %407
  %412 = bitcast i32* %411 to <4 x i32>*
  %413 = load <4 x i32>, <4 x i32>* %412, align 4
  %414 = getelementptr inbounds i32, i32* %411, i64 4
  %415 = bitcast i32* %414 to <4 x i32>*
  %416 = load <4 x i32>, <4 x i32>* %415, align 4
  %417 = mul nsw <4 x i32> %413, %408
  %418 = mul nsw <4 x i32> %416, %409
  %419 = or i64 %407, 8
  %420 = getelementptr inbounds i32, i32* %394, i64 %419
  %421 = bitcast i32* %420 to <4 x i32>*
  %422 = load <4 x i32>, <4 x i32>* %421, align 4
  %423 = getelementptr inbounds i32, i32* %420, i64 4
  %424 = bitcast i32* %423 to <4 x i32>*
  %425 = load <4 x i32>, <4 x i32>* %424, align 4
  %426 = mul nsw <4 x i32> %422, %417
  %427 = mul nsw <4 x i32> %425, %418
  %428 = or i64 %407, 16
  %429 = getelementptr inbounds i32, i32* %394, i64 %428
  %430 = bitcast i32* %429 to <4 x i32>*
  %431 = load <4 x i32>, <4 x i32>* %430, align 4
  %432 = getelementptr inbounds i32, i32* %429, i64 4
  %433 = bitcast i32* %432 to <4 x i32>*
  %434 = load <4 x i32>, <4 x i32>* %433, align 4
  %435 = mul nsw <4 x i32> %431, %426
  %436 = mul nsw <4 x i32> %434, %427
  %437 = or i64 %407, 24
  %438 = getelementptr inbounds i32, i32* %394, i64 %437
  %439 = bitcast i32* %438 to <4 x i32>*
  %440 = load <4 x i32>, <4 x i32>* %439, align 4
  %441 = getelementptr inbounds i32, i32* %438, i64 4
  %442 = bitcast i32* %441 to <4 x i32>*
  %443 = load <4 x i32>, <4 x i32>* %442, align 4
  %444 = mul nsw <4 x i32> %440, %435
  %445 = mul nsw <4 x i32> %443, %436
  %446 = add i64 %407, 32
  %447 = add i64 %410, -4
  %448 = icmp eq i64 %447, 0
  br i1 %448, label %449, label %406, !llvm.loop !282

449:                                              ; preds = %406, %397
  %450 = phi <4 x i32> [ undef, %397 ], [ %444, %406 ]
  %451 = phi <4 x i32> [ undef, %397 ], [ %445, %406 ]
  %452 = phi i64 [ 0, %397 ], [ %446, %406 ]
  %453 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %397 ], [ %444, %406 ]
  %454 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %397 ], [ %445, %406 ]
  %455 = icmp eq i64 %402, 0
  br i1 %455, label %472, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %469, %456 ], [ %452, %449 ]
  %458 = phi <4 x i32> [ %467, %456 ], [ %453, %449 ]
  %459 = phi <4 x i32> [ %468, %456 ], [ %454, %449 ]
  %460 = phi i64 [ %470, %456 ], [ %402, %449 ]
  %461 = getelementptr inbounds i32, i32* %394, i64 %457
  %462 = bitcast i32* %461 to <4 x i32>*
  %463 = load <4 x i32>, <4 x i32>* %462, align 4
  %464 = getelementptr inbounds i32, i32* %461, i64 4
  %465 = bitcast i32* %464 to <4 x i32>*
  %466 = load <4 x i32>, <4 x i32>* %465, align 4
  %467 = mul nsw <4 x i32> %463, %458
  %468 = mul nsw <4 x i32> %466, %459
  %469 = add i64 %457, 8
  %470 = add i64 %460, -1
  %471 = icmp eq i64 %470, 0
  br i1 %471, label %472, label %456, !llvm.loop !283

472:                                              ; preds = %456, %449
  %473 = phi <4 x i32> [ %450, %449 ], [ %467, %456 ]
  %474 = phi <4 x i32> [ %451, %449 ], [ %468, %456 ]
  %475 = mul <4 x i32> %474, %473
  %476 = shufflevector <4 x i32> %475, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %477 = mul <4 x i32> %475, %476
  %478 = shufflevector <4 x i32> %477, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %479 = mul <4 x i32> %477, %478
  %480 = extractelement <4 x i32> %479, i32 0
  %481 = icmp eq i64 %398, %395
  br i1 %481, label %493, label %482

482:                                              ; preds = %472, %393
  %483 = phi i64 [ 0, %393 ], [ %398, %472 ]
  %484 = phi i32 [ 1, %393 ], [ %480, %472 ]
  br label %485

485:                                              ; preds = %482, %485
  %486 = phi i64 [ %491, %485 ], [ %483, %482 ]
  %487 = phi i32 [ %490, %485 ], [ %484, %482 ]
  %488 = getelementptr inbounds i32, i32* %394, i64 %486
  %489 = load i32, i32* %488, align 4
  %490 = mul nsw i32 %489, %487
  %491 = add nuw nsw i64 %486, 1
  %492 = icmp eq i64 %491, %395
  br i1 %492, label %493, label %485, !llvm.loop !284

493:                                              ; preds = %485, %472, %390
  %494 = phi i32 [ 1, %390 ], [ %480, %472 ], [ %490, %485 ]
  %495 = icmp sgt i32 %348, 5
  %496 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  br i1 %495, label %497, label %500

497:                                              ; preds = %493
  %498 = getelementptr inbounds %union.anon, %union.anon* %496, i64 0, i32 0
  %499 = load i32*, i32** %498, align 8
  br label %503

500:                                              ; preds = %493
  %501 = bitcast %union.anon* %496 to i32*
  %502 = icmp sgt i32 %348, 0
  br i1 %502, label %503, label %603

503:                                              ; preds = %500, %497
  %504 = phi i32* [ %499, %497 ], [ %501, %500 ]
  %505 = zext i32 %348 to i64
  %506 = icmp ult i32 %348, 8
  br i1 %506, label %592, label %507

507:                                              ; preds = %503
  %508 = and i64 %505, 4294967288
  %509 = add nsw i64 %508, -8
  %510 = lshr exact i64 %509, 3
  %511 = add nuw nsw i64 %510, 1
  %512 = and i64 %511, 3
  %513 = icmp ult i64 %509, 24
  br i1 %513, label %559, label %514

514:                                              ; preds = %507
  %515 = sub nsw i64 %511, %512
  br label %516

516:                                              ; preds = %516, %514
  %517 = phi i64 [ 0, %514 ], [ %556, %516 ]
  %518 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %514 ], [ %554, %516 ]
  %519 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %514 ], [ %555, %516 ]
  %520 = phi i64 [ %515, %514 ], [ %557, %516 ]
  %521 = getelementptr inbounds i32, i32* %504, i64 %517
  %522 = bitcast i32* %521 to <4 x i32>*
  %523 = load <4 x i32>, <4 x i32>* %522, align 4
  %524 = getelementptr inbounds i32, i32* %521, i64 4
  %525 = bitcast i32* %524 to <4 x i32>*
  %526 = load <4 x i32>, <4 x i32>* %525, align 4
  %527 = mul nsw <4 x i32> %523, %518
  %528 = mul nsw <4 x i32> %526, %519
  %529 = or i64 %517, 8
  %530 = getelementptr inbounds i32, i32* %504, i64 %529
  %531 = bitcast i32* %530 to <4 x i32>*
  %532 = load <4 x i32>, <4 x i32>* %531, align 4
  %533 = getelementptr inbounds i32, i32* %530, i64 4
  %534 = bitcast i32* %533 to <4 x i32>*
  %535 = load <4 x i32>, <4 x i32>* %534, align 4
  %536 = mul nsw <4 x i32> %532, %527
  %537 = mul nsw <4 x i32> %535, %528
  %538 = or i64 %517, 16
  %539 = getelementptr inbounds i32, i32* %504, i64 %538
  %540 = bitcast i32* %539 to <4 x i32>*
  %541 = load <4 x i32>, <4 x i32>* %540, align 4
  %542 = getelementptr inbounds i32, i32* %539, i64 4
  %543 = bitcast i32* %542 to <4 x i32>*
  %544 = load <4 x i32>, <4 x i32>* %543, align 4
  %545 = mul nsw <4 x i32> %541, %536
  %546 = mul nsw <4 x i32> %544, %537
  %547 = or i64 %517, 24
  %548 = getelementptr inbounds i32, i32* %504, i64 %547
  %549 = bitcast i32* %548 to <4 x i32>*
  %550 = load <4 x i32>, <4 x i32>* %549, align 4
  %551 = getelementptr inbounds i32, i32* %548, i64 4
  %552 = bitcast i32* %551 to <4 x i32>*
  %553 = load <4 x i32>, <4 x i32>* %552, align 4
  %554 = mul nsw <4 x i32> %550, %545
  %555 = mul nsw <4 x i32> %553, %546
  %556 = add i64 %517, 32
  %557 = add i64 %520, -4
  %558 = icmp eq i64 %557, 0
  br i1 %558, label %559, label %516, !llvm.loop !285

559:                                              ; preds = %516, %507
  %560 = phi <4 x i32> [ undef, %507 ], [ %554, %516 ]
  %561 = phi <4 x i32> [ undef, %507 ], [ %555, %516 ]
  %562 = phi i64 [ 0, %507 ], [ %556, %516 ]
  %563 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %507 ], [ %554, %516 ]
  %564 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %507 ], [ %555, %516 ]
  %565 = icmp eq i64 %512, 0
  br i1 %565, label %582, label %566

566:                                              ; preds = %559, %566
  %567 = phi i64 [ %579, %566 ], [ %562, %559 ]
  %568 = phi <4 x i32> [ %577, %566 ], [ %563, %559 ]
  %569 = phi <4 x i32> [ %578, %566 ], [ %564, %559 ]
  %570 = phi i64 [ %580, %566 ], [ %512, %559 ]
  %571 = getelementptr inbounds i32, i32* %504, i64 %567
  %572 = bitcast i32* %571 to <4 x i32>*
  %573 = load <4 x i32>, <4 x i32>* %572, align 4
  %574 = getelementptr inbounds i32, i32* %571, i64 4
  %575 = bitcast i32* %574 to <4 x i32>*
  %576 = load <4 x i32>, <4 x i32>* %575, align 4
  %577 = mul nsw <4 x i32> %573, %568
  %578 = mul nsw <4 x i32> %576, %569
  %579 = add i64 %567, 8
  %580 = add i64 %570, -1
  %581 = icmp eq i64 %580, 0
  br i1 %581, label %582, label %566, !llvm.loop !286

582:                                              ; preds = %566, %559
  %583 = phi <4 x i32> [ %560, %559 ], [ %577, %566 ]
  %584 = phi <4 x i32> [ %561, %559 ], [ %578, %566 ]
  %585 = mul <4 x i32> %584, %583
  %586 = shufflevector <4 x i32> %585, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %587 = mul <4 x i32> %585, %586
  %588 = shufflevector <4 x i32> %587, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %589 = mul <4 x i32> %587, %588
  %590 = extractelement <4 x i32> %589, i32 0
  %591 = icmp eq i64 %508, %505
  br i1 %591, label %603, label %592

592:                                              ; preds = %582, %503
  %593 = phi i64 [ 0, %503 ], [ %508, %582 ]
  %594 = phi i32 [ 1, %503 ], [ %590, %582 ]
  br label %595

595:                                              ; preds = %592, %595
  %596 = phi i64 [ %601, %595 ], [ %593, %592 ]
  %597 = phi i32 [ %600, %595 ], [ %594, %592 ]
  %598 = getelementptr inbounds i32, i32* %504, i64 %596
  %599 = load i32, i32* %598, align 4
  %600 = mul nsw i32 %599, %597
  %601 = add nuw nsw i64 %596, 1
  %602 = icmp eq i64 %601, %505
  br i1 %602, label %603, label %595, !llvm.loop !287

603:                                              ; preds = %595, %582, %500
  %604 = phi i32 [ 1, %500 ], [ %590, %582 ], [ %600, %595 ]
  %605 = icmp sgt i32 %383, 5
  %606 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  br i1 %605, label %607, label %610

607:                                              ; preds = %603
  %608 = getelementptr inbounds %union.anon, %union.anon* %606, i64 0, i32 0
  %609 = load i32*, i32** %608, align 8
  br label %613

610:                                              ; preds = %603
  %611 = bitcast %union.anon* %606 to i32*
  %612 = icmp sgt i32 %383, 0
  br i1 %612, label %613, label %713

613:                                              ; preds = %610, %607
  %614 = phi i32* [ %609, %607 ], [ %611, %610 ]
  %615 = zext i32 %383 to i64
  %616 = icmp ult i32 %383, 8
  br i1 %616, label %702, label %617

617:                                              ; preds = %613
  %618 = and i64 %615, 4294967288
  %619 = add nsw i64 %618, -8
  %620 = lshr exact i64 %619, 3
  %621 = add nuw nsw i64 %620, 1
  %622 = and i64 %621, 3
  %623 = icmp ult i64 %619, 24
  br i1 %623, label %669, label %624

624:                                              ; preds = %617
  %625 = sub nsw i64 %621, %622
  br label %626

626:                                              ; preds = %626, %624
  %627 = phi i64 [ 0, %624 ], [ %666, %626 ]
  %628 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %624 ], [ %664, %626 ]
  %629 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %624 ], [ %665, %626 ]
  %630 = phi i64 [ %625, %624 ], [ %667, %626 ]
  %631 = getelementptr inbounds i32, i32* %614, i64 %627
  %632 = bitcast i32* %631 to <4 x i32>*
  %633 = load <4 x i32>, <4 x i32>* %632, align 4
  %634 = getelementptr inbounds i32, i32* %631, i64 4
  %635 = bitcast i32* %634 to <4 x i32>*
  %636 = load <4 x i32>, <4 x i32>* %635, align 4
  %637 = mul nsw <4 x i32> %633, %628
  %638 = mul nsw <4 x i32> %636, %629
  %639 = or i64 %627, 8
  %640 = getelementptr inbounds i32, i32* %614, i64 %639
  %641 = bitcast i32* %640 to <4 x i32>*
  %642 = load <4 x i32>, <4 x i32>* %641, align 4
  %643 = getelementptr inbounds i32, i32* %640, i64 4
  %644 = bitcast i32* %643 to <4 x i32>*
  %645 = load <4 x i32>, <4 x i32>* %644, align 4
  %646 = mul nsw <4 x i32> %642, %637
  %647 = mul nsw <4 x i32> %645, %638
  %648 = or i64 %627, 16
  %649 = getelementptr inbounds i32, i32* %614, i64 %648
  %650 = bitcast i32* %649 to <4 x i32>*
  %651 = load <4 x i32>, <4 x i32>* %650, align 4
  %652 = getelementptr inbounds i32, i32* %649, i64 4
  %653 = bitcast i32* %652 to <4 x i32>*
  %654 = load <4 x i32>, <4 x i32>* %653, align 4
  %655 = mul nsw <4 x i32> %651, %646
  %656 = mul nsw <4 x i32> %654, %647
  %657 = or i64 %627, 24
  %658 = getelementptr inbounds i32, i32* %614, i64 %657
  %659 = bitcast i32* %658 to <4 x i32>*
  %660 = load <4 x i32>, <4 x i32>* %659, align 4
  %661 = getelementptr inbounds i32, i32* %658, i64 4
  %662 = bitcast i32* %661 to <4 x i32>*
  %663 = load <4 x i32>, <4 x i32>* %662, align 4
  %664 = mul nsw <4 x i32> %660, %655
  %665 = mul nsw <4 x i32> %663, %656
  %666 = add i64 %627, 32
  %667 = add i64 %630, -4
  %668 = icmp eq i64 %667, 0
  br i1 %668, label %669, label %626, !llvm.loop !288

669:                                              ; preds = %626, %617
  %670 = phi <4 x i32> [ undef, %617 ], [ %664, %626 ]
  %671 = phi <4 x i32> [ undef, %617 ], [ %665, %626 ]
  %672 = phi i64 [ 0, %617 ], [ %666, %626 ]
  %673 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %617 ], [ %664, %626 ]
  %674 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %617 ], [ %665, %626 ]
  %675 = icmp eq i64 %622, 0
  br i1 %675, label %692, label %676

676:                                              ; preds = %669, %676
  %677 = phi i64 [ %689, %676 ], [ %672, %669 ]
  %678 = phi <4 x i32> [ %687, %676 ], [ %673, %669 ]
  %679 = phi <4 x i32> [ %688, %676 ], [ %674, %669 ]
  %680 = phi i64 [ %690, %676 ], [ %622, %669 ]
  %681 = getelementptr inbounds i32, i32* %614, i64 %677
  %682 = bitcast i32* %681 to <4 x i32>*
  %683 = load <4 x i32>, <4 x i32>* %682, align 4
  %684 = getelementptr inbounds i32, i32* %681, i64 4
  %685 = bitcast i32* %684 to <4 x i32>*
  %686 = load <4 x i32>, <4 x i32>* %685, align 4
  %687 = mul nsw <4 x i32> %683, %678
  %688 = mul nsw <4 x i32> %686, %679
  %689 = add i64 %677, 8
  %690 = add i64 %680, -1
  %691 = icmp eq i64 %690, 0
  br i1 %691, label %692, label %676, !llvm.loop !289

692:                                              ; preds = %676, %669
  %693 = phi <4 x i32> [ %670, %669 ], [ %687, %676 ]
  %694 = phi <4 x i32> [ %671, %669 ], [ %688, %676 ]
  %695 = mul <4 x i32> %694, %693
  %696 = shufflevector <4 x i32> %695, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %697 = mul <4 x i32> %695, %696
  %698 = shufflevector <4 x i32> %697, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %699 = mul <4 x i32> %697, %698
  %700 = extractelement <4 x i32> %699, i32 0
  %701 = icmp eq i64 %618, %615
  br i1 %701, label %713, label %702

702:                                              ; preds = %692, %613
  %703 = phi i64 [ 0, %613 ], [ %618, %692 ]
  %704 = phi i32 [ 1, %613 ], [ %700, %692 ]
  br label %705

705:                                              ; preds = %702, %705
  %706 = phi i64 [ %711, %705 ], [ %703, %702 ]
  %707 = phi i32 [ %710, %705 ], [ %704, %702 ]
  %708 = getelementptr inbounds i32, i32* %614, i64 %706
  %709 = load i32, i32* %708, align 4
  %710 = mul nsw i32 %709, %707
  %711 = add nuw nsw i64 %706, 1
  %712 = icmp eq i64 %711, %615
  br i1 %712, label %713, label %705, !llvm.loop !290

713:                                              ; preds = %705, %692, %610
  %714 = phi i32 [ 1, %610 ], [ %700, %692 ], [ %710, %705 ]
  %715 = icmp eq i32 %494, %604
  br i1 %715, label %717, label %716

716:                                              ; preds = %713
  call void @abort() #12
  unreachable

717:                                              ; preds = %713
  %718 = icmp eq i32 %494, %714
  br i1 %718, label %720, label %719

719:                                              ; preds = %717
  call void @abort() #12
  unreachable

720:                                              ; preds = %717
  call void @_ZN6tflite21reference_integer_ops14AddElementwiseEiRKNS_16ArithmeticParamsEPKaS5_Pa(i32 %494, %"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %9, i8* %315, i8* %349, i8* %384) #11
  br i1 %605, label %721, label %727

721:                                              ; preds = %720
  %722 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %723 = load i32*, i32** %722, align 8
  %724 = icmp eq i32* %723, null
  br i1 %724, label %727, label %725

725:                                              ; preds = %721
  %726 = bitcast i32* %723 to i8*
  call void @_ZdaPv(i8* %726) #10
  br label %727

727:                                              ; preds = %720, %721, %725
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %350) #11
  br i1 %495, label %728, label %734

728:                                              ; preds = %727
  %729 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %730 = load i32*, i32** %729, align 8
  %731 = icmp eq i32* %730, null
  br i1 %731, label %734, label %732

732:                                              ; preds = %728
  %733 = bitcast i32* %730 to i8*
  call void @_ZdaPv(i8* %733) #10
  br label %734

734:                                              ; preds = %727, %728, %732
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %316) #11
  br i1 %385, label %735, label %1708

735:                                              ; preds = %734
  %736 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %737 = load i32*, i32** %736, align 8
  %738 = icmp eq i32* %737, null
  br i1 %738, label %1708, label %739

739:                                              ; preds = %735
  %740 = bitcast i32* %737 to i8*
  call void @_ZdaPv(i8* %740) #10
  br label %1708

741:                                              ; preds = %147
  br i1 %127, label %742, label %987

742:                                              ; preds = %741
  %743 = bitcast %"class.tflite::RuntimeShape"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %743) #11
  br i1 %68, label %744, label %746

744:                                              ; preds = %742
  %745 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 0, i32* %745, align 8, !alias.scope !291
  br label %774

746:                                              ; preds = %742
  %747 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %748 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %747, align 8, !noalias !291
  %749 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %748, i64 0, i32 0
  %750 = load i32, i32* %749, align 4, !noalias !291
  %751 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %748, i64 0, i32 1, i64 0
  %752 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 %750, i32* %752, align 8, !alias.scope !291
  %753 = icmp sgt i32 %750, 5
  br i1 %753, label %754, label %761

754:                                              ; preds = %746
  %755 = sext i32 %750 to i64
  %756 = shl nsw i64 %755, 2
  %757 = call i8* @_Znam(i64 %756) #10, !noalias !291
  %758 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %759 = bitcast i32** %758 to i8**
  store i8* %757, i8** %759, align 8, !alias.scope !291
  %760 = bitcast i8* %757 to i32*
  br label %766

761:                                              ; preds = %746
  %762 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %763 = bitcast %union.anon* %762 to i32*
  %764 = sext i32 %750 to i64
  %765 = shl nsw i64 %764, 2
  br label %766

766:                                              ; preds = %761, %754
  %767 = phi i64 [ %756, %754 ], [ %765, %761 ]
  %768 = phi i32* [ %760, %754 ], [ %763, %761 ]
  %769 = bitcast i32* %768 to i8*
  %770 = bitcast i32* %751 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %769, i8* align 4 %770, i64 %767, i1 false) #11
  %771 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %772 = bitcast %union.TfLitePtrUnion* %771 to i8**
  %773 = load i8*, i8** %772, align 8
  br label %774

774:                                              ; preds = %744, %766
  %775 = phi i8* [ %773, %766 ], [ null, %744 ]
  %776 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %776) #11
  br i1 %98, label %777, label %779

777:                                              ; preds = %774
  %778 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %778, align 8, !alias.scope !294
  br label %807

779:                                              ; preds = %774
  %780 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %781 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %780, align 8, !noalias !294
  %782 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %781, i64 0, i32 0
  %783 = load i32, i32* %782, align 4, !noalias !294
  %784 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %781, i64 0, i32 1, i64 0
  %785 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %783, i32* %785, align 8, !alias.scope !294
  %786 = icmp sgt i32 %783, 5
  br i1 %786, label %787, label %794

787:                                              ; preds = %779
  %788 = sext i32 %783 to i64
  %789 = shl nsw i64 %788, 2
  %790 = call i8* @_Znam(i64 %789) #10, !noalias !294
  %791 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %792 = bitcast i32** %791 to i8**
  store i8* %790, i8** %792, align 8, !alias.scope !294
  %793 = bitcast i8* %790 to i32*
  br label %799

794:                                              ; preds = %779
  %795 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %796 = bitcast %union.anon* %795 to i32*
  %797 = sext i32 %783 to i64
  %798 = shl nsw i64 %797, 2
  br label %799

799:                                              ; preds = %794, %787
  %800 = phi i64 [ %789, %787 ], [ %798, %794 ]
  %801 = phi i32* [ %793, %787 ], [ %796, %794 ]
  %802 = bitcast i32* %801 to i8*
  %803 = bitcast i32* %784 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %802, i8* align 4 %803, i64 %800, i1 false) #11
  %804 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %805 = bitcast %union.TfLitePtrUnion* %804 to i8**
  %806 = load i8*, i8** %805, align 8
  br label %807

807:                                              ; preds = %777, %799
  %808 = phi i8* [ %806, %799 ], [ null, %777 ]
  %809 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %809) #11
  %810 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %810, label %811, label %813

811:                                              ; preds = %807
  %812 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %812, align 8, !alias.scope !297
  br label %841

813:                                              ; preds = %807
  %814 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %815 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %814, align 8, !noalias !297
  %816 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %815, i64 0, i32 0
  %817 = load i32, i32* %816, align 4, !noalias !297
  %818 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %815, i64 0, i32 1, i64 0
  %819 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %817, i32* %819, align 8, !alias.scope !297
  %820 = icmp sgt i32 %817, 5
  br i1 %820, label %821, label %828

821:                                              ; preds = %813
  %822 = sext i32 %817 to i64
  %823 = shl nsw i64 %822, 2
  %824 = call i8* @_Znam(i64 %823) #10, !noalias !297
  %825 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %826 = bitcast i32** %825 to i8**
  store i8* %824, i8** %826, align 8, !alias.scope !297
  %827 = bitcast i8* %824 to i32*
  br label %833

828:                                              ; preds = %813
  %829 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %830 = bitcast %union.anon* %829 to i32*
  %831 = sext i32 %817 to i64
  %832 = shl nsw i64 %831, 2
  br label %833

833:                                              ; preds = %828, %821
  %834 = phi i64 [ %823, %821 ], [ %832, %828 ]
  %835 = phi i32* [ %827, %821 ], [ %830, %828 ]
  %836 = bitcast i32* %835 to i8*
  %837 = bitcast i32* %818 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %836, i8* align 4 %837, i64 %834, i1 false) #11
  %838 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %839 = bitcast %union.TfLitePtrUnion* %838 to i8**
  %840 = load i8*, i8** %839, align 8
  br label %841

841:                                              ; preds = %811, %833
  %842 = phi i8* [ %840, %833 ], [ null, %811 ]
  %843 = load i8, i8* %30, align 4
  %844 = icmp eq i8 %843, 4
  br i1 %844, label %845, label %846

845:                                              ; preds = %841
  call void @_ZN6tflite13reference_ops18BroadcastAdd4DSlowERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS6_S8_S6_Ph(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %18, i8* %775, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %19, i8* %808, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %20, i8* %842) #11
  br label %957

846:                                              ; preds = %841
  %847 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %847) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %847, i8* nonnull align 4 %30, i64 80, i1 false) #11
  %848 = load i32, i32* %45, align 4
  %849 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 1
  store i32 %848, i32* %849, align 4
  %850 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 7
  %851 = load i32, i32* %36, align 4
  %852 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 2
  store i32 %851, i32* %852, align 4
  %853 = bitcast i32* %39 to <4 x i32>*
  %854 = load <4 x i32>, <4 x i32>* %853, align 4
  %855 = shufflevector <4 x i32> %854, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %856 = bitcast i32* %850 to <4 x i32>*
  store <4 x i32> %855, <4 x i32>* %856, align 4
  %857 = icmp eq i8 %843, 2
  %858 = select i1 %857, %"struct.tflite::ArithmeticParams"* %9, %"struct.tflite::ArithmeticParams"* %8
  %859 = select i1 %857, i8* %775, i8* %808
  %860 = select i1 %857, i8* %808, i8* %775
  %861 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %858, i64 0, i32 15, i64 0
  %862 = load i32, i32* %861, align 4
  %863 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %858, i64 0, i32 15, i64 1
  %864 = load i32, i32* %863, align 4
  %865 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %858, i64 0, i32 15, i64 2
  %866 = load i32, i32* %865, align 4
  %867 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %858, i64 0, i32 15, i64 3
  %868 = load i32, i32* %867, align 4
  %869 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %858, i64 0, i32 15, i64 4
  %870 = load i32, i32* %869, align 4
  %871 = icmp sgt i32 %870, 1
  %872 = icmp sgt i32 %862, 0
  br i1 %871, label %878, label %873

873:                                              ; preds = %846
  br i1 %872, label %874, label %956

874:                                              ; preds = %873
  %875 = icmp sgt i32 %864, 0
  %876 = icmp sgt i32 %866, 0
  %877 = sext i32 %868 to i64
  br label %924

878:                                              ; preds = %846
  br i1 %872, label %879, label %956

879:                                              ; preds = %878
  %880 = icmp sgt i32 %864, 0
  %881 = icmp sgt i32 %866, 0
  %882 = icmp sgt i32 %868, 0
  %883 = sext i32 %870 to i64
  br label %884

884:                                              ; preds = %893, %879
  %885 = phi i32 [ 0, %879 ], [ %897, %893 ]
  %886 = phi i8* [ %860, %879 ], [ %896, %893 ]
  %887 = phi i8* [ %859, %879 ], [ %895, %893 ]
  %888 = phi i8* [ %842, %879 ], [ %894, %893 ]
  br i1 %880, label %889, label %893

889:                                              ; preds = %884, %904
  %890 = phi i32 [ %908, %904 ], [ 0, %884 ]
  %891 = phi i8* [ %906, %904 ], [ %887, %884 ]
  %892 = phi i8* [ %905, %904 ], [ %888, %884 ]
  br i1 %881, label %899, label %904

893:                                              ; preds = %904, %884
  %894 = phi i8* [ %888, %884 ], [ %905, %904 ]
  %895 = phi i8* [ %887, %884 ], [ %906, %904 ]
  %896 = phi i8* [ null, %884 ], [ %907, %904 ]
  %897 = add nuw nsw i32 %885, 1
  %898 = icmp eq i32 %897, %862
  br i1 %898, label %956, label %884

899:                                              ; preds = %889, %910
  %900 = phi i32 [ %914, %910 ], [ 0, %889 ]
  %901 = phi i8* [ %912, %910 ], [ %886, %889 ]
  %902 = phi i8* [ %913, %910 ], [ %891, %889 ]
  %903 = phi i8* [ %911, %910 ], [ %892, %889 ]
  br i1 %882, label %916, label %910

904:                                              ; preds = %910, %889
  %905 = phi i8* [ %892, %889 ], [ %911, %910 ]
  %906 = phi i8* [ %891, %889 ], [ %913, %910 ]
  %907 = phi i8* [ %886, %889 ], [ %912, %910 ]
  %908 = add nuw nsw i32 %890, 1
  %909 = icmp eq i32 %908, %864
  br i1 %909, label %893, label %889

910:                                              ; preds = %916, %899
  %911 = phi i8* [ %903, %899 ], [ %921, %916 ]
  %912 = phi i8* [ %901, %899 ], [ %920, %916 ]
  %913 = getelementptr inbounds i8, i8* %902, i64 %883
  %914 = add nuw nsw i32 %900, 1
  %915 = icmp eq i32 %914, %866
  br i1 %915, label %904, label %899

916:                                              ; preds = %899, %916
  %917 = phi i32 [ %922, %916 ], [ 0, %899 ]
  %918 = phi i8* [ %920, %916 ], [ %901, %899 ]
  %919 = phi i8* [ %921, %916 ], [ %903, %899 ]
  call void @_ZN6tflite13optimized_ops14AddElementwiseEiRKNS_16ArithmeticParamsEPKhS5_Ph(i32 %870, %"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %858, i8* %902, i8* %918, i8* %919) #11
  %920 = getelementptr inbounds i8, i8* %918, i64 %883
  %921 = getelementptr inbounds i8, i8* %919, i64 %883
  %922 = add nuw nsw i32 %917, 1
  %923 = icmp eq i32 %922, %868
  br i1 %923, label %910, label %916

924:                                              ; preds = %933, %874
  %925 = phi i32 [ 0, %874 ], [ %937, %933 ]
  %926 = phi i8* [ %860, %874 ], [ %936, %933 ]
  %927 = phi i8* [ %859, %874 ], [ %935, %933 ]
  %928 = phi i8* [ %842, %874 ], [ %934, %933 ]
  br i1 %875, label %929, label %933

929:                                              ; preds = %924, %939
  %930 = phi i32 [ %943, %939 ], [ 0, %924 ]
  %931 = phi i8* [ %941, %939 ], [ %927, %924 ]
  %932 = phi i8* [ %940, %939 ], [ %928, %924 ]
  br i1 %876, label %945, label %939

933:                                              ; preds = %939, %924
  %934 = phi i8* [ %928, %924 ], [ %940, %939 ]
  %935 = phi i8* [ %927, %924 ], [ %941, %939 ]
  %936 = phi i8* [ null, %924 ], [ %942, %939 ]
  %937 = add nuw nsw i32 %925, 1
  %938 = icmp eq i32 %937, %862
  br i1 %938, label %956, label %924

939:                                              ; preds = %945, %929
  %940 = phi i8* [ %932, %929 ], [ %952, %945 ]
  %941 = phi i8* [ %931, %929 ], [ %953, %945 ]
  %942 = phi i8* [ %926, %929 ], [ %951, %945 ]
  %943 = add nuw nsw i32 %930, 1
  %944 = icmp eq i32 %943, %864
  br i1 %944, label %933, label %929

945:                                              ; preds = %929, %945
  %946 = phi i32 [ %954, %945 ], [ 0, %929 ]
  %947 = phi i8* [ %951, %945 ], [ %926, %929 ]
  %948 = phi i8* [ %953, %945 ], [ %931, %929 ]
  %949 = phi i8* [ %952, %945 ], [ %932, %929 ]
  %950 = load i8, i8* %948, align 1
  call void @_ZN6tflite13optimized_ops18AddScalarBroadcastEiRKNS_16ArithmeticParamsEhPKhPh(i32 %868, %"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %858, i8 zeroext %950, i8* %947, i8* %949) #11
  %951 = getelementptr inbounds i8, i8* %947, i64 %877
  %952 = getelementptr inbounds i8, i8* %949, i64 %877
  %953 = getelementptr inbounds i8, i8* %948, i64 1
  %954 = add nuw nsw i32 %946, 1
  %955 = icmp eq i32 %954, %866
  br i1 %955, label %939, label %945

956:                                              ; preds = %933, %893, %873, %878
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %847) #11
  br label %957

957:                                              ; preds = %845, %956
  %958 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  %959 = load i32, i32* %958, align 8
  %960 = icmp sgt i32 %959, 5
  br i1 %960, label %961, label %967

961:                                              ; preds = %957
  %962 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %963 = load i32*, i32** %962, align 8
  %964 = icmp eq i32* %963, null
  br i1 %964, label %967, label %965

965:                                              ; preds = %961
  %966 = bitcast i32* %963 to i8*
  call void @_ZdaPv(i8* %966) #10
  br label %967

967:                                              ; preds = %957, %961, %965
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %809) #11
  %968 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  %969 = load i32, i32* %968, align 8
  %970 = icmp sgt i32 %969, 5
  br i1 %970, label %971, label %977

971:                                              ; preds = %967
  %972 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %973 = load i32*, i32** %972, align 8
  %974 = icmp eq i32* %973, null
  br i1 %974, label %977, label %975

975:                                              ; preds = %971
  %976 = bitcast i32* %973 to i8*
  call void @_ZdaPv(i8* %976) #10
  br label %977

977:                                              ; preds = %967, %971, %975
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %776) #11
  %978 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  %979 = load i32, i32* %978, align 8
  %980 = icmp sgt i32 %979, 5
  br i1 %980, label %981, label %1708

981:                                              ; preds = %977
  %982 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %983 = load i32*, i32** %982, align 8
  %984 = icmp eq i32* %983, null
  br i1 %984, label %1708, label %985

985:                                              ; preds = %981
  %986 = bitcast i32* %983 to i8*
  call void @_ZdaPv(i8* %986) #10
  br label %1708

987:                                              ; preds = %741
  %988 = bitcast %"class.tflite::RuntimeShape"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %988) #11
  br i1 %68, label %989, label %991

989:                                              ; preds = %987
  %990 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 0, i32* %990, align 8, !alias.scope !300
  br label %1019

991:                                              ; preds = %987
  %992 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %993 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %992, align 8, !noalias !300
  %994 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %993, i64 0, i32 0
  %995 = load i32, i32* %994, align 4, !noalias !300
  %996 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %993, i64 0, i32 1, i64 0
  %997 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 %995, i32* %997, align 8, !alias.scope !300
  %998 = icmp sgt i32 %995, 5
  br i1 %998, label %999, label %1006

999:                                              ; preds = %991
  %1000 = sext i32 %995 to i64
  %1001 = shl nsw i64 %1000, 2
  %1002 = call i8* @_Znam(i64 %1001) #10, !noalias !300
  %1003 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %1004 = bitcast i32** %1003 to i8**
  store i8* %1002, i8** %1004, align 8, !alias.scope !300
  %1005 = bitcast i8* %1002 to i32*
  br label %1011

1006:                                             ; preds = %991
  %1007 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1
  %1008 = bitcast %union.anon* %1007 to i32*
  %1009 = sext i32 %995 to i64
  %1010 = shl nsw i64 %1009, 2
  br label %1011

1011:                                             ; preds = %1006, %999
  %1012 = phi i64 [ %1001, %999 ], [ %1010, %1006 ]
  %1013 = phi i32* [ %1005, %999 ], [ %1008, %1006 ]
  %1014 = bitcast i32* %1013 to i8*
  %1015 = bitcast i32* %996 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1014, i8* align 4 %1015, i64 %1012, i1 false) #11
  %1016 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %1017 = bitcast %union.TfLitePtrUnion* %1016 to i8**
  %1018 = load i8*, i8** %1017, align 8
  br label %1019

1019:                                             ; preds = %989, %1011
  %1020 = phi i32 [ %995, %1011 ], [ 0, %989 ]
  %1021 = phi i8* [ %1018, %1011 ], [ null, %989 ]
  %1022 = bitcast %"class.tflite::RuntimeShape"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1022) #11
  br i1 %98, label %1023, label %1025

1023:                                             ; preds = %1019
  %1024 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 0, i32* %1024, align 8, !alias.scope !303
  br label %1053

1025:                                             ; preds = %1019
  %1026 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %1027 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1026, align 8, !noalias !303
  %1028 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1027, i64 0, i32 0
  %1029 = load i32, i32* %1028, align 4, !noalias !303
  %1030 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1027, i64 0, i32 1, i64 0
  %1031 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 %1029, i32* %1031, align 8, !alias.scope !303
  %1032 = icmp sgt i32 %1029, 5
  br i1 %1032, label %1033, label %1040

1033:                                             ; preds = %1025
  %1034 = sext i32 %1029 to i64
  %1035 = shl nsw i64 %1034, 2
  %1036 = call i8* @_Znam(i64 %1035) #10, !noalias !303
  %1037 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %1038 = bitcast i32** %1037 to i8**
  store i8* %1036, i8** %1038, align 8, !alias.scope !303
  %1039 = bitcast i8* %1036 to i32*
  br label %1045

1040:                                             ; preds = %1025
  %1041 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  %1042 = bitcast %union.anon* %1041 to i32*
  %1043 = sext i32 %1029 to i64
  %1044 = shl nsw i64 %1043, 2
  br label %1045

1045:                                             ; preds = %1040, %1033
  %1046 = phi i64 [ %1035, %1033 ], [ %1044, %1040 ]
  %1047 = phi i32* [ %1039, %1033 ], [ %1042, %1040 ]
  %1048 = bitcast i32* %1047 to i8*
  %1049 = bitcast i32* %1030 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1048, i8* align 4 %1049, i64 %1046, i1 false) #11
  %1050 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %1051 = bitcast %union.TfLitePtrUnion* %1050 to i8**
  %1052 = load i8*, i8** %1051, align 8
  br label %1053

1053:                                             ; preds = %1023, %1045
  %1054 = phi i32 [ %1029, %1045 ], [ 0, %1023 ]
  %1055 = phi i8* [ %1052, %1045 ], [ null, %1023 ]
  %1056 = bitcast %"class.tflite::RuntimeShape"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1056) #11
  %1057 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %1057, label %1058, label %1060

1058:                                             ; preds = %1053
  %1059 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 0, i32* %1059, align 8, !alias.scope !306
  br label %1088

1060:                                             ; preds = %1053
  %1061 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %1062 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1061, align 8, !noalias !306
  %1063 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1062, i64 0, i32 0
  %1064 = load i32, i32* %1063, align 4, !noalias !306
  %1065 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1062, i64 0, i32 1, i64 0
  %1066 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 %1064, i32* %1066, align 8, !alias.scope !306
  %1067 = icmp sgt i32 %1064, 5
  br i1 %1067, label %1068, label %1075

1068:                                             ; preds = %1060
  %1069 = sext i32 %1064 to i64
  %1070 = shl nsw i64 %1069, 2
  %1071 = call i8* @_Znam(i64 %1070) #10, !noalias !306
  %1072 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %1073 = bitcast i32** %1072 to i8**
  store i8* %1071, i8** %1073, align 8, !alias.scope !306
  %1074 = bitcast i8* %1071 to i32*
  br label %1080

1075:                                             ; preds = %1060
  %1076 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1
  %1077 = bitcast %union.anon* %1076 to i32*
  %1078 = sext i32 %1064 to i64
  %1079 = shl nsw i64 %1078, 2
  br label %1080

1080:                                             ; preds = %1075, %1068
  %1081 = phi i64 [ %1070, %1068 ], [ %1079, %1075 ]
  %1082 = phi i32* [ %1074, %1068 ], [ %1077, %1075 ]
  %1083 = bitcast i32* %1082 to i8*
  %1084 = bitcast i32* %1065 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1083, i8* align 4 %1084, i64 %1081, i1 false) #11
  %1085 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %1086 = bitcast %union.TfLitePtrUnion* %1085 to i8**
  %1087 = load i8*, i8** %1086, align 8
  br label %1088

1088:                                             ; preds = %1058, %1080
  %1089 = phi i32 [ %1064, %1080 ], [ 0, %1058 ]
  %1090 = phi i8* [ %1087, %1080 ], [ null, %1058 ]
  %1091 = icmp sgt i32 %1020, 5
  %1092 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1
  br i1 %1091, label %1093, label %1096

1093:                                             ; preds = %1088
  %1094 = getelementptr inbounds %union.anon, %union.anon* %1092, i64 0, i32 0
  %1095 = load i32*, i32** %1094, align 8
  br label %1099

1096:                                             ; preds = %1088
  %1097 = bitcast %union.anon* %1092 to i32*
  %1098 = icmp sgt i32 %1020, 0
  br i1 %1098, label %1099, label %1199

1099:                                             ; preds = %1096, %1093
  %1100 = phi i32* [ %1095, %1093 ], [ %1097, %1096 ]
  %1101 = zext i32 %1020 to i64
  %1102 = icmp ult i32 %1020, 8
  br i1 %1102, label %1188, label %1103

1103:                                             ; preds = %1099
  %1104 = and i64 %1101, 4294967288
  %1105 = add nsw i64 %1104, -8
  %1106 = lshr exact i64 %1105, 3
  %1107 = add nuw nsw i64 %1106, 1
  %1108 = and i64 %1107, 3
  %1109 = icmp ult i64 %1105, 24
  br i1 %1109, label %1155, label %1110

1110:                                             ; preds = %1103
  %1111 = sub nsw i64 %1107, %1108
  br label %1112

1112:                                             ; preds = %1112, %1110
  %1113 = phi i64 [ 0, %1110 ], [ %1152, %1112 ]
  %1114 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1110 ], [ %1150, %1112 ]
  %1115 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1110 ], [ %1151, %1112 ]
  %1116 = phi i64 [ %1111, %1110 ], [ %1153, %1112 ]
  %1117 = getelementptr inbounds i32, i32* %1100, i64 %1113
  %1118 = bitcast i32* %1117 to <4 x i32>*
  %1119 = load <4 x i32>, <4 x i32>* %1118, align 4
  %1120 = getelementptr inbounds i32, i32* %1117, i64 4
  %1121 = bitcast i32* %1120 to <4 x i32>*
  %1122 = load <4 x i32>, <4 x i32>* %1121, align 4
  %1123 = mul nsw <4 x i32> %1119, %1114
  %1124 = mul nsw <4 x i32> %1122, %1115
  %1125 = or i64 %1113, 8
  %1126 = getelementptr inbounds i32, i32* %1100, i64 %1125
  %1127 = bitcast i32* %1126 to <4 x i32>*
  %1128 = load <4 x i32>, <4 x i32>* %1127, align 4
  %1129 = getelementptr inbounds i32, i32* %1126, i64 4
  %1130 = bitcast i32* %1129 to <4 x i32>*
  %1131 = load <4 x i32>, <4 x i32>* %1130, align 4
  %1132 = mul nsw <4 x i32> %1128, %1123
  %1133 = mul nsw <4 x i32> %1131, %1124
  %1134 = or i64 %1113, 16
  %1135 = getelementptr inbounds i32, i32* %1100, i64 %1134
  %1136 = bitcast i32* %1135 to <4 x i32>*
  %1137 = load <4 x i32>, <4 x i32>* %1136, align 4
  %1138 = getelementptr inbounds i32, i32* %1135, i64 4
  %1139 = bitcast i32* %1138 to <4 x i32>*
  %1140 = load <4 x i32>, <4 x i32>* %1139, align 4
  %1141 = mul nsw <4 x i32> %1137, %1132
  %1142 = mul nsw <4 x i32> %1140, %1133
  %1143 = or i64 %1113, 24
  %1144 = getelementptr inbounds i32, i32* %1100, i64 %1143
  %1145 = bitcast i32* %1144 to <4 x i32>*
  %1146 = load <4 x i32>, <4 x i32>* %1145, align 4
  %1147 = getelementptr inbounds i32, i32* %1144, i64 4
  %1148 = bitcast i32* %1147 to <4 x i32>*
  %1149 = load <4 x i32>, <4 x i32>* %1148, align 4
  %1150 = mul nsw <4 x i32> %1146, %1141
  %1151 = mul nsw <4 x i32> %1149, %1142
  %1152 = add i64 %1113, 32
  %1153 = add i64 %1116, -4
  %1154 = icmp eq i64 %1153, 0
  br i1 %1154, label %1155, label %1112, !llvm.loop !309

1155:                                             ; preds = %1112, %1103
  %1156 = phi <4 x i32> [ undef, %1103 ], [ %1150, %1112 ]
  %1157 = phi <4 x i32> [ undef, %1103 ], [ %1151, %1112 ]
  %1158 = phi i64 [ 0, %1103 ], [ %1152, %1112 ]
  %1159 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1103 ], [ %1150, %1112 ]
  %1160 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1103 ], [ %1151, %1112 ]
  %1161 = icmp eq i64 %1108, 0
  br i1 %1161, label %1178, label %1162

1162:                                             ; preds = %1155, %1162
  %1163 = phi i64 [ %1175, %1162 ], [ %1158, %1155 ]
  %1164 = phi <4 x i32> [ %1173, %1162 ], [ %1159, %1155 ]
  %1165 = phi <4 x i32> [ %1174, %1162 ], [ %1160, %1155 ]
  %1166 = phi i64 [ %1176, %1162 ], [ %1108, %1155 ]
  %1167 = getelementptr inbounds i32, i32* %1100, i64 %1163
  %1168 = bitcast i32* %1167 to <4 x i32>*
  %1169 = load <4 x i32>, <4 x i32>* %1168, align 4
  %1170 = getelementptr inbounds i32, i32* %1167, i64 4
  %1171 = bitcast i32* %1170 to <4 x i32>*
  %1172 = load <4 x i32>, <4 x i32>* %1171, align 4
  %1173 = mul nsw <4 x i32> %1169, %1164
  %1174 = mul nsw <4 x i32> %1172, %1165
  %1175 = add i64 %1163, 8
  %1176 = add i64 %1166, -1
  %1177 = icmp eq i64 %1176, 0
  br i1 %1177, label %1178, label %1162, !llvm.loop !310

1178:                                             ; preds = %1162, %1155
  %1179 = phi <4 x i32> [ %1156, %1155 ], [ %1173, %1162 ]
  %1180 = phi <4 x i32> [ %1157, %1155 ], [ %1174, %1162 ]
  %1181 = mul <4 x i32> %1180, %1179
  %1182 = shufflevector <4 x i32> %1181, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1183 = mul <4 x i32> %1181, %1182
  %1184 = shufflevector <4 x i32> %1183, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1185 = mul <4 x i32> %1183, %1184
  %1186 = extractelement <4 x i32> %1185, i32 0
  %1187 = icmp eq i64 %1104, %1101
  br i1 %1187, label %1199, label %1188

1188:                                             ; preds = %1178, %1099
  %1189 = phi i64 [ 0, %1099 ], [ %1104, %1178 ]
  %1190 = phi i32 [ 1, %1099 ], [ %1186, %1178 ]
  br label %1191

1191:                                             ; preds = %1188, %1191
  %1192 = phi i64 [ %1197, %1191 ], [ %1189, %1188 ]
  %1193 = phi i32 [ %1196, %1191 ], [ %1190, %1188 ]
  %1194 = getelementptr inbounds i32, i32* %1100, i64 %1192
  %1195 = load i32, i32* %1194, align 4
  %1196 = mul nsw i32 %1195, %1193
  %1197 = add nuw nsw i64 %1192, 1
  %1198 = icmp eq i64 %1197, %1101
  br i1 %1198, label %1199, label %1191, !llvm.loop !311

1199:                                             ; preds = %1191, %1178, %1096
  %1200 = phi i32 [ 1, %1096 ], [ %1186, %1178 ], [ %1196, %1191 ]
  %1201 = icmp sgt i32 %1054, 5
  %1202 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  br i1 %1201, label %1203, label %1206

1203:                                             ; preds = %1199
  %1204 = getelementptr inbounds %union.anon, %union.anon* %1202, i64 0, i32 0
  %1205 = load i32*, i32** %1204, align 8
  br label %1209

1206:                                             ; preds = %1199
  %1207 = bitcast %union.anon* %1202 to i32*
  %1208 = icmp sgt i32 %1054, 0
  br i1 %1208, label %1209, label %1309

1209:                                             ; preds = %1206, %1203
  %1210 = phi i32* [ %1205, %1203 ], [ %1207, %1206 ]
  %1211 = zext i32 %1054 to i64
  %1212 = icmp ult i32 %1054, 8
  br i1 %1212, label %1298, label %1213

1213:                                             ; preds = %1209
  %1214 = and i64 %1211, 4294967288
  %1215 = add nsw i64 %1214, -8
  %1216 = lshr exact i64 %1215, 3
  %1217 = add nuw nsw i64 %1216, 1
  %1218 = and i64 %1217, 3
  %1219 = icmp ult i64 %1215, 24
  br i1 %1219, label %1265, label %1220

1220:                                             ; preds = %1213
  %1221 = sub nsw i64 %1217, %1218
  br label %1222

1222:                                             ; preds = %1222, %1220
  %1223 = phi i64 [ 0, %1220 ], [ %1262, %1222 ]
  %1224 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1220 ], [ %1260, %1222 ]
  %1225 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1220 ], [ %1261, %1222 ]
  %1226 = phi i64 [ %1221, %1220 ], [ %1263, %1222 ]
  %1227 = getelementptr inbounds i32, i32* %1210, i64 %1223
  %1228 = bitcast i32* %1227 to <4 x i32>*
  %1229 = load <4 x i32>, <4 x i32>* %1228, align 4
  %1230 = getelementptr inbounds i32, i32* %1227, i64 4
  %1231 = bitcast i32* %1230 to <4 x i32>*
  %1232 = load <4 x i32>, <4 x i32>* %1231, align 4
  %1233 = mul nsw <4 x i32> %1229, %1224
  %1234 = mul nsw <4 x i32> %1232, %1225
  %1235 = or i64 %1223, 8
  %1236 = getelementptr inbounds i32, i32* %1210, i64 %1235
  %1237 = bitcast i32* %1236 to <4 x i32>*
  %1238 = load <4 x i32>, <4 x i32>* %1237, align 4
  %1239 = getelementptr inbounds i32, i32* %1236, i64 4
  %1240 = bitcast i32* %1239 to <4 x i32>*
  %1241 = load <4 x i32>, <4 x i32>* %1240, align 4
  %1242 = mul nsw <4 x i32> %1238, %1233
  %1243 = mul nsw <4 x i32> %1241, %1234
  %1244 = or i64 %1223, 16
  %1245 = getelementptr inbounds i32, i32* %1210, i64 %1244
  %1246 = bitcast i32* %1245 to <4 x i32>*
  %1247 = load <4 x i32>, <4 x i32>* %1246, align 4
  %1248 = getelementptr inbounds i32, i32* %1245, i64 4
  %1249 = bitcast i32* %1248 to <4 x i32>*
  %1250 = load <4 x i32>, <4 x i32>* %1249, align 4
  %1251 = mul nsw <4 x i32> %1247, %1242
  %1252 = mul nsw <4 x i32> %1250, %1243
  %1253 = or i64 %1223, 24
  %1254 = getelementptr inbounds i32, i32* %1210, i64 %1253
  %1255 = bitcast i32* %1254 to <4 x i32>*
  %1256 = load <4 x i32>, <4 x i32>* %1255, align 4
  %1257 = getelementptr inbounds i32, i32* %1254, i64 4
  %1258 = bitcast i32* %1257 to <4 x i32>*
  %1259 = load <4 x i32>, <4 x i32>* %1258, align 4
  %1260 = mul nsw <4 x i32> %1256, %1251
  %1261 = mul nsw <4 x i32> %1259, %1252
  %1262 = add i64 %1223, 32
  %1263 = add i64 %1226, -4
  %1264 = icmp eq i64 %1263, 0
  br i1 %1264, label %1265, label %1222, !llvm.loop !312

1265:                                             ; preds = %1222, %1213
  %1266 = phi <4 x i32> [ undef, %1213 ], [ %1260, %1222 ]
  %1267 = phi <4 x i32> [ undef, %1213 ], [ %1261, %1222 ]
  %1268 = phi i64 [ 0, %1213 ], [ %1262, %1222 ]
  %1269 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1213 ], [ %1260, %1222 ]
  %1270 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1213 ], [ %1261, %1222 ]
  %1271 = icmp eq i64 %1218, 0
  br i1 %1271, label %1288, label %1272

1272:                                             ; preds = %1265, %1272
  %1273 = phi i64 [ %1285, %1272 ], [ %1268, %1265 ]
  %1274 = phi <4 x i32> [ %1283, %1272 ], [ %1269, %1265 ]
  %1275 = phi <4 x i32> [ %1284, %1272 ], [ %1270, %1265 ]
  %1276 = phi i64 [ %1286, %1272 ], [ %1218, %1265 ]
  %1277 = getelementptr inbounds i32, i32* %1210, i64 %1273
  %1278 = bitcast i32* %1277 to <4 x i32>*
  %1279 = load <4 x i32>, <4 x i32>* %1278, align 4
  %1280 = getelementptr inbounds i32, i32* %1277, i64 4
  %1281 = bitcast i32* %1280 to <4 x i32>*
  %1282 = load <4 x i32>, <4 x i32>* %1281, align 4
  %1283 = mul nsw <4 x i32> %1279, %1274
  %1284 = mul nsw <4 x i32> %1282, %1275
  %1285 = add i64 %1273, 8
  %1286 = add i64 %1276, -1
  %1287 = icmp eq i64 %1286, 0
  br i1 %1287, label %1288, label %1272, !llvm.loop !313

1288:                                             ; preds = %1272, %1265
  %1289 = phi <4 x i32> [ %1266, %1265 ], [ %1283, %1272 ]
  %1290 = phi <4 x i32> [ %1267, %1265 ], [ %1284, %1272 ]
  %1291 = mul <4 x i32> %1290, %1289
  %1292 = shufflevector <4 x i32> %1291, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1293 = mul <4 x i32> %1291, %1292
  %1294 = shufflevector <4 x i32> %1293, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1295 = mul <4 x i32> %1293, %1294
  %1296 = extractelement <4 x i32> %1295, i32 0
  %1297 = icmp eq i64 %1214, %1211
  br i1 %1297, label %1309, label %1298

1298:                                             ; preds = %1288, %1209
  %1299 = phi i64 [ 0, %1209 ], [ %1214, %1288 ]
  %1300 = phi i32 [ 1, %1209 ], [ %1296, %1288 ]
  br label %1301

1301:                                             ; preds = %1298, %1301
  %1302 = phi i64 [ %1307, %1301 ], [ %1299, %1298 ]
  %1303 = phi i32 [ %1306, %1301 ], [ %1300, %1298 ]
  %1304 = getelementptr inbounds i32, i32* %1210, i64 %1302
  %1305 = load i32, i32* %1304, align 4
  %1306 = mul nsw i32 %1305, %1303
  %1307 = add nuw nsw i64 %1302, 1
  %1308 = icmp eq i64 %1307, %1211
  br i1 %1308, label %1309, label %1301, !llvm.loop !314

1309:                                             ; preds = %1301, %1288, %1206
  %1310 = phi i32 [ 1, %1206 ], [ %1296, %1288 ], [ %1306, %1301 ]
  %1311 = icmp sgt i32 %1089, 5
  %1312 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1
  br i1 %1311, label %1313, label %1316

1313:                                             ; preds = %1309
  %1314 = getelementptr inbounds %union.anon, %union.anon* %1312, i64 0, i32 0
  %1315 = load i32*, i32** %1314, align 8
  br label %1319

1316:                                             ; preds = %1309
  %1317 = bitcast %union.anon* %1312 to i32*
  %1318 = icmp sgt i32 %1089, 0
  br i1 %1318, label %1319, label %1419

1319:                                             ; preds = %1316, %1313
  %1320 = phi i32* [ %1315, %1313 ], [ %1317, %1316 ]
  %1321 = zext i32 %1089 to i64
  %1322 = icmp ult i32 %1089, 8
  br i1 %1322, label %1408, label %1323

1323:                                             ; preds = %1319
  %1324 = and i64 %1321, 4294967288
  %1325 = add nsw i64 %1324, -8
  %1326 = lshr exact i64 %1325, 3
  %1327 = add nuw nsw i64 %1326, 1
  %1328 = and i64 %1327, 3
  %1329 = icmp ult i64 %1325, 24
  br i1 %1329, label %1375, label %1330

1330:                                             ; preds = %1323
  %1331 = sub nsw i64 %1327, %1328
  br label %1332

1332:                                             ; preds = %1332, %1330
  %1333 = phi i64 [ 0, %1330 ], [ %1372, %1332 ]
  %1334 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1330 ], [ %1370, %1332 ]
  %1335 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1330 ], [ %1371, %1332 ]
  %1336 = phi i64 [ %1331, %1330 ], [ %1373, %1332 ]
  %1337 = getelementptr inbounds i32, i32* %1320, i64 %1333
  %1338 = bitcast i32* %1337 to <4 x i32>*
  %1339 = load <4 x i32>, <4 x i32>* %1338, align 4
  %1340 = getelementptr inbounds i32, i32* %1337, i64 4
  %1341 = bitcast i32* %1340 to <4 x i32>*
  %1342 = load <4 x i32>, <4 x i32>* %1341, align 4
  %1343 = mul nsw <4 x i32> %1339, %1334
  %1344 = mul nsw <4 x i32> %1342, %1335
  %1345 = or i64 %1333, 8
  %1346 = getelementptr inbounds i32, i32* %1320, i64 %1345
  %1347 = bitcast i32* %1346 to <4 x i32>*
  %1348 = load <4 x i32>, <4 x i32>* %1347, align 4
  %1349 = getelementptr inbounds i32, i32* %1346, i64 4
  %1350 = bitcast i32* %1349 to <4 x i32>*
  %1351 = load <4 x i32>, <4 x i32>* %1350, align 4
  %1352 = mul nsw <4 x i32> %1348, %1343
  %1353 = mul nsw <4 x i32> %1351, %1344
  %1354 = or i64 %1333, 16
  %1355 = getelementptr inbounds i32, i32* %1320, i64 %1354
  %1356 = bitcast i32* %1355 to <4 x i32>*
  %1357 = load <4 x i32>, <4 x i32>* %1356, align 4
  %1358 = getelementptr inbounds i32, i32* %1355, i64 4
  %1359 = bitcast i32* %1358 to <4 x i32>*
  %1360 = load <4 x i32>, <4 x i32>* %1359, align 4
  %1361 = mul nsw <4 x i32> %1357, %1352
  %1362 = mul nsw <4 x i32> %1360, %1353
  %1363 = or i64 %1333, 24
  %1364 = getelementptr inbounds i32, i32* %1320, i64 %1363
  %1365 = bitcast i32* %1364 to <4 x i32>*
  %1366 = load <4 x i32>, <4 x i32>* %1365, align 4
  %1367 = getelementptr inbounds i32, i32* %1364, i64 4
  %1368 = bitcast i32* %1367 to <4 x i32>*
  %1369 = load <4 x i32>, <4 x i32>* %1368, align 4
  %1370 = mul nsw <4 x i32> %1366, %1361
  %1371 = mul nsw <4 x i32> %1369, %1362
  %1372 = add i64 %1333, 32
  %1373 = add i64 %1336, -4
  %1374 = icmp eq i64 %1373, 0
  br i1 %1374, label %1375, label %1332, !llvm.loop !315

1375:                                             ; preds = %1332, %1323
  %1376 = phi <4 x i32> [ undef, %1323 ], [ %1370, %1332 ]
  %1377 = phi <4 x i32> [ undef, %1323 ], [ %1371, %1332 ]
  %1378 = phi i64 [ 0, %1323 ], [ %1372, %1332 ]
  %1379 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1323 ], [ %1370, %1332 ]
  %1380 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1323 ], [ %1371, %1332 ]
  %1381 = icmp eq i64 %1328, 0
  br i1 %1381, label %1398, label %1382

1382:                                             ; preds = %1375, %1382
  %1383 = phi i64 [ %1395, %1382 ], [ %1378, %1375 ]
  %1384 = phi <4 x i32> [ %1393, %1382 ], [ %1379, %1375 ]
  %1385 = phi <4 x i32> [ %1394, %1382 ], [ %1380, %1375 ]
  %1386 = phi i64 [ %1396, %1382 ], [ %1328, %1375 ]
  %1387 = getelementptr inbounds i32, i32* %1320, i64 %1383
  %1388 = bitcast i32* %1387 to <4 x i32>*
  %1389 = load <4 x i32>, <4 x i32>* %1388, align 4
  %1390 = getelementptr inbounds i32, i32* %1387, i64 4
  %1391 = bitcast i32* %1390 to <4 x i32>*
  %1392 = load <4 x i32>, <4 x i32>* %1391, align 4
  %1393 = mul nsw <4 x i32> %1389, %1384
  %1394 = mul nsw <4 x i32> %1392, %1385
  %1395 = add i64 %1383, 8
  %1396 = add i64 %1386, -1
  %1397 = icmp eq i64 %1396, 0
  br i1 %1397, label %1398, label %1382, !llvm.loop !316

1398:                                             ; preds = %1382, %1375
  %1399 = phi <4 x i32> [ %1376, %1375 ], [ %1393, %1382 ]
  %1400 = phi <4 x i32> [ %1377, %1375 ], [ %1394, %1382 ]
  %1401 = mul <4 x i32> %1400, %1399
  %1402 = shufflevector <4 x i32> %1401, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1403 = mul <4 x i32> %1401, %1402
  %1404 = shufflevector <4 x i32> %1403, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1405 = mul <4 x i32> %1403, %1404
  %1406 = extractelement <4 x i32> %1405, i32 0
  %1407 = icmp eq i64 %1324, %1321
  br i1 %1407, label %1419, label %1408

1408:                                             ; preds = %1398, %1319
  %1409 = phi i64 [ 0, %1319 ], [ %1324, %1398 ]
  %1410 = phi i32 [ 1, %1319 ], [ %1406, %1398 ]
  br label %1411

1411:                                             ; preds = %1408, %1411
  %1412 = phi i64 [ %1417, %1411 ], [ %1409, %1408 ]
  %1413 = phi i32 [ %1416, %1411 ], [ %1410, %1408 ]
  %1414 = getelementptr inbounds i32, i32* %1320, i64 %1412
  %1415 = load i32, i32* %1414, align 4
  %1416 = mul nsw i32 %1415, %1413
  %1417 = add nuw nsw i64 %1412, 1
  %1418 = icmp eq i64 %1417, %1321
  br i1 %1418, label %1419, label %1411, !llvm.loop !317

1419:                                             ; preds = %1411, %1398, %1316
  %1420 = phi i32 [ 1, %1316 ], [ %1406, %1398 ], [ %1416, %1411 ]
  %1421 = icmp eq i32 %1200, %1310
  br i1 %1421, label %1423, label %1422

1422:                                             ; preds = %1419
  call void @abort() #12
  unreachable

1423:                                             ; preds = %1419
  %1424 = icmp eq i32 %1200, %1420
  br i1 %1424, label %1426, label %1425

1425:                                             ; preds = %1423
  call void @abort() #12
  unreachable

1426:                                             ; preds = %1423
  call void @_ZN6tflite13optimized_ops14AddElementwiseEiRKNS_16ArithmeticParamsEPKhS5_Ph(i32 %1200, %"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %9, i8* %1021, i8* %1055, i8* %1090) #11
  br i1 %1311, label %1427, label %1433

1427:                                             ; preds = %1426
  %1428 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %1429 = load i32*, i32** %1428, align 8
  %1430 = icmp eq i32* %1429, null
  br i1 %1430, label %1433, label %1431

1431:                                             ; preds = %1427
  %1432 = bitcast i32* %1429 to i8*
  call void @_ZdaPv(i8* %1432) #10
  br label %1433

1433:                                             ; preds = %1426, %1427, %1431
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1056) #11
  br i1 %1201, label %1434, label %1440

1434:                                             ; preds = %1433
  %1435 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %1436 = load i32*, i32** %1435, align 8
  %1437 = icmp eq i32* %1436, null
  br i1 %1437, label %1440, label %1438

1438:                                             ; preds = %1434
  %1439 = bitcast i32* %1436 to i8*
  call void @_ZdaPv(i8* %1439) #10
  br label %1440

1440:                                             ; preds = %1433, %1434, %1438
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1022) #11
  br i1 %1091, label %1441, label %1708

1441:                                             ; preds = %1440
  %1442 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %1443 = load i32*, i32** %1442, align 8
  %1444 = icmp eq i32* %1443, null
  br i1 %1444, label %1708, label %1445

1445:                                             ; preds = %1441
  %1446 = bitcast i32* %1443 to i8*
  call void @_ZdaPv(i8* %1446) #10
  br label %1708

1447:                                             ; preds = %147
  br i1 %127, label %1448, label %1578

1448:                                             ; preds = %1447
  %1449 = bitcast %"class.tflite::RuntimeShape"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1449) #11
  br i1 %68, label %1450, label %1452

1450:                                             ; preds = %1448
  %1451 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 0, i32* %1451, align 8, !alias.scope !318
  br label %1480

1452:                                             ; preds = %1448
  %1453 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %1454 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1453, align 8, !noalias !318
  %1455 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1454, i64 0, i32 0
  %1456 = load i32, i32* %1455, align 4, !noalias !318
  %1457 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1454, i64 0, i32 1, i64 0
  %1458 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 %1456, i32* %1458, align 8, !alias.scope !318
  %1459 = icmp sgt i32 %1456, 5
  br i1 %1459, label %1460, label %1467

1460:                                             ; preds = %1452
  %1461 = sext i32 %1456 to i64
  %1462 = shl nsw i64 %1461, 2
  %1463 = call i8* @_Znam(i64 %1462) #10, !noalias !318
  %1464 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %1465 = bitcast i32** %1464 to i8**
  store i8* %1463, i8** %1465, align 8, !alias.scope !318
  %1466 = bitcast i8* %1463 to i32*
  br label %1472

1467:                                             ; preds = %1452
  %1468 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1
  %1469 = bitcast %union.anon* %1468 to i32*
  %1470 = sext i32 %1456 to i64
  %1471 = shl nsw i64 %1470, 2
  br label %1472

1472:                                             ; preds = %1467, %1460
  %1473 = phi i64 [ %1462, %1460 ], [ %1471, %1467 ]
  %1474 = phi i32* [ %1466, %1460 ], [ %1469, %1467 ]
  %1475 = bitcast i32* %1474 to i8*
  %1476 = bitcast i32* %1457 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1475, i8* align 4 %1476, i64 %1473, i1 false) #11
  %1477 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %1478 = bitcast %union.TfLitePtrUnion* %1477 to i16**
  %1479 = load i16*, i16** %1478, align 8
  br label %1480

1480:                                             ; preds = %1450, %1472
  %1481 = phi i16* [ %1479, %1472 ], [ null, %1450 ]
  %1482 = bitcast %"class.tflite::RuntimeShape"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1482) #11
  br i1 %98, label %1483, label %1485

1483:                                             ; preds = %1480
  %1484 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 0, i32* %1484, align 8, !alias.scope !321
  br label %1513

1485:                                             ; preds = %1480
  %1486 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %1487 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1486, align 8, !noalias !321
  %1488 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1487, i64 0, i32 0
  %1489 = load i32, i32* %1488, align 4, !noalias !321
  %1490 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1487, i64 0, i32 1, i64 0
  %1491 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 %1489, i32* %1491, align 8, !alias.scope !321
  %1492 = icmp sgt i32 %1489, 5
  br i1 %1492, label %1493, label %1500

1493:                                             ; preds = %1485
  %1494 = sext i32 %1489 to i64
  %1495 = shl nsw i64 %1494, 2
  %1496 = call i8* @_Znam(i64 %1495) #10, !noalias !321
  %1497 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1498 = bitcast i32** %1497 to i8**
  store i8* %1496, i8** %1498, align 8, !alias.scope !321
  %1499 = bitcast i8* %1496 to i32*
  br label %1505

1500:                                             ; preds = %1485
  %1501 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %1502 = bitcast %union.anon* %1501 to i32*
  %1503 = sext i32 %1489 to i64
  %1504 = shl nsw i64 %1503, 2
  br label %1505

1505:                                             ; preds = %1500, %1493
  %1506 = phi i64 [ %1495, %1493 ], [ %1504, %1500 ]
  %1507 = phi i32* [ %1499, %1493 ], [ %1502, %1500 ]
  %1508 = bitcast i32* %1507 to i8*
  %1509 = bitcast i32* %1490 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1508, i8* align 4 %1509, i64 %1506, i1 false) #11
  %1510 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %1511 = bitcast %union.TfLitePtrUnion* %1510 to i16**
  %1512 = load i16*, i16** %1511, align 8
  br label %1513

1513:                                             ; preds = %1483, %1505
  %1514 = phi i16* [ %1512, %1505 ], [ null, %1483 ]
  %1515 = bitcast %"class.tflite::RuntimeShape"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1515) #11
  %1516 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %1516, label %1517, label %1519

1517:                                             ; preds = %1513
  %1518 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 0, i32* %1518, align 8, !alias.scope !324
  br label %1547

1519:                                             ; preds = %1513
  %1520 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %1521 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1520, align 8, !noalias !324
  %1522 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1521, i64 0, i32 0
  %1523 = load i32, i32* %1522, align 4, !noalias !324
  %1524 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1521, i64 0, i32 1, i64 0
  %1525 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 %1523, i32* %1525, align 8, !alias.scope !324
  %1526 = icmp sgt i32 %1523, 5
  br i1 %1526, label %1527, label %1534

1527:                                             ; preds = %1519
  %1528 = sext i32 %1523 to i64
  %1529 = shl nsw i64 %1528, 2
  %1530 = call i8* @_Znam(i64 %1529) #10, !noalias !324
  %1531 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1532 = bitcast i32** %1531 to i8**
  store i8* %1530, i8** %1532, align 8, !alias.scope !324
  %1533 = bitcast i8* %1530 to i32*
  br label %1539

1534:                                             ; preds = %1519
  %1535 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1
  %1536 = bitcast %union.anon* %1535 to i32*
  %1537 = sext i32 %1523 to i64
  %1538 = shl nsw i64 %1537, 2
  br label %1539

1539:                                             ; preds = %1534, %1527
  %1540 = phi i64 [ %1529, %1527 ], [ %1538, %1534 ]
  %1541 = phi i32* [ %1533, %1527 ], [ %1536, %1534 ]
  %1542 = bitcast i32* %1541 to i8*
  %1543 = bitcast i32* %1524 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1542, i8* align 4 %1543, i64 %1540, i1 false) #11
  %1544 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %1545 = bitcast %union.TfLitePtrUnion* %1544 to i16**
  %1546 = load i16*, i16** %1545, align 8
  br label %1547

1547:                                             ; preds = %1517, %1539
  %1548 = phi i16* [ %1546, %1539 ], [ null, %1517 ]
  call void @_ZN6tflite13reference_ops16BroadcastSubSlowIsLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %24, i16* %1481, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %25, i16* %1514, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %26, i16* %1548)
  %1549 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  %1550 = load i32, i32* %1549, align 8
  %1551 = icmp sgt i32 %1550, 5
  br i1 %1551, label %1552, label %1558

1552:                                             ; preds = %1547
  %1553 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1554 = load i32*, i32** %1553, align 8
  %1555 = icmp eq i32* %1554, null
  br i1 %1555, label %1558, label %1556

1556:                                             ; preds = %1552
  %1557 = bitcast i32* %1554 to i8*
  call void @_ZdaPv(i8* %1557) #10
  br label %1558

1558:                                             ; preds = %1547, %1552, %1556
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1515) #11
  %1559 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  %1560 = load i32, i32* %1559, align 8
  %1561 = icmp sgt i32 %1560, 5
  br i1 %1561, label %1562, label %1568

1562:                                             ; preds = %1558
  %1563 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1564 = load i32*, i32** %1563, align 8
  %1565 = icmp eq i32* %1564, null
  br i1 %1565, label %1568, label %1566

1566:                                             ; preds = %1562
  %1567 = bitcast i32* %1564 to i8*
  call void @_ZdaPv(i8* %1567) #10
  br label %1568

1568:                                             ; preds = %1558, %1562, %1566
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1482) #11
  %1569 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  %1570 = load i32, i32* %1569, align 8
  %1571 = icmp sgt i32 %1570, 5
  br i1 %1571, label %1572, label %1708

1572:                                             ; preds = %1568
  %1573 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %1574 = load i32*, i32** %1573, align 8
  %1575 = icmp eq i32* %1574, null
  br i1 %1575, label %1708, label %1576

1576:                                             ; preds = %1572
  %1577 = bitcast i32* %1574 to i8*
  call void @_ZdaPv(i8* %1577) #10
  br label %1708

1578:                                             ; preds = %1447
  %1579 = bitcast %"class.tflite::RuntimeShape"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1579) #11
  br i1 %68, label %1580, label %1582

1580:                                             ; preds = %1578
  %1581 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 0, i32* %1581, align 8, !alias.scope !327
  br label %1610

1582:                                             ; preds = %1578
  %1583 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %1584 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1583, align 8, !noalias !327
  %1585 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1584, i64 0, i32 0
  %1586 = load i32, i32* %1585, align 4, !noalias !327
  %1587 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1584, i64 0, i32 1, i64 0
  %1588 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 %1586, i32* %1588, align 8, !alias.scope !327
  %1589 = icmp sgt i32 %1586, 5
  br i1 %1589, label %1590, label %1597

1590:                                             ; preds = %1582
  %1591 = sext i32 %1586 to i64
  %1592 = shl nsw i64 %1591, 2
  %1593 = call i8* @_Znam(i64 %1592) #10, !noalias !327
  %1594 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %1595 = bitcast i32** %1594 to i8**
  store i8* %1593, i8** %1595, align 8, !alias.scope !327
  %1596 = bitcast i8* %1593 to i32*
  br label %1602

1597:                                             ; preds = %1582
  %1598 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1
  %1599 = bitcast %union.anon* %1598 to i32*
  %1600 = sext i32 %1586 to i64
  %1601 = shl nsw i64 %1600, 2
  br label %1602

1602:                                             ; preds = %1597, %1590
  %1603 = phi i64 [ %1592, %1590 ], [ %1601, %1597 ]
  %1604 = phi i32* [ %1596, %1590 ], [ %1599, %1597 ]
  %1605 = bitcast i32* %1604 to i8*
  %1606 = bitcast i32* %1587 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1605, i8* align 4 %1606, i64 %1603, i1 false) #11
  %1607 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %1608 = bitcast %union.TfLitePtrUnion* %1607 to i16**
  %1609 = load i16*, i16** %1608, align 8
  br label %1610

1610:                                             ; preds = %1580, %1602
  %1611 = phi i16* [ %1609, %1602 ], [ null, %1580 ]
  %1612 = bitcast %"class.tflite::RuntimeShape"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1612) #11
  br i1 %98, label %1613, label %1615

1613:                                             ; preds = %1610
  %1614 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  store i32 0, i32* %1614, align 8, !alias.scope !330
  br label %1643

1615:                                             ; preds = %1610
  %1616 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %1617 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1616, align 8, !noalias !330
  %1618 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1617, i64 0, i32 0
  %1619 = load i32, i32* %1618, align 4, !noalias !330
  %1620 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1617, i64 0, i32 1, i64 0
  %1621 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  store i32 %1619, i32* %1621, align 8, !alias.scope !330
  %1622 = icmp sgt i32 %1619, 5
  br i1 %1622, label %1623, label %1630

1623:                                             ; preds = %1615
  %1624 = sext i32 %1619 to i64
  %1625 = shl nsw i64 %1624, 2
  %1626 = call i8* @_Znam(i64 %1625) #10, !noalias !330
  %1627 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1, i32 0
  %1628 = bitcast i32** %1627 to i8**
  store i8* %1626, i8** %1628, align 8, !alias.scope !330
  %1629 = bitcast i8* %1626 to i32*
  br label %1635

1630:                                             ; preds = %1615
  %1631 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1
  %1632 = bitcast %union.anon* %1631 to i32*
  %1633 = sext i32 %1619 to i64
  %1634 = shl nsw i64 %1633, 2
  br label %1635

1635:                                             ; preds = %1630, %1623
  %1636 = phi i64 [ %1625, %1623 ], [ %1634, %1630 ]
  %1637 = phi i32* [ %1629, %1623 ], [ %1632, %1630 ]
  %1638 = bitcast i32* %1637 to i8*
  %1639 = bitcast i32* %1620 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1638, i8* align 4 %1639, i64 %1636, i1 false) #11
  %1640 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %1641 = bitcast %union.TfLitePtrUnion* %1640 to i16**
  %1642 = load i16*, i16** %1641, align 8
  br label %1643

1643:                                             ; preds = %1613, %1635
  %1644 = phi i16* [ %1642, %1635 ], [ null, %1613 ]
  %1645 = bitcast %"class.tflite::RuntimeShape"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1645) #11
  %1646 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %1646, label %1647, label %1649

1647:                                             ; preds = %1643
  %1648 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 0, i32* %1648, align 8, !alias.scope !333
  br label %1677

1649:                                             ; preds = %1643
  %1650 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %1651 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1650, align 8, !noalias !333
  %1652 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1651, i64 0, i32 0
  %1653 = load i32, i32* %1652, align 4, !noalias !333
  %1654 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1651, i64 0, i32 1, i64 0
  %1655 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 %1653, i32* %1655, align 8, !alias.scope !333
  %1656 = icmp sgt i32 %1653, 5
  br i1 %1656, label %1657, label %1664

1657:                                             ; preds = %1649
  %1658 = sext i32 %1653 to i64
  %1659 = shl nsw i64 %1658, 2
  %1660 = call i8* @_Znam(i64 %1659) #10, !noalias !333
  %1661 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %1662 = bitcast i32** %1661 to i8**
  store i8* %1660, i8** %1662, align 8, !alias.scope !333
  %1663 = bitcast i8* %1660 to i32*
  br label %1669

1664:                                             ; preds = %1649
  %1665 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1
  %1666 = bitcast %union.anon* %1665 to i32*
  %1667 = sext i32 %1653 to i64
  %1668 = shl nsw i64 %1667, 2
  br label %1669

1669:                                             ; preds = %1664, %1657
  %1670 = phi i64 [ %1659, %1657 ], [ %1668, %1664 ]
  %1671 = phi i32* [ %1663, %1657 ], [ %1666, %1664 ]
  %1672 = bitcast i32* %1671 to i8*
  %1673 = bitcast i32* %1654 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1672, i8* align 4 %1673, i64 %1670, i1 false) #11
  %1674 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %1675 = bitcast %union.TfLitePtrUnion* %1674 to i16**
  %1676 = load i16*, i16** %1675, align 8
  br label %1677

1677:                                             ; preds = %1647, %1669
  %1678 = phi i16* [ %1676, %1669 ], [ null, %1647 ]
  call void @_ZN6tflite13reference_ops5Sub16ERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKsS6_S8_S6_Ps(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %27, i16* %1611, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %28, i16* %1644, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %29, i16* %1678)
  %1679 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  %1680 = load i32, i32* %1679, align 8
  %1681 = icmp sgt i32 %1680, 5
  br i1 %1681, label %1682, label %1688

1682:                                             ; preds = %1677
  %1683 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %1684 = load i32*, i32** %1683, align 8
  %1685 = icmp eq i32* %1684, null
  br i1 %1685, label %1688, label %1686

1686:                                             ; preds = %1682
  %1687 = bitcast i32* %1684 to i8*
  call void @_ZdaPv(i8* %1687) #10
  br label %1688

1688:                                             ; preds = %1677, %1682, %1686
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1645) #11
  %1689 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  %1690 = load i32, i32* %1689, align 8
  %1691 = icmp sgt i32 %1690, 5
  br i1 %1691, label %1692, label %1698

1692:                                             ; preds = %1688
  %1693 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1, i32 0
  %1694 = load i32*, i32** %1693, align 8
  %1695 = icmp eq i32* %1694, null
  br i1 %1695, label %1698, label %1696

1696:                                             ; preds = %1692
  %1697 = bitcast i32* %1694 to i8*
  call void @_ZdaPv(i8* %1697) #10
  br label %1698

1698:                                             ; preds = %1688, %1692, %1696
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1612) #11
  %1699 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  %1700 = load i32, i32* %1699, align 8
  %1701 = icmp sgt i32 %1700, 5
  br i1 %1701, label %1702, label %1708

1702:                                             ; preds = %1698
  %1703 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %1704 = load i32*, i32** %1703, align 8
  %1705 = icmp eq i32* %1704, null
  br i1 %1705, label %1708, label %1706

1706:                                             ; preds = %1702
  %1707 = bitcast i32* %1704 to i8*
  call void @_ZdaPv(i8* %1707) #10
  br label %1708

1708:                                             ; preds = %1706, %1702, %1698, %1576, %1572, %1568, %1445, %1441, %1440, %985, %981, %977, %739, %735, %734, %279, %275, %271
  %1709 = phi i8* [ %152, %271 ], [ %152, %275 ], [ %152, %279 ], [ %282, %734 ], [ %282, %735 ], [ %282, %739 ], [ %743, %977 ], [ %743, %981 ], [ %743, %985 ], [ %988, %1440 ], [ %988, %1441 ], [ %988, %1445 ], [ %1449, %1568 ], [ %1449, %1572 ], [ %1449, %1576 ], [ %1579, %1698 ], [ %1579, %1702 ], [ %1579, %1706 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1709) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %30) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE1EiEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteSubParams*, %"struct.tflite::ops::builtin::sub::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, i1 zeroext, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %9 = alloca %"struct.tflite::ArithmeticParams", align 4
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = getelementptr inbounds %struct.TfLiteSubParams, %struct.TfLiteSubParams* %2, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, -1
  %19 = icmp ult i32 %18, 3
  br i1 %19, label %20, label %27

20:                                               ; preds = %8
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE2EiEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_, i64 0, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %18 to i64
  %25 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE2EiEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_.46, i64 0, i64 %24
  %26 = load i32, i32* %25, align 4
  br label %27

27:                                               ; preds = %8, %20
  %28 = phi i32 [ %23, %20 ], [ -2147483648, %8 ]
  %29 = phi i32 [ %26, %20 ], [ 2147483647, %8 ]
  %30 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %30) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3sub13EvalQuantizedILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.op_params, i64 0, i32 0), i64 80, i1 false)
  %31 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 11
  store i32 %28, i32* %31, align 4
  %32 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 12
  store i32 %29, i32* %32, align 4
  br i1 %6, label %33, label %162

33:                                               ; preds = %27
  %34 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #11
  %35 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %37, align 8, !alias.scope !336
  br label %65

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %40 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %39, align 8, !noalias !336
  %41 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 4, !noalias !336
  %43 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %40, i64 0, i32 1, i64 0
  %44 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %42, i32* %44, align 8, !alias.scope !336
  %45 = icmp sgt i32 %42, 5
  br i1 %45, label %46, label %53

46:                                               ; preds = %38
  %47 = sext i32 %42 to i64
  %48 = shl nsw i64 %47, 2
  %49 = tail call i8* @_Znam(i64 %48) #10, !noalias !336
  %50 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %51 = bitcast i32** %50 to i8**
  store i8* %49, i8** %51, align 8, !alias.scope !336
  %52 = bitcast i8* %49 to i32*
  br label %58

53:                                               ; preds = %38
  %54 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %55 = bitcast %union.anon* %54 to i32*
  %56 = sext i32 %42 to i64
  %57 = shl nsw i64 %56, 2
  br label %58

58:                                               ; preds = %53, %46
  %59 = phi i64 [ %48, %46 ], [ %57, %53 ]
  %60 = phi i32* [ %52, %46 ], [ %55, %53 ]
  %61 = bitcast i32* %60 to i8*
  %62 = bitcast i32* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 4 %62, i64 %59, i1 false) #11
  %63 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %64 = load i32*, i32** %63, align 8
  br label %65

65:                                               ; preds = %36, %58
  %66 = phi i32* [ %64, %58 ], [ null, %36 ]
  %67 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #11
  %68 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %70, align 8, !alias.scope !339
  br label %98

71:                                               ; preds = %65
  %72 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %73 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %72, align 8, !noalias !339
  %74 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 0
  %75 = load i32, i32* %74, align 4, !noalias !339
  %76 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 1, i64 0
  %77 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %75, i32* %77, align 8, !alias.scope !339
  %78 = icmp sgt i32 %75, 5
  br i1 %78, label %79, label %86

79:                                               ; preds = %71
  %80 = sext i32 %75 to i64
  %81 = shl nsw i64 %80, 2
  %82 = tail call i8* @_Znam(i64 %81) #10, !noalias !339
  %83 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %84 = bitcast i32** %83 to i8**
  store i8* %82, i8** %84, align 8, !alias.scope !339
  %85 = bitcast i8* %82 to i32*
  br label %91

86:                                               ; preds = %71
  %87 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %88 = bitcast %union.anon* %87 to i32*
  %89 = sext i32 %75 to i64
  %90 = shl nsw i64 %89, 2
  br label %91

91:                                               ; preds = %86, %79
  %92 = phi i64 [ %81, %79 ], [ %90, %86 ]
  %93 = phi i32* [ %85, %79 ], [ %88, %86 ]
  %94 = bitcast i32* %93 to i8*
  %95 = bitcast i32* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 4 %95, i64 %92, i1 false) #11
  %96 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1, i32 0
  %97 = load i32*, i32** %96, align 8
  br label %98

98:                                               ; preds = %69, %91
  %99 = phi i32* [ %97, %91 ], [ null, %69 ]
  %100 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #11
  %101 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %103, align 8, !alias.scope !342
  br label %131

104:                                              ; preds = %98
  %105 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %106 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %105, align 8, !noalias !342
  %107 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %106, i64 0, i32 0
  %108 = load i32, i32* %107, align 4, !noalias !342
  %109 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %106, i64 0, i32 1, i64 0
  %110 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %108, i32* %110, align 8, !alias.scope !342
  %111 = icmp sgt i32 %108, 5
  br i1 %111, label %112, label %119

112:                                              ; preds = %104
  %113 = sext i32 %108 to i64
  %114 = shl nsw i64 %113, 2
  %115 = tail call i8* @_Znam(i64 %114) #10, !noalias !342
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %117 = bitcast i32** %116 to i8**
  store i8* %115, i8** %117, align 8, !alias.scope !342
  %118 = bitcast i8* %115 to i32*
  br label %124

119:                                              ; preds = %104
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %121 = bitcast %union.anon* %120 to i32*
  %122 = sext i32 %108 to i64
  %123 = shl nsw i64 %122, 2
  br label %124

124:                                              ; preds = %119, %112
  %125 = phi i64 [ %114, %112 ], [ %123, %119 ]
  %126 = phi i32* [ %118, %112 ], [ %121, %119 ]
  %127 = bitcast i32* %126 to i8*
  %128 = bitcast i32* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %127, i8* align 4 %128, i64 %125, i1 false) #11
  %129 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1, i32 0
  %130 = load i32*, i32** %129, align 8
  br label %131

131:                                              ; preds = %102, %124
  %132 = phi i32* [ %130, %124 ], [ null, %102 ]
  call void @_ZN6tflite13reference_ops16BroadcastSubSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKiS7_S9_S7_Pi(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i32* %66, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i32* %99, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i32* %132)
  %133 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %134 = load i32, i32* %133, align 8
  %135 = icmp sgt i32 %134, 5
  br i1 %135, label %136, label %142

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %138 = load i32*, i32** %137, align 8
  %139 = icmp eq i32* %138, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %136
  %141 = bitcast i32* %138 to i8*
  call void @_ZdaPv(i8* %141) #10
  br label %142

142:                                              ; preds = %131, %136, %140
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #11
  %143 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %144 = load i32, i32* %143, align 8
  %145 = icmp sgt i32 %144, 5
  br i1 %145, label %146, label %152

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %148 = load i32*, i32** %147, align 8
  %149 = icmp eq i32* %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %146
  %151 = bitcast i32* %148 to i8*
  call void @_ZdaPv(i8* %151) #10
  br label %152

152:                                              ; preds = %142, %146, %150
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #11
  %153 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %154 = load i32, i32* %153, align 8
  %155 = icmp sgt i32 %154, 5
  br i1 %155, label %156, label %724

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %158 = load i32*, i32** %157, align 8
  %159 = icmp eq i32* %158, null
  br i1 %159, label %724, label %160

160:                                              ; preds = %156
  %161 = bitcast i32* %158 to i8*
  call void @_ZdaPv(i8* %161) #10
  br label %724

162:                                              ; preds = %27
  %163 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %163) #11
  %164 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %164, label %165, label %167

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %166, align 8, !alias.scope !345
  br label %194

167:                                              ; preds = %162
  %168 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %169 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %168, align 8, !noalias !345
  %170 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %169, i64 0, i32 0
  %171 = load i32, i32* %170, align 4, !noalias !345
  %172 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %169, i64 0, i32 1, i64 0
  %173 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %171, i32* %173, align 8, !alias.scope !345
  %174 = icmp sgt i32 %171, 5
  br i1 %174, label %175, label %182

175:                                              ; preds = %167
  %176 = sext i32 %171 to i64
  %177 = shl nsw i64 %176, 2
  %178 = tail call i8* @_Znam(i64 %177) #10, !noalias !345
  %179 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %180 = bitcast i32** %179 to i8**
  store i8* %178, i8** %180, align 8, !alias.scope !345
  %181 = bitcast i8* %178 to i32*
  br label %187

182:                                              ; preds = %167
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %184 = bitcast %union.anon* %183 to i32*
  %185 = sext i32 %171 to i64
  %186 = shl nsw i64 %185, 2
  br label %187

187:                                              ; preds = %182, %175
  %188 = phi i64 [ %177, %175 ], [ %186, %182 ]
  %189 = phi i32* [ %181, %175 ], [ %184, %182 ]
  %190 = bitcast i32* %189 to i8*
  %191 = bitcast i32* %172 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %190, i8* align 4 %191, i64 %188, i1 false) #11
  %192 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %193 = load i32*, i32** %192, align 8
  br label %194

194:                                              ; preds = %165, %187
  %195 = phi i32 [ %171, %187 ], [ 0, %165 ]
  %196 = phi i32* [ %193, %187 ], [ null, %165 ]
  %197 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %197) #11
  %198 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %198, label %199, label %201

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %200, align 8, !alias.scope !348
  br label %228

201:                                              ; preds = %194
  %202 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %203 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %202, align 8, !noalias !348
  %204 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %203, i64 0, i32 0
  %205 = load i32, i32* %204, align 4, !noalias !348
  %206 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %203, i64 0, i32 1, i64 0
  %207 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %205, i32* %207, align 8, !alias.scope !348
  %208 = icmp sgt i32 %205, 5
  br i1 %208, label %209, label %216

209:                                              ; preds = %201
  %210 = sext i32 %205 to i64
  %211 = shl nsw i64 %210, 2
  %212 = tail call i8* @_Znam(i64 %211) #10, !noalias !348
  %213 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %214 = bitcast i32** %213 to i8**
  store i8* %212, i8** %214, align 8, !alias.scope !348
  %215 = bitcast i8* %212 to i32*
  br label %221

216:                                              ; preds = %201
  %217 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %218 = bitcast %union.anon* %217 to i32*
  %219 = sext i32 %205 to i64
  %220 = shl nsw i64 %219, 2
  br label %221

221:                                              ; preds = %216, %209
  %222 = phi i64 [ %211, %209 ], [ %220, %216 ]
  %223 = phi i32* [ %215, %209 ], [ %218, %216 ]
  %224 = bitcast i32* %223 to i8*
  %225 = bitcast i32* %206 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %224, i8* align 4 %225, i64 %222, i1 false) #11
  %226 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1, i32 0
  %227 = load i32*, i32** %226, align 8
  br label %228

228:                                              ; preds = %199, %221
  %229 = phi i32 [ %205, %221 ], [ 0, %199 ]
  %230 = phi i32* [ %227, %221 ], [ null, %199 ]
  %231 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %231) #11
  %232 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %232, label %233, label %235

233:                                              ; preds = %228
  %234 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %234, align 8, !alias.scope !351
  br label %262

235:                                              ; preds = %228
  %236 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %237 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %236, align 8, !noalias !351
  %238 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %237, i64 0, i32 0
  %239 = load i32, i32* %238, align 4, !noalias !351
  %240 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %237, i64 0, i32 1, i64 0
  %241 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %239, i32* %241, align 8, !alias.scope !351
  %242 = icmp sgt i32 %239, 5
  br i1 %242, label %243, label %250

243:                                              ; preds = %235
  %244 = sext i32 %239 to i64
  %245 = shl nsw i64 %244, 2
  %246 = tail call i8* @_Znam(i64 %245) #10, !noalias !351
  %247 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %248 = bitcast i32** %247 to i8**
  store i8* %246, i8** %248, align 8, !alias.scope !351
  %249 = bitcast i8* %246 to i32*
  br label %255

250:                                              ; preds = %235
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %252 = bitcast %union.anon* %251 to i32*
  %253 = sext i32 %239 to i64
  %254 = shl nsw i64 %253, 2
  br label %255

255:                                              ; preds = %250, %243
  %256 = phi i64 [ %245, %243 ], [ %254, %250 ]
  %257 = phi i32* [ %249, %243 ], [ %252, %250 ]
  %258 = bitcast i32* %257 to i8*
  %259 = bitcast i32* %240 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %258, i8* align 4 %259, i64 %256, i1 false) #11
  %260 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1, i32 0
  %261 = load i32*, i32** %260, align 8
  br label %262

262:                                              ; preds = %233, %255
  %263 = phi i32 [ %239, %255 ], [ 0, %233 ]
  %264 = phi i32* [ %261, %255 ], [ null, %233 ]
  %265 = icmp sgt i32 %195, 5
  %266 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  br i1 %265, label %267, label %270

267:                                              ; preds = %262
  %268 = getelementptr inbounds %union.anon, %union.anon* %266, i64 0, i32 0
  %269 = load i32*, i32** %268, align 8
  br label %273

270:                                              ; preds = %262
  %271 = bitcast %union.anon* %266 to i32*
  %272 = icmp sgt i32 %195, 0
  br i1 %272, label %273, label %373

273:                                              ; preds = %270, %267
  %274 = phi i32* [ %269, %267 ], [ %271, %270 ]
  %275 = zext i32 %195 to i64
  %276 = icmp ult i32 %195, 8
  br i1 %276, label %362, label %277

277:                                              ; preds = %273
  %278 = and i64 %275, 4294967288
  %279 = add nsw i64 %278, -8
  %280 = lshr exact i64 %279, 3
  %281 = add nuw nsw i64 %280, 1
  %282 = and i64 %281, 3
  %283 = icmp ult i64 %279, 24
  br i1 %283, label %329, label %284

284:                                              ; preds = %277
  %285 = sub nsw i64 %281, %282
  br label %286

286:                                              ; preds = %286, %284
  %287 = phi i64 [ 0, %284 ], [ %326, %286 ]
  %288 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %284 ], [ %324, %286 ]
  %289 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %284 ], [ %325, %286 ]
  %290 = phi i64 [ %285, %284 ], [ %327, %286 ]
  %291 = getelementptr inbounds i32, i32* %274, i64 %287
  %292 = bitcast i32* %291 to <4 x i32>*
  %293 = load <4 x i32>, <4 x i32>* %292, align 4
  %294 = getelementptr inbounds i32, i32* %291, i64 4
  %295 = bitcast i32* %294 to <4 x i32>*
  %296 = load <4 x i32>, <4 x i32>* %295, align 4
  %297 = mul nsw <4 x i32> %293, %288
  %298 = mul nsw <4 x i32> %296, %289
  %299 = or i64 %287, 8
  %300 = getelementptr inbounds i32, i32* %274, i64 %299
  %301 = bitcast i32* %300 to <4 x i32>*
  %302 = load <4 x i32>, <4 x i32>* %301, align 4
  %303 = getelementptr inbounds i32, i32* %300, i64 4
  %304 = bitcast i32* %303 to <4 x i32>*
  %305 = load <4 x i32>, <4 x i32>* %304, align 4
  %306 = mul nsw <4 x i32> %302, %297
  %307 = mul nsw <4 x i32> %305, %298
  %308 = or i64 %287, 16
  %309 = getelementptr inbounds i32, i32* %274, i64 %308
  %310 = bitcast i32* %309 to <4 x i32>*
  %311 = load <4 x i32>, <4 x i32>* %310, align 4
  %312 = getelementptr inbounds i32, i32* %309, i64 4
  %313 = bitcast i32* %312 to <4 x i32>*
  %314 = load <4 x i32>, <4 x i32>* %313, align 4
  %315 = mul nsw <4 x i32> %311, %306
  %316 = mul nsw <4 x i32> %314, %307
  %317 = or i64 %287, 24
  %318 = getelementptr inbounds i32, i32* %274, i64 %317
  %319 = bitcast i32* %318 to <4 x i32>*
  %320 = load <4 x i32>, <4 x i32>* %319, align 4
  %321 = getelementptr inbounds i32, i32* %318, i64 4
  %322 = bitcast i32* %321 to <4 x i32>*
  %323 = load <4 x i32>, <4 x i32>* %322, align 4
  %324 = mul nsw <4 x i32> %320, %315
  %325 = mul nsw <4 x i32> %323, %316
  %326 = add i64 %287, 32
  %327 = add i64 %290, -4
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %329, label %286, !llvm.loop !354

329:                                              ; preds = %286, %277
  %330 = phi <4 x i32> [ undef, %277 ], [ %324, %286 ]
  %331 = phi <4 x i32> [ undef, %277 ], [ %325, %286 ]
  %332 = phi i64 [ 0, %277 ], [ %326, %286 ]
  %333 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %277 ], [ %324, %286 ]
  %334 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %277 ], [ %325, %286 ]
  %335 = icmp eq i64 %282, 0
  br i1 %335, label %352, label %336

336:                                              ; preds = %329, %336
  %337 = phi i64 [ %349, %336 ], [ %332, %329 ]
  %338 = phi <4 x i32> [ %347, %336 ], [ %333, %329 ]
  %339 = phi <4 x i32> [ %348, %336 ], [ %334, %329 ]
  %340 = phi i64 [ %350, %336 ], [ %282, %329 ]
  %341 = getelementptr inbounds i32, i32* %274, i64 %337
  %342 = bitcast i32* %341 to <4 x i32>*
  %343 = load <4 x i32>, <4 x i32>* %342, align 4
  %344 = getelementptr inbounds i32, i32* %341, i64 4
  %345 = bitcast i32* %344 to <4 x i32>*
  %346 = load <4 x i32>, <4 x i32>* %345, align 4
  %347 = mul nsw <4 x i32> %343, %338
  %348 = mul nsw <4 x i32> %346, %339
  %349 = add i64 %337, 8
  %350 = add i64 %340, -1
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %352, label %336, !llvm.loop !355

352:                                              ; preds = %336, %329
  %353 = phi <4 x i32> [ %330, %329 ], [ %347, %336 ]
  %354 = phi <4 x i32> [ %331, %329 ], [ %348, %336 ]
  %355 = mul <4 x i32> %354, %353
  %356 = shufflevector <4 x i32> %355, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %357 = mul <4 x i32> %355, %356
  %358 = shufflevector <4 x i32> %357, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %359 = mul <4 x i32> %357, %358
  %360 = extractelement <4 x i32> %359, i32 0
  %361 = icmp eq i64 %278, %275
  br i1 %361, label %373, label %362

362:                                              ; preds = %352, %273
  %363 = phi i64 [ 0, %273 ], [ %278, %352 ]
  %364 = phi i32 [ 1, %273 ], [ %360, %352 ]
  br label %365

365:                                              ; preds = %362, %365
  %366 = phi i64 [ %371, %365 ], [ %363, %362 ]
  %367 = phi i32 [ %370, %365 ], [ %364, %362 ]
  %368 = getelementptr inbounds i32, i32* %274, i64 %366
  %369 = load i32, i32* %368, align 4
  %370 = mul nsw i32 %369, %367
  %371 = add nuw nsw i64 %366, 1
  %372 = icmp eq i64 %371, %275
  br i1 %372, label %373, label %365, !llvm.loop !356

373:                                              ; preds = %365, %352, %270
  %374 = phi i32 [ 1, %270 ], [ %360, %352 ], [ %370, %365 ]
  %375 = icmp sgt i32 %229, 5
  %376 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  br i1 %375, label %377, label %380

377:                                              ; preds = %373
  %378 = getelementptr inbounds %union.anon, %union.anon* %376, i64 0, i32 0
  %379 = load i32*, i32** %378, align 8
  br label %383

380:                                              ; preds = %373
  %381 = bitcast %union.anon* %376 to i32*
  %382 = icmp sgt i32 %229, 0
  br i1 %382, label %383, label %483

383:                                              ; preds = %380, %377
  %384 = phi i32* [ %379, %377 ], [ %381, %380 ]
  %385 = zext i32 %229 to i64
  %386 = icmp ult i32 %229, 8
  br i1 %386, label %472, label %387

387:                                              ; preds = %383
  %388 = and i64 %385, 4294967288
  %389 = add nsw i64 %388, -8
  %390 = lshr exact i64 %389, 3
  %391 = add nuw nsw i64 %390, 1
  %392 = and i64 %391, 3
  %393 = icmp ult i64 %389, 24
  br i1 %393, label %439, label %394

394:                                              ; preds = %387
  %395 = sub nsw i64 %391, %392
  br label %396

396:                                              ; preds = %396, %394
  %397 = phi i64 [ 0, %394 ], [ %436, %396 ]
  %398 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %394 ], [ %434, %396 ]
  %399 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %394 ], [ %435, %396 ]
  %400 = phi i64 [ %395, %394 ], [ %437, %396 ]
  %401 = getelementptr inbounds i32, i32* %384, i64 %397
  %402 = bitcast i32* %401 to <4 x i32>*
  %403 = load <4 x i32>, <4 x i32>* %402, align 4
  %404 = getelementptr inbounds i32, i32* %401, i64 4
  %405 = bitcast i32* %404 to <4 x i32>*
  %406 = load <4 x i32>, <4 x i32>* %405, align 4
  %407 = mul nsw <4 x i32> %403, %398
  %408 = mul nsw <4 x i32> %406, %399
  %409 = or i64 %397, 8
  %410 = getelementptr inbounds i32, i32* %384, i64 %409
  %411 = bitcast i32* %410 to <4 x i32>*
  %412 = load <4 x i32>, <4 x i32>* %411, align 4
  %413 = getelementptr inbounds i32, i32* %410, i64 4
  %414 = bitcast i32* %413 to <4 x i32>*
  %415 = load <4 x i32>, <4 x i32>* %414, align 4
  %416 = mul nsw <4 x i32> %412, %407
  %417 = mul nsw <4 x i32> %415, %408
  %418 = or i64 %397, 16
  %419 = getelementptr inbounds i32, i32* %384, i64 %418
  %420 = bitcast i32* %419 to <4 x i32>*
  %421 = load <4 x i32>, <4 x i32>* %420, align 4
  %422 = getelementptr inbounds i32, i32* %419, i64 4
  %423 = bitcast i32* %422 to <4 x i32>*
  %424 = load <4 x i32>, <4 x i32>* %423, align 4
  %425 = mul nsw <4 x i32> %421, %416
  %426 = mul nsw <4 x i32> %424, %417
  %427 = or i64 %397, 24
  %428 = getelementptr inbounds i32, i32* %384, i64 %427
  %429 = bitcast i32* %428 to <4 x i32>*
  %430 = load <4 x i32>, <4 x i32>* %429, align 4
  %431 = getelementptr inbounds i32, i32* %428, i64 4
  %432 = bitcast i32* %431 to <4 x i32>*
  %433 = load <4 x i32>, <4 x i32>* %432, align 4
  %434 = mul nsw <4 x i32> %430, %425
  %435 = mul nsw <4 x i32> %433, %426
  %436 = add i64 %397, 32
  %437 = add i64 %400, -4
  %438 = icmp eq i64 %437, 0
  br i1 %438, label %439, label %396, !llvm.loop !357

439:                                              ; preds = %396, %387
  %440 = phi <4 x i32> [ undef, %387 ], [ %434, %396 ]
  %441 = phi <4 x i32> [ undef, %387 ], [ %435, %396 ]
  %442 = phi i64 [ 0, %387 ], [ %436, %396 ]
  %443 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %387 ], [ %434, %396 ]
  %444 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %387 ], [ %435, %396 ]
  %445 = icmp eq i64 %392, 0
  br i1 %445, label %462, label %446

446:                                              ; preds = %439, %446
  %447 = phi i64 [ %459, %446 ], [ %442, %439 ]
  %448 = phi <4 x i32> [ %457, %446 ], [ %443, %439 ]
  %449 = phi <4 x i32> [ %458, %446 ], [ %444, %439 ]
  %450 = phi i64 [ %460, %446 ], [ %392, %439 ]
  %451 = getelementptr inbounds i32, i32* %384, i64 %447
  %452 = bitcast i32* %451 to <4 x i32>*
  %453 = load <4 x i32>, <4 x i32>* %452, align 4
  %454 = getelementptr inbounds i32, i32* %451, i64 4
  %455 = bitcast i32* %454 to <4 x i32>*
  %456 = load <4 x i32>, <4 x i32>* %455, align 4
  %457 = mul nsw <4 x i32> %453, %448
  %458 = mul nsw <4 x i32> %456, %449
  %459 = add i64 %447, 8
  %460 = add i64 %450, -1
  %461 = icmp eq i64 %460, 0
  br i1 %461, label %462, label %446, !llvm.loop !358

462:                                              ; preds = %446, %439
  %463 = phi <4 x i32> [ %440, %439 ], [ %457, %446 ]
  %464 = phi <4 x i32> [ %441, %439 ], [ %458, %446 ]
  %465 = mul <4 x i32> %464, %463
  %466 = shufflevector <4 x i32> %465, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %467 = mul <4 x i32> %465, %466
  %468 = shufflevector <4 x i32> %467, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %469 = mul <4 x i32> %467, %468
  %470 = extractelement <4 x i32> %469, i32 0
  %471 = icmp eq i64 %388, %385
  br i1 %471, label %483, label %472

472:                                              ; preds = %462, %383
  %473 = phi i64 [ 0, %383 ], [ %388, %462 ]
  %474 = phi i32 [ 1, %383 ], [ %470, %462 ]
  br label %475

475:                                              ; preds = %472, %475
  %476 = phi i64 [ %481, %475 ], [ %473, %472 ]
  %477 = phi i32 [ %480, %475 ], [ %474, %472 ]
  %478 = getelementptr inbounds i32, i32* %384, i64 %476
  %479 = load i32, i32* %478, align 4
  %480 = mul nsw i32 %479, %477
  %481 = add nuw nsw i64 %476, 1
  %482 = icmp eq i64 %481, %385
  br i1 %482, label %483, label %475, !llvm.loop !359

483:                                              ; preds = %475, %462, %380
  %484 = phi i32 [ 1, %380 ], [ %470, %462 ], [ %480, %475 ]
  %485 = icmp sgt i32 %263, 5
  %486 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  br i1 %485, label %487, label %490

487:                                              ; preds = %483
  %488 = getelementptr inbounds %union.anon, %union.anon* %486, i64 0, i32 0
  %489 = load i32*, i32** %488, align 8
  br label %493

490:                                              ; preds = %483
  %491 = bitcast %union.anon* %486 to i32*
  %492 = icmp sgt i32 %263, 0
  br i1 %492, label %493, label %593

493:                                              ; preds = %490, %487
  %494 = phi i32* [ %489, %487 ], [ %491, %490 ]
  %495 = zext i32 %263 to i64
  %496 = icmp ult i32 %263, 8
  br i1 %496, label %582, label %497

497:                                              ; preds = %493
  %498 = and i64 %495, 4294967288
  %499 = add nsw i64 %498, -8
  %500 = lshr exact i64 %499, 3
  %501 = add nuw nsw i64 %500, 1
  %502 = and i64 %501, 3
  %503 = icmp ult i64 %499, 24
  br i1 %503, label %549, label %504

504:                                              ; preds = %497
  %505 = sub nsw i64 %501, %502
  br label %506

506:                                              ; preds = %506, %504
  %507 = phi i64 [ 0, %504 ], [ %546, %506 ]
  %508 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %504 ], [ %544, %506 ]
  %509 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %504 ], [ %545, %506 ]
  %510 = phi i64 [ %505, %504 ], [ %547, %506 ]
  %511 = getelementptr inbounds i32, i32* %494, i64 %507
  %512 = bitcast i32* %511 to <4 x i32>*
  %513 = load <4 x i32>, <4 x i32>* %512, align 4
  %514 = getelementptr inbounds i32, i32* %511, i64 4
  %515 = bitcast i32* %514 to <4 x i32>*
  %516 = load <4 x i32>, <4 x i32>* %515, align 4
  %517 = mul nsw <4 x i32> %513, %508
  %518 = mul nsw <4 x i32> %516, %509
  %519 = or i64 %507, 8
  %520 = getelementptr inbounds i32, i32* %494, i64 %519
  %521 = bitcast i32* %520 to <4 x i32>*
  %522 = load <4 x i32>, <4 x i32>* %521, align 4
  %523 = getelementptr inbounds i32, i32* %520, i64 4
  %524 = bitcast i32* %523 to <4 x i32>*
  %525 = load <4 x i32>, <4 x i32>* %524, align 4
  %526 = mul nsw <4 x i32> %522, %517
  %527 = mul nsw <4 x i32> %525, %518
  %528 = or i64 %507, 16
  %529 = getelementptr inbounds i32, i32* %494, i64 %528
  %530 = bitcast i32* %529 to <4 x i32>*
  %531 = load <4 x i32>, <4 x i32>* %530, align 4
  %532 = getelementptr inbounds i32, i32* %529, i64 4
  %533 = bitcast i32* %532 to <4 x i32>*
  %534 = load <4 x i32>, <4 x i32>* %533, align 4
  %535 = mul nsw <4 x i32> %531, %526
  %536 = mul nsw <4 x i32> %534, %527
  %537 = or i64 %507, 24
  %538 = getelementptr inbounds i32, i32* %494, i64 %537
  %539 = bitcast i32* %538 to <4 x i32>*
  %540 = load <4 x i32>, <4 x i32>* %539, align 4
  %541 = getelementptr inbounds i32, i32* %538, i64 4
  %542 = bitcast i32* %541 to <4 x i32>*
  %543 = load <4 x i32>, <4 x i32>* %542, align 4
  %544 = mul nsw <4 x i32> %540, %535
  %545 = mul nsw <4 x i32> %543, %536
  %546 = add i64 %507, 32
  %547 = add i64 %510, -4
  %548 = icmp eq i64 %547, 0
  br i1 %548, label %549, label %506, !llvm.loop !360

549:                                              ; preds = %506, %497
  %550 = phi <4 x i32> [ undef, %497 ], [ %544, %506 ]
  %551 = phi <4 x i32> [ undef, %497 ], [ %545, %506 ]
  %552 = phi i64 [ 0, %497 ], [ %546, %506 ]
  %553 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %497 ], [ %544, %506 ]
  %554 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %497 ], [ %545, %506 ]
  %555 = icmp eq i64 %502, 0
  br i1 %555, label %572, label %556

556:                                              ; preds = %549, %556
  %557 = phi i64 [ %569, %556 ], [ %552, %549 ]
  %558 = phi <4 x i32> [ %567, %556 ], [ %553, %549 ]
  %559 = phi <4 x i32> [ %568, %556 ], [ %554, %549 ]
  %560 = phi i64 [ %570, %556 ], [ %502, %549 ]
  %561 = getelementptr inbounds i32, i32* %494, i64 %557
  %562 = bitcast i32* %561 to <4 x i32>*
  %563 = load <4 x i32>, <4 x i32>* %562, align 4
  %564 = getelementptr inbounds i32, i32* %561, i64 4
  %565 = bitcast i32* %564 to <4 x i32>*
  %566 = load <4 x i32>, <4 x i32>* %565, align 4
  %567 = mul nsw <4 x i32> %563, %558
  %568 = mul nsw <4 x i32> %566, %559
  %569 = add i64 %557, 8
  %570 = add i64 %560, -1
  %571 = icmp eq i64 %570, 0
  br i1 %571, label %572, label %556, !llvm.loop !361

572:                                              ; preds = %556, %549
  %573 = phi <4 x i32> [ %550, %549 ], [ %567, %556 ]
  %574 = phi <4 x i32> [ %551, %549 ], [ %568, %556 ]
  %575 = mul <4 x i32> %574, %573
  %576 = shufflevector <4 x i32> %575, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %577 = mul <4 x i32> %575, %576
  %578 = shufflevector <4 x i32> %577, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %579 = mul <4 x i32> %577, %578
  %580 = extractelement <4 x i32> %579, i32 0
  %581 = icmp eq i64 %498, %495
  br i1 %581, label %593, label %582

582:                                              ; preds = %572, %493
  %583 = phi i64 [ 0, %493 ], [ %498, %572 ]
  %584 = phi i32 [ 1, %493 ], [ %580, %572 ]
  br label %585

585:                                              ; preds = %582, %585
  %586 = phi i64 [ %591, %585 ], [ %583, %582 ]
  %587 = phi i32 [ %590, %585 ], [ %584, %582 ]
  %588 = getelementptr inbounds i32, i32* %494, i64 %586
  %589 = load i32, i32* %588, align 4
  %590 = mul nsw i32 %589, %587
  %591 = add nuw nsw i64 %586, 1
  %592 = icmp eq i64 %591, %495
  br i1 %592, label %593, label %585, !llvm.loop !362

593:                                              ; preds = %585, %572, %490
  %594 = phi i32 [ 1, %490 ], [ %580, %572 ], [ %590, %585 ]
  %595 = icmp eq i32 %374, %484
  br i1 %595, label %597, label %596

596:                                              ; preds = %593
  tail call void @abort() #12
  unreachable

597:                                              ; preds = %593
  %598 = icmp eq i32 %374, %594
  br i1 %598, label %599, label %682

599:                                              ; preds = %597
  %600 = icmp sgt i32 %374, 0
  br i1 %600, label %601, label %703

601:                                              ; preds = %599
  %602 = zext i32 %374 to i64
  %603 = load i32, i32* %196, align 4
  %604 = load i32, i32* %230, align 4
  %605 = sub nsw i32 %603, %604
  %606 = sitofp i32 %605 to float
  %607 = sitofp i32 %28 to float
  %608 = sitofp i32 %29 to float
  %609 = fcmp olt float %606, %607
  %610 = select i1 %609, float %607, float %606
  %611 = fcmp ogt float %610, %608
  %612 = select i1 %611, float %608, float %610
  %613 = fptosi float %612 to i32
  store i32 %613, i32* %264, align 4
  %614 = icmp eq i32 %374, 1
  br i1 %614, label %703, label %615

615:                                              ; preds = %601
  %616 = add nsw i64 %602, -1
  %617 = icmp ult i64 %616, 4
  br i1 %617, label %618, label %620

618:                                              ; preds = %680, %620, %615
  %619 = phi i64 [ 1, %620 ], [ 1, %615 ], [ %651, %680 ]
  br label %683

620:                                              ; preds = %615
  %621 = getelementptr i32, i32* %264, i64 1
  %622 = bitcast i32* %621 to i8*
  %623 = getelementptr i32, i32* %264, i64 %602
  %624 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 11
  %625 = bitcast i32* %624 to i8*
  %626 = getelementptr inbounds i8, i8* %625, i64 1
  %627 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 12
  %628 = bitcast i32* %627 to i8*
  %629 = getelementptr inbounds i8, i8* %628, i64 1
  %630 = getelementptr i32, i32* %196, i64 1
  %631 = getelementptr i32, i32* %196, i64 %602
  %632 = getelementptr i32, i32* %230, i64 1
  %633 = getelementptr i32, i32* %230, i64 %602
  %634 = icmp ugt i8* %626, %622
  %635 = icmp ult i32* %31, %623
  %636 = and i1 %634, %635
  %637 = icmp ugt i8* %629, %622
  %638 = icmp ult i32* %32, %623
  %639 = and i1 %637, %638
  %640 = or i1 %636, %639
  %641 = icmp ult i32* %621, %631
  %642 = icmp ult i32* %630, %623
  %643 = and i1 %641, %642
  %644 = or i1 %640, %643
  %645 = icmp ult i32* %621, %633
  %646 = icmp ult i32* %632, %623
  %647 = and i1 %645, %646
  %648 = or i1 %644, %647
  br i1 %648, label %618, label %649

649:                                              ; preds = %620
  %650 = and i64 %616, -4
  %651 = or i64 %650, 1
  %652 = load i32, i32* %31, align 4, !alias.scope !363
  %653 = insertelement <4 x i32> undef, i32 %652, i32 0
  %654 = shufflevector <4 x i32> %653, <4 x i32> undef, <4 x i32> zeroinitializer
  %655 = load i32, i32* %32, align 4, !alias.scope !366
  %656 = insertelement <4 x i32> undef, i32 %655, i32 0
  %657 = shufflevector <4 x i32> %656, <4 x i32> undef, <4 x i32> zeroinitializer
  %658 = sitofp <4 x i32> %654 to <4 x float>
  %659 = sitofp <4 x i32> %657 to <4 x float>
  br label %660

660:                                              ; preds = %660, %649
  %661 = phi i64 [ 0, %649 ], [ %678, %660 ]
  %662 = or i64 %661, 1
  %663 = getelementptr inbounds i32, i32* %196, i64 %662
  %664 = bitcast i32* %663 to <4 x i32>*
  %665 = load <4 x i32>, <4 x i32>* %664, align 4, !alias.scope !368
  %666 = getelementptr inbounds i32, i32* %230, i64 %662
  %667 = bitcast i32* %666 to <4 x i32>*
  %668 = load <4 x i32>, <4 x i32>* %667, align 4, !alias.scope !370
  %669 = sub nsw <4 x i32> %665, %668
  %670 = sitofp <4 x i32> %669 to <4 x float>
  %671 = fcmp olt <4 x float> %670, %658
  %672 = select <4 x i1> %671, <4 x float> %658, <4 x float> %670
  %673 = fcmp ogt <4 x float> %672, %659
  %674 = select <4 x i1> %673, <4 x float> %659, <4 x float> %672
  %675 = fptosi <4 x float> %674 to <4 x i32>
  %676 = getelementptr inbounds i32, i32* %264, i64 %662
  %677 = bitcast i32* %676 to <4 x i32>*
  store <4 x i32> %675, <4 x i32>* %677, align 4, !alias.scope !372, !noalias !374
  %678 = add i64 %661, 4
  %679 = icmp eq i64 %678, %650
  br i1 %679, label %680, label %660, !llvm.loop !375

680:                                              ; preds = %660
  %681 = icmp eq i64 %616, %650
  br i1 %681, label %703, label %618

682:                                              ; preds = %597
  tail call void @abort() #12
  unreachable

683:                                              ; preds = %618, %683
  %684 = phi i64 [ %701, %683 ], [ %619, %618 ]
  %685 = load i32, i32* %31, align 4
  %686 = load i32, i32* %32, align 4
  %687 = getelementptr inbounds i32, i32* %196, i64 %684
  %688 = load i32, i32* %687, align 4
  %689 = getelementptr inbounds i32, i32* %230, i64 %684
  %690 = load i32, i32* %689, align 4
  %691 = sub nsw i32 %688, %690
  %692 = sitofp i32 %691 to float
  %693 = sitofp i32 %685 to float
  %694 = sitofp i32 %686 to float
  %695 = fcmp olt float %692, %693
  %696 = select i1 %695, float %693, float %692
  %697 = fcmp ogt float %696, %694
  %698 = select i1 %697, float %694, float %696
  %699 = fptosi float %698 to i32
  %700 = getelementptr inbounds i32, i32* %264, i64 %684
  store i32 %699, i32* %700, align 4
  %701 = add nuw nsw i64 %684, 1
  %702 = icmp eq i64 %701, %602
  br i1 %702, label %703, label %683, !llvm.loop !376

703:                                              ; preds = %683, %601, %680, %599
  br i1 %485, label %704, label %710

704:                                              ; preds = %703
  %705 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %706 = load i32*, i32** %705, align 8
  %707 = icmp eq i32* %706, null
  br i1 %707, label %710, label %708

708:                                              ; preds = %704
  %709 = bitcast i32* %706 to i8*
  tail call void @_ZdaPv(i8* %709) #10
  br label %710

710:                                              ; preds = %703, %704, %708
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %231) #11
  br i1 %375, label %711, label %717

711:                                              ; preds = %710
  %712 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %713 = load i32*, i32** %712, align 8
  %714 = icmp eq i32* %713, null
  br i1 %714, label %717, label %715

715:                                              ; preds = %711
  %716 = bitcast i32* %713 to i8*
  tail call void @_ZdaPv(i8* %716) #10
  br label %717

717:                                              ; preds = %710, %711, %715
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %197) #11
  br i1 %265, label %718, label %724

718:                                              ; preds = %717
  %719 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %720 = load i32*, i32** %719, align 8
  %721 = icmp eq i32* %720, null
  br i1 %721, label %724, label %722

722:                                              ; preds = %718
  %723 = bitcast i32* %720 to i8*
  tail call void @_ZdaPv(i8* %723) #10
  br label %724

724:                                              ; preds = %722, %718, %717, %160, %156, %152
  %725 = phi i8* [ %34, %152 ], [ %34, %156 ], [ %34, %160 ], [ %163, %717 ], [ %163, %718 ], [ %163, %722 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %725) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %30) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE1EfEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteSubParams*, %"struct.tflite::ops::builtin::sub::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, i1 zeroext, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %9 = alloca %"struct.tflite::ArithmeticParams", align 4
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = getelementptr inbounds %struct.TfLiteSubParams, %struct.TfLiteSubParams* %2, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, -1
  %19 = icmp ult i32 %18, 3
  br i1 %19, label %20, label %27

20:                                               ; preds = %8
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE2EfEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_, i64 0, i64 %21
  %23 = load float, float* %22, align 4
  %24 = sext i32 %18 to i64
  %25 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE2EfEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_.47, i64 0, i64 %24
  %26 = load float, float* %25, align 4
  br label %27

27:                                               ; preds = %8, %20
  %28 = phi float [ %23, %20 ], [ 0xC7EFFFFFE0000000, %8 ]
  %29 = phi float [ %26, %20 ], [ 0x47EFFFFFE0000000, %8 ]
  %30 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %30) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3sub13EvalQuantizedILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.op_params, i64 0, i32 0), i64 80, i1 false)
  %31 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 13
  store float %28, float* %31, align 4
  %32 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 14
  store float %29, float* %32, align 4
  br i1 %6, label %33, label %165

33:                                               ; preds = %27
  %34 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #11
  %35 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %37, align 8, !alias.scope !377
  br label %66

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %40 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %39, align 8, !noalias !377
  %41 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 4, !noalias !377
  %43 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %40, i64 0, i32 1, i64 0
  %44 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %42, i32* %44, align 8, !alias.scope !377
  %45 = icmp sgt i32 %42, 5
  br i1 %45, label %46, label %53

46:                                               ; preds = %38
  %47 = sext i32 %42 to i64
  %48 = shl nsw i64 %47, 2
  %49 = tail call i8* @_Znam(i64 %48) #10, !noalias !377
  %50 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %51 = bitcast i32** %50 to i8**
  store i8* %49, i8** %51, align 8, !alias.scope !377
  %52 = bitcast i8* %49 to i32*
  br label %58

53:                                               ; preds = %38
  %54 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %55 = bitcast %union.anon* %54 to i32*
  %56 = sext i32 %42 to i64
  %57 = shl nsw i64 %56, 2
  br label %58

58:                                               ; preds = %53, %46
  %59 = phi i64 [ %48, %46 ], [ %57, %53 ]
  %60 = phi i32* [ %52, %46 ], [ %55, %53 ]
  %61 = bitcast i32* %60 to i8*
  %62 = bitcast i32* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 4 %62, i64 %59, i1 false) #11
  %63 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %64 = bitcast %union.TfLitePtrUnion* %63 to float**
  %65 = load float*, float** %64, align 8
  br label %66

66:                                               ; preds = %36, %58
  %67 = phi float* [ %65, %58 ], [ null, %36 ]
  %68 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68) #11
  %69 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %71, align 8, !alias.scope !380
  br label %100

72:                                               ; preds = %66
  %73 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %74 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %73, align 8, !noalias !380
  %75 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %74, i64 0, i32 0
  %76 = load i32, i32* %75, align 4, !noalias !380
  %77 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %74, i64 0, i32 1, i64 0
  %78 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %76, i32* %78, align 8, !alias.scope !380
  %79 = icmp sgt i32 %76, 5
  br i1 %79, label %80, label %87

80:                                               ; preds = %72
  %81 = sext i32 %76 to i64
  %82 = shl nsw i64 %81, 2
  %83 = tail call i8* @_Znam(i64 %82) #10, !noalias !380
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %85 = bitcast i32** %84 to i8**
  store i8* %83, i8** %85, align 8, !alias.scope !380
  %86 = bitcast i8* %83 to i32*
  br label %92

87:                                               ; preds = %72
  %88 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %89 = bitcast %union.anon* %88 to i32*
  %90 = sext i32 %76 to i64
  %91 = shl nsw i64 %90, 2
  br label %92

92:                                               ; preds = %87, %80
  %93 = phi i64 [ %82, %80 ], [ %91, %87 ]
  %94 = phi i32* [ %86, %80 ], [ %89, %87 ]
  %95 = bitcast i32* %94 to i8*
  %96 = bitcast i32* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* align 4 %96, i64 %93, i1 false) #11
  %97 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %98 = bitcast %union.TfLitePtrUnion* %97 to float**
  %99 = load float*, float** %98, align 8
  br label %100

100:                                              ; preds = %70, %92
  %101 = phi float* [ %99, %92 ], [ null, %70 ]
  %102 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %102) #11
  %103 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %105, align 8, !alias.scope !383
  br label %134

106:                                              ; preds = %100
  %107 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %108 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %107, align 8, !noalias !383
  %109 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %108, i64 0, i32 0
  %110 = load i32, i32* %109, align 4, !noalias !383
  %111 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %108, i64 0, i32 1, i64 0
  %112 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %110, i32* %112, align 8, !alias.scope !383
  %113 = icmp sgt i32 %110, 5
  br i1 %113, label %114, label %121

114:                                              ; preds = %106
  %115 = sext i32 %110 to i64
  %116 = shl nsw i64 %115, 2
  %117 = tail call i8* @_Znam(i64 %116) #10, !noalias !383
  %118 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %119 = bitcast i32** %118 to i8**
  store i8* %117, i8** %119, align 8, !alias.scope !383
  %120 = bitcast i8* %117 to i32*
  br label %126

121:                                              ; preds = %106
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %123 = bitcast %union.anon* %122 to i32*
  %124 = sext i32 %110 to i64
  %125 = shl nsw i64 %124, 2
  br label %126

126:                                              ; preds = %121, %114
  %127 = phi i64 [ %116, %114 ], [ %125, %121 ]
  %128 = phi i32* [ %120, %114 ], [ %123, %121 ]
  %129 = bitcast i32* %128 to i8*
  %130 = bitcast i32* %111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %129, i8* align 4 %130, i64 %127, i1 false) #11
  %131 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1
  %132 = bitcast %union.TfLitePtrUnion* %131 to float**
  %133 = load float*, float** %132, align 8
  br label %134

134:                                              ; preds = %104, %126
  %135 = phi float* [ %133, %126 ], [ null, %104 ]
  call void @_ZN6tflite13reference_ops16BroadcastSubSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKfS7_S9_S7_Pf(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, float* %67, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, float* %101, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, float* %135)
  %136 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %137 = load i32, i32* %136, align 8
  %138 = icmp sgt i32 %137, 5
  br i1 %138, label %139, label %145

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %141 = load i32*, i32** %140, align 8
  %142 = icmp eq i32* %141, null
  br i1 %142, label %145, label %143

143:                                              ; preds = %139
  %144 = bitcast i32* %141 to i8*
  call void @_ZdaPv(i8* %144) #10
  br label %145

145:                                              ; preds = %134, %139, %143
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %102) #11
  %146 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %147 = load i32, i32* %146, align 8
  %148 = icmp sgt i32 %147, 5
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %151 = load i32*, i32** %150, align 8
  %152 = icmp eq i32* %151, null
  br i1 %152, label %155, label %153

153:                                              ; preds = %149
  %154 = bitcast i32* %151 to i8*
  call void @_ZdaPv(i8* %154) #10
  br label %155

155:                                              ; preds = %145, %149, %153
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %68) #11
  %156 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %157 = load i32, i32* %156, align 8
  %158 = icmp sgt i32 %157, 5
  br i1 %158, label %159, label %752

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %161 = load i32*, i32** %160, align 8
  %162 = icmp eq i32* %161, null
  br i1 %162, label %752, label %163

163:                                              ; preds = %159
  %164 = bitcast i32* %161 to i8*
  call void @_ZdaPv(i8* %164) #10
  br label %752

165:                                              ; preds = %27
  %166 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %166) #11
  %167 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %167, label %168, label %170

168:                                              ; preds = %165
  %169 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %169, align 8, !alias.scope !386
  br label %198

170:                                              ; preds = %165
  %171 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %172 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %171, align 8, !noalias !386
  %173 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %172, i64 0, i32 0
  %174 = load i32, i32* %173, align 4, !noalias !386
  %175 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %172, i64 0, i32 1, i64 0
  %176 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %174, i32* %176, align 8, !alias.scope !386
  %177 = icmp sgt i32 %174, 5
  br i1 %177, label %178, label %185

178:                                              ; preds = %170
  %179 = sext i32 %174 to i64
  %180 = shl nsw i64 %179, 2
  %181 = tail call i8* @_Znam(i64 %180) #10, !noalias !386
  %182 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %183 = bitcast i32** %182 to i8**
  store i8* %181, i8** %183, align 8, !alias.scope !386
  %184 = bitcast i8* %181 to i32*
  br label %190

185:                                              ; preds = %170
  %186 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %187 = bitcast %union.anon* %186 to i32*
  %188 = sext i32 %174 to i64
  %189 = shl nsw i64 %188, 2
  br label %190

190:                                              ; preds = %185, %178
  %191 = phi i64 [ %180, %178 ], [ %189, %185 ]
  %192 = phi i32* [ %184, %178 ], [ %187, %185 ]
  %193 = bitcast i32* %192 to i8*
  %194 = bitcast i32* %175 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %193, i8* align 4 %194, i64 %191, i1 false) #11
  %195 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %196 = bitcast %union.TfLitePtrUnion* %195 to float**
  %197 = load float*, float** %196, align 8
  br label %198

198:                                              ; preds = %168, %190
  %199 = phi i32 [ %174, %190 ], [ 0, %168 ]
  %200 = phi float* [ %197, %190 ], [ null, %168 ]
  %201 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %201) #11
  %202 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %202, label %203, label %205

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %204, align 8, !alias.scope !389
  br label %233

205:                                              ; preds = %198
  %206 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %207 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %206, align 8, !noalias !389
  %208 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %207, i64 0, i32 0
  %209 = load i32, i32* %208, align 4, !noalias !389
  %210 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %207, i64 0, i32 1, i64 0
  %211 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %209, i32* %211, align 8, !alias.scope !389
  %212 = icmp sgt i32 %209, 5
  br i1 %212, label %213, label %220

213:                                              ; preds = %205
  %214 = sext i32 %209 to i64
  %215 = shl nsw i64 %214, 2
  %216 = tail call i8* @_Znam(i64 %215) #10, !noalias !389
  %217 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %218 = bitcast i32** %217 to i8**
  store i8* %216, i8** %218, align 8, !alias.scope !389
  %219 = bitcast i8* %216 to i32*
  br label %225

220:                                              ; preds = %205
  %221 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %222 = bitcast %union.anon* %221 to i32*
  %223 = sext i32 %209 to i64
  %224 = shl nsw i64 %223, 2
  br label %225

225:                                              ; preds = %220, %213
  %226 = phi i64 [ %215, %213 ], [ %224, %220 ]
  %227 = phi i32* [ %219, %213 ], [ %222, %220 ]
  %228 = bitcast i32* %227 to i8*
  %229 = bitcast i32* %210 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %228, i8* align 4 %229, i64 %226, i1 false) #11
  %230 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %231 = bitcast %union.TfLitePtrUnion* %230 to float**
  %232 = load float*, float** %231, align 8
  br label %233

233:                                              ; preds = %203, %225
  %234 = phi i32 [ %209, %225 ], [ 0, %203 ]
  %235 = phi float* [ %232, %225 ], [ null, %203 ]
  %236 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %236) #11
  %237 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %237, label %238, label %240

238:                                              ; preds = %233
  %239 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %239, align 8, !alias.scope !392
  br label %268

240:                                              ; preds = %233
  %241 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %242 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %241, align 8, !noalias !392
  %243 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %242, i64 0, i32 0
  %244 = load i32, i32* %243, align 4, !noalias !392
  %245 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %242, i64 0, i32 1, i64 0
  %246 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %244, i32* %246, align 8, !alias.scope !392
  %247 = icmp sgt i32 %244, 5
  br i1 %247, label %248, label %255

248:                                              ; preds = %240
  %249 = sext i32 %244 to i64
  %250 = shl nsw i64 %249, 2
  %251 = tail call i8* @_Znam(i64 %250) #10, !noalias !392
  %252 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %253 = bitcast i32** %252 to i8**
  store i8* %251, i8** %253, align 8, !alias.scope !392
  %254 = bitcast i8* %251 to i32*
  br label %260

255:                                              ; preds = %240
  %256 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %257 = bitcast %union.anon* %256 to i32*
  %258 = sext i32 %244 to i64
  %259 = shl nsw i64 %258, 2
  br label %260

260:                                              ; preds = %255, %248
  %261 = phi i64 [ %250, %248 ], [ %259, %255 ]
  %262 = phi i32* [ %254, %248 ], [ %257, %255 ]
  %263 = bitcast i32* %262 to i8*
  %264 = bitcast i32* %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %263, i8* align 4 %264, i64 %261, i1 false) #11
  %265 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1
  %266 = bitcast %union.TfLitePtrUnion* %265 to float**
  %267 = load float*, float** %266, align 8
  br label %268

268:                                              ; preds = %238, %260
  %269 = phi i32 [ %244, %260 ], [ 0, %238 ]
  %270 = phi float* [ %267, %260 ], [ null, %238 ]
  %271 = icmp sgt i32 %199, 5
  %272 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  br i1 %271, label %273, label %276

273:                                              ; preds = %268
  %274 = getelementptr inbounds %union.anon, %union.anon* %272, i64 0, i32 0
  %275 = load i32*, i32** %274, align 8
  br label %279

276:                                              ; preds = %268
  %277 = bitcast %union.anon* %272 to i32*
  %278 = icmp sgt i32 %199, 0
  br i1 %278, label %279, label %379

279:                                              ; preds = %276, %273
  %280 = phi i32* [ %275, %273 ], [ %277, %276 ]
  %281 = zext i32 %199 to i64
  %282 = icmp ult i32 %199, 8
  br i1 %282, label %368, label %283

283:                                              ; preds = %279
  %284 = and i64 %281, 4294967288
  %285 = add nsw i64 %284, -8
  %286 = lshr exact i64 %285, 3
  %287 = add nuw nsw i64 %286, 1
  %288 = and i64 %287, 3
  %289 = icmp ult i64 %285, 24
  br i1 %289, label %335, label %290

290:                                              ; preds = %283
  %291 = sub nsw i64 %287, %288
  br label %292

292:                                              ; preds = %292, %290
  %293 = phi i64 [ 0, %290 ], [ %332, %292 ]
  %294 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %290 ], [ %330, %292 ]
  %295 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %290 ], [ %331, %292 ]
  %296 = phi i64 [ %291, %290 ], [ %333, %292 ]
  %297 = getelementptr inbounds i32, i32* %280, i64 %293
  %298 = bitcast i32* %297 to <4 x i32>*
  %299 = load <4 x i32>, <4 x i32>* %298, align 4
  %300 = getelementptr inbounds i32, i32* %297, i64 4
  %301 = bitcast i32* %300 to <4 x i32>*
  %302 = load <4 x i32>, <4 x i32>* %301, align 4
  %303 = mul nsw <4 x i32> %299, %294
  %304 = mul nsw <4 x i32> %302, %295
  %305 = or i64 %293, 8
  %306 = getelementptr inbounds i32, i32* %280, i64 %305
  %307 = bitcast i32* %306 to <4 x i32>*
  %308 = load <4 x i32>, <4 x i32>* %307, align 4
  %309 = getelementptr inbounds i32, i32* %306, i64 4
  %310 = bitcast i32* %309 to <4 x i32>*
  %311 = load <4 x i32>, <4 x i32>* %310, align 4
  %312 = mul nsw <4 x i32> %308, %303
  %313 = mul nsw <4 x i32> %311, %304
  %314 = or i64 %293, 16
  %315 = getelementptr inbounds i32, i32* %280, i64 %314
  %316 = bitcast i32* %315 to <4 x i32>*
  %317 = load <4 x i32>, <4 x i32>* %316, align 4
  %318 = getelementptr inbounds i32, i32* %315, i64 4
  %319 = bitcast i32* %318 to <4 x i32>*
  %320 = load <4 x i32>, <4 x i32>* %319, align 4
  %321 = mul nsw <4 x i32> %317, %312
  %322 = mul nsw <4 x i32> %320, %313
  %323 = or i64 %293, 24
  %324 = getelementptr inbounds i32, i32* %280, i64 %323
  %325 = bitcast i32* %324 to <4 x i32>*
  %326 = load <4 x i32>, <4 x i32>* %325, align 4
  %327 = getelementptr inbounds i32, i32* %324, i64 4
  %328 = bitcast i32* %327 to <4 x i32>*
  %329 = load <4 x i32>, <4 x i32>* %328, align 4
  %330 = mul nsw <4 x i32> %326, %321
  %331 = mul nsw <4 x i32> %329, %322
  %332 = add i64 %293, 32
  %333 = add i64 %296, -4
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %292, !llvm.loop !395

335:                                              ; preds = %292, %283
  %336 = phi <4 x i32> [ undef, %283 ], [ %330, %292 ]
  %337 = phi <4 x i32> [ undef, %283 ], [ %331, %292 ]
  %338 = phi i64 [ 0, %283 ], [ %332, %292 ]
  %339 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %283 ], [ %330, %292 ]
  %340 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %283 ], [ %331, %292 ]
  %341 = icmp eq i64 %288, 0
  br i1 %341, label %358, label %342

342:                                              ; preds = %335, %342
  %343 = phi i64 [ %355, %342 ], [ %338, %335 ]
  %344 = phi <4 x i32> [ %353, %342 ], [ %339, %335 ]
  %345 = phi <4 x i32> [ %354, %342 ], [ %340, %335 ]
  %346 = phi i64 [ %356, %342 ], [ %288, %335 ]
  %347 = getelementptr inbounds i32, i32* %280, i64 %343
  %348 = bitcast i32* %347 to <4 x i32>*
  %349 = load <4 x i32>, <4 x i32>* %348, align 4
  %350 = getelementptr inbounds i32, i32* %347, i64 4
  %351 = bitcast i32* %350 to <4 x i32>*
  %352 = load <4 x i32>, <4 x i32>* %351, align 4
  %353 = mul nsw <4 x i32> %349, %344
  %354 = mul nsw <4 x i32> %352, %345
  %355 = add i64 %343, 8
  %356 = add i64 %346, -1
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %358, label %342, !llvm.loop !396

358:                                              ; preds = %342, %335
  %359 = phi <4 x i32> [ %336, %335 ], [ %353, %342 ]
  %360 = phi <4 x i32> [ %337, %335 ], [ %354, %342 ]
  %361 = mul <4 x i32> %360, %359
  %362 = shufflevector <4 x i32> %361, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %363 = mul <4 x i32> %361, %362
  %364 = shufflevector <4 x i32> %363, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %365 = mul <4 x i32> %363, %364
  %366 = extractelement <4 x i32> %365, i32 0
  %367 = icmp eq i64 %284, %281
  br i1 %367, label %379, label %368

368:                                              ; preds = %358, %279
  %369 = phi i64 [ 0, %279 ], [ %284, %358 ]
  %370 = phi i32 [ 1, %279 ], [ %366, %358 ]
  br label %371

371:                                              ; preds = %368, %371
  %372 = phi i64 [ %377, %371 ], [ %369, %368 ]
  %373 = phi i32 [ %376, %371 ], [ %370, %368 ]
  %374 = getelementptr inbounds i32, i32* %280, i64 %372
  %375 = load i32, i32* %374, align 4
  %376 = mul nsw i32 %375, %373
  %377 = add nuw nsw i64 %372, 1
  %378 = icmp eq i64 %377, %281
  br i1 %378, label %379, label %371, !llvm.loop !397

379:                                              ; preds = %371, %358, %276
  %380 = phi i32 [ 1, %276 ], [ %366, %358 ], [ %376, %371 ]
  %381 = icmp sgt i32 %234, 5
  %382 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  br i1 %381, label %383, label %386

383:                                              ; preds = %379
  %384 = getelementptr inbounds %union.anon, %union.anon* %382, i64 0, i32 0
  %385 = load i32*, i32** %384, align 8
  br label %389

386:                                              ; preds = %379
  %387 = bitcast %union.anon* %382 to i32*
  %388 = icmp sgt i32 %234, 0
  br i1 %388, label %389, label %489

389:                                              ; preds = %386, %383
  %390 = phi i32* [ %385, %383 ], [ %387, %386 ]
  %391 = zext i32 %234 to i64
  %392 = icmp ult i32 %234, 8
  br i1 %392, label %478, label %393

393:                                              ; preds = %389
  %394 = and i64 %391, 4294967288
  %395 = add nsw i64 %394, -8
  %396 = lshr exact i64 %395, 3
  %397 = add nuw nsw i64 %396, 1
  %398 = and i64 %397, 3
  %399 = icmp ult i64 %395, 24
  br i1 %399, label %445, label %400

400:                                              ; preds = %393
  %401 = sub nsw i64 %397, %398
  br label %402

402:                                              ; preds = %402, %400
  %403 = phi i64 [ 0, %400 ], [ %442, %402 ]
  %404 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %400 ], [ %440, %402 ]
  %405 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %400 ], [ %441, %402 ]
  %406 = phi i64 [ %401, %400 ], [ %443, %402 ]
  %407 = getelementptr inbounds i32, i32* %390, i64 %403
  %408 = bitcast i32* %407 to <4 x i32>*
  %409 = load <4 x i32>, <4 x i32>* %408, align 4
  %410 = getelementptr inbounds i32, i32* %407, i64 4
  %411 = bitcast i32* %410 to <4 x i32>*
  %412 = load <4 x i32>, <4 x i32>* %411, align 4
  %413 = mul nsw <4 x i32> %409, %404
  %414 = mul nsw <4 x i32> %412, %405
  %415 = or i64 %403, 8
  %416 = getelementptr inbounds i32, i32* %390, i64 %415
  %417 = bitcast i32* %416 to <4 x i32>*
  %418 = load <4 x i32>, <4 x i32>* %417, align 4
  %419 = getelementptr inbounds i32, i32* %416, i64 4
  %420 = bitcast i32* %419 to <4 x i32>*
  %421 = load <4 x i32>, <4 x i32>* %420, align 4
  %422 = mul nsw <4 x i32> %418, %413
  %423 = mul nsw <4 x i32> %421, %414
  %424 = or i64 %403, 16
  %425 = getelementptr inbounds i32, i32* %390, i64 %424
  %426 = bitcast i32* %425 to <4 x i32>*
  %427 = load <4 x i32>, <4 x i32>* %426, align 4
  %428 = getelementptr inbounds i32, i32* %425, i64 4
  %429 = bitcast i32* %428 to <4 x i32>*
  %430 = load <4 x i32>, <4 x i32>* %429, align 4
  %431 = mul nsw <4 x i32> %427, %422
  %432 = mul nsw <4 x i32> %430, %423
  %433 = or i64 %403, 24
  %434 = getelementptr inbounds i32, i32* %390, i64 %433
  %435 = bitcast i32* %434 to <4 x i32>*
  %436 = load <4 x i32>, <4 x i32>* %435, align 4
  %437 = getelementptr inbounds i32, i32* %434, i64 4
  %438 = bitcast i32* %437 to <4 x i32>*
  %439 = load <4 x i32>, <4 x i32>* %438, align 4
  %440 = mul nsw <4 x i32> %436, %431
  %441 = mul nsw <4 x i32> %439, %432
  %442 = add i64 %403, 32
  %443 = add i64 %406, -4
  %444 = icmp eq i64 %443, 0
  br i1 %444, label %445, label %402, !llvm.loop !398

445:                                              ; preds = %402, %393
  %446 = phi <4 x i32> [ undef, %393 ], [ %440, %402 ]
  %447 = phi <4 x i32> [ undef, %393 ], [ %441, %402 ]
  %448 = phi i64 [ 0, %393 ], [ %442, %402 ]
  %449 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %393 ], [ %440, %402 ]
  %450 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %393 ], [ %441, %402 ]
  %451 = icmp eq i64 %398, 0
  br i1 %451, label %468, label %452

452:                                              ; preds = %445, %452
  %453 = phi i64 [ %465, %452 ], [ %448, %445 ]
  %454 = phi <4 x i32> [ %463, %452 ], [ %449, %445 ]
  %455 = phi <4 x i32> [ %464, %452 ], [ %450, %445 ]
  %456 = phi i64 [ %466, %452 ], [ %398, %445 ]
  %457 = getelementptr inbounds i32, i32* %390, i64 %453
  %458 = bitcast i32* %457 to <4 x i32>*
  %459 = load <4 x i32>, <4 x i32>* %458, align 4
  %460 = getelementptr inbounds i32, i32* %457, i64 4
  %461 = bitcast i32* %460 to <4 x i32>*
  %462 = load <4 x i32>, <4 x i32>* %461, align 4
  %463 = mul nsw <4 x i32> %459, %454
  %464 = mul nsw <4 x i32> %462, %455
  %465 = add i64 %453, 8
  %466 = add i64 %456, -1
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %468, label %452, !llvm.loop !399

468:                                              ; preds = %452, %445
  %469 = phi <4 x i32> [ %446, %445 ], [ %463, %452 ]
  %470 = phi <4 x i32> [ %447, %445 ], [ %464, %452 ]
  %471 = mul <4 x i32> %470, %469
  %472 = shufflevector <4 x i32> %471, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %473 = mul <4 x i32> %471, %472
  %474 = shufflevector <4 x i32> %473, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %475 = mul <4 x i32> %473, %474
  %476 = extractelement <4 x i32> %475, i32 0
  %477 = icmp eq i64 %394, %391
  br i1 %477, label %489, label %478

478:                                              ; preds = %468, %389
  %479 = phi i64 [ 0, %389 ], [ %394, %468 ]
  %480 = phi i32 [ 1, %389 ], [ %476, %468 ]
  br label %481

481:                                              ; preds = %478, %481
  %482 = phi i64 [ %487, %481 ], [ %479, %478 ]
  %483 = phi i32 [ %486, %481 ], [ %480, %478 ]
  %484 = getelementptr inbounds i32, i32* %390, i64 %482
  %485 = load i32, i32* %484, align 4
  %486 = mul nsw i32 %485, %483
  %487 = add nuw nsw i64 %482, 1
  %488 = icmp eq i64 %487, %391
  br i1 %488, label %489, label %481, !llvm.loop !400

489:                                              ; preds = %481, %468, %386
  %490 = phi i32 [ 1, %386 ], [ %476, %468 ], [ %486, %481 ]
  %491 = icmp sgt i32 %269, 5
  %492 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  br i1 %491, label %493, label %496

493:                                              ; preds = %489
  %494 = getelementptr inbounds %union.anon, %union.anon* %492, i64 0, i32 0
  %495 = load i32*, i32** %494, align 8
  br label %499

496:                                              ; preds = %489
  %497 = bitcast %union.anon* %492 to i32*
  %498 = icmp sgt i32 %269, 0
  br i1 %498, label %499, label %599

499:                                              ; preds = %496, %493
  %500 = phi i32* [ %495, %493 ], [ %497, %496 ]
  %501 = zext i32 %269 to i64
  %502 = icmp ult i32 %269, 8
  br i1 %502, label %588, label %503

503:                                              ; preds = %499
  %504 = and i64 %501, 4294967288
  %505 = add nsw i64 %504, -8
  %506 = lshr exact i64 %505, 3
  %507 = add nuw nsw i64 %506, 1
  %508 = and i64 %507, 3
  %509 = icmp ult i64 %505, 24
  br i1 %509, label %555, label %510

510:                                              ; preds = %503
  %511 = sub nsw i64 %507, %508
  br label %512

512:                                              ; preds = %512, %510
  %513 = phi i64 [ 0, %510 ], [ %552, %512 ]
  %514 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %510 ], [ %550, %512 ]
  %515 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %510 ], [ %551, %512 ]
  %516 = phi i64 [ %511, %510 ], [ %553, %512 ]
  %517 = getelementptr inbounds i32, i32* %500, i64 %513
  %518 = bitcast i32* %517 to <4 x i32>*
  %519 = load <4 x i32>, <4 x i32>* %518, align 4
  %520 = getelementptr inbounds i32, i32* %517, i64 4
  %521 = bitcast i32* %520 to <4 x i32>*
  %522 = load <4 x i32>, <4 x i32>* %521, align 4
  %523 = mul nsw <4 x i32> %519, %514
  %524 = mul nsw <4 x i32> %522, %515
  %525 = or i64 %513, 8
  %526 = getelementptr inbounds i32, i32* %500, i64 %525
  %527 = bitcast i32* %526 to <4 x i32>*
  %528 = load <4 x i32>, <4 x i32>* %527, align 4
  %529 = getelementptr inbounds i32, i32* %526, i64 4
  %530 = bitcast i32* %529 to <4 x i32>*
  %531 = load <4 x i32>, <4 x i32>* %530, align 4
  %532 = mul nsw <4 x i32> %528, %523
  %533 = mul nsw <4 x i32> %531, %524
  %534 = or i64 %513, 16
  %535 = getelementptr inbounds i32, i32* %500, i64 %534
  %536 = bitcast i32* %535 to <4 x i32>*
  %537 = load <4 x i32>, <4 x i32>* %536, align 4
  %538 = getelementptr inbounds i32, i32* %535, i64 4
  %539 = bitcast i32* %538 to <4 x i32>*
  %540 = load <4 x i32>, <4 x i32>* %539, align 4
  %541 = mul nsw <4 x i32> %537, %532
  %542 = mul nsw <4 x i32> %540, %533
  %543 = or i64 %513, 24
  %544 = getelementptr inbounds i32, i32* %500, i64 %543
  %545 = bitcast i32* %544 to <4 x i32>*
  %546 = load <4 x i32>, <4 x i32>* %545, align 4
  %547 = getelementptr inbounds i32, i32* %544, i64 4
  %548 = bitcast i32* %547 to <4 x i32>*
  %549 = load <4 x i32>, <4 x i32>* %548, align 4
  %550 = mul nsw <4 x i32> %546, %541
  %551 = mul nsw <4 x i32> %549, %542
  %552 = add i64 %513, 32
  %553 = add i64 %516, -4
  %554 = icmp eq i64 %553, 0
  br i1 %554, label %555, label %512, !llvm.loop !401

555:                                              ; preds = %512, %503
  %556 = phi <4 x i32> [ undef, %503 ], [ %550, %512 ]
  %557 = phi <4 x i32> [ undef, %503 ], [ %551, %512 ]
  %558 = phi i64 [ 0, %503 ], [ %552, %512 ]
  %559 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %503 ], [ %550, %512 ]
  %560 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %503 ], [ %551, %512 ]
  %561 = icmp eq i64 %508, 0
  br i1 %561, label %578, label %562

562:                                              ; preds = %555, %562
  %563 = phi i64 [ %575, %562 ], [ %558, %555 ]
  %564 = phi <4 x i32> [ %573, %562 ], [ %559, %555 ]
  %565 = phi <4 x i32> [ %574, %562 ], [ %560, %555 ]
  %566 = phi i64 [ %576, %562 ], [ %508, %555 ]
  %567 = getelementptr inbounds i32, i32* %500, i64 %563
  %568 = bitcast i32* %567 to <4 x i32>*
  %569 = load <4 x i32>, <4 x i32>* %568, align 4
  %570 = getelementptr inbounds i32, i32* %567, i64 4
  %571 = bitcast i32* %570 to <4 x i32>*
  %572 = load <4 x i32>, <4 x i32>* %571, align 4
  %573 = mul nsw <4 x i32> %569, %564
  %574 = mul nsw <4 x i32> %572, %565
  %575 = add i64 %563, 8
  %576 = add i64 %566, -1
  %577 = icmp eq i64 %576, 0
  br i1 %577, label %578, label %562, !llvm.loop !402

578:                                              ; preds = %562, %555
  %579 = phi <4 x i32> [ %556, %555 ], [ %573, %562 ]
  %580 = phi <4 x i32> [ %557, %555 ], [ %574, %562 ]
  %581 = mul <4 x i32> %580, %579
  %582 = shufflevector <4 x i32> %581, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %583 = mul <4 x i32> %581, %582
  %584 = shufflevector <4 x i32> %583, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %585 = mul <4 x i32> %583, %584
  %586 = extractelement <4 x i32> %585, i32 0
  %587 = icmp eq i64 %504, %501
  br i1 %587, label %599, label %588

588:                                              ; preds = %578, %499
  %589 = phi i64 [ 0, %499 ], [ %504, %578 ]
  %590 = phi i32 [ 1, %499 ], [ %586, %578 ]
  br label %591

591:                                              ; preds = %588, %591
  %592 = phi i64 [ %597, %591 ], [ %589, %588 ]
  %593 = phi i32 [ %596, %591 ], [ %590, %588 ]
  %594 = getelementptr inbounds i32, i32* %500, i64 %592
  %595 = load i32, i32* %594, align 4
  %596 = mul nsw i32 %595, %593
  %597 = add nuw nsw i64 %592, 1
  %598 = icmp eq i64 %597, %501
  br i1 %598, label %599, label %591, !llvm.loop !403

599:                                              ; preds = %591, %578, %496
  %600 = phi i32 [ 1, %496 ], [ %586, %578 ], [ %596, %591 ]
  %601 = icmp eq i32 %380, %490
  br i1 %601, label %603, label %602

602:                                              ; preds = %599
  tail call void @abort() #12
  unreachable

603:                                              ; preds = %599
  %604 = icmp eq i32 %380, %600
  br i1 %604, label %605, label %701

605:                                              ; preds = %603
  %606 = icmp sgt i32 %380, 0
  br i1 %606, label %607, label %731

607:                                              ; preds = %605
  %608 = zext i32 %380 to i64
  %609 = load float, float* %200, align 4
  %610 = load float, float* %235, align 4
  %611 = fsub float %609, %610
  %612 = fcmp olt float %611, %28
  %613 = select i1 %612, float %28, float %611
  %614 = fcmp ogt float %613, %29
  %615 = select i1 %614, float %29, float %613
  store float %615, float* %270, align 4
  %616 = icmp eq i32 %380, 1
  br i1 %616, label %731, label %617

617:                                              ; preds = %607
  %618 = add nsw i64 %608, -1
  %619 = icmp ult i64 %618, 4
  br i1 %619, label %620, label %643

620:                                              ; preds = %699, %643, %617
  %621 = phi i64 [ 1, %643 ], [ 1, %617 ], [ %674, %699 ]
  %622 = xor i64 %621, -1
  %623 = and i64 %608, 1
  %624 = icmp eq i64 %623, 0
  br i1 %624, label %625, label %639

625:                                              ; preds = %620
  %626 = load float, float* %31, align 4
  %627 = load float, float* %32, align 4
  %628 = getelementptr inbounds float, float* %200, i64 %621
  %629 = load float, float* %628, align 4
  %630 = getelementptr inbounds float, float* %235, i64 %621
  %631 = load float, float* %630, align 4
  %632 = fsub float %629, %631
  %633 = fcmp olt float %632, %626
  %634 = select i1 %633, float %626, float %632
  %635 = fcmp ogt float %634, %627
  %636 = select i1 %635, float %627, float %634
  %637 = getelementptr inbounds float, float* %270, i64 %621
  store float %636, float* %637, align 4
  %638 = add nuw nsw i64 %621, 1
  br label %639

639:                                              ; preds = %620, %625
  %640 = phi i64 [ %621, %620 ], [ %638, %625 ]
  %641 = sub nsw i64 0, %608
  %642 = icmp eq i64 %622, %641
  br i1 %642, label %731, label %702

643:                                              ; preds = %617
  %644 = getelementptr float, float* %270, i64 1
  %645 = bitcast float* %644 to i8*
  %646 = getelementptr float, float* %270, i64 %608
  %647 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 13
  %648 = bitcast float* %647 to i8*
  %649 = getelementptr inbounds i8, i8* %648, i64 1
  %650 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 14
  %651 = bitcast float* %650 to i8*
  %652 = getelementptr inbounds i8, i8* %651, i64 1
  %653 = getelementptr float, float* %200, i64 1
  %654 = getelementptr float, float* %200, i64 %608
  %655 = getelementptr float, float* %235, i64 1
  %656 = getelementptr float, float* %235, i64 %608
  %657 = icmp ugt i8* %649, %645
  %658 = icmp ult float* %31, %646
  %659 = and i1 %657, %658
  %660 = icmp ugt i8* %652, %645
  %661 = icmp ult float* %32, %646
  %662 = and i1 %660, %661
  %663 = or i1 %659, %662
  %664 = icmp ult float* %644, %654
  %665 = icmp ult float* %653, %646
  %666 = and i1 %664, %665
  %667 = or i1 %663, %666
  %668 = icmp ult float* %644, %656
  %669 = icmp ult float* %655, %646
  %670 = and i1 %668, %669
  %671 = or i1 %667, %670
  br i1 %671, label %620, label %672

672:                                              ; preds = %643
  %673 = and i64 %618, -4
  %674 = or i64 %673, 1
  %675 = load float, float* %31, align 4, !alias.scope !404
  %676 = insertelement <4 x float> undef, float %675, i32 0
  %677 = shufflevector <4 x float> %676, <4 x float> undef, <4 x i32> zeroinitializer
  %678 = load float, float* %32, align 4, !alias.scope !407
  %679 = insertelement <4 x float> undef, float %678, i32 0
  %680 = shufflevector <4 x float> %679, <4 x float> undef, <4 x i32> zeroinitializer
  br label %681

681:                                              ; preds = %681, %672
  %682 = phi i64 [ 0, %672 ], [ %697, %681 ]
  %683 = or i64 %682, 1
  %684 = getelementptr inbounds float, float* %200, i64 %683
  %685 = bitcast float* %684 to <4 x float>*
  %686 = load <4 x float>, <4 x float>* %685, align 4, !alias.scope !409
  %687 = getelementptr inbounds float, float* %235, i64 %683
  %688 = bitcast float* %687 to <4 x float>*
  %689 = load <4 x float>, <4 x float>* %688, align 4, !alias.scope !411
  %690 = fsub <4 x float> %686, %689
  %691 = fcmp olt <4 x float> %690, %677
  %692 = select <4 x i1> %691, <4 x float> %677, <4 x float> %690
  %693 = fcmp ogt <4 x float> %692, %680
  %694 = select <4 x i1> %693, <4 x float> %680, <4 x float> %692
  %695 = getelementptr inbounds float, float* %270, i64 %683
  %696 = bitcast float* %695 to <4 x float>*
  store <4 x float> %694, <4 x float>* %696, align 4, !alias.scope !413, !noalias !415
  %697 = add i64 %682, 4
  %698 = icmp eq i64 %697, %673
  br i1 %698, label %699, label %681, !llvm.loop !416

699:                                              ; preds = %681
  %700 = icmp eq i64 %618, %673
  br i1 %700, label %731, label %620

701:                                              ; preds = %603
  tail call void @abort() #12
  unreachable

702:                                              ; preds = %639, %702
  %703 = phi i64 [ %729, %702 ], [ %640, %639 ]
  %704 = load float, float* %31, align 4
  %705 = load float, float* %32, align 4
  %706 = getelementptr inbounds float, float* %200, i64 %703
  %707 = load float, float* %706, align 4
  %708 = getelementptr inbounds float, float* %235, i64 %703
  %709 = load float, float* %708, align 4
  %710 = fsub float %707, %709
  %711 = fcmp olt float %710, %704
  %712 = select i1 %711, float %704, float %710
  %713 = fcmp ogt float %712, %705
  %714 = select i1 %713, float %705, float %712
  %715 = getelementptr inbounds float, float* %270, i64 %703
  store float %714, float* %715, align 4
  %716 = add nuw nsw i64 %703, 1
  %717 = load float, float* %31, align 4
  %718 = load float, float* %32, align 4
  %719 = getelementptr inbounds float, float* %200, i64 %716
  %720 = load float, float* %719, align 4
  %721 = getelementptr inbounds float, float* %235, i64 %716
  %722 = load float, float* %721, align 4
  %723 = fsub float %720, %722
  %724 = fcmp olt float %723, %717
  %725 = select i1 %724, float %717, float %723
  %726 = fcmp ogt float %725, %718
  %727 = select i1 %726, float %718, float %725
  %728 = getelementptr inbounds float, float* %270, i64 %716
  store float %727, float* %728, align 4
  %729 = add nuw nsw i64 %703, 2
  %730 = icmp eq i64 %729, %608
  br i1 %730, label %731, label %702, !llvm.loop !417

731:                                              ; preds = %639, %702, %607, %699, %605
  br i1 %491, label %732, label %738

732:                                              ; preds = %731
  %733 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %734 = load i32*, i32** %733, align 8
  %735 = icmp eq i32* %734, null
  br i1 %735, label %738, label %736

736:                                              ; preds = %732
  %737 = bitcast i32* %734 to i8*
  tail call void @_ZdaPv(i8* %737) #10
  br label %738

738:                                              ; preds = %731, %732, %736
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %236) #11
  br i1 %381, label %739, label %745

739:                                              ; preds = %738
  %740 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %741 = load i32*, i32** %740, align 8
  %742 = icmp eq i32* %741, null
  br i1 %742, label %745, label %743

743:                                              ; preds = %739
  %744 = bitcast i32* %741 to i8*
  tail call void @_ZdaPv(i8* %744) #10
  br label %745

745:                                              ; preds = %738, %739, %743
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %201) #11
  br i1 %271, label %746, label %752

746:                                              ; preds = %745
  %747 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %748 = load i32*, i32** %747, align 8
  %749 = icmp eq i32* %748, null
  br i1 %749, label %752, label %750

750:                                              ; preds = %746
  %751 = bitcast i32* %748 to i8*
  tail call void @_ZdaPv(i8* %751) #10
  br label %752

752:                                              ; preds = %750, %746, %745, %163, %159, %155
  %753 = phi i8* [ %34, %155 ], [ %34, %159 ], [ %34, %163 ], [ %166, %745 ], [ %166, %746 ], [ %166, %750 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %753) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %30) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops14AddElementwiseEiRKNS_16ArithmeticParamsEPKhS5_Ph(i32, %"struct.tflite::ArithmeticParams"* dereferenceable(80), i8*, i8*, i8*) local_unnamed_addr #7 comdat {
  %6 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 1
  %8 = icmp sgt i32 %0, 0
  br i1 %8, label %9, label %148

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 6
  %11 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 7
  %12 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 8
  %13 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 9
  %14 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 10
  %15 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 4
  %16 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 5
  %17 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 3
  %18 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 12
  %19 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 11
  %20 = zext i32 %0 to i64
  br label %21

21:                                               ; preds = %121, %9
  %22 = phi i64 [ 0, %9 ], [ %146, %121 ]
  %23 = load i32, i32* %7, align 4
  %24 = getelementptr inbounds i8, i8* %2, i64 %22
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = add nsw i32 %23, %26
  %28 = load i32, i32* %6, align 4
  %29 = getelementptr inbounds i8, i8* %3, i64 %22
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = add nsw i32 %28, %31
  %33 = load i32, i32* %10, align 4
  %34 = shl i32 %27, %33
  %35 = shl i32 %32, %33
  %36 = load i32, i32* %11, align 4
  %37 = load i32, i32* %12, align 4
  %38 = icmp eq i32 %34, %36
  br i1 %38, label %43, label %39

39:                                               ; preds = %21
  %40 = sext i32 %34 to i64
  %41 = sext i32 %36 to i64
  %42 = mul nsw i64 %41, %40
  br label %47

43:                                               ; preds = %21
  %44 = icmp eq i32 %34, -2147483648
  %45 = sext i32 %34 to i64
  %46 = mul nsw i64 %45, %45
  br i1 %44, label %54, label %47

47:                                               ; preds = %43, %39
  %48 = phi i64 [ %42, %39 ], [ %46, %43 ]
  %49 = icmp sgt i64 %48, -1
  %50 = select i1 %49, i64 1073741824, i64 -1073741823
  %51 = add nsw i64 %50, %48
  %52 = sdiv i64 %51, 2147483648
  %53 = trunc i64 %52 to i32
  br label %54

54:                                               ; preds = %43, %47
  %55 = phi i32 [ %53, %47 ], [ 2147483647, %43 ]
  %56 = sub nsw i32 0, %37
  %57 = zext i32 %56 to i64
  %58 = shl nsw i64 -1, %57
  %59 = trunc i64 %58 to i32
  %60 = xor i32 %59, -1
  %61 = and i32 %55, %60
  %62 = ashr i32 %60, 1
  %63 = lshr i32 %55, 31
  %64 = add nsw i32 %63, %62
  %65 = ashr i32 %55, %56
  %66 = icmp sgt i32 %61, %64
  %67 = zext i1 %66 to i32
  %68 = load i32, i32* %13, align 4
  %69 = load i32, i32* %14, align 4
  %70 = icmp eq i32 %35, %68
  br i1 %70, label %75, label %71

71:                                               ; preds = %54
  %72 = sext i32 %35 to i64
  %73 = sext i32 %68 to i64
  %74 = mul nsw i64 %73, %72
  br label %79

75:                                               ; preds = %54
  %76 = icmp eq i32 %35, -2147483648
  %77 = sext i32 %35 to i64
  %78 = mul nsw i64 %77, %77
  br i1 %76, label %86, label %79

79:                                               ; preds = %75, %71
  %80 = phi i64 [ %74, %71 ], [ %78, %75 ]
  %81 = icmp sgt i64 %80, -1
  %82 = select i1 %81, i64 1073741824, i64 -1073741823
  %83 = add nsw i64 %82, %80
  %84 = sdiv i64 %83, 2147483648
  %85 = trunc i64 %84 to i32
  br label %86

86:                                               ; preds = %75, %79
  %87 = phi i32 [ %85, %79 ], [ 2147483647, %75 ]
  %88 = sub nsw i32 0, %69
  %89 = zext i32 %88 to i64
  %90 = shl nsw i64 -1, %89
  %91 = trunc i64 %90 to i32
  %92 = xor i32 %91, -1
  %93 = and i32 %87, %92
  %94 = ashr i32 %92, 1
  %95 = lshr i32 %87, 31
  %96 = add nsw i32 %95, %94
  %97 = ashr i32 %87, %88
  %98 = icmp sgt i32 %93, %96
  %99 = zext i1 %98 to i32
  %100 = add i32 %65, %67
  %101 = add i32 %100, %97
  %102 = add i32 %101, %99
  %103 = load i32, i32* %15, align 4
  %104 = load i32, i32* %16, align 4
  %105 = icmp eq i32 %102, %103
  br i1 %105, label %110, label %106

106:                                              ; preds = %86
  %107 = sext i32 %102 to i64
  %108 = sext i32 %103 to i64
  %109 = mul nsw i64 %107, %108
  br label %114

110:                                              ; preds = %86
  %111 = icmp eq i32 %102, -2147483648
  %112 = sext i32 %102 to i64
  %113 = mul nsw i64 %112, %112
  br i1 %111, label %121, label %114

114:                                              ; preds = %110, %106
  %115 = phi i64 [ %109, %106 ], [ %113, %110 ]
  %116 = icmp sgt i64 %115, -1
  %117 = select i1 %116, i64 1073741824, i64 -1073741823
  %118 = add nsw i64 %117, %115
  %119 = sdiv i64 %118, 2147483648
  %120 = trunc i64 %119 to i32
  br label %121

121:                                              ; preds = %110, %114
  %122 = phi i32 [ %120, %114 ], [ 2147483647, %110 ]
  %123 = sub nsw i32 0, %104
  %124 = zext i32 %123 to i64
  %125 = shl nsw i64 -1, %124
  %126 = trunc i64 %125 to i32
  %127 = xor i32 %126, -1
  %128 = and i32 %122, %127
  %129 = ashr i32 %127, 1
  %130 = lshr i32 %122, 31
  %131 = add nsw i32 %130, %129
  %132 = ashr i32 %122, %123
  %133 = icmp sgt i32 %128, %131
  %134 = zext i1 %133 to i32
  %135 = load i32, i32* %17, align 4
  %136 = add i32 %135, %132
  %137 = add i32 %136, %134
  %138 = load i32, i32* %19, align 4
  %139 = icmp slt i32 %138, %137
  %140 = select i1 %139, i32 %137, i32 %138
  %141 = load i32, i32* %18, align 4
  %142 = icmp slt i32 %140, %141
  %143 = select i1 %142, i32 %140, i32 %141
  %144 = trunc i32 %143 to i8
  %145 = getelementptr inbounds i8, i8* %4, i64 %22
  store i8 %144, i8* %145, align 1
  %146 = add nuw nsw i64 %22, 1
  %147 = icmp eq i64 %146, %20
  br i1 %147, label %148, label %21

148:                                              ; preds = %121, %5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops18AddScalarBroadcastEiRKNS_16ArithmeticParamsEhPKhPh(i32, %"struct.tflite::ArithmeticParams"* dereferenceable(80), i8 zeroext, i8*, i8*) local_unnamed_addr #7 comdat {
  %6 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 2
  %7 = icmp sgt i32 %0, 0
  br i1 %7, label %8, label %149

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = zext i8 %2 to i32
  %12 = add nsw i32 %10, %11
  %13 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 6
  %14 = load i32, i32* %13, align 4
  %15 = shl i32 %12, %14
  %16 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 7
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 8
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %15, %17
  br i1 %20, label %25, label %21

21:                                               ; preds = %8
  %22 = sext i32 %15 to i64
  %23 = sext i32 %17 to i64
  %24 = mul nsw i64 %23, %22
  br label %29

25:                                               ; preds = %8
  %26 = icmp eq i32 %15, -2147483648
  %27 = sext i32 %15 to i64
  %28 = mul nsw i64 %27, %27
  br i1 %26, label %36, label %29

29:                                               ; preds = %25, %21
  %30 = phi i64 [ %24, %21 ], [ %28, %25 ]
  %31 = icmp sgt i64 %30, -1
  %32 = select i1 %31, i64 1073741824, i64 -1073741823
  %33 = add nsw i64 %32, %30
  %34 = sdiv i64 %33, 2147483648
  %35 = trunc i64 %34 to i32
  br label %36

36:                                               ; preds = %29, %25
  %37 = phi i32 [ %35, %29 ], [ 2147483647, %25 ]
  %38 = sub nsw i32 0, %19
  %39 = zext i32 %38 to i64
  %40 = shl nsw i64 -1, %39
  %41 = trunc i64 %40 to i32
  %42 = xor i32 %41, -1
  %43 = and i32 %37, %42
  %44 = lshr i32 %37, 31
  %45 = ashr i32 %42, 1
  %46 = add nsw i32 %44, %45
  %47 = icmp sgt i32 %43, %46
  %48 = zext i1 %47 to i32
  %49 = ashr i32 %37, %38
  %50 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 9
  %51 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 10
  %52 = add i32 %49, %48
  %53 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 4
  %54 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 5
  %55 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 3
  %56 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 12
  %57 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %1, i64 0, i32 11
  %58 = zext i32 %0 to i64
  br label %59

59:                                               ; preds = %147, %36
  %60 = phi i32 [ %14, %36 ], [ %148, %147 ]
  %61 = phi i64 [ 0, %36 ], [ %145, %147 ]
  %62 = load i32, i32* %6, align 4
  %63 = getelementptr inbounds i8, i8* %3, i64 %61
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = add nsw i32 %62, %65
  %67 = shl i32 %66, %60
  %68 = load i32, i32* %50, align 4
  %69 = load i32, i32* %51, align 4
  %70 = icmp eq i32 %67, %68
  br i1 %70, label %75, label %71

71:                                               ; preds = %59
  %72 = sext i32 %67 to i64
  %73 = sext i32 %68 to i64
  %74 = mul nsw i64 %72, %73
  br label %79

75:                                               ; preds = %59
  %76 = icmp eq i32 %67, -2147483648
  %77 = sext i32 %67 to i64
  %78 = mul nsw i64 %77, %77
  br i1 %76, label %86, label %79

79:                                               ; preds = %75, %71
  %80 = phi i64 [ %74, %71 ], [ %78, %75 ]
  %81 = icmp sgt i64 %80, -1
  %82 = select i1 %81, i64 1073741824, i64 -1073741823
  %83 = add nsw i64 %82, %80
  %84 = sdiv i64 %83, 2147483648
  %85 = trunc i64 %84 to i32
  br label %86

86:                                               ; preds = %75, %79
  %87 = phi i32 [ %85, %79 ], [ 2147483647, %75 ]
  %88 = sub nsw i32 0, %69
  %89 = zext i32 %88 to i64
  %90 = shl nsw i64 -1, %89
  %91 = trunc i64 %90 to i32
  %92 = xor i32 %91, -1
  %93 = and i32 %87, %92
  %94 = ashr i32 %92, 1
  %95 = lshr i32 %87, 31
  %96 = add nsw i32 %95, %94
  %97 = ashr i32 %87, %88
  %98 = icmp sgt i32 %93, %96
  %99 = zext i1 %98 to i32
  %100 = add i32 %52, %97
  %101 = add i32 %100, %99
  %102 = load i32, i32* %53, align 4
  %103 = load i32, i32* %54, align 4
  %104 = icmp eq i32 %101, %102
  br i1 %104, label %109, label %105

105:                                              ; preds = %86
  %106 = sext i32 %101 to i64
  %107 = sext i32 %102 to i64
  %108 = mul nsw i64 %106, %107
  br label %113

109:                                              ; preds = %86
  %110 = icmp eq i32 %101, -2147483648
  %111 = sext i32 %101 to i64
  %112 = mul nsw i64 %111, %111
  br i1 %110, label %120, label %113

113:                                              ; preds = %109, %105
  %114 = phi i64 [ %108, %105 ], [ %112, %109 ]
  %115 = icmp sgt i64 %114, -1
  %116 = select i1 %115, i64 1073741824, i64 -1073741823
  %117 = add nsw i64 %116, %114
  %118 = sdiv i64 %117, 2147483648
  %119 = trunc i64 %118 to i32
  br label %120

120:                                              ; preds = %109, %113
  %121 = phi i32 [ %119, %113 ], [ 2147483647, %109 ]
  %122 = sub nsw i32 0, %103
  %123 = zext i32 %122 to i64
  %124 = shl nsw i64 -1, %123
  %125 = trunc i64 %124 to i32
  %126 = xor i32 %125, -1
  %127 = and i32 %121, %126
  %128 = ashr i32 %126, 1
  %129 = lshr i32 %121, 31
  %130 = add nsw i32 %129, %128
  %131 = ashr i32 %121, %122
  %132 = icmp sgt i32 %127, %130
  %133 = zext i1 %132 to i32
  %134 = load i32, i32* %55, align 4
  %135 = add i32 %134, %131
  %136 = add i32 %135, %133
  %137 = load i32, i32* %57, align 4
  %138 = icmp slt i32 %137, %136
  %139 = select i1 %138, i32 %136, i32 %137
  %140 = load i32, i32* %56, align 4
  %141 = icmp slt i32 %139, %140
  %142 = select i1 %141, i32 %139, i32 %140
  %143 = trunc i32 %142 to i8
  %144 = getelementptr inbounds i8, i8* %4, i64 %61
  store i8 %143, i8* %144, align 1
  %145 = add nuw nsw i64 %61, 1
  %146 = icmp eq i64 %145, %58
  br i1 %146, label %149, label %147

147:                                              ; preds = %120
  %148 = load i32, i32* %13, align 4
  br label %59

149:                                              ; preds = %120, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin3sub13EvalQuantizedILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteSubParams*, %"struct.tflite::ops::builtin::sub::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %8 = alloca %"struct.tflite::ArithmeticParams", align 4
  %9 = alloca %"struct.tflite::ArithmeticParams", align 4
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"class.tflite::RuntimeShape", align 8
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca %"class.tflite::RuntimeShape", align 8
  %22 = alloca %"class.tflite::RuntimeShape", align 8
  %23 = alloca %"class.tflite::RuntimeShape", align 8
  %24 = alloca %"class.tflite::RuntimeShape", align 8
  %25 = alloca %"class.tflite::RuntimeShape", align 8
  %26 = alloca %"class.tflite::RuntimeShape", align 8
  %27 = alloca %"class.tflite::RuntimeShape", align 8
  %28 = alloca %"class.tflite::RuntimeShape", align 8
  %29 = alloca %"class.tflite::RuntimeShape", align 8
  %30 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %30) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3sub13EvalQuantizedILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.op_params, i64 0, i32 0), i64 80, i1 false)
  %31 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 9
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 6
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 10
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 1
  store i32 %35, i32* %36, align 4
  %37 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 5
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 7
  store i32 %38, i32* %39, align 4
  %40 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 8
  store i32 %41, i32* %42, align 4
  %43 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 11
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 2
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 6
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 9
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 10
  store i32 %50, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 12
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 3
  store i32 %53, i32* %54, align 4
  %55 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 7
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 4
  store i32 %56, i32* %57, align 4
  %58 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 8
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 5
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"struct.tflite::ops::builtin::sub::OpData", %"struct.tflite::ops::builtin::sub::OpData"* %3, i64 0, i32 4
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 11
  store i32 %62, i32* %65, align 4
  %66 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 12
  store i32 %64, i32* %66, align 4
  %67 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #11
  %68 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %68, label %69, label %71

69:                                               ; preds = %7
  %70 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %70, align 8, !alias.scope !418
  br label %96

71:                                               ; preds = %7
  %72 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %73 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %72, align 8, !noalias !418
  %74 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 0
  %75 = load i32, i32* %74, align 4, !noalias !418
  %76 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 1, i64 0
  %77 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %75, i32* %77, align 8, !alias.scope !418
  %78 = icmp sgt i32 %75, 5
  br i1 %78, label %79, label %86

79:                                               ; preds = %71
  %80 = sext i32 %75 to i64
  %81 = shl nsw i64 %80, 2
  %82 = tail call i8* @_Znam(i64 %81) #10, !noalias !418
  %83 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %84 = bitcast i32** %83 to i8**
  store i8* %82, i8** %84, align 8, !alias.scope !418
  %85 = bitcast i8* %82 to i32*
  br label %91

86:                                               ; preds = %71
  %87 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %88 = bitcast %union.anon* %87 to i32*
  %89 = sext i32 %75 to i64
  %90 = shl nsw i64 %89, 2
  br label %91

91:                                               ; preds = %86, %79
  %92 = phi i64 [ %81, %79 ], [ %90, %86 ]
  %93 = phi i32* [ %85, %79 ], [ %88, %86 ]
  %94 = bitcast i32* %93 to i8*
  %95 = bitcast i32* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 4 %95, i64 %92, i1 false) #11
  br label %96

96:                                               ; preds = %69, %91
  %97 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %97) #11
  %98 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %98, label %99, label %101

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %100, align 8, !alias.scope !421
  br label %126

101:                                              ; preds = %96
  %102 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %103 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %102, align 8, !noalias !421
  %104 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 0
  %105 = load i32, i32* %104, align 4, !noalias !421
  %106 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 1, i64 0
  %107 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %105, i32* %107, align 8, !alias.scope !421
  %108 = icmp sgt i32 %105, 5
  br i1 %108, label %109, label %116

109:                                              ; preds = %101
  %110 = sext i32 %105 to i64
  %111 = shl nsw i64 %110, 2
  %112 = tail call i8* @_Znam(i64 %111) #10, !noalias !421
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %114 = bitcast i32** %113 to i8**
  store i8* %112, i8** %114, align 8, !alias.scope !421
  %115 = bitcast i8* %112 to i32*
  br label %121

116:                                              ; preds = %101
  %117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %118 = bitcast %union.anon* %117 to i32*
  %119 = sext i32 %105 to i64
  %120 = shl nsw i64 %119, 2
  br label %121

121:                                              ; preds = %116, %109
  %122 = phi i64 [ %111, %109 ], [ %120, %116 ]
  %123 = phi i32* [ %115, %109 ], [ %118, %116 ]
  %124 = bitcast i32* %123 to i8*
  %125 = bitcast i32* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %124, i8* align 4 %125, i64 %122, i1 false) #11
  br label %126

126:                                              ; preds = %99, %121
  %127 = call zeroext i1 @_ZN6tflite13reference_ops22ProcessBroadcastShapesERKNS_12RuntimeShapeES3_PNS_16ArithmeticParamsE(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, %"struct.tflite::ArithmeticParams"* nonnull %9)
  %128 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %129 = load i32, i32* %128, align 8
  %130 = icmp sgt i32 %129, 5
  br i1 %130, label %131, label %137

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %133 = load i32*, i32** %132, align 8
  %134 = icmp eq i32* %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %131
  %136 = bitcast i32* %133 to i8*
  call void @_ZdaPv(i8* %136) #10
  br label %137

137:                                              ; preds = %126, %131, %135
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %97) #11
  %138 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %139 = load i32, i32* %138, align 8
  %140 = icmp sgt i32 %139, 5
  br i1 %140, label %141, label %147

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %143 = load i32*, i32** %142, align 8
  %144 = icmp eq i32* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %141
  %146 = bitcast i32* %143 to i8*
  call void @_ZdaPv(i8* %146) #10
  br label %147

147:                                              ; preds = %137, %141, %145
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #11
  %148 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 0
  %149 = load i32, i32* %148, align 8
  switch i32 %149, label %1447 [
    i32 9, label %150
    i32 3, label %741
  ]

150:                                              ; preds = %147
  br i1 %127, label %151, label %281

151:                                              ; preds = %150
  %152 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %152) #11
  br i1 %68, label %153, label %155

153:                                              ; preds = %151
  %154 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %154, align 8, !alias.scope !424
  br label %183

155:                                              ; preds = %151
  %156 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %157 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %156, align 8, !noalias !424
  %158 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %157, i64 0, i32 0
  %159 = load i32, i32* %158, align 4, !noalias !424
  %160 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %157, i64 0, i32 1, i64 0
  %161 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %159, i32* %161, align 8, !alias.scope !424
  %162 = icmp sgt i32 %159, 5
  br i1 %162, label %163, label %170

163:                                              ; preds = %155
  %164 = sext i32 %159 to i64
  %165 = shl nsw i64 %164, 2
  %166 = call i8* @_Znam(i64 %165) #10, !noalias !424
  %167 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %168 = bitcast i32** %167 to i8**
  store i8* %166, i8** %168, align 8, !alias.scope !424
  %169 = bitcast i8* %166 to i32*
  br label %175

170:                                              ; preds = %155
  %171 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %172 = bitcast %union.anon* %171 to i32*
  %173 = sext i32 %159 to i64
  %174 = shl nsw i64 %173, 2
  br label %175

175:                                              ; preds = %170, %163
  %176 = phi i64 [ %165, %163 ], [ %174, %170 ]
  %177 = phi i32* [ %169, %163 ], [ %172, %170 ]
  %178 = bitcast i32* %177 to i8*
  %179 = bitcast i32* %160 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %178, i8* align 4 %179, i64 %176, i1 false) #11
  %180 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %181 = bitcast %union.TfLitePtrUnion* %180 to i8**
  %182 = load i8*, i8** %181, align 8
  br label %183

183:                                              ; preds = %153, %175
  %184 = phi i8* [ %182, %175 ], [ null, %153 ]
  %185 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %185) #11
  br i1 %98, label %186, label %188

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %187, align 8, !alias.scope !427
  br label %216

188:                                              ; preds = %183
  %189 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %190 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %189, align 8, !noalias !427
  %191 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %190, i64 0, i32 0
  %192 = load i32, i32* %191, align 4, !noalias !427
  %193 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %190, i64 0, i32 1, i64 0
  %194 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %192, i32* %194, align 8, !alias.scope !427
  %195 = icmp sgt i32 %192, 5
  br i1 %195, label %196, label %203

196:                                              ; preds = %188
  %197 = sext i32 %192 to i64
  %198 = shl nsw i64 %197, 2
  %199 = call i8* @_Znam(i64 %198) #10, !noalias !427
  %200 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %201 = bitcast i32** %200 to i8**
  store i8* %199, i8** %201, align 8, !alias.scope !427
  %202 = bitcast i8* %199 to i32*
  br label %208

203:                                              ; preds = %188
  %204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %205 = bitcast %union.anon* %204 to i32*
  %206 = sext i32 %192 to i64
  %207 = shl nsw i64 %206, 2
  br label %208

208:                                              ; preds = %203, %196
  %209 = phi i64 [ %198, %196 ], [ %207, %203 ]
  %210 = phi i32* [ %202, %196 ], [ %205, %203 ]
  %211 = bitcast i32* %210 to i8*
  %212 = bitcast i32* %193 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %211, i8* align 4 %212, i64 %209, i1 false) #11
  %213 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %214 = bitcast %union.TfLitePtrUnion* %213 to i8**
  %215 = load i8*, i8** %214, align 8
  br label %216

216:                                              ; preds = %186, %208
  %217 = phi i8* [ %215, %208 ], [ null, %186 ]
  %218 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %218) #11
  %219 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %219, label %220, label %222

220:                                              ; preds = %216
  %221 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %221, align 8, !alias.scope !430
  br label %250

222:                                              ; preds = %216
  %223 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %224 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %223, align 8, !noalias !430
  %225 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %224, i64 0, i32 0
  %226 = load i32, i32* %225, align 4, !noalias !430
  %227 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %224, i64 0, i32 1, i64 0
  %228 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %226, i32* %228, align 8, !alias.scope !430
  %229 = icmp sgt i32 %226, 5
  br i1 %229, label %230, label %237

230:                                              ; preds = %222
  %231 = sext i32 %226 to i64
  %232 = shl nsw i64 %231, 2
  %233 = call i8* @_Znam(i64 %232) #10, !noalias !430
  %234 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %235 = bitcast i32** %234 to i8**
  store i8* %233, i8** %235, align 8, !alias.scope !430
  %236 = bitcast i8* %233 to i32*
  br label %242

237:                                              ; preds = %222
  %238 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %239 = bitcast %union.anon* %238 to i32*
  %240 = sext i32 %226 to i64
  %241 = shl nsw i64 %240, 2
  br label %242

242:                                              ; preds = %237, %230
  %243 = phi i64 [ %232, %230 ], [ %241, %237 ]
  %244 = phi i32* [ %236, %230 ], [ %239, %237 ]
  %245 = bitcast i32* %244 to i8*
  %246 = bitcast i32* %227 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %245, i8* align 4 %246, i64 %243, i1 false) #11
  %247 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %248 = bitcast %union.TfLitePtrUnion* %247 to i8**
  %249 = load i8*, i8** %248, align 8
  br label %250

250:                                              ; preds = %220, %242
  %251 = phi i8* [ %249, %242 ], [ null, %220 ]
  call void @_ZN6tflite21reference_integer_ops18BroadcastAdd4DSlowERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKaS6_S8_S6_Pa(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i8* %184, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i8* %217, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i8* %251)
  %252 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %253 = load i32, i32* %252, align 8
  %254 = icmp sgt i32 %253, 5
  br i1 %254, label %255, label %261

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %257 = load i32*, i32** %256, align 8
  %258 = icmp eq i32* %257, null
  br i1 %258, label %261, label %259

259:                                              ; preds = %255
  %260 = bitcast i32* %257 to i8*
  call void @_ZdaPv(i8* %260) #10
  br label %261

261:                                              ; preds = %250, %255, %259
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %218) #11
  %262 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %263 = load i32, i32* %262, align 8
  %264 = icmp sgt i32 %263, 5
  br i1 %264, label %265, label %271

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %267 = load i32*, i32** %266, align 8
  %268 = icmp eq i32* %267, null
  br i1 %268, label %271, label %269

269:                                              ; preds = %265
  %270 = bitcast i32* %267 to i8*
  call void @_ZdaPv(i8* %270) #10
  br label %271

271:                                              ; preds = %261, %265, %269
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %185) #11
  %272 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %273 = load i32, i32* %272, align 8
  %274 = icmp sgt i32 %273, 5
  br i1 %274, label %275, label %1708

275:                                              ; preds = %271
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %277 = load i32*, i32** %276, align 8
  %278 = icmp eq i32* %277, null
  br i1 %278, label %1708, label %279

279:                                              ; preds = %275
  %280 = bitcast i32* %277 to i8*
  call void @_ZdaPv(i8* %280) #10
  br label %1708

281:                                              ; preds = %150
  %282 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %282) #11
  br i1 %68, label %283, label %285

283:                                              ; preds = %281
  %284 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %284, align 8, !alias.scope !433
  br label %313

285:                                              ; preds = %281
  %286 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %287 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %286, align 8, !noalias !433
  %288 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %287, i64 0, i32 0
  %289 = load i32, i32* %288, align 4, !noalias !433
  %290 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %287, i64 0, i32 1, i64 0
  %291 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %289, i32* %291, align 8, !alias.scope !433
  %292 = icmp sgt i32 %289, 5
  br i1 %292, label %293, label %300

293:                                              ; preds = %285
  %294 = sext i32 %289 to i64
  %295 = shl nsw i64 %294, 2
  %296 = call i8* @_Znam(i64 %295) #10, !noalias !433
  %297 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %298 = bitcast i32** %297 to i8**
  store i8* %296, i8** %298, align 8, !alias.scope !433
  %299 = bitcast i8* %296 to i32*
  br label %305

300:                                              ; preds = %285
  %301 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %302 = bitcast %union.anon* %301 to i32*
  %303 = sext i32 %289 to i64
  %304 = shl nsw i64 %303, 2
  br label %305

305:                                              ; preds = %300, %293
  %306 = phi i64 [ %295, %293 ], [ %304, %300 ]
  %307 = phi i32* [ %299, %293 ], [ %302, %300 ]
  %308 = bitcast i32* %307 to i8*
  %309 = bitcast i32* %290 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %308, i8* align 4 %309, i64 %306, i1 false) #11
  %310 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %311 = bitcast %union.TfLitePtrUnion* %310 to i8**
  %312 = load i8*, i8** %311, align 8
  br label %313

313:                                              ; preds = %283, %305
  %314 = phi i32 [ %289, %305 ], [ 0, %283 ]
  %315 = phi i8* [ %312, %305 ], [ null, %283 ]
  %316 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %316) #11
  br i1 %98, label %317, label %319

317:                                              ; preds = %313
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %318, align 8, !alias.scope !436
  br label %347

319:                                              ; preds = %313
  %320 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %321 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %320, align 8, !noalias !436
  %322 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %321, i64 0, i32 0
  %323 = load i32, i32* %322, align 4, !noalias !436
  %324 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %321, i64 0, i32 1, i64 0
  %325 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %323, i32* %325, align 8, !alias.scope !436
  %326 = icmp sgt i32 %323, 5
  br i1 %326, label %327, label %334

327:                                              ; preds = %319
  %328 = sext i32 %323 to i64
  %329 = shl nsw i64 %328, 2
  %330 = call i8* @_Znam(i64 %329) #10, !noalias !436
  %331 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %332 = bitcast i32** %331 to i8**
  store i8* %330, i8** %332, align 8, !alias.scope !436
  %333 = bitcast i8* %330 to i32*
  br label %339

334:                                              ; preds = %319
  %335 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %336 = bitcast %union.anon* %335 to i32*
  %337 = sext i32 %323 to i64
  %338 = shl nsw i64 %337, 2
  br label %339

339:                                              ; preds = %334, %327
  %340 = phi i64 [ %329, %327 ], [ %338, %334 ]
  %341 = phi i32* [ %333, %327 ], [ %336, %334 ]
  %342 = bitcast i32* %341 to i8*
  %343 = bitcast i32* %324 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %342, i8* align 4 %343, i64 %340, i1 false) #11
  %344 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %345 = bitcast %union.TfLitePtrUnion* %344 to i8**
  %346 = load i8*, i8** %345, align 8
  br label %347

347:                                              ; preds = %317, %339
  %348 = phi i32 [ %323, %339 ], [ 0, %317 ]
  %349 = phi i8* [ %346, %339 ], [ null, %317 ]
  %350 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %350) #11
  %351 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %351, label %352, label %354

352:                                              ; preds = %347
  %353 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %353, align 8, !alias.scope !439
  br label %382

354:                                              ; preds = %347
  %355 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %356 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %355, align 8, !noalias !439
  %357 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %356, i64 0, i32 0
  %358 = load i32, i32* %357, align 4, !noalias !439
  %359 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %356, i64 0, i32 1, i64 0
  %360 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %358, i32* %360, align 8, !alias.scope !439
  %361 = icmp sgt i32 %358, 5
  br i1 %361, label %362, label %369

362:                                              ; preds = %354
  %363 = sext i32 %358 to i64
  %364 = shl nsw i64 %363, 2
  %365 = call i8* @_Znam(i64 %364) #10, !noalias !439
  %366 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %367 = bitcast i32** %366 to i8**
  store i8* %365, i8** %367, align 8, !alias.scope !439
  %368 = bitcast i8* %365 to i32*
  br label %374

369:                                              ; preds = %354
  %370 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %371 = bitcast %union.anon* %370 to i32*
  %372 = sext i32 %358 to i64
  %373 = shl nsw i64 %372, 2
  br label %374

374:                                              ; preds = %369, %362
  %375 = phi i64 [ %364, %362 ], [ %373, %369 ]
  %376 = phi i32* [ %368, %362 ], [ %371, %369 ]
  %377 = bitcast i32* %376 to i8*
  %378 = bitcast i32* %359 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %377, i8* align 4 %378, i64 %375, i1 false) #11
  %379 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %380 = bitcast %union.TfLitePtrUnion* %379 to i8**
  %381 = load i8*, i8** %380, align 8
  br label %382

382:                                              ; preds = %352, %374
  %383 = phi i32 [ %358, %374 ], [ 0, %352 ]
  %384 = phi i8* [ %381, %374 ], [ null, %352 ]
  %385 = icmp sgt i32 %314, 5
  %386 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  br i1 %385, label %387, label %390

387:                                              ; preds = %382
  %388 = getelementptr inbounds %union.anon, %union.anon* %386, i64 0, i32 0
  %389 = load i32*, i32** %388, align 8
  br label %393

390:                                              ; preds = %382
  %391 = bitcast %union.anon* %386 to i32*
  %392 = icmp sgt i32 %314, 0
  br i1 %392, label %393, label %493

393:                                              ; preds = %390, %387
  %394 = phi i32* [ %389, %387 ], [ %391, %390 ]
  %395 = zext i32 %314 to i64
  %396 = icmp ult i32 %314, 8
  br i1 %396, label %482, label %397

397:                                              ; preds = %393
  %398 = and i64 %395, 4294967288
  %399 = add nsw i64 %398, -8
  %400 = lshr exact i64 %399, 3
  %401 = add nuw nsw i64 %400, 1
  %402 = and i64 %401, 3
  %403 = icmp ult i64 %399, 24
  br i1 %403, label %449, label %404

404:                                              ; preds = %397
  %405 = sub nsw i64 %401, %402
  br label %406

406:                                              ; preds = %406, %404
  %407 = phi i64 [ 0, %404 ], [ %446, %406 ]
  %408 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %404 ], [ %444, %406 ]
  %409 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %404 ], [ %445, %406 ]
  %410 = phi i64 [ %405, %404 ], [ %447, %406 ]
  %411 = getelementptr inbounds i32, i32* %394, i64 %407
  %412 = bitcast i32* %411 to <4 x i32>*
  %413 = load <4 x i32>, <4 x i32>* %412, align 4
  %414 = getelementptr inbounds i32, i32* %411, i64 4
  %415 = bitcast i32* %414 to <4 x i32>*
  %416 = load <4 x i32>, <4 x i32>* %415, align 4
  %417 = mul nsw <4 x i32> %413, %408
  %418 = mul nsw <4 x i32> %416, %409
  %419 = or i64 %407, 8
  %420 = getelementptr inbounds i32, i32* %394, i64 %419
  %421 = bitcast i32* %420 to <4 x i32>*
  %422 = load <4 x i32>, <4 x i32>* %421, align 4
  %423 = getelementptr inbounds i32, i32* %420, i64 4
  %424 = bitcast i32* %423 to <4 x i32>*
  %425 = load <4 x i32>, <4 x i32>* %424, align 4
  %426 = mul nsw <4 x i32> %422, %417
  %427 = mul nsw <4 x i32> %425, %418
  %428 = or i64 %407, 16
  %429 = getelementptr inbounds i32, i32* %394, i64 %428
  %430 = bitcast i32* %429 to <4 x i32>*
  %431 = load <4 x i32>, <4 x i32>* %430, align 4
  %432 = getelementptr inbounds i32, i32* %429, i64 4
  %433 = bitcast i32* %432 to <4 x i32>*
  %434 = load <4 x i32>, <4 x i32>* %433, align 4
  %435 = mul nsw <4 x i32> %431, %426
  %436 = mul nsw <4 x i32> %434, %427
  %437 = or i64 %407, 24
  %438 = getelementptr inbounds i32, i32* %394, i64 %437
  %439 = bitcast i32* %438 to <4 x i32>*
  %440 = load <4 x i32>, <4 x i32>* %439, align 4
  %441 = getelementptr inbounds i32, i32* %438, i64 4
  %442 = bitcast i32* %441 to <4 x i32>*
  %443 = load <4 x i32>, <4 x i32>* %442, align 4
  %444 = mul nsw <4 x i32> %440, %435
  %445 = mul nsw <4 x i32> %443, %436
  %446 = add i64 %407, 32
  %447 = add i64 %410, -4
  %448 = icmp eq i64 %447, 0
  br i1 %448, label %449, label %406, !llvm.loop !442

449:                                              ; preds = %406, %397
  %450 = phi <4 x i32> [ undef, %397 ], [ %444, %406 ]
  %451 = phi <4 x i32> [ undef, %397 ], [ %445, %406 ]
  %452 = phi i64 [ 0, %397 ], [ %446, %406 ]
  %453 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %397 ], [ %444, %406 ]
  %454 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %397 ], [ %445, %406 ]
  %455 = icmp eq i64 %402, 0
  br i1 %455, label %472, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %469, %456 ], [ %452, %449 ]
  %458 = phi <4 x i32> [ %467, %456 ], [ %453, %449 ]
  %459 = phi <4 x i32> [ %468, %456 ], [ %454, %449 ]
  %460 = phi i64 [ %470, %456 ], [ %402, %449 ]
  %461 = getelementptr inbounds i32, i32* %394, i64 %457
  %462 = bitcast i32* %461 to <4 x i32>*
  %463 = load <4 x i32>, <4 x i32>* %462, align 4
  %464 = getelementptr inbounds i32, i32* %461, i64 4
  %465 = bitcast i32* %464 to <4 x i32>*
  %466 = load <4 x i32>, <4 x i32>* %465, align 4
  %467 = mul nsw <4 x i32> %463, %458
  %468 = mul nsw <4 x i32> %466, %459
  %469 = add i64 %457, 8
  %470 = add i64 %460, -1
  %471 = icmp eq i64 %470, 0
  br i1 %471, label %472, label %456, !llvm.loop !443

472:                                              ; preds = %456, %449
  %473 = phi <4 x i32> [ %450, %449 ], [ %467, %456 ]
  %474 = phi <4 x i32> [ %451, %449 ], [ %468, %456 ]
  %475 = mul <4 x i32> %474, %473
  %476 = shufflevector <4 x i32> %475, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %477 = mul <4 x i32> %475, %476
  %478 = shufflevector <4 x i32> %477, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %479 = mul <4 x i32> %477, %478
  %480 = extractelement <4 x i32> %479, i32 0
  %481 = icmp eq i64 %398, %395
  br i1 %481, label %493, label %482

482:                                              ; preds = %472, %393
  %483 = phi i64 [ 0, %393 ], [ %398, %472 ]
  %484 = phi i32 [ 1, %393 ], [ %480, %472 ]
  br label %485

485:                                              ; preds = %482, %485
  %486 = phi i64 [ %491, %485 ], [ %483, %482 ]
  %487 = phi i32 [ %490, %485 ], [ %484, %482 ]
  %488 = getelementptr inbounds i32, i32* %394, i64 %486
  %489 = load i32, i32* %488, align 4
  %490 = mul nsw i32 %489, %487
  %491 = add nuw nsw i64 %486, 1
  %492 = icmp eq i64 %491, %395
  br i1 %492, label %493, label %485, !llvm.loop !444

493:                                              ; preds = %485, %472, %390
  %494 = phi i32 [ 1, %390 ], [ %480, %472 ], [ %490, %485 ]
  %495 = icmp sgt i32 %348, 5
  %496 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  br i1 %495, label %497, label %500

497:                                              ; preds = %493
  %498 = getelementptr inbounds %union.anon, %union.anon* %496, i64 0, i32 0
  %499 = load i32*, i32** %498, align 8
  br label %503

500:                                              ; preds = %493
  %501 = bitcast %union.anon* %496 to i32*
  %502 = icmp sgt i32 %348, 0
  br i1 %502, label %503, label %603

503:                                              ; preds = %500, %497
  %504 = phi i32* [ %499, %497 ], [ %501, %500 ]
  %505 = zext i32 %348 to i64
  %506 = icmp ult i32 %348, 8
  br i1 %506, label %592, label %507

507:                                              ; preds = %503
  %508 = and i64 %505, 4294967288
  %509 = add nsw i64 %508, -8
  %510 = lshr exact i64 %509, 3
  %511 = add nuw nsw i64 %510, 1
  %512 = and i64 %511, 3
  %513 = icmp ult i64 %509, 24
  br i1 %513, label %559, label %514

514:                                              ; preds = %507
  %515 = sub nsw i64 %511, %512
  br label %516

516:                                              ; preds = %516, %514
  %517 = phi i64 [ 0, %514 ], [ %556, %516 ]
  %518 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %514 ], [ %554, %516 ]
  %519 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %514 ], [ %555, %516 ]
  %520 = phi i64 [ %515, %514 ], [ %557, %516 ]
  %521 = getelementptr inbounds i32, i32* %504, i64 %517
  %522 = bitcast i32* %521 to <4 x i32>*
  %523 = load <4 x i32>, <4 x i32>* %522, align 4
  %524 = getelementptr inbounds i32, i32* %521, i64 4
  %525 = bitcast i32* %524 to <4 x i32>*
  %526 = load <4 x i32>, <4 x i32>* %525, align 4
  %527 = mul nsw <4 x i32> %523, %518
  %528 = mul nsw <4 x i32> %526, %519
  %529 = or i64 %517, 8
  %530 = getelementptr inbounds i32, i32* %504, i64 %529
  %531 = bitcast i32* %530 to <4 x i32>*
  %532 = load <4 x i32>, <4 x i32>* %531, align 4
  %533 = getelementptr inbounds i32, i32* %530, i64 4
  %534 = bitcast i32* %533 to <4 x i32>*
  %535 = load <4 x i32>, <4 x i32>* %534, align 4
  %536 = mul nsw <4 x i32> %532, %527
  %537 = mul nsw <4 x i32> %535, %528
  %538 = or i64 %517, 16
  %539 = getelementptr inbounds i32, i32* %504, i64 %538
  %540 = bitcast i32* %539 to <4 x i32>*
  %541 = load <4 x i32>, <4 x i32>* %540, align 4
  %542 = getelementptr inbounds i32, i32* %539, i64 4
  %543 = bitcast i32* %542 to <4 x i32>*
  %544 = load <4 x i32>, <4 x i32>* %543, align 4
  %545 = mul nsw <4 x i32> %541, %536
  %546 = mul nsw <4 x i32> %544, %537
  %547 = or i64 %517, 24
  %548 = getelementptr inbounds i32, i32* %504, i64 %547
  %549 = bitcast i32* %548 to <4 x i32>*
  %550 = load <4 x i32>, <4 x i32>* %549, align 4
  %551 = getelementptr inbounds i32, i32* %548, i64 4
  %552 = bitcast i32* %551 to <4 x i32>*
  %553 = load <4 x i32>, <4 x i32>* %552, align 4
  %554 = mul nsw <4 x i32> %550, %545
  %555 = mul nsw <4 x i32> %553, %546
  %556 = add i64 %517, 32
  %557 = add i64 %520, -4
  %558 = icmp eq i64 %557, 0
  br i1 %558, label %559, label %516, !llvm.loop !445

559:                                              ; preds = %516, %507
  %560 = phi <4 x i32> [ undef, %507 ], [ %554, %516 ]
  %561 = phi <4 x i32> [ undef, %507 ], [ %555, %516 ]
  %562 = phi i64 [ 0, %507 ], [ %556, %516 ]
  %563 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %507 ], [ %554, %516 ]
  %564 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %507 ], [ %555, %516 ]
  %565 = icmp eq i64 %512, 0
  br i1 %565, label %582, label %566

566:                                              ; preds = %559, %566
  %567 = phi i64 [ %579, %566 ], [ %562, %559 ]
  %568 = phi <4 x i32> [ %577, %566 ], [ %563, %559 ]
  %569 = phi <4 x i32> [ %578, %566 ], [ %564, %559 ]
  %570 = phi i64 [ %580, %566 ], [ %512, %559 ]
  %571 = getelementptr inbounds i32, i32* %504, i64 %567
  %572 = bitcast i32* %571 to <4 x i32>*
  %573 = load <4 x i32>, <4 x i32>* %572, align 4
  %574 = getelementptr inbounds i32, i32* %571, i64 4
  %575 = bitcast i32* %574 to <4 x i32>*
  %576 = load <4 x i32>, <4 x i32>* %575, align 4
  %577 = mul nsw <4 x i32> %573, %568
  %578 = mul nsw <4 x i32> %576, %569
  %579 = add i64 %567, 8
  %580 = add i64 %570, -1
  %581 = icmp eq i64 %580, 0
  br i1 %581, label %582, label %566, !llvm.loop !446

582:                                              ; preds = %566, %559
  %583 = phi <4 x i32> [ %560, %559 ], [ %577, %566 ]
  %584 = phi <4 x i32> [ %561, %559 ], [ %578, %566 ]
  %585 = mul <4 x i32> %584, %583
  %586 = shufflevector <4 x i32> %585, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %587 = mul <4 x i32> %585, %586
  %588 = shufflevector <4 x i32> %587, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %589 = mul <4 x i32> %587, %588
  %590 = extractelement <4 x i32> %589, i32 0
  %591 = icmp eq i64 %508, %505
  br i1 %591, label %603, label %592

592:                                              ; preds = %582, %503
  %593 = phi i64 [ 0, %503 ], [ %508, %582 ]
  %594 = phi i32 [ 1, %503 ], [ %590, %582 ]
  br label %595

595:                                              ; preds = %592, %595
  %596 = phi i64 [ %601, %595 ], [ %593, %592 ]
  %597 = phi i32 [ %600, %595 ], [ %594, %592 ]
  %598 = getelementptr inbounds i32, i32* %504, i64 %596
  %599 = load i32, i32* %598, align 4
  %600 = mul nsw i32 %599, %597
  %601 = add nuw nsw i64 %596, 1
  %602 = icmp eq i64 %601, %505
  br i1 %602, label %603, label %595, !llvm.loop !447

603:                                              ; preds = %595, %582, %500
  %604 = phi i32 [ 1, %500 ], [ %590, %582 ], [ %600, %595 ]
  %605 = icmp sgt i32 %383, 5
  %606 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  br i1 %605, label %607, label %610

607:                                              ; preds = %603
  %608 = getelementptr inbounds %union.anon, %union.anon* %606, i64 0, i32 0
  %609 = load i32*, i32** %608, align 8
  br label %613

610:                                              ; preds = %603
  %611 = bitcast %union.anon* %606 to i32*
  %612 = icmp sgt i32 %383, 0
  br i1 %612, label %613, label %713

613:                                              ; preds = %610, %607
  %614 = phi i32* [ %609, %607 ], [ %611, %610 ]
  %615 = zext i32 %383 to i64
  %616 = icmp ult i32 %383, 8
  br i1 %616, label %702, label %617

617:                                              ; preds = %613
  %618 = and i64 %615, 4294967288
  %619 = add nsw i64 %618, -8
  %620 = lshr exact i64 %619, 3
  %621 = add nuw nsw i64 %620, 1
  %622 = and i64 %621, 3
  %623 = icmp ult i64 %619, 24
  br i1 %623, label %669, label %624

624:                                              ; preds = %617
  %625 = sub nsw i64 %621, %622
  br label %626

626:                                              ; preds = %626, %624
  %627 = phi i64 [ 0, %624 ], [ %666, %626 ]
  %628 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %624 ], [ %664, %626 ]
  %629 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %624 ], [ %665, %626 ]
  %630 = phi i64 [ %625, %624 ], [ %667, %626 ]
  %631 = getelementptr inbounds i32, i32* %614, i64 %627
  %632 = bitcast i32* %631 to <4 x i32>*
  %633 = load <4 x i32>, <4 x i32>* %632, align 4
  %634 = getelementptr inbounds i32, i32* %631, i64 4
  %635 = bitcast i32* %634 to <4 x i32>*
  %636 = load <4 x i32>, <4 x i32>* %635, align 4
  %637 = mul nsw <4 x i32> %633, %628
  %638 = mul nsw <4 x i32> %636, %629
  %639 = or i64 %627, 8
  %640 = getelementptr inbounds i32, i32* %614, i64 %639
  %641 = bitcast i32* %640 to <4 x i32>*
  %642 = load <4 x i32>, <4 x i32>* %641, align 4
  %643 = getelementptr inbounds i32, i32* %640, i64 4
  %644 = bitcast i32* %643 to <4 x i32>*
  %645 = load <4 x i32>, <4 x i32>* %644, align 4
  %646 = mul nsw <4 x i32> %642, %637
  %647 = mul nsw <4 x i32> %645, %638
  %648 = or i64 %627, 16
  %649 = getelementptr inbounds i32, i32* %614, i64 %648
  %650 = bitcast i32* %649 to <4 x i32>*
  %651 = load <4 x i32>, <4 x i32>* %650, align 4
  %652 = getelementptr inbounds i32, i32* %649, i64 4
  %653 = bitcast i32* %652 to <4 x i32>*
  %654 = load <4 x i32>, <4 x i32>* %653, align 4
  %655 = mul nsw <4 x i32> %651, %646
  %656 = mul nsw <4 x i32> %654, %647
  %657 = or i64 %627, 24
  %658 = getelementptr inbounds i32, i32* %614, i64 %657
  %659 = bitcast i32* %658 to <4 x i32>*
  %660 = load <4 x i32>, <4 x i32>* %659, align 4
  %661 = getelementptr inbounds i32, i32* %658, i64 4
  %662 = bitcast i32* %661 to <4 x i32>*
  %663 = load <4 x i32>, <4 x i32>* %662, align 4
  %664 = mul nsw <4 x i32> %660, %655
  %665 = mul nsw <4 x i32> %663, %656
  %666 = add i64 %627, 32
  %667 = add i64 %630, -4
  %668 = icmp eq i64 %667, 0
  br i1 %668, label %669, label %626, !llvm.loop !448

669:                                              ; preds = %626, %617
  %670 = phi <4 x i32> [ undef, %617 ], [ %664, %626 ]
  %671 = phi <4 x i32> [ undef, %617 ], [ %665, %626 ]
  %672 = phi i64 [ 0, %617 ], [ %666, %626 ]
  %673 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %617 ], [ %664, %626 ]
  %674 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %617 ], [ %665, %626 ]
  %675 = icmp eq i64 %622, 0
  br i1 %675, label %692, label %676

676:                                              ; preds = %669, %676
  %677 = phi i64 [ %689, %676 ], [ %672, %669 ]
  %678 = phi <4 x i32> [ %687, %676 ], [ %673, %669 ]
  %679 = phi <4 x i32> [ %688, %676 ], [ %674, %669 ]
  %680 = phi i64 [ %690, %676 ], [ %622, %669 ]
  %681 = getelementptr inbounds i32, i32* %614, i64 %677
  %682 = bitcast i32* %681 to <4 x i32>*
  %683 = load <4 x i32>, <4 x i32>* %682, align 4
  %684 = getelementptr inbounds i32, i32* %681, i64 4
  %685 = bitcast i32* %684 to <4 x i32>*
  %686 = load <4 x i32>, <4 x i32>* %685, align 4
  %687 = mul nsw <4 x i32> %683, %678
  %688 = mul nsw <4 x i32> %686, %679
  %689 = add i64 %677, 8
  %690 = add i64 %680, -1
  %691 = icmp eq i64 %690, 0
  br i1 %691, label %692, label %676, !llvm.loop !449

692:                                              ; preds = %676, %669
  %693 = phi <4 x i32> [ %670, %669 ], [ %687, %676 ]
  %694 = phi <4 x i32> [ %671, %669 ], [ %688, %676 ]
  %695 = mul <4 x i32> %694, %693
  %696 = shufflevector <4 x i32> %695, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %697 = mul <4 x i32> %695, %696
  %698 = shufflevector <4 x i32> %697, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %699 = mul <4 x i32> %697, %698
  %700 = extractelement <4 x i32> %699, i32 0
  %701 = icmp eq i64 %618, %615
  br i1 %701, label %713, label %702

702:                                              ; preds = %692, %613
  %703 = phi i64 [ 0, %613 ], [ %618, %692 ]
  %704 = phi i32 [ 1, %613 ], [ %700, %692 ]
  br label %705

705:                                              ; preds = %702, %705
  %706 = phi i64 [ %711, %705 ], [ %703, %702 ]
  %707 = phi i32 [ %710, %705 ], [ %704, %702 ]
  %708 = getelementptr inbounds i32, i32* %614, i64 %706
  %709 = load i32, i32* %708, align 4
  %710 = mul nsw i32 %709, %707
  %711 = add nuw nsw i64 %706, 1
  %712 = icmp eq i64 %711, %615
  br i1 %712, label %713, label %705, !llvm.loop !450

713:                                              ; preds = %705, %692, %610
  %714 = phi i32 [ 1, %610 ], [ %700, %692 ], [ %710, %705 ]
  %715 = icmp eq i32 %494, %604
  br i1 %715, label %717, label %716

716:                                              ; preds = %713
  call void @abort() #12
  unreachable

717:                                              ; preds = %713
  %718 = icmp eq i32 %494, %714
  br i1 %718, label %720, label %719

719:                                              ; preds = %717
  call void @abort() #12
  unreachable

720:                                              ; preds = %717
  call void @_ZN6tflite21reference_integer_ops14AddElementwiseEiRKNS_16ArithmeticParamsEPKaS5_Pa(i32 %494, %"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %9, i8* %315, i8* %349, i8* %384) #11
  br i1 %605, label %721, label %727

721:                                              ; preds = %720
  %722 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %723 = load i32*, i32** %722, align 8
  %724 = icmp eq i32* %723, null
  br i1 %724, label %727, label %725

725:                                              ; preds = %721
  %726 = bitcast i32* %723 to i8*
  call void @_ZdaPv(i8* %726) #10
  br label %727

727:                                              ; preds = %720, %721, %725
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %350) #11
  br i1 %495, label %728, label %734

728:                                              ; preds = %727
  %729 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %730 = load i32*, i32** %729, align 8
  %731 = icmp eq i32* %730, null
  br i1 %731, label %734, label %732

732:                                              ; preds = %728
  %733 = bitcast i32* %730 to i8*
  call void @_ZdaPv(i8* %733) #10
  br label %734

734:                                              ; preds = %727, %728, %732
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %316) #11
  br i1 %385, label %735, label %1708

735:                                              ; preds = %734
  %736 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %737 = load i32*, i32** %736, align 8
  %738 = icmp eq i32* %737, null
  br i1 %738, label %1708, label %739

739:                                              ; preds = %735
  %740 = bitcast i32* %737 to i8*
  call void @_ZdaPv(i8* %740) #10
  br label %1708

741:                                              ; preds = %147
  br i1 %127, label %742, label %987

742:                                              ; preds = %741
  %743 = bitcast %"class.tflite::RuntimeShape"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %743) #11
  br i1 %68, label %744, label %746

744:                                              ; preds = %742
  %745 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 0, i32* %745, align 8, !alias.scope !451
  br label %774

746:                                              ; preds = %742
  %747 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %748 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %747, align 8, !noalias !451
  %749 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %748, i64 0, i32 0
  %750 = load i32, i32* %749, align 4, !noalias !451
  %751 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %748, i64 0, i32 1, i64 0
  %752 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 %750, i32* %752, align 8, !alias.scope !451
  %753 = icmp sgt i32 %750, 5
  br i1 %753, label %754, label %761

754:                                              ; preds = %746
  %755 = sext i32 %750 to i64
  %756 = shl nsw i64 %755, 2
  %757 = call i8* @_Znam(i64 %756) #10, !noalias !451
  %758 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %759 = bitcast i32** %758 to i8**
  store i8* %757, i8** %759, align 8, !alias.scope !451
  %760 = bitcast i8* %757 to i32*
  br label %766

761:                                              ; preds = %746
  %762 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %763 = bitcast %union.anon* %762 to i32*
  %764 = sext i32 %750 to i64
  %765 = shl nsw i64 %764, 2
  br label %766

766:                                              ; preds = %761, %754
  %767 = phi i64 [ %756, %754 ], [ %765, %761 ]
  %768 = phi i32* [ %760, %754 ], [ %763, %761 ]
  %769 = bitcast i32* %768 to i8*
  %770 = bitcast i32* %751 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %769, i8* align 4 %770, i64 %767, i1 false) #11
  %771 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %772 = bitcast %union.TfLitePtrUnion* %771 to i8**
  %773 = load i8*, i8** %772, align 8
  br label %774

774:                                              ; preds = %744, %766
  %775 = phi i8* [ %773, %766 ], [ null, %744 ]
  %776 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %776) #11
  br i1 %98, label %777, label %779

777:                                              ; preds = %774
  %778 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %778, align 8, !alias.scope !454
  br label %807

779:                                              ; preds = %774
  %780 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %781 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %780, align 8, !noalias !454
  %782 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %781, i64 0, i32 0
  %783 = load i32, i32* %782, align 4, !noalias !454
  %784 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %781, i64 0, i32 1, i64 0
  %785 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %783, i32* %785, align 8, !alias.scope !454
  %786 = icmp sgt i32 %783, 5
  br i1 %786, label %787, label %794

787:                                              ; preds = %779
  %788 = sext i32 %783 to i64
  %789 = shl nsw i64 %788, 2
  %790 = call i8* @_Znam(i64 %789) #10, !noalias !454
  %791 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %792 = bitcast i32** %791 to i8**
  store i8* %790, i8** %792, align 8, !alias.scope !454
  %793 = bitcast i8* %790 to i32*
  br label %799

794:                                              ; preds = %779
  %795 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %796 = bitcast %union.anon* %795 to i32*
  %797 = sext i32 %783 to i64
  %798 = shl nsw i64 %797, 2
  br label %799

799:                                              ; preds = %794, %787
  %800 = phi i64 [ %789, %787 ], [ %798, %794 ]
  %801 = phi i32* [ %793, %787 ], [ %796, %794 ]
  %802 = bitcast i32* %801 to i8*
  %803 = bitcast i32* %784 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %802, i8* align 4 %803, i64 %800, i1 false) #11
  %804 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %805 = bitcast %union.TfLitePtrUnion* %804 to i8**
  %806 = load i8*, i8** %805, align 8
  br label %807

807:                                              ; preds = %777, %799
  %808 = phi i8* [ %806, %799 ], [ null, %777 ]
  %809 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %809) #11
  %810 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %810, label %811, label %813

811:                                              ; preds = %807
  %812 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %812, align 8, !alias.scope !457
  br label %841

813:                                              ; preds = %807
  %814 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %815 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %814, align 8, !noalias !457
  %816 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %815, i64 0, i32 0
  %817 = load i32, i32* %816, align 4, !noalias !457
  %818 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %815, i64 0, i32 1, i64 0
  %819 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %817, i32* %819, align 8, !alias.scope !457
  %820 = icmp sgt i32 %817, 5
  br i1 %820, label %821, label %828

821:                                              ; preds = %813
  %822 = sext i32 %817 to i64
  %823 = shl nsw i64 %822, 2
  %824 = call i8* @_Znam(i64 %823) #10, !noalias !457
  %825 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %826 = bitcast i32** %825 to i8**
  store i8* %824, i8** %826, align 8, !alias.scope !457
  %827 = bitcast i8* %824 to i32*
  br label %833

828:                                              ; preds = %813
  %829 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %830 = bitcast %union.anon* %829 to i32*
  %831 = sext i32 %817 to i64
  %832 = shl nsw i64 %831, 2
  br label %833

833:                                              ; preds = %828, %821
  %834 = phi i64 [ %823, %821 ], [ %832, %828 ]
  %835 = phi i32* [ %827, %821 ], [ %830, %828 ]
  %836 = bitcast i32* %835 to i8*
  %837 = bitcast i32* %818 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %836, i8* align 4 %837, i64 %834, i1 false) #11
  %838 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %839 = bitcast %union.TfLitePtrUnion* %838 to i8**
  %840 = load i8*, i8** %839, align 8
  br label %841

841:                                              ; preds = %811, %833
  %842 = phi i8* [ %840, %833 ], [ null, %811 ]
  %843 = load i8, i8* %30, align 4
  %844 = icmp eq i8 %843, 4
  br i1 %844, label %845, label %846

845:                                              ; preds = %841
  call void @_ZN6tflite13reference_ops18BroadcastAdd4DSlowERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKhS6_S8_S6_Ph(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %18, i8* %775, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %19, i8* %808, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %20, i8* %842) #11
  br label %957

846:                                              ; preds = %841
  %847 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %847) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %847, i8* nonnull align 4 %30, i64 80, i1 false) #11
  %848 = load i32, i32* %45, align 4
  %849 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 1
  store i32 %848, i32* %849, align 4
  %850 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 7
  %851 = load i32, i32* %36, align 4
  %852 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %8, i64 0, i32 2
  store i32 %851, i32* %852, align 4
  %853 = bitcast i32* %39 to <4 x i32>*
  %854 = load <4 x i32>, <4 x i32>* %853, align 4
  %855 = shufflevector <4 x i32> %854, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %856 = bitcast i32* %850 to <4 x i32>*
  store <4 x i32> %855, <4 x i32>* %856, align 4
  %857 = icmp eq i8 %843, 2
  %858 = select i1 %857, %"struct.tflite::ArithmeticParams"* %9, %"struct.tflite::ArithmeticParams"* %8
  %859 = select i1 %857, i8* %775, i8* %808
  %860 = select i1 %857, i8* %808, i8* %775
  %861 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %858, i64 0, i32 15, i64 0
  %862 = load i32, i32* %861, align 4
  %863 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %858, i64 0, i32 15, i64 1
  %864 = load i32, i32* %863, align 4
  %865 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %858, i64 0, i32 15, i64 2
  %866 = load i32, i32* %865, align 4
  %867 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %858, i64 0, i32 15, i64 3
  %868 = load i32, i32* %867, align 4
  %869 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %858, i64 0, i32 15, i64 4
  %870 = load i32, i32* %869, align 4
  %871 = icmp sgt i32 %870, 1
  %872 = icmp sgt i32 %862, 0
  br i1 %871, label %878, label %873

873:                                              ; preds = %846
  br i1 %872, label %874, label %956

874:                                              ; preds = %873
  %875 = icmp sgt i32 %864, 0
  %876 = icmp sgt i32 %866, 0
  %877 = sext i32 %868 to i64
  br label %924

878:                                              ; preds = %846
  br i1 %872, label %879, label %956

879:                                              ; preds = %878
  %880 = icmp sgt i32 %864, 0
  %881 = icmp sgt i32 %866, 0
  %882 = icmp sgt i32 %868, 0
  %883 = sext i32 %870 to i64
  br label %884

884:                                              ; preds = %893, %879
  %885 = phi i32 [ 0, %879 ], [ %897, %893 ]
  %886 = phi i8* [ %860, %879 ], [ %896, %893 ]
  %887 = phi i8* [ %859, %879 ], [ %895, %893 ]
  %888 = phi i8* [ %842, %879 ], [ %894, %893 ]
  br i1 %880, label %889, label %893

889:                                              ; preds = %884, %904
  %890 = phi i32 [ %908, %904 ], [ 0, %884 ]
  %891 = phi i8* [ %906, %904 ], [ %887, %884 ]
  %892 = phi i8* [ %905, %904 ], [ %888, %884 ]
  br i1 %881, label %899, label %904

893:                                              ; preds = %904, %884
  %894 = phi i8* [ %888, %884 ], [ %905, %904 ]
  %895 = phi i8* [ %887, %884 ], [ %906, %904 ]
  %896 = phi i8* [ null, %884 ], [ %907, %904 ]
  %897 = add nuw nsw i32 %885, 1
  %898 = icmp eq i32 %897, %862
  br i1 %898, label %956, label %884

899:                                              ; preds = %889, %910
  %900 = phi i32 [ %914, %910 ], [ 0, %889 ]
  %901 = phi i8* [ %912, %910 ], [ %886, %889 ]
  %902 = phi i8* [ %913, %910 ], [ %891, %889 ]
  %903 = phi i8* [ %911, %910 ], [ %892, %889 ]
  br i1 %882, label %916, label %910

904:                                              ; preds = %910, %889
  %905 = phi i8* [ %892, %889 ], [ %911, %910 ]
  %906 = phi i8* [ %891, %889 ], [ %913, %910 ]
  %907 = phi i8* [ %886, %889 ], [ %912, %910 ]
  %908 = add nuw nsw i32 %890, 1
  %909 = icmp eq i32 %908, %864
  br i1 %909, label %893, label %889

910:                                              ; preds = %916, %899
  %911 = phi i8* [ %903, %899 ], [ %921, %916 ]
  %912 = phi i8* [ %901, %899 ], [ %920, %916 ]
  %913 = getelementptr inbounds i8, i8* %902, i64 %883
  %914 = add nuw nsw i32 %900, 1
  %915 = icmp eq i32 %914, %866
  br i1 %915, label %904, label %899

916:                                              ; preds = %899, %916
  %917 = phi i32 [ %922, %916 ], [ 0, %899 ]
  %918 = phi i8* [ %920, %916 ], [ %901, %899 ]
  %919 = phi i8* [ %921, %916 ], [ %903, %899 ]
  call void @_ZN6tflite13optimized_ops14AddElementwiseEiRKNS_16ArithmeticParamsEPKhS5_Ph(i32 %870, %"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %858, i8* %902, i8* %918, i8* %919) #11
  %920 = getelementptr inbounds i8, i8* %918, i64 %883
  %921 = getelementptr inbounds i8, i8* %919, i64 %883
  %922 = add nuw nsw i32 %917, 1
  %923 = icmp eq i32 %922, %868
  br i1 %923, label %910, label %916

924:                                              ; preds = %933, %874
  %925 = phi i32 [ 0, %874 ], [ %937, %933 ]
  %926 = phi i8* [ %860, %874 ], [ %936, %933 ]
  %927 = phi i8* [ %859, %874 ], [ %935, %933 ]
  %928 = phi i8* [ %842, %874 ], [ %934, %933 ]
  br i1 %875, label %929, label %933

929:                                              ; preds = %924, %939
  %930 = phi i32 [ %943, %939 ], [ 0, %924 ]
  %931 = phi i8* [ %941, %939 ], [ %927, %924 ]
  %932 = phi i8* [ %940, %939 ], [ %928, %924 ]
  br i1 %876, label %945, label %939

933:                                              ; preds = %939, %924
  %934 = phi i8* [ %928, %924 ], [ %940, %939 ]
  %935 = phi i8* [ %927, %924 ], [ %941, %939 ]
  %936 = phi i8* [ null, %924 ], [ %942, %939 ]
  %937 = add nuw nsw i32 %925, 1
  %938 = icmp eq i32 %937, %862
  br i1 %938, label %956, label %924

939:                                              ; preds = %945, %929
  %940 = phi i8* [ %932, %929 ], [ %952, %945 ]
  %941 = phi i8* [ %931, %929 ], [ %953, %945 ]
  %942 = phi i8* [ %926, %929 ], [ %951, %945 ]
  %943 = add nuw nsw i32 %930, 1
  %944 = icmp eq i32 %943, %864
  br i1 %944, label %933, label %929

945:                                              ; preds = %929, %945
  %946 = phi i32 [ %954, %945 ], [ 0, %929 ]
  %947 = phi i8* [ %951, %945 ], [ %926, %929 ]
  %948 = phi i8* [ %953, %945 ], [ %931, %929 ]
  %949 = phi i8* [ %952, %945 ], [ %932, %929 ]
  %950 = load i8, i8* %948, align 1
  call void @_ZN6tflite13optimized_ops18AddScalarBroadcastEiRKNS_16ArithmeticParamsEhPKhPh(i32 %868, %"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %858, i8 zeroext %950, i8* %947, i8* %949) #11
  %951 = getelementptr inbounds i8, i8* %947, i64 %877
  %952 = getelementptr inbounds i8, i8* %949, i64 %877
  %953 = getelementptr inbounds i8, i8* %948, i64 1
  %954 = add nuw nsw i32 %946, 1
  %955 = icmp eq i32 %954, %866
  br i1 %955, label %939, label %945

956:                                              ; preds = %933, %893, %873, %878
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %847) #11
  br label %957

957:                                              ; preds = %845, %956
  %958 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  %959 = load i32, i32* %958, align 8
  %960 = icmp sgt i32 %959, 5
  br i1 %960, label %961, label %967

961:                                              ; preds = %957
  %962 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %963 = load i32*, i32** %962, align 8
  %964 = icmp eq i32* %963, null
  br i1 %964, label %967, label %965

965:                                              ; preds = %961
  %966 = bitcast i32* %963 to i8*
  call void @_ZdaPv(i8* %966) #10
  br label %967

967:                                              ; preds = %957, %961, %965
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %809) #11
  %968 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  %969 = load i32, i32* %968, align 8
  %970 = icmp sgt i32 %969, 5
  br i1 %970, label %971, label %977

971:                                              ; preds = %967
  %972 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %973 = load i32*, i32** %972, align 8
  %974 = icmp eq i32* %973, null
  br i1 %974, label %977, label %975

975:                                              ; preds = %971
  %976 = bitcast i32* %973 to i8*
  call void @_ZdaPv(i8* %976) #10
  br label %977

977:                                              ; preds = %967, %971, %975
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %776) #11
  %978 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  %979 = load i32, i32* %978, align 8
  %980 = icmp sgt i32 %979, 5
  br i1 %980, label %981, label %1708

981:                                              ; preds = %977
  %982 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %983 = load i32*, i32** %982, align 8
  %984 = icmp eq i32* %983, null
  br i1 %984, label %1708, label %985

985:                                              ; preds = %981
  %986 = bitcast i32* %983 to i8*
  call void @_ZdaPv(i8* %986) #10
  br label %1708

987:                                              ; preds = %741
  %988 = bitcast %"class.tflite::RuntimeShape"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %988) #11
  br i1 %68, label %989, label %991

989:                                              ; preds = %987
  %990 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 0, i32* %990, align 8, !alias.scope !460
  br label %1019

991:                                              ; preds = %987
  %992 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %993 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %992, align 8, !noalias !460
  %994 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %993, i64 0, i32 0
  %995 = load i32, i32* %994, align 4, !noalias !460
  %996 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %993, i64 0, i32 1, i64 0
  %997 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 0
  store i32 %995, i32* %997, align 8, !alias.scope !460
  %998 = icmp sgt i32 %995, 5
  br i1 %998, label %999, label %1006

999:                                              ; preds = %991
  %1000 = sext i32 %995 to i64
  %1001 = shl nsw i64 %1000, 2
  %1002 = call i8* @_Znam(i64 %1001) #10, !noalias !460
  %1003 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %1004 = bitcast i32** %1003 to i8**
  store i8* %1002, i8** %1004, align 8, !alias.scope !460
  %1005 = bitcast i8* %1002 to i32*
  br label %1011

1006:                                             ; preds = %991
  %1007 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1
  %1008 = bitcast %union.anon* %1007 to i32*
  %1009 = sext i32 %995 to i64
  %1010 = shl nsw i64 %1009, 2
  br label %1011

1011:                                             ; preds = %1006, %999
  %1012 = phi i64 [ %1001, %999 ], [ %1010, %1006 ]
  %1013 = phi i32* [ %1005, %999 ], [ %1008, %1006 ]
  %1014 = bitcast i32* %1013 to i8*
  %1015 = bitcast i32* %996 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1014, i8* align 4 %1015, i64 %1012, i1 false) #11
  %1016 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %1017 = bitcast %union.TfLitePtrUnion* %1016 to i8**
  %1018 = load i8*, i8** %1017, align 8
  br label %1019

1019:                                             ; preds = %989, %1011
  %1020 = phi i32 [ %995, %1011 ], [ 0, %989 ]
  %1021 = phi i8* [ %1018, %1011 ], [ null, %989 ]
  %1022 = bitcast %"class.tflite::RuntimeShape"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1022) #11
  br i1 %98, label %1023, label %1025

1023:                                             ; preds = %1019
  %1024 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 0, i32* %1024, align 8, !alias.scope !463
  br label %1053

1025:                                             ; preds = %1019
  %1026 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %1027 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1026, align 8, !noalias !463
  %1028 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1027, i64 0, i32 0
  %1029 = load i32, i32* %1028, align 4, !noalias !463
  %1030 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1027, i64 0, i32 1, i64 0
  %1031 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 %1029, i32* %1031, align 8, !alias.scope !463
  %1032 = icmp sgt i32 %1029, 5
  br i1 %1032, label %1033, label %1040

1033:                                             ; preds = %1025
  %1034 = sext i32 %1029 to i64
  %1035 = shl nsw i64 %1034, 2
  %1036 = call i8* @_Znam(i64 %1035) #10, !noalias !463
  %1037 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %1038 = bitcast i32** %1037 to i8**
  store i8* %1036, i8** %1038, align 8, !alias.scope !463
  %1039 = bitcast i8* %1036 to i32*
  br label %1045

1040:                                             ; preds = %1025
  %1041 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  %1042 = bitcast %union.anon* %1041 to i32*
  %1043 = sext i32 %1029 to i64
  %1044 = shl nsw i64 %1043, 2
  br label %1045

1045:                                             ; preds = %1040, %1033
  %1046 = phi i64 [ %1035, %1033 ], [ %1044, %1040 ]
  %1047 = phi i32* [ %1039, %1033 ], [ %1042, %1040 ]
  %1048 = bitcast i32* %1047 to i8*
  %1049 = bitcast i32* %1030 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1048, i8* align 4 %1049, i64 %1046, i1 false) #11
  %1050 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %1051 = bitcast %union.TfLitePtrUnion* %1050 to i8**
  %1052 = load i8*, i8** %1051, align 8
  br label %1053

1053:                                             ; preds = %1023, %1045
  %1054 = phi i32 [ %1029, %1045 ], [ 0, %1023 ]
  %1055 = phi i8* [ %1052, %1045 ], [ null, %1023 ]
  %1056 = bitcast %"class.tflite::RuntimeShape"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1056) #11
  %1057 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %1057, label %1058, label %1060

1058:                                             ; preds = %1053
  %1059 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 0, i32* %1059, align 8, !alias.scope !466
  br label %1088

1060:                                             ; preds = %1053
  %1061 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %1062 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1061, align 8, !noalias !466
  %1063 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1062, i64 0, i32 0
  %1064 = load i32, i32* %1063, align 4, !noalias !466
  %1065 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1062, i64 0, i32 1, i64 0
  %1066 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 %1064, i32* %1066, align 8, !alias.scope !466
  %1067 = icmp sgt i32 %1064, 5
  br i1 %1067, label %1068, label %1075

1068:                                             ; preds = %1060
  %1069 = sext i32 %1064 to i64
  %1070 = shl nsw i64 %1069, 2
  %1071 = call i8* @_Znam(i64 %1070) #10, !noalias !466
  %1072 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %1073 = bitcast i32** %1072 to i8**
  store i8* %1071, i8** %1073, align 8, !alias.scope !466
  %1074 = bitcast i8* %1071 to i32*
  br label %1080

1075:                                             ; preds = %1060
  %1076 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1
  %1077 = bitcast %union.anon* %1076 to i32*
  %1078 = sext i32 %1064 to i64
  %1079 = shl nsw i64 %1078, 2
  br label %1080

1080:                                             ; preds = %1075, %1068
  %1081 = phi i64 [ %1070, %1068 ], [ %1079, %1075 ]
  %1082 = phi i32* [ %1074, %1068 ], [ %1077, %1075 ]
  %1083 = bitcast i32* %1082 to i8*
  %1084 = bitcast i32* %1065 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1083, i8* align 4 %1084, i64 %1081, i1 false) #11
  %1085 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %1086 = bitcast %union.TfLitePtrUnion* %1085 to i8**
  %1087 = load i8*, i8** %1086, align 8
  br label %1088

1088:                                             ; preds = %1058, %1080
  %1089 = phi i32 [ %1064, %1080 ], [ 0, %1058 ]
  %1090 = phi i8* [ %1087, %1080 ], [ null, %1058 ]
  %1091 = icmp sgt i32 %1020, 5
  %1092 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1
  br i1 %1091, label %1093, label %1096

1093:                                             ; preds = %1088
  %1094 = getelementptr inbounds %union.anon, %union.anon* %1092, i64 0, i32 0
  %1095 = load i32*, i32** %1094, align 8
  br label %1099

1096:                                             ; preds = %1088
  %1097 = bitcast %union.anon* %1092 to i32*
  %1098 = icmp sgt i32 %1020, 0
  br i1 %1098, label %1099, label %1199

1099:                                             ; preds = %1096, %1093
  %1100 = phi i32* [ %1095, %1093 ], [ %1097, %1096 ]
  %1101 = zext i32 %1020 to i64
  %1102 = icmp ult i32 %1020, 8
  br i1 %1102, label %1188, label %1103

1103:                                             ; preds = %1099
  %1104 = and i64 %1101, 4294967288
  %1105 = add nsw i64 %1104, -8
  %1106 = lshr exact i64 %1105, 3
  %1107 = add nuw nsw i64 %1106, 1
  %1108 = and i64 %1107, 3
  %1109 = icmp ult i64 %1105, 24
  br i1 %1109, label %1155, label %1110

1110:                                             ; preds = %1103
  %1111 = sub nsw i64 %1107, %1108
  br label %1112

1112:                                             ; preds = %1112, %1110
  %1113 = phi i64 [ 0, %1110 ], [ %1152, %1112 ]
  %1114 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1110 ], [ %1150, %1112 ]
  %1115 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1110 ], [ %1151, %1112 ]
  %1116 = phi i64 [ %1111, %1110 ], [ %1153, %1112 ]
  %1117 = getelementptr inbounds i32, i32* %1100, i64 %1113
  %1118 = bitcast i32* %1117 to <4 x i32>*
  %1119 = load <4 x i32>, <4 x i32>* %1118, align 4
  %1120 = getelementptr inbounds i32, i32* %1117, i64 4
  %1121 = bitcast i32* %1120 to <4 x i32>*
  %1122 = load <4 x i32>, <4 x i32>* %1121, align 4
  %1123 = mul nsw <4 x i32> %1119, %1114
  %1124 = mul nsw <4 x i32> %1122, %1115
  %1125 = or i64 %1113, 8
  %1126 = getelementptr inbounds i32, i32* %1100, i64 %1125
  %1127 = bitcast i32* %1126 to <4 x i32>*
  %1128 = load <4 x i32>, <4 x i32>* %1127, align 4
  %1129 = getelementptr inbounds i32, i32* %1126, i64 4
  %1130 = bitcast i32* %1129 to <4 x i32>*
  %1131 = load <4 x i32>, <4 x i32>* %1130, align 4
  %1132 = mul nsw <4 x i32> %1128, %1123
  %1133 = mul nsw <4 x i32> %1131, %1124
  %1134 = or i64 %1113, 16
  %1135 = getelementptr inbounds i32, i32* %1100, i64 %1134
  %1136 = bitcast i32* %1135 to <4 x i32>*
  %1137 = load <4 x i32>, <4 x i32>* %1136, align 4
  %1138 = getelementptr inbounds i32, i32* %1135, i64 4
  %1139 = bitcast i32* %1138 to <4 x i32>*
  %1140 = load <4 x i32>, <4 x i32>* %1139, align 4
  %1141 = mul nsw <4 x i32> %1137, %1132
  %1142 = mul nsw <4 x i32> %1140, %1133
  %1143 = or i64 %1113, 24
  %1144 = getelementptr inbounds i32, i32* %1100, i64 %1143
  %1145 = bitcast i32* %1144 to <4 x i32>*
  %1146 = load <4 x i32>, <4 x i32>* %1145, align 4
  %1147 = getelementptr inbounds i32, i32* %1144, i64 4
  %1148 = bitcast i32* %1147 to <4 x i32>*
  %1149 = load <4 x i32>, <4 x i32>* %1148, align 4
  %1150 = mul nsw <4 x i32> %1146, %1141
  %1151 = mul nsw <4 x i32> %1149, %1142
  %1152 = add i64 %1113, 32
  %1153 = add i64 %1116, -4
  %1154 = icmp eq i64 %1153, 0
  br i1 %1154, label %1155, label %1112, !llvm.loop !469

1155:                                             ; preds = %1112, %1103
  %1156 = phi <4 x i32> [ undef, %1103 ], [ %1150, %1112 ]
  %1157 = phi <4 x i32> [ undef, %1103 ], [ %1151, %1112 ]
  %1158 = phi i64 [ 0, %1103 ], [ %1152, %1112 ]
  %1159 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1103 ], [ %1150, %1112 ]
  %1160 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1103 ], [ %1151, %1112 ]
  %1161 = icmp eq i64 %1108, 0
  br i1 %1161, label %1178, label %1162

1162:                                             ; preds = %1155, %1162
  %1163 = phi i64 [ %1175, %1162 ], [ %1158, %1155 ]
  %1164 = phi <4 x i32> [ %1173, %1162 ], [ %1159, %1155 ]
  %1165 = phi <4 x i32> [ %1174, %1162 ], [ %1160, %1155 ]
  %1166 = phi i64 [ %1176, %1162 ], [ %1108, %1155 ]
  %1167 = getelementptr inbounds i32, i32* %1100, i64 %1163
  %1168 = bitcast i32* %1167 to <4 x i32>*
  %1169 = load <4 x i32>, <4 x i32>* %1168, align 4
  %1170 = getelementptr inbounds i32, i32* %1167, i64 4
  %1171 = bitcast i32* %1170 to <4 x i32>*
  %1172 = load <4 x i32>, <4 x i32>* %1171, align 4
  %1173 = mul nsw <4 x i32> %1169, %1164
  %1174 = mul nsw <4 x i32> %1172, %1165
  %1175 = add i64 %1163, 8
  %1176 = add i64 %1166, -1
  %1177 = icmp eq i64 %1176, 0
  br i1 %1177, label %1178, label %1162, !llvm.loop !470

1178:                                             ; preds = %1162, %1155
  %1179 = phi <4 x i32> [ %1156, %1155 ], [ %1173, %1162 ]
  %1180 = phi <4 x i32> [ %1157, %1155 ], [ %1174, %1162 ]
  %1181 = mul <4 x i32> %1180, %1179
  %1182 = shufflevector <4 x i32> %1181, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1183 = mul <4 x i32> %1181, %1182
  %1184 = shufflevector <4 x i32> %1183, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1185 = mul <4 x i32> %1183, %1184
  %1186 = extractelement <4 x i32> %1185, i32 0
  %1187 = icmp eq i64 %1104, %1101
  br i1 %1187, label %1199, label %1188

1188:                                             ; preds = %1178, %1099
  %1189 = phi i64 [ 0, %1099 ], [ %1104, %1178 ]
  %1190 = phi i32 [ 1, %1099 ], [ %1186, %1178 ]
  br label %1191

1191:                                             ; preds = %1188, %1191
  %1192 = phi i64 [ %1197, %1191 ], [ %1189, %1188 ]
  %1193 = phi i32 [ %1196, %1191 ], [ %1190, %1188 ]
  %1194 = getelementptr inbounds i32, i32* %1100, i64 %1192
  %1195 = load i32, i32* %1194, align 4
  %1196 = mul nsw i32 %1195, %1193
  %1197 = add nuw nsw i64 %1192, 1
  %1198 = icmp eq i64 %1197, %1101
  br i1 %1198, label %1199, label %1191, !llvm.loop !471

1199:                                             ; preds = %1191, %1178, %1096
  %1200 = phi i32 [ 1, %1096 ], [ %1186, %1178 ], [ %1196, %1191 ]
  %1201 = icmp sgt i32 %1054, 5
  %1202 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  br i1 %1201, label %1203, label %1206

1203:                                             ; preds = %1199
  %1204 = getelementptr inbounds %union.anon, %union.anon* %1202, i64 0, i32 0
  %1205 = load i32*, i32** %1204, align 8
  br label %1209

1206:                                             ; preds = %1199
  %1207 = bitcast %union.anon* %1202 to i32*
  %1208 = icmp sgt i32 %1054, 0
  br i1 %1208, label %1209, label %1309

1209:                                             ; preds = %1206, %1203
  %1210 = phi i32* [ %1205, %1203 ], [ %1207, %1206 ]
  %1211 = zext i32 %1054 to i64
  %1212 = icmp ult i32 %1054, 8
  br i1 %1212, label %1298, label %1213

1213:                                             ; preds = %1209
  %1214 = and i64 %1211, 4294967288
  %1215 = add nsw i64 %1214, -8
  %1216 = lshr exact i64 %1215, 3
  %1217 = add nuw nsw i64 %1216, 1
  %1218 = and i64 %1217, 3
  %1219 = icmp ult i64 %1215, 24
  br i1 %1219, label %1265, label %1220

1220:                                             ; preds = %1213
  %1221 = sub nsw i64 %1217, %1218
  br label %1222

1222:                                             ; preds = %1222, %1220
  %1223 = phi i64 [ 0, %1220 ], [ %1262, %1222 ]
  %1224 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1220 ], [ %1260, %1222 ]
  %1225 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1220 ], [ %1261, %1222 ]
  %1226 = phi i64 [ %1221, %1220 ], [ %1263, %1222 ]
  %1227 = getelementptr inbounds i32, i32* %1210, i64 %1223
  %1228 = bitcast i32* %1227 to <4 x i32>*
  %1229 = load <4 x i32>, <4 x i32>* %1228, align 4
  %1230 = getelementptr inbounds i32, i32* %1227, i64 4
  %1231 = bitcast i32* %1230 to <4 x i32>*
  %1232 = load <4 x i32>, <4 x i32>* %1231, align 4
  %1233 = mul nsw <4 x i32> %1229, %1224
  %1234 = mul nsw <4 x i32> %1232, %1225
  %1235 = or i64 %1223, 8
  %1236 = getelementptr inbounds i32, i32* %1210, i64 %1235
  %1237 = bitcast i32* %1236 to <4 x i32>*
  %1238 = load <4 x i32>, <4 x i32>* %1237, align 4
  %1239 = getelementptr inbounds i32, i32* %1236, i64 4
  %1240 = bitcast i32* %1239 to <4 x i32>*
  %1241 = load <4 x i32>, <4 x i32>* %1240, align 4
  %1242 = mul nsw <4 x i32> %1238, %1233
  %1243 = mul nsw <4 x i32> %1241, %1234
  %1244 = or i64 %1223, 16
  %1245 = getelementptr inbounds i32, i32* %1210, i64 %1244
  %1246 = bitcast i32* %1245 to <4 x i32>*
  %1247 = load <4 x i32>, <4 x i32>* %1246, align 4
  %1248 = getelementptr inbounds i32, i32* %1245, i64 4
  %1249 = bitcast i32* %1248 to <4 x i32>*
  %1250 = load <4 x i32>, <4 x i32>* %1249, align 4
  %1251 = mul nsw <4 x i32> %1247, %1242
  %1252 = mul nsw <4 x i32> %1250, %1243
  %1253 = or i64 %1223, 24
  %1254 = getelementptr inbounds i32, i32* %1210, i64 %1253
  %1255 = bitcast i32* %1254 to <4 x i32>*
  %1256 = load <4 x i32>, <4 x i32>* %1255, align 4
  %1257 = getelementptr inbounds i32, i32* %1254, i64 4
  %1258 = bitcast i32* %1257 to <4 x i32>*
  %1259 = load <4 x i32>, <4 x i32>* %1258, align 4
  %1260 = mul nsw <4 x i32> %1256, %1251
  %1261 = mul nsw <4 x i32> %1259, %1252
  %1262 = add i64 %1223, 32
  %1263 = add i64 %1226, -4
  %1264 = icmp eq i64 %1263, 0
  br i1 %1264, label %1265, label %1222, !llvm.loop !472

1265:                                             ; preds = %1222, %1213
  %1266 = phi <4 x i32> [ undef, %1213 ], [ %1260, %1222 ]
  %1267 = phi <4 x i32> [ undef, %1213 ], [ %1261, %1222 ]
  %1268 = phi i64 [ 0, %1213 ], [ %1262, %1222 ]
  %1269 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1213 ], [ %1260, %1222 ]
  %1270 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1213 ], [ %1261, %1222 ]
  %1271 = icmp eq i64 %1218, 0
  br i1 %1271, label %1288, label %1272

1272:                                             ; preds = %1265, %1272
  %1273 = phi i64 [ %1285, %1272 ], [ %1268, %1265 ]
  %1274 = phi <4 x i32> [ %1283, %1272 ], [ %1269, %1265 ]
  %1275 = phi <4 x i32> [ %1284, %1272 ], [ %1270, %1265 ]
  %1276 = phi i64 [ %1286, %1272 ], [ %1218, %1265 ]
  %1277 = getelementptr inbounds i32, i32* %1210, i64 %1273
  %1278 = bitcast i32* %1277 to <4 x i32>*
  %1279 = load <4 x i32>, <4 x i32>* %1278, align 4
  %1280 = getelementptr inbounds i32, i32* %1277, i64 4
  %1281 = bitcast i32* %1280 to <4 x i32>*
  %1282 = load <4 x i32>, <4 x i32>* %1281, align 4
  %1283 = mul nsw <4 x i32> %1279, %1274
  %1284 = mul nsw <4 x i32> %1282, %1275
  %1285 = add i64 %1273, 8
  %1286 = add i64 %1276, -1
  %1287 = icmp eq i64 %1286, 0
  br i1 %1287, label %1288, label %1272, !llvm.loop !473

1288:                                             ; preds = %1272, %1265
  %1289 = phi <4 x i32> [ %1266, %1265 ], [ %1283, %1272 ]
  %1290 = phi <4 x i32> [ %1267, %1265 ], [ %1284, %1272 ]
  %1291 = mul <4 x i32> %1290, %1289
  %1292 = shufflevector <4 x i32> %1291, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1293 = mul <4 x i32> %1291, %1292
  %1294 = shufflevector <4 x i32> %1293, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1295 = mul <4 x i32> %1293, %1294
  %1296 = extractelement <4 x i32> %1295, i32 0
  %1297 = icmp eq i64 %1214, %1211
  br i1 %1297, label %1309, label %1298

1298:                                             ; preds = %1288, %1209
  %1299 = phi i64 [ 0, %1209 ], [ %1214, %1288 ]
  %1300 = phi i32 [ 1, %1209 ], [ %1296, %1288 ]
  br label %1301

1301:                                             ; preds = %1298, %1301
  %1302 = phi i64 [ %1307, %1301 ], [ %1299, %1298 ]
  %1303 = phi i32 [ %1306, %1301 ], [ %1300, %1298 ]
  %1304 = getelementptr inbounds i32, i32* %1210, i64 %1302
  %1305 = load i32, i32* %1304, align 4
  %1306 = mul nsw i32 %1305, %1303
  %1307 = add nuw nsw i64 %1302, 1
  %1308 = icmp eq i64 %1307, %1211
  br i1 %1308, label %1309, label %1301, !llvm.loop !474

1309:                                             ; preds = %1301, %1288, %1206
  %1310 = phi i32 [ 1, %1206 ], [ %1296, %1288 ], [ %1306, %1301 ]
  %1311 = icmp sgt i32 %1089, 5
  %1312 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1
  br i1 %1311, label %1313, label %1316

1313:                                             ; preds = %1309
  %1314 = getelementptr inbounds %union.anon, %union.anon* %1312, i64 0, i32 0
  %1315 = load i32*, i32** %1314, align 8
  br label %1319

1316:                                             ; preds = %1309
  %1317 = bitcast %union.anon* %1312 to i32*
  %1318 = icmp sgt i32 %1089, 0
  br i1 %1318, label %1319, label %1419

1319:                                             ; preds = %1316, %1313
  %1320 = phi i32* [ %1315, %1313 ], [ %1317, %1316 ]
  %1321 = zext i32 %1089 to i64
  %1322 = icmp ult i32 %1089, 8
  br i1 %1322, label %1408, label %1323

1323:                                             ; preds = %1319
  %1324 = and i64 %1321, 4294967288
  %1325 = add nsw i64 %1324, -8
  %1326 = lshr exact i64 %1325, 3
  %1327 = add nuw nsw i64 %1326, 1
  %1328 = and i64 %1327, 3
  %1329 = icmp ult i64 %1325, 24
  br i1 %1329, label %1375, label %1330

1330:                                             ; preds = %1323
  %1331 = sub nsw i64 %1327, %1328
  br label %1332

1332:                                             ; preds = %1332, %1330
  %1333 = phi i64 [ 0, %1330 ], [ %1372, %1332 ]
  %1334 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1330 ], [ %1370, %1332 ]
  %1335 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1330 ], [ %1371, %1332 ]
  %1336 = phi i64 [ %1331, %1330 ], [ %1373, %1332 ]
  %1337 = getelementptr inbounds i32, i32* %1320, i64 %1333
  %1338 = bitcast i32* %1337 to <4 x i32>*
  %1339 = load <4 x i32>, <4 x i32>* %1338, align 4
  %1340 = getelementptr inbounds i32, i32* %1337, i64 4
  %1341 = bitcast i32* %1340 to <4 x i32>*
  %1342 = load <4 x i32>, <4 x i32>* %1341, align 4
  %1343 = mul nsw <4 x i32> %1339, %1334
  %1344 = mul nsw <4 x i32> %1342, %1335
  %1345 = or i64 %1333, 8
  %1346 = getelementptr inbounds i32, i32* %1320, i64 %1345
  %1347 = bitcast i32* %1346 to <4 x i32>*
  %1348 = load <4 x i32>, <4 x i32>* %1347, align 4
  %1349 = getelementptr inbounds i32, i32* %1346, i64 4
  %1350 = bitcast i32* %1349 to <4 x i32>*
  %1351 = load <4 x i32>, <4 x i32>* %1350, align 4
  %1352 = mul nsw <4 x i32> %1348, %1343
  %1353 = mul nsw <4 x i32> %1351, %1344
  %1354 = or i64 %1333, 16
  %1355 = getelementptr inbounds i32, i32* %1320, i64 %1354
  %1356 = bitcast i32* %1355 to <4 x i32>*
  %1357 = load <4 x i32>, <4 x i32>* %1356, align 4
  %1358 = getelementptr inbounds i32, i32* %1355, i64 4
  %1359 = bitcast i32* %1358 to <4 x i32>*
  %1360 = load <4 x i32>, <4 x i32>* %1359, align 4
  %1361 = mul nsw <4 x i32> %1357, %1352
  %1362 = mul nsw <4 x i32> %1360, %1353
  %1363 = or i64 %1333, 24
  %1364 = getelementptr inbounds i32, i32* %1320, i64 %1363
  %1365 = bitcast i32* %1364 to <4 x i32>*
  %1366 = load <4 x i32>, <4 x i32>* %1365, align 4
  %1367 = getelementptr inbounds i32, i32* %1364, i64 4
  %1368 = bitcast i32* %1367 to <4 x i32>*
  %1369 = load <4 x i32>, <4 x i32>* %1368, align 4
  %1370 = mul nsw <4 x i32> %1366, %1361
  %1371 = mul nsw <4 x i32> %1369, %1362
  %1372 = add i64 %1333, 32
  %1373 = add i64 %1336, -4
  %1374 = icmp eq i64 %1373, 0
  br i1 %1374, label %1375, label %1332, !llvm.loop !475

1375:                                             ; preds = %1332, %1323
  %1376 = phi <4 x i32> [ undef, %1323 ], [ %1370, %1332 ]
  %1377 = phi <4 x i32> [ undef, %1323 ], [ %1371, %1332 ]
  %1378 = phi i64 [ 0, %1323 ], [ %1372, %1332 ]
  %1379 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1323 ], [ %1370, %1332 ]
  %1380 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1323 ], [ %1371, %1332 ]
  %1381 = icmp eq i64 %1328, 0
  br i1 %1381, label %1398, label %1382

1382:                                             ; preds = %1375, %1382
  %1383 = phi i64 [ %1395, %1382 ], [ %1378, %1375 ]
  %1384 = phi <4 x i32> [ %1393, %1382 ], [ %1379, %1375 ]
  %1385 = phi <4 x i32> [ %1394, %1382 ], [ %1380, %1375 ]
  %1386 = phi i64 [ %1396, %1382 ], [ %1328, %1375 ]
  %1387 = getelementptr inbounds i32, i32* %1320, i64 %1383
  %1388 = bitcast i32* %1387 to <4 x i32>*
  %1389 = load <4 x i32>, <4 x i32>* %1388, align 4
  %1390 = getelementptr inbounds i32, i32* %1387, i64 4
  %1391 = bitcast i32* %1390 to <4 x i32>*
  %1392 = load <4 x i32>, <4 x i32>* %1391, align 4
  %1393 = mul nsw <4 x i32> %1389, %1384
  %1394 = mul nsw <4 x i32> %1392, %1385
  %1395 = add i64 %1383, 8
  %1396 = add i64 %1386, -1
  %1397 = icmp eq i64 %1396, 0
  br i1 %1397, label %1398, label %1382, !llvm.loop !476

1398:                                             ; preds = %1382, %1375
  %1399 = phi <4 x i32> [ %1376, %1375 ], [ %1393, %1382 ]
  %1400 = phi <4 x i32> [ %1377, %1375 ], [ %1394, %1382 ]
  %1401 = mul <4 x i32> %1400, %1399
  %1402 = shufflevector <4 x i32> %1401, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1403 = mul <4 x i32> %1401, %1402
  %1404 = shufflevector <4 x i32> %1403, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1405 = mul <4 x i32> %1403, %1404
  %1406 = extractelement <4 x i32> %1405, i32 0
  %1407 = icmp eq i64 %1324, %1321
  br i1 %1407, label %1419, label %1408

1408:                                             ; preds = %1398, %1319
  %1409 = phi i64 [ 0, %1319 ], [ %1324, %1398 ]
  %1410 = phi i32 [ 1, %1319 ], [ %1406, %1398 ]
  br label %1411

1411:                                             ; preds = %1408, %1411
  %1412 = phi i64 [ %1417, %1411 ], [ %1409, %1408 ]
  %1413 = phi i32 [ %1416, %1411 ], [ %1410, %1408 ]
  %1414 = getelementptr inbounds i32, i32* %1320, i64 %1412
  %1415 = load i32, i32* %1414, align 4
  %1416 = mul nsw i32 %1415, %1413
  %1417 = add nuw nsw i64 %1412, 1
  %1418 = icmp eq i64 %1417, %1321
  br i1 %1418, label %1419, label %1411, !llvm.loop !477

1419:                                             ; preds = %1411, %1398, %1316
  %1420 = phi i32 [ 1, %1316 ], [ %1406, %1398 ], [ %1416, %1411 ]
  %1421 = icmp eq i32 %1200, %1310
  br i1 %1421, label %1423, label %1422

1422:                                             ; preds = %1419
  call void @abort() #12
  unreachable

1423:                                             ; preds = %1419
  %1424 = icmp eq i32 %1200, %1420
  br i1 %1424, label %1426, label %1425

1425:                                             ; preds = %1423
  call void @abort() #12
  unreachable

1426:                                             ; preds = %1423
  call void @_ZN6tflite13optimized_ops14AddElementwiseEiRKNS_16ArithmeticParamsEPKhS5_Ph(i32 %1200, %"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %9, i8* %1021, i8* %1055, i8* %1090) #11
  br i1 %1311, label %1427, label %1433

1427:                                             ; preds = %1426
  %1428 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %1429 = load i32*, i32** %1428, align 8
  %1430 = icmp eq i32* %1429, null
  br i1 %1430, label %1433, label %1431

1431:                                             ; preds = %1427
  %1432 = bitcast i32* %1429 to i8*
  call void @_ZdaPv(i8* %1432) #10
  br label %1433

1433:                                             ; preds = %1426, %1427, %1431
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1056) #11
  br i1 %1201, label %1434, label %1440

1434:                                             ; preds = %1433
  %1435 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %1436 = load i32*, i32** %1435, align 8
  %1437 = icmp eq i32* %1436, null
  br i1 %1437, label %1440, label %1438

1438:                                             ; preds = %1434
  %1439 = bitcast i32* %1436 to i8*
  call void @_ZdaPv(i8* %1439) #10
  br label %1440

1440:                                             ; preds = %1433, %1434, %1438
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1022) #11
  br i1 %1091, label %1441, label %1708

1441:                                             ; preds = %1440
  %1442 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %21, i64 0, i32 1, i32 0
  %1443 = load i32*, i32** %1442, align 8
  %1444 = icmp eq i32* %1443, null
  br i1 %1444, label %1708, label %1445

1445:                                             ; preds = %1441
  %1446 = bitcast i32* %1443 to i8*
  call void @_ZdaPv(i8* %1446) #10
  br label %1708

1447:                                             ; preds = %147
  br i1 %127, label %1448, label %1578

1448:                                             ; preds = %1447
  %1449 = bitcast %"class.tflite::RuntimeShape"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1449) #11
  br i1 %68, label %1450, label %1452

1450:                                             ; preds = %1448
  %1451 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 0, i32* %1451, align 8, !alias.scope !478
  br label %1480

1452:                                             ; preds = %1448
  %1453 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %1454 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1453, align 8, !noalias !478
  %1455 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1454, i64 0, i32 0
  %1456 = load i32, i32* %1455, align 4, !noalias !478
  %1457 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1454, i64 0, i32 1, i64 0
  %1458 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 %1456, i32* %1458, align 8, !alias.scope !478
  %1459 = icmp sgt i32 %1456, 5
  br i1 %1459, label %1460, label %1467

1460:                                             ; preds = %1452
  %1461 = sext i32 %1456 to i64
  %1462 = shl nsw i64 %1461, 2
  %1463 = call i8* @_Znam(i64 %1462) #10, !noalias !478
  %1464 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %1465 = bitcast i32** %1464 to i8**
  store i8* %1463, i8** %1465, align 8, !alias.scope !478
  %1466 = bitcast i8* %1463 to i32*
  br label %1472

1467:                                             ; preds = %1452
  %1468 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1
  %1469 = bitcast %union.anon* %1468 to i32*
  %1470 = sext i32 %1456 to i64
  %1471 = shl nsw i64 %1470, 2
  br label %1472

1472:                                             ; preds = %1467, %1460
  %1473 = phi i64 [ %1462, %1460 ], [ %1471, %1467 ]
  %1474 = phi i32* [ %1466, %1460 ], [ %1469, %1467 ]
  %1475 = bitcast i32* %1474 to i8*
  %1476 = bitcast i32* %1457 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1475, i8* align 4 %1476, i64 %1473, i1 false) #11
  %1477 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %1478 = bitcast %union.TfLitePtrUnion* %1477 to i16**
  %1479 = load i16*, i16** %1478, align 8
  br label %1480

1480:                                             ; preds = %1450, %1472
  %1481 = phi i16* [ %1479, %1472 ], [ null, %1450 ]
  %1482 = bitcast %"class.tflite::RuntimeShape"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1482) #11
  br i1 %98, label %1483, label %1485

1483:                                             ; preds = %1480
  %1484 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 0, i32* %1484, align 8, !alias.scope !481
  br label %1513

1485:                                             ; preds = %1480
  %1486 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %1487 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1486, align 8, !noalias !481
  %1488 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1487, i64 0, i32 0
  %1489 = load i32, i32* %1488, align 4, !noalias !481
  %1490 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1487, i64 0, i32 1, i64 0
  %1491 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 %1489, i32* %1491, align 8, !alias.scope !481
  %1492 = icmp sgt i32 %1489, 5
  br i1 %1492, label %1493, label %1500

1493:                                             ; preds = %1485
  %1494 = sext i32 %1489 to i64
  %1495 = shl nsw i64 %1494, 2
  %1496 = call i8* @_Znam(i64 %1495) #10, !noalias !481
  %1497 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1498 = bitcast i32** %1497 to i8**
  store i8* %1496, i8** %1498, align 8, !alias.scope !481
  %1499 = bitcast i8* %1496 to i32*
  br label %1505

1500:                                             ; preds = %1485
  %1501 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %1502 = bitcast %union.anon* %1501 to i32*
  %1503 = sext i32 %1489 to i64
  %1504 = shl nsw i64 %1503, 2
  br label %1505

1505:                                             ; preds = %1500, %1493
  %1506 = phi i64 [ %1495, %1493 ], [ %1504, %1500 ]
  %1507 = phi i32* [ %1499, %1493 ], [ %1502, %1500 ]
  %1508 = bitcast i32* %1507 to i8*
  %1509 = bitcast i32* %1490 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1508, i8* align 4 %1509, i64 %1506, i1 false) #11
  %1510 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %1511 = bitcast %union.TfLitePtrUnion* %1510 to i16**
  %1512 = load i16*, i16** %1511, align 8
  br label %1513

1513:                                             ; preds = %1483, %1505
  %1514 = phi i16* [ %1512, %1505 ], [ null, %1483 ]
  %1515 = bitcast %"class.tflite::RuntimeShape"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1515) #11
  %1516 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %1516, label %1517, label %1519

1517:                                             ; preds = %1513
  %1518 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 0, i32* %1518, align 8, !alias.scope !484
  br label %1547

1519:                                             ; preds = %1513
  %1520 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %1521 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1520, align 8, !noalias !484
  %1522 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1521, i64 0, i32 0
  %1523 = load i32, i32* %1522, align 4, !noalias !484
  %1524 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1521, i64 0, i32 1, i64 0
  %1525 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 %1523, i32* %1525, align 8, !alias.scope !484
  %1526 = icmp sgt i32 %1523, 5
  br i1 %1526, label %1527, label %1534

1527:                                             ; preds = %1519
  %1528 = sext i32 %1523 to i64
  %1529 = shl nsw i64 %1528, 2
  %1530 = call i8* @_Znam(i64 %1529) #10, !noalias !484
  %1531 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1532 = bitcast i32** %1531 to i8**
  store i8* %1530, i8** %1532, align 8, !alias.scope !484
  %1533 = bitcast i8* %1530 to i32*
  br label %1539

1534:                                             ; preds = %1519
  %1535 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1
  %1536 = bitcast %union.anon* %1535 to i32*
  %1537 = sext i32 %1523 to i64
  %1538 = shl nsw i64 %1537, 2
  br label %1539

1539:                                             ; preds = %1534, %1527
  %1540 = phi i64 [ %1529, %1527 ], [ %1538, %1534 ]
  %1541 = phi i32* [ %1533, %1527 ], [ %1536, %1534 ]
  %1542 = bitcast i32* %1541 to i8*
  %1543 = bitcast i32* %1524 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1542, i8* align 4 %1543, i64 %1540, i1 false) #11
  %1544 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %1545 = bitcast %union.TfLitePtrUnion* %1544 to i16**
  %1546 = load i16*, i16** %1545, align 8
  br label %1547

1547:                                             ; preds = %1517, %1539
  %1548 = phi i16* [ %1546, %1539 ], [ null, %1517 ]
  call void @_ZN6tflite13reference_ops16BroadcastSubSlowIsLi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKT_S7_SA_S7_PS8_(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %24, i16* %1481, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %25, i16* %1514, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %26, i16* %1548)
  %1549 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  %1550 = load i32, i32* %1549, align 8
  %1551 = icmp sgt i32 %1550, 5
  br i1 %1551, label %1552, label %1558

1552:                                             ; preds = %1547
  %1553 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1554 = load i32*, i32** %1553, align 8
  %1555 = icmp eq i32* %1554, null
  br i1 %1555, label %1558, label %1556

1556:                                             ; preds = %1552
  %1557 = bitcast i32* %1554 to i8*
  call void @_ZdaPv(i8* %1557) #10
  br label %1558

1558:                                             ; preds = %1547, %1552, %1556
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1515) #11
  %1559 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  %1560 = load i32, i32* %1559, align 8
  %1561 = icmp sgt i32 %1560, 5
  br i1 %1561, label %1562, label %1568

1562:                                             ; preds = %1558
  %1563 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1564 = load i32*, i32** %1563, align 8
  %1565 = icmp eq i32* %1564, null
  br i1 %1565, label %1568, label %1566

1566:                                             ; preds = %1562
  %1567 = bitcast i32* %1564 to i8*
  call void @_ZdaPv(i8* %1567) #10
  br label %1568

1568:                                             ; preds = %1558, %1562, %1566
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1482) #11
  %1569 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  %1570 = load i32, i32* %1569, align 8
  %1571 = icmp sgt i32 %1570, 5
  br i1 %1571, label %1572, label %1708

1572:                                             ; preds = %1568
  %1573 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %1574 = load i32*, i32** %1573, align 8
  %1575 = icmp eq i32* %1574, null
  br i1 %1575, label %1708, label %1576

1576:                                             ; preds = %1572
  %1577 = bitcast i32* %1574 to i8*
  call void @_ZdaPv(i8* %1577) #10
  br label %1708

1578:                                             ; preds = %1447
  %1579 = bitcast %"class.tflite::RuntimeShape"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1579) #11
  br i1 %68, label %1580, label %1582

1580:                                             ; preds = %1578
  %1581 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 0, i32* %1581, align 8, !alias.scope !487
  br label %1610

1582:                                             ; preds = %1578
  %1583 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %1584 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1583, align 8, !noalias !487
  %1585 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1584, i64 0, i32 0
  %1586 = load i32, i32* %1585, align 4, !noalias !487
  %1587 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1584, i64 0, i32 1, i64 0
  %1588 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 %1586, i32* %1588, align 8, !alias.scope !487
  %1589 = icmp sgt i32 %1586, 5
  br i1 %1589, label %1590, label %1597

1590:                                             ; preds = %1582
  %1591 = sext i32 %1586 to i64
  %1592 = shl nsw i64 %1591, 2
  %1593 = call i8* @_Znam(i64 %1592) #10, !noalias !487
  %1594 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %1595 = bitcast i32** %1594 to i8**
  store i8* %1593, i8** %1595, align 8, !alias.scope !487
  %1596 = bitcast i8* %1593 to i32*
  br label %1602

1597:                                             ; preds = %1582
  %1598 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1
  %1599 = bitcast %union.anon* %1598 to i32*
  %1600 = sext i32 %1586 to i64
  %1601 = shl nsw i64 %1600, 2
  br label %1602

1602:                                             ; preds = %1597, %1590
  %1603 = phi i64 [ %1592, %1590 ], [ %1601, %1597 ]
  %1604 = phi i32* [ %1596, %1590 ], [ %1599, %1597 ]
  %1605 = bitcast i32* %1604 to i8*
  %1606 = bitcast i32* %1587 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1605, i8* align 4 %1606, i64 %1603, i1 false) #11
  %1607 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %1608 = bitcast %union.TfLitePtrUnion* %1607 to i16**
  %1609 = load i16*, i16** %1608, align 8
  br label %1610

1610:                                             ; preds = %1580, %1602
  %1611 = phi i16* [ %1609, %1602 ], [ null, %1580 ]
  %1612 = bitcast %"class.tflite::RuntimeShape"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1612) #11
  br i1 %98, label %1613, label %1615

1613:                                             ; preds = %1610
  %1614 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  store i32 0, i32* %1614, align 8, !alias.scope !490
  br label %1643

1615:                                             ; preds = %1610
  %1616 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %1617 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1616, align 8, !noalias !490
  %1618 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1617, i64 0, i32 0
  %1619 = load i32, i32* %1618, align 4, !noalias !490
  %1620 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1617, i64 0, i32 1, i64 0
  %1621 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  store i32 %1619, i32* %1621, align 8, !alias.scope !490
  %1622 = icmp sgt i32 %1619, 5
  br i1 %1622, label %1623, label %1630

1623:                                             ; preds = %1615
  %1624 = sext i32 %1619 to i64
  %1625 = shl nsw i64 %1624, 2
  %1626 = call i8* @_Znam(i64 %1625) #10, !noalias !490
  %1627 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1, i32 0
  %1628 = bitcast i32** %1627 to i8**
  store i8* %1626, i8** %1628, align 8, !alias.scope !490
  %1629 = bitcast i8* %1626 to i32*
  br label %1635

1630:                                             ; preds = %1615
  %1631 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1
  %1632 = bitcast %union.anon* %1631 to i32*
  %1633 = sext i32 %1619 to i64
  %1634 = shl nsw i64 %1633, 2
  br label %1635

1635:                                             ; preds = %1630, %1623
  %1636 = phi i64 [ %1625, %1623 ], [ %1634, %1630 ]
  %1637 = phi i32* [ %1629, %1623 ], [ %1632, %1630 ]
  %1638 = bitcast i32* %1637 to i8*
  %1639 = bitcast i32* %1620 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1638, i8* align 4 %1639, i64 %1636, i1 false) #11
  %1640 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %1641 = bitcast %union.TfLitePtrUnion* %1640 to i16**
  %1642 = load i16*, i16** %1641, align 8
  br label %1643

1643:                                             ; preds = %1613, %1635
  %1644 = phi i16* [ %1642, %1635 ], [ null, %1613 ]
  %1645 = bitcast %"class.tflite::RuntimeShape"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1645) #11
  %1646 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %1646, label %1647, label %1649

1647:                                             ; preds = %1643
  %1648 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 0, i32* %1648, align 8, !alias.scope !493
  br label %1677

1649:                                             ; preds = %1643
  %1650 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %1651 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1650, align 8, !noalias !493
  %1652 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1651, i64 0, i32 0
  %1653 = load i32, i32* %1652, align 4, !noalias !493
  %1654 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1651, i64 0, i32 1, i64 0
  %1655 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 %1653, i32* %1655, align 8, !alias.scope !493
  %1656 = icmp sgt i32 %1653, 5
  br i1 %1656, label %1657, label %1664

1657:                                             ; preds = %1649
  %1658 = sext i32 %1653 to i64
  %1659 = shl nsw i64 %1658, 2
  %1660 = call i8* @_Znam(i64 %1659) #10, !noalias !493
  %1661 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %1662 = bitcast i32** %1661 to i8**
  store i8* %1660, i8** %1662, align 8, !alias.scope !493
  %1663 = bitcast i8* %1660 to i32*
  br label %1669

1664:                                             ; preds = %1649
  %1665 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1
  %1666 = bitcast %union.anon* %1665 to i32*
  %1667 = sext i32 %1653 to i64
  %1668 = shl nsw i64 %1667, 2
  br label %1669

1669:                                             ; preds = %1664, %1657
  %1670 = phi i64 [ %1659, %1657 ], [ %1668, %1664 ]
  %1671 = phi i32* [ %1663, %1657 ], [ %1666, %1664 ]
  %1672 = bitcast i32* %1671 to i8*
  %1673 = bitcast i32* %1654 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1672, i8* align 4 %1673, i64 %1670, i1 false) #11
  %1674 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %1675 = bitcast %union.TfLitePtrUnion* %1674 to i16**
  %1676 = load i16*, i16** %1675, align 8
  br label %1677

1677:                                             ; preds = %1647, %1669
  %1678 = phi i16* [ %1676, %1669 ], [ null, %1647 ]
  call void @_ZN6tflite13reference_ops5Sub16ERKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKsS6_S8_S6_Ps(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %27, i16* %1611, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %28, i16* %1644, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %29, i16* %1678)
  %1679 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  %1680 = load i32, i32* %1679, align 8
  %1681 = icmp sgt i32 %1680, 5
  br i1 %1681, label %1682, label %1688

1682:                                             ; preds = %1677
  %1683 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %1684 = load i32*, i32** %1683, align 8
  %1685 = icmp eq i32* %1684, null
  br i1 %1685, label %1688, label %1686

1686:                                             ; preds = %1682
  %1687 = bitcast i32* %1684 to i8*
  call void @_ZdaPv(i8* %1687) #10
  br label %1688

1688:                                             ; preds = %1677, %1682, %1686
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1645) #11
  %1689 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  %1690 = load i32, i32* %1689, align 8
  %1691 = icmp sgt i32 %1690, 5
  br i1 %1691, label %1692, label %1698

1692:                                             ; preds = %1688
  %1693 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1, i32 0
  %1694 = load i32*, i32** %1693, align 8
  %1695 = icmp eq i32* %1694, null
  br i1 %1695, label %1698, label %1696

1696:                                             ; preds = %1692
  %1697 = bitcast i32* %1694 to i8*
  call void @_ZdaPv(i8* %1697) #10
  br label %1698

1698:                                             ; preds = %1688, %1692, %1696
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1612) #11
  %1699 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  %1700 = load i32, i32* %1699, align 8
  %1701 = icmp sgt i32 %1700, 5
  br i1 %1701, label %1702, label %1708

1702:                                             ; preds = %1698
  %1703 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %1704 = load i32*, i32** %1703, align 8
  %1705 = icmp eq i32* %1704, null
  br i1 %1705, label %1708, label %1706

1706:                                             ; preds = %1702
  %1707 = bitcast i32* %1704 to i8*
  call void @_ZdaPv(i8* %1707) #10
  br label %1708

1708:                                             ; preds = %1706, %1702, %1698, %1576, %1572, %1568, %1445, %1441, %1440, %985, %981, %977, %739, %735, %734, %279, %275, %271
  %1709 = phi i8* [ %152, %271 ], [ %152, %275 ], [ %152, %279 ], [ %282, %734 ], [ %282, %735 ], [ %282, %739 ], [ %743, %977 ], [ %743, %981 ], [ %743, %985 ], [ %988, %1440 ], [ %988, %1441 ], [ %988, %1445 ], [ %1449, %1568 ], [ %1449, %1572 ], [ %1449, %1576 ], [ %1579, %1698 ], [ %1579, %1702 ], [ %1579, %1706 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1709) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %30) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE2EiEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteSubParams*, %"struct.tflite::ops::builtin::sub::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, i1 zeroext, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %9 = alloca %"struct.tflite::ArithmeticParams", align 4
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = getelementptr inbounds %struct.TfLiteSubParams, %struct.TfLiteSubParams* %2, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, -1
  %19 = icmp ult i32 %18, 3
  br i1 %19, label %20, label %27

20:                                               ; preds = %8
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE2EiEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_, i64 0, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %18 to i64
  %25 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE2EiEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_.46, i64 0, i64 %24
  %26 = load i32, i32* %25, align 4
  br label %27

27:                                               ; preds = %8, %20
  %28 = phi i32 [ %23, %20 ], [ -2147483648, %8 ]
  %29 = phi i32 [ %26, %20 ], [ 2147483647, %8 ]
  %30 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %30) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3sub13EvalQuantizedILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.op_params, i64 0, i32 0), i64 80, i1 false)
  %31 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 11
  store i32 %28, i32* %31, align 4
  %32 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 12
  store i32 %29, i32* %32, align 4
  br i1 %6, label %33, label %162

33:                                               ; preds = %27
  %34 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #11
  %35 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %37, align 8, !alias.scope !496
  br label %65

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %40 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %39, align 8, !noalias !496
  %41 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 4, !noalias !496
  %43 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %40, i64 0, i32 1, i64 0
  %44 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %42, i32* %44, align 8, !alias.scope !496
  %45 = icmp sgt i32 %42, 5
  br i1 %45, label %46, label %53

46:                                               ; preds = %38
  %47 = sext i32 %42 to i64
  %48 = shl nsw i64 %47, 2
  %49 = tail call i8* @_Znam(i64 %48) #10, !noalias !496
  %50 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %51 = bitcast i32** %50 to i8**
  store i8* %49, i8** %51, align 8, !alias.scope !496
  %52 = bitcast i8* %49 to i32*
  br label %58

53:                                               ; preds = %38
  %54 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %55 = bitcast %union.anon* %54 to i32*
  %56 = sext i32 %42 to i64
  %57 = shl nsw i64 %56, 2
  br label %58

58:                                               ; preds = %53, %46
  %59 = phi i64 [ %48, %46 ], [ %57, %53 ]
  %60 = phi i32* [ %52, %46 ], [ %55, %53 ]
  %61 = bitcast i32* %60 to i8*
  %62 = bitcast i32* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 4 %62, i64 %59, i1 false) #11
  %63 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %64 = load i32*, i32** %63, align 8
  br label %65

65:                                               ; preds = %36, %58
  %66 = phi i32* [ %64, %58 ], [ null, %36 ]
  %67 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #11
  %68 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %70, align 8, !alias.scope !499
  br label %98

71:                                               ; preds = %65
  %72 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %73 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %72, align 8, !noalias !499
  %74 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 0
  %75 = load i32, i32* %74, align 4, !noalias !499
  %76 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %73, i64 0, i32 1, i64 0
  %77 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %75, i32* %77, align 8, !alias.scope !499
  %78 = icmp sgt i32 %75, 5
  br i1 %78, label %79, label %86

79:                                               ; preds = %71
  %80 = sext i32 %75 to i64
  %81 = shl nsw i64 %80, 2
  %82 = tail call i8* @_Znam(i64 %81) #10, !noalias !499
  %83 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %84 = bitcast i32** %83 to i8**
  store i8* %82, i8** %84, align 8, !alias.scope !499
  %85 = bitcast i8* %82 to i32*
  br label %91

86:                                               ; preds = %71
  %87 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %88 = bitcast %union.anon* %87 to i32*
  %89 = sext i32 %75 to i64
  %90 = shl nsw i64 %89, 2
  br label %91

91:                                               ; preds = %86, %79
  %92 = phi i64 [ %81, %79 ], [ %90, %86 ]
  %93 = phi i32* [ %85, %79 ], [ %88, %86 ]
  %94 = bitcast i32* %93 to i8*
  %95 = bitcast i32* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 4 %95, i64 %92, i1 false) #11
  %96 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1, i32 0
  %97 = load i32*, i32** %96, align 8
  br label %98

98:                                               ; preds = %69, %91
  %99 = phi i32* [ %97, %91 ], [ null, %69 ]
  %100 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #11
  %101 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %103, align 8, !alias.scope !502
  br label %131

104:                                              ; preds = %98
  %105 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %106 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %105, align 8, !noalias !502
  %107 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %106, i64 0, i32 0
  %108 = load i32, i32* %107, align 4, !noalias !502
  %109 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %106, i64 0, i32 1, i64 0
  %110 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %108, i32* %110, align 8, !alias.scope !502
  %111 = icmp sgt i32 %108, 5
  br i1 %111, label %112, label %119

112:                                              ; preds = %104
  %113 = sext i32 %108 to i64
  %114 = shl nsw i64 %113, 2
  %115 = tail call i8* @_Znam(i64 %114) #10, !noalias !502
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %117 = bitcast i32** %116 to i8**
  store i8* %115, i8** %117, align 8, !alias.scope !502
  %118 = bitcast i8* %115 to i32*
  br label %124

119:                                              ; preds = %104
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %121 = bitcast %union.anon* %120 to i32*
  %122 = sext i32 %108 to i64
  %123 = shl nsw i64 %122, 2
  br label %124

124:                                              ; preds = %119, %112
  %125 = phi i64 [ %114, %112 ], [ %123, %119 ]
  %126 = phi i32* [ %118, %112 ], [ %121, %119 ]
  %127 = bitcast i32* %126 to i8*
  %128 = bitcast i32* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %127, i8* align 4 %128, i64 %125, i1 false) #11
  %129 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1, i32 0
  %130 = load i32*, i32** %129, align 8
  br label %131

131:                                              ; preds = %102, %124
  %132 = phi i32* [ %130, %124 ], [ null, %102 ]
  call void @_ZN6tflite13reference_ops16BroadcastSubSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKiS7_S9_S7_Pi(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i32* %66, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i32* %99, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i32* %132)
  %133 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %134 = load i32, i32* %133, align 8
  %135 = icmp sgt i32 %134, 5
  br i1 %135, label %136, label %142

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %138 = load i32*, i32** %137, align 8
  %139 = icmp eq i32* %138, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %136
  %141 = bitcast i32* %138 to i8*
  call void @_ZdaPv(i8* %141) #10
  br label %142

142:                                              ; preds = %131, %136, %140
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #11
  %143 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %144 = load i32, i32* %143, align 8
  %145 = icmp sgt i32 %144, 5
  br i1 %145, label %146, label %152

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %148 = load i32*, i32** %147, align 8
  %149 = icmp eq i32* %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %146
  %151 = bitcast i32* %148 to i8*
  call void @_ZdaPv(i8* %151) #10
  br label %152

152:                                              ; preds = %142, %146, %150
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #11
  %153 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %154 = load i32, i32* %153, align 8
  %155 = icmp sgt i32 %154, 5
  br i1 %155, label %156, label %724

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %158 = load i32*, i32** %157, align 8
  %159 = icmp eq i32* %158, null
  br i1 %159, label %724, label %160

160:                                              ; preds = %156
  %161 = bitcast i32* %158 to i8*
  call void @_ZdaPv(i8* %161) #10
  br label %724

162:                                              ; preds = %27
  %163 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %163) #11
  %164 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %164, label %165, label %167

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %166, align 8, !alias.scope !505
  br label %194

167:                                              ; preds = %162
  %168 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %169 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %168, align 8, !noalias !505
  %170 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %169, i64 0, i32 0
  %171 = load i32, i32* %170, align 4, !noalias !505
  %172 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %169, i64 0, i32 1, i64 0
  %173 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %171, i32* %173, align 8, !alias.scope !505
  %174 = icmp sgt i32 %171, 5
  br i1 %174, label %175, label %182

175:                                              ; preds = %167
  %176 = sext i32 %171 to i64
  %177 = shl nsw i64 %176, 2
  %178 = tail call i8* @_Znam(i64 %177) #10, !noalias !505
  %179 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %180 = bitcast i32** %179 to i8**
  store i8* %178, i8** %180, align 8, !alias.scope !505
  %181 = bitcast i8* %178 to i32*
  br label %187

182:                                              ; preds = %167
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %184 = bitcast %union.anon* %183 to i32*
  %185 = sext i32 %171 to i64
  %186 = shl nsw i64 %185, 2
  br label %187

187:                                              ; preds = %182, %175
  %188 = phi i64 [ %177, %175 ], [ %186, %182 ]
  %189 = phi i32* [ %181, %175 ], [ %184, %182 ]
  %190 = bitcast i32* %189 to i8*
  %191 = bitcast i32* %172 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %190, i8* align 4 %191, i64 %188, i1 false) #11
  %192 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %193 = load i32*, i32** %192, align 8
  br label %194

194:                                              ; preds = %165, %187
  %195 = phi i32 [ %171, %187 ], [ 0, %165 ]
  %196 = phi i32* [ %193, %187 ], [ null, %165 ]
  %197 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %197) #11
  %198 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %198, label %199, label %201

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %200, align 8, !alias.scope !508
  br label %228

201:                                              ; preds = %194
  %202 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %203 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %202, align 8, !noalias !508
  %204 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %203, i64 0, i32 0
  %205 = load i32, i32* %204, align 4, !noalias !508
  %206 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %203, i64 0, i32 1, i64 0
  %207 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %205, i32* %207, align 8, !alias.scope !508
  %208 = icmp sgt i32 %205, 5
  br i1 %208, label %209, label %216

209:                                              ; preds = %201
  %210 = sext i32 %205 to i64
  %211 = shl nsw i64 %210, 2
  %212 = tail call i8* @_Znam(i64 %211) #10, !noalias !508
  %213 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %214 = bitcast i32** %213 to i8**
  store i8* %212, i8** %214, align 8, !alias.scope !508
  %215 = bitcast i8* %212 to i32*
  br label %221

216:                                              ; preds = %201
  %217 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %218 = bitcast %union.anon* %217 to i32*
  %219 = sext i32 %205 to i64
  %220 = shl nsw i64 %219, 2
  br label %221

221:                                              ; preds = %216, %209
  %222 = phi i64 [ %211, %209 ], [ %220, %216 ]
  %223 = phi i32* [ %215, %209 ], [ %218, %216 ]
  %224 = bitcast i32* %223 to i8*
  %225 = bitcast i32* %206 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %224, i8* align 4 %225, i64 %222, i1 false) #11
  %226 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1, i32 0
  %227 = load i32*, i32** %226, align 8
  br label %228

228:                                              ; preds = %199, %221
  %229 = phi i32 [ %205, %221 ], [ 0, %199 ]
  %230 = phi i32* [ %227, %221 ], [ null, %199 ]
  %231 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %231) #11
  %232 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %232, label %233, label %235

233:                                              ; preds = %228
  %234 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %234, align 8, !alias.scope !511
  br label %262

235:                                              ; preds = %228
  %236 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %237 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %236, align 8, !noalias !511
  %238 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %237, i64 0, i32 0
  %239 = load i32, i32* %238, align 4, !noalias !511
  %240 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %237, i64 0, i32 1, i64 0
  %241 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %239, i32* %241, align 8, !alias.scope !511
  %242 = icmp sgt i32 %239, 5
  br i1 %242, label %243, label %250

243:                                              ; preds = %235
  %244 = sext i32 %239 to i64
  %245 = shl nsw i64 %244, 2
  %246 = tail call i8* @_Znam(i64 %245) #10, !noalias !511
  %247 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %248 = bitcast i32** %247 to i8**
  store i8* %246, i8** %248, align 8, !alias.scope !511
  %249 = bitcast i8* %246 to i32*
  br label %255

250:                                              ; preds = %235
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %252 = bitcast %union.anon* %251 to i32*
  %253 = sext i32 %239 to i64
  %254 = shl nsw i64 %253, 2
  br label %255

255:                                              ; preds = %250, %243
  %256 = phi i64 [ %245, %243 ], [ %254, %250 ]
  %257 = phi i32* [ %249, %243 ], [ %252, %250 ]
  %258 = bitcast i32* %257 to i8*
  %259 = bitcast i32* %240 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %258, i8* align 4 %259, i64 %256, i1 false) #11
  %260 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1, i32 0
  %261 = load i32*, i32** %260, align 8
  br label %262

262:                                              ; preds = %233, %255
  %263 = phi i32 [ %239, %255 ], [ 0, %233 ]
  %264 = phi i32* [ %261, %255 ], [ null, %233 ]
  %265 = icmp sgt i32 %195, 5
  %266 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  br i1 %265, label %267, label %270

267:                                              ; preds = %262
  %268 = getelementptr inbounds %union.anon, %union.anon* %266, i64 0, i32 0
  %269 = load i32*, i32** %268, align 8
  br label %273

270:                                              ; preds = %262
  %271 = bitcast %union.anon* %266 to i32*
  %272 = icmp sgt i32 %195, 0
  br i1 %272, label %273, label %373

273:                                              ; preds = %270, %267
  %274 = phi i32* [ %269, %267 ], [ %271, %270 ]
  %275 = zext i32 %195 to i64
  %276 = icmp ult i32 %195, 8
  br i1 %276, label %362, label %277

277:                                              ; preds = %273
  %278 = and i64 %275, 4294967288
  %279 = add nsw i64 %278, -8
  %280 = lshr exact i64 %279, 3
  %281 = add nuw nsw i64 %280, 1
  %282 = and i64 %281, 3
  %283 = icmp ult i64 %279, 24
  br i1 %283, label %329, label %284

284:                                              ; preds = %277
  %285 = sub nsw i64 %281, %282
  br label %286

286:                                              ; preds = %286, %284
  %287 = phi i64 [ 0, %284 ], [ %326, %286 ]
  %288 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %284 ], [ %324, %286 ]
  %289 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %284 ], [ %325, %286 ]
  %290 = phi i64 [ %285, %284 ], [ %327, %286 ]
  %291 = getelementptr inbounds i32, i32* %274, i64 %287
  %292 = bitcast i32* %291 to <4 x i32>*
  %293 = load <4 x i32>, <4 x i32>* %292, align 4
  %294 = getelementptr inbounds i32, i32* %291, i64 4
  %295 = bitcast i32* %294 to <4 x i32>*
  %296 = load <4 x i32>, <4 x i32>* %295, align 4
  %297 = mul nsw <4 x i32> %293, %288
  %298 = mul nsw <4 x i32> %296, %289
  %299 = or i64 %287, 8
  %300 = getelementptr inbounds i32, i32* %274, i64 %299
  %301 = bitcast i32* %300 to <4 x i32>*
  %302 = load <4 x i32>, <4 x i32>* %301, align 4
  %303 = getelementptr inbounds i32, i32* %300, i64 4
  %304 = bitcast i32* %303 to <4 x i32>*
  %305 = load <4 x i32>, <4 x i32>* %304, align 4
  %306 = mul nsw <4 x i32> %302, %297
  %307 = mul nsw <4 x i32> %305, %298
  %308 = or i64 %287, 16
  %309 = getelementptr inbounds i32, i32* %274, i64 %308
  %310 = bitcast i32* %309 to <4 x i32>*
  %311 = load <4 x i32>, <4 x i32>* %310, align 4
  %312 = getelementptr inbounds i32, i32* %309, i64 4
  %313 = bitcast i32* %312 to <4 x i32>*
  %314 = load <4 x i32>, <4 x i32>* %313, align 4
  %315 = mul nsw <4 x i32> %311, %306
  %316 = mul nsw <4 x i32> %314, %307
  %317 = or i64 %287, 24
  %318 = getelementptr inbounds i32, i32* %274, i64 %317
  %319 = bitcast i32* %318 to <4 x i32>*
  %320 = load <4 x i32>, <4 x i32>* %319, align 4
  %321 = getelementptr inbounds i32, i32* %318, i64 4
  %322 = bitcast i32* %321 to <4 x i32>*
  %323 = load <4 x i32>, <4 x i32>* %322, align 4
  %324 = mul nsw <4 x i32> %320, %315
  %325 = mul nsw <4 x i32> %323, %316
  %326 = add i64 %287, 32
  %327 = add i64 %290, -4
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %329, label %286, !llvm.loop !514

329:                                              ; preds = %286, %277
  %330 = phi <4 x i32> [ undef, %277 ], [ %324, %286 ]
  %331 = phi <4 x i32> [ undef, %277 ], [ %325, %286 ]
  %332 = phi i64 [ 0, %277 ], [ %326, %286 ]
  %333 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %277 ], [ %324, %286 ]
  %334 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %277 ], [ %325, %286 ]
  %335 = icmp eq i64 %282, 0
  br i1 %335, label %352, label %336

336:                                              ; preds = %329, %336
  %337 = phi i64 [ %349, %336 ], [ %332, %329 ]
  %338 = phi <4 x i32> [ %347, %336 ], [ %333, %329 ]
  %339 = phi <4 x i32> [ %348, %336 ], [ %334, %329 ]
  %340 = phi i64 [ %350, %336 ], [ %282, %329 ]
  %341 = getelementptr inbounds i32, i32* %274, i64 %337
  %342 = bitcast i32* %341 to <4 x i32>*
  %343 = load <4 x i32>, <4 x i32>* %342, align 4
  %344 = getelementptr inbounds i32, i32* %341, i64 4
  %345 = bitcast i32* %344 to <4 x i32>*
  %346 = load <4 x i32>, <4 x i32>* %345, align 4
  %347 = mul nsw <4 x i32> %343, %338
  %348 = mul nsw <4 x i32> %346, %339
  %349 = add i64 %337, 8
  %350 = add i64 %340, -1
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %352, label %336, !llvm.loop !515

352:                                              ; preds = %336, %329
  %353 = phi <4 x i32> [ %330, %329 ], [ %347, %336 ]
  %354 = phi <4 x i32> [ %331, %329 ], [ %348, %336 ]
  %355 = mul <4 x i32> %354, %353
  %356 = shufflevector <4 x i32> %355, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %357 = mul <4 x i32> %355, %356
  %358 = shufflevector <4 x i32> %357, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %359 = mul <4 x i32> %357, %358
  %360 = extractelement <4 x i32> %359, i32 0
  %361 = icmp eq i64 %278, %275
  br i1 %361, label %373, label %362

362:                                              ; preds = %352, %273
  %363 = phi i64 [ 0, %273 ], [ %278, %352 ]
  %364 = phi i32 [ 1, %273 ], [ %360, %352 ]
  br label %365

365:                                              ; preds = %362, %365
  %366 = phi i64 [ %371, %365 ], [ %363, %362 ]
  %367 = phi i32 [ %370, %365 ], [ %364, %362 ]
  %368 = getelementptr inbounds i32, i32* %274, i64 %366
  %369 = load i32, i32* %368, align 4
  %370 = mul nsw i32 %369, %367
  %371 = add nuw nsw i64 %366, 1
  %372 = icmp eq i64 %371, %275
  br i1 %372, label %373, label %365, !llvm.loop !516

373:                                              ; preds = %365, %352, %270
  %374 = phi i32 [ 1, %270 ], [ %360, %352 ], [ %370, %365 ]
  %375 = icmp sgt i32 %229, 5
  %376 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  br i1 %375, label %377, label %380

377:                                              ; preds = %373
  %378 = getelementptr inbounds %union.anon, %union.anon* %376, i64 0, i32 0
  %379 = load i32*, i32** %378, align 8
  br label %383

380:                                              ; preds = %373
  %381 = bitcast %union.anon* %376 to i32*
  %382 = icmp sgt i32 %229, 0
  br i1 %382, label %383, label %483

383:                                              ; preds = %380, %377
  %384 = phi i32* [ %379, %377 ], [ %381, %380 ]
  %385 = zext i32 %229 to i64
  %386 = icmp ult i32 %229, 8
  br i1 %386, label %472, label %387

387:                                              ; preds = %383
  %388 = and i64 %385, 4294967288
  %389 = add nsw i64 %388, -8
  %390 = lshr exact i64 %389, 3
  %391 = add nuw nsw i64 %390, 1
  %392 = and i64 %391, 3
  %393 = icmp ult i64 %389, 24
  br i1 %393, label %439, label %394

394:                                              ; preds = %387
  %395 = sub nsw i64 %391, %392
  br label %396

396:                                              ; preds = %396, %394
  %397 = phi i64 [ 0, %394 ], [ %436, %396 ]
  %398 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %394 ], [ %434, %396 ]
  %399 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %394 ], [ %435, %396 ]
  %400 = phi i64 [ %395, %394 ], [ %437, %396 ]
  %401 = getelementptr inbounds i32, i32* %384, i64 %397
  %402 = bitcast i32* %401 to <4 x i32>*
  %403 = load <4 x i32>, <4 x i32>* %402, align 4
  %404 = getelementptr inbounds i32, i32* %401, i64 4
  %405 = bitcast i32* %404 to <4 x i32>*
  %406 = load <4 x i32>, <4 x i32>* %405, align 4
  %407 = mul nsw <4 x i32> %403, %398
  %408 = mul nsw <4 x i32> %406, %399
  %409 = or i64 %397, 8
  %410 = getelementptr inbounds i32, i32* %384, i64 %409
  %411 = bitcast i32* %410 to <4 x i32>*
  %412 = load <4 x i32>, <4 x i32>* %411, align 4
  %413 = getelementptr inbounds i32, i32* %410, i64 4
  %414 = bitcast i32* %413 to <4 x i32>*
  %415 = load <4 x i32>, <4 x i32>* %414, align 4
  %416 = mul nsw <4 x i32> %412, %407
  %417 = mul nsw <4 x i32> %415, %408
  %418 = or i64 %397, 16
  %419 = getelementptr inbounds i32, i32* %384, i64 %418
  %420 = bitcast i32* %419 to <4 x i32>*
  %421 = load <4 x i32>, <4 x i32>* %420, align 4
  %422 = getelementptr inbounds i32, i32* %419, i64 4
  %423 = bitcast i32* %422 to <4 x i32>*
  %424 = load <4 x i32>, <4 x i32>* %423, align 4
  %425 = mul nsw <4 x i32> %421, %416
  %426 = mul nsw <4 x i32> %424, %417
  %427 = or i64 %397, 24
  %428 = getelementptr inbounds i32, i32* %384, i64 %427
  %429 = bitcast i32* %428 to <4 x i32>*
  %430 = load <4 x i32>, <4 x i32>* %429, align 4
  %431 = getelementptr inbounds i32, i32* %428, i64 4
  %432 = bitcast i32* %431 to <4 x i32>*
  %433 = load <4 x i32>, <4 x i32>* %432, align 4
  %434 = mul nsw <4 x i32> %430, %425
  %435 = mul nsw <4 x i32> %433, %426
  %436 = add i64 %397, 32
  %437 = add i64 %400, -4
  %438 = icmp eq i64 %437, 0
  br i1 %438, label %439, label %396, !llvm.loop !517

439:                                              ; preds = %396, %387
  %440 = phi <4 x i32> [ undef, %387 ], [ %434, %396 ]
  %441 = phi <4 x i32> [ undef, %387 ], [ %435, %396 ]
  %442 = phi i64 [ 0, %387 ], [ %436, %396 ]
  %443 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %387 ], [ %434, %396 ]
  %444 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %387 ], [ %435, %396 ]
  %445 = icmp eq i64 %392, 0
  br i1 %445, label %462, label %446

446:                                              ; preds = %439, %446
  %447 = phi i64 [ %459, %446 ], [ %442, %439 ]
  %448 = phi <4 x i32> [ %457, %446 ], [ %443, %439 ]
  %449 = phi <4 x i32> [ %458, %446 ], [ %444, %439 ]
  %450 = phi i64 [ %460, %446 ], [ %392, %439 ]
  %451 = getelementptr inbounds i32, i32* %384, i64 %447
  %452 = bitcast i32* %451 to <4 x i32>*
  %453 = load <4 x i32>, <4 x i32>* %452, align 4
  %454 = getelementptr inbounds i32, i32* %451, i64 4
  %455 = bitcast i32* %454 to <4 x i32>*
  %456 = load <4 x i32>, <4 x i32>* %455, align 4
  %457 = mul nsw <4 x i32> %453, %448
  %458 = mul nsw <4 x i32> %456, %449
  %459 = add i64 %447, 8
  %460 = add i64 %450, -1
  %461 = icmp eq i64 %460, 0
  br i1 %461, label %462, label %446, !llvm.loop !518

462:                                              ; preds = %446, %439
  %463 = phi <4 x i32> [ %440, %439 ], [ %457, %446 ]
  %464 = phi <4 x i32> [ %441, %439 ], [ %458, %446 ]
  %465 = mul <4 x i32> %464, %463
  %466 = shufflevector <4 x i32> %465, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %467 = mul <4 x i32> %465, %466
  %468 = shufflevector <4 x i32> %467, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %469 = mul <4 x i32> %467, %468
  %470 = extractelement <4 x i32> %469, i32 0
  %471 = icmp eq i64 %388, %385
  br i1 %471, label %483, label %472

472:                                              ; preds = %462, %383
  %473 = phi i64 [ 0, %383 ], [ %388, %462 ]
  %474 = phi i32 [ 1, %383 ], [ %470, %462 ]
  br label %475

475:                                              ; preds = %472, %475
  %476 = phi i64 [ %481, %475 ], [ %473, %472 ]
  %477 = phi i32 [ %480, %475 ], [ %474, %472 ]
  %478 = getelementptr inbounds i32, i32* %384, i64 %476
  %479 = load i32, i32* %478, align 4
  %480 = mul nsw i32 %479, %477
  %481 = add nuw nsw i64 %476, 1
  %482 = icmp eq i64 %481, %385
  br i1 %482, label %483, label %475, !llvm.loop !519

483:                                              ; preds = %475, %462, %380
  %484 = phi i32 [ 1, %380 ], [ %470, %462 ], [ %480, %475 ]
  %485 = icmp sgt i32 %263, 5
  %486 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  br i1 %485, label %487, label %490

487:                                              ; preds = %483
  %488 = getelementptr inbounds %union.anon, %union.anon* %486, i64 0, i32 0
  %489 = load i32*, i32** %488, align 8
  br label %493

490:                                              ; preds = %483
  %491 = bitcast %union.anon* %486 to i32*
  %492 = icmp sgt i32 %263, 0
  br i1 %492, label %493, label %593

493:                                              ; preds = %490, %487
  %494 = phi i32* [ %489, %487 ], [ %491, %490 ]
  %495 = zext i32 %263 to i64
  %496 = icmp ult i32 %263, 8
  br i1 %496, label %582, label %497

497:                                              ; preds = %493
  %498 = and i64 %495, 4294967288
  %499 = add nsw i64 %498, -8
  %500 = lshr exact i64 %499, 3
  %501 = add nuw nsw i64 %500, 1
  %502 = and i64 %501, 3
  %503 = icmp ult i64 %499, 24
  br i1 %503, label %549, label %504

504:                                              ; preds = %497
  %505 = sub nsw i64 %501, %502
  br label %506

506:                                              ; preds = %506, %504
  %507 = phi i64 [ 0, %504 ], [ %546, %506 ]
  %508 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %504 ], [ %544, %506 ]
  %509 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %504 ], [ %545, %506 ]
  %510 = phi i64 [ %505, %504 ], [ %547, %506 ]
  %511 = getelementptr inbounds i32, i32* %494, i64 %507
  %512 = bitcast i32* %511 to <4 x i32>*
  %513 = load <4 x i32>, <4 x i32>* %512, align 4
  %514 = getelementptr inbounds i32, i32* %511, i64 4
  %515 = bitcast i32* %514 to <4 x i32>*
  %516 = load <4 x i32>, <4 x i32>* %515, align 4
  %517 = mul nsw <4 x i32> %513, %508
  %518 = mul nsw <4 x i32> %516, %509
  %519 = or i64 %507, 8
  %520 = getelementptr inbounds i32, i32* %494, i64 %519
  %521 = bitcast i32* %520 to <4 x i32>*
  %522 = load <4 x i32>, <4 x i32>* %521, align 4
  %523 = getelementptr inbounds i32, i32* %520, i64 4
  %524 = bitcast i32* %523 to <4 x i32>*
  %525 = load <4 x i32>, <4 x i32>* %524, align 4
  %526 = mul nsw <4 x i32> %522, %517
  %527 = mul nsw <4 x i32> %525, %518
  %528 = or i64 %507, 16
  %529 = getelementptr inbounds i32, i32* %494, i64 %528
  %530 = bitcast i32* %529 to <4 x i32>*
  %531 = load <4 x i32>, <4 x i32>* %530, align 4
  %532 = getelementptr inbounds i32, i32* %529, i64 4
  %533 = bitcast i32* %532 to <4 x i32>*
  %534 = load <4 x i32>, <4 x i32>* %533, align 4
  %535 = mul nsw <4 x i32> %531, %526
  %536 = mul nsw <4 x i32> %534, %527
  %537 = or i64 %507, 24
  %538 = getelementptr inbounds i32, i32* %494, i64 %537
  %539 = bitcast i32* %538 to <4 x i32>*
  %540 = load <4 x i32>, <4 x i32>* %539, align 4
  %541 = getelementptr inbounds i32, i32* %538, i64 4
  %542 = bitcast i32* %541 to <4 x i32>*
  %543 = load <4 x i32>, <4 x i32>* %542, align 4
  %544 = mul nsw <4 x i32> %540, %535
  %545 = mul nsw <4 x i32> %543, %536
  %546 = add i64 %507, 32
  %547 = add i64 %510, -4
  %548 = icmp eq i64 %547, 0
  br i1 %548, label %549, label %506, !llvm.loop !520

549:                                              ; preds = %506, %497
  %550 = phi <4 x i32> [ undef, %497 ], [ %544, %506 ]
  %551 = phi <4 x i32> [ undef, %497 ], [ %545, %506 ]
  %552 = phi i64 [ 0, %497 ], [ %546, %506 ]
  %553 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %497 ], [ %544, %506 ]
  %554 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %497 ], [ %545, %506 ]
  %555 = icmp eq i64 %502, 0
  br i1 %555, label %572, label %556

556:                                              ; preds = %549, %556
  %557 = phi i64 [ %569, %556 ], [ %552, %549 ]
  %558 = phi <4 x i32> [ %567, %556 ], [ %553, %549 ]
  %559 = phi <4 x i32> [ %568, %556 ], [ %554, %549 ]
  %560 = phi i64 [ %570, %556 ], [ %502, %549 ]
  %561 = getelementptr inbounds i32, i32* %494, i64 %557
  %562 = bitcast i32* %561 to <4 x i32>*
  %563 = load <4 x i32>, <4 x i32>* %562, align 4
  %564 = getelementptr inbounds i32, i32* %561, i64 4
  %565 = bitcast i32* %564 to <4 x i32>*
  %566 = load <4 x i32>, <4 x i32>* %565, align 4
  %567 = mul nsw <4 x i32> %563, %558
  %568 = mul nsw <4 x i32> %566, %559
  %569 = add i64 %557, 8
  %570 = add i64 %560, -1
  %571 = icmp eq i64 %570, 0
  br i1 %571, label %572, label %556, !llvm.loop !521

572:                                              ; preds = %556, %549
  %573 = phi <4 x i32> [ %550, %549 ], [ %567, %556 ]
  %574 = phi <4 x i32> [ %551, %549 ], [ %568, %556 ]
  %575 = mul <4 x i32> %574, %573
  %576 = shufflevector <4 x i32> %575, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %577 = mul <4 x i32> %575, %576
  %578 = shufflevector <4 x i32> %577, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %579 = mul <4 x i32> %577, %578
  %580 = extractelement <4 x i32> %579, i32 0
  %581 = icmp eq i64 %498, %495
  br i1 %581, label %593, label %582

582:                                              ; preds = %572, %493
  %583 = phi i64 [ 0, %493 ], [ %498, %572 ]
  %584 = phi i32 [ 1, %493 ], [ %580, %572 ]
  br label %585

585:                                              ; preds = %582, %585
  %586 = phi i64 [ %591, %585 ], [ %583, %582 ]
  %587 = phi i32 [ %590, %585 ], [ %584, %582 ]
  %588 = getelementptr inbounds i32, i32* %494, i64 %586
  %589 = load i32, i32* %588, align 4
  %590 = mul nsw i32 %589, %587
  %591 = add nuw nsw i64 %586, 1
  %592 = icmp eq i64 %591, %495
  br i1 %592, label %593, label %585, !llvm.loop !522

593:                                              ; preds = %585, %572, %490
  %594 = phi i32 [ 1, %490 ], [ %580, %572 ], [ %590, %585 ]
  %595 = icmp eq i32 %374, %484
  br i1 %595, label %597, label %596

596:                                              ; preds = %593
  tail call void @abort() #12
  unreachable

597:                                              ; preds = %593
  %598 = icmp eq i32 %374, %594
  br i1 %598, label %599, label %682

599:                                              ; preds = %597
  %600 = icmp sgt i32 %374, 0
  br i1 %600, label %601, label %703

601:                                              ; preds = %599
  %602 = zext i32 %374 to i64
  %603 = load i32, i32* %196, align 4
  %604 = load i32, i32* %230, align 4
  %605 = sub nsw i32 %603, %604
  %606 = sitofp i32 %605 to float
  %607 = sitofp i32 %28 to float
  %608 = sitofp i32 %29 to float
  %609 = fcmp olt float %606, %607
  %610 = select i1 %609, float %607, float %606
  %611 = fcmp ogt float %610, %608
  %612 = select i1 %611, float %608, float %610
  %613 = fptosi float %612 to i32
  store i32 %613, i32* %264, align 4
  %614 = icmp eq i32 %374, 1
  br i1 %614, label %703, label %615

615:                                              ; preds = %601
  %616 = add nsw i64 %602, -1
  %617 = icmp ult i64 %616, 4
  br i1 %617, label %618, label %620

618:                                              ; preds = %680, %620, %615
  %619 = phi i64 [ 1, %620 ], [ 1, %615 ], [ %651, %680 ]
  br label %683

620:                                              ; preds = %615
  %621 = getelementptr i32, i32* %264, i64 1
  %622 = bitcast i32* %621 to i8*
  %623 = getelementptr i32, i32* %264, i64 %602
  %624 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 11
  %625 = bitcast i32* %624 to i8*
  %626 = getelementptr inbounds i8, i8* %625, i64 1
  %627 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 12
  %628 = bitcast i32* %627 to i8*
  %629 = getelementptr inbounds i8, i8* %628, i64 1
  %630 = getelementptr i32, i32* %196, i64 1
  %631 = getelementptr i32, i32* %196, i64 %602
  %632 = getelementptr i32, i32* %230, i64 1
  %633 = getelementptr i32, i32* %230, i64 %602
  %634 = icmp ugt i8* %626, %622
  %635 = icmp ult i32* %31, %623
  %636 = and i1 %634, %635
  %637 = icmp ugt i8* %629, %622
  %638 = icmp ult i32* %32, %623
  %639 = and i1 %637, %638
  %640 = or i1 %636, %639
  %641 = icmp ult i32* %621, %631
  %642 = icmp ult i32* %630, %623
  %643 = and i1 %641, %642
  %644 = or i1 %640, %643
  %645 = icmp ult i32* %621, %633
  %646 = icmp ult i32* %632, %623
  %647 = and i1 %645, %646
  %648 = or i1 %644, %647
  br i1 %648, label %618, label %649

649:                                              ; preds = %620
  %650 = and i64 %616, -4
  %651 = or i64 %650, 1
  %652 = load i32, i32* %31, align 4, !alias.scope !523
  %653 = insertelement <4 x i32> undef, i32 %652, i32 0
  %654 = shufflevector <4 x i32> %653, <4 x i32> undef, <4 x i32> zeroinitializer
  %655 = load i32, i32* %32, align 4, !alias.scope !526
  %656 = insertelement <4 x i32> undef, i32 %655, i32 0
  %657 = shufflevector <4 x i32> %656, <4 x i32> undef, <4 x i32> zeroinitializer
  %658 = sitofp <4 x i32> %654 to <4 x float>
  %659 = sitofp <4 x i32> %657 to <4 x float>
  br label %660

660:                                              ; preds = %660, %649
  %661 = phi i64 [ 0, %649 ], [ %678, %660 ]
  %662 = or i64 %661, 1
  %663 = getelementptr inbounds i32, i32* %196, i64 %662
  %664 = bitcast i32* %663 to <4 x i32>*
  %665 = load <4 x i32>, <4 x i32>* %664, align 4, !alias.scope !528
  %666 = getelementptr inbounds i32, i32* %230, i64 %662
  %667 = bitcast i32* %666 to <4 x i32>*
  %668 = load <4 x i32>, <4 x i32>* %667, align 4, !alias.scope !530
  %669 = sub nsw <4 x i32> %665, %668
  %670 = sitofp <4 x i32> %669 to <4 x float>
  %671 = fcmp olt <4 x float> %670, %658
  %672 = select <4 x i1> %671, <4 x float> %658, <4 x float> %670
  %673 = fcmp ogt <4 x float> %672, %659
  %674 = select <4 x i1> %673, <4 x float> %659, <4 x float> %672
  %675 = fptosi <4 x float> %674 to <4 x i32>
  %676 = getelementptr inbounds i32, i32* %264, i64 %662
  %677 = bitcast i32* %676 to <4 x i32>*
  store <4 x i32> %675, <4 x i32>* %677, align 4, !alias.scope !532, !noalias !534
  %678 = add i64 %661, 4
  %679 = icmp eq i64 %678, %650
  br i1 %679, label %680, label %660, !llvm.loop !535

680:                                              ; preds = %660
  %681 = icmp eq i64 %616, %650
  br i1 %681, label %703, label %618

682:                                              ; preds = %597
  tail call void @abort() #12
  unreachable

683:                                              ; preds = %618, %683
  %684 = phi i64 [ %701, %683 ], [ %619, %618 ]
  %685 = load i32, i32* %31, align 4
  %686 = load i32, i32* %32, align 4
  %687 = getelementptr inbounds i32, i32* %196, i64 %684
  %688 = load i32, i32* %687, align 4
  %689 = getelementptr inbounds i32, i32* %230, i64 %684
  %690 = load i32, i32* %689, align 4
  %691 = sub nsw i32 %688, %690
  %692 = sitofp i32 %691 to float
  %693 = sitofp i32 %685 to float
  %694 = sitofp i32 %686 to float
  %695 = fcmp olt float %692, %693
  %696 = select i1 %695, float %693, float %692
  %697 = fcmp ogt float %696, %694
  %698 = select i1 %697, float %694, float %696
  %699 = fptosi float %698 to i32
  %700 = getelementptr inbounds i32, i32* %264, i64 %684
  store i32 %699, i32* %700, align 4
  %701 = add nuw nsw i64 %684, 1
  %702 = icmp eq i64 %701, %602
  br i1 %702, label %703, label %683, !llvm.loop !536

703:                                              ; preds = %683, %601, %680, %599
  br i1 %485, label %704, label %710

704:                                              ; preds = %703
  %705 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %706 = load i32*, i32** %705, align 8
  %707 = icmp eq i32* %706, null
  br i1 %707, label %710, label %708

708:                                              ; preds = %704
  %709 = bitcast i32* %706 to i8*
  tail call void @_ZdaPv(i8* %709) #10
  br label %710

710:                                              ; preds = %703, %704, %708
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %231) #11
  br i1 %375, label %711, label %717

711:                                              ; preds = %710
  %712 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %713 = load i32*, i32** %712, align 8
  %714 = icmp eq i32* %713, null
  br i1 %714, label %717, label %715

715:                                              ; preds = %711
  %716 = bitcast i32* %713 to i8*
  tail call void @_ZdaPv(i8* %716) #10
  br label %717

717:                                              ; preds = %710, %711, %715
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %197) #11
  br i1 %265, label %718, label %724

718:                                              ; preds = %717
  %719 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %720 = load i32*, i32** %719, align 8
  %721 = icmp eq i32* %720, null
  br i1 %721, label %724, label %722

722:                                              ; preds = %718
  %723 = bitcast i32* %720 to i8*
  tail call void @_ZdaPv(i8* %723) #10
  br label %724

724:                                              ; preds = %722, %718, %717, %160, %156, %152
  %725 = phi i8* [ %34, %152 ], [ %34, %156 ], [ %34, %160 ], [ %163, %717 ], [ %163, %718 ], [ %163, %722 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %725) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %30) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE2EfEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_(%struct.TfLiteContext*, %struct.TfLiteNode*, %struct.TfLiteSubParams*, %"struct.tflite::ops::builtin::sub::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, i1 zeroext, %struct.TfLiteTensor*) local_unnamed_addr #3 comdat {
  %9 = alloca %"struct.tflite::ArithmeticParams", align 4
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = getelementptr inbounds %struct.TfLiteSubParams, %struct.TfLiteSubParams* %2, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, -1
  %19 = icmp ult i32 %18, 3
  br i1 %19, label %20, label %27

20:                                               ; preds = %8
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE2EfEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_, i64 0, i64 %21
  %23 = load float, float* %22, align 4
  %24 = sext i32 %18 to i64
  %25 = getelementptr inbounds [3 x float], [3 x float]* @switch.table._ZN6tflite3ops7builtin3sub11EvalSubImplILNS2_10KernelTypeE2EfEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_bPSE_.47, i64 0, i64 %24
  %26 = load float, float* %25, align 4
  br label %27

27:                                               ; preds = %8, %20
  %28 = phi float [ %23, %20 ], [ 0xC7EFFFFFE0000000, %8 ]
  %29 = phi float [ %26, %20 ], [ 0x47EFFFFFE0000000, %8 ]
  %30 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %30) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }, { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, [5 x i32] }* @__const._ZN6tflite3ops7builtin3sub13EvalQuantizedILNS2_10KernelTypeE2EEEvP13TfLiteContextP10TfLiteNodeP15TfLiteSubParamsPKNS2_6OpDataEPK12TfLiteTensorSG_PSE_.op_params, i64 0, i32 0), i64 80, i1 false)
  %31 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 13
  store float %28, float* %31, align 4
  %32 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 14
  store float %29, float* %32, align 4
  br i1 %6, label %33, label %165

33:                                               ; preds = %27
  %34 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #11
  %35 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %37, align 8, !alias.scope !537
  br label %66

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %40 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %39, align 8, !noalias !537
  %41 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 4, !noalias !537
  %43 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %40, i64 0, i32 1, i64 0
  %44 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %42, i32* %44, align 8, !alias.scope !537
  %45 = icmp sgt i32 %42, 5
  br i1 %45, label %46, label %53

46:                                               ; preds = %38
  %47 = sext i32 %42 to i64
  %48 = shl nsw i64 %47, 2
  %49 = tail call i8* @_Znam(i64 %48) #10, !noalias !537
  %50 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %51 = bitcast i32** %50 to i8**
  store i8* %49, i8** %51, align 8, !alias.scope !537
  %52 = bitcast i8* %49 to i32*
  br label %58

53:                                               ; preds = %38
  %54 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %55 = bitcast %union.anon* %54 to i32*
  %56 = sext i32 %42 to i64
  %57 = shl nsw i64 %56, 2
  br label %58

58:                                               ; preds = %53, %46
  %59 = phi i64 [ %48, %46 ], [ %57, %53 ]
  %60 = phi i32* [ %52, %46 ], [ %55, %53 ]
  %61 = bitcast i32* %60 to i8*
  %62 = bitcast i32* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 4 %62, i64 %59, i1 false) #11
  %63 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %64 = bitcast %union.TfLitePtrUnion* %63 to float**
  %65 = load float*, float** %64, align 8
  br label %66

66:                                               ; preds = %36, %58
  %67 = phi float* [ %65, %58 ], [ null, %36 ]
  %68 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68) #11
  %69 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %71, align 8, !alias.scope !540
  br label %100

72:                                               ; preds = %66
  %73 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %74 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %73, align 8, !noalias !540
  %75 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %74, i64 0, i32 0
  %76 = load i32, i32* %75, align 4, !noalias !540
  %77 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %74, i64 0, i32 1, i64 0
  %78 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %76, i32* %78, align 8, !alias.scope !540
  %79 = icmp sgt i32 %76, 5
  br i1 %79, label %80, label %87

80:                                               ; preds = %72
  %81 = sext i32 %76 to i64
  %82 = shl nsw i64 %81, 2
  %83 = tail call i8* @_Znam(i64 %82) #10, !noalias !540
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %85 = bitcast i32** %84 to i8**
  store i8* %83, i8** %85, align 8, !alias.scope !540
  %86 = bitcast i8* %83 to i32*
  br label %92

87:                                               ; preds = %72
  %88 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %89 = bitcast %union.anon* %88 to i32*
  %90 = sext i32 %76 to i64
  %91 = shl nsw i64 %90, 2
  br label %92

92:                                               ; preds = %87, %80
  %93 = phi i64 [ %82, %80 ], [ %91, %87 ]
  %94 = phi i32* [ %86, %80 ], [ %89, %87 ]
  %95 = bitcast i32* %94 to i8*
  %96 = bitcast i32* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* align 4 %96, i64 %93, i1 false) #11
  %97 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %98 = bitcast %union.TfLitePtrUnion* %97 to float**
  %99 = load float*, float** %98, align 8
  br label %100

100:                                              ; preds = %70, %92
  %101 = phi float* [ %99, %92 ], [ null, %70 ]
  %102 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %102) #11
  %103 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %105, align 8, !alias.scope !543
  br label %134

106:                                              ; preds = %100
  %107 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %108 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %107, align 8, !noalias !543
  %109 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %108, i64 0, i32 0
  %110 = load i32, i32* %109, align 4, !noalias !543
  %111 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %108, i64 0, i32 1, i64 0
  %112 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %110, i32* %112, align 8, !alias.scope !543
  %113 = icmp sgt i32 %110, 5
  br i1 %113, label %114, label %121

114:                                              ; preds = %106
  %115 = sext i32 %110 to i64
  %116 = shl nsw i64 %115, 2
  %117 = tail call i8* @_Znam(i64 %116) #10, !noalias !543
  %118 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %119 = bitcast i32** %118 to i8**
  store i8* %117, i8** %119, align 8, !alias.scope !543
  %120 = bitcast i8* %117 to i32*
  br label %126

121:                                              ; preds = %106
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %123 = bitcast %union.anon* %122 to i32*
  %124 = sext i32 %110 to i64
  %125 = shl nsw i64 %124, 2
  br label %126

126:                                              ; preds = %121, %114
  %127 = phi i64 [ %116, %114 ], [ %125, %121 ]
  %128 = phi i32* [ %120, %114 ], [ %123, %121 ]
  %129 = bitcast i32* %128 to i8*
  %130 = bitcast i32* %111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %129, i8* align 4 %130, i64 %127, i1 false) #11
  %131 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1
  %132 = bitcast %union.TfLitePtrUnion* %131 to float**
  %133 = load float*, float** %132, align 8
  br label %134

134:                                              ; preds = %104, %126
  %135 = phi float* [ %133, %126 ], [ null, %104 ]
  call void @_ZN6tflite13reference_ops16BroadcastSubSlowILi5EEEvRKNS_16ArithmeticParamsERKNS_12RuntimeShapeEPKfS7_S9_S7_Pf(%"struct.tflite::ArithmeticParams"* nonnull dereferenceable(80) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, float* %67, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, float* %101, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, float* %135)
  %136 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %137 = load i32, i32* %136, align 8
  %138 = icmp sgt i32 %137, 5
  br i1 %138, label %139, label %145

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %141 = load i32*, i32** %140, align 8
  %142 = icmp eq i32* %141, null
  br i1 %142, label %145, label %143

143:                                              ; preds = %139
  %144 = bitcast i32* %141 to i8*
  call void @_ZdaPv(i8* %144) #10
  br label %145

145:                                              ; preds = %134, %139, %143
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %102) #11
  %146 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %147 = load i32, i32* %146, align 8
  %148 = icmp sgt i32 %147, 5
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %151 = load i32*, i32** %150, align 8
  %152 = icmp eq i32* %151, null
  br i1 %152, label %155, label %153

153:                                              ; preds = %149
  %154 = bitcast i32* %151 to i8*
  call void @_ZdaPv(i8* %154) #10
  br label %155

155:                                              ; preds = %145, %149, %153
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %68) #11
  %156 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %157 = load i32, i32* %156, align 8
  %158 = icmp sgt i32 %157, 5
  br i1 %158, label %159, label %752

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %161 = load i32*, i32** %160, align 8
  %162 = icmp eq i32* %161, null
  br i1 %162, label %752, label %163

163:                                              ; preds = %159
  %164 = bitcast i32* %161 to i8*
  call void @_ZdaPv(i8* %164) #10
  br label %752

165:                                              ; preds = %27
  %166 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %166) #11
  %167 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %167, label %168, label %170

168:                                              ; preds = %165
  %169 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %169, align 8, !alias.scope !546
  br label %198

170:                                              ; preds = %165
  %171 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %172 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %171, align 8, !noalias !546
  %173 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %172, i64 0, i32 0
  %174 = load i32, i32* %173, align 4, !noalias !546
  %175 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %172, i64 0, i32 1, i64 0
  %176 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %174, i32* %176, align 8, !alias.scope !546
  %177 = icmp sgt i32 %174, 5
  br i1 %177, label %178, label %185

178:                                              ; preds = %170
  %179 = sext i32 %174 to i64
  %180 = shl nsw i64 %179, 2
  %181 = tail call i8* @_Znam(i64 %180) #10, !noalias !546
  %182 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %183 = bitcast i32** %182 to i8**
  store i8* %181, i8** %183, align 8, !alias.scope !546
  %184 = bitcast i8* %181 to i32*
  br label %190

185:                                              ; preds = %170
  %186 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %187 = bitcast %union.anon* %186 to i32*
  %188 = sext i32 %174 to i64
  %189 = shl nsw i64 %188, 2
  br label %190

190:                                              ; preds = %185, %178
  %191 = phi i64 [ %180, %178 ], [ %189, %185 ]
  %192 = phi i32* [ %184, %178 ], [ %187, %185 ]
  %193 = bitcast i32* %192 to i8*
  %194 = bitcast i32* %175 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %193, i8* align 4 %194, i64 %191, i1 false) #11
  %195 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %196 = bitcast %union.TfLitePtrUnion* %195 to float**
  %197 = load float*, float** %196, align 8
  br label %198

198:                                              ; preds = %168, %190
  %199 = phi i32 [ %174, %190 ], [ 0, %168 ]
  %200 = phi float* [ %197, %190 ], [ null, %168 ]
  %201 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %201) #11
  %202 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %202, label %203, label %205

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %204, align 8, !alias.scope !549
  br label %233

205:                                              ; preds = %198
  %206 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %207 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %206, align 8, !noalias !549
  %208 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %207, i64 0, i32 0
  %209 = load i32, i32* %208, align 4, !noalias !549
  %210 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %207, i64 0, i32 1, i64 0
  %211 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %209, i32* %211, align 8, !alias.scope !549
  %212 = icmp sgt i32 %209, 5
  br i1 %212, label %213, label %220

213:                                              ; preds = %205
  %214 = sext i32 %209 to i64
  %215 = shl nsw i64 %214, 2
  %216 = tail call i8* @_Znam(i64 %215) #10, !noalias !549
  %217 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %218 = bitcast i32** %217 to i8**
  store i8* %216, i8** %218, align 8, !alias.scope !549
  %219 = bitcast i8* %216 to i32*
  br label %225

220:                                              ; preds = %205
  %221 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %222 = bitcast %union.anon* %221 to i32*
  %223 = sext i32 %209 to i64
  %224 = shl nsw i64 %223, 2
  br label %225

225:                                              ; preds = %220, %213
  %226 = phi i64 [ %215, %213 ], [ %224, %220 ]
  %227 = phi i32* [ %219, %213 ], [ %222, %220 ]
  %228 = bitcast i32* %227 to i8*
  %229 = bitcast i32* %210 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %228, i8* align 4 %229, i64 %226, i1 false) #11
  %230 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %231 = bitcast %union.TfLitePtrUnion* %230 to float**
  %232 = load float*, float** %231, align 8
  br label %233

233:                                              ; preds = %203, %225
  %234 = phi i32 [ %209, %225 ], [ 0, %203 ]
  %235 = phi float* [ %232, %225 ], [ null, %203 ]
  %236 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %236) #11
  %237 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %237, label %238, label %240

238:                                              ; preds = %233
  %239 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %239, align 8, !alias.scope !552
  br label %268

240:                                              ; preds = %233
  %241 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %242 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %241, align 8, !noalias !552
  %243 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %242, i64 0, i32 0
  %244 = load i32, i32* %243, align 4, !noalias !552
  %245 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %242, i64 0, i32 1, i64 0
  %246 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %244, i32* %246, align 8, !alias.scope !552
  %247 = icmp sgt i32 %244, 5
  br i1 %247, label %248, label %255

248:                                              ; preds = %240
  %249 = sext i32 %244 to i64
  %250 = shl nsw i64 %249, 2
  %251 = tail call i8* @_Znam(i64 %250) #10, !noalias !552
  %252 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %253 = bitcast i32** %252 to i8**
  store i8* %251, i8** %253, align 8, !alias.scope !552
  %254 = bitcast i8* %251 to i32*
  br label %260

255:                                              ; preds = %240
  %256 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %257 = bitcast %union.anon* %256 to i32*
  %258 = sext i32 %244 to i64
  %259 = shl nsw i64 %258, 2
  br label %260

260:                                              ; preds = %255, %248
  %261 = phi i64 [ %250, %248 ], [ %259, %255 ]
  %262 = phi i32* [ %254, %248 ], [ %257, %255 ]
  %263 = bitcast i32* %262 to i8*
  %264 = bitcast i32* %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %263, i8* align 4 %264, i64 %261, i1 false) #11
  %265 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1
  %266 = bitcast %union.TfLitePtrUnion* %265 to float**
  %267 = load float*, float** %266, align 8
  br label %268

268:                                              ; preds = %238, %260
  %269 = phi i32 [ %244, %260 ], [ 0, %238 ]
  %270 = phi float* [ %267, %260 ], [ null, %238 ]
  %271 = icmp sgt i32 %199, 5
  %272 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  br i1 %271, label %273, label %276

273:                                              ; preds = %268
  %274 = getelementptr inbounds %union.anon, %union.anon* %272, i64 0, i32 0
  %275 = load i32*, i32** %274, align 8
  br label %279

276:                                              ; preds = %268
  %277 = bitcast %union.anon* %272 to i32*
  %278 = icmp sgt i32 %199, 0
  br i1 %278, label %279, label %379

279:                                              ; preds = %276, %273
  %280 = phi i32* [ %275, %273 ], [ %277, %276 ]
  %281 = zext i32 %199 to i64
  %282 = icmp ult i32 %199, 8
  br i1 %282, label %368, label %283

283:                                              ; preds = %279
  %284 = and i64 %281, 4294967288
  %285 = add nsw i64 %284, -8
  %286 = lshr exact i64 %285, 3
  %287 = add nuw nsw i64 %286, 1
  %288 = and i64 %287, 3
  %289 = icmp ult i64 %285, 24
  br i1 %289, label %335, label %290

290:                                              ; preds = %283
  %291 = sub nsw i64 %287, %288
  br label %292

292:                                              ; preds = %292, %290
  %293 = phi i64 [ 0, %290 ], [ %332, %292 ]
  %294 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %290 ], [ %330, %292 ]
  %295 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %290 ], [ %331, %292 ]
  %296 = phi i64 [ %291, %290 ], [ %333, %292 ]
  %297 = getelementptr inbounds i32, i32* %280, i64 %293
  %298 = bitcast i32* %297 to <4 x i32>*
  %299 = load <4 x i32>, <4 x i32>* %298, align 4
  %300 = getelementptr inbounds i32, i32* %297, i64 4
  %301 = bitcast i32* %300 to <4 x i32>*
  %302 = load <4 x i32>, <4 x i32>* %301, align 4
  %303 = mul nsw <4 x i32> %299, %294
  %304 = mul nsw <4 x i32> %302, %295
  %305 = or i64 %293, 8
  %306 = getelementptr inbounds i32, i32* %280, i64 %305
  %307 = bitcast i32* %306 to <4 x i32>*
  %308 = load <4 x i32>, <4 x i32>* %307, align 4
  %309 = getelementptr inbounds i32, i32* %306, i64 4
  %310 = bitcast i32* %309 to <4 x i32>*
  %311 = load <4 x i32>, <4 x i32>* %310, align 4
  %312 = mul nsw <4 x i32> %308, %303
  %313 = mul nsw <4 x i32> %311, %304
  %314 = or i64 %293, 16
  %315 = getelementptr inbounds i32, i32* %280, i64 %314
  %316 = bitcast i32* %315 to <4 x i32>*
  %317 = load <4 x i32>, <4 x i32>* %316, align 4
  %318 = getelementptr inbounds i32, i32* %315, i64 4
  %319 = bitcast i32* %318 to <4 x i32>*
  %320 = load <4 x i32>, <4 x i32>* %319, align 4
  %321 = mul nsw <4 x i32> %317, %312
  %322 = mul nsw <4 x i32> %320, %313
  %323 = or i64 %293, 24
  %324 = getelementptr inbounds i32, i32* %280, i64 %323
  %325 = bitcast i32* %324 to <4 x i32>*
  %326 = load <4 x i32>, <4 x i32>* %325, align 4
  %327 = getelementptr inbounds i32, i32* %324, i64 4
  %328 = bitcast i32* %327 to <4 x i32>*
  %329 = load <4 x i32>, <4 x i32>* %328, align 4
  %330 = mul nsw <4 x i32> %326, %321
  %331 = mul nsw <4 x i32> %329, %322
  %332 = add i64 %293, 32
  %333 = add i64 %296, -4
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %292, !llvm.loop !555

335:                                              ; preds = %292, %283
  %336 = phi <4 x i32> [ undef, %283 ], [ %330, %292 ]
  %337 = phi <4 x i32> [ undef, %283 ], [ %331, %292 ]
  %338 = phi i64 [ 0, %283 ], [ %332, %292 ]
  %339 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %283 ], [ %330, %292 ]
  %340 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %283 ], [ %331, %292 ]
  %341 = icmp eq i64 %288, 0
  br i1 %341, label %358, label %342

342:                                              ; preds = %335, %342
  %343 = phi i64 [ %355, %342 ], [ %338, %335 ]
  %344 = phi <4 x i32> [ %353, %342 ], [ %339, %335 ]
  %345 = phi <4 x i32> [ %354, %342 ], [ %340, %335 ]
  %346 = phi i64 [ %356, %342 ], [ %288, %335 ]
  %347 = getelementptr inbounds i32, i32* %280, i64 %343
  %348 = bitcast i32* %347 to <4 x i32>*
  %349 = load <4 x i32>, <4 x i32>* %348, align 4
  %350 = getelementptr inbounds i32, i32* %347, i64 4
  %351 = bitcast i32* %350 to <4 x i32>*
  %352 = load <4 x i32>, <4 x i32>* %351, align 4
  %353 = mul nsw <4 x i32> %349, %344
  %354 = mul nsw <4 x i32> %352, %345
  %355 = add i64 %343, 8
  %356 = add i64 %346, -1
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %358, label %342, !llvm.loop !556

358:                                              ; preds = %342, %335
  %359 = phi <4 x i32> [ %336, %335 ], [ %353, %342 ]
  %360 = phi <4 x i32> [ %337, %335 ], [ %354, %342 ]
  %361 = mul <4 x i32> %360, %359
  %362 = shufflevector <4 x i32> %361, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %363 = mul <4 x i32> %361, %362
  %364 = shufflevector <4 x i32> %363, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %365 = mul <4 x i32> %363, %364
  %366 = extractelement <4 x i32> %365, i32 0
  %367 = icmp eq i64 %284, %281
  br i1 %367, label %379, label %368

368:                                              ; preds = %358, %279
  %369 = phi i64 [ 0, %279 ], [ %284, %358 ]
  %370 = phi i32 [ 1, %279 ], [ %366, %358 ]
  br label %371

371:                                              ; preds = %368, %371
  %372 = phi i64 [ %377, %371 ], [ %369, %368 ]
  %373 = phi i32 [ %376, %371 ], [ %370, %368 ]
  %374 = getelementptr inbounds i32, i32* %280, i64 %372
  %375 = load i32, i32* %374, align 4
  %376 = mul nsw i32 %375, %373
  %377 = add nuw nsw i64 %372, 1
  %378 = icmp eq i64 %377, %281
  br i1 %378, label %379, label %371, !llvm.loop !557

379:                                              ; preds = %371, %358, %276
  %380 = phi i32 [ 1, %276 ], [ %366, %358 ], [ %376, %371 ]
  %381 = icmp sgt i32 %234, 5
  %382 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  br i1 %381, label %383, label %386

383:                                              ; preds = %379
  %384 = getelementptr inbounds %union.anon, %union.anon* %382, i64 0, i32 0
  %385 = load i32*, i32** %384, align 8
  br label %389

386:                                              ; preds = %379
  %387 = bitcast %union.anon* %382 to i32*
  %388 = icmp sgt i32 %234, 0
  br i1 %388, label %389, label %489

389:                                              ; preds = %386, %383
  %390 = phi i32* [ %385, %383 ], [ %387, %386 ]
  %391 = zext i32 %234 to i64
  %392 = icmp ult i32 %234, 8
  br i1 %392, label %478, label %393

393:                                              ; preds = %389
  %394 = and i64 %391, 4294967288
  %395 = add nsw i64 %394, -8
  %396 = lshr exact i64 %395, 3
  %397 = add nuw nsw i64 %396, 1
  %398 = and i64 %397, 3
  %399 = icmp ult i64 %395, 24
  br i1 %399, label %445, label %400

400:                                              ; preds = %393
  %401 = sub nsw i64 %397, %398
  br label %402

402:                                              ; preds = %402, %400
  %403 = phi i64 [ 0, %400 ], [ %442, %402 ]
  %404 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %400 ], [ %440, %402 ]
  %405 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %400 ], [ %441, %402 ]
  %406 = phi i64 [ %401, %400 ], [ %443, %402 ]
  %407 = getelementptr inbounds i32, i32* %390, i64 %403
  %408 = bitcast i32* %407 to <4 x i32>*
  %409 = load <4 x i32>, <4 x i32>* %408, align 4
  %410 = getelementptr inbounds i32, i32* %407, i64 4
  %411 = bitcast i32* %410 to <4 x i32>*
  %412 = load <4 x i32>, <4 x i32>* %411, align 4
  %413 = mul nsw <4 x i32> %409, %404
  %414 = mul nsw <4 x i32> %412, %405
  %415 = or i64 %403, 8
  %416 = getelementptr inbounds i32, i32* %390, i64 %415
  %417 = bitcast i32* %416 to <4 x i32>*
  %418 = load <4 x i32>, <4 x i32>* %417, align 4
  %419 = getelementptr inbounds i32, i32* %416, i64 4
  %420 = bitcast i32* %419 to <4 x i32>*
  %421 = load <4 x i32>, <4 x i32>* %420, align 4
  %422 = mul nsw <4 x i32> %418, %413
  %423 = mul nsw <4 x i32> %421, %414
  %424 = or i64 %403, 16
  %425 = getelementptr inbounds i32, i32* %390, i64 %424
  %426 = bitcast i32* %425 to <4 x i32>*
  %427 = load <4 x i32>, <4 x i32>* %426, align 4
  %428 = getelementptr inbounds i32, i32* %425, i64 4
  %429 = bitcast i32* %428 to <4 x i32>*
  %430 = load <4 x i32>, <4 x i32>* %429, align 4
  %431 = mul nsw <4 x i32> %427, %422
  %432 = mul nsw <4 x i32> %430, %423
  %433 = or i64 %403, 24
  %434 = getelementptr inbounds i32, i32* %390, i64 %433
  %435 = bitcast i32* %434 to <4 x i32>*
  %436 = load <4 x i32>, <4 x i32>* %435, align 4
  %437 = getelementptr inbounds i32, i32* %434, i64 4
  %438 = bitcast i32* %437 to <4 x i32>*
  %439 = load <4 x i32>, <4 x i32>* %438, align 4
  %440 = mul nsw <4 x i32> %436, %431
  %441 = mul nsw <4 x i32> %439, %432
  %442 = add i64 %403, 32
  %443 = add i64 %406, -4
  %444 = icmp eq i64 %443, 0
  br i1 %444, label %445, label %402, !llvm.loop !558

445:                                              ; preds = %402, %393
  %446 = phi <4 x i32> [ undef, %393 ], [ %440, %402 ]
  %447 = phi <4 x i32> [ undef, %393 ], [ %441, %402 ]
  %448 = phi i64 [ 0, %393 ], [ %442, %402 ]
  %449 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %393 ], [ %440, %402 ]
  %450 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %393 ], [ %441, %402 ]
  %451 = icmp eq i64 %398, 0
  br i1 %451, label %468, label %452

452:                                              ; preds = %445, %452
  %453 = phi i64 [ %465, %452 ], [ %448, %445 ]
  %454 = phi <4 x i32> [ %463, %452 ], [ %449, %445 ]
  %455 = phi <4 x i32> [ %464, %452 ], [ %450, %445 ]
  %456 = phi i64 [ %466, %452 ], [ %398, %445 ]
  %457 = getelementptr inbounds i32, i32* %390, i64 %453
  %458 = bitcast i32* %457 to <4 x i32>*
  %459 = load <4 x i32>, <4 x i32>* %458, align 4
  %460 = getelementptr inbounds i32, i32* %457, i64 4
  %461 = bitcast i32* %460 to <4 x i32>*
  %462 = load <4 x i32>, <4 x i32>* %461, align 4
  %463 = mul nsw <4 x i32> %459, %454
  %464 = mul nsw <4 x i32> %462, %455
  %465 = add i64 %453, 8
  %466 = add i64 %456, -1
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %468, label %452, !llvm.loop !559

468:                                              ; preds = %452, %445
  %469 = phi <4 x i32> [ %446, %445 ], [ %463, %452 ]
  %470 = phi <4 x i32> [ %447, %445 ], [ %464, %452 ]
  %471 = mul <4 x i32> %470, %469
  %472 = shufflevector <4 x i32> %471, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %473 = mul <4 x i32> %471, %472
  %474 = shufflevector <4 x i32> %473, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %475 = mul <4 x i32> %473, %474
  %476 = extractelement <4 x i32> %475, i32 0
  %477 = icmp eq i64 %394, %391
  br i1 %477, label %489, label %478

478:                                              ; preds = %468, %389
  %479 = phi i64 [ 0, %389 ], [ %394, %468 ]
  %480 = phi i32 [ 1, %389 ], [ %476, %468 ]
  br label %481

481:                                              ; preds = %478, %481
  %482 = phi i64 [ %487, %481 ], [ %479, %478 ]
  %483 = phi i32 [ %486, %481 ], [ %480, %478 ]
  %484 = getelementptr inbounds i32, i32* %390, i64 %482
  %485 = load i32, i32* %484, align 4
  %486 = mul nsw i32 %485, %483
  %487 = add nuw nsw i64 %482, 1
  %488 = icmp eq i64 %487, %391
  br i1 %488, label %489, label %481, !llvm.loop !560

489:                                              ; preds = %481, %468, %386
  %490 = phi i32 [ 1, %386 ], [ %476, %468 ], [ %486, %481 ]
  %491 = icmp sgt i32 %269, 5
  %492 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  br i1 %491, label %493, label %496

493:                                              ; preds = %489
  %494 = getelementptr inbounds %union.anon, %union.anon* %492, i64 0, i32 0
  %495 = load i32*, i32** %494, align 8
  br label %499

496:                                              ; preds = %489
  %497 = bitcast %union.anon* %492 to i32*
  %498 = icmp sgt i32 %269, 0
  br i1 %498, label %499, label %599

499:                                              ; preds = %496, %493
  %500 = phi i32* [ %495, %493 ], [ %497, %496 ]
  %501 = zext i32 %269 to i64
  %502 = icmp ult i32 %269, 8
  br i1 %502, label %588, label %503

503:                                              ; preds = %499
  %504 = and i64 %501, 4294967288
  %505 = add nsw i64 %504, -8
  %506 = lshr exact i64 %505, 3
  %507 = add nuw nsw i64 %506, 1
  %508 = and i64 %507, 3
  %509 = icmp ult i64 %505, 24
  br i1 %509, label %555, label %510

510:                                              ; preds = %503
  %511 = sub nsw i64 %507, %508
  br label %512

512:                                              ; preds = %512, %510
  %513 = phi i64 [ 0, %510 ], [ %552, %512 ]
  %514 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %510 ], [ %550, %512 ]
  %515 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %510 ], [ %551, %512 ]
  %516 = phi i64 [ %511, %510 ], [ %553, %512 ]
  %517 = getelementptr inbounds i32, i32* %500, i64 %513
  %518 = bitcast i32* %517 to <4 x i32>*
  %519 = load <4 x i32>, <4 x i32>* %518, align 4
  %520 = getelementptr inbounds i32, i32* %517, i64 4
  %521 = bitcast i32* %520 to <4 x i32>*
  %522 = load <4 x i32>, <4 x i32>* %521, align 4
  %523 = mul nsw <4 x i32> %519, %514
  %524 = mul nsw <4 x i32> %522, %515
  %525 = or i64 %513, 8
  %526 = getelementptr inbounds i32, i32* %500, i64 %525
  %527 = bitcast i32* %526 to <4 x i32>*
  %528 = load <4 x i32>, <4 x i32>* %527, align 4
  %529 = getelementptr inbounds i32, i32* %526, i64 4
  %530 = bitcast i32* %529 to <4 x i32>*
  %531 = load <4 x i32>, <4 x i32>* %530, align 4
  %532 = mul nsw <4 x i32> %528, %523
  %533 = mul nsw <4 x i32> %531, %524
  %534 = or i64 %513, 16
  %535 = getelementptr inbounds i32, i32* %500, i64 %534
  %536 = bitcast i32* %535 to <4 x i32>*
  %537 = load <4 x i32>, <4 x i32>* %536, align 4
  %538 = getelementptr inbounds i32, i32* %535, i64 4
  %539 = bitcast i32* %538 to <4 x i32>*
  %540 = load <4 x i32>, <4 x i32>* %539, align 4
  %541 = mul nsw <4 x i32> %537, %532
  %542 = mul nsw <4 x i32> %540, %533
  %543 = or i64 %513, 24
  %544 = getelementptr inbounds i32, i32* %500, i64 %543
  %545 = bitcast i32* %544 to <4 x i32>*
  %546 = load <4 x i32>, <4 x i32>* %545, align 4
  %547 = getelementptr inbounds i32, i32* %544, i64 4
  %548 = bitcast i32* %547 to <4 x i32>*
  %549 = load <4 x i32>, <4 x i32>* %548, align 4
  %550 = mul nsw <4 x i32> %546, %541
  %551 = mul nsw <4 x i32> %549, %542
  %552 = add i64 %513, 32
  %553 = add i64 %516, -4
  %554 = icmp eq i64 %553, 0
  br i1 %554, label %555, label %512, !llvm.loop !561

555:                                              ; preds = %512, %503
  %556 = phi <4 x i32> [ undef, %503 ], [ %550, %512 ]
  %557 = phi <4 x i32> [ undef, %503 ], [ %551, %512 ]
  %558 = phi i64 [ 0, %503 ], [ %552, %512 ]
  %559 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %503 ], [ %550, %512 ]
  %560 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %503 ], [ %551, %512 ]
  %561 = icmp eq i64 %508, 0
  br i1 %561, label %578, label %562

562:                                              ; preds = %555, %562
  %563 = phi i64 [ %575, %562 ], [ %558, %555 ]
  %564 = phi <4 x i32> [ %573, %562 ], [ %559, %555 ]
  %565 = phi <4 x i32> [ %574, %562 ], [ %560, %555 ]
  %566 = phi i64 [ %576, %562 ], [ %508, %555 ]
  %567 = getelementptr inbounds i32, i32* %500, i64 %563
  %568 = bitcast i32* %567 to <4 x i32>*
  %569 = load <4 x i32>, <4 x i32>* %568, align 4
  %570 = getelementptr inbounds i32, i32* %567, i64 4
  %571 = bitcast i32* %570 to <4 x i32>*
  %572 = load <4 x i32>, <4 x i32>* %571, align 4
  %573 = mul nsw <4 x i32> %569, %564
  %574 = mul nsw <4 x i32> %572, %565
  %575 = add i64 %563, 8
  %576 = add i64 %566, -1
  %577 = icmp eq i64 %576, 0
  br i1 %577, label %578, label %562, !llvm.loop !562

578:                                              ; preds = %562, %555
  %579 = phi <4 x i32> [ %556, %555 ], [ %573, %562 ]
  %580 = phi <4 x i32> [ %557, %555 ], [ %574, %562 ]
  %581 = mul <4 x i32> %580, %579
  %582 = shufflevector <4 x i32> %581, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %583 = mul <4 x i32> %581, %582
  %584 = shufflevector <4 x i32> %583, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %585 = mul <4 x i32> %583, %584
  %586 = extractelement <4 x i32> %585, i32 0
  %587 = icmp eq i64 %504, %501
  br i1 %587, label %599, label %588

588:                                              ; preds = %578, %499
  %589 = phi i64 [ 0, %499 ], [ %504, %578 ]
  %590 = phi i32 [ 1, %499 ], [ %586, %578 ]
  br label %591

591:                                              ; preds = %588, %591
  %592 = phi i64 [ %597, %591 ], [ %589, %588 ]
  %593 = phi i32 [ %596, %591 ], [ %590, %588 ]
  %594 = getelementptr inbounds i32, i32* %500, i64 %592
  %595 = load i32, i32* %594, align 4
  %596 = mul nsw i32 %595, %593
  %597 = add nuw nsw i64 %592, 1
  %598 = icmp eq i64 %597, %501
  br i1 %598, label %599, label %591, !llvm.loop !563

599:                                              ; preds = %591, %578, %496
  %600 = phi i32 [ 1, %496 ], [ %586, %578 ], [ %596, %591 ]
  %601 = icmp eq i32 %380, %490
  br i1 %601, label %603, label %602

602:                                              ; preds = %599
  tail call void @abort() #12
  unreachable

603:                                              ; preds = %599
  %604 = icmp eq i32 %380, %600
  br i1 %604, label %605, label %701

605:                                              ; preds = %603
  %606 = icmp sgt i32 %380, 0
  br i1 %606, label %607, label %731

607:                                              ; preds = %605
  %608 = zext i32 %380 to i64
  %609 = load float, float* %200, align 4
  %610 = load float, float* %235, align 4
  %611 = fsub float %609, %610
  %612 = fcmp olt float %611, %28
  %613 = select i1 %612, float %28, float %611
  %614 = fcmp ogt float %613, %29
  %615 = select i1 %614, float %29, float %613
  store float %615, float* %270, align 4
  %616 = icmp eq i32 %380, 1
  br i1 %616, label %731, label %617

617:                                              ; preds = %607
  %618 = add nsw i64 %608, -1
  %619 = icmp ult i64 %618, 4
  br i1 %619, label %620, label %643

620:                                              ; preds = %699, %643, %617
  %621 = phi i64 [ 1, %643 ], [ 1, %617 ], [ %674, %699 ]
  %622 = xor i64 %621, -1
  %623 = and i64 %608, 1
  %624 = icmp eq i64 %623, 0
  br i1 %624, label %625, label %639

625:                                              ; preds = %620
  %626 = load float, float* %31, align 4
  %627 = load float, float* %32, align 4
  %628 = getelementptr inbounds float, float* %200, i64 %621
  %629 = load float, float* %628, align 4
  %630 = getelementptr inbounds float, float* %235, i64 %621
  %631 = load float, float* %630, align 4
  %632 = fsub float %629, %631
  %633 = fcmp olt float %632, %626
  %634 = select i1 %633, float %626, float %632
  %635 = fcmp ogt float %634, %627
  %636 = select i1 %635, float %627, float %634
  %637 = getelementptr inbounds float, float* %270, i64 %621
  store float %636, float* %637, align 4
  %638 = add nuw nsw i64 %621, 1
  br label %639

639:                                              ; preds = %620, %625
  %640 = phi i64 [ %621, %620 ], [ %638, %625 ]
  %641 = sub nsw i64 0, %608
  %642 = icmp eq i64 %622, %641
  br i1 %642, label %731, label %702

643:                                              ; preds = %617
  %644 = getelementptr float, float* %270, i64 1
  %645 = bitcast float* %644 to i8*
  %646 = getelementptr float, float* %270, i64 %608
  %647 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 13
  %648 = bitcast float* %647 to i8*
  %649 = getelementptr inbounds i8, i8* %648, i64 1
  %650 = getelementptr inbounds %"struct.tflite::ArithmeticParams", %"struct.tflite::ArithmeticParams"* %9, i64 0, i32 14
  %651 = bitcast float* %650 to i8*
  %652 = getelementptr inbounds i8, i8* %651, i64 1
  %653 = getelementptr float, float* %200, i64 1
  %654 = getelementptr float, float* %200, i64 %608
  %655 = getelementptr float, float* %235, i64 1
  %656 = getelementptr float, float* %235, i64 %608
  %657 = icmp ugt i8* %649, %645
  %658 = icmp ult float* %31, %646
  %659 = and i1 %657, %658
  %660 = icmp ugt i8* %652, %645
  %661 = icmp ult float* %32, %646
  %662 = and i1 %660, %661
  %663 = or i1 %659, %662
  %664 = icmp ult float* %644, %654
  %665 = icmp ult float* %653, %646
  %666 = and i1 %664, %665
  %667 = or i1 %663, %666
  %668 = icmp ult float* %644, %656
  %669 = icmp ult float* %655, %646
  %670 = and i1 %668, %669
  %671 = or i1 %667, %670
  br i1 %671, label %620, label %672

672:                                              ; preds = %643
  %673 = and i64 %618, -4
  %674 = or i64 %673, 1
  %675 = load float, float* %31, align 4, !alias.scope !564
  %676 = insertelement <4 x float> undef, float %675, i32 0
  %677 = shufflevector <4 x float> %676, <4 x float> undef, <4 x i32> zeroinitializer
  %678 = load float, float* %32, align 4, !alias.scope !567
  %679 = insertelement <4 x float> undef, float %678, i32 0
  %680 = shufflevector <4 x float> %679, <4 x float> undef, <4 x i32> zeroinitializer
  br label %681

681:                                              ; preds = %681, %672
  %682 = phi i64 [ 0, %672 ], [ %697, %681 ]
  %683 = or i64 %682, 1
  %684 = getelementptr inbounds float, float* %200, i64 %683
  %685 = bitcast float* %684 to <4 x float>*
  %686 = load <4 x float>, <4 x float>* %685, align 4, !alias.scope !569
  %687 = getelementptr inbounds float, float* %235, i64 %683
  %688 = bitcast float* %687 to <4 x float>*
  %689 = load <4 x float>, <4 x float>* %688, align 4, !alias.scope !571
  %690 = fsub <4 x float> %686, %689
  %691 = fcmp olt <4 x float> %690, %677
  %692 = select <4 x i1> %691, <4 x float> %677, <4 x float> %690
  %693 = fcmp ogt <4 x float> %692, %680
  %694 = select <4 x i1> %693, <4 x float> %680, <4 x float> %692
  %695 = getelementptr inbounds float, float* %270, i64 %683
  %696 = bitcast float* %695 to <4 x float>*
  store <4 x float> %694, <4 x float>* %696, align 4, !alias.scope !573, !noalias !575
  %697 = add i64 %682, 4
  %698 = icmp eq i64 %697, %673
  br i1 %698, label %699, label %681, !llvm.loop !576

699:                                              ; preds = %681
  %700 = icmp eq i64 %618, %673
  br i1 %700, label %731, label %620

701:                                              ; preds = %603
  tail call void @abort() #12
  unreachable

702:                                              ; preds = %639, %702
  %703 = phi i64 [ %729, %702 ], [ %640, %639 ]
  %704 = load float, float* %31, align 4
  %705 = load float, float* %32, align 4
  %706 = getelementptr inbounds float, float* %200, i64 %703
  %707 = load float, float* %706, align 4
  %708 = getelementptr inbounds float, float* %235, i64 %703
  %709 = load float, float* %708, align 4
  %710 = fsub float %707, %709
  %711 = fcmp olt float %710, %704
  %712 = select i1 %711, float %704, float %710
  %713 = fcmp ogt float %712, %705
  %714 = select i1 %713, float %705, float %712
  %715 = getelementptr inbounds float, float* %270, i64 %703
  store float %714, float* %715, align 4
  %716 = add nuw nsw i64 %703, 1
  %717 = load float, float* %31, align 4
  %718 = load float, float* %32, align 4
  %719 = getelementptr inbounds float, float* %200, i64 %716
  %720 = load float, float* %719, align 4
  %721 = getelementptr inbounds float, float* %235, i64 %716
  %722 = load float, float* %721, align 4
  %723 = fsub float %720, %722
  %724 = fcmp olt float %723, %717
  %725 = select i1 %724, float %717, float %723
  %726 = fcmp ogt float %725, %718
  %727 = select i1 %726, float %718, float %725
  %728 = getelementptr inbounds float, float* %270, i64 %716
  store float %727, float* %728, align 4
  %729 = add nuw nsw i64 %703, 2
  %730 = icmp eq i64 %729, %608
  br i1 %730, label %731, label %702, !llvm.loop !577

731:                                              ; preds = %639, %702, %607, %699, %605
  br i1 %491, label %732, label %738

732:                                              ; preds = %731
  %733 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %734 = load i32*, i32** %733, align 8
  %735 = icmp eq i32* %734, null
  br i1 %735, label %738, label %736

736:                                              ; preds = %732
  %737 = bitcast i32* %734 to i8*
  tail call void @_ZdaPv(i8* %737) #10
  br label %738

738:                                              ; preds = %731, %732, %736
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %236) #11
  br i1 %381, label %739, label %745

739:                                              ; preds = %738
  %740 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %741 = load i32*, i32** %740, align 8
  %742 = icmp eq i32* %741, null
  br i1 %742, label %745, label %743

743:                                              ; preds = %739
  %744 = bitcast i32* %741 to i8*
  tail call void @_ZdaPv(i8* %744) #10
  br label %745

745:                                              ; preds = %738, %739, %743
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %201) #11
  br i1 %271, label %746, label %752

746:                                              ; preds = %745
  %747 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %748 = load i32*, i32** %747, align 8
  %749 = icmp eq i32* %748, null
  br i1 %749, label %752, label %750

750:                                              ; preds = %746
  %751 = bitcast i32* %748 to i8*
  tail call void @_ZdaPv(i8* %751) #10
  br label %752

752:                                              ; preds = %750, %746, %745, %163, %159, %155
  %753 = phi i8* [ %34, %155 ], [ %34, %159 ], [ %34, %163 ], [ %166, %745 ], [ %166, %746 ], [ %166, %750 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %753) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %30) #11
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!5 = distinct !{!5, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!8 = distinct !{!8, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!11 = distinct !{!11, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!14 = distinct !{!14, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!17 = distinct !{!17, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!20 = distinct !{!20, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!23 = distinct !{!23, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!26 = distinct !{!26, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!27 = distinct !{!27, !28}
!28 = !{!"llvm.loop.isvectorized", i32 1}
!29 = distinct !{!29, !30}
!30 = !{!"llvm.loop.unroll.disable"}
!31 = distinct !{!31, !32, !28}
!32 = !{!"llvm.loop.unroll.runtime.disable"}
!33 = distinct !{!33, !28}
!34 = distinct !{!34, !30}
!35 = distinct !{!35, !32, !28}
!36 = distinct !{!36, !28}
!37 = distinct !{!37, !30}
!38 = distinct !{!38, !32, !28}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!41 = distinct !{!41, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!44 = distinct !{!44, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!47 = distinct !{!47, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!50 = distinct !{!50, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!53 = distinct !{!53, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!56 = distinct !{!56, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!57 = distinct !{!57, !28}
!58 = distinct !{!58, !30}
!59 = distinct !{!59, !32, !28}
!60 = distinct !{!60, !28}
!61 = distinct !{!61, !30}
!62 = distinct !{!62, !32, !28}
!63 = distinct !{!63, !28}
!64 = distinct !{!64, !30}
!65 = distinct !{!65, !32, !28}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!68 = distinct !{!68, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!71 = distinct !{!71, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!74 = distinct !{!74, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!77 = distinct !{!77, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!80 = distinct !{!80, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!83 = distinct !{!83, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!86 = distinct !{!86, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!89 = distinct !{!89, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!92 = distinct !{!92, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!95 = distinct !{!95, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!98 = distinct !{!98, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!101 = distinct !{!101, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!102 = distinct !{!102, !28}
!103 = distinct !{!103, !30}
!104 = distinct !{!104, !32, !28}
!105 = distinct !{!105, !28}
!106 = distinct !{!106, !30}
!107 = distinct !{!107, !32, !28}
!108 = distinct !{!108, !28}
!109 = distinct !{!109, !30}
!110 = distinct !{!110, !32, !28}
!111 = !{!112}
!112 = distinct !{!112, !113}
!113 = distinct !{!113, !"LVerDomain"}
!114 = !{!115}
!115 = distinct !{!115, !113}
!116 = !{!117}
!117 = distinct !{!117, !113}
!118 = !{!119}
!119 = distinct !{!119, !113}
!120 = !{!121}
!121 = distinct !{!121, !113}
!122 = !{!112, !115, !117, !119}
!123 = distinct !{!123, !28}
!124 = distinct !{!124, !28}
!125 = !{!126}
!126 = distinct !{!126, !127, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!127 = distinct !{!127, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!128 = !{!129}
!129 = distinct !{!129, !130, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!130 = distinct !{!130, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!131 = !{!132}
!132 = distinct !{!132, !133, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!133 = distinct !{!133, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!134 = !{!135}
!135 = distinct !{!135, !136, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!136 = distinct !{!136, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!137 = !{!138}
!138 = distinct !{!138, !139, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!139 = distinct !{!139, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!140 = !{!141}
!141 = distinct !{!141, !142, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!142 = distinct !{!142, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!143 = distinct !{!143, !28}
!144 = distinct !{!144, !30}
!145 = distinct !{!145, !32, !28}
!146 = distinct !{!146, !28}
!147 = distinct !{!147, !30}
!148 = distinct !{!148, !32, !28}
!149 = distinct !{!149, !28}
!150 = distinct !{!150, !30}
!151 = distinct !{!151, !32, !28}
!152 = !{!153}
!153 = distinct !{!153, !154}
!154 = distinct !{!154, !"LVerDomain"}
!155 = !{!156}
!156 = distinct !{!156, !154}
!157 = !{!158}
!158 = distinct !{!158, !154}
!159 = !{!160}
!160 = distinct !{!160, !154}
!161 = !{!162}
!162 = distinct !{!162, !154}
!163 = !{!153, !156, !158, !160}
!164 = distinct !{!164, !28}
!165 = distinct !{!165, !28}
!166 = !{!167}
!167 = distinct !{!167, !168, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!168 = distinct !{!168, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!169 = distinct !{!169, !28}
!170 = distinct !{!170, !30}
!171 = distinct !{!171, !32, !28}
!172 = !{!173}
!173 = distinct !{!173, !174, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!174 = distinct !{!174, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!175 = distinct !{!175, !28}
!176 = distinct !{!176, !30}
!177 = distinct !{!177, !32, !28}
!178 = !{!179}
!179 = distinct !{!179, !180, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!180 = distinct !{!180, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!181 = distinct !{!181, !28}
!182 = distinct !{!182, !30}
!183 = distinct !{!183, !32, !28}
!184 = !{!185}
!185 = distinct !{!185, !186, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!186 = distinct !{!186, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!187 = distinct !{!187, !28}
!188 = distinct !{!188, !30}
!189 = distinct !{!189, !32, !28}
!190 = distinct !{!190, !30}
!191 = !{!192}
!192 = distinct !{!192, !193, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!193 = distinct !{!193, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!194 = distinct !{!194, !30}
!195 = !{!196}
!196 = distinct !{!196, !197, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!197 = distinct !{!197, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!198 = distinct !{!198, !30}
!199 = !{!200}
!200 = distinct !{!200, !201, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!201 = distinct !{!201, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!202 = distinct !{!202, !28}
!203 = distinct !{!203, !30}
!204 = distinct !{!204, !32, !28}
!205 = !{!206}
!206 = distinct !{!206, !207, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!207 = distinct !{!207, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!208 = distinct !{!208, !28}
!209 = distinct !{!209, !30}
!210 = distinct !{!210, !32, !28}
!211 = !{!212}
!212 = distinct !{!212, !213, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!213 = distinct !{!213, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!214 = distinct !{!214, !28}
!215 = distinct !{!215, !30}
!216 = distinct !{!216, !32, !28}
!217 = distinct !{!217, !28}
!218 = distinct !{!218, !30}
!219 = distinct !{!219, !32, !28}
!220 = distinct !{!220, !28}
!221 = distinct !{!221, !30}
!222 = distinct !{!222, !32, !28}
!223 = distinct !{!223, !28}
!224 = distinct !{!224, !30}
!225 = distinct !{!225, !32, !28}
!226 = !{!227}
!227 = distinct !{!227, !228}
!228 = distinct !{!228, !"LVerDomain"}
!229 = !{!230}
!230 = distinct !{!230, !228}
!231 = !{!232}
!232 = distinct !{!232, !228}
!233 = !{!230, !227}
!234 = distinct !{!234, !28}
!235 = !{!236}
!236 = distinct !{!236, !237}
!237 = distinct !{!237, !"LVerDomain"}
!238 = !{!239}
!239 = distinct !{!239, !237}
!240 = !{!241}
!241 = distinct !{!241, !237}
!242 = !{!239, !236}
!243 = distinct !{!243, !28}
!244 = distinct !{!244, !28}
!245 = distinct !{!245, !28}
!246 = !{!247}
!247 = distinct !{!247, !248, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!248 = distinct !{!248, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!249 = distinct !{!249, !28}
!250 = distinct !{!250, !30}
!251 = distinct !{!251, !32, !28}
!252 = !{!253}
!253 = distinct !{!253, !254, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!254 = distinct !{!254, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!255 = distinct !{!255, !28}
!256 = distinct !{!256, !30}
!257 = distinct !{!257, !32, !28}
!258 = !{!259}
!259 = distinct !{!259, !260, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!260 = distinct !{!260, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!261 = !{!262}
!262 = distinct !{!262, !263, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!263 = distinct !{!263, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!264 = !{!265}
!265 = distinct !{!265, !266, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!266 = distinct !{!266, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!267 = !{!268}
!268 = distinct !{!268, !269, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!269 = distinct !{!269, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!270 = !{!271}
!271 = distinct !{!271, !272, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!272 = distinct !{!272, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!273 = !{!274}
!274 = distinct !{!274, !275, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!275 = distinct !{!275, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!276 = !{!277}
!277 = distinct !{!277, !278, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!278 = distinct !{!278, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!279 = !{!280}
!280 = distinct !{!280, !281, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!281 = distinct !{!281, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!282 = distinct !{!282, !28}
!283 = distinct !{!283, !30}
!284 = distinct !{!284, !32, !28}
!285 = distinct !{!285, !28}
!286 = distinct !{!286, !30}
!287 = distinct !{!287, !32, !28}
!288 = distinct !{!288, !28}
!289 = distinct !{!289, !30}
!290 = distinct !{!290, !32, !28}
!291 = !{!292}
!292 = distinct !{!292, !293, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!293 = distinct !{!293, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!294 = !{!295}
!295 = distinct !{!295, !296, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!296 = distinct !{!296, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!297 = !{!298}
!298 = distinct !{!298, !299, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!299 = distinct !{!299, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!300 = !{!301}
!301 = distinct !{!301, !302, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!302 = distinct !{!302, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!303 = !{!304}
!304 = distinct !{!304, !305, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!305 = distinct !{!305, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!306 = !{!307}
!307 = distinct !{!307, !308, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!308 = distinct !{!308, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!309 = distinct !{!309, !28}
!310 = distinct !{!310, !30}
!311 = distinct !{!311, !32, !28}
!312 = distinct !{!312, !28}
!313 = distinct !{!313, !30}
!314 = distinct !{!314, !32, !28}
!315 = distinct !{!315, !28}
!316 = distinct !{!316, !30}
!317 = distinct !{!317, !32, !28}
!318 = !{!319}
!319 = distinct !{!319, !320, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!320 = distinct !{!320, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!321 = !{!322}
!322 = distinct !{!322, !323, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!323 = distinct !{!323, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!324 = !{!325}
!325 = distinct !{!325, !326, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!326 = distinct !{!326, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!327 = !{!328}
!328 = distinct !{!328, !329, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!329 = distinct !{!329, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!330 = !{!331}
!331 = distinct !{!331, !332, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!332 = distinct !{!332, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!333 = !{!334}
!334 = distinct !{!334, !335, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!335 = distinct !{!335, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!336 = !{!337}
!337 = distinct !{!337, !338, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!338 = distinct !{!338, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!339 = !{!340}
!340 = distinct !{!340, !341, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!341 = distinct !{!341, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!342 = !{!343}
!343 = distinct !{!343, !344, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!344 = distinct !{!344, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!345 = !{!346}
!346 = distinct !{!346, !347, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!347 = distinct !{!347, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!348 = !{!349}
!349 = distinct !{!349, !350, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!350 = distinct !{!350, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!351 = !{!352}
!352 = distinct !{!352, !353, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!353 = distinct !{!353, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!354 = distinct !{!354, !28}
!355 = distinct !{!355, !30}
!356 = distinct !{!356, !32, !28}
!357 = distinct !{!357, !28}
!358 = distinct !{!358, !30}
!359 = distinct !{!359, !32, !28}
!360 = distinct !{!360, !28}
!361 = distinct !{!361, !30}
!362 = distinct !{!362, !32, !28}
!363 = !{!364}
!364 = distinct !{!364, !365}
!365 = distinct !{!365, !"LVerDomain"}
!366 = !{!367}
!367 = distinct !{!367, !365}
!368 = !{!369}
!369 = distinct !{!369, !365}
!370 = !{!371}
!371 = distinct !{!371, !365}
!372 = !{!373}
!373 = distinct !{!373, !365}
!374 = !{!364, !367, !369, !371}
!375 = distinct !{!375, !28}
!376 = distinct !{!376, !28}
!377 = !{!378}
!378 = distinct !{!378, !379, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!379 = distinct !{!379, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!380 = !{!381}
!381 = distinct !{!381, !382, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!382 = distinct !{!382, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!383 = !{!384}
!384 = distinct !{!384, !385, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!385 = distinct !{!385, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!386 = !{!387}
!387 = distinct !{!387, !388, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!388 = distinct !{!388, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!389 = !{!390}
!390 = distinct !{!390, !391, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!391 = distinct !{!391, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!392 = !{!393}
!393 = distinct !{!393, !394, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!394 = distinct !{!394, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!395 = distinct !{!395, !28}
!396 = distinct !{!396, !30}
!397 = distinct !{!397, !32, !28}
!398 = distinct !{!398, !28}
!399 = distinct !{!399, !30}
!400 = distinct !{!400, !32, !28}
!401 = distinct !{!401, !28}
!402 = distinct !{!402, !30}
!403 = distinct !{!403, !32, !28}
!404 = !{!405}
!405 = distinct !{!405, !406}
!406 = distinct !{!406, !"LVerDomain"}
!407 = !{!408}
!408 = distinct !{!408, !406}
!409 = !{!410}
!410 = distinct !{!410, !406}
!411 = !{!412}
!412 = distinct !{!412, !406}
!413 = !{!414}
!414 = distinct !{!414, !406}
!415 = !{!405, !408, !410, !412}
!416 = distinct !{!416, !28}
!417 = distinct !{!417, !28}
!418 = !{!419}
!419 = distinct !{!419, !420, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!420 = distinct !{!420, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!421 = !{!422}
!422 = distinct !{!422, !423, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!423 = distinct !{!423, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!424 = !{!425}
!425 = distinct !{!425, !426, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!426 = distinct !{!426, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!427 = !{!428}
!428 = distinct !{!428, !429, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!429 = distinct !{!429, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!430 = !{!431}
!431 = distinct !{!431, !432, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!432 = distinct !{!432, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!433 = !{!434}
!434 = distinct !{!434, !435, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!435 = distinct !{!435, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!436 = !{!437}
!437 = distinct !{!437, !438, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!438 = distinct !{!438, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!439 = !{!440}
!440 = distinct !{!440, !441, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!441 = distinct !{!441, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!442 = distinct !{!442, !28}
!443 = distinct !{!443, !30}
!444 = distinct !{!444, !32, !28}
!445 = distinct !{!445, !28}
!446 = distinct !{!446, !30}
!447 = distinct !{!447, !32, !28}
!448 = distinct !{!448, !28}
!449 = distinct !{!449, !30}
!450 = distinct !{!450, !32, !28}
!451 = !{!452}
!452 = distinct !{!452, !453, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!453 = distinct !{!453, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!454 = !{!455}
!455 = distinct !{!455, !456, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!456 = distinct !{!456, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!457 = !{!458}
!458 = distinct !{!458, !459, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!459 = distinct !{!459, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!460 = !{!461}
!461 = distinct !{!461, !462, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!462 = distinct !{!462, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!463 = !{!464}
!464 = distinct !{!464, !465, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!465 = distinct !{!465, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!466 = !{!467}
!467 = distinct !{!467, !468, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!468 = distinct !{!468, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!469 = distinct !{!469, !28}
!470 = distinct !{!470, !30}
!471 = distinct !{!471, !32, !28}
!472 = distinct !{!472, !28}
!473 = distinct !{!473, !30}
!474 = distinct !{!474, !32, !28}
!475 = distinct !{!475, !28}
!476 = distinct !{!476, !30}
!477 = distinct !{!477, !32, !28}
!478 = !{!479}
!479 = distinct !{!479, !480, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!480 = distinct !{!480, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!481 = !{!482}
!482 = distinct !{!482, !483, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!483 = distinct !{!483, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!484 = !{!485}
!485 = distinct !{!485, !486, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!486 = distinct !{!486, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!487 = !{!488}
!488 = distinct !{!488, !489, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!489 = distinct !{!489, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!490 = !{!491}
!491 = distinct !{!491, !492, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!492 = distinct !{!492, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!493 = !{!494}
!494 = distinct !{!494, !495, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!495 = distinct !{!495, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!496 = !{!497}
!497 = distinct !{!497, !498, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!498 = distinct !{!498, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!499 = !{!500}
!500 = distinct !{!500, !501, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!501 = distinct !{!501, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!502 = !{!503}
!503 = distinct !{!503, !504, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!504 = distinct !{!504, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!505 = !{!506}
!506 = distinct !{!506, !507, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!507 = distinct !{!507, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!508 = !{!509}
!509 = distinct !{!509, !510, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!510 = distinct !{!510, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!511 = !{!512}
!512 = distinct !{!512, !513, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!513 = distinct !{!513, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!514 = distinct !{!514, !28}
!515 = distinct !{!515, !30}
!516 = distinct !{!516, !32, !28}
!517 = distinct !{!517, !28}
!518 = distinct !{!518, !30}
!519 = distinct !{!519, !32, !28}
!520 = distinct !{!520, !28}
!521 = distinct !{!521, !30}
!522 = distinct !{!522, !32, !28}
!523 = !{!524}
!524 = distinct !{!524, !525}
!525 = distinct !{!525, !"LVerDomain"}
!526 = !{!527}
!527 = distinct !{!527, !525}
!528 = !{!529}
!529 = distinct !{!529, !525}
!530 = !{!531}
!531 = distinct !{!531, !525}
!532 = !{!533}
!533 = distinct !{!533, !525}
!534 = !{!524, !527, !529, !531}
!535 = distinct !{!535, !28}
!536 = distinct !{!536, !28}
!537 = !{!538}
!538 = distinct !{!538, !539, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!539 = distinct !{!539, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!540 = !{!541}
!541 = distinct !{!541, !542, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!542 = distinct !{!542, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!543 = !{!544}
!544 = distinct !{!544, !545, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!545 = distinct !{!545, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!546 = !{!547}
!547 = distinct !{!547, !548, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!548 = distinct !{!548, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!549 = !{!550}
!550 = distinct !{!550, !551, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!551 = distinct !{!551, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!552 = !{!553}
!553 = distinct !{!553, !554, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!554 = distinct !{!554, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!555 = distinct !{!555, !28}
!556 = distinct !{!556, !30}
!557 = distinct !{!557, !32, !28}
!558 = distinct !{!558, !28}
!559 = distinct !{!559, !30}
!560 = distinct !{!560, !32, !28}
!561 = distinct !{!561, !28}
!562 = distinct !{!562, !30}
!563 = distinct !{!563, !32, !28}
!564 = !{!565}
!565 = distinct !{!565, !566}
!566 = distinct !{!566, !"LVerDomain"}
!567 = !{!568}
!568 = distinct !{!568, !566}
!569 = !{!570}
!570 = distinct !{!570, !566}
!571 = !{!572}
!572 = distinct !{!572, !566}
!573 = !{!574}
!574 = distinct !{!574, !566}
!575 = !{!565, !568, !570, !572}
!576 = distinct !{!576, !28}
!577 = distinct !{!577, !28}
