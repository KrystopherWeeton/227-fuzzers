; ModuleID = '../../third_party/blink/renderer/core/workers/parent_execution_context_task_runners.cc'
source_filename = "../../third_party/blink/renderer/core/workers/parent_execution_context_task_runners.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.67", i32, [4 x i8], %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.203", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.219", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.237", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.244", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.183", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.103" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.103" = type { %"struct.std::__1::__atomic_base.104" }
%"struct.std::__1::__atomic_base.104" = type { %"struct.std::__1::__atomic_base.105" }
%"struct.std::__1::__atomic_base.105" = type { %"struct.std::__1::__cxx_atomic_impl.106" }
%"struct.std::__1::__cxx_atomic_impl.106" = type { %"struct.std::__1::__cxx_atomic_base_impl.107" }
%"struct.std::__1::__cxx_atomic_base_impl.107" = type { i64 }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::Worklist.114"* }
%"class.blink::Worklist.114" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.103" }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::Worklist.121"* }
%"class.blink::Worklist.121" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.103" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::Worklist.128"* }
%"class.blink::Worklist.128" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.103" }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::Worklist.135"* }
%"class.blink::Worklist.135" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.103" }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::Worklist.142"* }
%"class.blink::Worklist.142" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.103" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::Worklist.149"* }
%"class.blink::Worklist.149" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.103" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::Worklist.156"* }
%"class.blink::Worklist.156" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.103" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.163", %"class.std::__1::__compressed_pair.170", %"class.std::__1::__compressed_pair.175", %"class.std::__1::__compressed_pair.177", [4 x i8] }>
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165", %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { i64 }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { float }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.186", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.195" }
%"class.WTF::Vector.195" = type { %"class.WTF::VectorBuffer.196" }
%"class.WTF::VectorBuffer.196" = type { %"class.WTF::VectorBufferBase.197" }
%"class.WTF::VectorBufferBase.197" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.211" }
%"class.WTF::VectorBuffer.211" = type { %"class.WTF::VectorBufferBase.212" }
%"class.WTF::VectorBufferBase.212" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.225" }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.114"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.121"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.128"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.135"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.142"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.248" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.243 }
%class.scoped_refptr.243 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.244" = type { %"struct.std::__1::__atomic_base.245" }
%"struct.std::__1::__atomic_base.245" = type { %"struct.std::__1::__cxx_atomic_impl.246" }
%"struct.std::__1::__cxx_atomic_impl.246" = type { %"struct.std::__1::__cxx_atomic_base_impl.247" }
%"struct.std::__1::__cxx_atomic_base_impl.247" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::ParentExecutionContextTaskRunners" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.WTF::Mutex", %"class.WTF::HashMap" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.2"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.3" }
%"class.WTF::HashTable.3" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i8, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.40", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.46", %"class.blink::Member.48", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.57", %"class.blink::Member.63", %"class.blink::Member.65", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.8" }
%"class.WTF::HashMap.8" = type { %"class.WTF::HashTable.9" }
%"class.WTF::HashTable.9" = type <{ %"struct.WTF::KeyValuePair.11"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.11" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.12" }
%"class.blink::Supplementable.12" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.13" }
%"class.blink::HeapHashMap.13" = type { %"class.WTF::HashMap.16" }
%"class.WTF::HashMap.16" = type { %"class.WTF::HashTable.17" }
%"class.WTF::HashTable.17" = type <{ %"struct.WTF::KeyValuePair.19"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.19" = type { i8*, %"class.blink::Member.253" }
%"class.blink::Member.253" = type { %"class.blink::MemberBase.254" }
%"class.blink::MemberBase.254" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.255" }
%"class.blink::Member.255" = type { %"class.blink::MemberBase.256" }
%"class.blink::MemberBase.256" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.20, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.29", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.36", i32, i32 }
%class.scoped_refptr.20 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.27 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.22" }
%"struct.std::__1::atomic.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl.25" }
%"struct.std::__1::__cxx_atomic_impl.25" = type { %"struct.std::__1::__cxx_atomic_base_impl.26" }
%"struct.std::__1::__cxx_atomic_base_impl.26" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.27 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase.35" }
%"class.blink::MemberBase.35" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.36" = type { %"class.WTF::HashTable.37" }
%"class.WTF::HashTable.37" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.40" = type { %"class.blink::MemberBase.41" }
%"class.blink::MemberBase.41" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.44"*, i32, i32 }
%"class.blink::Member.44" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.50", i32, i32 }
%"class.blink::HeapHashMap.50" = type { %"class.WTF::HashMap.53" }
%"class.WTF::HashMap.53" = type { %"class.WTF::HashTable.54" }
%"class.WTF::HashTable.54" = type <{ %"struct.WTF::KeyValuePair.56"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.56" = type opaque
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::ExecutionContextLifecycleObserver" = type <{ %"class.blink::ContextLifecycleObserver", i32, [4 x i8] }>
%"class.blink::Thread" = type { i32 (...)** }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.279 }
%union.anon.279 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink33ParentExecutionContextTaskRunnersD2Ev = comdat any

$_ZN5blink33ParentExecutionContextTaskRunnersD0Ev = comdat any

$_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_33ParentExecutionContextTaskRunnersEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_33ParentExecutionContextTaskRunnersEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_33ParentExecutionContextTaskRunnersEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_33ParentExecutionContextTaskRunnersEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink8TaskTypeENS_12KeyValuePairIS2_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS1_14TaskTypeTraitsENS_10HashTraitsIS7_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERS2_S7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink8TaskTypeENS_12KeyValuePairIS2_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS1_14TaskTypeTraitsENS_10HashTraitsIS7_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS8_ = comdat any

$_ZN3WTF9HashTableIN5blink8TaskTypeENS_12KeyValuePairIS2_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS1_14TaskTypeTraitsENS_10HashTraitsIS7_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_ = comdat any

$_ZZN5blink11GCInfoTraitINS_33ParentExecutionContextTaskRunnersEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_33ParentExecutionContextTaskRunnersEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink33ParentExecutionContextTaskRunnersE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ParentExecutionContextTaskRunners"*, %"class.blink::Visitor"*)* @_ZNK5blink33ParentExecutionContextTaskRunners5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ParentExecutionContextTaskRunners"*)* @_ZN5blink33ParentExecutionContextTaskRunnersD2Ev to i8*), i8* bitcast (void (%"class.blink::ParentExecutionContextTaskRunners"*)* @_ZN5blink33ParentExecutionContextTaskRunnersD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContextLifecycleObserver"*)* @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv to i8*), i8* bitcast (void (%"class.blink::ParentExecutionContextTaskRunners"*)* @_ZN5blink33ParentExecutionContextTaskRunners16ContextDestroyedEv to i8*), i8* bitcast (void (%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*)* @_ZN5blink33ExecutionContextLifecycleObserver19SetExecutionContextEPNS_16ExecutionContextE to i8*)] }, align 8
@.ref.tmp = private constant [8 x i8] c"\03\0D3\17\18\1A\1D!", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_33ParentExecutionContextTaskRunnersEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_33ParentExecutionContextTaskRunnersEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_33ParentExecutionContextTaskRunnersEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_33ParentExecutionContextTaskRunnersEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_33ParentExecutionContextTaskRunnersEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.3 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.4 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink8TaskTypeE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEEPKcv = private unnamed_addr constant [128 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::TaskType, scoped_refptr<base::SingleThreadTaskRunner> >]\00", align 1

@_ZN5blink33ParentExecutionContextTaskRunnersC1EPNS_16ExecutionContextE = hidden unnamed_addr alias void (%"class.blink::ParentExecutionContextTaskRunners"*, %"class.blink::ExecutionContext"*), void (%"class.blink::ParentExecutionContextTaskRunners"*, %"class.blink::ExecutionContext"*)* @_ZN5blink33ParentExecutionContextTaskRunnersC2EPNS_16ExecutionContextE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ParentExecutionContextTaskRunners"* @_ZN5blink33ParentExecutionContextTaskRunners6CreateEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_33ParentExecutionContextTaskRunnersEEEPhm(i64 88) #5
  %3 = bitcast i8* %2 to %"class.blink::ParentExecutionContextTaskRunners"*
  tail call void @_ZN5blink33ParentExecutionContextTaskRunnersC2EPNS_16ExecutionContextE(%"class.blink::ParentExecutionContextTaskRunners"* %3, %"class.blink::ExecutionContext"* %0) #5
  %4 = getelementptr inbounds i8, i8* %2, i64 -4
  %5 = bitcast i8* %4 to i16*
  %6 = load atomic i16, i16* %5 monotonic, align 2
  %7 = or i16 %6, 1
  store atomic i16 %7, i16* %5 release, align 2
  ret %"class.blink::ParentExecutionContextTaskRunners"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ParentExecutionContextTaskRunners"* @_ZN5blink33ParentExecutionContextTaskRunners6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_33ParentExecutionContextTaskRunnersEEEPhm(i64 88) #5
  %2 = bitcast i8* %1 to %"class.blink::ParentExecutionContextTaskRunners"*
  tail call void @_ZN5blink33ParentExecutionContextTaskRunnersC2EPNS_16ExecutionContextE(%"class.blink::ParentExecutionContextTaskRunners"* %2, %"class.blink::ExecutionContext"* null) #5
  %3 = getelementptr inbounds i8, i8* %1, i64 -4
  %4 = bitcast i8* %3 to i16*
  %5 = load atomic i16, i16* %4 monotonic, align 2
  %6 = or i16 %5, 1
  store atomic i16 %6, i16* %4 release, align 2
  ret %"class.blink::ParentExecutionContextTaskRunners"* %2
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33ParentExecutionContextTaskRunnersC2EPNS_16ExecutionContextE(%"class.blink::ParentExecutionContextTaskRunners"*, %"class.blink::ExecutionContext"*) unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %class.scoped_refptr, align 8
  %5 = bitcast %"class.blink::ParentExecutionContextTaskRunners"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  tail call void @_ZN5blink33ExecutionContextLifecycleObserverC2EPNS_16ExecutionContextENS0_4TypeE(%"class.blink::ExecutionContextLifecycleObserver"* %5, %"class.blink::ExecutionContext"* %1, i32 0) #5
  %6 = getelementptr inbounds %"class.blink::ParentExecutionContextTaskRunners", %"class.blink::ParentExecutionContextTaskRunners"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink33ParentExecutionContextTaskRunnersE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::ParentExecutionContextTaskRunners", %"class.blink::ParentExecutionContextTaskRunners"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %7, i1 zeroext false) #5
  %8 = getelementptr inbounds %"class.blink::ParentExecutionContextTaskRunners", %"class.blink::ParentExecutionContextTaskRunners"* %0, i64 0, i32 2
  %9 = bitcast %"class.WTF::HashMap"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #5
  %10 = bitcast %class.scoped_refptr* %4 to i8*
  %11 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  %12 = icmp eq %"class.blink::ExecutionContext"* %1, null
  %13 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 1
  %14 = bitcast %"class.blink::MojoBindingContext"* %13 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %15 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %8, i64 0, i32 0
  br label %17

16:                                               ; preds = %45
  ret void

17:                                               ; preds = %2, %45
  %18 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.ref.tmp, i64 0, i64 0), %2 ], [ %46, %45 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #5
  %19 = load i8, i8* %18, align 1
  store i8 %19, i8* %3, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #5
  store %"class.base::SingleThreadTaskRunner"* inttoptr (i64 -6148914691236517206 to %"class.base::SingleThreadTaskRunner"*), %"class.base::SingleThreadTaskRunner"** %11, align 8
  br i1 %12, label %25, label %20

20:                                               ; preds = %17
  %21 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %14, align 8
  %22 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %21, i64 6
  %23 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %22, align 8
  %24 = call %"class.base::SingleThreadTaskRunner"* %23(%"class.blink::MojoBindingContext"* %13, i8 zeroext %19) #5
  br label %32

25:                                               ; preds = %17
  %26 = call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #5
  %27 = bitcast %"class.blink::Thread"* %26 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %28 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %28, i64 3
  %30 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %29, align 8
  %31 = call %"class.base::SingleThreadTaskRunner"* %30(%"class.blink::Thread"* %26) #5
  br label %32

32:                                               ; preds = %25, %20
  %33 = phi %"class.base::SingleThreadTaskRunner"* [ %31, %25 ], [ %24, %20 ]
  store %"class.base::SingleThreadTaskRunner"* %33, %"class.base::SingleThreadTaskRunner"** %11, align 8
  %34 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink8TaskTypeENS_12KeyValuePairIS2_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS1_14TaskTypeTraitsENS_10HashTraitsIS7_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERS2_S7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.3"* %15, i8* nonnull dereferenceable(1) %3, %class.scoped_refptr* nonnull dereferenceable(8) %4) #5
  %35 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %11, align 8
  %36 = icmp eq %"class.base::SingleThreadTaskRunner"* %35, null
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %35, i64 0, i32 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw sub i32* %39, i32 1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %45

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %38, i64 -2
  %44 = bitcast %"class.base::RefCountedThreadSafe"* %43 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %44) #5
  br label %45

45:                                               ; preds = %32, %37, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #5
  %46 = getelementptr inbounds i8, i8* %18, i64 1
  %47 = icmp eq i8* %46, getelementptr inbounds ([8 x i8], [8 x i8]* @.ref.tmp, i64 1, i64 0)
  br i1 %47, label %16, label %17
}

declare void @_ZN5blink33ExecutionContextLifecycleObserverC2EPNS_16ExecutionContextENS0_4TypeE(%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*, i32) unnamed_addr #2

declare %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SingleThreadTaskRunner"* @_ZN5blink33ParentExecutionContextTaskRunners3GetENS_8TaskTypeE(%"class.blink::ParentExecutionContextTaskRunners"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ParentExecutionContextTaskRunners", %"class.blink::ParentExecutionContextTaskRunners"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %3) #5
  %4 = getelementptr inbounds %"class.blink::ParentExecutionContextTaskRunners", %"class.blink::ParentExecutionContextTaskRunners"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %70, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::ParentExecutionContextTaskRunners", %"class.blink::ParentExecutionContextTaskRunners"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = zext i8 %1 to i32
  %13 = shl nuw nsw i32 %12, 15
  %14 = xor i32 %13, -1
  %15 = add nsw i32 %14, %12
  %16 = lshr i32 %15, 10
  %17 = xor i32 %16, %15
  %18 = mul nsw i32 %17, 9
  %19 = lshr i32 %18, 6
  %20 = xor i32 %19, %18
  %21 = shl i32 %20, 11
  %22 = xor i32 %21, -1
  %23 = add i32 %20, %22
  %24 = lshr i32 %23, 16
  %25 = xor i32 %24, %23
  %26 = and i32 %10, %25
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %28, i64 0, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, %1
  br i1 %31, label %60, label %32

32:                                               ; preds = %7
  %33 = xor i32 %25, -1
  %34 = lshr i32 %23, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %51, %32
  %47 = phi i8 [ %30, %32 ], [ %58, %51 ]
  %48 = phi i64 [ %27, %32 ], [ %55, %51 ]
  %49 = phi i64 [ 0, %32 ], [ %53, %51 ]
  %50 = icmp eq i8 %47, -1
  br i1 %50, label %70, label %51

51:                                               ; preds = %46
  %52 = icmp eq i64 %49, 0
  %53 = select i1 %52, i64 %45, i64 %49
  %54 = add i64 %53, %48
  %55 = and i64 %54, %11
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %55
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %56, i64 0, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %58, %1
  br i1 %59, label %60, label %46

60:                                               ; preds = %51, %7
  %61 = phi %"struct.WTF::KeyValuePair"* [ %28, %7 ], [ %56, %51 ]
  %62 = icmp eq %"struct.WTF::KeyValuePair"* %61, null
  br i1 %62, label %70, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 0, i32 1, i32 0
  %65 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %64, align 8
  %66 = icmp eq %"class.base::SingleThreadTaskRunner"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %65, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 1 monotonic
  br label %70

70:                                               ; preds = %46, %2, %60, %63, %67
  %71 = phi %"class.base::SingleThreadTaskRunner"* [ null, %63 ], [ %65, %67 ], [ null, %60 ], [ null, %2 ], [ null, %46 ]
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %3) #5
  ret %"class.base::SingleThreadTaskRunner"* %71
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink33ParentExecutionContextTaskRunners5TraceEPNS_7VisitorE(%"class.blink::ParentExecutionContextTaskRunners"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::ParentExecutionContextTaskRunners"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  tail call void @_ZNK5blink33ExecutionContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextLifecycleObserver"* %3, %"class.blink::Visitor"* %1) #5
  ret void
}

declare void @_ZNK5blink33ExecutionContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33ParentExecutionContextTaskRunners16ContextDestroyedEv(%"class.blink::ParentExecutionContextTaskRunners"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParentExecutionContextTaskRunners", %"class.blink::ParentExecutionContextTaskRunners"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %2) #5
  %3 = getelementptr inbounds %"class.blink::ParentExecutionContextTaskRunners", %"class.blink::ParentExecutionContextTaskRunners"* %0, i64 0, i32 2, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::ParentExecutionContextTaskRunners", %"class.blink::ParentExecutionContextTaskRunners"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ParentExecutionContextTaskRunners", %"class.blink::ParentExecutionContextTaskRunners"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %10
  br i1 %5, label %25, label %12

12:                                               ; preds = %1
  %13 = icmp eq i32 %9, 0
  br i1 %13, label %22, label %14

14:                                               ; preds = %12, %19
  %15 = phi %"struct.WTF::KeyValuePair"* [ %20, %19 ], [ %7, %12 ]
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp ugt i8 %17, -3
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 1
  %21 = icmp eq %"struct.WTF::KeyValuePair"* %20, %11
  br i1 %21, label %25, label %14

22:                                               ; preds = %14, %12
  %23 = phi %"struct.WTF::KeyValuePair"* [ %7, %12 ], [ %15, %14 ]
  %24 = icmp eq %"struct.WTF::KeyValuePair"* %23, %11
  br i1 %24, label %25, label %26

25:                                               ; preds = %19, %48, %59, %56, %1, %22
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %2) #5
  ret void

26:                                               ; preds = %22, %59
  %27 = phi %"struct.WTF::KeyValuePair"* [ %52, %59 ], [ %23, %22 ]
  %28 = tail call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #5
  %29 = bitcast %"class.blink::Thread"* %28 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %30 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %30, i64 3
  %32 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %31, align 8
  %33 = tail call %"class.base::SingleThreadTaskRunner"* %32(%"class.blink::Thread"* %28) #5
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 0, i32 1
  %35 = ptrtoint %"class.base::SingleThreadTaskRunner"* %33 to i64
  %36 = bitcast %class.scoped_refptr* %34 to i64*
  %37 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %34, i64 0, i32 0
  %38 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %37, align 8
  store i64 %35, i64* %36, align 8
  %39 = icmp eq %"class.base::SingleThreadTaskRunner"* %38, null
  br i1 %39, label %48, label %40

40:                                               ; preds = %26
  %41 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %38, i64 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw sub i32* %42, i32 1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %48

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %41, i64 -2
  %47 = bitcast %"class.base::RefCountedThreadSafe"* %46 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %47) #5
  br label %48

48:                                               ; preds = %26, %40, %45
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 1
  %50 = icmp eq %"struct.WTF::KeyValuePair"* %49, %11
  br i1 %50, label %25, label %51

51:                                               ; preds = %48, %56
  %52 = phi %"struct.WTF::KeyValuePair"* [ %57, %56 ], [ %49, %48 ]
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 0, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp ugt i8 %54, -3
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 1
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %57, %11
  br i1 %58, label %25, label %51

59:                                               ; preds = %51
  %60 = icmp eq %"struct.WTF::KeyValuePair"* %52, %11
  br i1 %60, label %25, label %26
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink33ParentExecutionContextTaskRunnersD2Ev(%"class.blink::ParentExecutionContextTaskRunners"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ParentExecutionContextTaskRunners", %"class.blink::ParentExecutionContextTaskRunners"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink33ParentExecutionContextTaskRunnersE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ParentExecutionContextTaskRunners", %"class.blink::ParentExecutionContextTaskRunners"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %34, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ParentExecutionContextTaskRunners", %"class.blink::ParentExecutionContextTaskRunners"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %32, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %29, %10
  %13 = phi i64 [ 0, %10 ], [ %30, %29 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, -2
  br i1 %16, label %29, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 1, i32 0
  %19 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %18, align 8
  %20 = icmp eq %"class.base::SingleThreadTaskRunner"* %19, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %19, i64 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 -2
  %28 = bitcast %"class.base::RefCountedThreadSafe"* %27 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %28) #5
  br label %29

29:                                               ; preds = %26, %21, %17, %12
  %30 = add nuw nsw i64 %13, 1
  %31 = icmp eq i64 %30, %11
  br i1 %31, label %32, label %12

32:                                               ; preds = %29, %6
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %33) #5
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %3, align 8
  br label %34

34:                                               ; preds = %1, %32
  %35 = getelementptr inbounds %"class.blink::ParentExecutionContextTaskRunners", %"class.blink::ParentExecutionContextTaskRunners"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %35) #5
  %36 = getelementptr inbounds %"class.blink::ParentExecutionContextTaskRunners", %"class.blink::ParentExecutionContextTaskRunners"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %36) #5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink33ParentExecutionContextTaskRunnersD0Ev(%"class.blink::ParentExecutionContextTaskRunners"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ParentExecutionContextTaskRunners", %"class.blink::ParentExecutionContextTaskRunners"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink33ParentExecutionContextTaskRunnersE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ParentExecutionContextTaskRunners", %"class.blink::ParentExecutionContextTaskRunners"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %34, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ParentExecutionContextTaskRunners", %"class.blink::ParentExecutionContextTaskRunners"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %32, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %29, %10
  %13 = phi i64 [ 0, %10 ], [ %30, %29 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, -2
  br i1 %16, label %29, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 1, i32 0
  %19 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %18, align 8
  %20 = icmp eq %"class.base::SingleThreadTaskRunner"* %19, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %19, i64 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 -2
  %28 = bitcast %"class.base::RefCountedThreadSafe"* %27 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %28) #5
  br label %29

29:                                               ; preds = %26, %21, %17, %12
  %30 = add nuw nsw i64 %13, 1
  %31 = icmp eq i64 %30, %11
  br i1 %31, label %32, label %12

32:                                               ; preds = %29, %6
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %33) #5
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %3, align 8
  br label %34

34:                                               ; preds = %1, %32
  %35 = getelementptr inbounds %"class.blink::ParentExecutionContextTaskRunners", %"class.blink::ParentExecutionContextTaskRunners"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %35) #5
  %36 = getelementptr inbounds %"class.blink::ParentExecutionContextTaskRunners", %"class.blink::ParentExecutionContextTaskRunners"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %36) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv(%"class.blink::ExecutionContextLifecycleObserver"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink33ExecutionContextLifecycleObserver19SetExecutionContextEPNS_16ExecutionContextE(%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*) unnamed_addr #2

declare void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"*, i1 zeroext) unnamed_addr #2

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #2

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"*) unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_33ParentExecutionContextTaskRunnersEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #5
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #5
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_33ParentExecutionContextTaskRunnersEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_33ParentExecutionContextTaskRunnersEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.22"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_33ParentExecutionContextTaskRunnersEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.22"*)) #5
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #5
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #5
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #5
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #5
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %40, i8* %41) #5
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #5
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #5
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #5
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #5
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #5
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_33ParentExecutionContextTaskRunnersEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ExecutionContextLifecycleObserver"*
  tail call void @_ZNK5blink33ExecutionContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextLifecycleObserver"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_33ParentExecutionContextTaskRunnersEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink33ParentExecutionContextTaskRunnersE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %0, i64 64
  %4 = bitcast i8* %3 to %"struct.WTF::KeyValuePair"**
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %36, label %7, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 72
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %34, label %12

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  br label %14

14:                                               ; preds = %31, %12
  %15 = phi i64 [ 0, %12 ], [ %32, %31 ]
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %15, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, -2
  br i1 %18, label %31, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %15, i32 1, i32 0
  %21 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %20, align 8
  %22 = icmp eq %"class.base::SingleThreadTaskRunner"* %21, null
  br i1 %22, label %31, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %21, i64 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %24, i64 -2
  %30 = bitcast %"class.base::RefCountedThreadSafe"* %29 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %30) #5
  br label %31

31:                                               ; preds = %28, %23, %19, %14
  %32 = add nuw nsw i64 %15, 1
  %33 = icmp eq i64 %32, %13
  br i1 %33, label %34, label %14

34:                                               ; preds = %31, %7
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %35) #5
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %36

36:                                               ; preds = %1, %34
  %37 = getelementptr inbounds i8, i8* %0, i64 24
  %38 = bitcast i8* %37 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %38) #5
  %39 = bitcast i8* %0 to %"class.blink::ContextLifecycleObserver"*
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %39) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_33ParentExecutionContextTaskRunnersEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.22"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink8TaskTypeENS_12KeyValuePairIS2_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS1_14TaskTypeTraitsENS_10HashTraitsIS7_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERS2_S7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.3"*, i8* dereferenceable(1), %class.scoped_refptr* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3", %"class.WTF::HashTable.3"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink8TaskTypeENS_12KeyValuePairIS2_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS1_14TaskTypeTraitsENS_10HashTraitsIS7_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.3"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3", %"class.WTF::HashTable.3"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i8, i8* %1, align 1
  %17 = zext i8 %16 to i32
  %18 = shl nuw nsw i32 %17, 15
  %19 = xor i32 %18, -1
  %20 = add nsw i32 %19, %17
  %21 = lshr i32 %20, 10
  %22 = xor i32 %21, %20
  %23 = mul nsw i32 %22, 9
  %24 = lshr i32 %23, 6
  %25 = xor i32 %24, %23
  %26 = shl i32 %25, 11
  %27 = xor i32 %26, -1
  %28 = add i32 %25, %27
  %29 = lshr i32 %28, 16
  %30 = xor i32 %29, %28
  %31 = and i32 %30, %14
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, -1
  br i1 %36, label %82, label %37

37:                                               ; preds = %10
  %38 = xor i32 %30, -1
  %39 = lshr i32 %28, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %37, %58
  %52 = phi i8 [ %35, %37 ], [ %67, %58 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ %33, %37 ], [ %65, %58 ]
  %54 = phi %"struct.WTF::KeyValuePair"* [ null, %37 ], [ %60, %58 ]
  %55 = phi i64 [ %32, %37 ], [ %64, %58 ]
  %56 = phi i64 [ 0, %37 ], [ %62, %58 ]
  %57 = icmp eq i8 %52, %16
  br i1 %57, label %114, label %58

58:                                               ; preds = %51
  %59 = icmp eq i8 %52, -2
  %60 = select i1 %59, %"struct.WTF::KeyValuePair"* %53, %"struct.WTF::KeyValuePair"* %54
  %61 = icmp eq i64 %56, 0
  %62 = select i1 %61, i64 %50, i64 %56
  %63 = add i64 %62, %55
  %64 = and i64 %63, %15
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %64
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 0, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp eq i8 %67, -1
  br i1 %68, label %69, label %51

69:                                               ; preds = %58
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %60, null
  br i1 %70, label %82, label %71

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %60, i64 0, i32 0
  store i8 -1, i8* %72, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 8
  %74 = bitcast i8* %73 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %74, align 8
  %75 = getelementptr inbounds %"class.WTF::HashTable.3", %"class.WTF::HashTable.3"* %0, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 2147483647
  %78 = and i32 %77, 2147483647
  %79 = and i32 %76, -2147483648
  %80 = or i32 %78, %79
  store i32 %80, i32* %75, align 8
  %81 = load i8, i8* %1, align 1
  br label %82

82:                                               ; preds = %10, %69, %71
  %83 = phi i8 [ %81, %71 ], [ %16, %69 ], [ %16, %10 ]
  %84 = phi %"struct.WTF::KeyValuePair"* [ %60, %71 ], [ %65, %69 ], [ %33, %10 ]
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %84, i64 0, i32 0
  store i8 %83, i8* %85, align 8
  %86 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 0, i32 0
  %87 = bitcast %class.scoped_refptr* %2 to i64*
  %88 = load i64, i64* %87, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %86, align 8
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %84, i64 0, i32 1
  %90 = bitcast %class.scoped_refptr* %89 to i64*
  %91 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %89, i64 0, i32 0
  %92 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %91, align 8
  store i64 %88, i64* %90, align 8
  %93 = icmp eq %"class.base::SingleThreadTaskRunner"* %92, null
  br i1 %93, label %102, label %94

94:                                               ; preds = %82
  %95 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %92, i64 0, i32 0, i32 0, i32 1
  %96 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw sub i32* %96, i32 1 acq_rel
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %102

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %95, i64 -2
  %101 = bitcast %"class.base::RefCountedThreadSafe"* %100 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %101) #5
  br label %102

102:                                              ; preds = %82, %94, %99
  %103 = getelementptr inbounds %"class.WTF::HashTable.3", %"class.WTF::HashTable.3"* %0, i64 0, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = add i32 %104, 1
  store i32 %105, i32* %103, align 4
  %106 = getelementptr inbounds %"class.WTF::HashTable.3", %"class.WTF::HashTable.3"* %0, i64 0, i32 3
  %107 = load i32, i32* %106, align 8
  %108 = add i32 %107, %105
  %109 = shl i32 %108, 1
  %110 = load i32, i32* %12, align 8
  %111 = icmp ult i32 %109, %110
  br i1 %111, label %114, label %112

112:                                              ; preds = %102
  %113 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink8TaskTypeENS_12KeyValuePairIS2_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS1_14TaskTypeTraitsENS_10HashTraitsIS7_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.3"* %0, %"struct.WTF::KeyValuePair"* %84)
  br label %114

114:                                              ; preds = %51, %102, %112
  %115 = phi i8 [ 1, %102 ], [ 1, %112 ], [ 0, %51 ]
  %116 = phi %"struct.WTF::KeyValuePair"* [ %84, %102 ], [ %113, %112 ], [ %53, %51 ]
  %117 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %116, 0
  %118 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %117, i8 %115, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %118
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink8TaskTypeENS_12KeyValuePairIS2_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS1_14TaskTypeTraitsENS_10HashTraitsIS7_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.3"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.3", %"class.WTF::HashTable.3"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3", %"class.WTF::HashTable.3"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #5
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #5
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %22, i8* %23) #5
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #5
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #5
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #5
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink8TaskTypeE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEEPKcv, i64 0, i64 0)) #5
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45, i32 0
  store i8 -1, i8* %47, align 8
  %48 = getelementptr inbounds i8, i8* %47, i64 8
  %49 = bitcast i8* %48 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50, i32 0
  store i8 -1, i8* %51, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 8
  %53 = bitcast i8* %52 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54, i32 0
  store i8 -1, i8* %55, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = bitcast i8* %56 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58, i32 0
  store i8 -1, i8* %59, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 8
  %61 = bitcast i8* %60 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69, i32 0
  store i8 -1, i8* %71, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 8
  %73 = bitcast i8* %72 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !4

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink8TaskTypeENS_12KeyValuePairIS2_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS1_14TaskTypeTraitsENS_10HashTraitsIS7_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.3"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #5
  ret %"struct.WTF::KeyValuePair"* %78
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink8TaskTypeENS_12KeyValuePairIS2_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS1_14TaskTypeTraitsENS_10HashTraitsIS7_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.3"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.3", %"class.WTF::HashTable.3"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.3", %"class.WTF::HashTable.3"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.3"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  br label %57

18:                                               ; preds = %160
  %19 = bitcast %"class.WTF::HashTable.3"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %161, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %164, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %162, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %53, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %51, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %48, %29
  %32 = phi i64 [ 0, %29 ], [ %49, %48 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, -2
  br i1 %35, label %48, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 1, i32 0
  %38 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %37, align 8
  %39 = icmp eq %"class.base::SingleThreadTaskRunner"* %38, null
  br i1 %39, label %48, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %38, i64 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw sub i32* %42, i32 1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %48

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %41, i64 -2
  %47 = bitcast %"class.base::RefCountedThreadSafe"* %46 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %47) #5
  br label %48

48:                                               ; preds = %45, %40, %36, %31
  %49 = add nuw nsw i64 %32, 1
  %50 = icmp eq i64 %49, %30
  br i1 %50, label %51, label %31

51:                                               ; preds = %48, %27
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %52) #5
  br label %53

53:                                               ; preds = %20, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.3", %"class.WTF::HashTable.3"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  ret %"struct.WTF::KeyValuePair"* %23

57:                                               ; preds = %13, %160
  %58 = phi i64 [ %17, %13 ], [ %161, %160 ]
  %59 = phi i32 [ %7, %13 ], [ %162, %160 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %163, %160 ]
  %61 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %164, %160 ]
  %62 = phi i32 [ 0, %13 ], [ %165, %160 ]
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %60, i64 %63, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp ugt i8 %65, -3
  br i1 %66, label %160, label %67

67:                                               ; preds = %57
  %68 = zext i8 %65 to i32
  %69 = shl nuw nsw i32 %68, 15
  %70 = xor i32 %69, -1
  %71 = add nsw i32 %70, %68
  %72 = lshr i32 %71, 10
  %73 = xor i32 %72, %71
  %74 = mul nsw i32 %73, 9
  %75 = lshr i32 %74, 6
  %76 = xor i32 %75, %74
  %77 = shl i32 %76, 11
  %78 = xor i32 %77, -1
  %79 = add i32 %76, %78
  %80 = lshr i32 %79, 16
  %81 = xor i32 %80, %79
  %82 = and i32 %81, %14
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %83
  %85 = ptrtoint %"struct.WTF::KeyValuePair"* %84 to i64
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %84, i64 0, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, -1
  br i1 %88, label %106, label %89

89:                                               ; preds = %67
  %90 = xor i32 %81, -1
  %91 = lshr i32 %79, 23
  %92 = add i32 %91, %90
  %93 = shl i32 %92, 12
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 7
  %96 = xor i32 %95, %94
  %97 = shl i32 %96, 2
  %98 = xor i32 %97, %96
  %99 = lshr i32 %98, 20
  %100 = xor i32 %99, %98
  %101 = or i32 %100, 1
  %102 = zext i32 %101 to i64
  br label %112

103:                                              ; preds = %119
  %104 = ptrtoint %"struct.WTF::KeyValuePair"* %126 to i64
  %105 = inttoptr i64 %121 to %"struct.WTF::KeyValuePair"*
  br label %106

106:                                              ; preds = %103, %67
  %107 = phi i64 [ %104, %103 ], [ %85, %67 ]
  %108 = phi %"struct.WTF::KeyValuePair"* [ %105, %103 ], [ null, %67 ]
  %109 = icmp eq %"struct.WTF::KeyValuePair"* %108, null
  %110 = ptrtoint %"struct.WTF::KeyValuePair"* %108 to i64
  %111 = select i1 %109, i64 %107, i64 %110
  br label %131

112:                                              ; preds = %119, %89
  %113 = phi i64 [ 0, %89 ], [ %121, %119 ]
  %114 = phi i8 [ %87, %89 ], [ %129, %119 ]
  %115 = phi i64 [ %85, %89 ], [ %127, %119 ]
  %116 = phi i64 [ %83, %89 ], [ %125, %119 ]
  %117 = phi i64 [ 0, %89 ], [ %123, %119 ]
  %118 = icmp eq i8 %114, %65
  br i1 %118, label %131, label %119

119:                                              ; preds = %112
  %120 = icmp eq i8 %114, -2
  %121 = select i1 %120, i64 %115, i64 %113
  %122 = icmp eq i64 %117, 0
  %123 = select i1 %122, i64 %102, i64 %117
  %124 = add i64 %123, %116
  %125 = and i64 %124, %15
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %125
  %127 = ptrtoint %"struct.WTF::KeyValuePair"* %126 to i64
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %126, i64 0, i32 0
  %129 = load i8, i8* %128, align 1
  %130 = icmp eq i8 %129, -1
  br i1 %130, label %103, label %112

131:                                              ; preds = %112, %106
  %132 = phi i64 [ %111, %106 ], [ %115, %112 ]
  %133 = inttoptr i64 %132 to %"struct.WTF::KeyValuePair"*
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %133, i64 0, i32 1, i32 0
  %135 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %134, align 8
  %136 = icmp eq %"class.base::SingleThreadTaskRunner"* %135, null
  br i1 %136, label %145, label %137

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %135, i64 0, i32 0, i32 0, i32 1
  %139 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = atomicrmw sub i32* %139, i32 1 acq_rel
  %141 = icmp eq i32 %140, 1
  br i1 %141, label %142, label %145

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %138, i64 -2
  %144 = bitcast %"class.base::RefCountedThreadSafe"* %143 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %144) #5
  br label %145

145:                                              ; preds = %131, %137, %142
  %146 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %133, i64 0, i32 0
  %147 = load i8, i8* %64, align 8
  store i8 %147, i8* %146, align 8
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %133, i64 0, i32 1
  %149 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %60, i64 %63, i32 1
  %150 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %149, i64 0, i32 0
  %151 = bitcast %class.scoped_refptr* %149 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %class.scoped_refptr* %148 to i64*
  store i64 %152, i64* %153, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %150, align 8
  %154 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %154, i64 %63
  %156 = icmp eq %"struct.WTF::KeyValuePair"* %155, %3
  %157 = select i1 %156, %"struct.WTF::KeyValuePair"* %133, %"struct.WTF::KeyValuePair"* %61
  %158 = load i32, i32* %6, align 8
  %159 = ptrtoint %"struct.WTF::KeyValuePair"* %154 to i64
  br label %160

160:                                              ; preds = %57, %145
  %161 = phi i64 [ %58, %57 ], [ %159, %145 ]
  %162 = phi i32 [ %59, %57 ], [ %158, %145 ]
  %163 = phi %"struct.WTF::KeyValuePair"* [ %60, %57 ], [ %154, %145 ]
  %164 = phi %"struct.WTF::KeyValuePair"* [ %61, %57 ], [ %157, %145 ]
  %165 = add i32 %62, 1
  %166 = icmp eq i32 %165, %162
  br i1 %166, label %18, label %57
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
