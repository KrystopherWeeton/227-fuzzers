; ModuleID = '../../third_party/ffmpeg/libavcodec/avpacket.c'
source_filename = "../../third_party/ffmpeg/libavcodec/avpacket.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVDictionary = type opaque
%struct.AVDictionaryEntry = type { i8*, i8* }
%struct.AVPacketList = type { %struct.AVPacket, %struct.AVPacketList* }

@.str = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"(unsigned)pkt->size <= 2147483647 - 64\00", align 1
@.str.2 = private unnamed_addr constant [47 x i8] c"../../third_party/ffmpeg/libavcodec/avpacket.c\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"Palette\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"New Extradata\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"Param Change\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"H263 MB Info\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"Replay Gain\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"Display Matrix\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"Stereo 3D\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"Audio Service Type\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"Quality stats\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"Fallback track\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"CPB properties\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"Skip Samples\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"JP Dual Mono\00", align 1
@.str.16 = private unnamed_addr constant [17 x i8] c"Strings Metadata\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"Subtitle Position\00", align 1
@.str.18 = private unnamed_addr constant [25 x i8] c"Matroska BlockAdditional\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"WebVTT ID\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"WebVTT Settings\00", align 1
@.str.21 = private unnamed_addr constant [16 x i8] c"Metadata Update\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"MPEGTS Stream ID\00", align 1
@.str.23 = private unnamed_addr constant [27 x i8] c"Mastering display metadata\00", align 1
@.str.24 = private unnamed_addr constant [29 x i8] c"Content light level metadata\00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"Spherical Mapping\00", align 1
@.str.26 = private unnamed_addr constant [20 x i8] c"A53 Closed Captions\00", align 1
@.str.27 = private unnamed_addr constant [31 x i8] c"Encryption initialization data\00", align 1
@.str.28 = private unnamed_addr constant [16 x i8] c"Encryption info\00", align 1
@.str.29 = private unnamed_addr constant [31 x i8] c"Active Format Description data\00", align 1
@.str.30 = private unnamed_addr constant [24 x i8] c"Producer Reference Time\00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c"ICC Profile\00", align 1
@.str.32 = private unnamed_addr constant [26 x i8] c"DOVI configuration record\00", align 1
@.str.33 = private unnamed_addr constant [28 x i8] c"SMPTE ST 12-1:2014 timecode\00", align 1
@.str.34 = private unnamed_addr constant [25 x i8] c"p-pkt->data == pkt->size\00", align 1
@.str.35 = private unnamed_addr constant [46 x i8] c"size<=2147483647 - 5 && p - pkt->data >= size\00", align 1
@.str.36 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@switch.table.av_packet_side_data_name = private unnamed_addr constant [31 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0)], align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @av_init_packet(%struct.AVPacket* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 1
  %3 = bitcast i64* %2 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %3, align 8
  %4 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 9
  %5 = bitcast i64* %4 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %5, align 8
  %6 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 11
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 6
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 5
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 0
  store %struct.AVBufferRef* null, %struct.AVBufferRef** %9, align 8
  %10 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 7
  store %struct.AVPacketSideData* null, %struct.AVPacketSideData** %10, align 8
  %11 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 8
  store i32 0, i32* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.AVPacket* @av_packet_alloc() local_unnamed_addr #1 {
  %1 = tail call noalias i8* @av_mallocz(i64 88) #10
  %2 = bitcast i8* %1 to %struct.AVPacket*
  %3 = icmp eq i8* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %0
  %5 = getelementptr inbounds i8, i8* %1, i64 8
  %6 = bitcast i8* %5 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %6, align 8
  %7 = getelementptr inbounds i8, i8* %1, i64 64
  %8 = bitcast i8* %7 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %8, align 8
  %9 = getelementptr inbounds i8, i8* %1, i64 80
  %10 = bitcast i8* %9 to i64*
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %1, i64 40
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %1, i64 36
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 4
  %15 = bitcast i8* %1 to %struct.AVBufferRef**
  store %struct.AVBufferRef* null, %struct.AVBufferRef** %15, align 8
  %16 = getelementptr inbounds i8, i8* %1, i64 48
  %17 = bitcast i8* %16 to %struct.AVPacketSideData**
  store %struct.AVPacketSideData* null, %struct.AVPacketSideData** %17, align 8
  %18 = getelementptr inbounds i8, i8* %1, i64 56
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19, align 8
  br label %20

20:                                               ; preds = %0, %4
  ret %struct.AVPacket* %2
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare noalias i8* @av_mallocz(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @av_packet_free(%struct.AVPacket**) local_unnamed_addr #1 {
  %2 = icmp eq %struct.AVPacket** %0, null
  br i1 %2, label %31, label %3

3:                                                ; preds = %1
  %4 = load %struct.AVPacket*, %struct.AVPacket** %0, align 8
  %5 = icmp eq %struct.AVPacket* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %4, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  %10 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %4, i64 0, i32 7
  br i1 %9, label %11, label %20

11:                                               ; preds = %6, %11
  %12 = phi i64 [ %16, %11 ], [ 0, %6 ]
  %13 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %10, align 8
  %14 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %13, i64 %12, i32 0
  %15 = bitcast i8** %14 to i8*
  tail call void @av_freep(i8* %15) #10
  %16 = add nuw nsw i64 %12, 1
  %17 = load i32, i32* %7, align 8
  %18 = sext i32 %17 to i64
  %19 = icmp slt i64 %16, %18
  br i1 %19, label %11, label %20

20:                                               ; preds = %11, %6
  %21 = bitcast %struct.AVPacketSideData** %10 to i8*
  tail call void @av_freep(i8* %21) #10
  store i32 0, i32* %7, align 8
  %22 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %4, i64 0, i32 0
  tail call void @av_buffer_unref(%struct.AVBufferRef** %22) #10
  %23 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %4, i64 0, i32 1
  %24 = bitcast i64* %23 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %24, align 8
  %25 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %4, i64 0, i32 9
  %26 = bitcast i64* %25 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %26, align 8
  %27 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %4, i64 0, i32 11
  store i64 0, i64* %27, align 8
  store %struct.AVBufferRef* null, %struct.AVBufferRef** %22, align 8
  store %struct.AVPacketSideData* null, %struct.AVPacketSideData** %10, align 8
  store i32 0, i32* %7, align 8
  %28 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %4, i64 0, i32 3
  %29 = bitcast i8** %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 20, i1 false) #10
  %30 = bitcast %struct.AVPacket** %0 to i8*
  tail call void @av_freep(i8* nonnull %30) #10
  br label %31

31:                                               ; preds = %3, %1, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_packet_unref(%struct.AVPacket*) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  %5 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 7
  br i1 %4, label %6, label %15

6:                                                ; preds = %1, %6
  %7 = phi i64 [ %11, %6 ], [ 0, %1 ]
  %8 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %5, align 8
  %9 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %8, i64 %7, i32 0
  %10 = bitcast i8** %9 to i8*
  tail call void @av_freep(i8* %10) #10
  %11 = add nuw nsw i64 %7, 1
  %12 = load i32, i32* %2, align 8
  %13 = sext i32 %12 to i64
  %14 = icmp slt i64 %11, %13
  br i1 %14, label %6, label %15

15:                                               ; preds = %6, %1
  %16 = bitcast %struct.AVPacketSideData** %5 to i8*
  tail call void @av_freep(i8* %16) #10
  store i32 0, i32* %2, align 8
  %17 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 0
  tail call void @av_buffer_unref(%struct.AVBufferRef** %17) #10
  %18 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 1
  %19 = bitcast i64* %18 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %19, align 8
  %20 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 9
  %21 = bitcast i64* %20 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %21, align 8
  %22 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 11
  store i64 0, i64* %22, align 8
  store %struct.AVBufferRef* null, %struct.AVBufferRef** %17, align 8
  store %struct.AVPacketSideData* null, %struct.AVPacketSideData** %5, align 8
  store i32 0, i32* %2, align 8
  %23 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 3
  %24 = bitcast i8** %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 20, i1 false)
  ret void
}

declare void @av_freep(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_new_packet(%struct.AVPacket* nocapture, i32) local_unnamed_addr #1 {
  %3 = alloca %struct.AVBufferRef*, align 8
  %4 = bitcast %struct.AVBufferRef** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  store %struct.AVBufferRef* null, %struct.AVBufferRef** %3, align 8
  %5 = icmp ugt i32 %1, 2147483582
  br i1 %5, label %32, label %6

6:                                                ; preds = %2
  %7 = add nuw nsw i32 %1, 64
  %8 = call i32 @av_buffer_realloc(%struct.AVBufferRef** nonnull %3, i32 %7) #10
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %32, label %10

10:                                               ; preds = %6
  %11 = load %struct.AVBufferRef*, %struct.AVBufferRef** %3, align 8
  %12 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %11, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = sext i32 %1 to i64
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  call void @llvm.memset.p0i8.i64(i8* align 1 %15, i8 0, i64 64, i1 false) #10
  %16 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 1
  %17 = bitcast i64* %16 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %17, align 8
  %18 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 9
  %19 = bitcast i64* %18 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %19, align 8
  %20 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 11
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 6
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 5
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 7
  store %struct.AVPacketSideData* null, %struct.AVPacketSideData** %23, align 8
  %24 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 8
  store i32 0, i32* %24, align 8
  %25 = ptrtoint %struct.AVBufferRef* %11 to i64
  %26 = bitcast %struct.AVPacket* %0 to i64*
  store i64 %25, i64* %26, align 8
  %27 = bitcast i8** %12 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 3
  %30 = bitcast i8** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 4
  store i32 %1, i32* %31, align 8
  br label %32

32:                                               ; preds = %6, %2, %10
  %33 = phi i32 [ 0, %10 ], [ %8, %6 ], [ -22, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_shrink_packet(%struct.AVPacket* nocapture, i32) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, %1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 8
  %7 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds i8, i8* %8, i64 %9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %10, i8 0, i64 64, i1 false)
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_grow_packet(%struct.AVPacket*, i32) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 2147483584
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 114) #10
  tail call void @abort() #11
  unreachable

7:                                                ; preds = %2
  %8 = sub nuw nsw i32 2147483583, %4
  %9 = icmp ult i32 %8, %1
  br i1 %9, label %81, label %10

10:                                               ; preds = %7
  %11 = add nsw i32 %4, %1
  %12 = add nsw i32 %11, 64
  %13 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 0
  %14 = load %struct.AVBufferRef*, %struct.AVBufferRef** %13, align 8
  %15 = icmp eq %struct.AVBufferRef* %14, null
  br i1 %15, label %54, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  %20 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %14, i64 0, i32 1
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  br i1 %19, label %23, label %25

23:                                               ; preds = %16
  %24 = bitcast i8** %17 to i64*
  store i64 %22, i64* %24, align 8
  br label %31

25:                                               ; preds = %16
  %26 = ptrtoint i8* %18 to i64
  %27 = sub i64 %26, %22
  %28 = sub i32 2147483583, %11
  %29 = sext i32 %28 to i64
  %30 = icmp ugt i64 %27, %29
  br i1 %30, label %81, label %31

31:                                               ; preds = %25, %23
  %32 = phi i64 [ 0, %23 ], [ %27, %25 ]
  %33 = sext i32 %12 to i64
  %34 = add i64 %32, %33
  %35 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %14, i64 0, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = sext i32 %36 to i64
  %38 = icmp ugt i64 %34, %37
  br i1 %38, label %44, label %39

39:                                               ; preds = %31
  %40 = tail call i32 @av_buffer_is_writable(%struct.AVBufferRef* nonnull %14) #10
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %39
  %43 = load i8*, i8** %17, align 8
  br label %75

44:                                               ; preds = %39, %31
  %45 = trunc i64 %34 to i32
  %46 = tail call i32 @av_buffer_realloc(%struct.AVBufferRef** %13, i32 %45) #10
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %44
  %49 = load %struct.AVBufferRef*, %struct.AVBufferRef** %13, align 8
  %50 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %49, i64 0, i32 1
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %32
  store i8* %52, i8** %17, align 8
  br label %75

53:                                               ; preds = %44
  store i8* %18, i8** %17, align 8
  br label %81

54:                                               ; preds = %10
  %55 = tail call %struct.AVBufferRef* @av_buffer_alloc(i32 %12) #10
  store %struct.AVBufferRef* %55, %struct.AVBufferRef** %13, align 8
  %56 = icmp eq %struct.AVBufferRef* %55, null
  br i1 %56, label %81, label %57

57:                                               ; preds = %54
  %58 = load i32, i32* %3, align 8
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %57
  %61 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %55, i64 0, i32 1
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 3
  %64 = load i8*, i8** %63, align 8
  %65 = sext i32 %58 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %62, i8* align 1 %64, i64 %65, i1 false)
  %66 = load %struct.AVBufferRef*, %struct.AVBufferRef** %13, align 8
  br label %67

67:                                               ; preds = %60, %57
  %68 = phi %struct.AVBufferRef* [ %66, %60 ], [ %55, %57 ]
  %69 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %68, i64 0, i32 1
  %70 = bitcast i8** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 3
  %73 = bitcast i8** %72 to i64*
  store i64 %71, i64* %73, align 8
  %74 = inttoptr i64 %71 to i8*
  br label %75

75:                                               ; preds = %42, %48, %67
  %76 = phi i8* [ %43, %42 ], [ %52, %48 ], [ %74, %67 ]
  %77 = load i32, i32* %3, align 8
  %78 = add nsw i32 %77, %1
  store i32 %78, i32* %3, align 8
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %76, i64 %79
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %80, i8 0, i64 64, i1 false)
  br label %81

81:                                               ; preds = %25, %53, %54, %7, %75
  %82 = phi i32 [ 0, %75 ], [ -12, %7 ], [ -12, %54 ], [ %46, %53 ], [ -12, %25 ]
  ret i32 %82
}

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

declare i32 @av_buffer_is_writable(%struct.AVBufferRef*) local_unnamed_addr #3

declare i32 @av_buffer_realloc(%struct.AVBufferRef**, i32) local_unnamed_addr #3

declare %struct.AVBufferRef* @av_buffer_alloc(i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_packet_from_data(%struct.AVPacket* nocapture, i8*, i32) local_unnamed_addr #1 {
  %4 = icmp sgt i32 %2, 2147483582
  br i1 %4, label %13, label %5

5:                                                ; preds = %3
  %6 = add nsw i32 %2, 64
  %7 = tail call %struct.AVBufferRef* @av_buffer_create(i8* %1, i32 %6, void (i8*, i8*)* nonnull @av_buffer_default_free, i8* null, i32 0) #10
  %8 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 0
  store %struct.AVBufferRef* %7, %struct.AVBufferRef** %8, align 8
  %9 = icmp eq %struct.AVBufferRef* %7, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 3
  store i8* %1, i8** %11, align 8
  %12 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 4
  store i32 %2, i32* %12, align 8
  br label %13

13:                                               ; preds = %5, %3, %10
  %14 = phi i32 [ 0, %10 ], [ -22, %3 ], [ -12, %5 ]
  ret i32 %14
}

declare %struct.AVBufferRef* @av_buffer_create(i8*, i32, void (i8*, i8*)*, i8*, i32) local_unnamed_addr #3

declare void @av_buffer_default_free(i8*, i8*) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_copy_packet_side_data(%struct.AVPacket*, %struct.AVPacket* readonly) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 8
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %64, label %6

6:                                                ; preds = %2
  %7 = sext i32 %4 to i64
  %8 = shl nsw i64 %7, 4
  %9 = tail call noalias i8* @av_malloc(i64 %8) #10
  %10 = icmp eq i8* %9, null
  br i1 %10, label %67, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 7
  %13 = bitcast %struct.AVPacketSideData** %12 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = load i32, i32* %3, align 8
  %16 = sext i32 %15 to i64
  %17 = shl nsw i64 %16, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %9, i8* align 8 %14, i64 %17, i1 false)
  %18 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 7
  %19 = bitcast %struct.AVPacketSideData** %18 to i8**
  store i8* %9, i8** %19, align 8
  %20 = icmp eq %struct.AVPacket* %1, %0
  %21 = load i32, i32* %3, align 8
  br i1 %20, label %25, label %22

22:                                               ; preds = %11
  %23 = sext i32 %21 to i64
  %24 = shl nsw i64 %23, 4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 %24, i1 false)
  br label %25

25:                                               ; preds = %11, %22
  %26 = icmp sgt i32 %21, 0
  br i1 %26, label %27, label %64

27:                                               ; preds = %25, %38
  %28 = phi i64 [ %60, %38 ], [ 0, %25 ]
  %29 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %12, align 8
  %30 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %29, i64 %28, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp ugt i32 %31, -65
  br i1 %32, label %67, label %33

33:                                               ; preds = %27
  %34 = add nuw i32 %31, 64
  %35 = sext i32 %34 to i64
  %36 = tail call noalias i8* @av_malloc(i64 %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %67, label %38

38:                                               ; preds = %33
  %39 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %12, align 8
  %40 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %39, i64 %28, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %39, i64 %28, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = sext i32 %43 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* align 1 %41, i64 %44, i1 false)
  %45 = load i32, i32* %42, align 8
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %36, i64 %46
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %47, i8 0, i64 64, i1 false)
  %48 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %18, align 8
  %49 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %48, i64 %28, i32 0
  store i8* %36, i8** %49, align 8
  %50 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %12, align 8
  %51 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %50, i64 %28, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %18, align 8
  %54 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %53, i64 %28, i32 1
  store i32 %52, i32* %54, align 8
  %55 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %12, align 8
  %56 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %55, i64 %28, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %18, align 8
  %59 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %58, i64 %28, i32 2
  store i32 %57, i32* %59, align 4
  %60 = add nuw nsw i64 %28, 1
  %61 = load i32, i32* %3, align 8
  %62 = sext i32 %61 to i64
  %63 = icmp slt i64 %60, %62
  br i1 %63, label %27, label %64

64:                                               ; preds = %38, %25, %2
  %65 = phi i32 [ %21, %25 ], [ 0, %2 ], [ %61, %38 ]
  %66 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 8
  store i32 %65, i32* %66, align 8
  br label %91

67:                                               ; preds = %33, %27, %6
  %68 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 8
  %69 = load i32, i32* %68, align 8
  %70 = icmp sgt i32 %69, 0
  %71 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 7
  br i1 %70, label %72, label %81

72:                                               ; preds = %67, %72
  %73 = phi i64 [ %77, %72 ], [ 0, %67 ]
  %74 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %71, align 8
  %75 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %74, i64 %73, i32 0
  %76 = bitcast i8** %75 to i8*
  tail call void @av_freep(i8* %76) #10
  %77 = add nuw nsw i64 %73, 1
  %78 = load i32, i32* %68, align 8
  %79 = sext i32 %78 to i64
  %80 = icmp slt i64 %77, %79
  br i1 %80, label %72, label %81

81:                                               ; preds = %72, %67
  %82 = bitcast %struct.AVPacketSideData** %71 to i8*
  tail call void @av_freep(i8* %82) #10
  store i32 0, i32* %68, align 8
  %83 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 0
  tail call void @av_buffer_unref(%struct.AVBufferRef** %83) #10
  %84 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 1
  %85 = bitcast i64* %84 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %85, align 8
  %86 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 9
  %87 = bitcast i64* %86 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %87, align 8
  %88 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 11
  store i64 0, i64* %88, align 8
  store %struct.AVBufferRef* null, %struct.AVBufferRef** %83, align 8
  store %struct.AVPacketSideData* null, %struct.AVPacketSideData** %71, align 8
  store i32 0, i32* %68, align 8
  %89 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 3
  %90 = bitcast i8** %89 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 20, i1 false) #10
  br label %91

91:                                               ; preds = %81, %64
  %92 = phi i32 [ 0, %64 ], [ -12, %81 ]
  ret i32 %92
}

declare noalias i8* @av_malloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_dup_packet(%struct.AVPacket*) local_unnamed_addr #1 {
  %2 = alloca %struct.AVPacket, align 8
  %3 = bitcast %struct.AVPacket* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %3) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 88, i1 false)
  %4 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 0
  %5 = load %struct.AVBufferRef*, %struct.AVBufferRef** %4, align 8
  %6 = icmp eq %struct.AVBufferRef* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = bitcast %struct.AVPacket* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* align 8 %12, i64 88, i1 false)
  %13 = call fastcc i32 @copy_packet_data(%struct.AVPacket* %0, %struct.AVPacket* nonnull %2, i32 1)
  br label %14

14:                                               ; preds = %1, %7, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %7 ], [ 0, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %3) #10
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @copy_packet_data(%struct.AVPacket*, %struct.AVPacket* readonly, i32) unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 3
  store i8* null, i8** %4, align 8
  %5 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 7
  store %struct.AVPacketSideData* null, %struct.AVPacketSideData** %5, align 8
  %6 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 8
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 0
  %8 = load %struct.AVBufferRef*, %struct.AVBufferRef** %7, align 8
  %9 = icmp eq %struct.AVBufferRef* %8, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 0
  %12 = load %struct.AVBufferRef*, %struct.AVBufferRef** %11, align 8
  %13 = tail call %struct.AVBufferRef* @av_buffer_ref(%struct.AVBufferRef* %12) #10
  %14 = icmp eq %struct.AVBufferRef* %13, null
  br i1 %14, label %80, label %15

15:                                               ; preds = %10
  store %struct.AVBufferRef* %13, %struct.AVBufferRef** %7, align 8
  %16 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %13, i64 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast i8** %4 to i64*
  store i64 %18, i64* %19, align 8
  br label %41

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = icmp ugt i32 %22, -65
  br i1 %23, label %60, label %24

24:                                               ; preds = %20
  %25 = add nuw i32 %22, 64
  %26 = tail call i32 @av_buffer_realloc(%struct.AVBufferRef** %7, i32 %25) #10
  %27 = load %struct.AVBufferRef*, %struct.AVBufferRef** %7, align 8
  %28 = icmp eq %struct.AVBufferRef* %27, null
  br i1 %28, label %60, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %27, i64 0, i32 1
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %60, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 3
  %35 = load i8*, i8** %34, align 8
  %36 = load i32, i32* %21, align 8
  %37 = sext i32 %36 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %31, i8* align 1 %35, i64 %37, i1 false)
  %38 = load i32, i32* %21, align 8
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %31, i64 %39
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %40, i8 0, i64 64, i1 false)
  store i8* %31, i8** %4, align 8
  br label %41

41:                                               ; preds = %33, %15
  %42 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 8
  %43 = load i32, i32* %42, align 8
  %44 = icmp ne i32 %43, 0
  %45 = icmp ne i32 %2, 0
  %46 = and i1 %45, %44
  br i1 %46, label %47, label %54

47:                                               ; preds = %41
  %48 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 7
  %49 = bitcast %struct.AVPacketSideData** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %struct.AVPacketSideData** %5 to i64*
  store i64 %50, i64* %51, align 8
  %52 = load i32, i32* %42, align 8
  store i32 %52, i32* %6, align 8
  %53 = load i32, i32* %42, align 8
  br label %54

54:                                               ; preds = %47, %41
  %55 = phi i32 [ %53, %47 ], [ %43, %41 ]
  %56 = icmp eq i32 %55, 0
  %57 = or i1 %45, %56
  br i1 %57, label %80, label %58

58:                                               ; preds = %54
  %59 = tail call i32 @av_copy_packet_side_data(%struct.AVPacket* %0, %struct.AVPacket* %1)
  br label %80

60:                                               ; preds = %24, %20, %29
  %61 = load i32, i32* %6, align 8
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %72

63:                                               ; preds = %60, %63
  %64 = phi i64 [ %68, %63 ], [ 0, %60 ]
  %65 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %5, align 8
  %66 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %65, i64 %64, i32 0
  %67 = bitcast i8** %66 to i8*
  tail call void @av_freep(i8* %67) #10
  %68 = add nuw nsw i64 %64, 1
  %69 = load i32, i32* %6, align 8
  %70 = sext i32 %69 to i64
  %71 = icmp slt i64 %68, %70
  br i1 %71, label %63, label %72

72:                                               ; preds = %63, %60
  %73 = bitcast %struct.AVPacketSideData** %5 to i8*
  tail call void @av_freep(i8* %73) #10
  store i32 0, i32* %6, align 8
  tail call void @av_buffer_unref(%struct.AVBufferRef** %7) #10
  %74 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 1
  %75 = bitcast i64* %74 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %75, align 8
  %76 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 9
  %77 = bitcast i64* %76 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %77, align 8
  %78 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 11
  store i64 0, i64* %78, align 8
  store %struct.AVBufferRef* null, %struct.AVBufferRef** %7, align 8
  store %struct.AVPacketSideData* null, %struct.AVPacketSideData** %5, align 8
  store i32 0, i32* %6, align 8
  %79 = bitcast i8** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 20, i1 false) #10
  br label %80

80:                                               ; preds = %54, %10, %72, %58
  %81 = phi i32 [ %59, %58 ], [ -12, %72 ], [ -12, %10 ], [ 0, %54 ]
  ret i32 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_copy_packet(%struct.AVPacket*, %struct.AVPacket* readonly) local_unnamed_addr #1 {
  %3 = bitcast %struct.AVPacket* %0 to i8*
  %4 = bitcast %struct.AVPacket* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 88, i1 false)
  %5 = tail call fastcc i32 @copy_packet_data(%struct.AVPacket* %0, %struct.AVPacket* %1, i32 0)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_packet_free_side_data(%struct.AVPacket*) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  %5 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 7
  br i1 %4, label %6, label %15

6:                                                ; preds = %1, %6
  %7 = phi i64 [ %11, %6 ], [ 0, %1 ]
  %8 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %5, align 8
  %9 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %8, i64 %7, i32 0
  %10 = bitcast i8** %9 to i8*
  tail call void @av_freep(i8* %10) #10
  %11 = add nuw nsw i64 %7, 1
  %12 = load i32, i32* %2, align 8
  %13 = sext i32 %12 to i64
  %14 = icmp slt i64 %11, %13
  br i1 %14, label %6, label %15

15:                                               ; preds = %6, %1
  %16 = bitcast %struct.AVPacketSideData** %5 to i8*
  tail call void @av_freep(i8* %16) #10
  store i32 0, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_free_packet(%struct.AVPacket*) local_unnamed_addr #1 {
  %2 = icmp eq %struct.AVPacket* %0, null
  br i1 %2, label %26, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 0
  %5 = load %struct.AVBufferRef*, %struct.AVBufferRef** %4, align 8
  %6 = icmp eq %struct.AVBufferRef* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @av_buffer_unref(%struct.AVBufferRef** %4) #10
  br label %8

8:                                                ; preds = %3, %7
  %9 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 3
  store i8* null, i8** %9, align 8
  %10 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 4
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 8
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 0
  %14 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 7
  br i1 %13, label %15, label %24

15:                                               ; preds = %8, %15
  %16 = phi i64 [ %20, %15 ], [ 0, %8 ]
  %17 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %14, align 8
  %18 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %17, i64 %16, i32 0
  %19 = bitcast i8** %18 to i8*
  tail call void @av_freep(i8* %19) #10
  %20 = add nuw nsw i64 %16, 1
  %21 = load i32, i32* %11, align 8
  %22 = sext i32 %21 to i64
  %23 = icmp slt i64 %20, %22
  br i1 %23, label %15, label %24

24:                                               ; preds = %15, %8
  %25 = bitcast %struct.AVPacketSideData** %14 to i8*
  tail call void @av_freep(i8* %25) #10
  store i32 0, i32* %11, align 8
  br label %26

26:                                               ; preds = %1, %24
  ret void
}

declare void @av_buffer_unref(%struct.AVBufferRef**) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_packet_add_side_data(%struct.AVPacket* nocapture, i32, i8*, i64) local_unnamed_addr #1 {
  %5 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 8
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %26

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 7
  %10 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %9, align 8
  %11 = zext i32 %6 to i64
  br label %14

12:                                               ; preds = %14
  %13 = icmp eq i64 %19, %11
  br i1 %13, label %26, label %14

14:                                               ; preds = %12, %8
  %15 = phi i64 [ 0, %8 ], [ %19, %12 ]
  %16 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %10, i64 %15, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, %1
  %19 = add nuw nsw i64 %15, 1
  br i1 %18, label %20, label %12

20:                                               ; preds = %14
  %21 = and i64 %15, 4294967295
  %22 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %10, i64 %21, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @av_free(i8* %23) #10
  store i8* %2, i8** %22, align 8
  %24 = trunc i64 %3 to i32
  %25 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %10, i64 %21, i32 1
  store i32 %24, i32* %25, align 8
  br label %48

26:                                               ; preds = %12, %4
  %27 = add i32 %6, 1
  %28 = icmp ugt i32 %27, 31
  br i1 %28, label %48, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 7
  %31 = bitcast %struct.AVPacketSideData** %30 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = sext i32 %27 to i64
  %34 = shl nsw i64 %33, 4
  %35 = tail call i8* @av_realloc(i8* %32, i64 %34) #10
  %36 = icmp eq i8* %35, null
  br i1 %36, label %48, label %37

37:                                               ; preds = %29
  %38 = bitcast i8* %35 to %struct.AVPacketSideData*
  store i8* %35, i8** %31, align 8
  %39 = sext i32 %6 to i64
  %40 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %38, i64 %39, i32 0
  store i8* %2, i8** %40, align 8
  %41 = trunc i64 %3 to i32
  %42 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %30, align 8
  %43 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %42, i64 %39, i32 1
  store i32 %41, i32* %43, align 8
  %44 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %30, align 8
  %45 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %44, i64 %39, i32 2
  store i32 %1, i32* %45, align 4
  %46 = load i32, i32* %5, align 8
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %5, align 8
  br label %48

48:                                               ; preds = %29, %26, %20, %37
  %49 = phi i32 [ 0, %37 ], [ 0, %20 ], [ -34, %26 ], [ -12, %29 ]
  ret i32 %49
}

declare void @av_free(i8*) local_unnamed_addr #3

declare i8* @av_realloc(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @av_packet_new_side_data(%struct.AVPacket* nocapture, i32, i32) local_unnamed_addr #1 {
  %4 = alloca i8*, align 8
  %5 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %6 = icmp ugt i32 %2, 2147483583
  br i1 %6, label %57, label %7

7:                                                ; preds = %3
  %8 = add nuw nsw i32 %2, 64
  %9 = sext i32 %8 to i64
  %10 = tail call noalias i8* @av_mallocz(i64 %9) #10
  store i8* %10, i8** %4, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %57, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 8
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %33

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 7
  %18 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %17, align 8
  %19 = zext i32 %14 to i64
  br label %22

20:                                               ; preds = %22
  %21 = icmp eq i64 %27, %19
  br i1 %21, label %33, label %22

22:                                               ; preds = %20, %16
  %23 = phi i64 [ 0, %16 ], [ %27, %20 ]
  %24 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %18, i64 %23, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, %1
  %27 = add nuw nsw i64 %23, 1
  br i1 %26, label %28, label %20

28:                                               ; preds = %22
  %29 = and i64 %23, 4294967295
  %30 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %18, i64 %29, i32 0
  %31 = load i8*, i8** %30, align 8
  tail call void @av_free(i8* %31) #10
  store i8* %10, i8** %30, align 8
  %32 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %18, i64 %29, i32 1
  store i32 %2, i32* %32, align 8
  br label %55

33:                                               ; preds = %20, %12
  %34 = add i32 %14, 1
  %35 = icmp ugt i32 %34, 31
  br i1 %35, label %54, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 7
  %38 = bitcast %struct.AVPacketSideData** %37 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = sext i32 %34 to i64
  %41 = shl nsw i64 %40, 4
  %42 = tail call i8* @av_realloc(i8* %39, i64 %41) #10
  %43 = icmp eq i8* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %36
  %45 = bitcast i8* %42 to %struct.AVPacketSideData*
  store i8* %42, i8** %38, align 8
  %46 = sext i32 %14 to i64
  %47 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %45, i64 %46, i32 0
  store i8* %10, i8** %47, align 8
  %48 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %37, align 8
  %49 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %48, i64 %46, i32 1
  store i32 %2, i32* %49, align 8
  %50 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %37, align 8
  %51 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %50, i64 %46, i32 2
  store i32 %1, i32* %51, align 4
  %52 = load i32, i32* %13, align 8
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %13, align 8
  br label %55

54:                                               ; preds = %33, %36
  call void @av_freep(i8* nonnull %5) #10
  br label %57

55:                                               ; preds = %44, %28
  %56 = load i8*, i8** %4, align 8
  br label %57

57:                                               ; preds = %7, %3, %55, %54
  %58 = phi i8* [ null, %54 ], [ %56, %55 ], [ null, %3 ], [ null, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret i8* %58
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @av_packet_get_side_data(%struct.AVPacket* nocapture readonly, i32, i32*) local_unnamed_addr #5 {
  %4 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 8
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %30

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 7
  %9 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %8, align 8
  %10 = sext i32 %5 to i64
  br label %13

11:                                               ; preds = %13
  %12 = icmp slt i64 %18, %10
  br i1 %12, label %13, label %30

13:                                               ; preds = %7, %11
  %14 = phi i64 [ 0, %7 ], [ %18, %11 ]
  %15 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %9, i64 %14, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, %1
  %18 = add nuw nsw i64 %14, 1
  br i1 %17, label %19, label %11

19:                                               ; preds = %13
  %20 = and i64 %14, 4294967295
  %21 = icmp eq i32* %2, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %9, i64 %20, i32 1
  %24 = load i32, i32* %23, align 8
  store i32 %24, i32* %2, align 4
  %25 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %8, align 8
  br label %26

26:                                               ; preds = %19, %22
  %27 = phi %struct.AVPacketSideData* [ %9, %19 ], [ %25, %22 ]
  %28 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %27, i64 %20, i32 0
  %29 = load i8*, i8** %28, align 8
  br label %33

30:                                               ; preds = %11, %3
  %31 = icmp eq i32* %2, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %30
  store i32 0, i32* %2, align 4
  br label %33

33:                                               ; preds = %32, %30, %26
  %34 = phi i8* [ %29, %26 ], [ null, %30 ], [ null, %32 ]
  ret i8* %34
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @av_packet_side_data_name(i32) local_unnamed_addr #6 {
  %2 = icmp ult i32 %0, 31
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [31 x i8*], [31 x i8*]* @switch.table.av_packet_side_data_name, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_packet_merge_side_data(%struct.AVPacket* nocapture) local_unnamed_addr #1 {
  %2 = alloca %struct.AVPacket, align 8
  %3 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %162, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = add nsw i64 %9, 72
  %11 = bitcast %struct.AVPacket* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %11) #10
  %12 = bitcast %struct.AVPacket* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %12, i64 88, i1 false)
  %13 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 8
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %72

16:                                               ; preds = %6
  %17 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 7
  %18 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %17, align 8
  %19 = sext i32 %14 to i64
  %20 = add nsw i64 %19, -1
  %21 = and i64 %19, 3
  %22 = icmp ult i64 %20, 3
  br i1 %22, label %55, label %23

23:                                               ; preds = %16
  %24 = sub nsw i64 %19, %21
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi i64 [ 0, %23 ], [ %52, %25 ]
  %27 = phi i64 [ %10, %23 ], [ %51, %25 ]
  %28 = phi i64 [ %24, %23 ], [ %53, %25 ]
  %29 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %18, i64 %26, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = sext i32 %30 to i64
  %32 = add i64 %27, 5
  %33 = add i64 %32, %31
  %34 = or i64 %26, 1
  %35 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %18, i64 %34, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = sext i32 %36 to i64
  %38 = add i64 %33, 5
  %39 = add i64 %38, %37
  %40 = or i64 %26, 2
  %41 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %18, i64 %40, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = sext i32 %42 to i64
  %44 = add i64 %39, 5
  %45 = add i64 %44, %43
  %46 = or i64 %26, 3
  %47 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %18, i64 %46, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = sext i32 %48 to i64
  %50 = add i64 %45, 5
  %51 = add i64 %50, %49
  %52 = add nuw nsw i64 %26, 4
  %53 = add i64 %28, -4
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %25

55:                                               ; preds = %25, %16
  %56 = phi i64 [ undef, %16 ], [ %51, %25 ]
  %57 = phi i64 [ 0, %16 ], [ %52, %25 ]
  %58 = phi i64 [ %10, %16 ], [ %51, %25 ]
  %59 = icmp eq i64 %21, 0
  br i1 %59, label %72, label %60

60:                                               ; preds = %55, %60
  %61 = phi i64 [ %69, %60 ], [ %57, %55 ]
  %62 = phi i64 [ %68, %60 ], [ %58, %55 ]
  %63 = phi i64 [ %70, %60 ], [ %21, %55 ]
  %64 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %18, i64 %61, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = sext i32 %65 to i64
  %67 = add i64 %62, 5
  %68 = add i64 %67, %66
  %69 = add nuw nsw i64 %61, 1
  %70 = add i64 %63, -1
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %60, !llvm.loop !2

72:                                               ; preds = %55, %60, %6
  %73 = phi i64 [ %10, %6 ], [ %56, %55 ], [ %68, %60 ]
  %74 = icmp ugt i64 %73, 2147483647
  br i1 %74, label %160, label %75

75:                                               ; preds = %72
  %76 = trunc i64 %73 to i32
  %77 = tail call %struct.AVBufferRef* @av_buffer_alloc(i32 %76) #10
  %78 = icmp eq %struct.AVBufferRef* %77, null
  br i1 %78, label %160, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 0
  store %struct.AVBufferRef* %77, %struct.AVBufferRef** %80, align 8
  %81 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %77, i64 0, i32 1
  %82 = bitcast i8** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 3
  %85 = bitcast i8** %84 to i64*
  store i64 %83, i64* %85, align 8
  %86 = add nsw i32 %76, -64
  store i32 %86, i32* %7, align 8
  %87 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 3
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 4
  %90 = load i32, i32* %89, align 8
  %91 = inttoptr i64 %83 to i8*
  %92 = zext i32 %90 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %91, i8* align 1 %88, i64 %92, i1 false) #10
  %93 = getelementptr inbounds i8, i8* %91, i64 %92
  br i1 %15, label %94, label %125

94:                                               ; preds = %79
  %95 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 7
  %96 = sext i32 %14 to i64
  br label %97

97:                                               ; preds = %94, %97
  %98 = phi i64 [ %96, %94 ], [ %101, %97 ]
  %99 = phi i32 [ %14, %94 ], [ %102, %97 ]
  %100 = phi i8* [ %93, %94 ], [ %123, %97 ]
  %101 = add nsw i64 %98, -1
  %102 = add nsw i32 %99, -1
  %103 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %95, align 8
  %104 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %103, i64 %101, i32 0
  %105 = load i8*, i8** %104, align 8
  %106 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %103, i64 %101, i32 1
  %107 = load i32, i32* %106, align 8
  %108 = zext i32 %107 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %100, i8* align 1 %105, i64 %108, i1 false) #10
  %109 = getelementptr inbounds i8, i8* %100, i64 %108
  %110 = load i32, i32* %106, align 8
  %111 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %110) #12, !srcloc !4
  %112 = bitcast i8* %109 to i32*
  store i32 %111, i32* %112, align 1
  %113 = getelementptr inbounds i8, i8* %109, i64 4
  %114 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %95, align 8
  %115 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %114, i64 %101, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = load i32, i32* %13, align 8
  %118 = icmp eq i32 %99, %117
  %119 = zext i1 %118 to i32
  %120 = shl nuw nsw i32 %119, 7
  %121 = or i32 %120, %116
  %122 = trunc i32 %121 to i8
  %123 = getelementptr inbounds i8, i8* %113, i64 1
  store i8 %122, i8* %113, align 1
  %124 = icmp sgt i64 %101, 0
  br i1 %124, label %97, label %125

125:                                              ; preds = %97, %79
  %126 = phi i8* [ %93, %79 ], [ %123, %97 ]
  %127 = tail call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 -8336834640763033090) #12, !srcloc !5
  %128 = bitcast i8* %126 to i64*
  store i64 %127, i64* %128, align 1
  %129 = getelementptr inbounds i8, i8* %126, i64 8
  %130 = ptrtoint i8* %129 to i64
  %131 = load i64, i64* %85, align 8
  %132 = sub i64 %130, %131
  %133 = load i32, i32* %7, align 8
  %134 = sext i32 %133 to i64
  %135 = icmp eq i64 %132, %134
  br i1 %135, label %137, label %136

136:                                              ; preds = %125
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 441) #10
  tail call void @abort() #11
  unreachable

137:                                              ; preds = %125
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %129, i8 0, i64 64, i1 false)
  %138 = load i32, i32* %13, align 8
  %139 = icmp sgt i32 %138, 0
  %140 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 7
  br i1 %139, label %141, label %150

141:                                              ; preds = %137
  %142 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %140, align 8
  %143 = sext i32 %138 to i64
  br label %144

144:                                              ; preds = %141, %144
  %145 = phi i64 [ %148, %144 ], [ 0, %141 ]
  %146 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %142, i64 %145, i32 0
  %147 = bitcast i8** %146 to i8*
  tail call void @av_freep(i8* %147) #10
  %148 = add nuw nsw i64 %145, 1
  %149 = icmp slt i64 %148, %143
  br i1 %149, label %144, label %150

150:                                              ; preds = %144, %137
  %151 = bitcast %struct.AVPacketSideData** %140 to i8*
  call void @av_freep(i8* %151) #10
  store i32 0, i32* %13, align 8
  %152 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 0
  call void @av_buffer_unref(%struct.AVBufferRef** nonnull %152) #10
  %153 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 1
  %154 = bitcast i64* %153 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %154, align 8
  %155 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 9
  %156 = bitcast i64* %155 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %156, align 8
  %157 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 11
  store i64 0, i64* %157, align 8
  store %struct.AVBufferRef* null, %struct.AVBufferRef** %152, align 8
  store %struct.AVPacketSideData* null, %struct.AVPacketSideData** %140, align 8
  store i32 0, i32* %13, align 8
  %158 = bitcast i8** %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %158, i8 0, i64 20, i1 false) #10
  store i32 0, i32* %3, align 8
  %159 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 7
  store %struct.AVPacketSideData* null, %struct.AVPacketSideData** %159, align 8
  br label %160

160:                                              ; preds = %75, %72, %150
  %161 = phi i32 [ 1, %150 ], [ -22, %72 ], [ -12, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %11) #10
  br label %162

162:                                              ; preds = %1, %160
  %163 = phi i32 [ %161, %160 ], [ 0, %1 ]
  ret i32 %163
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_packet_split_side_data(%struct.AVPacket* nocapture) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %127

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 12
  br i1 %8, label %9, label %127

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 3
  %11 = load i8*, i8** %10, align 8
  %12 = sext i32 %7 to i64
  %13 = getelementptr inbounds i8, i8* %11, i64 %12
  %14 = getelementptr inbounds i8, i8* %13, i64 -8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = tail call i64 asm "bswap  $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %16) #12, !srcloc !5
  %18 = icmp eq i64 %17, -8336834640763033090
  %19 = ptrtoint i8* %11 to i64
  br i1 %18, label %20, label %127

20:                                               ; preds = %9
  %21 = getelementptr inbounds i8, i8* %14, i64 -5
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 1
  %24 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %23) #12, !srcloc !4
  %25 = icmp ugt i32 %24, 2147483642
  br i1 %25, label %127, label %26

26:                                               ; preds = %20
  %27 = bitcast i8** %10 to i64*
  br label %28

28:                                               ; preds = %26, %44
  %29 = phi i32 [ %24, %26 ], [ %50, %44 ]
  %30 = phi i8* [ %21, %26 ], [ %46, %44 ]
  %31 = phi i32 [ 1, %26 ], [ %47, %44 ]
  %32 = ptrtoint i8* %30 to i64
  %33 = sub i64 %32, %19
  %34 = zext i32 %29 to i64
  %35 = icmp slt i64 %33, %34
  br i1 %35, label %127, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds i8, i8* %30, i64 4
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %36
  %41 = add nuw nsw i32 %29, 5
  %42 = zext i32 %41 to i64
  %43 = icmp slt i64 %33, %42
  br i1 %43, label %127, label %44

44:                                               ; preds = %40
  %45 = sub nsw i64 0, %42
  %46 = getelementptr inbounds i8, i8* %30, i64 %45
  %47 = add nuw nsw i32 %31, 1
  %48 = bitcast i8* %46 to i32*
  %49 = load i32, i32* %48, align 1
  %50 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %49) #12, !srcloc !4
  %51 = icmp ugt i32 %50, 2147483642
  br i1 %51, label %127, label %28

52:                                               ; preds = %36
  %53 = icmp ugt i32 %31, 31
  br i1 %53, label %127, label %54

54:                                               ; preds = %52
  %55 = zext i32 %31 to i64
  %56 = tail call i8* @av_malloc_array(i64 %55, i64 16) #10
  %57 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 7
  %58 = bitcast %struct.AVPacketSideData** %57 to i8**
  store i8* %56, i8** %58, align 8
  %59 = icmp eq i8* %56, null
  br i1 %59, label %127, label %60

60:                                               ; preds = %54
  %61 = load i8*, i8** %10, align 8
  %62 = load i32, i32* %6, align 8
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %61, i64 %63
  %65 = getelementptr inbounds i8, i8* %64, i64 -8
  %66 = getelementptr inbounds i8, i8* %65, i64 -5
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 1
  %69 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %68) #12, !srcloc !4
  %70 = icmp ult i32 %69, 2147483643
  br i1 %70, label %71, label %77

71:                                               ; preds = %60
  %72 = ptrtoint i8* %61 to i64
  %73 = ptrtoint i8* %66 to i64
  %74 = sub i64 %73, %72
  %75 = zext i32 %69 to i64
  %76 = icmp slt i64 %74, %75
  br i1 %76, label %77, label %78

77:                                               ; preds = %116, %108, %71, %60
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 479) #10
  tail call void @abort() #11
  unreachable

78:                                               ; preds = %71, %116
  %79 = phi i64 [ %121, %116 ], [ %75, %71 ]
  %80 = phi i8* [ %111, %116 ], [ %66, %71 ]
  %81 = phi i32 [ %114, %116 ], [ %69, %71 ]
  %82 = phi i64 [ %117, %116 ], [ 0, %71 ]
  %83 = add nuw i32 %81, 64
  %84 = zext i32 %83 to i64
  %85 = tail call noalias i8* @av_mallocz(i64 %84) #10
  %86 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %57, align 8
  %87 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %86, i64 %82, i32 0
  store i8* %85, i8** %87, align 8
  %88 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %57, align 8
  %89 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %88, i64 %82, i32 1
  store i32 %81, i32* %89, align 8
  %90 = getelementptr inbounds i8, i8* %80, i64 4
  %91 = load i8, i8* %90, align 1
  %92 = and i8 %91, 127
  %93 = zext i8 %92 to i32
  %94 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %57, align 8
  %95 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %94, i64 %82, i32 2
  store i32 %93, i32* %95, align 4
  %96 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %57, align 8
  %97 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %96, i64 %82, i32 0
  %98 = load i8*, i8** %97, align 8
  %99 = icmp eq i8* %98, null
  br i1 %99, label %127, label %100

100:                                              ; preds = %78
  %101 = sub nsw i64 0, %79
  %102 = getelementptr inbounds i8, i8* %80, i64 %101
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %98, i8* align 1 %102, i64 %79, i1 false)
  %103 = add nuw nsw i32 %81, 5
  %104 = load i32, i32* %6, align 8
  %105 = sub i32 %104, %103
  store i32 %105, i32* %6, align 8
  %106 = load i8, i8* %90, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %123, label %108

108:                                              ; preds = %100
  %109 = zext i32 %103 to i64
  %110 = sub nsw i64 0, %109
  %111 = getelementptr inbounds i8, i8* %80, i64 %110
  %112 = bitcast i8* %111 to i32*
  %113 = load i32, i32* %112, align 1
  %114 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %113) #12, !srcloc !4
  %115 = icmp ult i32 %114, 2147483643
  br i1 %115, label %116, label %77

116:                                              ; preds = %108
  %117 = add nuw i64 %82, 1
  %118 = load i64, i64* %27, align 8
  %119 = ptrtoint i8* %111 to i64
  %120 = sub i64 %119, %118
  %121 = zext i32 %114 to i64
  %122 = icmp slt i64 %120, %121
  br i1 %122, label %77, label %78

123:                                              ; preds = %100
  %124 = trunc i64 %82 to i32
  %125 = add nsw i32 %105, -8
  store i32 %125, i32* %6, align 8
  %126 = add nuw nsw i32 %124, 1
  store i32 %126, i32* %2, align 8
  br label %127

127:                                              ; preds = %40, %44, %28, %78, %20, %5, %9, %1, %123, %52, %54
  %128 = phi i32 [ 1, %123 ], [ -34, %52 ], [ -12, %54 ], [ 0, %1 ], [ 0, %9 ], [ 0, %5 ], [ 0, %20 ], [ -12, %78 ], [ 0, %28 ], [ 0, %44 ], [ 0, %40 ]
  ret i32 %128
}

declare i8* @av_malloc_array(i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @av_packet_pack_dictionary(%struct.AVDictionary*, i32* nocapture) local_unnamed_addr #1 {
  %3 = alloca i8*, align 8
  %4 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  store i8* null, i8** %3, align 8
  store i32 0, i32* %1, align 4
  %5 = icmp eq %struct.AVDictionary* %0, null
  br i1 %5, label %44, label %6

6:                                                ; preds = %2
  %7 = tail call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* nonnull %0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.36, i64 0, i64 0), %struct.AVDictionaryEntry* null, i32 2) #10
  %8 = icmp eq %struct.AVDictionaryEntry* %7, null
  br i1 %8, label %44, label %9

9:                                                ; preds = %6, %27
  %10 = phi i8* [ %23, %27 ], [ null, %6 ]
  %11 = phi %struct.AVDictionaryEntry* [ %41, %27 ], [ %7, %6 ]
  %12 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i64 @strlen(i8* %13) #13
  %15 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %11, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = tail call i64 @strlen(i8* %16) #13
  %18 = load i32, i32* %1, align 4
  %19 = sext i32 %18 to i64
  %20 = add i64 %14, 2
  %21 = add i64 %20, %17
  %22 = add i64 %21, %19
  %23 = tail call i8* @av_realloc(i8* %10, i64 %22) #10
  %24 = icmp eq i8* %23, null
  br i1 %24, label %43, label %25

25:                                               ; preds = %9
  store i8* %23, i8** %3, align 8
  %26 = icmp ugt i64 %22, 2147483647
  br i1 %26, label %43, label %27

27:                                               ; preds = %25
  %28 = load i32, i32* %1, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %23, i64 %29
  %31 = load i8*, i8** %12, align 8
  %32 = add i64 %14, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %31, i64 %32, i1 false)
  %33 = load i32, i32* %1, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %23, i64 1
  %36 = getelementptr inbounds i8, i8* %35, i64 %34
  %37 = getelementptr inbounds i8, i8* %36, i64 %14
  %38 = load i8*, i8** %15, align 8
  %39 = add i64 %17, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %38, i64 %39, i1 false)
  %40 = trunc i64 %22 to i32
  store i32 %40, i32* %1, align 4
  %41 = tail call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* nonnull %0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.36, i64 0, i64 0), %struct.AVDictionaryEntry* nonnull %11, i32 2) #10
  %42 = icmp eq %struct.AVDictionaryEntry* %41, null
  br i1 %42, label %44, label %9

43:                                               ; preds = %9, %25
  call void @av_freep(i8* nonnull %4) #10
  store i32 0, i32* %1, align 4
  br label %44

44:                                               ; preds = %27, %6, %2, %43
  %45 = phi i8* [ null, %43 ], [ null, %2 ], [ null, %6 ], [ %23, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  ret i8* %45
}

declare %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary*, i8*, %struct.AVDictionaryEntry*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_packet_unpack_dictionary(i8*, i32, %struct.AVDictionary**) local_unnamed_addr #1 {
  %4 = icmp ne %struct.AVDictionary** %2, null
  %5 = icmp ne i8* %0, null
  %6 = and i1 %5, %4
  %7 = icmp ne i32 %1, 0
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %34

9:                                                ; preds = %3
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds i8, i8* %0, i64 %10
  %12 = getelementptr inbounds i8, i8* %11, i64 -1
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %34

15:                                               ; preds = %9
  %16 = icmp sgt i32 %1, 0
  br i1 %16, label %17, label %34

17:                                               ; preds = %15, %29
  %18 = phi i8* [ %32, %29 ], [ %0, %15 ]
  %19 = tail call i64 @strlen(i8* %18) #13
  %20 = getelementptr inbounds i8, i8* %18, i64 1
  %21 = getelementptr inbounds i8, i8* %20, i64 %19
  %22 = icmp ult i8* %21, %11
  br i1 %22, label %23, label %34

23:                                               ; preds = %17
  %24 = load i8, i8* %18, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %23
  %27 = tail call i32 @av_dict_set(%struct.AVDictionary** nonnull %2, i8* %18, i8* %21, i32 0) #10
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %26
  %30 = tail call i64 @strlen(i8* %21) #13
  %31 = getelementptr inbounds i8, i8* %21, i64 1
  %32 = getelementptr inbounds i8, i8* %31, i64 %30
  %33 = icmp ult i8* %32, %11
  br i1 %33, label %17, label %34

34:                                               ; preds = %29, %23, %17, %26, %15, %9, %3
  %35 = phi i32 [ 0, %3 ], [ -1094995529, %9 ], [ 0, %15 ], [ 0, %29 ], [ -1094995529, %23 ], [ -1094995529, %17 ], [ %27, %26 ]
  ret i32 %35
}

declare i32 @av_dict_set(%struct.AVDictionary**, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @av_packet_shrink_side_data(%struct.AVPacket* nocapture readonly, i32, i32) local_unnamed_addr #5 {
  %4 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 8
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %25

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 7
  %9 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %8, align 8
  %10 = sext i32 %5 to i64
  br label %13

11:                                               ; preds = %13
  %12 = icmp slt i64 %18, %10
  br i1 %12, label %13, label %25

13:                                               ; preds = %7, %11
  %14 = phi i64 [ 0, %7 ], [ %18, %11 ]
  %15 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %9, i64 %14, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, %1
  %18 = add nuw nsw i64 %14, 1
  br i1 %17, label %19, label %11

19:                                               ; preds = %13
  %20 = and i64 %14, 4294967295
  %21 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %9, i64 %20, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, %2
  br i1 %23, label %25, label %24

24:                                               ; preds = %19
  store i32 %2, i32* %21, align 8
  br label %25

25:                                               ; preds = %11, %3, %19, %24
  %26 = phi i32 [ 0, %24 ], [ -12, %19 ], [ -2, %3 ], [ -2, %11 ]
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_packet_copy_props(%struct.AVPacket*, %struct.AVPacket* nocapture readonly) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 1
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 2
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 10
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 10
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 9
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 9
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 11
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 11
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 6
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 6
  store i32 %19, i32* %20, align 8
  %21 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 5
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 5
  store i32 %22, i32* %23, align 4
  %24 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 7
  store %struct.AVPacketSideData* null, %struct.AVPacketSideData** %24, align 8
  %25 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 8
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 8
  %27 = load i32, i32* %26, align 8
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %29, label %62

29:                                               ; preds = %2
  %30 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 7
  br label %31

31:                                               ; preds = %29, %56
  %32 = phi i64 [ 0, %29 ], [ %58, %56 ]
  %33 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %30, align 8
  %34 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %33, i64 %32, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %33, i64 %32, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %33, i64 %32, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = tail call i8* @av_packet_new_side_data(%struct.AVPacket* %0, i32 %35, i32 %37)
  %41 = icmp eq i8* %40, null
  br i1 %41, label %42, label %56

42:                                               ; preds = %31
  %43 = load i32, i32* %25, align 8
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %45, label %54

45:                                               ; preds = %42, %45
  %46 = phi i64 [ %50, %45 ], [ 0, %42 ]
  %47 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %24, align 8
  %48 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %47, i64 %46, i32 0
  %49 = bitcast i8** %48 to i8*
  tail call void @av_freep(i8* %49) #10
  %50 = add nuw nsw i64 %46, 1
  %51 = load i32, i32* %25, align 8
  %52 = sext i32 %51 to i64
  %53 = icmp slt i64 %50, %52
  br i1 %53, label %45, label %54

54:                                               ; preds = %45, %42
  %55 = bitcast %struct.AVPacketSideData** %24 to i8*
  tail call void @av_freep(i8* %55) #10
  store i32 0, i32* %25, align 8
  br label %62

56:                                               ; preds = %31
  %57 = sext i32 %37 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %40, i8* align 1 %39, i64 %57, i1 false)
  %58 = add nuw nsw i64 %32, 1
  %59 = load i32, i32* %26, align 8
  %60 = sext i32 %59 to i64
  %61 = icmp slt i64 %58, %60
  br i1 %61, label %31, label %62

62:                                               ; preds = %56, %2, %54
  %63 = phi i32 [ -12, %54 ], [ 0, %2 ], [ 0, %56 ]
  ret i32 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_packet_ref(%struct.AVPacket*, %struct.AVPacket* nocapture readonly) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 0
  store %struct.AVBufferRef* null, %struct.AVBufferRef** %3, align 8
  %4 = tail call i32 @av_packet_copy_props(%struct.AVPacket* %0, %struct.AVPacket* %1)
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %50, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 0
  %8 = load %struct.AVBufferRef*, %struct.AVBufferRef** %7, align 8
  %9 = icmp eq %struct.AVBufferRef* %8, null
  br i1 %9, label %10, label %36

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = icmp ugt i32 %12, 2147483582
  br i1 %13, label %50, label %14

14:                                               ; preds = %10
  %15 = add nuw nsw i32 %12, 64
  %16 = tail call i32 @av_buffer_realloc(%struct.AVBufferRef** %3, i32 %15) #10
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %50, label %18

18:                                               ; preds = %14
  %19 = load %struct.AVBufferRef*, %struct.AVBufferRef** %3, align 8
  %20 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %19, i64 0, i32 1
  %21 = load i8*, i8** %20, align 8
  %22 = sext i32 %12 to i64
  %23 = getelementptr inbounds i8, i8* %21, i64 %22
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %23, i8 0, i64 64, i1 false) #10
  %24 = load i32, i32* %11, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %18
  %27 = load %struct.AVBufferRef*, %struct.AVBufferRef** %3, align 8
  %28 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %27, i64 0, i32 1
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 3
  %31 = load i8*, i8** %30, align 8
  %32 = sext i32 %24 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %31, i64 %32, i1 false)
  br label %33

33:                                               ; preds = %18, %26
  %34 = load %struct.AVBufferRef*, %struct.AVBufferRef** %3, align 8
  %35 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %34, i64 0, i32 1
  br label %41

36:                                               ; preds = %6
  %37 = tail call %struct.AVBufferRef* @av_buffer_ref(%struct.AVBufferRef* nonnull %8) #10
  store %struct.AVBufferRef* %37, %struct.AVBufferRef** %3, align 8
  %38 = icmp eq %struct.AVBufferRef* %37, null
  br i1 %38, label %50, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 3
  br label %41

41:                                               ; preds = %39, %33
  %42 = phi i8** [ %40, %39 ], [ %35, %33 ]
  %43 = bitcast i8** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 3
  %46 = bitcast i8** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 4
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 4
  store i32 %48, i32* %49, align 8
  br label %74

50:                                               ; preds = %14, %10, %36, %2
  %51 = phi i32 [ %4, %2 ], [ -12, %36 ], [ %16, %14 ], [ -22, %10 ]
  %52 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 8
  %53 = load i32, i32* %52, align 8
  %54 = icmp sgt i32 %53, 0
  %55 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 7
  br i1 %54, label %56, label %65

56:                                               ; preds = %50, %56
  %57 = phi i64 [ %61, %56 ], [ 0, %50 ]
  %58 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %55, align 8
  %59 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %58, i64 %57, i32 0
  %60 = bitcast i8** %59 to i8*
  tail call void @av_freep(i8* %60) #10
  %61 = add nuw nsw i64 %57, 1
  %62 = load i32, i32* %52, align 8
  %63 = sext i32 %62 to i64
  %64 = icmp slt i64 %61, %63
  br i1 %64, label %56, label %65

65:                                               ; preds = %56, %50
  %66 = bitcast %struct.AVPacketSideData** %55 to i8*
  tail call void @av_freep(i8* %66) #10
  store i32 0, i32* %52, align 8
  tail call void @av_buffer_unref(%struct.AVBufferRef** %3) #10
  %67 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 1
  %68 = bitcast i64* %67 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %68, align 8
  %69 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 9
  %70 = bitcast i64* %69 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %70, align 8
  %71 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 11
  store i64 0, i64* %71, align 8
  store %struct.AVBufferRef* null, %struct.AVBufferRef** %3, align 8
  store %struct.AVPacketSideData* null, %struct.AVPacketSideData** %55, align 8
  store i32 0, i32* %52, align 8
  %72 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 3
  %73 = bitcast i8** %72 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 20, i1 false) #10
  br label %74

74:                                               ; preds = %65, %41
  %75 = phi i32 [ %51, %65 ], [ 0, %41 ]
  ret i32 %75
}

declare %struct.AVBufferRef* @av_buffer_ref(%struct.AVBufferRef*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct.AVPacket* @av_packet_clone(%struct.AVPacket* nocapture readonly) local_unnamed_addr #1 {
  %2 = alloca %struct.AVPacket*, align 8
  %3 = bitcast %struct.AVPacket** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #10
  store %struct.AVPacket* inttoptr (i64 -6148914691236517206 to %struct.AVPacket*), %struct.AVPacket** %2, align 8
  %4 = tail call noalias i8* @av_mallocz(i64 88) #10
  %5 = bitcast i8* %4 to %struct.AVPacket*
  %6 = icmp eq i8* %4, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = bitcast %struct.AVPacket** %2 to i8**
  store i8* %4, i8** %8, align 8
  br label %54

9:                                                ; preds = %1
  %10 = getelementptr inbounds i8, i8* %4, i64 8
  %11 = bitcast i8* %10 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 64
  %13 = bitcast i8* %12 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %13, align 8
  %14 = getelementptr inbounds i8, i8* %4, i64 80
  %15 = bitcast i8* %14 to i64*
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %4, i64 40
  %17 = bitcast i8* %16 to i32*
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %4, i64 36
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19, align 4
  %20 = bitcast i8* %4 to %struct.AVBufferRef**
  store %struct.AVBufferRef* null, %struct.AVBufferRef** %20, align 8
  %21 = getelementptr inbounds i8, i8* %4, i64 48
  %22 = bitcast i8* %21 to %struct.AVPacketSideData**
  store %struct.AVPacketSideData* null, %struct.AVPacketSideData** %22, align 8
  %23 = getelementptr inbounds i8, i8* %4, i64 56
  %24 = bitcast i8* %23 to i32*
  store i32 0, i32* %24, align 8
  %25 = bitcast %struct.AVPacket** %2 to i8**
  store i8* %4, i8** %25, align 8
  %26 = tail call i32 @av_packet_ref(%struct.AVPacket* nonnull %5, %struct.AVPacket* %0)
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %54, label %28

28:                                               ; preds = %9
  %29 = getelementptr inbounds i8, i8* %4, i64 56
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 8
  %32 = icmp sgt i32 %31, 0
  %33 = getelementptr inbounds i8, i8* %4, i64 48
  %34 = bitcast i8* %33 to %struct.AVPacketSideData**
  br i1 %32, label %35, label %44

35:                                               ; preds = %28, %35
  %36 = phi i64 [ %40, %35 ], [ 0, %28 ]
  %37 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %34, align 8
  %38 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %37, i64 %36, i32 0
  %39 = bitcast i8** %38 to i8*
  tail call void @av_freep(i8* %39) #10
  %40 = add nuw nsw i64 %36, 1
  %41 = load i32, i32* %30, align 8
  %42 = sext i32 %41 to i64
  %43 = icmp slt i64 %40, %42
  br i1 %43, label %35, label %44

44:                                               ; preds = %35, %28
  tail call void @av_freep(i8* %33) #10
  store i32 0, i32* %30, align 8
  %45 = bitcast i8* %4 to %struct.AVBufferRef**
  tail call void @av_buffer_unref(%struct.AVBufferRef** nonnull %45) #10
  %46 = getelementptr inbounds i8, i8* %4, i64 8
  %47 = bitcast i8* %46 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %47, align 8
  %48 = getelementptr inbounds i8, i8* %4, i64 64
  %49 = bitcast i8* %48 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %49, align 8
  %50 = getelementptr inbounds i8, i8* %4, i64 80
  %51 = bitcast i8* %50 to i64*
  store i64 0, i64* %51, align 8
  store %struct.AVBufferRef* null, %struct.AVBufferRef** %45, align 8
  store %struct.AVPacketSideData* null, %struct.AVPacketSideData** %34, align 8
  store i32 0, i32* %30, align 8
  %52 = getelementptr inbounds i8, i8* %4, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 20, i1 false) #10
  call void @av_freep(i8* nonnull %3) #10
  %53 = load %struct.AVPacket*, %struct.AVPacket** %2, align 8
  br label %54

54:                                               ; preds = %9, %44, %7
  %55 = phi %struct.AVPacket* [ null, %7 ], [ %53, %44 ], [ %5, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #10
  ret %struct.AVPacket* %55
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_packet_move_ref(%struct.AVPacket* nocapture, %struct.AVPacket* nocapture) local_unnamed_addr #1 {
  %3 = bitcast %struct.AVPacket* %0 to i8*
  %4 = bitcast %struct.AVPacket* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 88, i1 false)
  %5 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 1
  %6 = bitcast i64* %5 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %6, align 8
  %7 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 9
  %8 = bitcast i64* %7 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %8, align 8
  %9 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 11
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 0
  store %struct.AVBufferRef* null, %struct.AVBufferRef** %10, align 8
  %11 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 7
  store %struct.AVPacketSideData* null, %struct.AVPacketSideData** %11, align 8
  %12 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 8
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 3
  %14 = bitcast i8** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_packet_make_refcounted(%struct.AVPacket*) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 0
  %3 = load %struct.AVBufferRef*, %struct.AVBufferRef** %2, align 8
  %4 = icmp eq %struct.AVBufferRef* %3, null
  br i1 %4, label %5, label %35

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp ugt i32 %7, 2147483582
  br i1 %8, label %35, label %9

9:                                                ; preds = %5
  %10 = add nuw nsw i32 %7, 64
  %11 = tail call i32 @av_buffer_realloc(%struct.AVBufferRef** %2, i32 %10) #10
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %35, label %13

13:                                               ; preds = %9
  %14 = load %struct.AVBufferRef*, %struct.AVBufferRef** %2, align 8
  %15 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %14, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = sext i32 %7 to i64
  %18 = getelementptr inbounds i8, i8* %16, i64 %17
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %18, i8 0, i64 64, i1 false) #10
  %19 = load i32, i32* %6, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %13
  %22 = load %struct.AVBufferRef*, %struct.AVBufferRef** %2, align 8
  %23 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %22, i64 0, i32 1
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 3
  %26 = load i8*, i8** %25, align 8
  %27 = sext i32 %19 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %26, i64 %27, i1 false)
  br label %28

28:                                               ; preds = %13, %21
  %29 = load %struct.AVBufferRef*, %struct.AVBufferRef** %2, align 8
  %30 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %29, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 3
  %34 = bitcast i8** %33 to i64*
  store i64 %32, i64* %34, align 8
  br label %35

35:                                               ; preds = %9, %5, %1, %28
  %36 = phi i32 [ 0, %28 ], [ 0, %1 ], [ %11, %9 ], [ -22, %5 ]
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_packet_make_writable(%struct.AVPacket*) local_unnamed_addr #1 {
  %2 = alloca %struct.AVBufferRef*, align 8
  %3 = bitcast %struct.AVBufferRef** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #10
  store %struct.AVBufferRef* null, %struct.AVBufferRef** %2, align 8
  %4 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 0
  %5 = load %struct.AVBufferRef*, %struct.AVBufferRef** %4, align 8
  %6 = icmp eq %struct.AVBufferRef* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = tail call i32 @av_buffer_is_writable(%struct.AVBufferRef* nonnull %5) #10
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %41

10:                                               ; preds = %7, %1
  %11 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = icmp ugt i32 %12, 2147483582
  br i1 %13, label %41, label %14

14:                                               ; preds = %10
  %15 = add nuw nsw i32 %12, 64
  %16 = call i32 @av_buffer_realloc(%struct.AVBufferRef** nonnull %2, i32 %15) #10
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %41, label %18

18:                                               ; preds = %14
  %19 = load %struct.AVBufferRef*, %struct.AVBufferRef** %2, align 8
  %20 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %19, i64 0, i32 1
  %21 = load i8*, i8** %20, align 8
  %22 = sext i32 %12 to i64
  %23 = getelementptr inbounds i8, i8* %21, i64 %22
  call void @llvm.memset.p0i8.i64(i8* align 1 %23, i8 0, i64 64, i1 false) #10
  %24 = load i32, i32* %11, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %18
  %27 = load i8*, i8** %20, align 8
  %28 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 3
  %29 = load i8*, i8** %28, align 8
  %30 = sext i32 %24 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %29, i64 %30, i1 false)
  br label %31

31:                                               ; preds = %18, %26
  call void @av_buffer_unref(%struct.AVBufferRef** %4) #10
  %32 = bitcast %struct.AVBufferRef** %2 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %struct.AVPacket* %0 to i64*
  store i64 %33, i64* %34, align 8
  %35 = inttoptr i64 %33 to %struct.AVBufferRef*
  %36 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %35, i64 0, i32 1
  %37 = bitcast i8** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 3
  %40 = bitcast i8** %39 to i64*
  store i64 %38, i64* %40, align 8
  br label %41

41:                                               ; preds = %14, %10, %7, %31
  %42 = phi i32 [ 0, %31 ], [ 0, %7 ], [ %16, %14 ], [ -22, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #10
  ret i32 %42
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @av_packet_rescale_ts(%struct.AVPacket* nocapture, i64, i64) local_unnamed_addr #8 {
  %4 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, -9223372036854775808
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call i64 @av_rescale_q(i64 %5, i64 %1, i64 %2) #12
  store i64 %8, i64* %4, align 8
  br label %9

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, -9223372036854775808
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = tail call i64 @av_rescale_q(i64 %11, i64 %1, i64 %2) #12
  store i64 %14, i64* %10, align 8
  br label %15

15:                                               ; preds = %9, %13
  %16 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 9
  %17 = load i64, i64* %16, align 8
  %18 = icmp sgt i64 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = tail call i64 @av_rescale_q(i64 %17, i64 %1, i64 %2) #12
  store i64 %20, i64* %16, align 8
  br label %21

21:                                               ; preds = %19, %15
  %22 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 11
  %23 = load i64, i64* %22, align 8
  %24 = icmp sgt i64 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = tail call i64 @av_rescale_q(i64 %23, i64 %1, i64 %2) #12
  store i64 %26, i64* %22, align 8
  br label %27

27:                                               ; preds = %25, %21
  ret void
}

; Function Attrs: nounwind readnone
declare i64 @av_rescale_q(i64, i64, i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden i32 @avpriv_packet_list_put(%struct.AVPacketList** nocapture, %struct.AVPacketList** nocapture, %struct.AVPacket*, i32 (%struct.AVPacket*, %struct.AVPacket*)*, i32) local_unnamed_addr #1 {
  %6 = tail call noalias i8* @av_mallocz(i64 96) #10
  %7 = icmp eq i8* %6, null
  br i1 %7, label %72, label %8

8:                                                ; preds = %5
  %9 = icmp eq i32 (%struct.AVPacket*, %struct.AVPacket*)* %3, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %8
  %11 = bitcast i8* %6 to %struct.AVPacket*
  %12 = tail call i32 %3(%struct.AVPacket* nonnull %11, %struct.AVPacket* %2) #10
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %14, label %62

14:                                               ; preds = %10
  tail call void @av_free(i8* nonnull %6) #10
  br label %72

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 0
  %17 = load %struct.AVBufferRef*, %struct.AVBufferRef** %16, align 8
  %18 = icmp eq %struct.AVBufferRef* %17, null
  br i1 %18, label %19, label %51

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = icmp ugt i32 %21, 2147483582
  br i1 %22, label %49, label %23

23:                                               ; preds = %19
  %24 = add nuw nsw i32 %21, 64
  %25 = tail call i32 @av_buffer_realloc(%struct.AVBufferRef** %16, i32 %24) #10
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %49, label %27

27:                                               ; preds = %23
  %28 = load %struct.AVBufferRef*, %struct.AVBufferRef** %16, align 8
  %29 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %28, i64 0, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = sext i32 %21 to i64
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %32, i8 0, i64 64, i1 false) #10
  %33 = load i32, i32* %20, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %27
  %36 = load %struct.AVBufferRef*, %struct.AVBufferRef** %16, align 8
  %37 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %36, i64 0, i32 1
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 3
  %40 = load i8*, i8** %39, align 8
  %41 = sext i32 %33 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 %40, i64 %41, i1 false) #10
  br label %42

42:                                               ; preds = %35, %27
  %43 = load %struct.AVBufferRef*, %struct.AVBufferRef** %16, align 8
  %44 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %43, i64 0, i32 1
  %45 = bitcast i8** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 3
  %48 = bitcast i8** %47 to i64*
  store i64 %46, i64* %48, align 8
  br label %51

49:                                               ; preds = %23, %19
  %50 = phi i32 [ -22, %19 ], [ %25, %23 ]
  tail call void @av_free(i8* nonnull %6) #10
  br label %72

51:                                               ; preds = %42, %15
  %52 = bitcast %struct.AVPacket* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %52, i64 88, i1 false) #10
  %53 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 1
  %54 = bitcast i64* %53 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %54, align 8
  %55 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 9
  %56 = bitcast i64* %55 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %56, align 8
  %57 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 11
  store i64 0, i64* %57, align 8
  store %struct.AVBufferRef* null, %struct.AVBufferRef** %16, align 8
  %58 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 7
  store %struct.AVPacketSideData* null, %struct.AVPacketSideData** %58, align 8
  %59 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 8
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i64 0, i32 3
  %61 = bitcast i8** %60 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 20, i1 false) #10
  br label %62

62:                                               ; preds = %10, %51
  %63 = load %struct.AVPacketList*, %struct.AVPacketList** %0, align 8
  %64 = icmp eq %struct.AVPacketList* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %62
  %66 = load %struct.AVPacketList*, %struct.AVPacketList** %1, align 8
  %67 = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %66, i64 0, i32 1
  br label %68

68:                                               ; preds = %62, %65
  %69 = phi %struct.AVPacketList** [ %67, %65 ], [ %0, %62 ]
  %70 = bitcast %struct.AVPacketList** %69 to i8**
  store i8* %6, i8** %70, align 8
  %71 = bitcast %struct.AVPacketList** %1 to i8**
  store i8* %6, i8** %71, align 8
  br label %72

72:                                               ; preds = %5, %68, %49, %14
  %73 = phi i32 [ %12, %14 ], [ 0, %68 ], [ %50, %49 ], [ -12, %5 ]
  ret i32 %73
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @avpriv_packet_list_get(%struct.AVPacketList** nocapture, %struct.AVPacketList** nocapture, %struct.AVPacket* nocapture) local_unnamed_addr #1 {
  %4 = alloca %struct.AVPacketList*, align 8
  %5 = bitcast %struct.AVPacketList** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  store %struct.AVPacketList* inttoptr (i64 -6148914691236517206 to %struct.AVPacketList*), %struct.AVPacketList** %4, align 8
  %6 = load %struct.AVPacketList*, %struct.AVPacketList** %0, align 8
  %7 = icmp eq %struct.AVPacketList* %6, null
  br i1 %7, label %19, label %8

8:                                                ; preds = %3
  store %struct.AVPacketList* %6, %struct.AVPacketList** %4, align 8
  %9 = bitcast %struct.AVPacket* %2 to i8*
  %10 = bitcast %struct.AVPacketList* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* nonnull align 8 %10, i64 88, i1 false)
  %11 = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %6, i64 0, i32 1
  %12 = bitcast %struct.AVPacketList** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %struct.AVPacketList** %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load %struct.AVPacketList*, %struct.AVPacketList** %11, align 8
  %16 = icmp eq %struct.AVPacketList* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %8
  store %struct.AVPacketList* null, %struct.AVPacketList** %1, align 8
  br label %18

18:                                               ; preds = %8, %17
  call void @av_freep(i8* nonnull %5) #10
  br label %19

19:                                               ; preds = %3, %18
  %20 = phi i32 [ 0, %18 ], [ -11, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @avpriv_packet_list_free(%struct.AVPacketList** nocapture, %struct.AVPacketList** nocapture) local_unnamed_addr #1 {
  %3 = alloca %struct.AVPacketList*, align 8
  %4 = load %struct.AVPacketList*, %struct.AVPacketList** %0, align 8
  %5 = icmp eq %struct.AVPacketList* %4, null
  br i1 %5, label %36, label %6

6:                                                ; preds = %2
  %7 = bitcast %struct.AVPacketList** %3 to i8*
  br label %8

8:                                                ; preds = %6, %25
  %9 = phi %struct.AVPacketList* [ %4, %6 ], [ %11, %25 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  store %struct.AVPacketList* %9, %struct.AVPacketList** %3, align 8
  %10 = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %9, i64 0, i32 1
  %11 = load %struct.AVPacketList*, %struct.AVPacketList** %10, align 8
  %12 = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %9, i64 0, i32 0, i32 8
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, 0
  %15 = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %9, i64 0, i32 0, i32 7
  br i1 %14, label %16, label %25

16:                                               ; preds = %8, %16
  %17 = phi i64 [ %21, %16 ], [ 0, %8 ]
  %18 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %15, align 8
  %19 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %18, i64 %17, i32 0
  %20 = bitcast i8** %19 to i8*
  call void @av_freep(i8* %20) #10
  %21 = add nuw nsw i64 %17, 1
  %22 = load i32, i32* %12, align 8
  %23 = sext i32 %22 to i64
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %16, label %25

25:                                               ; preds = %16, %8
  %26 = bitcast %struct.AVPacketSideData** %15 to i8*
  call void @av_freep(i8* %26) #10
  store i32 0, i32* %12, align 8
  %27 = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %9, i64 0, i32 0, i32 0
  call void @av_buffer_unref(%struct.AVBufferRef** %27) #10
  %28 = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %9, i64 0, i32 0, i32 1
  %29 = bitcast i64* %28 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %29, align 8
  %30 = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %9, i64 0, i32 0, i32 9
  %31 = bitcast i64* %30 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %31, align 8
  %32 = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %9, i64 0, i32 0, i32 11
  store i64 0, i64* %32, align 8
  store %struct.AVBufferRef* null, %struct.AVBufferRef** %27, align 8
  store %struct.AVPacketSideData* null, %struct.AVPacketSideData** %15, align 8
  store i32 0, i32* %12, align 8
  %33 = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %9, i64 0, i32 0, i32 3
  %34 = bitcast i8** %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 20, i1 false) #10
  call void @av_freep(i8* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  %35 = icmp eq %struct.AVPacketList* %11, null
  br i1 %35, label %36, label %8

36:                                               ; preds = %25, %2
  store %struct.AVPacketList* null, %struct.AVPacketList** %0, align 8
  store %struct.AVPacketList* null, %struct.AVPacketList** %1, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_side_data_set_encoder_stats(%struct.AVPacket* nocapture, i32, i64* nocapture readonly, i32, i32) local_unnamed_addr #1 {
  %6 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %26

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 7
  %11 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %10, align 8
  %12 = sext i32 %7 to i64
  br label %15

13:                                               ; preds = %15
  %14 = icmp eq i64 %20, %12
  br i1 %14, label %26, label %15

15:                                               ; preds = %13, %9
  %16 = phi i64 [ 0, %9 ], [ %20, %13 ]
  %17 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %11, i64 %16, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 8
  %20 = add nuw nsw i64 %16, 1
  br i1 %19, label %21, label %13

21:                                               ; preds = %15
  %22 = and i64 %16, 4294967295
  %23 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %11, i64 %22, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %31

26:                                               ; preds = %13, %5, %21
  %27 = shl i32 %3, 3
  %28 = add nsw i32 %27, 8
  %29 = tail call i8* @av_packet_new_side_data(%struct.AVPacket* %0, i32 8, i32 %28)
  %30 = icmp eq i8* %29, null
  br i1 %30, label %101, label %37

31:                                               ; preds = %21
  %32 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %11, i64 %22, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = shl i32 %3, 3
  %35 = add nsw i32 %34, 8
  %36 = icmp slt i32 %33, %35
  br i1 %36, label %101, label %37

37:                                               ; preds = %26, %31
  %38 = phi i8* [ %24, %31 ], [ %29, %26 ]
  %39 = bitcast i8* %38 to i32*
  store i32 %1, i32* %39, align 1
  %40 = trunc i32 %4 to i8
  %41 = getelementptr inbounds i8, i8* %38, i64 4
  store i8 %40, i8* %41, align 1
  %42 = trunc i32 %3 to i8
  %43 = getelementptr inbounds i8, i8* %38, i64 5
  store i8 %42, i8* %43, align 1
  %44 = icmp sgt i32 %3, 0
  br i1 %44, label %45, label %101

45:                                               ; preds = %37
  %46 = getelementptr inbounds i8, i8* %38, i64 8
  %47 = zext i32 %3 to i64
  %48 = add nsw i64 %47, -1
  %49 = and i64 %47, 3
  %50 = icmp ult i64 %48, 3
  br i1 %50, label %86, label %51

51:                                               ; preds = %45
  %52 = sub nsw i64 %47, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %83, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %84, %53 ]
  %56 = getelementptr inbounds i64, i64* %2, i64 %54
  %57 = load i64, i64* %56, align 8
  %58 = shl i64 %54, 3
  %59 = and i64 %58, 4294967264
  %60 = getelementptr inbounds i8, i8* %46, i64 %59
  %61 = bitcast i8* %60 to i64*
  store i64 %57, i64* %61, align 1
  %62 = or i64 %54, 1
  %63 = getelementptr inbounds i64, i64* %2, i64 %62
  %64 = load i64, i64* %63, align 8
  %65 = shl i64 %62, 3
  %66 = and i64 %65, 4294967272
  %67 = getelementptr inbounds i8, i8* %46, i64 %66
  %68 = bitcast i8* %67 to i64*
  store i64 %64, i64* %68, align 1
  %69 = or i64 %54, 2
  %70 = getelementptr inbounds i64, i64* %2, i64 %69
  %71 = load i64, i64* %70, align 8
  %72 = shl i64 %69, 3
  %73 = and i64 %72, 4294967280
  %74 = getelementptr inbounds i8, i8* %46, i64 %73
  %75 = bitcast i8* %74 to i64*
  store i64 %71, i64* %75, align 1
  %76 = or i64 %54, 3
  %77 = getelementptr inbounds i64, i64* %2, i64 %76
  %78 = load i64, i64* %77, align 8
  %79 = shl i64 %76, 3
  %80 = and i64 %79, 4294967288
  %81 = getelementptr inbounds i8, i8* %46, i64 %80
  %82 = bitcast i8* %81 to i64*
  store i64 %78, i64* %82, align 1
  %83 = add nuw nsw i64 %54, 4
  %84 = add i64 %55, -4
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %53

86:                                               ; preds = %53, %45
  %87 = phi i64 [ 0, %45 ], [ %83, %53 ]
  %88 = icmp eq i64 %49, 0
  br i1 %88, label %101, label %89

89:                                               ; preds = %86, %89
  %90 = phi i64 [ %98, %89 ], [ %87, %86 ]
  %91 = phi i64 [ %99, %89 ], [ %49, %86 ]
  %92 = getelementptr inbounds i64, i64* %2, i64 %90
  %93 = load i64, i64* %92, align 8
  %94 = shl i64 %90, 3
  %95 = and i64 %94, 4294967288
  %96 = getelementptr inbounds i8, i8* %46, i64 %95
  %97 = bitcast i8* %96 to i64*
  store i64 %93, i64* %97, align 1
  %98 = add nuw nsw i64 %90, 1
  %99 = add i64 %91, -1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %89, !llvm.loop !6

101:                                              ; preds = %86, %89, %37, %31, %26
  %102 = phi i32 [ -12, %26 ], [ -12, %31 ], [ 0, %37 ], [ 0, %89 ], [ 0, %86 ]
  ret i32 %102
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_side_data_set_prft(%struct.AVPacket* nocapture, i64) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %25

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i64 0, i32 7
  %8 = load %struct.AVPacketSideData*, %struct.AVPacketSideData** %7, align 8
  %9 = sext i32 %4 to i64
  br label %12

10:                                               ; preds = %12
  %11 = icmp eq i64 %17, %9
  br i1 %11, label %25, label %12

12:                                               ; preds = %10, %6
  %13 = phi i64 [ 0, %6 ], [ %17, %10 ]
  %14 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %8, i64 %13, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 27
  %17 = add nuw nsw i64 %13, 1
  br i1 %16, label %18, label %10

18:                                               ; preds = %12
  %19 = and i64 %13, 4294967295
  %20 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %8, i64 %19, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %struct.AVPacketSideData, %struct.AVPacketSideData* %8, i64 %19, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %10, %2, %18
  %26 = tail call i8* @av_packet_new_side_data(%struct.AVPacket* %0, i32 27, i32 16)
  br label %27

27:                                               ; preds = %18, %25
  %28 = phi i32 [ 16, %25 ], [ %21, %18 ]
  %29 = phi i8* [ %26, %25 ], [ %23, %18 ]
  %30 = icmp eq i8* %29, null
  %31 = icmp ult i32 %28, 16
  %32 = or i1 %31, %30
  br i1 %32, label %37, label %33

33:                                               ; preds = %27
  %34 = bitcast i8* %29 to i64*
  store i64 %1, i64* %34, align 8
  %35 = getelementptr inbounds i8, i8* %29, i64 8
  %36 = bitcast i8* %35 to i32*
  store i32 0, i32* %36, align 8
  br label %37

37:                                               ; preds = %27, %33
  %38 = phi i32 [ 0, %33 ], [ -12, %27 ]
  ret i32 %38
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind readnone }
attributes #13 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{i32 1445856}
!5 = !{i32 1446014}
!6 = distinct !{!6, !3}
