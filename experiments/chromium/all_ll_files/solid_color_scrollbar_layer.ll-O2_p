; ModuleID = '../../cc/layers/solid_color_scrollbar_layer.cc'
source_filename = "../../cc/layers/solid_color_scrollbar_layer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::SolidColorScrollbarLayer" = type { %"class.cc::ScrollbarLayerBase", i32, i32 }
%"class.cc::ScrollbarLayerBase" = type { %"class.cc::Layer", i32, i8, %"struct.cc::ElementId" }
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.42", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.3" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::LayerTreeHost" = type opaque
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.35", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.37" }
%class.scoped_refptr = type opaque
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.scoped_refptr* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.0" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::pair"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.62", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.68" }
%"class.cc::PictureLayer" = type opaque
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.45" }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.57" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.50", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.48, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.48 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.49 }
%union.anon.49 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.62" = type { %"class.absl::optional_internal::optional_data.63" }
%"class.absl::optional_internal::optional_data.63" = type { %"class.absl::optional_internal::optional_data_base.64" }
%"class.absl::optional_internal::optional_data_base.64" = type { %"class.absl::optional_internal::optional_data_dtor_base.65" }
%"class.absl::optional_internal::optional_data_dtor_base.65" = type { i8, %union.anon.66 }
%union.anon.66 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.67 }
%class.scoped_refptr.67 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"class.std::__1::unique_ptr.70"*, %"class.std::__1::unique_ptr.70"*, %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::unique_ptr.70" = type opaque
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.std::__1::unique_ptr.70"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.11", %"class.std::__1::vector.11", %"class.std::__1::vector.18" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { i8**, i8**, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i8** }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.20" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"struct.cc::ElementId" = type { i64 }
%"class.cc::LayerImpl" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.26", i8, [7 x i8] }>
%"struct.cc::DrawProperties" = type { %"class.gfx::Transform", %"class.gfx::Transform", %"class.cc::Occlusion", float, i8, i8, i8, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo" }
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"struct.cc::PerformanceProperties" = type { i32, float, %"class.gfx::Transform" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.cc::Region"* }
%"class.cc::LayerTreeImpl" = type opaque
%"class.cc::SolidColorScrollbarLayerImpl" = type <{ %"class.cc::ScrollbarLayerImplBase", i32, i32, i32, [4 x i8] }>
%"class.cc::ScrollbarLayerImplBase" = type { %"class.cc::LayerImpl.base", %"struct.cc::ElementId", i8, float, float, float, float, i32, i8, float }
%"class.cc::LayerImpl.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.26", i8 }>
%"class.cc::Scrollbar" = type <{ i32 (...)**, %"class.base::RefCounted.87", [4 x i8] }>
%"class.base::RefCounted.87" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::vector.88" = type opaque
%class.sk_sp.89 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.90", [7 x i8] }>
%"struct.std::__1::atomic.90" = type { %"struct.std::__1::__atomic_base.91" }
%"struct.std::__1::__atomic_base.91" = type { %"struct.std::__1::__cxx_atomic_impl.92" }
%"struct.std::__1::__cxx_atomic_impl.92" = type { %"struct.std::__1::__cxx_atomic_base_impl.93" }
%"struct.std::__1::__cxx_atomic_base_impl.93" = type { i8 }
%"class.cc::MicroBenchmark" = type { i32 (...)**, %"class.base::OnceCallback", i8, i8, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }

@_ZTVN2cc24SolidColorScrollbarLayerE = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::Layer"*, i32)* @_ZN2cc5Layer18SetBackgroundColorEj to i8*), i8* bitcast (void (%"class.cc::SolidColorScrollbarLayer"*, %"class.gfx::Rect"*)* @_ZN2cc24SolidColorScrollbarLayer19SetNeedsDisplayRectERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.cc::SolidColorScrollbarLayer"*, float)* @_ZN2cc24SolidColorScrollbarLayer10SetOpacityEf to i8*), i8* bitcast (i1 (%"class.cc::SolidColorScrollbarLayer"*)* @_ZNK2cc24SolidColorScrollbarLayer11HitTestableEv to i8*), i8* bitcast (i1 (%"class.cc::ScrollbarLayerBase"*)* @_ZNK2cc18ScrollbarLayerBase26IsScrollbarLayerForTestingEv to i8*), i8* bitcast (void (%"class.cc::Layer"*, %"class.gfx::Rect"*, %"class.std::__1::vector.88"*)* @_ZN2cc5Layer14CaptureContentERKN3gfx4RectEPNSt3__16vectorINS_8NodeInfoENS5_9allocatorIS7_EEEE to i8*), i8* bitcast (void (%class.sk_sp.89*, %"class.cc::Layer"*)* @_ZNK2cc5Layer10GetPictureEv to i8*), i8* bitcast (void (%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*)* @_ZN2cc5Layer17RunMicroBenchmarkEPNS_14MicroBenchmarkE to i8*), i8* bitcast (%"class.cc::LayerImpl"* (%"class.cc::SolidColorScrollbarLayer"*, %"class.cc::LayerTreeImpl"*)* @_ZN2cc24SolidColorScrollbarLayer15CreateLayerImplEPNS_13LayerTreeImplE to i8*), i8* bitcast (void (%"class.cc::ScrollbarLayerBase"*, %"class.cc::LayerImpl"*)* @_ZN2cc18ScrollbarLayerBase16PushPropertiesToEPNS_9LayerImplE to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZN2cc5Layer6UpdateEv to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZN2cc5Layer28IsSnappedToPixelGridInTargetEv to i8*), i8* bitcast (void (%"class.cc::Layer"*, %"class.cc::LayerTreeHost"*)* @_ZN2cc5Layer16SetLayerTreeHostEPNS_13LayerTreeHostE to i8*), i8* bitcast (i1 (%"class.cc::SolidColorScrollbarLayer"*)* @_ZNK2cc24SolidColorScrollbarLayer29OpacityCanAnimateOnImplThreadEv to i8*), i8* bitcast (void (%"class.cc::SolidColorScrollbarLayer"*)* @_ZN2cc24SolidColorScrollbarLayerD2Ev to i8*), i8* bitcast (void (%"class.cc::SolidColorScrollbarLayer"*)* @_ZN2cc24SolidColorScrollbarLayerD0Ev to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZNK2cc5Layer18HasDrawableContentEv to i8*), i8* bitcast (i32 (%"class.cc::SolidColorScrollbarLayer"*)* @_ZNK2cc24SolidColorScrollbarLayer21GetScrollbarLayerTypeEv to i8*)] }, align 8

@_ZN2cc24SolidColorScrollbarLayerC1ENS_20ScrollbarOrientationEiib = hidden unnamed_addr alias void (%"class.cc::SolidColorScrollbarLayer"*, i32, i32, i32, i1), void (%"class.cc::SolidColorScrollbarLayer"*, i32, i32, i32, i1)* @_ZN2cc24SolidColorScrollbarLayerC2ENS_20ScrollbarOrientationEiib
@_ZN2cc24SolidColorScrollbarLayerD1Ev = hidden unnamed_addr alias void (%"class.cc::SolidColorScrollbarLayer"*), void (%"class.cc::SolidColorScrollbarLayer"*)* @_ZN2cc24SolidColorScrollbarLayerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::LayerImpl"* @_ZN2cc24SolidColorScrollbarLayer15CreateLayerImplEPNS_13LayerTreeImplE(%"class.cc::SolidColorScrollbarLayer"* nocapture readonly, %"class.cc::LayerTreeImpl"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::SolidColorScrollbarLayer", %"class.cc::SolidColorScrollbarLayer"* %0, i64 0, i32 0, i32 0, i32 5, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.cc::SolidColorScrollbarLayer", %"class.cc::SolidColorScrollbarLayer"* %0, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.cc::SolidColorScrollbarLayer", %"class.cc::SolidColorScrollbarLayer"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.cc::SolidColorScrollbarLayer", %"class.cc::SolidColorScrollbarLayer"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.cc::SolidColorScrollbarLayer", %"class.cc::SolidColorScrollbarLayer"* %0, i64 0, i32 0, i32 2
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp ne i8 %12, 0
  %14 = tail call %"class.cc::SolidColorScrollbarLayerImpl"* @_ZN2cc28SolidColorScrollbarLayerImpl6CreateEPNS_13LayerTreeImplEiNS_20ScrollbarOrientationEiib(%"class.cc::LayerTreeImpl"* %1, i32 %4, i32 %6, i32 %8, i32 %10, i1 zeroext %13) #6
  %15 = bitcast %"class.cc::SolidColorScrollbarLayerImpl"* %14 to %"class.cc::LayerImpl"*
  ret %"class.cc::LayerImpl"* %15
}

declare %"class.cc::SolidColorScrollbarLayerImpl"* @_ZN2cc28SolidColorScrollbarLayerImpl6CreateEPNS_13LayerTreeImplEiNS_20ScrollbarOrientationEiib(%"class.cc::LayerTreeImpl"*, i32, i32, i32, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::SolidColorScrollbarLayer"* @_ZN2cc24SolidColorScrollbarLayer13CreateOrReuseE13scoped_refptrINS_9ScrollbarEEPS0_(%"class.cc::Scrollbar"*, %"class.cc::SolidColorScrollbarLayer"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.cc::Scrollbar"* %0 to i32 (%"class.cc::Scrollbar"*)***
  %4 = load i32 (%"class.cc::Scrollbar"*)**, i32 (%"class.cc::Scrollbar"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.cc::Scrollbar"*)*, i32 (%"class.cc::Scrollbar"*)** %4, i64 1
  %6 = load i32 (%"class.cc::Scrollbar"*)*, i32 (%"class.cc::Scrollbar"*)** %5, align 8
  %7 = tail call i32 %6(%"class.cc::Scrollbar"* %0) #6
  %8 = icmp eq i32 %7, 0
  %9 = bitcast %"class.cc::Scrollbar"* %0 to { i64, i64 } (%"class.cc::Scrollbar"*)***
  %10 = load { i64, i64 } (%"class.cc::Scrollbar"*)**, { i64, i64 } (%"class.cc::Scrollbar"*)*** %9, align 8
  %11 = getelementptr inbounds { i64, i64 } (%"class.cc::Scrollbar"*)*, { i64, i64 } (%"class.cc::Scrollbar"*)** %10, i64 8
  %12 = load { i64, i64 } (%"class.cc::Scrollbar"*)*, { i64, i64 } (%"class.cc::Scrollbar"*)** %11, align 8
  %13 = tail call { i64, i64 } %12(%"class.cc::Scrollbar"* %0) #6
  %14 = extractvalue { i64, i64 } %13, 1
  %15 = lshr i64 %14, 32
  %16 = select i1 %8, i64 %15, i64 %14
  %17 = trunc i64 %16 to i32
  %18 = load { i64, i64 } (%"class.cc::Scrollbar"*)**, { i64, i64 } (%"class.cc::Scrollbar"*)*** %9, align 8
  %19 = getelementptr inbounds { i64, i64 } (%"class.cc::Scrollbar"*)*, { i64, i64 } (%"class.cc::Scrollbar"*)** %18, i64 9
  %20 = load { i64, i64 } (%"class.cc::Scrollbar"*)*, { i64, i64 } (%"class.cc::Scrollbar"*)** %19, align 8
  %21 = tail call { i64, i64 } %20(%"class.cc::Scrollbar"* %0) #6
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = lshr i64 %22, 32
  %24 = select i1 %8, i64 %22, i64 %23
  %25 = trunc i64 %24 to i32
  %26 = icmp eq %"class.cc::SolidColorScrollbarLayer"* %1, null
  br i1 %26, label %37, label %27

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.cc::SolidColorScrollbarLayer", %"class.cc::SolidColorScrollbarLayer"* %1, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, %17
  br i1 %30, label %31, label %37

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.cc::SolidColorScrollbarLayer", %"class.cc::SolidColorScrollbarLayer"* %1, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, %25
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.cc::SolidColorScrollbarLayer", %"class.cc::SolidColorScrollbarLayer"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  br label %58

37:                                               ; preds = %2, %31, %27
  %38 = load i32 (%"class.cc::Scrollbar"*)**, i32 (%"class.cc::Scrollbar"*)*** %3, align 8
  %39 = getelementptr inbounds i32 (%"class.cc::Scrollbar"*)*, i32 (%"class.cc::Scrollbar"*)** %38, i64 1
  %40 = load i32 (%"class.cc::Scrollbar"*)*, i32 (%"class.cc::Scrollbar"*)** %39, align 8
  %41 = tail call i32 %40(%"class.cc::Scrollbar"* %0) #6
  %42 = bitcast %"class.cc::Scrollbar"* %0 to i1 (%"class.cc::Scrollbar"*)***
  %43 = load i1 (%"class.cc::Scrollbar"*)**, i1 (%"class.cc::Scrollbar"*)*** %42, align 8
  %44 = getelementptr inbounds i1 (%"class.cc::Scrollbar"*)*, i1 (%"class.cc::Scrollbar"*)** %43, i64 2
  %45 = load i1 (%"class.cc::Scrollbar"*)*, i1 (%"class.cc::Scrollbar"*)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.cc::Scrollbar"* %0) #6
  %47 = tail call i8* @_Znwm(i64 256) #7
  %48 = bitcast i8* %47 to %"class.cc::SolidColorScrollbarLayer"*
  %49 = bitcast i8* %47 to %"class.cc::ScrollbarLayerBase"*
  tail call void @_ZN2cc18ScrollbarLayerBaseC2ENS_20ScrollbarOrientationEb(%"class.cc::ScrollbarLayerBase"* nonnull %49, i32 %41, i1 zeroext %46) #6
  %50 = bitcast i8* %47 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2cc24SolidColorScrollbarLayerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  %51 = getelementptr inbounds i8, i8* %47, i64 248
  %52 = bitcast i8* %51 to i32*
  store i32 %17, i32* %52, align 8
  %53 = getelementptr inbounds i8, i8* %47, i64 252
  %54 = bitcast i8* %53 to i32*
  store i32 %25, i32* %54, align 4
  %55 = bitcast i8* %47 to %"class.cc::Layer"*
  tail call void @_ZN2cc5Layer10SetOpacityEf(%"class.cc::Layer"* nonnull %55, float 0.000000e+00) #6
  %56 = getelementptr inbounds i8, i8* %47, i64 8
  %57 = bitcast i8* %56 to %"class.base::subtle::RefCountedBase"*
  br label %58

58:                                               ; preds = %37, %35
  %59 = phi %"class.base::subtle::RefCountedBase"* [ %57, %37 ], [ %36, %35 ]
  %60 = phi %"class.cc::SolidColorScrollbarLayer"* [ %48, %37 ], [ %1, %35 ]
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %59) #6
  %61 = icmp eq %"class.cc::Scrollbar"* %0, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.cc::Scrollbar", %"class.cc::Scrollbar"* %0, i64 0, i32 1
  %64 = getelementptr inbounds %"class.base::RefCounted.87", %"class.base::RefCounted.87"* %63, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %64) #6
  %65 = getelementptr inbounds %"class.base::RefCounted.87", %"class.base::RefCounted.87"* %63, i64 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %75

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.base::RefCounted.87", %"class.base::RefCounted.87"* %63, i64 -2
  %70 = bitcast %"class.base::RefCounted.87"* %69 to %"class.cc::Scrollbar"*
  %71 = bitcast %"class.base::RefCounted.87"* %69 to void (%"class.cc::Scrollbar"*)***
  %72 = load void (%"class.cc::Scrollbar"*)**, void (%"class.cc::Scrollbar"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.cc::Scrollbar"*)*, void (%"class.cc::Scrollbar"*)** %72, i64 20
  %74 = load void (%"class.cc::Scrollbar"*)*, void (%"class.cc::Scrollbar"*)** %73, align 8
  tail call void %74(%"class.cc::Scrollbar"* nonnull %70) #6
  br label %75

75:                                               ; preds = %58, %62, %68
  ret %"class.cc::SolidColorScrollbarLayer"* %60
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.cc::SolidColorScrollbarLayer"* @_ZN2cc24SolidColorScrollbarLayer6CreateENS_20ScrollbarOrientationEiib(i32, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = tail call i8* @_Znwm(i64 256) #7
  %6 = bitcast i8* %5 to %"class.cc::SolidColorScrollbarLayer"*
  %7 = bitcast i8* %5 to %"class.cc::ScrollbarLayerBase"*
  tail call void @_ZN2cc18ScrollbarLayerBaseC2ENS_20ScrollbarOrientationEb(%"class.cc::ScrollbarLayerBase"* nonnull %7, i32 %0, i1 zeroext %3) #6
  %8 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2cc24SolidColorScrollbarLayerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 248
  %10 = bitcast i8* %9 to i32*
  store i32 %1, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 252
  %12 = bitcast i8* %11 to i32*
  store i32 %2, i32* %12, align 4
  %13 = bitcast i8* %5 to %"class.cc::Layer"*
  tail call void @_ZN2cc5Layer10SetOpacityEf(%"class.cc::Layer"* nonnull %13, float 0.000000e+00) #6
  %14 = getelementptr inbounds i8, i8* %5, i64 8
  %15 = bitcast i8* %14 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %15) #6
  ret %"class.cc::SolidColorScrollbarLayer"* %6
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc24SolidColorScrollbarLayerC2ENS_20ScrollbarOrientationEiib(%"class.cc::SolidColorScrollbarLayer"*, i32, i32, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.cc::SolidColorScrollbarLayer", %"class.cc::SolidColorScrollbarLayer"* %0, i64 0, i32 0
  tail call void @_ZN2cc18ScrollbarLayerBaseC2ENS_20ScrollbarOrientationEb(%"class.cc::ScrollbarLayerBase"* %6, i32 %1, i1 zeroext %4) #6
  %7 = getelementptr inbounds %"class.cc::SolidColorScrollbarLayer", %"class.cc::SolidColorScrollbarLayer"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2cc24SolidColorScrollbarLayerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.cc::SolidColorScrollbarLayer", %"class.cc::SolidColorScrollbarLayer"* %0, i64 0, i32 1
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.cc::SolidColorScrollbarLayer", %"class.cc::SolidColorScrollbarLayer"* %0, i64 0, i32 2
  store i32 %3, i32* %9, align 4
  %10 = getelementptr inbounds %"class.cc::SolidColorScrollbarLayer", %"class.cc::SolidColorScrollbarLayer"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2cc5Layer10SetOpacityEf(%"class.cc::Layer"* %10, float 0.000000e+00) #6
  ret void
}

declare void @_ZN2cc18ScrollbarLayerBaseC2ENS_20ScrollbarOrientationEb(%"class.cc::ScrollbarLayerBase"*, i32, i1 zeroext) unnamed_addr #1

declare void @_ZN2cc5Layer10SetOpacityEf(%"class.cc::Layer"*, float) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc18ScrollbarLayerBaseD2Ev(%"class.cc::ScrollbarLayerBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc24SolidColorScrollbarLayerD2Ev(%"class.cc::SolidColorScrollbarLayer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::SolidColorScrollbarLayer", %"class.cc::SolidColorScrollbarLayer"* %0, i64 0, i32 0
  tail call void @_ZN2cc18ScrollbarLayerBaseD2Ev(%"class.cc::ScrollbarLayerBase"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc24SolidColorScrollbarLayerD0Ev(%"class.cc::SolidColorScrollbarLayer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::SolidColorScrollbarLayer", %"class.cc::SolidColorScrollbarLayer"* %0, i64 0, i32 0
  tail call void @_ZN2cc18ScrollbarLayerBaseD2Ev(%"class.cc::ScrollbarLayerBase"* %2) #6
  %3 = bitcast %"class.cc::SolidColorScrollbarLayer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc24SolidColorScrollbarLayer10SetOpacityEf(%"class.cc::SolidColorScrollbarLayer"*, float) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::SolidColorScrollbarLayer", %"class.cc::SolidColorScrollbarLayer"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2cc5Layer10SetOpacityEf(%"class.cc::Layer"* %3, float %1) #6
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc24SolidColorScrollbarLayer19SetNeedsDisplayRectERKN3gfx4RectE(%"class.cc::SolidColorScrollbarLayer"* nocapture, %"class.gfx::Rect"* nocapture dereferenceable(16)) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2cc24SolidColorScrollbarLayer29OpacityCanAnimateOnImplThreadEv(%"class.cc::SolidColorScrollbarLayer"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2cc24SolidColorScrollbarLayer11HitTestableEv(%"class.cc::SolidColorScrollbarLayer"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK2cc24SolidColorScrollbarLayer21GetScrollbarLayerTypeEv(%"class.cc::SolidColorScrollbarLayer"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 0
}

declare void @_ZN2cc5Layer18SetBackgroundColorEj(%"class.cc::Layer"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK2cc18ScrollbarLayerBase26IsScrollbarLayerForTestingEv(%"class.cc::ScrollbarLayerBase"*) unnamed_addr #1

declare void @_ZN2cc5Layer14CaptureContentERKN3gfx4RectEPNSt3__16vectorINS_8NodeInfoENS5_9allocatorIS7_EEEE(%"class.cc::Layer"*, %"class.gfx::Rect"* dereferenceable(16), %"class.std::__1::vector.88"*) unnamed_addr #1

declare void @_ZNK2cc5Layer10GetPictureEv(%class.sk_sp.89* sret, %"class.cc::Layer"*) unnamed_addr #1

declare void @_ZN2cc5Layer17RunMicroBenchmarkEPNS_14MicroBenchmarkE(%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*) unnamed_addr #1

declare void @_ZN2cc18ScrollbarLayerBase16PushPropertiesToEPNS_9LayerImplE(%"class.cc::ScrollbarLayerBase"*, %"class.cc::LayerImpl"*) unnamed_addr #1

declare zeroext i1 @_ZN2cc5Layer6UpdateEv(%"class.cc::Layer"*) unnamed_addr #1

declare zeroext i1 @_ZN2cc5Layer28IsSnappedToPixelGridInTargetEv(%"class.cc::Layer"*) unnamed_addr #1

declare void @_ZN2cc5Layer16SetLayerTreeHostEPNS_13LayerTreeHostE(%"class.cc::Layer"*, %"class.cc::LayerTreeHost"*) unnamed_addr #1

declare zeroext i1 @_ZNK2cc5Layer18HasDrawableContentEv(%"class.cc::Layer"*) unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
