; ModuleID = '../../buildtools/third_party/libc++abi/trunk/src/fallback_malloc.cpp'
source_filename = "../../buildtools/third_party/libc++abi/trunk/src/fallback_malloc.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.(anonymous namespace)::heap_node" = type { i16, i16 }

@_ZN12_GLOBAL__N_110heap_mutexE = internal global %union.pthread_mutex_t zeroinitializer, align 8
@_ZN12_GLOBAL__N_18freelistE = internal unnamed_addr global %"struct.(anonymous namespace)::heap_node"* null, align 8
@_ZN12_GLOBAL__N_14heapE = internal global [512 x i8] zeroinitializer, align 16

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN10__cxxabiv130__aligned_malloc_with_fallbackEm(i64) local_unnamed_addr #0 personality i32 (...)* @__gxx_personality_v0 {
  %2 = alloca i8*, align 8
  %3 = icmp eq i64 %0, 0
  %4 = select i1 %3, i64 1, i64 %0
  %5 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  store i8* null, i8** %2, align 8, !tbaa !2
  %6 = call i32 @posix_memalign(i8** nonnull %2, i64 16, i64 %4) #4
  %7 = load i8*, i8** %2, align 8, !tbaa !2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %65

9:                                                ; preds = %1
  %10 = add i64 %4, 3
  %11 = lshr i64 %10, 2
  %12 = add nuw nsw i64 %11, 1
  %13 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @_ZN12_GLOBAL__N_110heap_mutexE) #4
  %14 = load %"struct.(anonymous namespace)::heap_node"*, %"struct.(anonymous namespace)::heap_node"** @_ZN12_GLOBAL__N_18freelistE, align 8, !tbaa !2
  %15 = icmp eq %"struct.(anonymous namespace)::heap_node"* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %9
  store %"struct.(anonymous namespace)::heap_node"* bitcast ([512 x i8]* @_ZN12_GLOBAL__N_14heapE to %"struct.(anonymous namespace)::heap_node"*), %"struct.(anonymous namespace)::heap_node"** @_ZN12_GLOBAL__N_18freelistE, align 8, !tbaa !2
  store i16 128, i16* bitcast ([512 x i8]* @_ZN12_GLOBAL__N_14heapE to i16*), align 16, !tbaa !6
  store i16 128, i16* bitcast (i8* getelementptr inbounds ([512 x i8], [512 x i8]* @_ZN12_GLOBAL__N_14heapE, i64 0, i64 2) to i16*), align 2, !tbaa !9
  br label %17

17:                                               ; preds = %16, %9
  %18 = phi %"struct.(anonymous namespace)::heap_node"* [ bitcast ([512 x i8]* @_ZN12_GLOBAL__N_14heapE to %"struct.(anonymous namespace)::heap_node"*), %16 ], [ %14, %9 ]
  %19 = icmp eq %"struct.(anonymous namespace)::heap_node"* %18, null
  %20 = icmp eq %"struct.(anonymous namespace)::heap_node"* %18, bitcast (i8* getelementptr inbounds ([512 x i8], [512 x i8]* @_ZN12_GLOBAL__N_14heapE, i64 1, i64 0) to %"struct.(anonymous namespace)::heap_node"*)
  %21 = or i1 %19, %20
  br i1 %21, label %62, label %22

22:                                               ; preds = %17, %54
  %23 = phi %"struct.(anonymous namespace)::heap_node"* [ %60, %54 ], [ %18, %17 ]
  %24 = phi %"struct.(anonymous namespace)::heap_node"* [ %23, %54 ], [ null, %17 ]
  %25 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %23, i64 0, i32 1
  %26 = load i16, i16* %25, align 2, !tbaa !9
  %27 = zext i16 %26 to i64
  %28 = icmp ult i64 %12, %27
  br i1 %28, label %29, label %39

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %23, i64 0, i32 1
  %31 = trunc i64 %12 to i16
  %32 = sub i16 %26, %31
  store i16 %32, i16* %30, align 2, !tbaa !9
  %33 = zext i16 %32 to i64
  %34 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %23, i64 %33
  %35 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %34, i64 0, i32 0
  store i16 0, i16* %35, align 2, !tbaa !6
  %36 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %23, i64 %33, i32 1
  store i16 %31, i16* %36, align 2, !tbaa !9
  %37 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %34, i64 1
  %38 = bitcast %"struct.(anonymous namespace)::heap_node"* %37 to i8*
  br label %62

39:                                               ; preds = %22
  %40 = icmp eq i64 %12, %27
  br i1 %40, label %41, label %54

41:                                               ; preds = %39
  %42 = icmp eq %"struct.(anonymous namespace)::heap_node"* %24, null
  %43 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %23, i64 0, i32 0
  %44 = load i16, i16* %43, align 2, !tbaa !6
  br i1 %42, label %45, label %49

45:                                               ; preds = %41
  %46 = zext i16 %44 to i64
  %47 = shl nuw nsw i64 %46, 2
  %48 = getelementptr inbounds [512 x i8], [512 x i8]* @_ZN12_GLOBAL__N_14heapE, i64 0, i64 %47
  store i8* %48, i8** bitcast (%"struct.(anonymous namespace)::heap_node"** @_ZN12_GLOBAL__N_18freelistE to i8**), align 8, !tbaa !2
  br label %51

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %24, i64 0, i32 0
  store i16 %44, i16* %50, align 2, !tbaa !6
  br label %51

51:                                               ; preds = %49, %45
  store i16 0, i16* %43, align 2, !tbaa !6
  %52 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %23, i64 1
  %53 = bitcast %"struct.(anonymous namespace)::heap_node"* %52 to i8*
  br label %62

54:                                               ; preds = %39
  %55 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %23, i64 0, i32 0
  %56 = load i16, i16* %55, align 2, !tbaa !6
  %57 = zext i16 %56 to i64
  %58 = shl nuw nsw i64 %57, 2
  %59 = getelementptr inbounds [512 x i8], [512 x i8]* @_ZN12_GLOBAL__N_14heapE, i64 0, i64 %58
  %60 = bitcast i8* %59 to %"struct.(anonymous namespace)::heap_node"*
  %61 = icmp eq i8* %59, getelementptr inbounds ([512 x i8], [512 x i8]* @_ZN12_GLOBAL__N_14heapE, i64 1, i64 0)
  br i1 %61, label %62, label %22

62:                                               ; preds = %54, %17, %29, %51
  %63 = phi i8* [ %38, %29 ], [ %53, %51 ], [ null, %17 ], [ null, %54 ]
  %64 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @_ZN12_GLOBAL__N_110heap_mutexE) #4
  br label %65

65:                                               ; preds = %1, %62
  %66 = phi i8* [ %63, %62 ], [ %7, %1 ]
  ret i8* %66
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN10__cxxabiv122__calloc_with_fallbackEmm(i64, i64) local_unnamed_addr #0 personality i32 (...)* @__gxx_personality_v0 {
  %3 = tail call noalias i8* @calloc(i64 %0, i64 %1) #4
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %64

5:                                                ; preds = %2
  %6 = mul i64 %1, %0
  %7 = add i64 %6, 3
  %8 = lshr i64 %7, 2
  %9 = add nuw nsw i64 %8, 1
  %10 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @_ZN12_GLOBAL__N_110heap_mutexE) #4
  %11 = load %"struct.(anonymous namespace)::heap_node"*, %"struct.(anonymous namespace)::heap_node"** @_ZN12_GLOBAL__N_18freelistE, align 8, !tbaa !2
  %12 = icmp eq %"struct.(anonymous namespace)::heap_node"* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %5
  store %"struct.(anonymous namespace)::heap_node"* bitcast ([512 x i8]* @_ZN12_GLOBAL__N_14heapE to %"struct.(anonymous namespace)::heap_node"*), %"struct.(anonymous namespace)::heap_node"** @_ZN12_GLOBAL__N_18freelistE, align 8, !tbaa !2
  store i16 128, i16* bitcast ([512 x i8]* @_ZN12_GLOBAL__N_14heapE to i16*), align 16, !tbaa !6
  store i16 128, i16* bitcast (i8* getelementptr inbounds ([512 x i8], [512 x i8]* @_ZN12_GLOBAL__N_14heapE, i64 0, i64 2) to i16*), align 2, !tbaa !9
  br label %14

14:                                               ; preds = %13, %5
  %15 = phi %"struct.(anonymous namespace)::heap_node"* [ bitcast ([512 x i8]* @_ZN12_GLOBAL__N_14heapE to %"struct.(anonymous namespace)::heap_node"*), %13 ], [ %11, %5 ]
  %16 = icmp eq %"struct.(anonymous namespace)::heap_node"* %15, null
  %17 = icmp eq %"struct.(anonymous namespace)::heap_node"* %15, bitcast (i8* getelementptr inbounds ([512 x i8], [512 x i8]* @_ZN12_GLOBAL__N_14heapE, i64 1, i64 0) to %"struct.(anonymous namespace)::heap_node"*)
  %18 = or i1 %16, %17
  br i1 %18, label %55, label %19

19:                                               ; preds = %14, %47
  %20 = phi %"struct.(anonymous namespace)::heap_node"* [ %53, %47 ], [ %15, %14 ]
  %21 = phi %"struct.(anonymous namespace)::heap_node"* [ %20, %47 ], [ null, %14 ]
  %22 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %20, i64 0, i32 1
  %23 = load i16, i16* %22, align 2, !tbaa !9
  %24 = zext i16 %23 to i64
  %25 = icmp ult i64 %9, %24
  br i1 %25, label %26, label %34

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %20, i64 0, i32 1
  %28 = trunc i64 %9 to i16
  %29 = sub i16 %23, %28
  store i16 %29, i16* %27, align 2, !tbaa !9
  %30 = zext i16 %29 to i64
  %31 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %20, i64 %30
  %32 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %31, i64 0, i32 0
  store i16 0, i16* %32, align 2, !tbaa !6
  %33 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %20, i64 %30, i32 1
  store i16 %28, i16* %33, align 2, !tbaa !9
  br label %57

34:                                               ; preds = %19
  %35 = icmp eq i64 %9, %24
  br i1 %35, label %36, label %47

36:                                               ; preds = %34
  %37 = icmp eq %"struct.(anonymous namespace)::heap_node"* %21, null
  %38 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %20, i64 0, i32 0
  %39 = load i16, i16* %38, align 2, !tbaa !6
  br i1 %37, label %40, label %44

40:                                               ; preds = %36
  %41 = zext i16 %39 to i64
  %42 = shl nuw nsw i64 %41, 2
  %43 = getelementptr inbounds [512 x i8], [512 x i8]* @_ZN12_GLOBAL__N_14heapE, i64 0, i64 %42
  store i8* %43, i8** bitcast (%"struct.(anonymous namespace)::heap_node"** @_ZN12_GLOBAL__N_18freelistE to i8**), align 8, !tbaa !2
  br label %46

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %21, i64 0, i32 0
  store i16 %39, i16* %45, align 2, !tbaa !6
  br label %46

46:                                               ; preds = %44, %40
  store i16 0, i16* %38, align 2, !tbaa !6
  br label %57

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %20, i64 0, i32 0
  %49 = load i16, i16* %48, align 2, !tbaa !6
  %50 = zext i16 %49 to i64
  %51 = shl nuw nsw i64 %50, 2
  %52 = getelementptr inbounds [512 x i8], [512 x i8]* @_ZN12_GLOBAL__N_14heapE, i64 0, i64 %51
  %53 = bitcast i8* %52 to %"struct.(anonymous namespace)::heap_node"*
  %54 = icmp eq i8* %52, getelementptr inbounds ([512 x i8], [512 x i8]* @_ZN12_GLOBAL__N_14heapE, i64 1, i64 0)
  br i1 %54, label %55, label %19

55:                                               ; preds = %47, %14
  %56 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @_ZN12_GLOBAL__N_110heap_mutexE) #4
  br label %64

57:                                               ; preds = %26, %46
  %58 = phi %"struct.(anonymous namespace)::heap_node"* [ %31, %26 ], [ %20, %46 ]
  %59 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %58, i64 1
  %60 = bitcast %"struct.(anonymous namespace)::heap_node"* %59 to i8*
  %61 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @_ZN12_GLOBAL__N_110heap_mutexE) #4
  %62 = icmp eq %"struct.(anonymous namespace)::heap_node"* %59, null
  br i1 %62, label %64, label %63

63:                                               ; preds = %57
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %60, i8 0, i64 %6, i1 false)
  br label %64

64:                                               ; preds = %55, %63, %57, %2
  %65 = phi i8* [ %3, %2 ], [ null, %57 ], [ %60, %63 ], [ null, %55 ]
  ret i8* %65
}

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10__cxxabiv128__aligned_free_with_fallbackEPv(i8*) local_unnamed_addr #0 personality i32 (...)* @__gxx_personality_v0 {
  %2 = icmp uge i8* %0, getelementptr inbounds ([512 x i8], [512 x i8]* @_ZN12_GLOBAL__N_14heapE, i64 0, i64 0)
  %3 = icmp ult i8* %0, getelementptr inbounds ([512 x i8], [512 x i8]* @_ZN12_GLOBAL__N_14heapE, i64 1, i64 0)
  %4 = and i1 %3, %2
  br i1 %4, label %5, label %61

5:                                                ; preds = %1
  %6 = getelementptr inbounds i8, i8* %0, i64 -4
  %7 = bitcast i8* %6 to %"struct.(anonymous namespace)::heap_node"*
  %8 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @_ZN12_GLOBAL__N_110heap_mutexE) #4
  %9 = load %"struct.(anonymous namespace)::heap_node"*, %"struct.(anonymous namespace)::heap_node"** @_ZN12_GLOBAL__N_18freelistE, align 8, !tbaa !2
  %10 = icmp eq %"struct.(anonymous namespace)::heap_node"* %9, null
  %11 = icmp eq %"struct.(anonymous namespace)::heap_node"* %9, bitcast (i8* getelementptr inbounds ([512 x i8], [512 x i8]* @_ZN12_GLOBAL__N_14heapE, i64 1, i64 0) to %"struct.(anonymous namespace)::heap_node"*)
  %12 = or i1 %10, %11
  br i1 %12, label %53, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds i8, i8* %0, i64 -2
  %15 = bitcast i8* %14 to i16*
  %16 = load i16, i16* %15, align 2, !tbaa !9
  %17 = zext i16 %16 to i64
  %18 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %7, i64 %17
  br label %19

19:                                               ; preds = %45, %13
  %20 = phi %"struct.(anonymous namespace)::heap_node"* [ null, %13 ], [ %21, %45 ]
  %21 = phi %"struct.(anonymous namespace)::heap_node"* [ %9, %13 ], [ %51, %45 ]
  %22 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %21, i64 0, i32 1
  %23 = load i16, i16* %22, align 2, !tbaa !9
  %24 = zext i16 %23 to i64
  %25 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %21, i64 %24
  %26 = icmp eq %"struct.(anonymous namespace)::heap_node"* %25, %7
  br i1 %26, label %27, label %30

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %21, i64 0, i32 1
  %29 = add i16 %23, %16
  store i16 %29, i16* %28, align 2, !tbaa !9
  br label %59

30:                                               ; preds = %19
  %31 = icmp eq %"struct.(anonymous namespace)::heap_node"* %18, %21
  br i1 %31, label %32, label %45

32:                                               ; preds = %30
  %33 = add i16 %23, %16
  store i16 %33, i16* %15, align 2, !tbaa !9
  %34 = icmp eq %"struct.(anonymous namespace)::heap_node"* %20, null
  br i1 %34, label %35, label %39

35:                                               ; preds = %32
  store i8* %6, i8** bitcast (%"struct.(anonymous namespace)::heap_node"** @_ZN12_GLOBAL__N_18freelistE to i8**), align 8, !tbaa !2
  %36 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %18, i64 0, i32 0
  %37 = load i16, i16* %36, align 2, !tbaa !6
  %38 = bitcast i8* %6 to i16*
  store i16 %37, i16* %38, align 2, !tbaa !6
  br label %59

39:                                               ; preds = %32
  %40 = ptrtoint i8* %6 to i64
  %41 = sub i64 %40, ptrtoint ([512 x i8]* @_ZN12_GLOBAL__N_14heapE to i64)
  %42 = lshr i64 %41, 2
  %43 = trunc i64 %42 to i16
  %44 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %20, i64 0, i32 0
  store i16 %43, i16* %44, align 2, !tbaa !6
  br label %59

45:                                               ; preds = %30
  %46 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %21, i64 0, i32 0
  %47 = load i16, i16* %46, align 2, !tbaa !6
  %48 = zext i16 %47 to i64
  %49 = shl nuw nsw i64 %48, 2
  %50 = getelementptr inbounds [512 x i8], [512 x i8]* @_ZN12_GLOBAL__N_14heapE, i64 0, i64 %49
  %51 = bitcast i8* %50 to %"struct.(anonymous namespace)::heap_node"*
  %52 = icmp eq i8* %50, getelementptr inbounds ([512 x i8], [512 x i8]* @_ZN12_GLOBAL__N_14heapE, i64 1, i64 0)
  br i1 %52, label %53, label %19

53:                                               ; preds = %45, %5
  %54 = ptrtoint %"struct.(anonymous namespace)::heap_node"* %9 to i64
  %55 = sub i64 %54, ptrtoint ([512 x i8]* @_ZN12_GLOBAL__N_14heapE to i64)
  %56 = lshr i64 %55, 2
  %57 = trunc i64 %56 to i16
  %58 = bitcast i8* %6 to i16*
  store i16 %57, i16* %58, align 2, !tbaa !6
  store i8* %6, i8** bitcast (%"struct.(anonymous namespace)::heap_node"** @_ZN12_GLOBAL__N_18freelistE to i8**), align 8, !tbaa !2
  br label %59

59:                                               ; preds = %27, %35, %39, %53
  %60 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @_ZN12_GLOBAL__N_110heap_mutexE) #4
  br label %62

61:                                               ; preds = %1
  tail call void @free(i8* %0) #4
  br label %62

62:                                               ; preds = %61, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10__cxxabiv120__free_with_fallbackEPv(i8*) local_unnamed_addr #0 personality i32 (...)* @__gxx_personality_v0 {
  %2 = icmp uge i8* %0, getelementptr inbounds ([512 x i8], [512 x i8]* @_ZN12_GLOBAL__N_14heapE, i64 0, i64 0)
  %3 = icmp ult i8* %0, getelementptr inbounds ([512 x i8], [512 x i8]* @_ZN12_GLOBAL__N_14heapE, i64 1, i64 0)
  %4 = and i1 %3, %2
  br i1 %4, label %5, label %61

5:                                                ; preds = %1
  %6 = getelementptr inbounds i8, i8* %0, i64 -4
  %7 = bitcast i8* %6 to %"struct.(anonymous namespace)::heap_node"*
  %8 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull @_ZN12_GLOBAL__N_110heap_mutexE) #4
  %9 = load %"struct.(anonymous namespace)::heap_node"*, %"struct.(anonymous namespace)::heap_node"** @_ZN12_GLOBAL__N_18freelistE, align 8, !tbaa !2
  %10 = icmp eq %"struct.(anonymous namespace)::heap_node"* %9, null
  %11 = icmp eq %"struct.(anonymous namespace)::heap_node"* %9, bitcast (i8* getelementptr inbounds ([512 x i8], [512 x i8]* @_ZN12_GLOBAL__N_14heapE, i64 1, i64 0) to %"struct.(anonymous namespace)::heap_node"*)
  %12 = or i1 %10, %11
  br i1 %12, label %53, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds i8, i8* %0, i64 -2
  %15 = bitcast i8* %14 to i16*
  %16 = load i16, i16* %15, align 2, !tbaa !9
  %17 = zext i16 %16 to i64
  %18 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %7, i64 %17
  br label %19

19:                                               ; preds = %45, %13
  %20 = phi %"struct.(anonymous namespace)::heap_node"* [ null, %13 ], [ %21, %45 ]
  %21 = phi %"struct.(anonymous namespace)::heap_node"* [ %9, %13 ], [ %51, %45 ]
  %22 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %21, i64 0, i32 1
  %23 = load i16, i16* %22, align 2, !tbaa !9
  %24 = zext i16 %23 to i64
  %25 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %21, i64 %24
  %26 = icmp eq %"struct.(anonymous namespace)::heap_node"* %25, %7
  br i1 %26, label %27, label %30

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %21, i64 0, i32 1
  %29 = add i16 %23, %16
  store i16 %29, i16* %28, align 2, !tbaa !9
  br label %59

30:                                               ; preds = %19
  %31 = icmp eq %"struct.(anonymous namespace)::heap_node"* %18, %21
  br i1 %31, label %32, label %45

32:                                               ; preds = %30
  %33 = add i16 %23, %16
  store i16 %33, i16* %15, align 2, !tbaa !9
  %34 = icmp eq %"struct.(anonymous namespace)::heap_node"* %20, null
  br i1 %34, label %35, label %39

35:                                               ; preds = %32
  store i8* %6, i8** bitcast (%"struct.(anonymous namespace)::heap_node"** @_ZN12_GLOBAL__N_18freelistE to i8**), align 8, !tbaa !2
  %36 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %18, i64 0, i32 0
  %37 = load i16, i16* %36, align 2, !tbaa !6
  %38 = bitcast i8* %6 to i16*
  store i16 %37, i16* %38, align 2, !tbaa !6
  br label %59

39:                                               ; preds = %32
  %40 = ptrtoint i8* %6 to i64
  %41 = sub i64 %40, ptrtoint ([512 x i8]* @_ZN12_GLOBAL__N_14heapE to i64)
  %42 = lshr i64 %41, 2
  %43 = trunc i64 %42 to i16
  %44 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %20, i64 0, i32 0
  store i16 %43, i16* %44, align 2, !tbaa !6
  br label %59

45:                                               ; preds = %30
  %46 = getelementptr inbounds %"struct.(anonymous namespace)::heap_node", %"struct.(anonymous namespace)::heap_node"* %21, i64 0, i32 0
  %47 = load i16, i16* %46, align 2, !tbaa !6
  %48 = zext i16 %47 to i64
  %49 = shl nuw nsw i64 %48, 2
  %50 = getelementptr inbounds [512 x i8], [512 x i8]* @_ZN12_GLOBAL__N_14heapE, i64 0, i64 %49
  %51 = bitcast i8* %50 to %"struct.(anonymous namespace)::heap_node"*
  %52 = icmp eq i8* %50, getelementptr inbounds ([512 x i8], [512 x i8]* @_ZN12_GLOBAL__N_14heapE, i64 1, i64 0)
  br i1 %52, label %53, label %19

53:                                               ; preds = %45, %5
  %54 = ptrtoint %"struct.(anonymous namespace)::heap_node"* %9 to i64
  %55 = sub i64 %54, ptrtoint ([512 x i8]* @_ZN12_GLOBAL__N_14heapE to i64)
  %56 = lshr i64 %55, 2
  %57 = trunc i64 %56 to i16
  %58 = bitcast i8* %6 to i16*
  store i16 %57, i16* %58, align 2, !tbaa !6
  store i8* %6, i8** bitcast (%"struct.(anonymous namespace)::heap_node"** @_ZN12_GLOBAL__N_18freelistE to i8**), align 8, !tbaa !2
  br label %59

59:                                               ; preds = %27, %35, %39, %53
  %60 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull @_ZN12_GLOBAL__N_110heap_mutexE) #4
  br label %62

61:                                               ; preds = %1
  tail call void @free(i8* %0) #4
  br label %62

62:                                               ; preds = %61, %59
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @posix_memalign(i8**, i64, i64) local_unnamed_addr #2

declare i32 @__gxx_personality_v0(...)

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !3, i64 0}
!3 = !{!"any pointer", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C++ TBAA"}
!6 = !{!7, !8, i64 0}
!7 = !{!"_ZTSN12_GLOBAL__N_19heap_nodeE", !8, i64 0, !8, i64 2}
!8 = !{!"short", !4, i64 0}
!9 = !{!7, !8, i64 2}
