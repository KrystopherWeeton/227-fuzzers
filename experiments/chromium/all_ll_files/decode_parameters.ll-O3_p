; ModuleID = '../../third_party/opus/src/silk/decode_parameters.c'
source_filename = "../../third_party/opus/src/silk/decode_parameters.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.silk_decoder_state = type { i32, [320 x i32], [16 x i32], [480 x i16], i32, i8, i32, i32, i32, i32, i32, i32, i32, [16 x i16], i32, i8*, i8*, i32, i32, i32, i16, [3 x i32], i32, [3 x i32], %struct._silk_resampler_state_struct, %struct.silk_NLSF_CB_struct*, %struct.SideInfoIndices, %struct.silk_CNG_struct, i32, i32, i32, %struct.silk_PLC_struct }
%struct._silk_resampler_state_struct = type { [6 x i32], %union.anon, [48 x i16], i32, i32, i32, i32, i32, i32, i32, i32, i16* }
%union.anon = type { [36 x i32] }
%struct.silk_NLSF_CB_struct = type { i16, i16, i16, i16, i8*, i16*, i8*, i8*, i8*, i8*, i8*, i16* }
%struct.SideInfoIndices = type { [4 x i8], [4 x i8], [17 x i8], i16, i8, i8, i8, i8, i8, i8, i8 }
%struct.silk_CNG_struct = type { [320 x i32], [16 x i16], [16 x i32], i32, i32, i32 }
%struct.silk_PLC_struct = type { i32, [5 x i16], [16 x i16], i32, i32, i16, i32, i32, i16, [2 x i32], i32, i32, i32 }
%struct.silk_decoder_control = type { [4 x i32], [4 x i32], [2 x [16 x i16]], [20 x i16], i32 }

@silk_LTP_vq_ptrs_Q7 = external local_unnamed_addr constant [3 x i8*], align 16
@silk_LTPScales_table_Q14 = external local_unnamed_addr constant [3 x i16], align 2

; Function Attrs: nounwind ssp uwtable
define hidden void @silk_decode_parameters(%struct.silk_decoder_state*, %struct.silk_decoder_control*, i32) local_unnamed_addr #0 {
  %4 = alloca [16 x i16], align 16
  %5 = alloca [16 x i16], align 16
  %6 = bitcast [16 x i16]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #3
  %7 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 0
  %8 = bitcast [16 x i16]* %5 to i8*
  %9 = bitcast [16 x i16]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #3
  %10 = getelementptr inbounds [16 x i16], [16 x i16]* %5, i64 0, i64 0
  %11 = getelementptr inbounds %struct.silk_decoder_control, %struct.silk_decoder_control* %1, i64 0, i32 1, i64 0
  %12 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 0, i64 0
  %13 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 5
  %14 = icmp eq i32 %2, 2
  %15 = zext i1 %14 to i32
  %16 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 8
  %17 = bitcast [16 x i16]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -86, i64 32, i1 false)
  %18 = load i32, i32* %16, align 4
  tail call void @silk_gains_dequant(i32* %11, i8* %12, i8* %13, i32 %15, i32 %18) #3
  %19 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 2, i64 0
  %20 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 25
  %21 = load %struct.silk_NLSF_CB_struct*, %struct.silk_NLSF_CB_struct** %20, align 8
  call void @silk_NLSF_decode(i16* nonnull %7, i8* %19, %struct.silk_NLSF_CB_struct* %21) #3
  %22 = getelementptr inbounds %struct.silk_decoder_control, %struct.silk_decoder_control* %1, i64 0, i32 2
  %23 = getelementptr inbounds %struct.silk_decoder_control, %struct.silk_decoder_control* %1, i64 0, i32 2, i64 1, i64 0
  %24 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 12
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 30
  %27 = load i32, i32* %26, align 8
  call void @silk_NLSF2A(i16* %23, i16* nonnull %7, i32 %25, i32 %27) #3
  %28 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 14
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 1
  %31 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 7
  br i1 %30, label %32, label %33

32:                                               ; preds = %3
  store i8 4, i8* %31, align 1
  br label %133

33:                                               ; preds = %3
  %34 = load i8, i8* %31, align 1
  %35 = icmp slt i8 %34, 4
  br i1 %35, label %36, label %133

36:                                               ; preds = %33
  %37 = load i32, i32* %24, align 4
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %130

39:                                               ; preds = %36
  %40 = sext i8 %34 to i32
  %41 = sext i32 %37 to i64
  %42 = icmp ult i32 %37, 8
  br i1 %42, label %112, label %43

43:                                               ; preds = %39
  %44 = and i64 %41, -8
  %45 = insertelement <8 x i32> undef, i32 %40, i32 0
  %46 = shufflevector <8 x i32> %45, <8 x i32> undef, <8 x i32> zeroinitializer
  %47 = add nsw i64 %44, -8
  %48 = lshr exact i64 %47, 3
  %49 = add nuw nsw i64 %48, 1
  %50 = and i64 %49, 1
  %51 = icmp eq i64 %47, 0
  br i1 %51, label %91, label %52

52:                                               ; preds = %43
  %53 = sub nuw nsw i64 %49, %50
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi i64 [ 0, %52 ], [ %88, %54 ]
  %56 = phi i64 [ %53, %52 ], [ %89, %54 ]
  %57 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 13, i64 %55
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2
  %60 = sext <8 x i16> %59 to <8 x i32>
  %61 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 %55
  %62 = bitcast i16* %61 to <8 x i16>*
  %63 = load <8 x i16>, <8 x i16>* %62, align 16
  %64 = sext <8 x i16> %63 to <8 x i32>
  %65 = sub nsw <8 x i32> %64, %60
  %66 = mul nsw <8 x i32> %65, %46
  %67 = lshr <8 x i32> %66, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %68 = trunc <8 x i32> %67 to <8 x i16>
  %69 = add <8 x i16> %59, %68
  %70 = getelementptr inbounds [16 x i16], [16 x i16]* %5, i64 0, i64 %55
  %71 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %71, align 16
  %72 = or i64 %55, 8
  %73 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 13, i64 %72
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2
  %76 = sext <8 x i16> %75 to <8 x i32>
  %77 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 %72
  %78 = bitcast i16* %77 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 16
  %80 = sext <8 x i16> %79 to <8 x i32>
  %81 = sub nsw <8 x i32> %80, %76
  %82 = mul nsw <8 x i32> %81, %46
  %83 = lshr <8 x i32> %82, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %84 = trunc <8 x i32> %83 to <8 x i16>
  %85 = add <8 x i16> %75, %84
  %86 = getelementptr inbounds [16 x i16], [16 x i16]* %5, i64 0, i64 %72
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %87, align 16
  %88 = add i64 %55, 16
  %89 = add i64 %56, -2
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %54, !llvm.loop !2

91:                                               ; preds = %54, %43
  %92 = phi i64 [ 0, %43 ], [ %88, %54 ]
  %93 = icmp eq i64 %50, 0
  br i1 %93, label %110, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 13, i64 %92
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2
  %98 = sext <8 x i16> %97 to <8 x i32>
  %99 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 %92
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 16
  %102 = sext <8 x i16> %101 to <8 x i32>
  %103 = sub nsw <8 x i32> %102, %98
  %104 = mul nsw <8 x i32> %103, %46
  %105 = lshr <8 x i32> %104, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %106 = trunc <8 x i32> %105 to <8 x i16>
  %107 = add <8 x i16> %97, %106
  %108 = getelementptr inbounds [16 x i16], [16 x i16]* %5, i64 0, i64 %92
  %109 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %109, align 16
  br label %110

110:                                              ; preds = %91, %94
  %111 = icmp eq i64 %44, %41
  br i1 %111, label %130, label %112

112:                                              ; preds = %110, %39
  %113 = phi i64 [ 0, %39 ], [ %44, %110 ]
  br label %114

114:                                              ; preds = %112, %114
  %115 = phi i64 [ %128, %114 ], [ %113, %112 ]
  %116 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 13, i64 %115
  %117 = load i16, i16* %116, align 2
  %118 = sext i16 %117 to i32
  %119 = getelementptr inbounds [16 x i16], [16 x i16]* %4, i64 0, i64 %115
  %120 = load i16, i16* %119, align 2
  %121 = sext i16 %120 to i32
  %122 = sub nsw i32 %121, %118
  %123 = mul nsw i32 %122, %40
  %124 = lshr i32 %123, 2
  %125 = trunc i32 %124 to i16
  %126 = add i16 %117, %125
  %127 = getelementptr inbounds [16 x i16], [16 x i16]* %5, i64 0, i64 %115
  store i16 %126, i16* %127, align 2
  %128 = add nuw nsw i64 %115, 1
  %129 = icmp slt i64 %128, %41
  br i1 %129, label %114, label %130, !llvm.loop !4

130:                                              ; preds = %114, %110, %36
  %131 = getelementptr inbounds [2 x [16 x i16]], [2 x [16 x i16]]* %22, i64 0, i64 0, i64 0
  %132 = load i32, i32* %26, align 8
  call void @silk_NLSF2A(i16* %131, i16* nonnull %10, i32 %37, i32 %132) #3
  br label %139

133:                                              ; preds = %32, %33
  %134 = bitcast [2 x [16 x i16]]* %22 to i8*
  %135 = bitcast i16* %23 to i8*
  %136 = load i32, i32* %24, align 4
  %137 = sext i32 %136 to i64
  %138 = shl nsw i64 %137, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %134, i8* align 4 %135, i64 %138, i1 false)
  br label %139

139:                                              ; preds = %133, %130
  %140 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 13, i64 0
  %141 = bitcast i16* %140 to i8*
  %142 = load i32, i32* %24, align 4
  %143 = sext i32 %142 to i64
  %144 = shl nsw i64 %143, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* nonnull align 16 %6, i64 %144, i1 false)
  %145 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 28
  %146 = load i32, i32* %145, align 8
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %151, label %148

148:                                              ; preds = %139
  %149 = getelementptr inbounds [2 x [16 x i16]], [2 x [16 x i16]]* %22, i64 0, i64 0, i64 0
  call void @silk_bwexpander(i16* %149, i32 %142, i32 63570) #3
  %150 = load i32, i32* %24, align 4
  call void @silk_bwexpander(i16* %23, i32 %150, i32 63570) #3
  br label %151

151:                                              ; preds = %139, %148
  %152 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 5
  %153 = load i8, i8* %152, align 1
  %154 = icmp eq i8 %153, 2
  br i1 %154, label %155, label %223

155:                                              ; preds = %151
  %156 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 3
  %157 = load i16, i16* %156, align 2
  %158 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 4
  %159 = load i8, i8* %158, align 4
  %160 = getelementptr inbounds %struct.silk_decoder_control, %struct.silk_decoder_control* %1, i64 0, i32 0, i64 0
  %161 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 6
  %162 = load i32, i32* %161, align 4
  %163 = load i32, i32* %16, align 4
  call void @silk_decode_pitch(i16 signext %157, i8 signext %159, i32* %160, i32 %162, i32 %163) #3
  %164 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 8
  %165 = load i8, i8* %164, align 8
  %166 = sext i8 %165 to i64
  %167 = getelementptr inbounds [3 x i8*], [3 x i8*]* @silk_LTP_vq_ptrs_Q7, i64 0, i64 %166
  %168 = load i8*, i8** %167, align 8
  %169 = load i32, i32* %16, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %216

171:                                              ; preds = %155, %171
  %172 = phi i64 [ %212, %171 ], [ 0, %155 ]
  %173 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 1, i64 %172
  %174 = load i8, i8* %173, align 1
  %175 = sext i8 %174 to i64
  %176 = mul nsw i64 %175, 5
  %177 = mul i64 %172, 5
  %178 = and i64 %177, 4294967295
  %179 = getelementptr inbounds i8, i8* %168, i64 %176
  %180 = load i8, i8* %179, align 1
  %181 = sext i8 %180 to i16
  %182 = shl nsw i16 %181, 7
  %183 = getelementptr inbounds %struct.silk_decoder_control, %struct.silk_decoder_control* %1, i64 0, i32 3, i64 %178
  store i16 %182, i16* %183, align 2
  %184 = add nsw i64 %176, 1
  %185 = getelementptr inbounds i8, i8* %168, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i16
  %188 = shl nsw i16 %187, 7
  %189 = add nuw nsw i64 %178, 1
  %190 = getelementptr inbounds %struct.silk_decoder_control, %struct.silk_decoder_control* %1, i64 0, i32 3, i64 %189
  store i16 %188, i16* %190, align 2
  %191 = add nsw i64 %176, 2
  %192 = getelementptr inbounds i8, i8* %168, i64 %191
  %193 = load i8, i8* %192, align 1
  %194 = sext i8 %193 to i16
  %195 = shl nsw i16 %194, 7
  %196 = add nuw nsw i64 %178, 2
  %197 = getelementptr inbounds %struct.silk_decoder_control, %struct.silk_decoder_control* %1, i64 0, i32 3, i64 %196
  store i16 %195, i16* %197, align 2
  %198 = add nsw i64 %176, 3
  %199 = getelementptr inbounds i8, i8* %168, i64 %198
  %200 = load i8, i8* %199, align 1
  %201 = sext i8 %200 to i16
  %202 = shl nsw i16 %201, 7
  %203 = add nuw nsw i64 %178, 3
  %204 = getelementptr inbounds %struct.silk_decoder_control, %struct.silk_decoder_control* %1, i64 0, i32 3, i64 %203
  store i16 %202, i16* %204, align 2
  %205 = add nsw i64 %176, 4
  %206 = getelementptr inbounds i8, i8* %168, i64 %205
  %207 = load i8, i8* %206, align 1
  %208 = sext i8 %207 to i16
  %209 = shl nsw i16 %208, 7
  %210 = add nuw nsw i64 %178, 4
  %211 = getelementptr inbounds %struct.silk_decoder_control, %struct.silk_decoder_control* %1, i64 0, i32 3, i64 %210
  store i16 %209, i16* %211, align 2
  %212 = add nuw nsw i64 %172, 1
  %213 = load i32, i32* %16, align 4
  %214 = sext i32 %213 to i64
  %215 = icmp slt i64 %212, %214
  br i1 %215, label %171, label %216

216:                                              ; preds = %171, %155
  %217 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 9
  %218 = load i8, i8* %217, align 1
  %219 = sext i8 %218 to i64
  %220 = getelementptr inbounds [3 x i16], [3 x i16]* @silk_LTPScales_table_Q14, i64 0, i64 %219
  %221 = load i16, i16* %220, align 2
  %222 = sext i16 %221 to i32
  br label %235

223:                                              ; preds = %151
  %224 = bitcast %struct.silk_decoder_control* %1 to i8*
  %225 = load i32, i32* %16, align 4
  %226 = sext i32 %225 to i64
  %227 = shl nsw i64 %226, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %224, i8 0, i64 %227, i1 false)
  %228 = getelementptr inbounds %struct.silk_decoder_control, %struct.silk_decoder_control* %1, i64 0, i32 3, i64 0
  %229 = bitcast i16* %228 to i8*
  %230 = load i32, i32* %16, align 4
  %231 = mul nsw i32 %230, 5
  %232 = sext i32 %231 to i64
  %233 = shl nsw i64 %232, 1
  call void @llvm.memset.p0i8.i64(i8* align 4 %229, i8 0, i64 %233, i1 false)
  %234 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %0, i64 0, i32 26, i32 8
  store i8 0, i8* %234, align 8
  br label %235

235:                                              ; preds = %223, %216
  %236 = phi i32 [ 0, %223 ], [ %222, %216 ]
  %237 = getelementptr inbounds %struct.silk_decoder_control, %struct.silk_decoder_control* %1, i64 0, i32 4
  store i32 %236, i32* %237, align 4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @silk_gains_dequant(i32*, i8*, i8*, i32, i32) local_unnamed_addr #2

declare void @silk_NLSF_decode(i16*, i8*, %struct.silk_NLSF_CB_struct*) local_unnamed_addr #2

declare void @silk_NLSF2A(i16*, i16*, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @silk_bwexpander(i16*, i32, i32) local_unnamed_addr #2

declare void @silk_decode_pitch(i16 signext, i8 signext, i32*, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
