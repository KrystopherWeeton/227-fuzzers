; ModuleID = '../../cc/trees/latency_info_swap_promise_monitor.cc'
source_filename = "../../cc/trees/latency_info_swap_promise_monitor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::LatencyInfoSwapPromiseMonitor" = type { %"class.cc::SwapPromiseMonitor", %"class.ui::LatencyInfo"* }
%"class.cc::SwapPromiseMonitor" = type { i32 (...)**, %"class.cc::SwapPromiseManager"*, %"class.cc::LayerTreeHostImpl"* }
%"class.cc::LayerTreeHostImpl" = type { %"class.cc::TileManagerClient", %"class.cc::LayerTreeFrameSinkClient", %"class.cc::BrowserControlsOffsetManagerClient", %"class.cc::ScrollbarAnimationControllerClient", %"class.cc::VideoFrameControllerClient", %"class.cc::MutatorHostClient", %"class.cc::ImageAnimationController::Client", %"class.cc::CompositorDelegateForInput", %"class.cc::LayerTreeHostImplClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.cc::TaskRunnerProvider"*, %"class.cc::BeginFrameTracker", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.cc::LayerTreeSettings", i8, %"class.viz::ClientResourceProvider", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::set.56", %"class.cc::LayerTreeFrameSink"*, i32, %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80", i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.125", %"class.cc::GlobalStateThatImpactsTilePriority", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.gfx::Vector2dF", %"class.std::__1::vector", i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, %"struct.cc::ManagedMemoryPolicy", %"class.cc::TileManager", %"class.std::__1::unique_ptr.906", %"class.std::__1::unique_ptr.918", %"class.cc::DroppedFrameCounter", %"class.cc::TotalFrameCounter", %"class.std::__1::unique_ptr.971", %"class.std::__1::unique_ptr.978", i64, %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.984", %"class.std::__1::unique_ptr.990", %"class.std::__1::set.996", %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::unordered_map.1006", %"class.cc::RenderingStatsInstrumentation"*, %"class.cc::MicroBenchmarkControllerImpl", %"class.std::__1::unique_ptr.1045", %"class.base::RepeatingCallback.840", %"class.cc::TaskGraphRunner"*, i32, %"class.std::__1::set", i8, i8, i8, i32, %"class.std::__1::unique_ptr.1051", %"class.gfx::Size", i8, %"class.std::__1::unique_ptr.1057", %"class.std::__1::vector.1063", i32, [4 x i8], %"class.cc::ImageAnimationController", %"class.std::__1::unique_ptr.1083", %"class.std::__1::unique_ptr.1095", %"class.viz::FrameTokenGenerator", %"class.viz::LocalSurfaceId", %"class.base::internal::flat_tree.565", %"class.absl::optional.1101", %"class.viz::LocalSurfaceId", %"class.viz::ChildLocalSurfaceIdAllocator", i32, %"class.std::__1::unique_ptr.105", %"class.cc::PresentationTimeCallbackBuffer", i32, %"class.cc::FrameSequenceTrackerCollection", %"class.std::__1::unique_ptr.1169", i8, i8, %"class.cc::AnimatedPaintWorkletTracker", %"class.cc::AverageLagTrackingManager", %"class.cc::DeJellyState", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.1239", %"class.cc::FrameRateEstimator", i8, i8, i8, %"class.base::WritableSharedMemoryMapping", %"class.base::MRUCache", %"class.cc::ThrottleDecider", %"class.std::__1::vector.197", %"class.base::WeakPtrFactory.1282" }
%"class.cc::TileManagerClient" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type { i32 (...)** }
%"class.cc::BrowserControlsOffsetManagerClient" = type { i32 (...)** }
%"class.cc::ScrollbarAnimationControllerClient" = type { i32 (...)** }
%"class.cc::VideoFrameControllerClient" = type { i32 (...)** }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::ImageAnimationController::Client" = type { i32 (...)** }
%"class.cc::CompositorDelegateForInput" = type { i32 (...)** }
%"class.cc::LayerTreeHostImplClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::BeginFrameTracker" = type { %"class.base::Location", %"class.std::__1::basic_string", %"class.base::TimeTicks", %"struct.viz::BeginFrameArgs", %"class.base::TimeTicks" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.viz::BeginFrameArgs" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.viz::BeginFrameId", i64, i32, i8, i8, i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.cc::CompositorFrameReportingController"* }
%"class.cc::CompositorFrameReportingController" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.cc::InputDelegateForCompositor"* }
%"class.cc::InputDelegateForCompositor" = type { i32 (...)** }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.viz::ClientResourceProvider" = type { %"class.base::flat_map", %"class.viz::ResourceIdGenerator" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.30" }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.32" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::pair"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.37", %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.52", [4 x i8] }>
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39", %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { float }
%"class.std::__1::set.56" = type { %"class.std::__1::__tree.57" }
%"class.std::__1::__tree.57" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.65, %class.scoped_refptr.66, %class.scoped_refptr, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.67", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%class.scoped_refptr.65 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.66 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.73 }
%class.scoped_refptr.73 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.74", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.74" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.75" }
%"struct.std::__1::atomic.75" = type { %"struct.std::__1::__atomic_base.76" }
%"struct.std::__1::__atomic_base.76" = type { %"struct.std::__1::__atomic_base.77" }
%"struct.std::__1::__atomic_base.77" = type { %"struct.std::__1::__cxx_atomic_impl.78" }
%"struct.std::__1::__cxx_atomic_impl.78" = type { %"struct.std::__1::__cxx_atomic_base_impl.79" }
%"struct.std::__1::__cxx_atomic_base_impl.79" = type { i8 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.viz::ContextCacheController::ScopedToken"* }
%"class.viz::ContextCacheController::ScopedToken" = type { i8 }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.cc::RasterBufferProvider"* }
%"class.cc::RasterBufferProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.cc::ResourcePool"* }
%"class.cc::ResourcePool" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.viz::ClientResourceProvider"*, %"class.viz::ContextProvider"*, %class.scoped_refptr, %"class.base::TimeDelta", i8, i32, i64, i64, i64, i64, i64, i64, i8, i8, %"class.base::circular_deque", %"class.base::circular_deque", %"class.std::__1::map", %"class.std::__1::unique_ptr.105", %"class.base::TimeTicks", %"class.base::TickClock"*, %"class.base::WeakPtrFactory.113" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.95"*, i64 }
%"class.std::__1::unique_ptr.95" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.96" }
%"class.std::__1::__tree.96" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.113" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.cc::RasterQueryQueue"* }
%"class.cc::RasterQueryQueue" = type { i32 (...)**, %"class.viz::RasterContextProvider"*, i8, %"class.base::Lock", %"class.base::circular_deque.120" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::circular_deque.120" = type { %"class.base::internal::VectorBuffer.121", i64, i64 }
%"class.base::internal::VectorBuffer.121" = type { %"struct.cc::RasterQuery"*, i64 }
%"struct.cc::RasterQuery" = type <{ i32, [4 x i8], %"class.base::TimeDelta", i32, [4 x i8], %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.cc::ImageDecodeCache"* }
%"class.cc::ImageDecodeCache" = type { i32 (...)** }
%"class.cc::GlobalStateThatImpactsTilePriority" = type <{ i32, [4 x i8], i64, i64, i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.cc::LayerTreeImpl"* }
%"class.cc::LayerTreeImpl" = type { i32 (...)**, %"class.cc::LayerTreeHostImpl"*, i32, i32, %"class.cc::HeadsUpDisplayLayerImpl"*, %"class.cc::PropertyTrees", i32, i32, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.viz::Selection", %class.scoped_refptr.303, float, float, float, float, float, %"class.gfx::DisplayColorSpaces", %"class.viz::LocalSurfaceId", i8, i8, %"class.gfx::Rect", %class.scoped_refptr.309, %"class.std::__1::vector.313", %"class.std::__1::unordered_map.362", %"class.base::internal::flat_tree.386", %"class.std::__1::unordered_map.394", %"class.std::__1::unordered_map.420", %"class.std::__1::unordered_map.444", %"class.std::__1::unordered_map.444", %"class.base::flat_map.468", %"class.std::__1::vector.478", %"class.base::internal::flat_tree.564", %"class.base::internal::flat_tree.565", %"class.std::__1::vector.578", %"class.cc::Region", i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.585", i8, [4 x i32], %"struct.cc::BrowserControlsParams", %"struct.cc::OverscrollBehavior", %class.scoped_refptr.592, %class.scoped_refptr.592, %"class.std::__1::unique_ptr.597", i8, %"class.cc::LayerTreeLifecycle", i32, %"class.std::__1::vector.603", %"class.std::__1::vector.610", %"class.std::__1::unique_ptr.618", %"class.std::__1::vector.624" }
%"class.cc::HeadsUpDisplayLayerImpl" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.134", %"class.base::flat_map.134", %"class.base::flat_map.134", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.134" = type { %"class.base::internal::flat_tree.135" }
%"class.base::internal::flat_tree.135" = type { %"class.std::__1::vector.136" }
%"class.std::__1::vector.136" = type { %"class.std::__1::__vector_base.137" }
%"class.std::__1::__vector_base.137" = type { %"struct.std::__1::pair.138"*, %"struct.std::__1::pair.138"*, %"class.std::__1::__compressed_pair.139" }
%"struct.std::__1::pair.138" = type opaque
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"struct.std::__1::pair.138"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.151", %"class.std::__1::vector.158", %"class.std::__1::vector.165" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.144", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.144" = type { %"class.std::__1::__vector_base.145" }
%"class.std::__1::__vector_base.145" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.146" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.151" = type { %"class.std::__1::__vector_base.152" }
%"class.std::__1::__vector_base.152" = type { i32*, i32*, %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { i32* }
%"class.std::__1::vector.158" = type { %"class.std::__1::__vector_base.159" }
%"class.std::__1::__vector_base.159" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.160" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.167" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.172", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.232" }
%"class.cc::PropertyTree.172" = type { i32 (...)**, %"class.std::__1::vector.173", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.204" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.191", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.175" }
%"class.std::__1::vector.175" = type { %"class.std::__1::__vector_base.176" }
%"class.std::__1::__vector_base.176" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.186" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.179", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.177, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.177 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.178 }
%union.anon.178 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.179" = type { %"class.std::__1::__vector_base.180" }
%"class.std::__1::__vector_base.180" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.191" = type { %"class.absl::optional_internal::optional_data.192" }
%"class.absl::optional_internal::optional_data.192" = type { %"class.absl::optional_internal::optional_data_base.193" }
%"class.absl::optional_internal::optional_data_base.193" = type { %"class.absl::optional_internal::optional_data_dtor_base.194" }
%"class.absl::optional_internal::optional_data_dtor_base.194" = type { i8, %union.anon.195 }
%union.anon.195 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.196" }
%"class.base::internal::flat_tree.196" = type { %"class.std::__1::vector.197" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.209" }
%"class.std::__1::__hash_table.209" = type <{ %"class.std::__1::unique_ptr.210", %"class.std::__1::__compressed_pair.220", %"class.std::__1::__compressed_pair.225", %"class.std::__1::__compressed_pair.228", [4 x i8] }>
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212", %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.std::__1::__hash_node_base.213"** }
%"struct.std::__1::__hash_node_base.213" = type { %"struct.std::__1::__hash_node_base.213"* }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.std::__1::__bucket_list_deallocator.215" }
%"class.std::__1::__bucket_list_deallocator.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.std::__1::__hash_node_base.213" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::vector.232" = type { %"class.std::__1::__vector_base.233" }
%"class.std::__1::__vector_base.233" = type { %"class.std::__1::unique_ptr.234"*, %"class.std::__1::unique_ptr.234"*, %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type { i32 (...)**, %"class.cc::LayerTreeImpl"*, i64, i32, %"struct.cc::RenderSurfaceImpl::DrawProperties", %"class.gfx::Rect", i32, i8, %"class.cc::Occlusion", %"class.cc::RenderSurfaceImpl"*, %"class.std::__1::unique_ptr.237" }
%"struct.cc::RenderSurfaceImpl::DrawProperties" = type { float, %"class.gfx::Transform", %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::MaskFilterInfo" }
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.cc::DamageTracker"* }
%"class.cc::DamageTracker" = type opaque
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.std::__1::unique_ptr.234"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.251" }
%"class.cc::PropertyTree.251" = type { i32 (...)**, %"class.std::__1::vector.252", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.252" = type { %"class.std::__1::__vector_base.253" }
%"class.std::__1::__vector_base.253" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.254" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.259", i32, %"class.base::flat_map.267", %"class.base::flat_map.277", %"class.base::WeakPtr" }
%"class.cc::PropertyTree.259" = type { i32 (...)**, %"class.std::__1::vector.260", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.260" = type { %"class.std::__1::__vector_base.261" }
%"class.std::__1::__vector_base.261" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.262" }
%"struct.cc::ScrollNode" = type opaque
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.267" = type { %"class.base::internal::flat_tree.268" }
%"class.base::internal::flat_tree.268" = type { %"class.std::__1::vector.269" }
%"class.std::__1::vector.269" = type { %"class.std::__1::__vector_base.270" }
%"class.std::__1::__vector_base.270" = type { %"struct.std::__1::pair.271"*, %"struct.std::__1::pair.271"*, %"class.std::__1::__compressed_pair.272" }
%"struct.std::__1::pair.271" = type opaque
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"struct.std::__1::pair.271"* }
%"class.base::flat_map.277" = type { %"class.base::internal::flat_tree.278" }
%"class.base::internal::flat_tree.278" = type { %"class.std::__1::vector.279" }
%"class.std::__1::vector.279" = type { %"class.std::__1::__vector_base.280" }
%"class.std::__1::__vector_base.280" = type { %"struct.std::__1::pair.281"*, %"struct.std::__1::pair.281"*, %"class.std::__1::__compressed_pair.282" }
%"struct.std::__1::pair.281" = type opaque
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.std::__1::pair.281"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.287 }
%class.scoped_refptr.287 = type { %"class.base::internal::WeakReference::Flag"* }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.288", %"class.std::__1::vector.295" }
%"class.std::__1::vector.288" = type { %"class.std::__1::__vector_base.289" }
%"class.std::__1::__vector_base.289" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.290" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.295" = type { %"class.std::__1::__vector_base.296" }
%"class.std::__1::__vector_base.296" = type { %"class.std::__1::vector.297"*, %"class.std::__1::vector.297"*, %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::vector.297" = type opaque
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.std::__1::vector.297"* }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.viz::Selection" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%class.scoped_refptr.303 = type { %"class.cc::SyncedProperty"* }
%"class.cc::SyncedProperty" = type <{ %"class.base::RefCounted", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", i8, [3 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::ScaleGroup" = type { float }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.304" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.304" = type { %"class.absl::optional_internal::optional_data.305" }
%"class.absl::optional_internal::optional_data.305" = type { %"class.absl::optional_internal::optional_data_base.306" }
%"class.absl::optional_internal::optional_data_base.306" = type { %"class.absl::optional_internal::optional_data_dtor_base.307" }
%"class.absl::optional_internal::optional_data_dtor_base.307" = type { i8, %union.anon.308 }
%union.anon.308 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%class.scoped_refptr.309 = type { %"class.cc::SyncedProperty.310"* }
%"class.cc::SyncedProperty.310" = type <{ %"class.base::RefCounted.311", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", i8, [3 x i8] }>
%"class.base::RefCounted.311" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup" = type { %"class.gfx::Vector2dF" }
%"class.std::__1::vector.313" = type { %"class.std::__1::__vector_base.314" }
%"class.std::__1::__vector_base.314" = type { %"class.std::__1::unique_ptr.315"*, %"class.std::__1::unique_ptr.315"*, %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.cc::LayerImpl"* }
%"class.cc::LayerImpl" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.328", %"class.std::__1::unique_ptr.348", i8, [7 x i8] }>
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.318" }
%"class.base::flat_map.318" = type { %"class.base::internal::flat_tree.319" }
%"class.base::internal::flat_tree.319" = type { %"class.std::__1::vector.320" }
%"class.std::__1::vector.320" = type { %"class.std::__1::__vector_base.321" }
%"class.std::__1::__vector_base.321" = type { %"struct.std::__1::pair.322"*, %"struct.std::__1::pair.322"*, %"class.std::__1::__compressed_pair.323" }
%"struct.std::__1::pair.322" = type opaque
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"struct.std::__1::pair.322"* }
%"struct.cc::DrawProperties" = type { %"class.gfx::Transform", %"class.gfx::Transform", %"class.cc::Occlusion", float, i8, i8, i8, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo" }
%"struct.cc::PerformanceProperties" = type { i32, float, %"class.gfx::Transform" }
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.331", %"class.std::__1::vector.331", %"class.std::__1::vector.338" }
%"class.std::__1::vector.331" = type { %"class.std::__1::__vector_base.332" }
%"class.std::__1::__vector_base.332" = type { i8**, i8**, %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { i8** }
%"class.std::__1::vector.338" = type { %"class.std::__1::__vector_base.339" }
%"class.std::__1::__vector_base.339" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.340" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.cc::Region"* }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.std::__1::unique_ptr.315"* }
%"class.std::__1::unordered_map.362" = type { %"class.std::__1::__hash_table.363" }
%"class.std::__1::__hash_table.363" = type <{ %"class.std::__1::unique_ptr.364", %"class.std::__1::__compressed_pair.374", %"class.std::__1::__compressed_pair.379", %"class.std::__1::__compressed_pair.382", [4 x i8] }>
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366", %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"struct.std::__1::__hash_node_base.367"** }
%"struct.std::__1::__hash_node_base.367" = type { %"struct.std::__1::__hash_node_base.367"* }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.std::__1::__bucket_list_deallocator.369" }
%"class.std::__1::__bucket_list_deallocator.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.367" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.base::internal::flat_tree.386" = type { %"class.std::__1::vector.387" }
%"class.std::__1::vector.387" = type { %"class.std::__1::__vector_base.388" }
%"class.std::__1::__vector_base.388" = type { %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"**, %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.cc::LayerImpl"** }
%"class.std::__1::unordered_map.394" = type { %"class.std::__1::__hash_table.395" }
%"class.std::__1::__hash_table.395" = type <{ %"class.std::__1::unique_ptr.396", %"class.std::__1::__compressed_pair.406", %"class.std::__1::__compressed_pair.411", %"class.std::__1::__compressed_pair.414", [4 x i8] }>
%"class.std::__1::unique_ptr.396" = type { %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398", %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"struct.std::__1::__hash_node_base.399"** }
%"struct.std::__1::__hash_node_base.399" = type { %"struct.std::__1::__hash_node_base.399"* }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.std::__1::__bucket_list_deallocator.401" }
%"class.std::__1::__bucket_list_deallocator.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.399" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::unordered_map.420" = type { %"class.std::__1::__hash_table.421" }
%"class.std::__1::__hash_table.421" = type <{ %"class.std::__1::unique_ptr.422", %"class.std::__1::__compressed_pair.432", %"class.std::__1::__compressed_pair.437", %"class.std::__1::__compressed_pair.440", [4 x i8] }>
%"class.std::__1::unique_ptr.422" = type { %"class.std::__1::__compressed_pair.423" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424", %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"struct.std::__1::__hash_node_base.425"** }
%"struct.std::__1::__hash_node_base.425" = type { %"struct.std::__1::__hash_node_base.425"* }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.std::__1::__bucket_list_deallocator.427" }
%"class.std::__1::__bucket_list_deallocator.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"struct.std::__1::__hash_node_base.425" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::unordered_map.444" = type { %"class.std::__1::__hash_table.445" }
%"class.std::__1::__hash_table.445" = type <{ %"class.std::__1::unique_ptr.446", %"class.std::__1::__compressed_pair.456", %"class.std::__1::__compressed_pair.461", %"class.std::__1::__compressed_pair.464", [4 x i8] }>
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448", %"struct.std::__1::__compressed_pair_elem.450" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"struct.std::__1::__hash_node_base.449"** }
%"struct.std::__1::__hash_node_base.449" = type { %"struct.std::__1::__hash_node_base.449"* }
%"struct.std::__1::__compressed_pair_elem.450" = type { %"class.std::__1::__bucket_list_deallocator.451" }
%"class.std::__1::__bucket_list_deallocator.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.457" }
%"struct.std::__1::__compressed_pair_elem.457" = type { %"struct.std::__1::__hash_node_base.449" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.base::flat_map.468" = type { %"class.base::internal::flat_tree.469" }
%"class.base::internal::flat_tree.469" = type { %"class.std::__1::vector.470" }
%"class.std::__1::vector.470" = type { %"class.std::__1::__vector_base.471" }
%"class.std::__1::__vector_base.471" = type { %"struct.std::__1::pair.472"*, %"struct.std::__1::pair.472"*, %"class.std::__1::__compressed_pair.473" }
%"struct.std::__1::pair.472" = type opaque
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"struct.std::__1::pair.472"* }
%"class.std::__1::vector.478" = type { %"class.std::__1::__vector_base.479" }
%"class.std::__1::__vector_base.479" = type { %"class.cc::PictureLayerImpl"**, %"class.cc::PictureLayerImpl"**, %"class.std::__1::__compressed_pair.559" }
%"class.cc::PictureLayerImpl" = type { %"class.cc::LayerImpl.base", %"class.cc::PictureLayerTilingClient", %"class.cc::ImageAnimationController::AnimationDriver", %"class.cc::PictureLayerImpl"*, %"class.std::__1::unique_ptr.480", %class.scoped_refptr.488, %"class.cc::Region", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, i8, i8, %"class.absl::optional.537", float, %"class.gfx::Rect", %"class.gfx::Size", %"class.std::__1::vector.542", %"class.base::flat_map.549", %"class.gfx::Size", %"class.cc::TileSizeCalculator", %"class.gfx::Rect" }
%"class.cc::LayerImpl.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.328", %"class.std::__1::unique_ptr.348", i8 }>
%"class.cc::PictureLayerTilingClient" = type { i32 (...)** }
%"class.cc::ImageAnimationController::AnimationDriver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.cc::PictureLayerTilingSet"* }
%"class.cc::PictureLayerTilingSet" = type { %"class.std::__1::vector.483", i32, float, i32, i32, %"class.cc::PictureLayerTilingClient"*, float, %"class.std::__1::deque", %"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate", %class.scoped_refptr.488, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect" }
%"class.std::__1::vector.483" = type { %"class.std::__1::__vector_base.484" }
%"class.std::__1::__vector_base.484" = type { %"class.std::__1::unique_ptr.485"*, %"class.std::__1::unique_ptr.485"*, %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.cc::PictureLayerTiling"* }
%"class.cc::PictureLayerTiling" = type <{ %"class.gfx::AxisTransform2d", %"class.cc::PictureLayerTilingClient"*, i32, [4 x i8], %class.scoped_refptr.488, float, float, i32, i8, [3 x i8], %"class.cc::TilingData", [4 x i8], %"class.std::__1::unordered_map.491", %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", float, %"class.cc::Occlusion", float, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.gfx::AxisTransform2d" = type { %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"class.cc::TilingData" = type { %"class.gfx::Size", %"class.gfx::Size", i32, i32, i32 }
%"class.std::__1::unordered_map.491" = type { %"class.std::__1::__hash_table.492" }
%"class.std::__1::__hash_table.492" = type <{ %"class.std::__1::unique_ptr.493", %"class.std::__1::__compressed_pair.503", %"class.std::__1::__compressed_pair.508", %"class.std::__1::__compressed_pair.511", [4 x i8] }>
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495", %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"struct.std::__1::__hash_node_base.496"** }
%"struct.std::__1::__hash_node_base.496" = type { %"struct.std::__1::__hash_node_base.496"* }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"class.std::__1::__bucket_list_deallocator.498" }
%"class.std::__1::__bucket_list_deallocator.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"struct.std::__1::__hash_node_base.496" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.521" }
%"struct.std::__1::__compressed_pair_elem.521" = type { %"class.std::__1::unique_ptr.485"* }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.530" }
%"struct.std::__1::__split_buffer" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"class.std::__1::__compressed_pair.525" }
%"struct.cc::PictureLayerTilingSet::FrameVisibleRect" = type { %"class.gfx::Rect", double }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"** }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate" = type { i8, i8 }
%class.scoped_refptr.488 = type { %"class.cc::RasterSource"* }
%"class.cc::RasterSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.489", [4 x i8], i64, %class.scoped_refptr.490, i32, i8, i8, [2 x i8], i32, %"class.gfx::Rect", %"class.gfx::Size", i32, float, [4 x i8] }>
%"class.base::RefCountedThreadSafe.489" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.490 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.absl::optional.537" = type { %"class.absl::optional_internal::optional_data.538" }
%"class.absl::optional_internal::optional_data.538" = type { %"class.absl::optional_internal::optional_data_base.539" }
%"class.absl::optional_internal::optional_data_base.539" = type { %"class.absl::optional_internal::optional_data_dtor_base.540" }
%"class.absl::optional_internal::optional_data_dtor_base.540" = type { i8, %union.anon.541 }
%union.anon.541 = type { %"class.gfx::Size" }
%"class.std::__1::vector.542" = type { %"class.std::__1::__vector_base.543" }
%"class.std::__1::__vector_base.543" = type { %"class.cc::PictureLayerTiling"**, %"class.cc::PictureLayerTiling"**, %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.cc::PictureLayerTiling"** }
%"class.base::flat_map.549" = type { %"class.base::internal::flat_tree.550" }
%"class.base::internal::flat_tree.550" = type { %"class.std::__1::vector.551" }
%"class.std::__1::vector.551" = type { %"class.std::__1::__vector_base.552" }
%"class.std::__1::__vector_base.552" = type { %"struct.std::__1::pair.553"*, %"struct.std::__1::pair.553"*, %"class.std::__1::__compressed_pair.554" }
%"struct.std::__1::pair.553" = type opaque
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"struct.std::__1::pair.553"* }
%"class.cc::TileSizeCalculator" = type { %"class.cc::PictureLayerImpl"*, %"struct.cc::TileSizeCalculator::AffectingParams", %"class.gfx::Size" }
%"struct.cc::TileSizeCalculator::AffectingParams" = type { i32, i8, float, %"class.gfx::Size", i32, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.cc::PictureLayerImpl"** }
%"class.base::internal::flat_tree.564" = type { %"class.std::__1::vector.478" }
%"class.std::__1::vector.578" = type { %"class.std::__1::__vector_base.579" }
%"class.std::__1::__vector_base.579" = type { %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"**, %"class.std::__1::__compressed_pair.580" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"class.cc::RenderSurfaceImpl"** }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::vector.585" = type { %"class.std::__1::__vector_base.586" }
%"class.std::__1::__vector_base.586" = type { %"class.cc::UIResourceRequest"*, %"class.cc::UIResourceRequest"*, %"class.std::__1::__compressed_pair.587" }
%"class.cc::UIResourceRequest" = type opaque
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"class.cc::UIResourceRequest"* }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%class.scoped_refptr.592 = type { %"class.cc::SyncedProperty.593"* }
%"class.cc::SyncedProperty.593" = type <{ %"class.base::RefCounted.594", %"class.cc::AdditionGroup.595", %"class.cc::AdditionGroup.595", %"class.cc::AdditionGroup.595", %"class.cc::AdditionGroup.595", %"class.cc::AdditionGroup.595", i8, [3 x i8] }>
%"class.base::RefCounted.594" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup.595" = type { float }
%"class.std::__1::unique_ptr.597" = type { %"class.std::__1::__compressed_pair.598" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::LayerTreeLifecycle" = type { i32 }
%"class.std::__1::vector.603" = type { %"class.std::__1::__vector_base.604" }
%"class.std::__1::__vector_base.604" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.605" }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.base::OnceCallback"* }
%"class.std::__1::vector.610" = type { %"class.std::__1::__vector_base.611" }
%"class.std::__1::__vector_base.611" = type { %"class.std::__1::unique_ptr.612"*, %"class.std::__1::unique_ptr.612"*, %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::unique_ptr.612" = type { %"class.std::__1::__compressed_pair.1293" }
%"class.std::__1::__compressed_pair.1293" = type { %"struct.std::__1::__compressed_pair_elem.1294" }
%"struct.std::__1::__compressed_pair_elem.1294" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.1295", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.1295" = type { %"class.absl::optional_internal::optional_data.1296" }
%"class.absl::optional_internal::optional_data.1296" = type { %"class.absl::optional_internal::optional_data_base.1297" }
%"class.absl::optional_internal::optional_data_base.1297" = type { %"class.absl::optional_internal::optional_data_dtor_base.1298" }
%"class.absl::optional_internal::optional_data_dtor_base.1298" = type { i8, %union.anon.1299 }
%union.anon.1299 = type { i32 }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.614" }
%"struct.std::__1::__compressed_pair_elem.614" = type { %"class.std::__1::unique_ptr.612"* }
%"class.std::__1::unique_ptr.618" = type { %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.624" = type { %"class.std::__1::__vector_base.625" }
%"class.std::__1::__vector_base.625" = type { %"class.std::__1::unique_ptr.626"*, %"class.std::__1::unique_ptr.626"*, %"class.std::__1::__compressed_pair.627" }
%"class.std::__1::unique_ptr.626" = type opaque
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"struct.std::__1::__compressed_pair_elem.628" = type { %"class.std::__1::unique_ptr.626"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::unique_ptr"* }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::TileManager" = type { %"class.cc::CheckerImageTrackerClient", %"class.cc::TileManagerClient"*, %"class.base::SequencedTaskRunner"*, %"class.cc::ResourcePool"*, %"class.std::__1::unique_ptr.635", %"class.cc::RasterBufferProvider"*, %"class.cc::GlobalStateThatImpactsTilePriority", i64, %"struct.cc::TileManagerSettings", i8, i8, %"class.cc::RasterQueryQueue"*, %"class.std::__1::unordered_map.641", i8, [7 x i8], %"struct.cc::MemoryHistory::Entry", i8, i8, %"class.cc::ImageController", %"class.cc::DecodedImageTracker", %"class.cc::CheckerImageTracker", %"struct.cc::RasterTaskCompletionStats", %"struct.cc::TaskGraph", %"class.cc::UniqueNotifier", %"struct.cc::TileManager::Signals", %"class.cc::UniqueNotifier", i8, i64, i64, %"class.std::__1::unordered_set", i64, i64, i8, [7 x i8], %"class.std::__1::unordered_map.867", %"class.std::__1::vector.729", i32, %class.GURL, i8, %"class.base::internal::CancelableCallbackImpl", %"class.base::WaitableEvent", %"class.base::WeakPtrFactory.905", %"class.base::WeakPtrFactory.905" }
%"class.cc::CheckerImageTrackerClient" = type { i32 (...)** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.635" = type { %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"class.cc::TileTaskManager"* }
%"class.cc::TileTaskManager" = type { i32 (...)** }
%"struct.cc::TileManagerSettings" = type { i8, i8, i64 }
%"class.std::__1::unordered_map.641" = type { %"class.std::__1::__hash_table.642" }
%"class.std::__1::__hash_table.642" = type <{ %"class.std::__1::unique_ptr.643", %"class.std::__1::__compressed_pair.653", %"class.std::__1::__compressed_pair.658", %"class.std::__1::__compressed_pair.663", [4 x i8] }>
%"class.std::__1::unique_ptr.643" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645", %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"struct.std::__1::__hash_node_base.646"** }
%"struct.std::__1::__hash_node_base.646" = type { %"struct.std::__1::__hash_node_base.646"* }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.std::__1::__bucket_list_deallocator.648" }
%"class.std::__1::__bucket_list_deallocator.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"struct.std::__1::__hash_node_base.646" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.cc::MemoryHistory::Entry" = type <{ i64, i64, i8, [7 x i8] }>
%"class.cc::ImageController" = type { i32 (...)**, %class.scoped_refptr.668, %"class.base::WeakPtr.669", %"class.cc::ImageDecodeCache"*, %"class.std::__1::vector.670", %"class.base::flat_map.705", %"class.base::SequencedTaskRunner"*, i64, %"class.base::Lock", %"class.std::__1::map.715", %"class.std::__1::map.715", i8, %"class.std::__1::vector.724", %"class.base::WeakPtrFactory.741" }
%class.scoped_refptr.668 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::WeakPtr.669" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::vector.670" = type { %"class.std::__1::__vector_base.671" }
%"class.std::__1::__vector_base.671" = type { %"class.cc::DrawImage"*, %"class.cc::DrawImage"*, %"class.std::__1::__compressed_pair.700" }
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.690", %"class.absl::optional.695", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp.672, %class.sk_sp.674, %"class.gfx::Rect", i32, %class.sk_sp.679, %class.sk_sp.687, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.672, %class.scoped_refptr.688 }
%class.sk_sp.674 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.675", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.675" = type { %"class.std::__1::__compressed_pair.676" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.677" = type { i8* }
%class.sk_sp.679 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.680" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.673, i32, i32 }
%class.sk_sp.673 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.75" }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.680" = type { %"class.std::__1::__vector_base.681" }
%"class.std::__1::__vector_base.681" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.682" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.687 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp.672 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.688 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.689", [4 x i8] }>
%"class.base::RefCountedThreadSafe.689" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkSize = type { float, float }
%"class.absl::optional.690" = type { %"class.absl::optional_internal::optional_data.691" }
%"class.absl::optional_internal::optional_data.691" = type { %"class.absl::optional_internal::optional_data_base.692" }
%"class.absl::optional_internal::optional_data_base.692" = type { %"class.absl::optional_internal::optional_data_dtor_base.693" }
%"class.absl::optional_internal::optional_data_dtor_base.693" = type { i8, %union.anon.694 }
%union.anon.694 = type { i64 }
%"class.absl::optional.695" = type { %"class.absl::optional_internal::optional_data.696" }
%"class.absl::optional_internal::optional_data.696" = type { %"class.absl::optional_internal::optional_data_base.697" }
%"class.absl::optional_internal::optional_data_base.697" = type { %"class.absl::optional_internal::optional_data_dtor_base.698" }
%"class.absl::optional_internal::optional_data_dtor_base.698" = type { i8, %union.anon.699 }
%union.anon.699 = type { %"class.gfx::ColorSpace" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.cc::DrawImage"* }
%"class.base::flat_map.705" = type { %"class.base::internal::flat_tree.706" }
%"class.base::internal::flat_tree.706" = type { %"class.std::__1::vector.707" }
%"class.std::__1::vector.707" = type { %"class.std::__1::__vector_base.708" }
%"class.std::__1::__vector_base.708" = type { %"struct.std::__1::pair.709"*, %"struct.std::__1::pair.709"*, %"class.std::__1::__compressed_pair.710" }
%"struct.std::__1::pair.709" = type opaque
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"struct.std::__1::pair.709"* }
%"class.std::__1::map.715" = type { %"class.std::__1::__tree.716" }
%"class.std::__1::__tree.716" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.717", %"class.std::__1::__compressed_pair.721" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::vector.724" = type { %"class.std::__1::__vector_base.725" }
%"class.std::__1::__vector_base.725" = type { %"struct.cc::ImageController::ImageDecodeRequest"*, %"struct.cc::ImageController::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.736" }
%"struct.cc::ImageController::ImageDecodeRequest" = type <{ i64, %"class.cc::DrawImage", %"class.base::OnceCallback.726", %class.scoped_refptr.727, i8, [7 x i8] }>
%"class.base::OnceCallback.726" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.108 }
%class.scoped_refptr.108 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.109", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.109" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.727 = type { %"class.cc::TileTask"* }
%"class.cc::TileTask" = type <{ %"class.cc::Task", i32, i32, %"class.std::__1::vector.729", i8, [7 x i8] }>
%"class.cc::Task" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.728", %"class.cc::TaskState", i64 }
%"class.base::RefCountedThreadSafe.728" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::TaskState" = type { i16 }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"struct.cc::ImageController::ImageDecodeRequest"* }
%"class.base::WeakPtrFactory.741" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::DecodedImageTracker" = type { %"class.cc::ImageController"*, %"class.base::flat_map.742", i8, %class.scoped_refptr.668, %"class.base::TickClock"*, %"class.base::WeakPtrFactory.752" }
%"class.base::flat_map.742" = type { %"class.base::internal::flat_tree.743" }
%"class.base::internal::flat_tree.743" = type { %"class.std::__1::vector.744" }
%"class.std::__1::vector.744" = type { %"class.std::__1::__vector_base.745" }
%"class.std::__1::__vector_base.745" = type { %"struct.std::__1::pair.746"*, %"struct.std::__1::pair.746"*, %"class.std::__1::__compressed_pair.747" }
%"struct.std::__1::pair.746" = type { i32, %"class.std::__1::unique_ptr.1303" }
%"class.std::__1::unique_ptr.1303" = type { %"class.std::__1::__compressed_pair.1304" }
%"class.std::__1::__compressed_pair.1304" = type { %"struct.std::__1::__compressed_pair_elem.1305" }
%"struct.std::__1::__compressed_pair_elem.1305" = type { %"class.cc::DecodedImageTracker::ImageLock"* }
%"class.cc::DecodedImageTracker::ImageLock" = type { %"class.cc::DecodedImageTracker"*, i64, %"class.base::TimeTicks" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.748" }
%"struct.std::__1::__compressed_pair_elem.748" = type { %"struct.std::__1::pair.746"* }
%"class.base::WeakPtrFactory.752" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::CheckerImageTracker" = type { %"class.cc::ImageController"*, %"class.cc::CheckerImageTrackerClient"*, i8, i64, i8, %"class.base::internal::flat_tree.753", %"class.base::internal::flat_tree.753", %"class.std::__1::vector.754", i32, %"class.absl::optional.761", %"class.std::__1::unordered_map.766", %"class.std::__1::unordered_map.790", %"class.base::flat_map.814", %"class.base::WeakPtrFactory.824" }
%"class.base::internal::flat_tree.753" = type { %"class.std::__1::vector.151" }
%"class.std::__1::vector.754" = type { %"class.std::__1::__vector_base.755" }
%"class.std::__1::__vector_base.755" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.756" }
%"struct.cc::CheckerImageTracker::ImageDecodeRequest" = type <{ %"class.cc::PaintImage", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.756" = type { %"struct.std::__1::__compressed_pair_elem.757" }
%"struct.std::__1::__compressed_pair_elem.757" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"* }
%"class.absl::optional.761" = type { %"class.absl::optional_internal::optional_data.762" }
%"class.absl::optional_internal::optional_data.762" = type { %"class.absl::optional_internal::optional_data_base.763" }
%"class.absl::optional_internal::optional_data_base.763" = type { %"class.absl::optional_internal::optional_data_dtor_base.764" }
%"class.absl::optional_internal::optional_data_dtor_base.764" = type { i8, %union.anon.765 }
%union.anon.765 = type { %"class.cc::PaintImage" }
%"class.std::__1::unordered_map.766" = type { %"class.std::__1::__hash_table.767" }
%"class.std::__1::__hash_table.767" = type <{ %"class.std::__1::unique_ptr.768", %"class.std::__1::__compressed_pair.778", %"class.std::__1::__compressed_pair.783", %"class.std::__1::__compressed_pair.786", [4 x i8] }>
%"class.std::__1::unique_ptr.768" = type { %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.770", %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.770" = type { %"struct.std::__1::__hash_node_base.771"** }
%"struct.std::__1::__hash_node_base.771" = type { %"struct.std::__1::__hash_node_base.771"* }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"class.std::__1::__bucket_list_deallocator.773" }
%"class.std::__1::__bucket_list_deallocator.773" = type { %"class.std::__1::__compressed_pair.774" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.779" }
%"struct.std::__1::__compressed_pair_elem.779" = type { %"struct.std::__1::__hash_node_base.771" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::unordered_map.790" = type { %"class.std::__1::__hash_table.791" }
%"class.std::__1::__hash_table.791" = type <{ %"class.std::__1::unique_ptr.792", %"class.std::__1::__compressed_pair.802", %"class.std::__1::__compressed_pair.807", %"class.std::__1::__compressed_pair.810", [4 x i8] }>
%"class.std::__1::unique_ptr.792" = type { %"class.std::__1::__compressed_pair.793" }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.794", %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.794" = type { %"struct.std::__1::__hash_node_base.795"** }
%"struct.std::__1::__hash_node_base.795" = type { %"struct.std::__1::__hash_node_base.795"* }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"class.std::__1::__bucket_list_deallocator.797" }
%"class.std::__1::__bucket_list_deallocator.797" = type { %"class.std::__1::__compressed_pair.798" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.803" }
%"struct.std::__1::__compressed_pair_elem.803" = type { %"struct.std::__1::__hash_node_base.795" }
%"class.std::__1::__compressed_pair.807" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.base::flat_map.814" = type { %"class.base::internal::flat_tree.815" }
%"class.base::internal::flat_tree.815" = type { %"class.std::__1::vector.816" }
%"class.std::__1::vector.816" = type { %"class.std::__1::__vector_base.817" }
%"class.std::__1::__vector_base.817" = type { %"struct.std::__1::pair.818"*, %"struct.std::__1::pair.818"*, %"class.std::__1::__compressed_pair.819" }
%"struct.std::__1::pair.818" = type { i32, i32 }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"struct.std::__1::pair.818"* }
%"class.base::WeakPtrFactory.824" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.cc::RasterTaskCompletionStats" = type { i64, i64 }
%"struct.cc::TaskGraph" = type { %"class.std::__1::vector.825", %"class.std::__1::vector.833" }
%"class.std::__1::vector.825" = type { %"class.std::__1::__vector_base.826" }
%"class.std::__1::__vector_base.826" = type { %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"*, %"class.std::__1::__compressed_pair.828" }
%"struct.cc::TaskGraph::Node" = type { %class.scoped_refptr.827, i16, i16, i32 }
%class.scoped_refptr.827 = type { %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"struct.cc::TaskGraph::Node"* }
%"class.std::__1::vector.833" = type { %"class.std::__1::__vector_base.834" }
%"class.std::__1::__vector_base.834" = type { %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"*, %"class.std::__1::__compressed_pair.835" }
%"struct.cc::TaskGraph::Edge" = type { %"class.cc::Task"*, %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.836" }
%"struct.std::__1::__compressed_pair_elem.836" = type { %"struct.cc::TaskGraph::Edge"* }
%"struct.cc::TileManager::Signals" = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.cc::UniqueNotifier" = type { %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.840", %"class.base::Lock", i8, %"class.base::WeakPtrFactory.841" }
%"class.base::WeakPtrFactory.841" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.842" }
%"class.std::__1::__hash_table.842" = type <{ %"class.std::__1::unique_ptr.843", %"class.std::__1::__compressed_pair.853", %"class.std::__1::__compressed_pair.858", %"class.std::__1::__compressed_pair.862", [4 x i8] }>
%"class.std::__1::unique_ptr.843" = type { %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845", %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"struct.std::__1::__hash_node_base.846"** }
%"struct.std::__1::__hash_node_base.846" = type { %"struct.std::__1::__hash_node_base.846"* }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"class.std::__1::__bucket_list_deallocator.848" }
%"class.std::__1::__bucket_list_deallocator.848" = type { %"class.std::__1::__compressed_pair.849" }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"struct.std::__1::__hash_node_base.846" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::unordered_map.867" = type { %"class.std::__1::__hash_table.868" }
%"class.std::__1::__hash_table.868" = type <{ %"class.std::__1::unique_ptr.869", %"class.std::__1::__compressed_pair.879", %"class.std::__1::__compressed_pair.884", %"class.std::__1::__compressed_pair.887", [4 x i8] }>
%"class.std::__1::unique_ptr.869" = type { %"class.std::__1::__compressed_pair.870" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871", %"struct.std::__1::__compressed_pair_elem.873" }
%"struct.std::__1::__compressed_pair_elem.871" = type { %"struct.std::__1::__hash_node_base.872"** }
%"struct.std::__1::__hash_node_base.872" = type { %"struct.std::__1::__hash_node_base.872"* }
%"struct.std::__1::__compressed_pair_elem.873" = type { %"class.std::__1::__bucket_list_deallocator.874" }
%"class.std::__1::__bucket_list_deallocator.874" = type { %"class.std::__1::__compressed_pair.875" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.872" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::vector.729" = type { %"class.std::__1::__vector_base.730" }
%"class.std::__1::__vector_base.730" = type { %class.scoped_refptr.727*, %class.scoped_refptr.727*, %"class.std::__1::__compressed_pair.731" }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.732" }
%"struct.std::__1::__compressed_pair_elem.732" = type { %class.scoped_refptr.727* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.891" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.891" = type { %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %class.GURL* }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.897", %"class.base::WeakPtrFactory.898" }
%"class.base::OnceCallback.897" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.898" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.899, i8, [7 x i8] }>
%class.scoped_refptr.899 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.900", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.900" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.901" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.base::WeakPtrFactory.905" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.906" = type { %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.908" }
%"struct.std::__1::__compressed_pair_elem.908" = type { %"class.cc::BrowserControlsOffsetManager"* }
%"class.cc::BrowserControlsOffsetManager" = type { i32 (...)**, %"class.cc::BrowserControlsOffsetManagerClient"*, i32, float, float, float, float, float, i8, i8, [2 x i8], %"struct.cc::BrowserControlsParams", i8, i8, float, float, %"class.absl::optional.909", %"class.absl::optional.909", [4 x i8], %"class.cc::BrowserControlsOffsetManager::Animation", %"class.cc::BrowserControlsOffsetManager::Animation" }
%"class.absl::optional.909" = type { %"class.absl::optional_internal::optional_data.910" }
%"class.absl::optional_internal::optional_data.910" = type { %"class.absl::optional_internal::optional_data_base.911" }
%"class.absl::optional_internal::optional_data_base.911" = type { %"class.absl::optional_internal::optional_data_dtor_base.912" }
%"class.absl::optional_internal::optional_data_dtor_base.912" = type { i8, %union.anon.913 }
%union.anon.913 = type { %"struct.std::__1::pair.914" }
%"struct.std::__1::pair.914" = type { float, float }
%"class.cc::BrowserControlsOffsetManager::Animation" = type <{ i8, i8, [2 x i8], i32, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", float, float, float, float, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.918" = type { %"class.std::__1::__compressed_pair.919" }
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.920" }
%"struct.std::__1::__compressed_pair_elem.920" = type { %"class.cc::PageScaleAnimation"* }
%"class.cc::PageScaleAnimation" = type opaque
%"class.cc::DroppedFrameCounter" = type { %"class.base::TimeDelta", %"class.std::__1::queue", i32, double, %"class.cc::DroppedFrameCounter::SlidingWindowHistogram", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::RingBuffer", i64, i64, i64, i64, i8, double, %"class.absl::optional.937", %"class.absl::optional.937", %"class.absl::optional.937", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.cc::SharedMetricsBuffer"*, %"class.cc::FrameSorter", %"class.cc::TotalFrameCounter"*, %struct.anon.956, %"class.absl::optional.957", %"class.std::__1::map.962" }
%"class.std::__1::queue" = type { %"class.std::__1::deque.924" }
%"class.std::__1::deque.924" = type { %"class.std::__1::__deque_base.925" }
%"class.std::__1::__deque_base.925" = type { %"struct.std::__1::__split_buffer.926", i64, %"class.std::__1::__compressed_pair.933" }
%"struct.std::__1::__split_buffer.926" = type { %"struct.std::__1::pair.927"**, %"struct.std::__1::pair.927"**, %"struct.std::__1::pair.927"**, %"class.std::__1::__compressed_pair.928" }
%"struct.std::__1::pair.927" = type opaque
%"class.std::__1::__compressed_pair.928" = type { %"struct.std::__1::__compressed_pair_elem.929" }
%"struct.std::__1::__compressed_pair_elem.929" = type { %"struct.std::__1::pair.927"** }
%"class.std::__1::__compressed_pair.933" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.cc::DroppedFrameCounter::SlidingWindowHistogram" = type { [101 x i32], i32 }
%"class.base::RingBuffer" = type { [180 x i32], i64 }
%"class.absl::optional.937" = type { %"class.absl::optional_internal::optional_data.938" }
%"class.absl::optional_internal::optional_data.938" = type { %"class.absl::optional_internal::optional_data_base.939" }
%"class.absl::optional_internal::optional_data_base.939" = type { %"class.absl::optional_internal::optional_data_dtor_base.940" }
%"class.absl::optional_internal::optional_data_dtor_base.940" = type { i8, %union.anon.941 }
%union.anon.941 = type { double }
%"struct.cc::SharedMetricsBuffer" = type opaque
%"class.cc::FrameSorter" = type { i64, %"class.base::RepeatingCallback.942", %"class.base::circular_deque.943", %"class.std::__1::map.945", %"class.absl::optional.690" }
%"class.base::RepeatingCallback.942" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::circular_deque.943" = type { %"class.base::internal::VectorBuffer.944", i64, i64 }
%"class.base::internal::VectorBuffer.944" = type { %"struct.viz::BeginFrameArgs"*, i64 }
%"class.std::__1::map.945" = type { %"class.std::__1::__tree.946" }
%"class.std::__1::__tree.946" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.947", %"class.std::__1::__compressed_pair.951" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%struct.anon.956 = type { double, double }
%"class.absl::optional.957" = type { %"class.absl::optional_internal::optional_data.958" }
%"class.absl::optional_internal::optional_data.958" = type { %"class.absl::optional_internal::optional_data_base.959" }
%"class.absl::optional_internal::optional_data_base.959" = type { %"class.absl::optional_internal::optional_data_dtor_base.960" }
%"class.absl::optional_internal::optional_data_dtor_base.960" = type { i8, %union.anon.961 }
%union.anon.961 = type { %"struct.cc::DroppedFrameCounter::ScrollStartInfo" }
%"struct.cc::DroppedFrameCounter::ScrollStartInfo" = type { %"class.base::TimeTicks", %"struct.viz::BeginFrameId" }
%"class.std::__1::map.962" = type { %"class.std::__1::__tree.963" }
%"class.std::__1::__tree.963" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.964", %"class.std::__1::__compressed_pair.968" }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.cc::TotalFrameCounter" = type { i64, %"class.base::TimeDelta", %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.971" = type { %"class.std::__1::__compressed_pair.972" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.cc::MemoryHistory"* }
%"class.cc::MemoryHistory" = type { %"class.base::RingBuffer.974" }
%"class.base::RingBuffer.974" = type { [80 x %"struct.cc::MemoryHistory::Entry"], i64 }
%"class.std::__1::unique_ptr.978" = type { %"class.std::__1::__compressed_pair.979" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.980" }
%"struct.std::__1::__compressed_pair_elem.980" = type { %"class.cc::DebugRectHistory"* }
%"class.cc::DebugRectHistory" = type opaque
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.std::__1::unique_ptr.984" = type { %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"class.cc::MutatorHost"* }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.990" = type { %"class.std::__1::__compressed_pair.991" }
%"class.std::__1::__compressed_pair.991" = type { %"struct.std::__1::__compressed_pair_elem.992" }
%"struct.std::__1::__compressed_pair_elem.992" = type { %"class.cc::MutatorEvents"* }
%"class.cc::MutatorEvents" = type { i32 (...)** }
%"class.std::__1::set.996" = type { %"class.std::__1::__tree.997" }
%"class.std::__1::__tree.997" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.998", %"class.std::__1::__compressed_pair.1002" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::unordered_map.1006" = type { %"class.std::__1::__hash_table.1007" }
%"class.std::__1::__hash_table.1007" = type <{ %"class.std::__1::unique_ptr.1008", %"class.std::__1::__compressed_pair.1018", %"class.std::__1::__compressed_pair.1023", %"class.std::__1::__compressed_pair.1026", [4 x i8] }>
%"class.std::__1::unique_ptr.1008" = type { %"class.std::__1::__compressed_pair.1009" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.1010", %"struct.std::__1::__compressed_pair_elem.1012" }
%"struct.std::__1::__compressed_pair_elem.1010" = type { %"struct.std::__1::__hash_node_base.1011"** }
%"struct.std::__1::__hash_node_base.1011" = type { %"struct.std::__1::__hash_node_base.1011"* }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"class.std::__1::__bucket_list_deallocator.1013" }
%"class.std::__1::__bucket_list_deallocator.1013" = type { %"class.std::__1::__compressed_pair.1014" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"struct.std::__1::__hash_node_base.1011" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.cc::RenderingStatsInstrumentation" = type { i32 (...)**, %"struct.cc::RenderingStats", i8, %"class.base::Lock" }
%"struct.cc::RenderingStats" = type { i64, i64, i64, i64, i64, i64, %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList" }
%"class.cc::RenderingStats::TimeDeltaList" = type { %"class.std::__1::vector.1030" }
%"class.std::__1::vector.1030" = type { %"class.std::__1::__vector_base.1031" }
%"class.std::__1::__vector_base.1031" = type { %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.std::__1::__compressed_pair.1032" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.1033" }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"class.base::TimeDelta"* }
%"class.cc::MicroBenchmarkControllerImpl" = type { %"class.cc::LayerTreeHostImpl"*, %"class.std::__1::vector.1037" }
%"class.std::__1::vector.1037" = type { %"class.std::__1::__vector_base.1038" }
%"class.std::__1::__vector_base.1038" = type { %"class.std::__1::unique_ptr.1039"*, %"class.std::__1::unique_ptr.1039"*, %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::unique_ptr.1039" = type opaque
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"class.std::__1::unique_ptr.1039"* }
%"class.std::__1::unique_ptr.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"class.cc::SynchronousTaskGraphRunner"* }
%"class.cc::SynchronousTaskGraphRunner" = type opaque
%"class.base::RepeatingCallback.840" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::TaskGraphRunner" = type { i32 (...)** }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::unique_ptr.1051" = type { %"class.std::__1::__compressed_pair.1052" }
%"class.std::__1::__compressed_pair.1052" = type { %"struct.std::__1::__compressed_pair_elem.1053" }
%"struct.std::__1::__compressed_pair_elem.1053" = type { %"class.cc::Viewport"* }
%"class.cc::Viewport" = type opaque
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr.1057" = type { %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"class.cc::PendingTreeRasterDurationHistogramTimer"* }
%"class.cc::PendingTreeRasterDurationHistogramTimer" = type opaque
%"class.std::__1::vector.1063" = type { %"class.std::__1::__vector_base.1064" }
%"class.std::__1::__vector_base.1064" = type { %"struct.std::__1::pair.1065"*, %"struct.std::__1::pair.1065"*, %"class.std::__1::__compressed_pair.1066" }
%"struct.std::__1::pair.1065" = type opaque
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.1067" }
%"struct.std::__1::__compressed_pair_elem.1067" = type { %"struct.std::__1::pair.1065"* }
%"class.cc::ImageAnimationController" = type <{ %"class.base::flat_map.1071", %"class.base::internal::flat_tree.753", %"class.base::internal::flat_tree.753", %"class.cc::ImageAnimationController::InvalidationScheduler", i8, i8, i8, [5 x i8] }>
%"class.base::flat_map.1071" = type { %"class.base::internal::flat_tree.1072" }
%"class.base::internal::flat_tree.1072" = type { %"class.std::__1::vector.1073" }
%"class.std::__1::vector.1073" = type { %"class.std::__1::__vector_base.1074" }
%"class.std::__1::__vector_base.1074" = type { %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"*, %"class.std::__1::__compressed_pair.1076" }
%"struct.std::__1::pair.1075" = type { i32, %"class.cc::ImageAnimationController::AnimationState" }
%"class.cc::ImageAnimationController::AnimationState" = type { i32, %"class.std::__1::vector.680", i32, %"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState", %"class.base::internal::flat_tree.1309", i64, i8, i8, %"class.base::TimeTicks", i32, i32, i64 }
%"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState" = type { i64, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i64 }
%"class.base::internal::flat_tree.1309" = type { %"class.std::__1::vector.1310" }
%"class.std::__1::vector.1310" = type { %"class.std::__1::__vector_base.1311" }
%"class.std::__1::__vector_base.1311" = type { %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.std::__1::__compressed_pair.1312" }
%"class.std::__1::__compressed_pair.1312" = type { %"struct.std::__1::__compressed_pair_elem.1313" }
%"struct.std::__1::__compressed_pair_elem.1313" = type { %"class.cc::ImageAnimationController::AnimationDriver"** }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"struct.std::__1::pair.1075"* }
%"class.cc::ImageAnimationController::InvalidationScheduler" = type { %"class.base::SingleThreadTaskRunner"*, %"class.cc::ImageAnimationController::Client"*, %"class.base::RepeatingCallback.1081", i32, %"class.base::TimeTicks", %"class.base::WeakPtrFactory.1082" }
%"class.base::RepeatingCallback.1081" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1082" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.cc::UkmManager"* }
%"class.cc::UkmManager" = type { i8, i64, i64, i64, i64, i64, i32, i64, %"class.std::__1::unique_ptr.1086" }
%"class.std::__1::unique_ptr.1086" = type { %"class.std::__1::__compressed_pair.1087" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1095" = type { %"class.std::__1::__compressed_pair.1096" }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.cc::RenderFrameMetadataObserver"* }
%"class.cc::RenderFrameMetadataObserver" = type opaque
%"class.viz::FrameTokenGenerator" = type { i32 }
%"class.base::internal::flat_tree.565" = type { %"class.std::__1::vector.566" }
%"class.std::__1::vector.566" = type { %"class.std::__1::__vector_base.567" }
%"class.std::__1::__vector_base.567" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.573" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.568", %"class.viz::SurfaceId" }
%"class.absl::optional.568" = type { %"class.absl::optional_internal::optional_data.569" }
%"class.absl::optional_internal::optional_data.569" = type { %"class.absl::optional_internal::optional_data_base.570" }
%"class.absl::optional_internal::optional_data_base.570" = type { %"class.absl::optional_internal::optional_data_dtor_base.571" }
%"class.absl::optional_internal::optional_data_dtor_base.571" = type { i8, %union.anon.572 }
%union.anon.572 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"class.viz::SurfaceRange"* }
%"class.absl::optional.1101" = type { %"class.absl::optional_internal::optional_data.1102" }
%"class.absl::optional_internal::optional_data.1102" = type { %"class.absl::optional_internal::optional_data_base.1103" }
%"class.absl::optional_internal::optional_data_base.1103" = type { %"class.absl::optional_internal::optional_data_dtor_base.1104" }
%"class.absl::optional_internal::optional_data_dtor_base.1104" = type { i8, [7 x i8], %union.anon.1105 }
%union.anon.1105 = type { %"class.cc::RenderFrameMetadata" }
%"class.cc::RenderFrameMetadata" = type <{ i8, [3 x i8], i32, %"class.absl::optional.1106", %"struct.viz::Selection.1111", i8, %"class.absl::optional.1112", i8, float, %"class.gfx::Size", [4 x i8], %"class.absl::optional.1117", float, float, float, float, i32, [4 x i8] }>
%"class.absl::optional.1106" = type { %"class.absl::optional_internal::optional_data.1107" }
%"class.absl::optional_internal::optional_data.1107" = type { %"class.absl::optional_internal::optional_data_base.1108" }
%"class.absl::optional_internal::optional_data_base.1108" = type { %"class.absl::optional_internal::optional_data_dtor_base.1109" }
%"class.absl::optional_internal::optional_data_dtor_base.1109" = type { i8, %union.anon.1110 }
%union.anon.1110 = type { %"class.gfx::Vector2dF" }
%"struct.viz::Selection.1111" = type { %"class.gfx::SelectionBound", %"class.gfx::SelectionBound" }
%"class.gfx::SelectionBound" = type <{ i32, %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::Point", %"class.gfx::Point", i8, [3 x i8] }>
%"class.absl::optional.1112" = type { %"class.absl::optional_internal::optional_data.1113" }
%"class.absl::optional_internal::optional_data.1113" = type { %"class.absl::optional_internal::optional_data_base.1114" }
%"class.absl::optional_internal::optional_data_base.1114" = type { %"class.absl::optional_internal::optional_data_dtor_base.1115" }
%"class.absl::optional_internal::optional_data_dtor_base.1115" = type { i8, %union.anon.1116 }
%union.anon.1116 = type { %"struct.cc::DelegatedInkBrowserMetadata" }
%"struct.cc::DelegatedInkBrowserMetadata" = type { i8 }
%"class.absl::optional.1117" = type { %"class.absl::optional_internal::optional_data.1118" }
%"class.absl::optional_internal::optional_data.1118" = type { %"class.absl::optional_internal::optional_data_base.1119" }
%"class.absl::optional_internal::optional_data_base.1119" = type { %"class.absl::optional_internal::optional_data_dtor_base.1120" }
%"class.absl::optional_internal::optional_data_dtor_base.1120" = type { i8, %union.anon.1121 }
%union.anon.1121 = type { %"class.viz::LocalSurfaceId" }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.viz::ChildLocalSurfaceIdAllocator" = type { %"class.viz::LocalSurfaceId" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::PresentationTimeCallbackBuffer" = type { %"class.base::circular_deque.1122" }
%"class.base::circular_deque.1122" = type { %"class.base::internal::VectorBuffer.1123", i64, i64 }
%"class.base::internal::VectorBuffer.1123" = type { %"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo"*, i64 }
%"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo" = type { i32, %"class.std::__1::vector.603", %"class.std::__1::vector.603" }
%"class.cc::FrameSequenceTrackerCollection" = type { i8, %"class.std::__1::unique_ptr.1124", %"class.base::flat_map.1130", %"class.base::flat_map.1140", %"class.base::RepeatingCallback.1150", %"class.std::__1::vector.1151", %"class.cc::CompositorFrameReportingController"*, %"class.base::flat_map.1159", i64, i64 }
%"class.std::__1::unique_ptr.1124" = type { %"class.std::__1::__compressed_pair.1125" }
%"class.std::__1::__compressed_pair.1125" = type { %"struct.std::__1::__compressed_pair_elem.1126" }
%"struct.std::__1::__compressed_pair_elem.1126" = type { %"class.cc::ThroughputUkmReporter"* }
%"class.cc::ThroughputUkmReporter" = type opaque
%"class.base::flat_map.1130" = type { %"class.base::internal::flat_tree.1131" }
%"class.base::internal::flat_tree.1131" = type { %"class.std::__1::vector.1132" }
%"class.std::__1::vector.1132" = type { %"class.std::__1::__vector_base.1133" }
%"class.std::__1::__vector_base.1133" = type { %"struct.std::__1::pair.1134"*, %"struct.std::__1::pair.1134"*, %"class.std::__1::__compressed_pair.1135" }
%"struct.std::__1::pair.1134" = type opaque
%"class.std::__1::__compressed_pair.1135" = type { %"struct.std::__1::__compressed_pair_elem.1136" }
%"struct.std::__1::__compressed_pair_elem.1136" = type { %"struct.std::__1::pair.1134"* }
%"class.base::flat_map.1140" = type { %"class.base::internal::flat_tree.1141" }
%"class.base::internal::flat_tree.1141" = type { %"class.std::__1::vector.1142" }
%"class.std::__1::vector.1142" = type { %"class.std::__1::__vector_base.1143" }
%"class.std::__1::__vector_base.1143" = type { %"struct.std::__1::pair.1144"*, %"struct.std::__1::pair.1144"*, %"class.std::__1::__compressed_pair.1145" }
%"struct.std::__1::pair.1144" = type opaque
%"class.std::__1::__compressed_pair.1145" = type { %"struct.std::__1::__compressed_pair_elem.1146" }
%"struct.std::__1::__compressed_pair_elem.1146" = type { %"struct.std::__1::pair.1144"* }
%"class.base::RepeatingCallback.1150" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.1151" = type { %"class.std::__1::__vector_base.1152" }
%"class.std::__1::__vector_base.1152" = type { %"class.std::__1::unique_ptr.1153"*, %"class.std::__1::unique_ptr.1153"*, %"class.std::__1::__compressed_pair.1154" }
%"class.std::__1::unique_ptr.1153" = type opaque
%"class.std::__1::__compressed_pair.1154" = type { %"struct.std::__1::__compressed_pair_elem.1155" }
%"struct.std::__1::__compressed_pair_elem.1155" = type { %"class.std::__1::unique_ptr.1153"* }
%"class.base::flat_map.1159" = type { %"class.base::internal::flat_tree.1160" }
%"class.base::internal::flat_tree.1160" = type { %"class.std::__1::vector.1161" }
%"class.std::__1::vector.1161" = type { %"class.std::__1::__vector_base.1162" }
%"class.std::__1::__vector_base.1162" = type { %"struct.std::__1::pair.1163"*, %"struct.std::__1::pair.1163"*, %"class.std::__1::__compressed_pair.1164" }
%"struct.std::__1::pair.1163" = type opaque
%"class.std::__1::__compressed_pair.1164" = type { %"struct.std::__1::__compressed_pair_elem.1165" }
%"struct.std::__1::__compressed_pair_elem.1165" = type { %"struct.std::__1::pair.1163"* }
%"class.std::__1::unique_ptr.1169" = type { %"class.std::__1::__compressed_pair.1170" }
%"class.std::__1::__compressed_pair.1170" = type { %"struct.std::__1::__compressed_pair_elem.1171" }
%"struct.std::__1::__compressed_pair_elem.1171" = type { %"class.cc::PaintWorkletLayerPainter"* }
%"class.cc::PaintWorkletLayerPainter" = type opaque
%"class.cc::AnimatedPaintWorkletTracker" = type { %"class.base::flat_map.1175", %"class.base::internal::flat_tree.1185" }
%"class.base::flat_map.1175" = type { %"class.base::internal::flat_tree.1176" }
%"class.base::internal::flat_tree.1176" = type { %"class.std::__1::vector.1177" }
%"class.std::__1::vector.1177" = type { %"class.std::__1::__vector_base.1178" }
%"class.std::__1::__vector_base.1178" = type { %"struct.std::__1::pair.1179"*, %"struct.std::__1::pair.1179"*, %"class.std::__1::__compressed_pair.1180" }
%"struct.std::__1::pair.1179" = type opaque
%"class.std::__1::__compressed_pair.1180" = type { %"struct.std::__1::__compressed_pair_elem.1181" }
%"struct.std::__1::__compressed_pair_elem.1181" = type { %"struct.std::__1::pair.1179"* }
%"class.base::internal::flat_tree.1185" = type { %"class.std::__1::vector.1186" }
%"class.std::__1::vector.1186" = type { %"class.std::__1::__vector_base.1187" }
%"class.std::__1::__vector_base.1187" = type { %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"*, %"class.std::__1::__compressed_pair.1198" }
%"struct.cc::PaintWorkletInput::PropertyKey" = type { %"class.absl::optional.1188", %"class.absl::optional.1193", %"struct.cc::ElementId" }
%"class.absl::optional.1188" = type { %"class.absl::optional_internal::optional_data.1189" }
%"class.absl::optional_internal::optional_data.1189" = type { %"class.absl::optional_internal::optional_data_base.1190" }
%"class.absl::optional_internal::optional_data_base.1190" = type { %"class.absl::optional_internal::optional_data_dtor_base.1191" }
%"class.absl::optional_internal::optional_data_dtor_base.1191" = type { i8, %union.anon.1192 }
%union.anon.1192 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1193" = type { %"class.absl::optional_internal::optional_data.1194" }
%"class.absl::optional_internal::optional_data.1194" = type { %"class.absl::optional_internal::optional_data_base.1195" }
%"class.absl::optional_internal::optional_data_base.1195" = type { %"class.absl::optional_internal::optional_data_dtor_base.1196" }
%"class.absl::optional_internal::optional_data_dtor_base.1196" = type { i8, %union.anon.1197 }
%union.anon.1197 = type { i32 }
%"class.std::__1::__compressed_pair.1198" = type { %"struct.std::__1::__compressed_pair_elem.1199" }
%"struct.std::__1::__compressed_pair_elem.1199" = type { %"struct.cc::PaintWorkletInput::PropertyKey"* }
%"class.cc::AverageLagTrackingManager" = type { %"class.cc::AverageLagTracker", %"class.cc::AverageLagTracker", %"class.base::circular_deque.1215" }
%"class.cc::AverageLagTracker" = type <{ i32, [4 x i8], %"class.std::__1::deque.1203", %"class.base::TimeTicks", %"class.base::TimeTicks", float, float, %"class.base::TimeTicks", i8, [3 x i8], float, float, [4 x i8] }>
%"class.std::__1::deque.1203" = type { %"class.std::__1::__deque_base.1204" }
%"class.std::__1::__deque_base.1204" = type { %"struct.std::__1::__split_buffer.1205", i64, %"class.std::__1::__compressed_pair.1211" }
%"struct.std::__1::__split_buffer.1205" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"class.std::__1::__compressed_pair.1206" }
%"struct.cc::AverageLagTracker::LagAreaInFrame" = type { %"class.base::TimeTicks", float, float, float, float }
%"class.std::__1::__compressed_pair.1206" = type { %"struct.std::__1::__compressed_pair_elem.1207" }
%"struct.std::__1::__compressed_pair_elem.1207" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"** }
%"class.std::__1::__compressed_pair.1211" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.base::circular_deque.1215" = type { %"class.base::internal::VectorBuffer.1216", i64, i64 }
%"class.base::internal::VectorBuffer.1216" = type { %"struct.std::__1::pair.1217"*, i64 }
%"struct.std::__1::pair.1217" = type opaque
%"class.cc::DeJellyState" = type { i8, i32, float, float, %"class.absl::optional.1218", %"class.std::__1::map.1223", %"class.std::__1::map.1223" }
%"class.absl::optional.1218" = type { %"class.absl::optional_internal::optional_data.1219" }
%"class.absl::optional_internal::optional_data.1219" = type { %"class.absl::optional_internal::optional_data_base.1220" }
%"class.absl::optional_internal::optional_data_base.1220" = type { %"class.absl::optional_internal::optional_data_dtor_base.1221" }
%"class.absl::optional_internal::optional_data_dtor_base.1221" = type { i8, [3 x i8], %union.anon.1222 }
%union.anon.1222 = type { %"class.gfx::Transform" }
%"class.std::__1::map.1223" = type { %"class.std::__1::__tree.1224" }
%"class.std::__1::__tree.1224" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1225", %"class.std::__1::__compressed_pair.1229" }
%"class.std::__1::__compressed_pair.1225" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1229" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.1232", %"class.std::__1::vector.610" }
%"class.std::__1::vector.1232" = type { %"class.std::__1::__vector_base.1233" }
%"class.std::__1::__vector_base.1233" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.1234" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.1235" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::unique_ptr.1239" = type { %"class.std::__1::__compressed_pair.1240" }
%"class.std::__1::__compressed_pair.1240" = type { %"struct.std::__1::__compressed_pair_elem.1241" }
%"struct.std::__1::__compressed_pair_elem.1241" = type { %"class.cc::LCDTextMetricsReporter"* }
%"class.cc::LCDTextMetricsReporter" = type opaque
%"class.cc::FrameRateEstimator" = type { i8, %"class.base::TimeTicks", i64, i8, %"class.cc::DelayedUniqueNotifier" }
%"class.cc::DelayedUniqueNotifier" = type { i32 (...)**, %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.840", %"class.base::TimeDelta", %"class.base::TimeTicks", i8, %"class.base::WeakPtrFactory.1245" }
%"class.base::WeakPtrFactory.1245" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list.1246", %"class.std::__1::map.1253", i64 }
%"class.std::__1::list.1246" = type { %"class.std::__1::__list_imp.1247" }
%"class.std::__1::__list_imp.1247" = type { %"struct.std::__1::__list_node_base.1248", %"class.std::__1::__compressed_pair.1249" }
%"struct.std::__1::__list_node_base.1248" = type { %"struct.std::__1::__list_node_base.1248"*, %"struct.std::__1::__list_node_base.1248"* }
%"class.std::__1::__compressed_pair.1249" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::map.1253" = type { %"class.std::__1::__tree.1254" }
%"class.std::__1::__tree.1254" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1255", %"class.std::__1::__compressed_pair.1259" }
%"class.std::__1::__compressed_pair.1255" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.1259" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.cc::ThrottleDecider" = type { %"class.base::flat_map.1264", %"class.base::internal::flat_tree.1274", %"class.base::internal::flat_tree.1274" }
%"class.base::flat_map.1264" = type { %"class.base::internal::flat_tree.1265" }
%"class.base::internal::flat_tree.1265" = type { %"class.std::__1::vector.1266" }
%"class.std::__1::vector.1266" = type { %"class.std::__1::__vector_base.1267" }
%"class.std::__1::__vector_base.1267" = type { %"struct.std::__1::pair.1268"*, %"struct.std::__1::pair.1268"*, %"class.std::__1::__compressed_pair.1269" }
%"struct.std::__1::pair.1268" = type opaque
%"class.std::__1::__compressed_pair.1269" = type { %"struct.std::__1::__compressed_pair_elem.1270" }
%"struct.std::__1::__compressed_pair_elem.1270" = type { %"struct.std::__1::pair.1268"* }
%"class.base::internal::flat_tree.1274" = type { %"class.std::__1::vector.1275" }
%"class.std::__1::vector.1275" = type { %"class.std::__1::__vector_base.1276" }
%"class.std::__1::__vector_base.1276" = type { %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.std::__1::__compressed_pair.1277" }
%"class.std::__1::__compressed_pair.1277" = type { %"struct.std::__1::__compressed_pair_elem.1278" }
%"struct.std::__1::__compressed_pair_elem.1278" = type { %"class.viz::FrameSinkId"* }
%"class.std::__1::vector.197" = type { %"class.std::__1::__vector_base.198" }
%"class.std::__1::__vector_base.198" = type { i32*, i32*, %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { i32* }
%"class.base::WeakPtrFactory.1282" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map.1283", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map.1283" = type { %"class.base::internal::flat_tree.1284" }
%"class.base::internal::flat_tree.1284" = type { %"class.std::__1::vector.1285" }
%"class.std::__1::vector.1285" = type { %"class.std::__1::__vector_base.1286" }
%"class.std::__1::__vector_base.1286" = type { %"struct.std::__1::pair.1287"*, %"struct.std::__1::pair.1287"*, %"class.std::__1::__compressed_pair.1288" }
%"struct.std::__1::pair.1287" = type opaque
%"class.std::__1::__compressed_pair.1288" = type { %"struct.std::__1::__compressed_pair_elem.1289" }
%"struct.std::__1::__compressed_pair_elem.1289" = type { %"struct.std::__1::pair.1287"* }
%"class.cc::SwapPromiseManager" = type { %"class.std::__1::vector", %"class.std::__1::set" }
%"class.cc::LatencyInfoSwapPromise" = type { %"class.cc::SwapPromise", %"class.ui::LatencyInfo" }

@_ZTVN2cc29LatencyInfoSwapPromiseMonitorE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::LatencyInfoSwapPromiseMonitor"*)* @_ZN2cc29LatencyInfoSwapPromiseMonitorD2Ev to i8*), i8* bitcast (void (%"class.cc::LatencyInfoSwapPromiseMonitor"*)* @_ZN2cc29LatencyInfoSwapPromiseMonitorD0Ev to i8*), i8* bitcast (void (%"class.cc::LatencyInfoSwapPromiseMonitor"*)* @_ZN2cc29LatencyInfoSwapPromiseMonitor22OnSetNeedsCommitOnMainEv to i8*), i8* bitcast (void (%"class.cc::LatencyInfoSwapPromiseMonitor"*)* @_ZN2cc29LatencyInfoSwapPromiseMonitor22OnSetNeedsRedrawOnImplEv to i8*)] }, align 8

@_ZN2cc29LatencyInfoSwapPromiseMonitorC1EPN2ui11LatencyInfoEPNS_18SwapPromiseManagerE = hidden unnamed_addr alias void (%"class.cc::LatencyInfoSwapPromiseMonitor"*, %"class.ui::LatencyInfo"*, %"class.cc::SwapPromiseManager"*), void (%"class.cc::LatencyInfoSwapPromiseMonitor"*, %"class.ui::LatencyInfo"*, %"class.cc::SwapPromiseManager"*)* @_ZN2cc29LatencyInfoSwapPromiseMonitorC2EPN2ui11LatencyInfoEPNS_18SwapPromiseManagerE
@_ZN2cc29LatencyInfoSwapPromiseMonitorC1EPN2ui11LatencyInfoEPNS_17LayerTreeHostImplE = hidden unnamed_addr alias void (%"class.cc::LatencyInfoSwapPromiseMonitor"*, %"class.ui::LatencyInfo"*, %"class.cc::LayerTreeHostImpl"*), void (%"class.cc::LatencyInfoSwapPromiseMonitor"*, %"class.ui::LatencyInfo"*, %"class.cc::LayerTreeHostImpl"*)* @_ZN2cc29LatencyInfoSwapPromiseMonitorC2EPN2ui11LatencyInfoEPNS_17LayerTreeHostImplE
@_ZN2cc29LatencyInfoSwapPromiseMonitorD1Ev = hidden unnamed_addr alias void (%"class.cc::LatencyInfoSwapPromiseMonitor"*), void (%"class.cc::LatencyInfoSwapPromiseMonitor"*)* @_ZN2cc29LatencyInfoSwapPromiseMonitorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc29LatencyInfoSwapPromiseMonitorC2EPN2ui11LatencyInfoEPNS_18SwapPromiseManagerE(%"class.cc::LatencyInfoSwapPromiseMonitor"*, %"class.ui::LatencyInfo"*, %"class.cc::SwapPromiseManager"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::LatencyInfoSwapPromiseMonitor", %"class.cc::LatencyInfoSwapPromiseMonitor"* %0, i64 0, i32 0
  tail call void @_ZN2cc18SwapPromiseMonitorC2EPNS_18SwapPromiseManagerE(%"class.cc::SwapPromiseMonitor"* %4, %"class.cc::SwapPromiseManager"* %2) #5
  %5 = getelementptr inbounds %"class.cc::LatencyInfoSwapPromiseMonitor", %"class.cc::LatencyInfoSwapPromiseMonitor"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2cc29LatencyInfoSwapPromiseMonitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.cc::LatencyInfoSwapPromiseMonitor", %"class.cc::LatencyInfoSwapPromiseMonitor"* %0, i64 0, i32 1
  store %"class.ui::LatencyInfo"* %1, %"class.ui::LatencyInfo"** %6, align 8
  ret void
}

declare void @_ZN2cc18SwapPromiseMonitorC2EPNS_18SwapPromiseManagerE(%"class.cc::SwapPromiseMonitor"*, %"class.cc::SwapPromiseManager"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc29LatencyInfoSwapPromiseMonitorC2EPN2ui11LatencyInfoEPNS_17LayerTreeHostImplE(%"class.cc::LatencyInfoSwapPromiseMonitor"*, %"class.ui::LatencyInfo"*, %"class.cc::LayerTreeHostImpl"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::LatencyInfoSwapPromiseMonitor", %"class.cc::LatencyInfoSwapPromiseMonitor"* %0, i64 0, i32 0
  tail call void @_ZN2cc18SwapPromiseMonitorC2EPNS_17LayerTreeHostImplE(%"class.cc::SwapPromiseMonitor"* %4, %"class.cc::LayerTreeHostImpl"* %2) #5
  %5 = getelementptr inbounds %"class.cc::LatencyInfoSwapPromiseMonitor", %"class.cc::LatencyInfoSwapPromiseMonitor"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2cc29LatencyInfoSwapPromiseMonitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.cc::LatencyInfoSwapPromiseMonitor", %"class.cc::LatencyInfoSwapPromiseMonitor"* %0, i64 0, i32 1
  store %"class.ui::LatencyInfo"* %1, %"class.ui::LatencyInfo"** %6, align 8
  ret void
}

declare void @_ZN2cc18SwapPromiseMonitorC2EPNS_17LayerTreeHostImplE(%"class.cc::SwapPromiseMonitor"*, %"class.cc::LayerTreeHostImpl"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc18SwapPromiseMonitorD2Ev(%"class.cc::SwapPromiseMonitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc29LatencyInfoSwapPromiseMonitorD2Ev(%"class.cc::LatencyInfoSwapPromiseMonitor"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LatencyInfoSwapPromiseMonitor", %"class.cc::LatencyInfoSwapPromiseMonitor"* %0, i64 0, i32 0
  tail call void @_ZN2cc18SwapPromiseMonitorD2Ev(%"class.cc::SwapPromiseMonitor"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc29LatencyInfoSwapPromiseMonitorD0Ev(%"class.cc::LatencyInfoSwapPromiseMonitor"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LatencyInfoSwapPromiseMonitor", %"class.cc::LatencyInfoSwapPromiseMonitor"* %0, i64 0, i32 0
  tail call void @_ZN2cc18SwapPromiseMonitorD2Ev(%"class.cc::SwapPromiseMonitor"* %2) #5
  %3 = bitcast %"class.cc::LatencyInfoSwapPromiseMonitor"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc29LatencyInfoSwapPromiseMonitor22OnSetNeedsCommitOnMainEv(%"class.cc::LatencyInfoSwapPromiseMonitor"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LatencyInfoSwapPromiseMonitor", %"class.cc::LatencyInfoSwapPromiseMonitor"* %0, i64 0, i32 1
  %3 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK2ui11LatencyInfo11FindLatencyENS_20LatencyComponentTypeEPN4base9TimeTicksE(%"class.ui::LatencyInfo"* %3, i32 6, %"class.base::TimeTicks"* null) #5
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  tail call void @_ZN2ui11LatencyInfo16AddLatencyNumberENS_20LatencyComponentTypeE(%"class.ui::LatencyInfo"* %3, i32 6) #5
  %6 = tail call i8* @_Znwm(i64 72) #6
  %7 = bitcast i8* %6 to %"class.cc::LatencyInfoSwapPromise"*
  %8 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %2, align 8
  tail call void @_ZN2cc22LatencyInfoSwapPromiseC1ERKN2ui11LatencyInfoE(%"class.cc::LatencyInfoSwapPromise"* nonnull %7, %"class.ui::LatencyInfo"* dereferenceable(64) %8) #5
  %9 = bitcast i8* %6 to %"class.cc::SwapPromise"*
  %10 = getelementptr inbounds %"class.cc::LatencyInfoSwapPromiseMonitor", %"class.cc::LatencyInfoSwapPromiseMonitor"* %0, i64 0, i32 0, i32 1
  %11 = load %"class.cc::SwapPromiseManager"*, %"class.cc::SwapPromiseManager"** %10, align 8
  tail call void @_ZN2cc18SwapPromiseManager16QueueSwapPromiseENSt3__110unique_ptrINS_11SwapPromiseENS1_14default_deleteIS3_EEEE(%"class.cc::SwapPromiseManager"* %11, %"class.cc::SwapPromise"* nonnull %9) #5
  br label %12

12:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN2cc22LatencyInfoSwapPromiseC1ERKN2ui11LatencyInfoE(%"class.cc::LatencyInfoSwapPromise"*, %"class.ui::LatencyInfo"* dereferenceable(64)) unnamed_addr #1

declare void @_ZN2cc18SwapPromiseManager16QueueSwapPromiseENSt3__110unique_ptrINS_11SwapPromiseENS1_14default_deleteIS3_EEEE(%"class.cc::SwapPromiseManager"*, %"class.cc::SwapPromise"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc29LatencyInfoSwapPromiseMonitor22OnSetNeedsRedrawOnImplEv(%"class.cc::LatencyInfoSwapPromiseMonitor"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LatencyInfoSwapPromiseMonitor", %"class.cc::LatencyInfoSwapPromiseMonitor"* %0, i64 0, i32 1
  %3 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK2ui11LatencyInfo11FindLatencyENS_20LatencyComponentTypeEPN4base9TimeTicksE(%"class.ui::LatencyInfo"* %3, i32 7, %"class.base::TimeTicks"* null) #5
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  tail call void @_ZN2ui11LatencyInfo16AddLatencyNumberENS_20LatencyComponentTypeE(%"class.ui::LatencyInfo"* %3, i32 7) #5
  %6 = tail call i8* @_Znwm(i64 72) #6
  %7 = bitcast i8* %6 to %"class.cc::LatencyInfoSwapPromise"*
  %8 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %2, align 8
  tail call void @_ZN2cc22LatencyInfoSwapPromiseC1ERKN2ui11LatencyInfoE(%"class.cc::LatencyInfoSwapPromise"* nonnull %7, %"class.ui::LatencyInfo"* dereferenceable(64) %8) #5
  %9 = bitcast i8* %6 to %"class.cc::SwapPromise"*
  %10 = getelementptr inbounds %"class.cc::LatencyInfoSwapPromiseMonitor", %"class.cc::LatencyInfoSwapPromiseMonitor"* %0, i64 0, i32 0, i32 2
  %11 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %11, i64 0, i32 35, i32 0, i32 0, i32 0
  %13 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %12, align 8
  tail call void @_ZN2cc13LayerTreeImpl22QueuePinnedSwapPromiseENSt3__110unique_ptrINS_11SwapPromiseENS1_14default_deleteIS3_EEEE(%"class.cc::LayerTreeImpl"* %13, %"class.cc::SwapPromise"* nonnull %9) #5
  br label %14

14:                                               ; preds = %1, %5
  ret void
}

declare void @_ZN2cc13LayerTreeImpl22QueuePinnedSwapPromiseENSt3__110unique_ptrINS_11SwapPromiseENS1_14default_deleteIS3_EEEE(%"class.cc::LayerTreeImpl"*, %"class.cc::SwapPromise"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2ui11LatencyInfo11FindLatencyENS_20LatencyComponentTypeEPN4base9TimeTicksE(%"class.ui::LatencyInfo"*, i32, %"class.base::TimeTicks"*) local_unnamed_addr #1

declare void @_ZN2ui11LatencyInfo16AddLatencyNumberENS_20LatencyComponentTypeE(%"class.ui::LatencyInfo"*, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
