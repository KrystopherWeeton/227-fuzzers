; ModuleID = '../../third_party/unrar/src/crypt.cpp'
source_filename = "../../third_party/unrar/src/crypt.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%class.CryptData = type { [4 x %"struct.CryptData::KDF3CacheItem"], i32, [4 x %"struct.CryptData::KDF5CacheItem"], i32, i32, %class.Rijndael, [256 x i32], [256 x i8], [4 x i32], [3 x i8], [4 x i16] }
%"struct.CryptData::KDF3CacheItem" = type { %class.SecPassword, [8 x i8], [16 x i8], [16 x i8], i8, [3 x i8] }
%class.SecPassword = type <{ [128 x i32], i8, i8, [2 x i8] }>
%"struct.CryptData::KDF5CacheItem" = type { %class.SecPassword, [16 x i8], [32 x i8], i32, [32 x i8], [32 x i8] }
%class.Rijndael = type { i8, i32, [16 x i8], [15 x [4 x [4 x i8]]] }
%struct.sha1_context = type { [5 x i32], i64, [64 x i8] }
%struct.sha256_context = type { [8 x i32], i64, [64 x i8] }
%struct.HashValue = type { i32, %union.anon }
%union.anon = type { i32, [28 x i8] }
%class.RarTime = type { i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@_ZL16InitSubstTable20 = internal unnamed_addr constant [256 x i8] c"\D7\13\95#I\C5\C0\CD\F9\1C\10w0\DD\02*\E8\01\B1\E9\0EX\DB\19\DF\C3\F4ZW\EF\99\89\FF\C7\93F\5CB\F6\0D\D8(>\1D\D9\E6V\06G\18\AB\C4eq\DA{][\A3\B2\CAC,\EBk\FAK\EA1\A7}\D3Sr\9D\90 \C1\8F$\9E|\F7\BBY\D6\8D/y\E4=\82\D5\C2\AE\FBan6\E5s9\98^i\F3\D47\D1\F5?\0B\A4\C8\1F\9CQ\B0\E3\15Lc\8B\BC\7F\11\F83\CFx\BD\D2\08\E2)H\B7\CB\87\A5\A6<b\07z&\9B\AAE\AC\FC\EE'\86;\80\EC\1B\F0P\83\03U\CE\91O\9A\8E\9F\DC\C9\85J@\14\81\E0\B9\8Ag\AD\B6+\22\FER\C6\97\E7\B4:\0Av\1Af\0C2\84\16\BF\88o\A2\B3-\04\94l\A18N~\F2\DE\0F\AF\92\17!\F1\B5\BEM\E1\00.\A9\BAD_\EDA5\D0\FD\A8\09\12d4t\B8\A0`m%\1Ej\8Ch\96\05\CCupT", align 16
@.str = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@_ZZL13TimeRandomizePhmE5Count = internal unnamed_addr global i32 0, align 4

@_ZN9CryptDataC1Ev = hidden unnamed_addr alias void (%class.CryptData*), void (%class.CryptData*)* @_ZN9CryptDataC2Ev
@_ZN9CryptDataD1Ev = hidden unnamed_addr alias void (%class.CryptData*), void (%class.CryptData*)* @_ZN9CryptDataD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9CryptData8SetKey13EPKc(%class.CryptData* nocapture, i8* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 9, i64 2
  store i8 0, i8* %3, align 2
  %4 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 9, i64 1
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 9, i64 0
  store i8 0, i8* %5, align 4
  %6 = load i8, i8* %1, align 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %9, %2
  ret void

9:                                                ; preds = %2, %9
  %10 = phi i8 [ %20, %9 ], [ 0, %2 ]
  %11 = phi i8 [ %16, %9 ], [ 0, %2 ]
  %12 = phi i8 [ %15, %9 ], [ 0, %2 ]
  %13 = phi i8 [ %23, %9 ], [ %6, %2 ]
  %14 = phi i64 [ %21, %9 ], [ 0, %2 ]
  %15 = add i8 %12, %13
  store i8 %15, i8* %5, align 4
  %16 = xor i8 %11, %13
  store i8 %16, i8* %4, align 1
  %17 = add i8 %10, %13
  %18 = shl i8 %17, 1
  %19 = lshr i8 %17, 7
  %20 = or i8 %18, %19
  store i8 %20, i8* %3, align 2
  %21 = add i64 %14, 1
  %22 = getelementptr inbounds i8, i8* %1, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %8, label %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CryptData8SetKey15EPKc(%class.CryptData*, i8*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 0
  tail call void @_Z9InitCRC32Pj(i32* %3) #9
  %4 = tail call i64 @strlen(i8* %1) #10
  %5 = tail call i32 @_Z5CRC32jPKvm(i32 -1, i8* %1, i64 %4) #9
  %6 = trunc i32 %5 to i16
  %7 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 10, i64 0
  store i16 %6, i16* %7, align 4
  %8 = lshr i32 %5, 16
  %9 = trunc i32 %8 to i16
  %10 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 10, i64 1
  store i16 %9, i16* %10, align 2
  %11 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 10, i64 3
  store i16 0, i16* %11, align 2
  %12 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 10, i64 2
  store i16 0, i16* %12, align 4
  %13 = load i8, i8* %1, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %16, %2
  ret void

16:                                               ; preds = %2, %16
  %17 = phi i16 [ %32, %16 ], [ 0, %2 ]
  %18 = phi i16 [ %27, %16 ], [ 0, %2 ]
  %19 = phi i8 [ %35, %16 ], [ %13, %2 ]
  %20 = phi i64 [ %33, %16 ], [ 0, %2 ]
  %21 = zext i8 %19 to i32
  %22 = zext i8 %19 to i64
  %23 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %22
  %24 = load i32, i32* %23, align 4
  %25 = xor i32 %24, %21
  %26 = trunc i32 %25 to i16
  %27 = xor i16 %18, %26
  store i16 %27, i16* %12, align 4
  %28 = load i32, i32* %23, align 4
  %29 = lshr i32 %28, 16
  %30 = add nuw nsw i32 %29, %21
  %31 = trunc i32 %30 to i16
  %32 = add i16 %17, %31
  store i16 %32, i16* %11, align 2
  %33 = add i64 %20, 1
  %34 = getelementptr inbounds i8, i8* %1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %15, label %16
}

declare void @_Z9InitCRC32Pj(i32*) local_unnamed_addr #3

declare i32 @_Z5CRC32jPKvm(i32, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CryptData17SetAV15EncryptionEv(%class.CryptData*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 0
  tail call void @_Z9InitCRC32Pj(i32* %2) #9
  %3 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 4
  store i32 2, i32* %3, align 4
  %4 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 10, i64 0
  store i16 18277, i16* %4, align 4
  %5 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 10, i64 1
  store i16 -28639, i16* %5, align 2
  %6 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 10, i64 2
  store i16 29570, i16* %6, align 4
  %7 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 10, i64 3
  store i16 21013, i16* %7, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN9CryptData18SetCmt13EncryptionEv(%class.CryptData* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 4
  store i32 1, i32* %2, align 4
  %3 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 9, i64 0
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 9, i64 1
  store i8 7, i8* %4, align 1
  %5 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 9, i64 2
  store i8 77, i8* %5, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9CryptData9Decrypt13EPhm(%class.CryptData* nocapture, i8* nocapture, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %46, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 9, i64 2
  %7 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 9, i64 1
  %8 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 9, i64 0
  %9 = and i64 %2, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %5
  %12 = add i64 %2, -1
  %13 = load i8, i8* %6, align 2
  %14 = load i8, i8* %7, align 1
  %15 = add i8 %14, %13
  store i8 %15, i8* %7, align 1
  %16 = load i8, i8* %8, align 4
  %17 = add i8 %16, %15
  store i8 %17, i8* %8, align 4
  %18 = load i8, i8* %1, align 1
  %19 = sub i8 %18, %17
  store i8 %19, i8* %1, align 1
  %20 = getelementptr inbounds i8, i8* %1, i64 1
  br label %21

21:                                               ; preds = %5, %11
  %22 = phi i64 [ %2, %5 ], [ %12, %11 ]
  %23 = phi i8* [ %1, %5 ], [ %20, %11 ]
  %24 = icmp eq i64 %2, 1
  br i1 %24, label %46, label %25

25:                                               ; preds = %21, %25
  %26 = phi i64 [ %36, %25 ], [ %22, %21 ]
  %27 = phi i8* [ %44, %25 ], [ %23, %21 ]
  %28 = load i8, i8* %6, align 2
  %29 = load i8, i8* %7, align 1
  %30 = add i8 %29, %28
  store i8 %30, i8* %7, align 1
  %31 = load i8, i8* %8, align 4
  %32 = add i8 %31, %30
  store i8 %32, i8* %8, align 4
  %33 = load i8, i8* %27, align 1
  %34 = sub i8 %33, %32
  store i8 %34, i8* %27, align 1
  %35 = getelementptr inbounds i8, i8* %27, i64 1
  %36 = add i64 %26, -2
  %37 = load i8, i8* %6, align 2
  %38 = load i8, i8* %7, align 1
  %39 = add i8 %38, %37
  store i8 %39, i8* %7, align 1
  %40 = load i8, i8* %8, align 4
  %41 = add i8 %40, %39
  store i8 %41, i8* %8, align 4
  %42 = load i8, i8* %35, align 1
  %43 = sub i8 %42, %41
  store i8 %43, i8* %35, align 1
  %44 = getelementptr inbounds i8, i8* %27, i64 2
  %45 = icmp eq i64 %36, 0
  br i1 %45, label %46, label %25

46:                                               ; preds = %21, %25, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9CryptData7Crypt15EPhm(%class.CryptData* nocapture, i8* nocapture, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %45, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 10, i64 0
  %7 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 10, i64 1
  %8 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 10, i64 2
  %9 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 10, i64 3
  br label %10

10:                                               ; preds = %5, %10
  %11 = phi i64 [ %2, %5 ], [ %13, %10 ]
  %12 = phi i8* [ %1, %5 ], [ %43, %10 ]
  %13 = add i64 %11, -1
  %14 = load i16, i16* %6, align 4
  %15 = add i16 %14, 4660
  store i16 %15, i16* %6, align 4
  %16 = lshr i16 %15, 1
  %17 = and i16 %16, 255
  %18 = zext i16 %17 to i64
  %19 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = load i16, i16* %7, align 2
  %22 = trunc i32 %20 to i16
  %23 = xor i16 %21, %22
  store i16 %23, i16* %7, align 2
  %24 = load i32, i32* %19, align 4
  %25 = lshr i32 %24, 16
  %26 = load i16, i16* %8, align 4
  %27 = trunc i32 %25 to i16
  %28 = sub i16 %26, %27
  store i16 %28, i16* %8, align 4
  %29 = xor i16 %28, %15
  %30 = load i16, i16* %9, align 2
  %31 = lshr i16 %30, 1
  %32 = shl i16 %30, 15
  %33 = or i16 %31, %32
  %34 = xor i16 %33, %23
  %35 = lshr i16 %34, 1
  %36 = shl i16 %34, 15
  %37 = or i16 %35, %36
  store i16 %37, i16* %9, align 2
  %38 = xor i16 %37, %29
  store i16 %38, i16* %6, align 4
  %39 = lshr i16 %38, 8
  %40 = trunc i16 %39 to i8
  %41 = load i8, i8* %12, align 1
  %42 = xor i8 %41, %40
  store i8 %42, i8* %12, align 1
  %43 = getelementptr inbounds i8, i8* %12, i64 1
  %44 = icmp eq i64 %13, 0
  br i1 %44, label %45, label %10

45:                                               ; preds = %10, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CryptData8SetKey20EPKc(%class.CryptData*, i8*) local_unnamed_addr #2 align 2 {
  %3 = alloca [128 x i8], align 16
  %4 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 0
  tail call void @_Z9InitCRC32Pj(i32* %4) #9
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 128, i1 false)
  call void @_Z8strncpyzPcPKcm(i8* nonnull %5, i8* %1, i64 128) #9
  %6 = call i64 @strlen(i8* nonnull %5) #10
  %7 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 8, i64 0
  %8 = bitcast i32* %7 to <4 x i32>*
  store <4 x i32> <i32 -744245127, i32 1064112887, i32 1964352053, i32 -1528303325>, <4 x i32>* %8, align 4
  %9 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 7, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 16 getelementptr inbounds ([256 x i8], [256 x i8]* @_ZL16InitSubstTable20, i64 0, i64 0), i64 256, i1 false)
  %10 = icmp eq i64 %6, 0
  br label %11

11:                                               ; preds = %18, %2
  %12 = phi i32 [ 0, %2 ], [ %19, %18 ]
  br i1 %10, label %18, label %21

13:                                               ; preds = %18
  %14 = and i64 %6, 15
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %66, label %16

16:                                               ; preds = %13
  %17 = or i64 %6, 15
  br label %61

18:                                               ; preds = %43, %11
  %19 = add nuw nsw i32 %12, 1
  %20 = icmp eq i32 %19, 256
  br i1 %20, label %13, label %11

21:                                               ; preds = %11, %43
  %22 = phi i64 [ %44, %43 ], [ 0, %11 ]
  %23 = getelementptr inbounds i8, i8* %1, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = sub nsw i32 %25, %12
  %27 = and i32 %26, 255
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %28
  %30 = load i32, i32* %29, align 4
  %31 = or i64 %22, 1
  %32 = getelementptr inbounds i8, i8* %1, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = add nuw i32 %12, %34
  %36 = and i32 %35, 255
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = and i32 %39, 255
  %41 = and i32 %30, 255
  %42 = icmp eq i32 %41, %40
  br i1 %42, label %43, label %46

43:                                               ; preds = %46, %21
  %44 = add i64 %22, 2
  %45 = icmp ult i64 %44, %6
  br i1 %45, label %21, label %18

46:                                               ; preds = %21, %46
  %47 = phi i64 [ %58, %46 ], [ 1, %21 ]
  %48 = phi i32 [ %59, %46 ], [ %41, %21 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 7, i64 %49
  %51 = add i64 %22, %49
  %52 = add i64 %51, %47
  %53 = and i64 %52, 255
  %54 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 7, i64 %53
  %55 = load i8, i8* %50, align 1
  %56 = load i8, i8* %54, align 1
  store i8 %56, i8* %50, align 1
  store i8 %55, i8* %54, align 1
  %57 = add nuw nsw i32 %48, 1
  %58 = add nuw i64 %47, 1
  %59 = and i32 %57, 255
  %60 = icmp eq i32 %59, %40
  br i1 %60, label %43, label %46

61:                                               ; preds = %16, %61
  %62 = phi i64 [ %6, %16 ], [ %64, %61 ]
  %63 = getelementptr inbounds [128 x i8], [128 x i8]* %3, i64 0, i64 %62
  store i8 0, i8* %63, align 1
  %64 = add i64 %62, 1
  %65 = icmp ugt i64 %64, %17
  br i1 %65, label %66, label %61

66:                                               ; preds = %61, %13
  br i1 %10, label %67, label %68

67:                                               ; preds = %68, %66
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #9
  ret void

68:                                               ; preds = %66, %68
  %69 = phi i64 [ %71, %68 ], [ 0, %66 ]
  %70 = getelementptr inbounds [128 x i8], [128 x i8]* %3, i64 0, i64 %69
  call void @_ZN9CryptData14EncryptBlock20EPh(%class.CryptData* %0, i8* %70)
  %71 = add i64 %69, 16
  %72 = icmp ult i64 %71, %6
  br i1 %72, label %68, label %67
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_Z8strncpyzPcPKcm(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9CryptData6Swap20EPhS0_(%class.CryptData* nocapture readnone, i8* nocapture, i8* nocapture) local_unnamed_addr #0 align 2 {
  %4 = load i8, i8* %1, align 1
  %5 = load i8, i8* %2, align 1
  store i8 %5, i8* %1, align 1
  store i8 %4, i8* %2, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9CryptData14EncryptBlock20EPh(%class.CryptData*, i8*) local_unnamed_addr #0 align 2 {
  %3 = bitcast i8* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 8, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = xor i32 %6, %4
  %8 = getelementptr inbounds i8, i8* %1, i64 4
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 8, i64 1
  %12 = load i32, i32* %11, align 4
  %13 = xor i32 %12, %10
  %14 = getelementptr inbounds i8, i8* %1, i64 8
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 8, i64 2
  %18 = load i32, i32* %17, align 4
  %19 = xor i32 %18, %16
  %20 = getelementptr inbounds i8, i8* %1, i64 12
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 8, i64 3
  %24 = load i32, i32* %23, align 4
  %25 = xor i32 %24, %22
  br label %130

26:                                               ; preds = %130
  %27 = xor i32 %173, %6
  store i32 %27, i32* %3, align 4
  %28 = load i32, i32* %11, align 4
  %29 = xor i32 %28, %207
  store i32 %29, i32* %9, align 4
  %30 = load i32, i32* %17, align 4
  %31 = xor i32 %30, %133
  store i32 %31, i32* %15, align 4
  %32 = load i32, i32* %23, align 4
  %33 = xor i32 %32, %132
  store i32 %33, i32* %21, align 4
  %34 = and i32 %27, 255
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = load i32, i32* %5, align 4
  %39 = xor i32 %38, %37
  store i32 %39, i32* %5, align 4
  %40 = getelementptr inbounds i8, i8* %1, i64 1
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i64
  %43 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = load i32, i32* %11, align 4
  %46 = xor i32 %45, %44
  store i32 %46, i32* %11, align 4
  %47 = getelementptr inbounds i8, i8* %1, i64 2
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i64
  %50 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = load i32, i32* %17, align 4
  %53 = xor i32 %52, %51
  store i32 %53, i32* %17, align 4
  %54 = getelementptr inbounds i8, i8* %1, i64 3
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i64
  %57 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = load i32, i32* %23, align 4
  %60 = xor i32 %59, %58
  store i32 %60, i32* %23, align 4
  %61 = load i8, i8* %8, align 1
  %62 = zext i8 %61 to i64
  %63 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = xor i32 %64, %39
  store i32 %65, i32* %5, align 4
  %66 = getelementptr inbounds i8, i8* %1, i64 5
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = xor i32 %70, %46
  store i32 %71, i32* %11, align 4
  %72 = getelementptr inbounds i8, i8* %1, i64 6
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i64
  %75 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %74
  %76 = load i32, i32* %75, align 4
  %77 = xor i32 %76, %53
  store i32 %77, i32* %17, align 4
  %78 = getelementptr inbounds i8, i8* %1, i64 7
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i64
  %81 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %80
  %82 = load i32, i32* %81, align 4
  %83 = xor i32 %82, %60
  store i32 %83, i32* %23, align 4
  %84 = load i8, i8* %14, align 1
  %85 = zext i8 %84 to i64
  %86 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = xor i32 %87, %65
  store i32 %88, i32* %5, align 4
  %89 = getelementptr inbounds i8, i8* %1, i64 9
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i64
  %92 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %91
  %93 = load i32, i32* %92, align 4
  %94 = xor i32 %93, %71
  store i32 %94, i32* %11, align 4
  %95 = getelementptr inbounds i8, i8* %1, i64 10
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i64
  %98 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %97
  %99 = load i32, i32* %98, align 4
  %100 = xor i32 %99, %77
  store i32 %100, i32* %17, align 4
  %101 = getelementptr inbounds i8, i8* %1, i64 11
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i64
  %104 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %103
  %105 = load i32, i32* %104, align 4
  %106 = xor i32 %105, %83
  store i32 %106, i32* %23, align 4
  %107 = load i8, i8* %20, align 1
  %108 = zext i8 %107 to i64
  %109 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = xor i32 %110, %88
  store i32 %111, i32* %5, align 4
  %112 = getelementptr inbounds i8, i8* %1, i64 13
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i64
  %115 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = xor i32 %116, %94
  store i32 %117, i32* %11, align 4
  %118 = getelementptr inbounds i8, i8* %1, i64 14
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = xor i32 %122, %100
  store i32 %123, i32* %17, align 4
  %124 = getelementptr inbounds i8, i8* %1, i64 15
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %126
  %128 = load i32, i32* %127, align 4
  %129 = xor i32 %128, %106
  store i32 %129, i32* %23, align 4
  ret void

130:                                              ; preds = %130, %2
  %131 = phi i32 [ 0, %2 ], [ %208, %130 ]
  %132 = phi i32 [ %25, %2 ], [ %207, %130 ]
  %133 = phi i32 [ %19, %2 ], [ %173, %130 ]
  %134 = phi i32 [ %13, %2 ], [ %132, %130 ]
  %135 = phi i32 [ %7, %2 ], [ %133, %130 ]
  %136 = shl i32 %132, 11
  %137 = lshr i32 %132, 21
  %138 = or i32 %136, %137
  %139 = add i32 %138, %133
  %140 = and i32 %131, 3
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 8, i64 %141
  %143 = load i32, i32* %142, align 4
  %144 = xor i32 %143, %139
  %145 = and i32 %144, 255
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 7, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i32
  %150 = lshr i32 %144, 8
  %151 = and i32 %150, 255
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 7, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = shl nuw nsw i32 %155, 8
  %157 = or i32 %156, %149
  %158 = lshr i32 %144, 16
  %159 = and i32 %158, 255
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 7, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = shl nuw nsw i32 %163, 16
  %165 = or i32 %157, %164
  %166 = lshr i32 %144, 24
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 7, i64 %167
  %169 = load i8, i8* %168, align 1
  %170 = zext i8 %169 to i32
  %171 = shl nuw i32 %170, 24
  %172 = or i32 %165, %171
  %173 = xor i32 %172, %135
  %174 = shl i32 %133, 17
  %175 = lshr i32 %133, 15
  %176 = or i32 %174, %175
  %177 = xor i32 %176, %132
  %178 = add i32 %143, %177
  %179 = and i32 %178, 255
  %180 = zext i32 %179 to i64
  %181 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 7, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = lshr i32 %178, 8
  %185 = and i32 %184, 255
  %186 = zext i32 %185 to i64
  %187 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 7, i64 %186
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = shl nuw nsw i32 %189, 8
  %191 = or i32 %190, %183
  %192 = lshr i32 %178, 16
  %193 = and i32 %192, 255
  %194 = zext i32 %193 to i64
  %195 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 7, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i32
  %198 = shl nuw nsw i32 %197, 16
  %199 = or i32 %191, %198
  %200 = lshr i32 %178, 24
  %201 = zext i32 %200 to i64
  %202 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 7, i64 %201
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i32
  %205 = shl nuw i32 %204, 24
  %206 = or i32 %199, %205
  %207 = xor i32 %206, %134
  %208 = add nuw nsw i32 %131, 1
  %209 = icmp eq i32 %208, 32
  br i1 %209, label %26, label %130
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9CryptData9UpdKeys20EPh(%class.CryptData* nocapture, i8* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 8, i64 0
  %4 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 8, i64 1
  %5 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 8, i64 2
  %6 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 8, i64 3
  %7 = load i8, i8* %1, align 1
  %8 = zext i8 %7 to i64
  %9 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %8
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %3, align 4
  %12 = xor i32 %11, %10
  store i32 %12, i32* %3, align 4
  %13 = getelementptr inbounds i8, i8* %1, i64 1
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i64
  %16 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = load i32, i32* %4, align 4
  %19 = xor i32 %18, %17
  store i32 %19, i32* %4, align 4
  %20 = getelementptr inbounds i8, i8* %1, i64 2
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i64
  %23 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %22
  %24 = load i32, i32* %23, align 4
  %25 = load i32, i32* %5, align 4
  %26 = xor i32 %25, %24
  store i32 %26, i32* %5, align 4
  %27 = getelementptr inbounds i8, i8* %1, i64 3
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i64
  %30 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = load i32, i32* %6, align 4
  %33 = xor i32 %32, %31
  store i32 %33, i32* %6, align 4
  %34 = getelementptr inbounds i8, i8* %1, i64 4
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i64
  %37 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = xor i32 %12, %38
  store i32 %39, i32* %3, align 4
  %40 = getelementptr inbounds i8, i8* %1, i64 5
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i64
  %43 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = xor i32 %19, %44
  store i32 %45, i32* %4, align 4
  %46 = getelementptr inbounds i8, i8* %1, i64 6
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = xor i32 %26, %50
  store i32 %51, i32* %5, align 4
  %52 = getelementptr inbounds i8, i8* %1, i64 7
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = xor i32 %33, %56
  store i32 %57, i32* %6, align 4
  %58 = getelementptr inbounds i8, i8* %1, i64 8
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i64
  %61 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = xor i32 %39, %62
  store i32 %63, i32* %3, align 4
  %64 = getelementptr inbounds i8, i8* %1, i64 9
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i64
  %67 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = xor i32 %45, %68
  store i32 %69, i32* %4, align 4
  %70 = getelementptr inbounds i8, i8* %1, i64 10
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i64
  %73 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = xor i32 %51, %74
  store i32 %75, i32* %5, align 4
  %76 = getelementptr inbounds i8, i8* %1, i64 11
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i64
  %79 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %78
  %80 = load i32, i32* %79, align 4
  %81 = xor i32 %57, %80
  store i32 %81, i32* %6, align 4
  %82 = getelementptr inbounds i8, i8* %1, i64 12
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i64
  %85 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = xor i32 %63, %86
  store i32 %87, i32* %3, align 4
  %88 = getelementptr inbounds i8, i8* %1, i64 13
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i64
  %91 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = xor i32 %69, %92
  store i32 %93, i32* %4, align 4
  %94 = getelementptr inbounds i8, i8* %1, i64 14
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i64
  %97 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %96
  %98 = load i32, i32* %97, align 4
  %99 = xor i32 %75, %98
  store i32 %99, i32* %5, align 4
  %100 = getelementptr inbounds i8, i8* %1, i64 15
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i64
  %103 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = xor i32 %81, %104
  store i32 %105, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CryptData14DecryptBlock20EPh(%class.CryptData*, i8* nocapture) local_unnamed_addr #2 align 2 {
  %3 = bitcast i8* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 8, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = xor i32 %6, %4
  %8 = getelementptr inbounds i8, i8* %1, i64 4
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 8, i64 1
  %12 = load i32, i32* %11, align 4
  %13 = xor i32 %12, %10
  %14 = getelementptr inbounds i8, i8* %1, i64 8
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 8, i64 2
  %18 = load i32, i32* %17, align 4
  %19 = xor i32 %18, %16
  %20 = getelementptr inbounds i8, i8* %1, i64 12
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 8, i64 3
  %24 = load i32, i32* %23, align 4
  %25 = xor i32 %24, %22
  %26 = getelementptr inbounds i8, i8* %1, i64 1
  %27 = load i8, i8* %26, align 1
  %28 = getelementptr inbounds i8, i8* %1, i64 2
  %29 = load i8, i8* %28, align 1
  %30 = getelementptr inbounds i8, i8* %1, i64 3
  %31 = load i8, i8* %30, align 1
  %32 = getelementptr inbounds i8, i8* %1, i64 5
  %33 = load i8, i8* %32, align 1
  %34 = getelementptr inbounds i8, i8* %1, i64 6
  %35 = load i8, i8* %34, align 1
  %36 = getelementptr inbounds i8, i8* %1, i64 7
  %37 = load i8, i8* %36, align 1
  %38 = getelementptr inbounds i8, i8* %1, i64 9
  %39 = load i8, i8* %38, align 1
  %40 = getelementptr inbounds i8, i8* %1, i64 10
  %41 = load i8, i8* %40, align 1
  %42 = getelementptr inbounds i8, i8* %1, i64 11
  %43 = load i8, i8* %42, align 1
  %44 = getelementptr inbounds i8, i8* %1, i64 13
  %45 = load i8, i8* %44, align 1
  %46 = getelementptr inbounds i8, i8* %1, i64 14
  %47 = load i8, i8* %46, align 1
  %48 = getelementptr inbounds i8, i8* %1, i64 15
  %49 = load i8, i8* %48, align 1
  br label %130

50:                                               ; preds = %130
  %51 = xor i32 %173, %6
  store i32 %51, i32* %3, align 4
  %52 = load i32, i32* %11, align 4
  %53 = xor i32 %52, %207
  store i32 %53, i32* %9, align 4
  %54 = load i32, i32* %17, align 4
  %55 = xor i32 %54, %133
  store i32 %55, i32* %15, align 4
  %56 = load i32, i32* %23, align 4
  %57 = xor i32 %56, %132
  store i32 %57, i32* %21, align 4
  %58 = and i32 %4, 255
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = load i32, i32* %5, align 4
  %63 = xor i32 %62, %61
  store i32 %63, i32* %5, align 4
  %64 = zext i8 %27 to i64
  %65 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = load i32, i32* %11, align 4
  %68 = xor i32 %67, %66
  store i32 %68, i32* %11, align 4
  %69 = zext i8 %29 to i64
  %70 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = load i32, i32* %17, align 4
  %73 = xor i32 %72, %71
  store i32 %73, i32* %17, align 4
  %74 = zext i8 %31 to i64
  %75 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %74
  %76 = load i32, i32* %75, align 4
  %77 = load i32, i32* %23, align 4
  %78 = xor i32 %77, %76
  store i32 %78, i32* %23, align 4
  %79 = and i32 %10, 255
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %80
  %82 = load i32, i32* %81, align 4
  %83 = xor i32 %82, %63
  store i32 %83, i32* %5, align 4
  %84 = zext i8 %33 to i64
  %85 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = xor i32 %86, %68
  store i32 %87, i32* %11, align 4
  %88 = zext i8 %35 to i64
  %89 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %88
  %90 = load i32, i32* %89, align 4
  %91 = xor i32 %90, %73
  store i32 %91, i32* %17, align 4
  %92 = zext i8 %37 to i64
  %93 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = xor i32 %94, %78
  store i32 %95, i32* %23, align 4
  %96 = and i32 %16, 255
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %97
  %99 = load i32, i32* %98, align 4
  %100 = xor i32 %99, %83
  store i32 %100, i32* %5, align 4
  %101 = zext i8 %39 to i64
  %102 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = xor i32 %103, %87
  store i32 %104, i32* %11, align 4
  %105 = zext i8 %41 to i64
  %106 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %105
  %107 = load i32, i32* %106, align 4
  %108 = xor i32 %107, %91
  store i32 %108, i32* %17, align 4
  %109 = zext i8 %43 to i64
  %110 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = xor i32 %111, %95
  store i32 %112, i32* %23, align 4
  %113 = and i32 %22, 255
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = xor i32 %116, %100
  store i32 %117, i32* %5, align 4
  %118 = zext i8 %45 to i64
  %119 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %118
  %120 = load i32, i32* %119, align 4
  %121 = xor i32 %120, %104
  store i32 %121, i32* %11, align 4
  %122 = zext i8 %47 to i64
  %123 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %122
  %124 = load i32, i32* %123, align 4
  %125 = xor i32 %124, %108
  store i32 %125, i32* %17, align 4
  %126 = zext i8 %49 to i64
  %127 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %126
  %128 = load i32, i32* %127, align 4
  %129 = xor i32 %128, %112
  store i32 %129, i32* %23, align 4
  ret void

130:                                              ; preds = %130, %2
  %131 = phi i32 [ 31, %2 ], [ %208, %130 ]
  %132 = phi i32 [ %25, %2 ], [ %207, %130 ]
  %133 = phi i32 [ %19, %2 ], [ %173, %130 ]
  %134 = phi i32 [ %13, %2 ], [ %132, %130 ]
  %135 = phi i32 [ %7, %2 ], [ %133, %130 ]
  %136 = shl i32 %132, 11
  %137 = lshr i32 %132, 21
  %138 = or i32 %136, %137
  %139 = add i32 %138, %133
  %140 = and i32 %131, 3
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 8, i64 %141
  %143 = load i32, i32* %142, align 4
  %144 = xor i32 %143, %139
  %145 = and i32 %144, 255
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 7, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i32
  %150 = lshr i32 %144, 8
  %151 = and i32 %150, 255
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 7, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = shl nuw nsw i32 %155, 8
  %157 = or i32 %156, %149
  %158 = lshr i32 %144, 16
  %159 = and i32 %158, 255
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 7, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = shl nuw nsw i32 %163, 16
  %165 = or i32 %157, %164
  %166 = lshr i32 %144, 24
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 7, i64 %167
  %169 = load i8, i8* %168, align 1
  %170 = zext i8 %169 to i32
  %171 = shl nuw i32 %170, 24
  %172 = or i32 %165, %171
  %173 = xor i32 %172, %135
  %174 = shl i32 %133, 17
  %175 = lshr i32 %133, 15
  %176 = or i32 %174, %175
  %177 = xor i32 %176, %132
  %178 = add i32 %143, %177
  %179 = and i32 %178, 255
  %180 = zext i32 %179 to i64
  %181 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 7, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = lshr i32 %178, 8
  %185 = and i32 %184, 255
  %186 = zext i32 %185 to i64
  %187 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 7, i64 %186
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = shl nuw nsw i32 %189, 8
  %191 = or i32 %190, %183
  %192 = lshr i32 %178, 16
  %193 = and i32 %192, 255
  %194 = zext i32 %193 to i64
  %195 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 7, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i32
  %198 = shl nuw nsw i32 %197, 16
  %199 = or i32 %191, %198
  %200 = lshr i32 %178, 24
  %201 = zext i32 %200 to i64
  %202 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 7, i64 %201
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i32
  %205 = shl nuw i32 %204, 24
  %206 = or i32 %199, %205
  %207 = xor i32 %206, %134
  %208 = add nsw i32 %131, -1
  %209 = icmp eq i32 %131, 0
  br i1 %209, label %50, label %130
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CryptData8SetKey30EbP11SecPasswordPKwPKh(%class.CryptData*, i1 zeroext, %class.SecPassword*, i32*, i8*) local_unnamed_addr #2 align 2 {
  %6 = alloca [16 x i8], align 16
  %7 = alloca [16 x i8], align 16
  %8 = alloca [264 x i8], align 16
  %9 = alloca %struct.sha1_context, align 8
  %10 = alloca [3 x i8], align 1
  %11 = alloca %struct.sha1_context, align 8
  %12 = alloca [5 x i32], align 16
  %13 = alloca [5 x i32], align 16
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 1
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 2
  %17 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 3
  %18 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 4
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 5
  %20 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 6
  %21 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 7
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 8
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 9
  %24 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 10
  %25 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 11
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 12
  %27 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 13
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 14
  %29 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 15
  %30 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #9
  %31 = icmp eq i8* %4, null
  %32 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %30, i8 -86, i64 16, i1 false)
  %33 = tail call zeroext i1 @_ZN11SecPasswordeqERS_(%class.SecPassword* %32, %class.SecPassword* dereferenceable(516) %2) #9
  br i1 %33, label %34, label %48

34:                                               ; preds = %5
  %35 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 0, i32 4
  %36 = load i8, i8* %35, align 4, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %31, label %38, label %39

38:                                               ; preds = %34
  br i1 %37, label %44, label %48

39:                                               ; preds = %34
  br i1 %37, label %48, label %40

40:                                               ; preds = %39
  %41 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 0, i32 1, i64 0
  %42 = tail call i32 @bcmp(i8* %41, i8* nonnull %4, i64 8)
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %48

44:                                               ; preds = %185, %183, %172, %170, %159, %157, %38, %40
  %45 = phi i64 [ 0, %38 ], [ 0, %40 ], [ 1, %157 ], [ 1, %159 ], [ 2, %170 ], [ 2, %172 ], [ 3, %183 ], [ 3, %185 ]
  %46 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 %45, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %14, i8* align 4 %46, i64 16, i1 false)
  call void @_Z11SecHideDataPvmbb(i8* nonnull %14, i64 16, i1 zeroext false, i1 zeroext false) #9
  %47 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 %45, i32 3, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %30, i8* align 4 %47, i64 16, i1 false)
  br label %151

48:                                               ; preds = %38, %39, %5, %40
  %49 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 1, i32 0
  %50 = tail call zeroext i1 @_ZN11SecPasswordeqERS_(%class.SecPassword* %49, %class.SecPassword* dereferenceable(516) %2) #9
  br i1 %50, label %153, label %163

51:                                               ; preds = %189
  %52 = getelementptr inbounds [264 x i8], [264 x i8]* %8, i64 0, i64 %193
  %53 = bitcast i8* %4 to i64*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %53, align 1
  store i64 %55, i64* %54, align 2
  %56 = add i64 %193, 8
  br label %57

57:                                               ; preds = %51, %189
  %58 = phi i64 [ %56, %51 ], [ %193, %189 ]
  %59 = bitcast %struct.sha1_context* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %59) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 96, i1 false)
  call void @_Z9sha1_initP12sha1_context(%struct.sha1_context* nonnull %9) #9
  %60 = getelementptr inbounds [3 x i8], [3 x i8]* %10, i64 0, i64 0
  %61 = getelementptr inbounds [3 x i8], [3 x i8]* %10, i64 0, i64 1
  %62 = getelementptr inbounds [3 x i8], [3 x i8]* %10, i64 0, i64 2
  %63 = bitcast %struct.sha1_context* %11 to i8*
  %64 = bitcast [5 x i32]* %12 to i8*
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %12, i64 0, i64 0
  %66 = getelementptr inbounds [5 x i32], [5 x i32]* %12, i64 0, i64 4
  %67 = bitcast [5 x i32]* %12 to i8*
  br label %117

68:                                               ; preds = %132
  %69 = bitcast [5 x i32]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %69) #9
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %13, i64 0, i64 0
  %71 = getelementptr inbounds [5 x i32], [5 x i32]* %13, i64 0, i64 1
  %72 = getelementptr inbounds [5 x i32], [5 x i32]* %13, i64 0, i64 2
  %73 = getelementptr inbounds [5 x i32], [5 x i32]* %13, i64 0, i64 3
  %74 = bitcast [5 x i32]* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %74, i8 -86, i64 20, i1 false)
  call void @_Z9sha1_doneP12sha1_contextPj(%struct.sha1_context* nonnull %9, i32* nonnull %70) #9
  %75 = load i32, i32* %70, align 16
  %76 = trunc i32 %75 to i8
  store i8 %76, i8* %14, align 16
  %77 = lshr i32 %75, 8
  %78 = trunc i32 %77 to i8
  store i8 %78, i8* %15, align 1
  %79 = lshr i32 %75, 16
  %80 = trunc i32 %79 to i8
  store i8 %80, i8* %16, align 2
  %81 = lshr i32 %75, 24
  %82 = trunc i32 %81 to i8
  store i8 %82, i8* %17, align 1
  %83 = load i32, i32* %71, align 4
  %84 = trunc i32 %83 to i8
  store i8 %84, i8* %18, align 4
  %85 = lshr i32 %83, 8
  %86 = trunc i32 %85 to i8
  store i8 %86, i8* %19, align 1
  %87 = lshr i32 %83, 16
  %88 = trunc i32 %87 to i8
  store i8 %88, i8* %20, align 2
  %89 = lshr i32 %83, 24
  %90 = trunc i32 %89 to i8
  store i8 %90, i8* %21, align 1
  %91 = load i32, i32* %72, align 8
  %92 = trunc i32 %91 to i8
  store i8 %92, i8* %22, align 8
  %93 = lshr i32 %91, 8
  %94 = trunc i32 %93 to i8
  store i8 %94, i8* %23, align 1
  %95 = lshr i32 %91, 16
  %96 = trunc i32 %95 to i8
  store i8 %96, i8* %24, align 2
  %97 = lshr i32 %91, 24
  %98 = trunc i32 %97 to i8
  store i8 %98, i8* %25, align 1
  %99 = load i32, i32* %73, align 4
  %100 = trunc i32 %99 to i8
  store i8 %100, i8* %26, align 4
  %101 = lshr i32 %99, 8
  %102 = trunc i32 %101 to i8
  store i8 %102, i8* %27, align 1
  %103 = lshr i32 %99, 16
  %104 = trunc i32 %103 to i8
  store i8 %104, i8* %28, align 2
  %105 = lshr i32 %99, 24
  %106 = trunc i32 %105 to i8
  store i8 %106, i8* %29, align 1
  %107 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 %109, i32 0
  %111 = bitcast %class.SecPassword* %110 to i8*
  %112 = bitcast %class.SecPassword* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %111, i8* align 4 %112, i64 514, i1 false)
  %113 = load i32, i32* %107, align 4
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 %114, i32 4
  %116 = zext i1 %194 to i8
  store i8 %116, i8* %115, align 4
  br i1 %194, label %135, label %140

117:                                              ; preds = %132, %57
  %118 = phi i32 [ 0, %57 ], [ %133, %132 ]
  call void @_Z18sha1_process_rar29P12sha1_contextPKhm(%struct.sha1_context* nonnull %9, i8* nonnull %190, i64 %58) #9
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %60) #9
  %119 = trunc i32 %118 to i8
  store i8 %119, i8* %60, align 1
  %120 = lshr i32 %118, 8
  %121 = trunc i32 %120 to i8
  store i8 %121, i8* %61, align 1
  %122 = lshr i32 %118, 16
  %123 = trunc i32 %122 to i8
  store i8 %123, i8* %62, align 1
  call void @_Z12sha1_processP12sha1_contextPKhm(%struct.sha1_context* nonnull %9, i8* nonnull %60, i64 3) #9
  %124 = and i32 %118, 16383
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %132

126:                                              ; preds = %117
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %63) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %63, i8* nonnull align 8 %59, i64 96, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %64) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %67, i8 -86, i64 20, i1 false)
  call void @_Z9sha1_doneP12sha1_contextPj(%struct.sha1_context* nonnull %11, i32* nonnull %65) #9
  %127 = load i32, i32* %66, align 16
  %128 = trunc i32 %127 to i8
  %129 = lshr i32 %118, 14
  %130 = zext i32 %129 to i64
  %131 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i64 0, i64 %130
  store i8 %128, i8* %131, align 1
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %64) #9
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %63) #9
  br label %132

132:                                              ; preds = %126, %117
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %60) #9
  %133 = add nuw nsw i32 %118, 1
  %134 = icmp eq i32 %133, 262144
  br i1 %134, label %68, label %117

135:                                              ; preds = %68
  %136 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 %114, i32 1, i64 0
  %137 = bitcast i8* %4 to i64*
  %138 = bitcast i8* %136 to i64*
  %139 = load i64, i64* %137, align 1
  store i64 %139, i64* %138, align 4
  br label %140

140:                                              ; preds = %135, %68
  %141 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 %114, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %141, i8* nonnull align 16 %14, i64 16, i1 false)
  %142 = load i32, i32* %107, align 4
  %143 = zext i32 %142 to i64
  %144 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 %143, i32 2, i64 0
  call void @_Z11SecHideDataPvmbb(i8* %144, i64 16, i1 zeroext true, i1 zeroext false) #9
  %145 = load i32, i32* %107, align 4
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 %146, i32 3, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %147, i8* nonnull align 16 %30, i64 16, i1 false)
  %148 = load i32, i32* %107, align 4
  %149 = add i32 %148, 1
  %150 = and i32 %149, 3
  store i32 %150, i32* %107, align 4
  call void @_Z9cleandataPvm(i8* nonnull %190, i64 264) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %69) #9
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %59) #9
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %190) #9
  br label %151

151:                                              ; preds = %44, %140
  %152 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 5
  call void @_ZN8Rijndael4InitEbPKhjS1_(%class.Rijndael* %152, i1 zeroext %1, i8* nonnull %14, i32 128, i8* nonnull %30) #9
  call void @_Z9cleandataPvm(i8* nonnull %14, i64 16) #9
  call void @_Z9cleandataPvm(i8* nonnull %30, i64 16) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  ret void

153:                                              ; preds = %48
  %154 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 1, i32 4
  %155 = load i8, i8* %154, align 4, !range !2
  %156 = icmp eq i8 %155, 0
  br i1 %31, label %157, label %158

157:                                              ; preds = %153
  br i1 %156, label %44, label %163

158:                                              ; preds = %153
  br i1 %156, label %163, label %159

159:                                              ; preds = %158
  %160 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 1, i32 1, i64 0
  %161 = tail call i32 @bcmp(i8* %160, i8* nonnull %4, i64 8)
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %44, label %163

163:                                              ; preds = %157, %159, %158, %48
  %164 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 2, i32 0
  %165 = tail call zeroext i1 @_ZN11SecPasswordeqERS_(%class.SecPassword* %164, %class.SecPassword* dereferenceable(516) %2) #9
  br i1 %165, label %166, label %176

166:                                              ; preds = %163
  %167 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 2, i32 4
  %168 = load i8, i8* %167, align 4, !range !2
  %169 = icmp eq i8 %168, 0
  br i1 %31, label %170, label %171

170:                                              ; preds = %166
  br i1 %169, label %44, label %176

171:                                              ; preds = %166
  br i1 %169, label %176, label %172

172:                                              ; preds = %171
  %173 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 2, i32 1, i64 0
  %174 = tail call i32 @bcmp(i8* %173, i8* nonnull %4, i64 8)
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %44, label %176

176:                                              ; preds = %170, %172, %171, %163
  %177 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 3, i32 0
  %178 = tail call zeroext i1 @_ZN11SecPasswordeqERS_(%class.SecPassword* %177, %class.SecPassword* dereferenceable(516) %2) #9
  br i1 %178, label %179, label %189

179:                                              ; preds = %176
  %180 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 3, i32 4
  %181 = load i8, i8* %180, align 4, !range !2
  %182 = icmp eq i8 %181, 0
  br i1 %31, label %183, label %184

183:                                              ; preds = %179
  br i1 %182, label %44, label %189

184:                                              ; preds = %179
  br i1 %182, label %189, label %185

185:                                              ; preds = %184
  %186 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 3, i32 1, i64 0
  %187 = tail call i32 @bcmp(i8* %186, i8* nonnull %4, i64 8)
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %44, label %189

189:                                              ; preds = %183, %185, %184, %176
  %190 = getelementptr inbounds [264 x i8], [264 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %190) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %190, i8 -86, i64 264, i1 false)
  %191 = call i8* @_Z9WideToRawPKwPhm(i32* %3, i8* nonnull %190, i64 264) #9
  %192 = call i64 @wcslen(i32* %3) #10
  %193 = shl i64 %192, 1
  %194 = icmp ne i8* %4, null
  br i1 %194, label %51, label %57
}

declare zeroext i1 @_ZN11SecPasswordeqERS_(%class.SecPassword*, %class.SecPassword* dereferenceable(516)) local_unnamed_addr #3

declare void @_Z11SecHideDataPvmbb(i8*, i64, i1 zeroext, i1 zeroext) local_unnamed_addr #3

declare i8* @_Z9WideToRawPKwPhm(i32*, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @wcslen(i32* nocapture) local_unnamed_addr #4

declare void @_Z9sha1_initP12sha1_context(%struct.sha1_context*) local_unnamed_addr #3

declare void @_Z18sha1_process_rar29P12sha1_contextPKhm(%struct.sha1_context*, i8*, i64) local_unnamed_addr #3

declare void @_Z12sha1_processP12sha1_contextPKhm(%struct.sha1_context*, i8*, i64) local_unnamed_addr #3

declare void @_Z9sha1_doneP12sha1_contextPj(%struct.sha1_context*, i32*) local_unnamed_addr #3

declare void @_Z9cleandataPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN8Rijndael4InitEbPKhjS1_(%class.Rijndael*, i1 zeroext, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z6pbkdf2PKhmS0_mPhS1_S1_j(i8*, i64, i8* nocapture readonly, i64, i8*, i8*, i8*, i32) local_unnamed_addr #2 {
  %9 = alloca [68 x i8], align 16
  %10 = alloca [32 x i8], align 16
  %11 = alloca [32 x i8], align 16
  %12 = alloca %struct.sha256_context, align 8
  %13 = alloca %struct.sha256_context, align 8
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca [32 x i8], align 16
  %17 = getelementptr inbounds [68 x i8], [68 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %17) #9
  %18 = icmp ult i64 %3, 64
  %19 = select i1 %18, i64 %3, i64 64
  %20 = sub nuw nsw i64 68, %19
  %21 = getelementptr [68 x i8], [68 x i8]* %9, i64 0, i64 %19
  call void @llvm.memset.p0i8.i64(i8* align 1 %21, i8 -86, i64 %20, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %17, i8* align 1 %2, i64 %19, i1 false)
  %22 = getelementptr inbounds [68 x i8], [68 x i8]* %9, i64 0, i64 %3
  store i8 0, i8* %22, align 1
  %23 = add i64 %3, 1
  %24 = getelementptr inbounds [68 x i8], [68 x i8]* %9, i64 0, i64 %23
  store i8 0, i8* %24, align 1
  %25 = add i64 %3, 2
  %26 = getelementptr inbounds [68 x i8], [68 x i8]* %9, i64 0, i64 %25
  store i8 0, i8* %26, align 1
  %27 = add i64 %3, 3
  %28 = getelementptr inbounds [68 x i8], [68 x i8]* %9, i64 0, i64 %27
  store i8 1, i8* %28, align 1
  %29 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #9
  %30 = add i64 %3, 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %29, i8 -86, i64 32, i1 false)
  call fastcc void @_ZL11hmac_sha256PKhmS0_mPhP14sha256_contextPbS3_S4_(i8* %0, i64 %1, i8* nonnull %17, i64 %30, i8* nonnull %29, %struct.sha256_context* null, i8* null, %struct.sha256_context* null, i8* null)
  %31 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %31, i8* nonnull align 16 %29, i64 32, i1 false)
  %32 = add i32 %7, -1
  %33 = bitcast %struct.sha256_context* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %33) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 104, i1 false)
  %34 = bitcast %struct.sha256_context* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %34) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 104, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #9
  store i8 0, i8* %14, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #9
  store i8 0, i8* %15, align 1
  %35 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #9
  %36 = icmp eq i32 %32, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %35, i8 -86, i64 32, i1 false)
  br i1 %36, label %56, label %37

37:                                               ; preds = %8
  %38 = bitcast [32 x i8]* %10 to <16 x i8>*
  %39 = bitcast [32 x i8]* %11 to <16 x i8>*
  %40 = bitcast [32 x i8]* %11 to <16 x i8>*
  %41 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 16
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 16
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = bitcast i8* %43 to <16 x i8>*
  br label %46

46:                                               ; preds = %37, %46
  %47 = phi i32 [ %54, %46 ], [ 0, %37 ]
  call fastcc void @_ZL11hmac_sha256PKhmS0_mPhP14sha256_contextPbS3_S4_(i8* %0, i64 %1, i8* nonnull %29, i64 32, i8* nonnull %35, %struct.sha256_context* nonnull %12, i8* nonnull %14, %struct.sha256_context* nonnull %13, i8* nonnull %15)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %29, i8* nonnull align 16 %35, i64 32, i1 false)
  %48 = load <16 x i8>, <16 x i8>* %38, align 16
  %49 = load <16 x i8>, <16 x i8>* %39, align 16
  %50 = xor <16 x i8> %49, %48
  store <16 x i8> %50, <16 x i8>* %40, align 16
  %51 = load <16 x i8>, <16 x i8>* %42, align 16
  %52 = load <16 x i8>, <16 x i8>* %44, align 16
  %53 = xor <16 x i8> %52, %51
  store <16 x i8> %53, <16 x i8>* %45, align 16
  %54 = add nuw i32 %47, 1
  %55 = icmp ult i32 %54, %32
  br i1 %55, label %46, label %56

56:                                               ; preds = %46, %8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* nonnull align 16 %31, i64 32, i1 false)
  %57 = bitcast [32 x i8]* %10 to <16 x i8>*
  %58 = bitcast [32 x i8]* %11 to <16 x i8>*
  %59 = bitcast [32 x i8]* %11 to <16 x i8>*
  %60 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 16
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = bitcast i8* %62 to <16 x i8>*
  br label %65

65:                                               ; preds = %65, %56
  %66 = phi i32 [ %73, %65 ], [ 0, %56 ]
  call fastcc void @_ZL11hmac_sha256PKhmS0_mPhP14sha256_contextPbS3_S4_(i8* %0, i64 %1, i8* nonnull %29, i64 32, i8* nonnull %35, %struct.sha256_context* nonnull %12, i8* nonnull %14, %struct.sha256_context* nonnull %13, i8* nonnull %15)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %29, i8* nonnull align 16 %35, i64 32, i1 false)
  %67 = load <16 x i8>, <16 x i8>* %57, align 16
  %68 = load <16 x i8>, <16 x i8>* %58, align 16
  %69 = xor <16 x i8> %68, %67
  store <16 x i8> %69, <16 x i8>* %59, align 16
  %70 = load <16 x i8>, <16 x i8>* %61, align 16
  %71 = load <16 x i8>, <16 x i8>* %63, align 16
  %72 = xor <16 x i8> %71, %70
  store <16 x i8> %72, <16 x i8>* %64, align 16
  %73 = add nuw i32 %66, 1
  %74 = icmp ult i32 %73, 16
  br i1 %74, label %65, label %75

75:                                               ; preds = %65
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* nonnull align 16 %31, i64 32, i1 false)
  %76 = bitcast [32 x i8]* %10 to <16 x i8>*
  %77 = bitcast [32 x i8]* %11 to <16 x i8>*
  %78 = bitcast [32 x i8]* %11 to <16 x i8>*
  %79 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 16
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 16
  %82 = bitcast i8* %81 to <16 x i8>*
  %83 = bitcast i8* %81 to <16 x i8>*
  br label %84

84:                                               ; preds = %84, %75
  %85 = phi i32 [ %92, %84 ], [ 0, %75 ]
  call fastcc void @_ZL11hmac_sha256PKhmS0_mPhP14sha256_contextPbS3_S4_(i8* %0, i64 %1, i8* nonnull %29, i64 32, i8* nonnull %35, %struct.sha256_context* nonnull %12, i8* nonnull %14, %struct.sha256_context* nonnull %13, i8* nonnull %15)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %29, i8* nonnull align 16 %35, i64 32, i1 false)
  %86 = load <16 x i8>, <16 x i8>* %76, align 16
  %87 = load <16 x i8>, <16 x i8>* %77, align 16
  %88 = xor <16 x i8> %87, %86
  store <16 x i8> %88, <16 x i8>* %78, align 16
  %89 = load <16 x i8>, <16 x i8>* %80, align 16
  %90 = load <16 x i8>, <16 x i8>* %82, align 16
  %91 = xor <16 x i8> %90, %89
  store <16 x i8> %91, <16 x i8>* %83, align 16
  %92 = add nuw i32 %85, 1
  %93 = icmp ult i32 %92, 16
  br i1 %93, label %84, label %94

94:                                               ; preds = %84
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* nonnull align 16 %31, i64 32, i1 false)
  call void @_Z9cleandataPvm(i8* nonnull %17, i64 68) #9
  call void @_Z9cleandataPvm(i8* nonnull %31, i64 32) #9
  call void @_Z9cleandataPvm(i8* nonnull %29, i64 32) #9
  call void @_Z9cleandataPvm(i8* nonnull %35, i64 32) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %33) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #9
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %17) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL11hmac_sha256PKhmS0_mPhP14sha256_contextPbS3_S4_(i8*, i64, i8*, i64, i8*, %struct.sha256_context*, i8* nocapture, %struct.sha256_context*, i8* nocapture) unnamed_addr #2 {
  %10 = alloca [32 x i8], align 16
  %11 = alloca %struct.sha256_context, align 8
  %12 = alloca [64 x i8], align 16
  %13 = alloca %struct.sha256_context, align 8
  %14 = alloca [32 x i8], align 16
  %15 = alloca %struct.sha256_context, align 8
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #9
  %17 = icmp ugt i64 %1, 64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 32, i1 false)
  br i1 %17, label %18, label %20

18:                                               ; preds = %9
  %19 = bitcast %struct.sha256_context* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %19) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 104, i1 false)
  call void @_Z11sha256_initP14sha256_context(%struct.sha256_context* nonnull %11) #9
  call void @_Z14sha256_processP14sha256_contextPKvm(%struct.sha256_context* nonnull %11, i8* %0, i64 %1) #9
  call void @_Z11sha256_doneP14sha256_contextPh(%struct.sha256_context* nonnull %11, i8* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %19) #9
  br label %20

20:                                               ; preds = %18, %9
  %21 = phi i64 [ 32, %18 ], [ %1, %9 ]
  %22 = phi i8* [ %16, %18 ], [ %0, %9 ]
  %23 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %23) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %23, i8 -86, i64 64, i1 false)
  %24 = bitcast %struct.sha256_context* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %24) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 104, i1 false)
  %25 = icmp ne %struct.sha256_context* %5, null
  br i1 %25, label %26, label %31

26:                                               ; preds = %20
  %27 = load i8, i8* %6, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %26
  %30 = bitcast %struct.sha256_context* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* nonnull align 8 %30, i64 104, i1 false)
  br label %114

31:                                               ; preds = %26, %20
  %32 = icmp eq i64 %21, 0
  br i1 %32, label %97, label %33

33:                                               ; preds = %31
  %34 = icmp ult i64 %21, 32
  br i1 %34, label %35, label %37

35:                                               ; preds = %93, %33
  %36 = phi i64 [ 0, %33 ], [ %38, %93 ]
  br label %100

37:                                               ; preds = %33
  %38 = and i64 %21, -32
  %39 = add i64 %38, -32
  %40 = lshr exact i64 %39, 5
  %41 = add nuw nsw i64 %40, 1
  %42 = and i64 %41, 1
  %43 = icmp eq i64 %39, 0
  br i1 %43, label %77, label %44

44:                                               ; preds = %37
  %45 = sub nuw nsw i64 %41, %42
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi i64 [ 0, %44 ], [ %74, %46 ]
  %48 = phi i64 [ %45, %44 ], [ %75, %46 ]
  %49 = getelementptr inbounds i8, i8* %22, i64 %47
  %50 = bitcast i8* %49 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 1
  %52 = getelementptr inbounds i8, i8* %49, i64 16
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1
  %55 = xor <16 x i8> %51, <i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54>
  %56 = xor <16 x i8> %54, <i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54>
  %57 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i64 0, i64 %47
  %58 = bitcast i8* %57 to <16 x i8>*
  store <16 x i8> %55, <16 x i8>* %58, align 16
  %59 = getelementptr inbounds i8, i8* %57, i64 16
  %60 = bitcast i8* %59 to <16 x i8>*
  store <16 x i8> %56, <16 x i8>* %60, align 16
  %61 = or i64 %47, 32
  %62 = getelementptr inbounds i8, i8* %22, i64 %61
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 1
  %65 = getelementptr inbounds i8, i8* %62, i64 16
  %66 = bitcast i8* %65 to <16 x i8>*
  %67 = load <16 x i8>, <16 x i8>* %66, align 1
  %68 = xor <16 x i8> %64, <i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54>
  %69 = xor <16 x i8> %67, <i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54>
  %70 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i64 0, i64 %61
  %71 = bitcast i8* %70 to <16 x i8>*
  store <16 x i8> %68, <16 x i8>* %71, align 16
  %72 = getelementptr inbounds i8, i8* %70, i64 16
  %73 = bitcast i8* %72 to <16 x i8>*
  store <16 x i8> %69, <16 x i8>* %73, align 16
  %74 = add i64 %47, 64
  %75 = add i64 %48, -2
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %46, !llvm.loop !3

77:                                               ; preds = %46, %37
  %78 = phi i64 [ 0, %37 ], [ %74, %46 ]
  %79 = icmp eq i64 %42, 0
  br i1 %79, label %93, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds i8, i8* %22, i64 %78
  %82 = bitcast i8* %81 to <16 x i8>*
  %83 = load <16 x i8>, <16 x i8>* %82, align 1
  %84 = getelementptr inbounds i8, i8* %81, i64 16
  %85 = bitcast i8* %84 to <16 x i8>*
  %86 = load <16 x i8>, <16 x i8>* %85, align 1
  %87 = xor <16 x i8> %83, <i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54>
  %88 = xor <16 x i8> %86, <i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54>
  %89 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i64 0, i64 %78
  %90 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %87, <16 x i8>* %90, align 16
  %91 = getelementptr inbounds i8, i8* %89, i64 16
  %92 = bitcast i8* %91 to <16 x i8>*
  store <16 x i8> %88, <16 x i8>* %92, align 16
  br label %93

93:                                               ; preds = %77, %80
  %94 = icmp eq i64 %21, %38
  br i1 %94, label %95, label %35

95:                                               ; preds = %100, %93
  %96 = icmp ult i64 %21, 64
  br i1 %96, label %97, label %108

97:                                               ; preds = %31, %95
  %98 = getelementptr [64 x i8], [64 x i8]* %12, i64 0, i64 %21
  %99 = sub nuw nsw i64 64, %21
  call void @llvm.memset.p0i8.i64(i8* align 1 %98, i8 54, i64 %99, i1 false)
  br label %108

100:                                              ; preds = %35, %100
  %101 = phi i64 [ %106, %100 ], [ %36, %35 ]
  %102 = getelementptr inbounds i8, i8* %22, i64 %101
  %103 = load i8, i8* %102, align 1
  %104 = xor i8 %103, 54
  %105 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i64 0, i64 %101
  store i8 %104, i8* %105, align 1
  %106 = add nuw i64 %101, 1
  %107 = icmp eq i64 %106, %21
  br i1 %107, label %95, label %100, !llvm.loop !5

108:                                              ; preds = %97, %95
  call void @_Z11sha256_initP14sha256_context(%struct.sha256_context* nonnull %13) #9
  call void @_Z14sha256_processP14sha256_contextPKvm(%struct.sha256_context* nonnull %13, i8* nonnull %23, i64 64) #9
  br i1 %25, label %109, label %114

109:                                              ; preds = %108
  %110 = load i8, i8* %6, align 1
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %109
  %113 = bitcast %struct.sha256_context* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %113, i8* nonnull align 8 %24, i64 104, i1 false)
  store i8 1, i8* %6, align 1
  br label %114

114:                                              ; preds = %29, %109, %112, %108
  call void @_Z14sha256_processP14sha256_contextPKvm(%struct.sha256_context* nonnull %13, i8* %2, i64 %3) #9
  %115 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %115) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %115, i8 -86, i64 32, i1 false)
  call void @_Z11sha256_doneP14sha256_contextPh(%struct.sha256_context* nonnull %13, i8* nonnull %115) #9
  %116 = bitcast %struct.sha256_context* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %116) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %116, i8 -86, i64 104, i1 false)
  %117 = icmp ne %struct.sha256_context* %7, null
  br i1 %117, label %118, label %123

118:                                              ; preds = %114
  %119 = load i8, i8* %8, align 1, !range !2
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %118
  %122 = bitcast %struct.sha256_context* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %116, i8* nonnull align 8 %122, i64 104, i1 false)
  br label %206

123:                                              ; preds = %118, %114
  %124 = icmp eq i64 %21, 0
  br i1 %124, label %189, label %125

125:                                              ; preds = %123
  %126 = icmp ult i64 %21, 32
  br i1 %126, label %127, label %129

127:                                              ; preds = %185, %125
  %128 = phi i64 [ 0, %125 ], [ %130, %185 ]
  br label %192

129:                                              ; preds = %125
  %130 = and i64 %21, -32
  %131 = add i64 %130, -32
  %132 = lshr exact i64 %131, 5
  %133 = add nuw nsw i64 %132, 1
  %134 = and i64 %133, 1
  %135 = icmp eq i64 %131, 0
  br i1 %135, label %169, label %136

136:                                              ; preds = %129
  %137 = sub nuw nsw i64 %133, %134
  br label %138

138:                                              ; preds = %138, %136
  %139 = phi i64 [ 0, %136 ], [ %166, %138 ]
  %140 = phi i64 [ %137, %136 ], [ %167, %138 ]
  %141 = getelementptr inbounds i8, i8* %22, i64 %139
  %142 = bitcast i8* %141 to <16 x i8>*
  %143 = load <16 x i8>, <16 x i8>* %142, align 1
  %144 = getelementptr inbounds i8, i8* %141, i64 16
  %145 = bitcast i8* %144 to <16 x i8>*
  %146 = load <16 x i8>, <16 x i8>* %145, align 1
  %147 = xor <16 x i8> %143, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %148 = xor <16 x i8> %146, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %149 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i64 0, i64 %139
  %150 = bitcast i8* %149 to <16 x i8>*
  store <16 x i8> %147, <16 x i8>* %150, align 16
  %151 = getelementptr inbounds i8, i8* %149, i64 16
  %152 = bitcast i8* %151 to <16 x i8>*
  store <16 x i8> %148, <16 x i8>* %152, align 16
  %153 = or i64 %139, 32
  %154 = getelementptr inbounds i8, i8* %22, i64 %153
  %155 = bitcast i8* %154 to <16 x i8>*
  %156 = load <16 x i8>, <16 x i8>* %155, align 1
  %157 = getelementptr inbounds i8, i8* %154, i64 16
  %158 = bitcast i8* %157 to <16 x i8>*
  %159 = load <16 x i8>, <16 x i8>* %158, align 1
  %160 = xor <16 x i8> %156, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %161 = xor <16 x i8> %159, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %162 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i64 0, i64 %153
  %163 = bitcast i8* %162 to <16 x i8>*
  store <16 x i8> %160, <16 x i8>* %163, align 16
  %164 = getelementptr inbounds i8, i8* %162, i64 16
  %165 = bitcast i8* %164 to <16 x i8>*
  store <16 x i8> %161, <16 x i8>* %165, align 16
  %166 = add i64 %139, 64
  %167 = add i64 %140, -2
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %138, !llvm.loop !7

169:                                              ; preds = %138, %129
  %170 = phi i64 [ 0, %129 ], [ %166, %138 ]
  %171 = icmp eq i64 %134, 0
  br i1 %171, label %185, label %172

172:                                              ; preds = %169
  %173 = getelementptr inbounds i8, i8* %22, i64 %170
  %174 = bitcast i8* %173 to <16 x i8>*
  %175 = load <16 x i8>, <16 x i8>* %174, align 1
  %176 = getelementptr inbounds i8, i8* %173, i64 16
  %177 = bitcast i8* %176 to <16 x i8>*
  %178 = load <16 x i8>, <16 x i8>* %177, align 1
  %179 = xor <16 x i8> %175, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %180 = xor <16 x i8> %178, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %181 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i64 0, i64 %170
  %182 = bitcast i8* %181 to <16 x i8>*
  store <16 x i8> %179, <16 x i8>* %182, align 16
  %183 = getelementptr inbounds i8, i8* %181, i64 16
  %184 = bitcast i8* %183 to <16 x i8>*
  store <16 x i8> %180, <16 x i8>* %184, align 16
  br label %185

185:                                              ; preds = %169, %172
  %186 = icmp eq i64 %21, %130
  br i1 %186, label %187, label %127

187:                                              ; preds = %192, %185
  %188 = icmp ult i64 %21, 64
  br i1 %188, label %189, label %200

189:                                              ; preds = %123, %187
  %190 = getelementptr [64 x i8], [64 x i8]* %12, i64 0, i64 %21
  %191 = sub nuw nsw i64 64, %21
  call void @llvm.memset.p0i8.i64(i8* align 1 %190, i8 92, i64 %191, i1 false)
  br label %200

192:                                              ; preds = %127, %192
  %193 = phi i64 [ %198, %192 ], [ %128, %127 ]
  %194 = getelementptr inbounds i8, i8* %22, i64 %193
  %195 = load i8, i8* %194, align 1
  %196 = xor i8 %195, 92
  %197 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i64 0, i64 %193
  store i8 %196, i8* %197, align 1
  %198 = add nuw i64 %193, 1
  %199 = icmp eq i64 %198, %21
  br i1 %199, label %187, label %192, !llvm.loop !8

200:                                              ; preds = %189, %187
  call void @_Z11sha256_initP14sha256_context(%struct.sha256_context* nonnull %15) #9
  call void @_Z14sha256_processP14sha256_contextPKvm(%struct.sha256_context* nonnull %15, i8* nonnull %23, i64 64) #9
  br i1 %117, label %201, label %206

201:                                              ; preds = %200
  %202 = load i8, i8* %8, align 1
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %204, label %206

204:                                              ; preds = %201
  %205 = bitcast %struct.sha256_context* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %205, i8* nonnull align 8 %116, i64 104, i1 false)
  store i8 1, i8* %8, align 1
  br label %206

206:                                              ; preds = %121, %201, %204, %200
  call void @_Z14sha256_processP14sha256_contextPKvm(%struct.sha256_context* nonnull %15, i8* nonnull %115, i64 32) #9
  call void @_Z11sha256_doneP14sha256_contextPh(%struct.sha256_context* nonnull %15, i8* %4) #9
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %116) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %115) #9
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %24) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %23) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CryptData8SetKey50EbP11SecPasswordPKwPKhS5_jPhS6_(%class.CryptData*, i1 zeroext, %class.SecPassword*, i32*, i8* nocapture readonly, i8*, i32, i8*, i8*) local_unnamed_addr #2 align 2 {
  %10 = alloca [32 x i8], align 16
  %11 = alloca [32 x i8], align 16
  %12 = alloca [32 x i8], align 16
  %13 = alloca [512 x i8], align 16
  %14 = icmp ugt i32 %6, 24
  br i1 %14, label %68, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #9
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #9
  %18 = getelementptr inbounds [32 x i8], [32 x i8]* %12, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #9
  %19 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -86, i64 32, i1 false)
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, %6
  br i1 %21, label %22, label %34

22:                                               ; preds = %15
  %23 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 0, i32 0
  %24 = tail call zeroext i1 @_ZN11SecPasswordeqERS_(%class.SecPassword* %23, %class.SecPassword* dereferenceable(516) %2) #9
  br i1 %24, label %25, label %34

25:                                               ; preds = %22
  %26 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 0, i32 1, i64 0
  %27 = tail call i32 @bcmp(i8* %26, i8* %4, i64 16)
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %94, %83, %72, %25
  %30 = phi i64 [ 0, %25 ], [ 1, %72 ], [ 2, %83 ], [ 3, %94 ]
  %31 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 %30, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %16, i8* align 4 %31, i64 32, i1 false)
  call void @_Z11SecHideDataPvmbb(i8* nonnull %16, i64 32, i1 zeroext false, i1 zeroext false) #9
  %32 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 %30, i32 4, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %17, i8* align 4 %32, i64 32, i1 false)
  %33 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 %30, i32 5, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %18, i8* align 4 %33, i64 32, i1 false)
  br label %38

34:                                               ; preds = %25, %22, %15
  %35 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 1, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, %6
  br i1 %37, label %69, label %76

38:                                               ; preds = %29, %98
  %39 = icmp eq i8* %7, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %38
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* nonnull align 16 %18, i64 32, i1 false)
  br label %41

41:                                               ; preds = %38, %40
  %42 = icmp eq i8* %8, null
  br i1 %42, label %63, label %43

43:                                               ; preds = %41
  %44 = bitcast i8* %8 to i64*
  store i64 0, i64* %44, align 1
  br label %46

45:                                               ; preds = %46
  call void @_Z9cleandataPvm(i8* nonnull %17, i64 32) #9
  br label %63

46:                                               ; preds = %46, %43
  %47 = phi i64 [ 0, %43 ], [ %61, %46 ]
  %48 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 %47
  %49 = load i8, i8* %48, align 2
  %50 = and i64 %47, 6
  %51 = getelementptr inbounds i8, i8* %8, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = xor i8 %52, %49
  store i8 %53, i8* %51, align 1
  %54 = or i64 %47, 1
  %55 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = and i64 %54, 7
  %58 = getelementptr inbounds i8, i8* %8, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = xor i8 %59, %56
  store i8 %60, i8* %58, align 1
  %61 = add nuw nsw i64 %47, 2
  %62 = icmp eq i64 %61, 32
  br i1 %62, label %45, label %46, !llvm.loop !9

63:                                               ; preds = %41, %45
  %64 = icmp eq i8* %5, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 5
  call void @_ZN8Rijndael4InitEbPKhjS1_(%class.Rijndael* %66, i1 zeroext %1, i8* nonnull %16, i32 256, i8* nonnull %5) #9
  br label %67

67:                                               ; preds = %63, %65
  call void @_Z9cleandataPvm(i8* nonnull %16, i64 32) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #9
  br label %68

68:                                               ; preds = %9, %67
  ret void

69:                                               ; preds = %34
  %70 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 1, i32 0
  %71 = tail call zeroext i1 @_ZN11SecPasswordeqERS_(%class.SecPassword* %70, %class.SecPassword* dereferenceable(516) %2) #9
  br i1 %71, label %72, label %76

72:                                               ; preds = %69
  %73 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 1, i32 1, i64 0
  %74 = tail call i32 @bcmp(i8* %73, i8* %4, i64 16)
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %29, label %76

76:                                               ; preds = %72, %69, %34
  %77 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 2, i32 3
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, %6
  br i1 %79, label %80, label %87

80:                                               ; preds = %76
  %81 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 2, i32 0
  %82 = tail call zeroext i1 @_ZN11SecPasswordeqERS_(%class.SecPassword* %81, %class.SecPassword* dereferenceable(516) %2) #9
  br i1 %82, label %83, label %87

83:                                               ; preds = %80
  %84 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 2, i32 1, i64 0
  %85 = tail call i32 @bcmp(i8* %84, i8* %4, i64 16)
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %29, label %87

87:                                               ; preds = %83, %80, %76
  %88 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 3, i32 3
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, %6
  br i1 %90, label %91, label %98

91:                                               ; preds = %87
  %92 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 3, i32 0
  %93 = tail call zeroext i1 @_ZN11SecPasswordeqERS_(%class.SecPassword* %92, %class.SecPassword* dereferenceable(516) %2) #9
  br i1 %93, label %94, label %98

94:                                               ; preds = %91
  %95 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 3, i32 1, i64 0
  %96 = tail call i32 @bcmp(i8* %95, i8* %4, i64 16)
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %29, label %98

98:                                               ; preds = %94, %91, %87
  %99 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %99) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %99, i8 -86, i64 512, i1 false)
  call void @_Z9WideToUtfPKwPcm(i32* %3, i8* nonnull %99, i64 512) #9
  %100 = call i64 @strlen(i8* nonnull %99) #10
  %101 = shl i32 1, %6
  call void @_Z6pbkdf2PKhmS0_mPhS1_S1_j(i8* nonnull %99, i64 %100, i8* %4, i64 16, i8* nonnull %16, i8* nonnull %18, i8* nonnull %17, i32 %101)
  call void @_Z9cleandataPvm(i8* nonnull %99, i64 512) #9
  %102 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 3
  %103 = load i32, i32* %102, align 4
  %104 = add i32 %103, 1
  store i32 %104, i32* %102, align 4
  %105 = and i32 %103, 3
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 %106
  %108 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 %106, i32 3
  store i32 %6, i32* %108, align 4
  %109 = bitcast %"struct.CryptData::KDF5CacheItem"* %107 to i8*
  %110 = bitcast %class.SecPassword* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %109, i8* align 4 %110, i64 514, i1 false)
  %111 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 %106, i32 1, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %111, i8* align 1 %4, i64 16, i1 false)
  %112 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 %106, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %112, i8* nonnull align 16 %16, i64 32, i1 false)
  %113 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 %106, i32 4, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %113, i8* nonnull align 16 %17, i64 32, i1 false)
  %114 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 %106, i32 5, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %114, i8* nonnull align 16 %18, i64 32, i1 false)
  call void @_Z11SecHideDataPvmbb(i8* %112, i64 32, i1 zeroext true, i1 zeroext false) #9
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %99) #9
  br label %38
}

declare void @_Z9WideToUtfPKwPcm(i32*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z16ConvertHashToMACP9HashValuePh(%struct.HashValue*, i8*) local_unnamed_addr #2 {
  %3 = alloca i32, align 4
  %4 = alloca [32 x i8], align 16
  %5 = alloca [32 x i8], align 16
  %6 = getelementptr inbounds %struct.HashValue, %struct.HashValue* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %9, label %52

9:                                                ; preds = %2
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #9
  %11 = getelementptr inbounds %struct.HashValue, %struct.HashValue* %0, i64 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %3, align 4
  %13 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 32, i1 false)
  call fastcc void @_ZL11hmac_sha256PKhmS0_mPhP14sha256_contextPbS3_S4_(i8* %1, i64 32, i8* nonnull %10, i64 4, i8* nonnull %13, %struct.sha256_context* null, i8* null, %struct.sha256_context* null, i8* null)
  store i32 0, i32* %11, align 4
  %14 = bitcast [32 x i8]* %4 to <4 x i8>*
  %15 = load <4 x i8>, <4 x i8>* %14, align 16
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i64 0, i64 4
  %17 = bitcast i8* %16 to <4 x i8>*
  %18 = load <4 x i8>, <4 x i8>* %17, align 4
  %19 = xor <4 x i8> %18, %15
  %20 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i64 0, i64 8
  %21 = bitcast i8* %20 to <4 x i8>*
  %22 = load <4 x i8>, <4 x i8>* %21, align 8
  %23 = xor <4 x i8> %22, %19
  %24 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i64 0, i64 12
  %25 = bitcast i8* %24 to <4 x i8>*
  %26 = load <4 x i8>, <4 x i8>* %25, align 4
  %27 = xor <4 x i8> %26, %23
  %28 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i64 0, i64 16
  %29 = bitcast i8* %28 to <4 x i8>*
  %30 = load <4 x i8>, <4 x i8>* %29, align 16
  %31 = xor <4 x i8> %30, %27
  %32 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i64 0, i64 20
  %33 = bitcast i8* %32 to <4 x i8>*
  %34 = load <4 x i8>, <4 x i8>* %33, align 4
  %35 = xor <4 x i8> %34, %31
  %36 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i64 0, i64 24
  %37 = bitcast i8* %36 to <4 x i8>*
  %38 = load <4 x i8>, <4 x i8>* %37, align 8
  %39 = xor <4 x i8> %38, %35
  %40 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i64 0, i64 28
  %41 = bitcast i8* %40 to <4 x i8>*
  %42 = load <4 x i8>, <4 x i8>* %41, align 4
  %43 = xor <4 x i8> %42, %39
  %44 = zext <4 x i8> %43 to <4 x i32>
  %45 = shl <4 x i32> %44, <i32 0, i32 8, i32 16, i32 24>
  %46 = shufflevector <4 x i32> %45, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %47 = xor <4 x i32> %45, %46
  %48 = shufflevector <4 x i32> %47, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %49 = xor <4 x i32> %47, %48
  %50 = extractelement <4 x i32> %49, i32 0
  store i32 %50, i32* %11, align 4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #9
  %51 = load i32, i32* %6, align 4
  br label %52

52:                                               ; preds = %9, %2
  %53 = phi i32 [ %51, %9 ], [ %7, %2 ]
  %54 = icmp eq i32 %53, 3
  br i1 %54, label %55, label %59

55:                                               ; preds = %52
  %56 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #9
  %57 = getelementptr inbounds %struct.HashValue, %struct.HashValue* %0, i64 0, i32 1
  %58 = bitcast %union.anon* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %56, i8 -86, i64 32, i1 false)
  call fastcc void @_ZL11hmac_sha256PKhmS0_mPhP14sha256_contextPbS3_S4_(i8* %1, i64 32, i8* %58, i64 32, i8* nonnull %56, %struct.sha256_context* null, i8* null, %struct.sha256_context* null, i8* null)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* nonnull align 16 %56, i64 32, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #9
  br label %59

59:                                               ; preds = %55, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CryptDataC2Ev(%class.CryptData*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 0, i32 0
  tail call void @_ZN11SecPasswordC1Ev(%class.SecPassword* %2) #9
  %3 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 1, i32 0
  tail call void @_ZN11SecPasswordC1Ev(%class.SecPassword* %3) #9
  %4 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 2, i32 0
  tail call void @_ZN11SecPasswordC1Ev(%class.SecPassword* %4) #9
  %5 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 3, i32 0
  tail call void @_ZN11SecPasswordC1Ev(%class.SecPassword* %5) #9
  %6 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 0, i32 0
  tail call void @_ZN11SecPasswordC1Ev(%class.SecPassword* %6) #9
  %7 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 1, i32 0
  tail call void @_ZN11SecPasswordC1Ev(%class.SecPassword* %7) #9
  %8 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 2, i32 0
  tail call void @_ZN11SecPasswordC1Ev(%class.SecPassword* %8) #9
  %9 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 3, i32 0
  tail call void @_ZN11SecPasswordC1Ev(%class.SecPassword* %9) #9
  %10 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 5
  tail call void @_ZN8RijndaelC1Ev(%class.Rijndael* %10) #9
  %11 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 0
  %12 = bitcast i32* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 1024, i1 false)
  %13 = bitcast %class.CryptData* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 4780, i1 false)
  ret void
}

declare void @_ZN8RijndaelC1Ev(%class.Rijndael*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CryptDataD2Ev(%class.CryptData*) unnamed_addr #2 align 2 {
  %2 = bitcast %class.CryptData* %0 to i8*
  tail call void @_Z9cleandataPvm(i8* %2, i64 2240) #9
  %3 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2
  %4 = bitcast [4 x %"struct.CryptData::KDF5CacheItem"]* %3 to i8*
  tail call void @_Z9cleandataPvm(i8* %4, i64 2528) #9
  %5 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 3, i32 0
  tail call void @_ZN11SecPasswordD1Ev(%class.SecPassword* %5) #9
  %6 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 2, i32 0
  tail call void @_ZN11SecPasswordD1Ev(%class.SecPassword* %6) #9
  %7 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 1, i32 0
  tail call void @_ZN11SecPasswordD1Ev(%class.SecPassword* %7) #9
  %8 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 2, i64 0, i32 0
  tail call void @_ZN11SecPasswordD1Ev(%class.SecPassword* %8) #9
  %9 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 3, i32 0
  tail call void @_ZN11SecPasswordD1Ev(%class.SecPassword* %9) #9
  %10 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 2, i32 0
  tail call void @_ZN11SecPasswordD1Ev(%class.SecPassword* %10) #9
  %11 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 1, i32 0
  tail call void @_ZN11SecPasswordD1Ev(%class.SecPassword* %11) #9
  %12 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 0, i64 0, i32 0
  tail call void @_ZN11SecPasswordD1Ev(%class.SecPassword* %12) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CryptData12DecryptBlockEPhm(%class.CryptData*, i8*, i64) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %100 [
    i32 1, label %8
    i32 2, label %51
    i32 3, label %6
    i32 4, label %98
    i32 5, label %98
  ]

6:                                                ; preds = %3
  %7 = icmp eq i64 %2, 0
  br i1 %7, label %100, label %93

8:                                                ; preds = %3
  %9 = icmp eq i64 %2, 0
  br i1 %9, label %100, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 9, i64 2
  %12 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 9, i64 1
  %13 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 9, i64 0
  %14 = and i64 %2, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %26, label %16

16:                                               ; preds = %10
  %17 = add i64 %2, -1
  %18 = load i8, i8* %11, align 2
  %19 = load i8, i8* %12, align 1
  %20 = add i8 %19, %18
  store i8 %20, i8* %12, align 1
  %21 = load i8, i8* %13, align 4
  %22 = add i8 %21, %20
  store i8 %22, i8* %13, align 4
  %23 = load i8, i8* %1, align 1
  %24 = sub i8 %23, %22
  store i8 %24, i8* %1, align 1
  %25 = getelementptr inbounds i8, i8* %1, i64 1
  br label %26

26:                                               ; preds = %10, %16
  %27 = phi i64 [ %2, %10 ], [ %17, %16 ]
  %28 = phi i8* [ %1, %10 ], [ %25, %16 ]
  %29 = icmp eq i64 %2, 1
  br i1 %29, label %100, label %30

30:                                               ; preds = %26, %30
  %31 = phi i64 [ %41, %30 ], [ %27, %26 ]
  %32 = phi i8* [ %49, %30 ], [ %28, %26 ]
  %33 = load i8, i8* %11, align 2
  %34 = load i8, i8* %12, align 1
  %35 = add i8 %34, %33
  store i8 %35, i8* %12, align 1
  %36 = load i8, i8* %13, align 4
  %37 = add i8 %36, %35
  store i8 %37, i8* %13, align 4
  %38 = load i8, i8* %32, align 1
  %39 = sub i8 %38, %37
  store i8 %39, i8* %32, align 1
  %40 = getelementptr inbounds i8, i8* %32, i64 1
  %41 = add i64 %31, -2
  %42 = load i8, i8* %11, align 2
  %43 = load i8, i8* %12, align 1
  %44 = add i8 %43, %42
  store i8 %44, i8* %12, align 1
  %45 = load i8, i8* %13, align 4
  %46 = add i8 %45, %44
  store i8 %46, i8* %13, align 4
  %47 = load i8, i8* %40, align 1
  %48 = sub i8 %47, %46
  store i8 %48, i8* %40, align 1
  %49 = getelementptr inbounds i8, i8* %32, i64 2
  %50 = icmp eq i64 %41, 0
  br i1 %50, label %100, label %30

51:                                               ; preds = %3
  %52 = icmp eq i64 %2, 0
  br i1 %52, label %100, label %53

53:                                               ; preds = %51
  %54 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 10, i64 0
  %55 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 10, i64 1
  %56 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 10, i64 2
  %57 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 10, i64 3
  br label %58

58:                                               ; preds = %58, %53
  %59 = phi i64 [ %2, %53 ], [ %61, %58 ]
  %60 = phi i8* [ %1, %53 ], [ %91, %58 ]
  %61 = add i64 %59, -1
  %62 = load i16, i16* %54, align 4
  %63 = add i16 %62, 4660
  store i16 %63, i16* %54, align 4
  %64 = lshr i16 %63, 1
  %65 = and i16 %64, 255
  %66 = zext i16 %65 to i64
  %67 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = load i16, i16* %55, align 2
  %70 = trunc i32 %68 to i16
  %71 = xor i16 %69, %70
  store i16 %71, i16* %55, align 2
  %72 = load i32, i32* %67, align 4
  %73 = lshr i32 %72, 16
  %74 = load i16, i16* %56, align 4
  %75 = trunc i32 %73 to i16
  %76 = sub i16 %74, %75
  store i16 %76, i16* %56, align 4
  %77 = xor i16 %76, %63
  %78 = load i16, i16* %57, align 2
  %79 = lshr i16 %78, 1
  %80 = shl i16 %78, 15
  %81 = or i16 %79, %80
  %82 = xor i16 %81, %71
  %83 = lshr i16 %82, 1
  %84 = shl i16 %82, 15
  %85 = or i16 %83, %84
  store i16 %85, i16* %57, align 2
  %86 = xor i16 %77, %85
  store i16 %86, i16* %54, align 4
  %87 = lshr i16 %86, 8
  %88 = trunc i16 %87 to i8
  %89 = load i8, i8* %60, align 1
  %90 = xor i8 %89, %88
  store i8 %90, i8* %60, align 1
  %91 = getelementptr inbounds i8, i8* %60, i64 1
  %92 = icmp eq i64 %61, 0
  br i1 %92, label %100, label %58

93:                                               ; preds = %6, %93
  %94 = phi i64 [ %96, %93 ], [ 0, %6 ]
  %95 = getelementptr inbounds i8, i8* %1, i64 %94
  tail call void @_ZN9CryptData14DecryptBlock20EPh(%class.CryptData* %0, i8* %95)
  %96 = add i64 %94, 16
  %97 = icmp ult i64 %96, %2
  br i1 %97, label %93, label %100

98:                                               ; preds = %3, %3
  %99 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 5
  tail call void @_ZN8Rijndael12blockDecryptEPKhmPh(%class.Rijndael* %99, i8* %1, i64 %2, i8* %1) #9
  br label %100

100:                                              ; preds = %93, %58, %26, %30, %6, %51, %8, %3, %98
  ret void
}

declare void @_ZN8Rijndael12blockDecryptEPKhmPh(%class.Rijndael*, i8*, i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9CryptData12SetCryptKeysEb12CRYPT_METHODP11SecPasswordPKhS4_jPhS5_(%class.CryptData*, i1 zeroext, i32, %class.SecPassword*, i8*, i8*, i32, i8*, i8*) local_unnamed_addr #2 align 2 {
  %10 = alloca [128 x i32], align 16
  %11 = alloca [128 x i8], align 16
  %12 = getelementptr inbounds %class.SecPassword, %class.SecPassword* %3, i64 0, i32 1
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = icmp eq i32 %2, 0
  %16 = or i1 %15, %14
  br i1 %16, label %84, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 4
  store i32 %2, i32* %18, align 4
  %19 = bitcast [128 x i32]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %19) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -86, i64 512, i1 false)
  %20 = getelementptr inbounds [128 x i32], [128 x i32]* %10, i64 0, i64 0
  call void @_ZN11SecPassword3GetEPwm(%class.SecPassword* %3, i32* nonnull %20, i64 128) #9
  %21 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %21) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 -86, i64 128, i1 false)
  %22 = call zeroext i1 @_Z10WideToCharPKwPcm(i32* nonnull %20, i8* nonnull %21, i64 128) #9
  switch i32 %2, label %83 [
    i32 1, label %23
    i32 2, label %45
    i32 3, label %79
    i32 4, label %80
    i32 5, label %81
  ]

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 9, i64 2
  store i8 0, i8* %24, align 2
  %25 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 9, i64 1
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 9, i64 0
  store i8 0, i8* %26, align 4
  %27 = load i8, i8* %21, align 16
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %83, label %29

29:                                               ; preds = %23, %29
  %30 = phi i8 [ %40, %29 ], [ 0, %23 ]
  %31 = phi i8 [ %36, %29 ], [ 0, %23 ]
  %32 = phi i8 [ %35, %29 ], [ 0, %23 ]
  %33 = phi i8 [ %43, %29 ], [ %27, %23 ]
  %34 = phi i64 [ %41, %29 ], [ 0, %23 ]
  %35 = add i8 %33, %32
  %36 = xor i8 %33, %31
  %37 = add i8 %33, %30
  %38 = shl i8 %37, 1
  %39 = lshr i8 %37, 7
  %40 = or i8 %38, %39
  %41 = add i64 %34, 1
  %42 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %82, label %29

45:                                               ; preds = %17
  %46 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 0
  call void @_Z9InitCRC32Pj(i32* %46) #9
  %47 = call i64 @strlen(i8* nonnull %21) #10
  %48 = call i32 @_Z5CRC32jPKvm(i32 -1, i8* nonnull %21, i64 %47) #9
  %49 = trunc i32 %48 to i16
  %50 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 10, i64 0
  store i16 %49, i16* %50, align 4
  %51 = lshr i32 %48, 16
  %52 = trunc i32 %51 to i16
  %53 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 10, i64 1
  store i16 %52, i16* %53, align 2
  %54 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 10, i64 3
  store i16 0, i16* %54, align 2
  %55 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 10, i64 2
  store i16 0, i16* %55, align 4
  %56 = load i8, i8* %21, align 16
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %83, label %58

58:                                               ; preds = %45, %58
  %59 = phi i16 [ %74, %58 ], [ 0, %45 ]
  %60 = phi i16 [ %69, %58 ], [ 0, %45 ]
  %61 = phi i8 [ %77, %58 ], [ %56, %45 ]
  %62 = phi i64 [ %75, %58 ], [ 0, %45 ]
  %63 = zext i8 %61 to i32
  %64 = zext i8 %61 to i64
  %65 = getelementptr inbounds %class.CryptData, %class.CryptData* %0, i64 0, i32 6, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = xor i32 %66, %63
  %68 = trunc i32 %67 to i16
  %69 = xor i16 %60, %68
  store i16 %69, i16* %55, align 4
  %70 = load i32, i32* %65, align 4
  %71 = lshr i32 %70, 16
  %72 = add nuw nsw i32 %71, %63
  %73 = trunc i32 %72 to i16
  %74 = add i16 %59, %73
  store i16 %74, i16* %54, align 2
  %75 = add i64 %62, 1
  %76 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %83, label %58

79:                                               ; preds = %17
  call void @_ZN9CryptData8SetKey20EPKc(%class.CryptData* %0, i8* nonnull %21)
  br label %83

80:                                               ; preds = %17
  call void @_ZN9CryptData8SetKey30EbP11SecPasswordPKwPKh(%class.CryptData* %0, i1 zeroext %1, %class.SecPassword* %3, i32* nonnull %20, i8* %4)
  br label %83

81:                                               ; preds = %17
  call void @_ZN9CryptData8SetKey50EbP11SecPasswordPKwPKhS5_jPhS6_(%class.CryptData* %0, i1 zeroext %1, %class.SecPassword* %3, i32* nonnull %20, i8* %4, i8* %5, i32 %6, i8* %7, i8* %8)
  br label %83

82:                                               ; preds = %29
  store i8 %35, i8* %26, align 4
  store i8 %36, i8* %25, align 1
  store i8 %40, i8* %24, align 2
  br label %83

83:                                               ; preds = %58, %82, %45, %23, %17, %81, %80, %79
  call void @_Z9cleandataPvm(i8* nonnull %21, i64 128) #9
  call void @_Z9cleandataPvm(i8* nonnull %19, i64 512) #9
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %21) #9
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %19) #9
  br label %84

84:                                               ; preds = %9, %83
  %85 = phi i1 [ true, %83 ], [ false, %9 ]
  ret i1 %85
}

declare void @_ZN11SecPassword3GetEPwm(%class.SecPassword*, i32*, i64) local_unnamed_addr #3

declare zeroext i1 @_Z10WideToCharPKwPcm(i32*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z6GetRndPhm(i8* nocapture, i64) local_unnamed_addr #2 {
  %3 = alloca %class.RarTime, align 8
  %4 = tail call %struct._IO_FILE* @fopen64(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %5 = icmp eq %struct._IO_FILE* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = tail call i64 @fread(i8* %0, i64 %1, i64 1, %struct._IO_FILE* nonnull %4)
  %8 = icmp eq i64 %7, %1
  %9 = tail call i32 @fclose(%struct._IO_FILE* nonnull %4)
  br i1 %8, label %104, label %10

10:                                               ; preds = %2, %6
  %11 = bitcast %class.RarTime* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = getelementptr inbounds %class.RarTime, %class.RarTime* %3, i64 0, i32 0
  store i64 0, i64* %12, align 8
  call void @_ZN7RarTime14SetCurrentTimeEv(%class.RarTime* nonnull %3) #9
  %13 = call i64 @_ZN7RarTime6GetWinEv(%class.RarTime* nonnull %3) #9
  %14 = call i64 @clock() #9
  %15 = add i64 %14, %13
  %16 = icmp eq i64 %1, 0
  br i1 %16, label %103, label %17

17:                                               ; preds = %10
  %18 = load i32, i32* @_ZZL13TimeRandomizePhmE5Count, align 4
  %19 = icmp ult i64 %1, 4
  br i1 %19, label %20, label %23

20:                                               ; preds = %85, %17
  %21 = phi i32 [ %18, %17 ], [ %26, %85 ]
  %22 = phi i64 [ 0, %17 ], [ %24, %85 ]
  br label %89

23:                                               ; preds = %17
  %24 = and i64 %1, -4
  %25 = trunc i64 %24 to i32
  %26 = add i32 %18, %25
  %27 = insertelement <4 x i32> undef, i32 %18, i32 0
  %28 = shufflevector <4 x i32> %27, <4 x i32> undef, <4 x i32> zeroinitializer
  %29 = add <4 x i32> %28, <i32 0, i32 1, i32 2, i32 3>
  %30 = insertelement <4 x i64> undef, i64 %15, i32 0
  %31 = shufflevector <4 x i64> %30, <4 x i64> undef, <4 x i32> zeroinitializer
  %32 = add i64 %24, -4
  %33 = lshr exact i64 %32, 2
  %34 = add nuw nsw i64 %33, 1
  %35 = and i64 %34, 1
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %70, label %37

37:                                               ; preds = %23
  %38 = sub nuw nsw i64 %34, %35
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi i64 [ 0, %37 ], [ %65, %39 ]
  %41 = phi <4 x i32> [ %29, %37 ], [ %66, %39 ]
  %42 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %37 ], [ %67, %39 ]
  %43 = phi i64 [ %38, %37 ], [ %68, %39 ]
  %44 = shl <4 x i64> %42, <i64 3, i64 3, i64 3, i64 3>
  %45 = and <4 x i64> %44, <i64 56, i64 56, i64 56, i64 56>
  %46 = lshr <4 x i64> %31, %45
  %47 = xor <4 x i64> %46, %42
  %48 = zext <4 x i32> %41 to <4 x i64>
  %49 = add <4 x i64> %47, %48
  %50 = trunc <4 x i64> %49 to <4 x i8>
  %51 = getelementptr inbounds i8, i8* %0, i64 %40
  %52 = bitcast i8* %51 to <4 x i8>*
  store <4 x i8> %50, <4 x i8>* %52, align 1
  %53 = or i64 %40, 4
  %54 = add <4 x i32> %41, <i32 4, i32 4, i32 4, i32 4>
  %55 = add <4 x i64> %42, <i64 4, i64 4, i64 4, i64 4>
  %56 = shl <4 x i64> %55, <i64 3, i64 3, i64 3, i64 3>
  %57 = and <4 x i64> %56, <i64 56, i64 56, i64 56, i64 56>
  %58 = lshr <4 x i64> %31, %57
  %59 = xor <4 x i64> %58, %55
  %60 = zext <4 x i32> %54 to <4 x i64>
  %61 = add <4 x i64> %59, %60
  %62 = trunc <4 x i64> %61 to <4 x i8>
  %63 = getelementptr inbounds i8, i8* %0, i64 %53
  %64 = bitcast i8* %63 to <4 x i8>*
  store <4 x i8> %62, <4 x i8>* %64, align 1
  %65 = add i64 %40, 8
  %66 = add <4 x i32> %41, <i32 8, i32 8, i32 8, i32 8>
  %67 = add <4 x i64> %42, <i64 8, i64 8, i64 8, i64 8>
  %68 = add i64 %43, -2
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %39, !llvm.loop !10

70:                                               ; preds = %39, %23
  %71 = phi i64 [ 0, %23 ], [ %65, %39 ]
  %72 = phi <4 x i32> [ %29, %23 ], [ %66, %39 ]
  %73 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %23 ], [ %67, %39 ]
  %74 = icmp eq i64 %35, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %70
  %76 = shl <4 x i64> %73, <i64 3, i64 3, i64 3, i64 3>
  %77 = and <4 x i64> %76, <i64 56, i64 56, i64 56, i64 56>
  %78 = lshr <4 x i64> %31, %77
  %79 = xor <4 x i64> %78, %73
  %80 = zext <4 x i32> %72 to <4 x i64>
  %81 = add <4 x i64> %79, %80
  %82 = trunc <4 x i64> %81 to <4 x i8>
  %83 = getelementptr inbounds i8, i8* %0, i64 %71
  %84 = bitcast i8* %83 to <4 x i8>*
  store <4 x i8> %82, <4 x i8>* %84, align 1
  br label %85

85:                                               ; preds = %70, %75
  %86 = icmp eq i64 %24, %1
  br i1 %86, label %87, label %20

87:                                               ; preds = %89, %85
  %88 = phi i32 [ %26, %85 ], [ %96, %89 ]
  store i32 %88, i32* @_ZZL13TimeRandomizePhmE5Count, align 4
  br label %103

89:                                               ; preds = %20, %89
  %90 = phi i32 [ %96, %89 ], [ %21, %20 ]
  %91 = phi i64 [ %101, %89 ], [ %22, %20 ]
  %92 = shl i64 %91, 3
  %93 = and i64 %92, 56
  %94 = lshr i64 %15, %93
  %95 = xor i64 %94, %91
  %96 = add i32 %90, 1
  %97 = zext i32 %90 to i64
  %98 = add i64 %95, %97
  %99 = trunc i64 %98 to i8
  %100 = getelementptr inbounds i8, i8* %0, i64 %91
  store i8 %99, i8* %100, align 1
  %101 = add nuw i64 %91, 1
  %102 = icmp eq i64 %101, %1
  br i1 %102, label %87, label %89, !llvm.loop !11

103:                                              ; preds = %10, %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  br label %104

104:                                              ; preds = %103, %6
  ret void
}

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fopen64(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i64 @fread(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #6

declare void @_Z11sha256_initP14sha256_context(%struct.sha256_context*) local_unnamed_addr #3

declare void @_Z14sha256_processP14sha256_contextPKvm(%struct.sha256_context*, i8*, i64) local_unnamed_addr #3

declare void @_Z11sha256_doneP14sha256_contextPh(%struct.sha256_context*, i8*) local_unnamed_addr #3

declare void @_ZN11SecPasswordC1Ev(%class.SecPassword*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN11SecPasswordD1Ev(%class.SecPassword*) unnamed_addr #7

declare void @_ZN7RarTime14SetCurrentTimeEv(%class.RarTime*) local_unnamed_addr #3

declare i64 @_ZN7RarTime6GetWinEv(%class.RarTime*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i64 @clock() local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.isvectorized", i32 1}
!5 = distinct !{!5, !6, !4}
!6 = !{!"llvm.loop.unroll.runtime.disable"}
!7 = distinct !{!7, !4}
!8 = distinct !{!8, !6, !4}
!9 = distinct !{!9, !4}
!10 = distinct !{!10, !4}
!11 = distinct !{!11, !6, !4}
