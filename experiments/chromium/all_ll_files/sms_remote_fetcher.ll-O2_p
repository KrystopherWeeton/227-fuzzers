; ModuleID = '../../chrome/browser/sharing/sms/sms_remote_fetcher.cc'
source_filename = "../../chrome/browser/sharing/sms/sms_remote_fetcher.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::OnceCallback.11" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.17" = type { %"class.absl::optional_internal::optional_data.18" }
%"class.absl::optional_internal::optional_data.18" = type { %"class.absl::optional_internal::optional_data_base.19" }
%"class.absl::optional_internal::optional_data_base.19" = type { %"class.absl::optional_internal::optional_data_dtor_base.20" }
%"class.absl::optional_internal::optional_data_dtor_base.20" = type { i8, %union.anon.21 }
%union.anon.21 = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.url::Origin"* }
%"class.absl::optional.27" = type { %"class.absl::optional_internal::optional_data.28" }
%"class.absl::optional_internal::optional_data.28" = type { %"class.absl::optional_internal::optional_data_base.29" }
%"class.absl::optional_internal::optional_data_base.29" = type { %"class.absl::optional_internal::optional_data_dtor_base.30" }
%"class.absl::optional_internal::optional_data_dtor_base.30" = type { i8, %union.anon.31 }
%union.anon.31 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.12" = type { %"class.absl::optional_internal::optional_data.13" }
%"class.absl::optional_internal::optional_data.13" = type { %"class.absl::optional_internal::optional_data_base.14" }
%"class.absl::optional_internal::optional_data_base.14" = type { %"class.absl::optional_internal::optional_data_dtor_base.15" }
%"class.absl::optional_internal::optional_data_dtor_base.15" = type { i8, %union.anon.16 }
%union.anon.16 = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.SmsRemoteFetcherUiController = type { %class.SharingUiController, %"class.content::WebContentsUserData", %"class.std::__1::basic_string", %"class.base::WeakPtrFactory.144" }
%class.SharingUiController = type { i32 (...)**, %class.SharingDialog*, %"class.content::WebContents"*, %class.SharingService*, i8, i32, %"class.std::__1::basic_string", i32, %"class.base::OnceCallback", %"class.base::WeakPtrFactory.143" }
%class.SharingDialog = type opaque
%class.SharingService = type { %class.KeyedService, %"class.syncer::SyncServiceObserver", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.127", %"class.syncer::SyncService"*, %"class.net::BackoffEntry", i32, %"class.std::__1::map.133", %"class.base::WeakPtrFactory.142" }
%class.KeyedService = type { i32 (...)** }
%"class.syncer::SyncServiceObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %class.SharingSyncPreference* }
%class.SharingSyncPreference = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.VapidKeyManager* }
%class.VapidKeyManager = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.SharingDeviceRegistration* }
%class.SharingDeviceRegistration = type { i32 (...)**, %class.PrefService*, %class.SharingSyncPreference*, %class.VapidKeyManager*, %"class.instance_id::InstanceIDDriver"*, %"class.syncer::SyncService"*, %"class.absl::optional.44", %"class.base::WeakPtrFactory" }
%class.PrefService = type opaque
%"class.instance_id::InstanceIDDriver" = type opaque
%"class.absl::optional.44" = type { %"class.absl::optional_internal::optional_data.45" }
%"class.absl::optional_internal::optional_data.45" = type { %"class.absl::optional_internal::optional_data_base.46" }
%"class.absl::optional_internal::optional_data_base.46" = type { %"class.absl::optional_internal::optional_data_dtor_base.47" }
%"class.absl::optional_internal::optional_data_dtor_base.47" = type { i8, %union.anon.48 }
%union.anon.48 = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.49" }
%"class.std::__1::__tree.49" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.58 }
%class.scoped_refptr.58 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.59", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.59" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.60" }
%"struct.std::__1::atomic.60" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__atomic_base.62" }
%"struct.std::__1::__atomic_base.62" = type { %"struct.std::__1::__cxx_atomic_impl.63" }
%"struct.std::__1::__cxx_atomic_impl.63" = type { %"struct.std::__1::__cxx_atomic_base_impl.64" }
%"struct.std::__1::__cxx_atomic_base_impl.64" = type { i8 }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %class.SharingMessageSender* }
%class.SharingMessageSender = type { i32 (...)**, %"class.syncer::LocalDeviceInfoProvider"*, %"class.std::__1::map.71", %"class.std::__1::map.82", %"class.std::__1::map.91", %"class.std::__1::map.100", %"class.base::WeakPtrFactory.111" }
%"class.syncer::LocalDeviceInfoProvider" = type opaque
%"class.std::__1::map.71" = type { %"class.std::__1::__tree.72" }
%"class.std::__1::__tree.72" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.82" = type { %"class.std::__1::__tree.83" }
%"class.std::__1::__tree.83" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.91" = type { %"class.std::__1::__tree.92" }
%"class.std::__1::__tree.92" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.100" = type { %"class.std::__1::__tree.101" }
%"class.std::__1::__tree.101" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.102", %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory.111" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %class.SharingDeviceSource* }
%class.SharingDeviceSource = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %class.SharingHandlerRegistry* }
%class.SharingHandlerRegistry = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %class.SharingFCMHandler* }
%class.SharingFCMHandler = type opaque
%"class.syncer::SyncService" = type opaque
%"class.net::BackoffEntry" = type { i32 (...)**, %"class.base::TimeTicks", i32, %"struct.net::BackoffEntry::Policy"*, %"class.base::TickClock"* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.net::BackoffEntry::Policy" = type { i32, i32, double, double, i64, i64, i8 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::map.133" = type { %"class.std::__1::__tree.134" }
%"class.std::__1::__tree.134" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.135", %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory.142" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.143" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.content::WebContentsUserData" = type { %"class.base::SupportsUserData::Data" }
%"class.base::SupportsUserData::Data" = type { i32 (...)** }
%"class.base::WeakPtrFactory.144" = type { %"class.base::internal::WeakPtrFactoryBase" }

@kWebOTPCrossDevice = external global %"struct.base::Feature", align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z14FetchRemoteSmsPN7content11WebContentsERKN3url6OriginEN4base12OnceCallbackIFvN4absl8optionalINSt3__16vectorIS3_NSA_9allocatorIS3_EEEEEENS9_INSA_12basic_stringIcNSA_11char_traitsIcEENSC_IcEEEEEENS9_INS_19SmsFetchFailureTypeEEEEEE(%"class.base::OnceCallback"* noalias sret, %"class.content::WebContents"*, %"class.url::Origin"* dereferenceable(80), %"class.base::OnceCallback.11"* nocapture) local_unnamed_addr #0 {
  %5 = alloca i64, align 8
  %6 = alloca %"class.base::OnceCallback.11", align 8
  %7 = alloca %"class.absl::optional.17", align 8
  %8 = alloca %"class.absl::optional.27", align 8
  %9 = alloca %"class.base::OnceCallback.11", align 8
  %10 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @kWebOTPCrossDevice) #5
  br i1 %10, label %67, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.absl::optional.17", %"class.absl::optional.17"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.absl::optional.17", %"class.absl::optional.17"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %union.anon.21* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #5
  %15 = getelementptr inbounds %"class.absl::optional.27", %"class.absl::optional.27"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"class.absl::optional.27", %"class.absl::optional.27"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %union.anon.31* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #5
  %18 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = bitcast i64* %5 to %"class.absl::optional.12"*
  store i64 0, i64* %5, align 8
  %20 = bitcast %"class.base::OnceCallback.11"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  %21 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %3, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.base::OnceCallback.11"* %3 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.base::OnceCallback.11"* %6 to i64*
  store i64 %23, i64* %24, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %21, align 8
  %25 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %6, i64 0, i32 0
  %26 = inttoptr i64 %23 to %"class.base::internal::BindStateBase"*
  %27 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %26, i64 0, i32 1
  %28 = bitcast void ()** %27 to void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.17"*, %"class.absl::optional.27"*, %"class.absl::optional.12"*)**
  %29 = load void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.17"*, %"class.absl::optional.27"*, %"class.absl::optional.12"*)*, void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.17"*, %"class.absl::optional.27"*, %"class.absl::optional.12"*)** %28, align 8
  call void %29(%"class.base::internal::BindStateBase"* %26, %"class.absl::optional.17"* nonnull dereferenceable(32) %7, %"class.absl::optional.27"* nonnull dereferenceable(32) %8, %"class.absl::optional.12"* nonnull dereferenceable(8) %19) #5
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %25) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  %30 = load i8, i8* %15, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %42, label %32

32:                                               ; preds = %11
  %33 = getelementptr inbounds %"class.absl::optional.27", %"class.absl::optional.27"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #6
  br label %41

41:                                               ; preds = %38, %32
  store i8 0, i8* %15, align 8
  br label %42

42:                                               ; preds = %11, %41
  %43 = load i8, i8* %12, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %65, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.absl::optional.17", %"class.absl::optional.17"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.url::Origin"*, %"class.url::Origin"** %47, align 8
  %49 = icmp eq %"class.url::Origin"* %48, null
  br i1 %49, label %64, label %50

50:                                               ; preds = %45
  %51 = bitcast %"class.url::Origin"* %48 to i8*
  %52 = getelementptr inbounds %"class.absl::optional.17", %"class.absl::optional.17"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %53 = load %"class.url::Origin"*, %"class.url::Origin"** %52, align 8
  %54 = icmp eq %"class.url::Origin"* %53, %48
  br i1 %54, label %62, label %55

55:                                               ; preds = %50, %55
  %56 = phi %"class.url::Origin"* [ %57, %55 ], [ %53, %50 ]
  %57 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %56, i64 -1
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %57) #5
  %58 = icmp eq %"class.url::Origin"* %57, %48
  br i1 %58, label %59, label %55

59:                                               ; preds = %55
  %60 = bitcast %"class.std::__1::vector"* %46 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %59, %50
  %63 = phi i8* [ %61, %59 ], [ %51, %50 ]
  store %"class.url::Origin"* %48, %"class.url::Origin"** %52, align 8
  call void @_ZdlPv(i8* %63) #6
  br label %64

64:                                               ; preds = %62, %45
  store i8 0, i8* %12, align 8
  br label %65

65:                                               ; preds = %42, %64
  %66 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %66, align 8, !alias.scope !3
  br label %74

67:                                               ; preds = %4
  %68 = tail call %class.SmsRemoteFetcherUiController* @_ZN28SmsRemoteFetcherUiController26GetOrCreateFromWebContentsEPN7content11WebContentsE(%"class.content::WebContents"* %1) #5
  %69 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %3, i64 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.base::OnceCallback.11"* %3 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.base::OnceCallback.11"* %9 to i64*
  store i64 %71, i64* %72, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %69, align 8
  call void @_ZN28SmsRemoteFetcherUiController14FetchRemoteSmsERKN3url6OriginEN4base12OnceCallbackIFvN4absl8optionalINSt3__16vectorIS1_NS8_9allocatorIS1_EEEEEENS7_INS8_12basic_stringIcNS8_11char_traitsIcEENSA_IcEEEEEENS7_IN7content19SmsFetchFailureTypeEEEEEE(%"class.base::OnceCallback"* sret %0, %class.SmsRemoteFetcherUiController* %68, %"class.url::Origin"* dereferenceable(80) %2, %"class.base::OnceCallback.11"* nonnull %9) #5
  %73 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %73) #5
  br label %74

74:                                               ; preds = %67, %65
  ret void
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %class.SmsRemoteFetcherUiController* @_ZN28SmsRemoteFetcherUiController26GetOrCreateFromWebContentsEPN7content11WebContentsE(%"class.content::WebContents"*) local_unnamed_addr #1

declare void @_ZN28SmsRemoteFetcherUiController14FetchRemoteSmsERKN3url6OriginEN4base12OnceCallbackIFvN4absl8optionalINSt3__16vectorIS1_NS8_9allocatorIS1_EEEEEENS7_INS8_12basic_stringIcNS8_11char_traitsIcEENSA_IcEEEEEENS7_IN7content19SmsFetchFailureTypeEEEEEE(%"class.base::OnceCallback"* sret, %class.SmsRemoteFetcherUiController*, %"class.url::Origin"* dereferenceable(80), %"class.base::OnceCallback.11"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base12NullCallbackcvNS_12OnceCallbackIFT_DpT0_EEEIvJEEEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base12NullCallbackcvNS_12OnceCallbackIFT_DpT0_EEEIvJEEEv"}
