; ModuleID = '../../third_party/libjpeg_turbo/jdapistd.c'
source_filename = "../../third_party/libjpeg_turbo/jdapistd.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.jpeg_decompress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32, %struct.jpeg_source_mgr*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i8, i8, i16, i16, i32, i8, i32, %struct.jpeg_marker_struct*, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master*, %struct.jpeg_d_main_controller*, %struct.jpeg_d_coef_controller*, %struct.jpeg_d_post_controller*, %struct.jpeg_input_controller*, %struct.jpeg_marker_reader*, %struct.jpeg_entropy_decoder*, %struct.jpeg_inverse_dct*, %struct.jpeg_upsampler*, %struct.jpeg_color_deconverter*, %struct.jpeg_color_quantizer* }
%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.jpeg_source_mgr = type { i8*, i64, void (%struct.jpeg_decompress_struct*)*, {}*, void (%struct.jpeg_decompress_struct*, i64)*, i32 (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*)* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.jpeg_marker_struct = type { %struct.jpeg_marker_struct*, i8, i32, i32, i8* }
%struct.jpeg_decomp_master = type { void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, i32, i32, i32, [10 x i32], [10 x i32], i32, i32 }
%struct.jpeg_d_main_controller = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)* }
%struct.jpeg_d_coef_controller = type { void (%struct.jpeg_decompress_struct*)*, {}*, void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*, i8***)*, %struct.jvirt_barray_control** }
%struct.jpeg_d_post_controller = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*, i32)* }
%struct.jpeg_input_controller = type { {}*, void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, i32, i32 }
%struct.jpeg_marker_reader = type { void (%struct.jpeg_decompress_struct*)*, {}*, {}*, i32, i32, i32, i32 }
%struct.jpeg_entropy_decoder = type { void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*, [64 x i16]**)*, i32 }
%struct.jpeg_inverse_dct = type { void (%struct.jpeg_decompress_struct*)*, [10 x void (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*, i16*, i8**, i32)*] }
%struct.jpeg_upsampler = type { void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*, i32)*, i32 }
%struct.jpeg_color_deconverter = type { void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* }
%struct.jpeg_color_quantizer = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)* }
%struct.my_main_controller = type { %struct.jpeg_d_main_controller, [10 x i8**], i32, i32, [2 x i8***], i32, i32, i32, i32 }
%struct.my_coef_controller = type { %struct.jpeg_d_coef_controller, i32, i32, i32, [10 x [64 x i16]*], i16*, [10 x %struct.jvirt_barray_control*], i32* }
%struct.my_decomp_master = type { %struct.jpeg_decomp_master, i32, i32, %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer* }
%struct.my_upsampler = type { %struct.jpeg_upsampler, [10 x i8**], [10 x void (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*, i8**, i8***)*], i32, i32, [10 x i32], [10 x i8], [10 x i8] }
%struct.my_merged_upsampler = type { %struct.jpeg_upsampler, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)*, i32*, i32*, i64*, i64*, i8*, i32, i32, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @jpeg_start_decompress(%struct.jpeg_decompress_struct*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %54 [
    i32 202, label %4
    i32 203, label %10
    i32 204, label %65
  ]

4:                                                ; preds = %1
  tail call void @jinit_master_decompress(%struct.jpeg_decompress_struct* %0) #4
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 15
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  store i32 207, i32* %2, align 4
  br label %67

9:                                                ; preds = %4
  store i32 203, i32* %2, align 4
  br label %10

10:                                               ; preds = %1, %9
  %11 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 81
  %12 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %11, align 8
  %13 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %12, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %50, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 2
  %18 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  %19 = bitcast %struct.jpeg_input_controller** %11 to i32 (%struct.jpeg_decompress_struct*)***
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 64
  br label %21

21:                                               ; preds = %49, %16
  %22 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %17, align 8
  %23 = icmp eq %struct.jpeg_progress_mgr* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = bitcast %struct.jpeg_progress_mgr* %22 to void (%struct.jpeg_common_struct*)**
  %26 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %25, align 8
  tail call void %26(%struct.jpeg_common_struct* %18) #4
  br label %27

27:                                               ; preds = %21, %24
  %28 = load i32 (%struct.jpeg_decompress_struct*)**, i32 (%struct.jpeg_decompress_struct*)*** %19, align 8
  %29 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %28, align 8
  %30 = tail call i32 %29(%struct.jpeg_decompress_struct* %0) #4
  switch i32 %30, label %31 [
    i32 0, label %67
    i32 2, label %50
  ]

31:                                               ; preds = %27
  %32 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %17, align 8
  %33 = icmp ne %struct.jpeg_progress_mgr* %32, null
  %34 = or i32 %30, 2
  %35 = icmp eq i32 %34, 3
  %36 = and i1 %35, %33
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %32, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = add nsw i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %17, align 8
  %42 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %41, i64 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = icmp slt i64 %40, %43
  br i1 %44, label %49, label %45

45:                                               ; preds = %37
  %46 = load i32, i32* %20, align 4
  %47 = zext i32 %46 to i64
  %48 = add nsw i64 %43, %47
  store i64 %48, i64* %42, align 8
  br label %49

49:                                               ; preds = %45, %37, %31
  br label %21

50:                                               ; preds = %27, %10
  %51 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 35
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 37
  store i32 %52, i32* %53, align 4
  br label %65

54:                                               ; preds = %1
  %55 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %56 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %55, align 8
  %57 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %56, i64 0, i32 5
  store i32 20, i32* %57, align 8
  %58 = load i32, i32* %2, align 4
  %59 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %55, align 8
  %60 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %59, i64 0, i32 6, i32 0, i64 0
  store i32 %58, i32* %60, align 4
  %61 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %55, align 8
  %62 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %61, i64 0, i32 0
  %63 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %62, align 8
  %64 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %63(%struct.jpeg_common_struct* %64) #4
  br label %65

65:                                               ; preds = %1, %54, %50
  %66 = tail call fastcc i32 @output_pass_setup(%struct.jpeg_decompress_struct* %0)
  br label %67

67:                                               ; preds = %27, %65, %8
  %68 = phi i32 [ 1, %8 ], [ %66, %65 ], [ %30, %27 ]
  ret i32 %68
}

declare void @jinit_master_decompress(%struct.jpeg_decompress_struct*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @output_pass_setup(%struct.jpeg_decompress_struct*) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 204
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 77
  %7 = load %struct.jpeg_decomp_master*, %struct.jpeg_decomp_master** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_decomp_master, %struct.jpeg_decomp_master* %7, i64 0, i32 0
  %9 = load void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)** %8, align 8
  tail call void %9(%struct.jpeg_decompress_struct* %0) #4
  %10 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 34
  store i32 0, i32* %10, align 8
  store i32 204, i32* %2, align 4
  br label %11

11:                                               ; preds = %1, %5
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 77
  %13 = load %struct.jpeg_decomp_master*, %struct.jpeg_decomp_master** %12, align 8
  %14 = getelementptr inbounds %struct.jpeg_decomp_master, %struct.jpeg_decomp_master* %13, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %62, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 34
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 28
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 2
  %21 = bitcast %struct.jpeg_progress_mgr** %20 to void (%struct.jpeg_common_struct*)***
  %22 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 78
  %24 = load i32, i32* %18, align 8
  br label %25

25:                                               ; preds = %49, %17
  %26 = phi i32 [ %24, %17 ], [ %50, %49 ]
  %27 = load i32, i32* %19, align 4
  %28 = icmp ult i32 %26, %27
  br i1 %28, label %29, label %51

29:                                               ; preds = %25
  %30 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %20, align 8
  %31 = icmp eq %struct.jpeg_progress_mgr* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %29
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %30, i64 0, i32 1
  store i64 %33, i64* %34, align 8
  %35 = load i32, i32* %19, align 4
  %36 = zext i32 %35 to i64
  %37 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %20, align 8
  %38 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %37, i64 0, i32 2
  store i64 %36, i64* %38, align 8
  %39 = load void (%struct.jpeg_common_struct*)**, void (%struct.jpeg_common_struct*)*** %21, align 8
  %40 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %39, align 8
  tail call void %40(%struct.jpeg_common_struct* %22) #4
  %41 = load i32, i32* %18, align 8
  br label %42

42:                                               ; preds = %29, %32
  %43 = phi i32 [ %26, %29 ], [ %41, %32 ]
  %44 = load %struct.jpeg_d_main_controller*, %struct.jpeg_d_main_controller** %23, align 8
  %45 = getelementptr inbounds %struct.jpeg_d_main_controller, %struct.jpeg_d_main_controller* %44, i64 0, i32 1
  %46 = load void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)** %45, align 8
  tail call void %46(%struct.jpeg_decompress_struct* %0, i8** null, i32* %18, i32 0) #4
  %47 = load i32, i32* %18, align 8
  %48 = icmp eq i32 %47, %43
  br i1 %48, label %67, label %49

49:                                               ; preds = %42, %51
  %50 = phi i32 [ %47, %42 ], [ 0, %51 ]
  br label %25

51:                                               ; preds = %25
  %52 = load %struct.jpeg_decomp_master*, %struct.jpeg_decomp_master** %12, align 8
  %53 = getelementptr inbounds %struct.jpeg_decomp_master, %struct.jpeg_decomp_master* %52, i64 0, i32 1
  %54 = load void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)** %53, align 8
  tail call void %54(%struct.jpeg_decompress_struct* %0) #4
  %55 = load %struct.jpeg_decomp_master*, %struct.jpeg_decomp_master** %12, align 8
  %56 = getelementptr inbounds %struct.jpeg_decomp_master, %struct.jpeg_decomp_master* %55, i64 0, i32 0
  %57 = load void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)** %56, align 8
  tail call void %57(%struct.jpeg_decompress_struct* %0) #4
  store i32 0, i32* %18, align 8
  %58 = load %struct.jpeg_decomp_master*, %struct.jpeg_decomp_master** %12, align 8
  %59 = getelementptr inbounds %struct.jpeg_decomp_master, %struct.jpeg_decomp_master* %58, i64 0, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %49

62:                                               ; preds = %51, %11
  %63 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 16
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  %66 = select i1 %65, i32 205, i32 206
  store i32 %66, i32* %2, align 4
  br label %67

67:                                               ; preds = %42, %62
  %68 = phi i32 [ 1, %62 ], [ 0, %42 ]
  ret i32 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_crop_scanline(%struct.jpeg_decompress_struct*, i32*, i32*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 205
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 34
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %7, %3
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %13 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %12, align 8
  %14 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %13, i64 0, i32 5
  store i32 20, i32* %14, align 8
  %15 = load i32, i32* %4, align 4
  %16 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %12, align 8
  %17 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %16, i64 0, i32 6, i32 0, i64 0
  store i32 %15, i32* %17, align 4
  %18 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %12, align 8
  %19 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %18, i64 0, i32 0
  %20 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %19, align 8
  %21 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %20(%struct.jpeg_common_struct* %21) #4
  br label %22

22:                                               ; preds = %7, %11
  %23 = icmp ne i32* %1, null
  %24 = icmp ne i32* %2, null
  %25 = and i1 %23, %24
  br i1 %25, label %34, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %28 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %28, i64 0, i32 5
  store i32 124, i32* %29, align 8
  %30 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %27, align 8
  %31 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %30, i64 0, i32 0
  %32 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %31, align 8
  %33 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %32(%struct.jpeg_common_struct* %33) #4
  br label %34

34:                                               ; preds = %22, %26
  %35 = load i32, i32* %2, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %34
  %38 = load i32, i32* %1, align 4
  %39 = add i32 %38, %35
  %40 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %41 = load i32, i32* %40, align 8
  %42 = icmp ugt i32 %39, %41
  br i1 %42, label %43, label %54

43:                                               ; preds = %37, %34
  %44 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %45 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %44, align 8
  %46 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %45, i64 0, i32 5
  store i32 70, i32* %46, align 8
  %47 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %44, align 8
  %48 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %47, i64 0, i32 0
  %49 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %48, align 8
  %50 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %49(%struct.jpeg_common_struct* %50) #4
  %51 = load i32, i32* %2, align 4
  %52 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %53 = load i32, i32* %52, align 8
  br label %54

54:                                               ; preds = %43, %37
  %55 = phi i32 [ %53, %43 ], [ %41, %37 ]
  %56 = phi i32 [ %51, %43 ], [ %35, %37 ]
  %57 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %58 = icmp eq i32 %56, %55
  br i1 %58, label %161, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 66
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %70

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 9
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %70

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 63
  %69 = load i32, i32* %68, align 8
  br label %76

70:                                               ; preds = %63, %59
  %71 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 63
  %72 = load i32, i32* %71, align 8
  %73 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 61
  %74 = load i32, i32* %73, align 8
  %75 = mul nsw i32 %74, %72
  br label %76

76:                                               ; preds = %70, %67
  %77 = phi i32 [ %69, %67 ], [ %75, %70 ]
  %78 = load i32, i32* %1, align 4
  %79 = urem i32 %78, %77
  %80 = sub i32 %78, %79
  store i32 %80, i32* %1, align 4
  %81 = load i32, i32* %2, align 4
  %82 = add i32 %79, %81
  store i32 %82, i32* %2, align 4
  store i32 %82, i32* %57, align 8
  %83 = load i32, i32* %1, align 4
  %84 = zext i32 %83 to i64
  %85 = sext i32 %77 to i64
  %86 = sdiv i64 %84, %85
  %87 = trunc i64 %86 to i32
  %88 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 77
  %89 = load %struct.jpeg_decomp_master*, %struct.jpeg_decomp_master** %88, align 8
  %90 = getelementptr inbounds %struct.jpeg_decomp_master, %struct.jpeg_decomp_master* %89, i64 0, i32 3
  store i32 %87, i32* %90, align 4
  %91 = load i32, i32* %1, align 4
  %92 = load i32, i32* %57, align 8
  %93 = add i32 %92, %91
  %94 = zext i32 %93 to i64
  %95 = tail call i64 @jdiv_round_up(i64 %94, i64 %85) #4
  %96 = trunc i64 %95 to i32
  %97 = add i32 %96, -1
  %98 = load %struct.jpeg_decomp_master*, %struct.jpeg_decomp_master** %88, align 8
  %99 = getelementptr inbounds %struct.jpeg_decomp_master, %struct.jpeg_decomp_master* %98, i64 0, i32 4
  store i32 %97, i32* %99, align 8
  %100 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 9
  %101 = load i32, i32* %100, align 8
  %102 = icmp sgt i32 %101, 0
  br i1 %102, label %103, label %161

103:                                              ; preds = %76
  %104 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 44
  %105 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %104, align 8
  %106 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 61
  br label %107

107:                                              ; preds = %103, %107
  %108 = phi i64 [ 0, %103 ], [ %149, %107 ]
  %109 = phi i32 [ %101, %103 ], [ %151, %107 ]
  %110 = phi %struct.jpeg_component_info* [ %105, %103 ], [ %150, %107 ]
  %111 = phi i32 [ 0, %103 ], [ %131, %107 ]
  %112 = load i32, i32* %60, align 8
  %113 = icmp eq i32 %112, 1
  %114 = icmp eq i32 %109, 1
  %115 = and i1 %114, %113
  %116 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %110, i64 0, i32 2
  %117 = load i32, i32* %116, align 8
  %118 = select i1 %115, i32 1, i32 %117
  %119 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %110, i64 0, i32 10
  %120 = load i32, i32* %119, align 8
  %121 = load i32, i32* %57, align 8
  %122 = mul i32 %117, %121
  %123 = zext i32 %122 to i64
  %124 = load i32, i32* %106, align 8
  %125 = sext i32 %124 to i64
  %126 = tail call i64 @jdiv_round_up(i64 %123, i64 %125) #4
  %127 = trunc i64 %126 to i32
  store i32 %127, i32* %119, align 8
  %128 = icmp ult i32 %127, 2
  %129 = icmp sgt i32 %120, 1
  %130 = and i1 %129, %128
  %131 = select i1 %130, i32 1, i32 %111
  %132 = load i32, i32* %1, align 4
  %133 = mul i32 %132, %118
  %134 = zext i32 %133 to i64
  %135 = sdiv i64 %134, %85
  %136 = trunc i64 %135 to i32
  %137 = load %struct.jpeg_decomp_master*, %struct.jpeg_decomp_master** %88, align 8
  %138 = getelementptr inbounds %struct.jpeg_decomp_master, %struct.jpeg_decomp_master* %137, i64 0, i32 5, i64 %108
  store i32 %136, i32* %138, align 4
  %139 = load i32, i32* %1, align 4
  %140 = load i32, i32* %57, align 8
  %141 = add i32 %140, %139
  %142 = mul i32 %141, %118
  %143 = zext i32 %142 to i64
  %144 = tail call i64 @jdiv_round_up(i64 %143, i64 %85) #4
  %145 = trunc i64 %144 to i32
  %146 = add i32 %145, -1
  %147 = load %struct.jpeg_decomp_master*, %struct.jpeg_decomp_master** %88, align 8
  %148 = getelementptr inbounds %struct.jpeg_decomp_master, %struct.jpeg_decomp_master* %147, i64 0, i32 6, i64 %108
  store i32 %146, i32* %148, align 4
  %149 = add nuw nsw i64 %108, 1
  %150 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %110, i64 1
  %151 = load i32, i32* %100, align 8
  %152 = sext i32 %151 to i64
  %153 = icmp slt i64 %149, %152
  br i1 %153, label %107, label %154

154:                                              ; preds = %107
  %155 = icmp eq i32 %131, 0
  br i1 %155, label %161, label %156

156:                                              ; preds = %154
  %157 = load %struct.jpeg_decomp_master*, %struct.jpeg_decomp_master** %88, align 8
  %158 = getelementptr inbounds %struct.jpeg_decomp_master, %struct.jpeg_decomp_master* %157, i64 0, i32 7
  store i32 1, i32* %158, align 4
  tail call void @jinit_upsampler(%struct.jpeg_decompress_struct* %0) #4
  %159 = load %struct.jpeg_decomp_master*, %struct.jpeg_decomp_master** %88, align 8
  %160 = getelementptr inbounds %struct.jpeg_decomp_master, %struct.jpeg_decomp_master* %159, i64 0, i32 7
  store i32 0, i32* %160, align 4
  br label %161

161:                                              ; preds = %76, %156, %154, %54
  ret void
}

declare i64 @jdiv_round_up(i64, i64) local_unnamed_addr #1

declare void @jinit_upsampler(%struct.jpeg_decompress_struct*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @jpeg_read_scanlines(%struct.jpeg_decompress_struct*, i8**, i32) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #4
  store i32 -1431655766, i32* %4, align 4
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 205
  br i1 %8, label %20, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %11 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %10, align 8
  %12 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %11, i64 0, i32 5
  store i32 20, i32* %12, align 8
  %13 = load i32, i32* %6, align 4
  %14 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %10, align 8
  %15 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %14, i64 0, i32 6, i32 0, i64 0
  store i32 %13, i32* %15, align 4
  %16 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %10, align 8
  %17 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %16, i64 0, i32 0
  %18 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %17, align 8
  %19 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %18(%struct.jpeg_common_struct* %19) #4
  br label %20

20:                                               ; preds = %3, %9
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 34
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 28
  %24 = load i32, i32* %23, align 4
  %25 = icmp ult i32 %22, %24
  br i1 %25, label %34, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %28 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %27, align 8
  %29 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %28, i64 0, i32 5
  store i32 123, i32* %29, align 8
  %30 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %27, align 8
  %31 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %30, i64 0, i32 1
  %32 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %31, align 8
  %33 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %32(%struct.jpeg_common_struct* %33, i32 -1) #4
  br label %57

34:                                               ; preds = %20
  %35 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 2
  %36 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %35, align 8
  %37 = icmp eq %struct.jpeg_progress_mgr* %36, null
  br i1 %37, label %49, label %38

38:                                               ; preds = %34
  %39 = zext i32 %22 to i64
  %40 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %36, i64 0, i32 1
  store i64 %39, i64* %40, align 8
  %41 = load i32, i32* %23, align 4
  %42 = zext i32 %41 to i64
  %43 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %35, align 8
  %44 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %43, i64 0, i32 2
  store i64 %42, i64* %44, align 8
  %45 = bitcast %struct.jpeg_progress_mgr** %35 to void (%struct.jpeg_common_struct*)***
  %46 = load void (%struct.jpeg_common_struct*)**, void (%struct.jpeg_common_struct*)*** %45, align 8
  %47 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %46, align 8
  %48 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %47(%struct.jpeg_common_struct* %48) #4
  br label %49

49:                                               ; preds = %34, %38
  store i32 0, i32* %4, align 4
  %50 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 78
  %51 = load %struct.jpeg_d_main_controller*, %struct.jpeg_d_main_controller** %50, align 8
  %52 = getelementptr inbounds %struct.jpeg_d_main_controller, %struct.jpeg_d_main_controller* %51, i64 0, i32 1
  %53 = load void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)** %52, align 8
  call void %53(%struct.jpeg_decompress_struct* %0, i8** %1, i32* nonnull %4, i32 %2) #4
  %54 = load i32, i32* %4, align 4
  %55 = load i32, i32* %21, align 8
  %56 = add i32 %55, %54
  store i32 %56, i32* %21, align 8
  br label %57

57:                                               ; preds = %49, %26
  %58 = phi i32 [ 0, %26 ], [ %54, %49 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #4
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @jpeg_skip_scanlines(%struct.jpeg_decompress_struct*, i32) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca [1 x i8], align 1
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca [1 x i8], align 1
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca [1 x i8], align 1
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca [1 x i8], align 1
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca [1 x i8], align 1
  %19 = alloca i8*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  %22 = alloca i32, align 4
  %23 = alloca [1 x i8], align 1
  %24 = alloca i8*, align 8
  %25 = alloca i32, align 4
  %26 = alloca [1 x i8], align 1
  %27 = alloca i8*, align 8
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 78
  %29 = bitcast %struct.jpeg_d_main_controller** %28 to %struct.my_main_controller**
  %30 = load %struct.my_main_controller*, %struct.my_main_controller** %29, align 8
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 79
  %32 = bitcast %struct.jpeg_d_coef_controller** %31 to %struct.my_coef_controller**
  %33 = load %struct.my_coef_controller*, %struct.my_coef_controller** %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 77
  %35 = bitcast %struct.jpeg_decomp_master** %34 to %struct.my_decomp_master**
  %36 = load %struct.my_decomp_master*, %struct.my_decomp_master** %35, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %38 = bitcast %struct.jpeg_upsampler** %37 to %struct.my_upsampler**
  %39 = load %struct.my_upsampler*, %struct.my_upsampler** %38, align 8
  %40 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 20
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %55, label %43

43:                                               ; preds = %2
  %44 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 22
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %49 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %50 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %49, i64 0, i32 5
  store i32 47, i32* %50, align 8
  %51 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %52 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %51, i64 0, i32 0
  %53 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %52, align 8
  %54 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %53(%struct.jpeg_common_struct* %54) #4
  br label %55

55:                                               ; preds = %43, %2, %47
  %56 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 5
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 205
  br i1 %58, label %70, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %61 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %60, align 8
  %62 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %61, i64 0, i32 5
  store i32 20, i32* %62, align 8
  %63 = load i32, i32* %56, align 4
  %64 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %60, align 8
  %65 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %64, i64 0, i32 6, i32 0, i64 0
  store i32 %63, i32* %65, align 4
  %66 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %60, align 8
  %67 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %66, i64 0, i32 0
  %68 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %67, align 8
  %69 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %68(%struct.jpeg_common_struct* %69) #4
  br label %70

70:                                               ; preds = %55, %59
  %71 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 34
  %72 = load i32, i32* %71, align 8
  %73 = add i32 %72, %1
  %74 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 28
  %75 = load i32, i32* %74, align 4
  %76 = icmp ult i32 %73, %75
  br i1 %76, label %85, label %77

77:                                               ; preds = %70
  %78 = sub i32 %75, %72
  store i32 %75, i32* %71, align 8
  %79 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 81
  %80 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %79, align 8
  %81 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %80, i64 0, i32 3
  %82 = load void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)** %81, align 8
  tail call void %82(%struct.jpeg_decompress_struct* %0) #4
  %83 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %79, align 8
  %84 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %83, i64 0, i32 5
  store i32 1, i32* %84, align 4
  br label %1370

85:                                               ; preds = %70
  %86 = icmp eq i32 %1, 0
  br i1 %86, label %1370, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 63
  %89 = load i32, i32* %88, align 8
  %90 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 62
  %91 = load i32, i32* %90, align 4
  %92 = mul nsw i32 %91, %89
  %93 = urem i32 %72, %92
  %94 = sub i32 %92, %93
  %95 = urem i32 %94, %92
  %96 = sub i32 %1, %95
  %97 = load %struct.jpeg_upsampler*, %struct.jpeg_upsampler** %37, align 8
  %98 = getelementptr inbounds %struct.jpeg_upsampler, %struct.jpeg_upsampler* %97, i64 0, i32 2
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %372, label %101

101:                                              ; preds = %87
  %102 = icmp ult i32 %95, %1
  br i1 %102, label %103, label %112

103:                                              ; preds = %101
  %104 = icmp ult i32 %95, 2
  br i1 %104, label %105, label %216

105:                                              ; preds = %103
  %106 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %30, i64 0, i32 2
  %107 = load i32, i32* %106, align 8
  %108 = icmp ne i32 %107, 0
  %109 = add i32 %92, 1
  %110 = icmp ult i32 %96, %109
  %111 = and i1 %110, %108
  br i1 %111, label %112, label %210

112:                                              ; preds = %101, %105
  %113 = load %struct.my_decomp_master*, %struct.my_decomp_master** %35, align 8
  %114 = getelementptr inbounds [1 x i8], [1 x i8]* %26, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %114) #4
  store i8 0, i8* %114, align 1
  %115 = bitcast i8** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #4
  store i8* %114, i8** %27, align 8
  %116 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 86
  %117 = load %struct.jpeg_color_deconverter*, %struct.jpeg_color_deconverter** %116, align 8
  %118 = icmp eq %struct.jpeg_color_deconverter* %117, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %112
  %120 = getelementptr inbounds %struct.jpeg_color_deconverter, %struct.jpeg_color_deconverter* %117, i64 0, i32 1
  %121 = load void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)*, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %120, align 8
  %122 = icmp eq void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %121, null
  br i1 %122, label %124, label %123

123:                                              ; preds = %119
  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* @noop_convert, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %120, align 8
  br label %124

124:                                              ; preds = %123, %119, %112
  %125 = phi i8** [ %27, %123 ], [ null, %119 ], [ null, %112 ]
  %126 = phi void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* [ %121, %123 ], [ null, %119 ], [ null, %112 ]
  %127 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 87
  %128 = load %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer** %127, align 8
  %129 = icmp eq %struct.jpeg_color_quantizer* %128, null
  br i1 %129, label %135, label %130

130:                                              ; preds = %124
  %131 = getelementptr inbounds %struct.jpeg_color_quantizer, %struct.jpeg_color_quantizer* %128, i64 0, i32 1
  %132 = load void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %131, align 8
  %133 = icmp eq void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %132, null
  br i1 %133, label %135, label %134

134:                                              ; preds = %130
  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* @noop_quantize, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %131, align 8
  br label %135

135:                                              ; preds = %134, %130, %124
  %136 = phi void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* [ %132, %134 ], [ null, %130 ], [ null, %124 ]
  %137 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %113, i64 0, i32 2
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %147, label %140

140:                                              ; preds = %135
  %141 = load i32, i32* %90, align 4
  %142 = icmp eq i32 %141, 2
  br i1 %142, label %143, label %147

143:                                              ; preds = %140
  %144 = bitcast %struct.jpeg_upsampler** %37 to %struct.my_merged_upsampler**
  %145 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %144, align 8
  %146 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %145, i64 0, i32 6
  br label %147

147:                                              ; preds = %143, %140, %135
  %148 = phi i8** [ %146, %143 ], [ %125, %140 ], [ %125, %135 ]
  %149 = bitcast i32* %25 to i8*
  %150 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %151 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  %152 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 2
  %153 = bitcast %struct.jpeg_progress_mgr** %152 to void (%struct.jpeg_common_struct*)***
  br label %154

154:                                              ; preds = %147, %196
  %155 = phi i32 [ %197, %196 ], [ 0, %147 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %149) #4
  store i32 -1431655766, i32* %25, align 4
  %156 = load i32, i32* %56, align 4
  %157 = icmp eq i32 %156, 205
  br i1 %157, label %167, label %158

158:                                              ; preds = %154
  %159 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %150, align 8
  %160 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %159, i64 0, i32 5
  store i32 20, i32* %160, align 8
  %161 = load i32, i32* %56, align 4
  %162 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %150, align 8
  %163 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %162, i64 0, i32 6, i32 0, i64 0
  store i32 %161, i32* %163, align 4
  %164 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %150, align 8
  %165 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %164, i64 0, i32 0
  %166 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %165, align 8
  call void %166(%struct.jpeg_common_struct* %151) #4
  br label %167

167:                                              ; preds = %158, %154
  %168 = load i32, i32* %71, align 8
  %169 = load i32, i32* %74, align 4
  %170 = icmp ult i32 %168, %169
  br i1 %170, label %177, label %171

171:                                              ; preds = %167
  %172 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %150, align 8
  %173 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %172, i64 0, i32 5
  store i32 123, i32* %173, align 8
  %174 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %150, align 8
  %175 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %174, i64 0, i32 1
  %176 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %175, align 8
  call void %176(%struct.jpeg_common_struct* %151, i32 -1) #4
  br label %196

177:                                              ; preds = %167
  %178 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %152, align 8
  %179 = icmp eq %struct.jpeg_progress_mgr* %178, null
  br i1 %179, label %189, label %180

180:                                              ; preds = %177
  %181 = zext i32 %168 to i64
  %182 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %178, i64 0, i32 1
  store i64 %181, i64* %182, align 8
  %183 = load i32, i32* %74, align 4
  %184 = zext i32 %183 to i64
  %185 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %152, align 8
  %186 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %185, i64 0, i32 2
  store i64 %184, i64* %186, align 8
  %187 = load void (%struct.jpeg_common_struct*)**, void (%struct.jpeg_common_struct*)*** %153, align 8
  %188 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %187, align 8
  call void %188(%struct.jpeg_common_struct* %151) #4
  br label %189

189:                                              ; preds = %180, %177
  store i32 0, i32* %25, align 4
  %190 = load %struct.jpeg_d_main_controller*, %struct.jpeg_d_main_controller** %28, align 8
  %191 = getelementptr inbounds %struct.jpeg_d_main_controller, %struct.jpeg_d_main_controller* %190, i64 0, i32 1
  %192 = load void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)** %191, align 8
  call void %192(%struct.jpeg_decompress_struct* %0, i8** %148, i32* nonnull %25, i32 1) #4
  %193 = load i32, i32* %25, align 4
  %194 = load i32, i32* %71, align 8
  %195 = add i32 %194, %193
  store i32 %195, i32* %71, align 8
  br label %196

196:                                              ; preds = %171, %189
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %149) #4
  %197 = add nuw i32 %155, 1
  %198 = icmp eq i32 %197, %1
  br i1 %198, label %199, label %154

199:                                              ; preds = %196
  %200 = icmp eq void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %126, null
  br i1 %200, label %204, label %201

201:                                              ; preds = %199
  %202 = load %struct.jpeg_color_deconverter*, %struct.jpeg_color_deconverter** %116, align 8
  %203 = getelementptr inbounds %struct.jpeg_color_deconverter, %struct.jpeg_color_deconverter* %202, i64 0, i32 1
  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %126, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %203, align 8
  br label %204

204:                                              ; preds = %201, %199
  %205 = icmp eq void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %136, null
  br i1 %205, label %209, label %206

206:                                              ; preds = %204
  %207 = load %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer** %127, align 8
  %208 = getelementptr inbounds %struct.jpeg_color_quantizer, %struct.jpeg_color_quantizer* %207, i64 0, i32 1
  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %136, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %208, align 8
  br label %209

209:                                              ; preds = %204, %206
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %114) #4
  br label %1370

210:                                              ; preds = %105
  %211 = icmp eq i32 %107, 0
  br i1 %211, label %216, label %212

212:                                              ; preds = %210
  %213 = add i32 %95, %72
  %214 = add i32 %213, %92
  store i32 %214, i32* %71, align 8
  %215 = sub i32 %96, %92
  br label %218

216:                                              ; preds = %103, %210
  %217 = add i32 %95, %72
  store i32 %217, i32* %71, align 8
  br label %218

218:                                              ; preds = %216, %212
  %219 = phi i32 [ %215, %212 ], [ %96, %216 ]
  %220 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %30, i64 0, i32 8
  %221 = load i32, i32* %220, align 4
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %227, label %223

223:                                              ; preds = %218
  %224 = icmp eq i32 %221, 1
  %225 = icmp ugt i32 %95, 2
  %226 = and i1 %225, %224
  br i1 %226, label %227, label %358

227:                                              ; preds = %223, %218
  %228 = load %struct.my_main_controller*, %struct.my_main_controller** %29, align 8
  %229 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 9
  %230 = load i32, i32* %229, align 8
  %231 = icmp sgt i32 %230, 0
  br i1 %231, label %232, label %358

232:                                              ; preds = %227
  %233 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 44
  %234 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %233, align 8
  %235 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %228, i64 0, i32 4, i64 0
  %236 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %228, i64 0, i32 4, i64 1
  %237 = add nsw i32 %89, 1
  %238 = add nsw i32 %89, 2
  br label %239

239:                                              ; preds = %355, %232
  %240 = phi i32 [ %230, %232 ], [ %351, %355 ]
  %241 = phi i32 [ %89, %232 ], [ %357, %355 ]
  %242 = phi i64 [ 0, %232 ], [ %352, %355 ]
  %243 = phi %struct.jpeg_component_info* [ %234, %232 ], [ %356, %355 ]
  %244 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %243, i64 0, i32 3
  %245 = load i32, i32* %244, align 4
  %246 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %243, i64 0, i32 9
  %247 = load i32, i32* %246, align 4
  %248 = mul nsw i32 %247, %245
  %249 = sdiv i32 %248, %241
  %250 = load i8***, i8**** %235, align 8
  %251 = getelementptr inbounds i8**, i8*** %250, i64 %242
  %252 = load i8**, i8*** %251, align 8
  %253 = load i8***, i8**** %236, align 8
  %254 = getelementptr inbounds i8**, i8*** %253, i64 %242
  %255 = load i8**, i8*** %254, align 8
  %256 = icmp sgt i32 %249, 0
  br i1 %256, label %257, label %350

257:                                              ; preds = %239
  %258 = mul nsw i32 %249, %237
  %259 = mul nsw i32 %249, %238
  %260 = sext i32 %259 to i64
  %261 = sext i32 %258 to i64
  %262 = sext i32 %249 to i64
  %263 = zext i32 %249 to i64
  %264 = and i64 %263, 1
  %265 = icmp eq i32 %249, 1
  br i1 %265, label %321, label %266

266:                                              ; preds = %257
  %267 = sub nsw i64 %263, %264
  br label %268

268:                                              ; preds = %268, %266
  %269 = phi i64 [ 0, %266 ], [ %318, %268 ]
  %270 = phi i64 [ %267, %266 ], [ %319, %268 ]
  %271 = add nsw i64 %269, %261
  %272 = getelementptr inbounds i8*, i8** %252, i64 %271
  %273 = bitcast i8** %272 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = sub nsw i64 %269, %262
  %276 = getelementptr inbounds i8*, i8** %252, i64 %275
  %277 = bitcast i8** %276 to i64*
  store i64 %274, i64* %277, align 8
  %278 = getelementptr inbounds i8*, i8** %255, i64 %271
  %279 = bitcast i8** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = getelementptr inbounds i8*, i8** %255, i64 %275
  %282 = bitcast i8** %281 to i64*
  store i64 %280, i64* %282, align 8
  %283 = getelementptr inbounds i8*, i8** %252, i64 %269
  %284 = bitcast i8** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = add nsw i64 %269, %260
  %287 = getelementptr inbounds i8*, i8** %252, i64 %286
  %288 = bitcast i8** %287 to i64*
  store i64 %285, i64* %288, align 8
  %289 = getelementptr inbounds i8*, i8** %255, i64 %269
  %290 = bitcast i8** %289 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = getelementptr inbounds i8*, i8** %255, i64 %286
  %293 = bitcast i8** %292 to i64*
  store i64 %291, i64* %293, align 8
  %294 = or i64 %269, 1
  %295 = add nsw i64 %294, %261
  %296 = getelementptr inbounds i8*, i8** %252, i64 %295
  %297 = bitcast i8** %296 to i64*
  %298 = load i64, i64* %297, align 8
  %299 = sub nsw i64 %294, %262
  %300 = getelementptr inbounds i8*, i8** %252, i64 %299
  %301 = bitcast i8** %300 to i64*
  store i64 %298, i64* %301, align 8
  %302 = getelementptr inbounds i8*, i8** %255, i64 %295
  %303 = bitcast i8** %302 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = getelementptr inbounds i8*, i8** %255, i64 %299
  %306 = bitcast i8** %305 to i64*
  store i64 %304, i64* %306, align 8
  %307 = getelementptr inbounds i8*, i8** %252, i64 %294
  %308 = bitcast i8** %307 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = add nsw i64 %294, %260
  %311 = getelementptr inbounds i8*, i8** %252, i64 %310
  %312 = bitcast i8** %311 to i64*
  store i64 %309, i64* %312, align 8
  %313 = getelementptr inbounds i8*, i8** %255, i64 %294
  %314 = bitcast i8** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = getelementptr inbounds i8*, i8** %255, i64 %310
  %317 = bitcast i8** %316 to i64*
  store i64 %315, i64* %317, align 8
  %318 = add nuw nsw i64 %269, 2
  %319 = add i64 %270, -2
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %268

321:                                              ; preds = %268, %257
  %322 = phi i64 [ 0, %257 ], [ %318, %268 ]
  %323 = icmp eq i64 %264, 0
  br i1 %323, label %348, label %324

324:                                              ; preds = %321
  %325 = add nsw i64 %322, %261
  %326 = getelementptr inbounds i8*, i8** %252, i64 %325
  %327 = bitcast i8** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = sub nsw i64 %322, %262
  %330 = getelementptr inbounds i8*, i8** %252, i64 %329
  %331 = bitcast i8** %330 to i64*
  store i64 %328, i64* %331, align 8
  %332 = getelementptr inbounds i8*, i8** %255, i64 %325
  %333 = bitcast i8** %332 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = getelementptr inbounds i8*, i8** %255, i64 %329
  %336 = bitcast i8** %335 to i64*
  store i64 %334, i64* %336, align 8
  %337 = getelementptr inbounds i8*, i8** %252, i64 %322
  %338 = bitcast i8** %337 to i64*
  %339 = load i64, i64* %338, align 8
  %340 = add nsw i64 %322, %260
  %341 = getelementptr inbounds i8*, i8** %252, i64 %340
  %342 = bitcast i8** %341 to i64*
  store i64 %339, i64* %342, align 8
  %343 = getelementptr inbounds i8*, i8** %255, i64 %322
  %344 = bitcast i8** %343 to i64*
  %345 = load i64, i64* %344, align 8
  %346 = getelementptr inbounds i8*, i8** %255, i64 %340
  %347 = bitcast i8** %346 to i64*
  store i64 %345, i64* %347, align 8
  br label %348

348:                                              ; preds = %321, %324
  %349 = load i32, i32* %229, align 8
  br label %350

350:                                              ; preds = %348, %239
  %351 = phi i32 [ %349, %348 ], [ %240, %239 ]
  %352 = add nuw nsw i64 %242, 1
  %353 = sext i32 %351 to i64
  %354 = icmp slt i64 %352, %353
  br i1 %354, label %355, label %358

355:                                              ; preds = %350
  %356 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %243, i64 1
  %357 = load i32, i32* %88, align 8
  br label %239

358:                                              ; preds = %350, %227, %223
  %359 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %30, i64 0, i32 2
  store i32 0, i32* %359, align 8
  %360 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %30, i64 0, i32 3
  store i32 0, i32* %360, align 4
  %361 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %30, i64 0, i32 6
  store i32 0, i32* %361, align 4
  %362 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %36, i64 0, i32 2
  %363 = load i32, i32* %362, align 4
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %365, label %601

365:                                              ; preds = %358
  %366 = load i32, i32* %90, align 4
  %367 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %39, i64 0, i32 3
  store i32 %366, i32* %367, align 8
  %368 = load i32, i32* %74, align 4
  %369 = load i32, i32* %71, align 8
  %370 = sub i32 %368, %369
  %371 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %39, i64 0, i32 4
  store i32 %370, i32* %371, align 4
  br label %601

372:                                              ; preds = %87
  %373 = icmp ugt i32 %95, %1
  br i1 %373, label %374, label %587

374:                                              ; preds = %372
  %375 = load %struct.my_decomp_master*, %struct.my_decomp_master** %35, align 8
  %376 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %375, i64 0, i32 2
  %377 = load i32, i32* %376, align 4
  %378 = icmp ne i32 %377, 0
  %379 = icmp eq i32 %91, 2
  %380 = and i1 %379, %378
  br i1 %380, label %381, label %477

381:                                              ; preds = %374
  %382 = getelementptr inbounds [1 x i8], [1 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %382) #4
  store i8 0, i8* %382, align 1
  %383 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %383) #4
  store i8* %382, i8** %11, align 8
  %384 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 86
  %385 = load %struct.jpeg_color_deconverter*, %struct.jpeg_color_deconverter** %384, align 8
  %386 = icmp eq %struct.jpeg_color_deconverter* %385, null
  br i1 %386, label %392, label %387

387:                                              ; preds = %381
  %388 = getelementptr inbounds %struct.jpeg_color_deconverter, %struct.jpeg_color_deconverter* %385, i64 0, i32 1
  %389 = load void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)*, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %388, align 8
  %390 = icmp eq void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %389, null
  br i1 %390, label %392, label %391

391:                                              ; preds = %387
  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* @noop_convert, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %388, align 8
  br label %392

392:                                              ; preds = %391, %387, %381
  %393 = phi i8** [ %11, %391 ], [ null, %387 ], [ null, %381 ]
  %394 = phi void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* [ %389, %391 ], [ null, %387 ], [ null, %381 ]
  %395 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 87
  %396 = load %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer** %395, align 8
  %397 = icmp eq %struct.jpeg_color_quantizer* %396, null
  br i1 %397, label %403, label %398

398:                                              ; preds = %392
  %399 = getelementptr inbounds %struct.jpeg_color_quantizer, %struct.jpeg_color_quantizer* %396, i64 0, i32 1
  %400 = load void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %399, align 8
  %401 = icmp eq void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %400, null
  br i1 %401, label %403, label %402

402:                                              ; preds = %398
  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* @noop_quantize, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %399, align 8
  br label %403

403:                                              ; preds = %402, %398, %392
  %404 = phi void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* [ %400, %402 ], [ null, %398 ], [ null, %392 ]
  %405 = load i32, i32* %376, align 4
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %414, label %407

407:                                              ; preds = %403
  %408 = load i32, i32* %90, align 4
  %409 = icmp eq i32 %408, 2
  br i1 %409, label %410, label %414

410:                                              ; preds = %407
  %411 = bitcast %struct.jpeg_upsampler** %37 to %struct.my_merged_upsampler**
  %412 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %411, align 8
  %413 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %412, i64 0, i32 6
  br label %414

414:                                              ; preds = %410, %407, %403
  %415 = phi i8** [ %413, %410 ], [ %393, %407 ], [ %393, %403 ]
  %416 = bitcast i32* %9 to i8*
  %417 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %418 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  %419 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 2
  %420 = bitcast %struct.jpeg_progress_mgr** %419 to void (%struct.jpeg_common_struct*)***
  br label %421

421:                                              ; preds = %414, %463
  %422 = phi i32 [ %464, %463 ], [ 0, %414 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %416) #4
  store i32 -1431655766, i32* %9, align 4
  %423 = load i32, i32* %56, align 4
  %424 = icmp eq i32 %423, 205
  br i1 %424, label %434, label %425

425:                                              ; preds = %421
  %426 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %417, align 8
  %427 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %426, i64 0, i32 5
  store i32 20, i32* %427, align 8
  %428 = load i32, i32* %56, align 4
  %429 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %417, align 8
  %430 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %429, i64 0, i32 6, i32 0, i64 0
  store i32 %428, i32* %430, align 4
  %431 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %417, align 8
  %432 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %431, i64 0, i32 0
  %433 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %432, align 8
  call void %433(%struct.jpeg_common_struct* %418) #4
  br label %434

434:                                              ; preds = %425, %421
  %435 = load i32, i32* %71, align 8
  %436 = load i32, i32* %74, align 4
  %437 = icmp ult i32 %435, %436
  br i1 %437, label %444, label %438

438:                                              ; preds = %434
  %439 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %417, align 8
  %440 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %439, i64 0, i32 5
  store i32 123, i32* %440, align 8
  %441 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %417, align 8
  %442 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %441, i64 0, i32 1
  %443 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %442, align 8
  call void %443(%struct.jpeg_common_struct* %418, i32 -1) #4
  br label %463

444:                                              ; preds = %434
  %445 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %419, align 8
  %446 = icmp eq %struct.jpeg_progress_mgr* %445, null
  br i1 %446, label %456, label %447

447:                                              ; preds = %444
  %448 = zext i32 %435 to i64
  %449 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %445, i64 0, i32 1
  store i64 %448, i64* %449, align 8
  %450 = load i32, i32* %74, align 4
  %451 = zext i32 %450 to i64
  %452 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %419, align 8
  %453 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %452, i64 0, i32 2
  store i64 %451, i64* %453, align 8
  %454 = load void (%struct.jpeg_common_struct*)**, void (%struct.jpeg_common_struct*)*** %420, align 8
  %455 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %454, align 8
  call void %455(%struct.jpeg_common_struct* %418) #4
  br label %456

456:                                              ; preds = %447, %444
  store i32 0, i32* %9, align 4
  %457 = load %struct.jpeg_d_main_controller*, %struct.jpeg_d_main_controller** %28, align 8
  %458 = getelementptr inbounds %struct.jpeg_d_main_controller, %struct.jpeg_d_main_controller* %457, i64 0, i32 1
  %459 = load void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)** %458, align 8
  call void %459(%struct.jpeg_decompress_struct* %0, i8** %415, i32* nonnull %9, i32 1) #4
  %460 = load i32, i32* %9, align 4
  %461 = load i32, i32* %71, align 8
  %462 = add i32 %461, %460
  store i32 %462, i32* %71, align 8
  br label %463

463:                                              ; preds = %438, %456
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %416) #4
  %464 = add nuw i32 %422, 1
  %465 = icmp eq i32 %464, %1
  br i1 %465, label %466, label %421

466:                                              ; preds = %463
  %467 = icmp eq void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %394, null
  br i1 %467, label %471, label %468

468:                                              ; preds = %466
  %469 = load %struct.jpeg_color_deconverter*, %struct.jpeg_color_deconverter** %384, align 8
  %470 = getelementptr inbounds %struct.jpeg_color_deconverter, %struct.jpeg_color_deconverter* %469, i64 0, i32 1
  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %394, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %470, align 8
  br label %471

471:                                              ; preds = %468, %466
  %472 = icmp eq void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %404, null
  br i1 %472, label %476, label %473

473:                                              ; preds = %471
  %474 = load %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer** %395, align 8
  %475 = getelementptr inbounds %struct.jpeg_color_quantizer, %struct.jpeg_color_quantizer* %474, i64 0, i32 1
  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %404, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %475, align 8
  br label %476

476:                                              ; preds = %471, %473
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %383) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %382) #4
  br label %1370

477:                                              ; preds = %374
  %478 = load %struct.my_main_controller*, %struct.my_main_controller** %29, align 8
  %479 = udiv i32 %1, %91
  %480 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %478, i64 0, i32 3
  %481 = load i32, i32* %480, align 4
  %482 = add i32 %481, %479
  store i32 %482, i32* %480, align 4
  %483 = load i32, i32* %90, align 4
  %484 = urem i32 %1, %483
  %485 = sub i32 %1, %484
  %486 = load i32, i32* %71, align 8
  %487 = add i32 %485, %486
  store i32 %487, i32* %71, align 8
  %488 = load %struct.my_decomp_master*, %struct.my_decomp_master** %35, align 8
  %489 = getelementptr inbounds [1 x i8], [1 x i8]* %23, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %489) #4
  store i8 0, i8* %489, align 1
  %490 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %490) #4
  store i8* %489, i8** %24, align 8
  %491 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 86
  %492 = load %struct.jpeg_color_deconverter*, %struct.jpeg_color_deconverter** %491, align 8
  %493 = icmp eq %struct.jpeg_color_deconverter* %492, null
  br i1 %493, label %499, label %494

494:                                              ; preds = %477
  %495 = getelementptr inbounds %struct.jpeg_color_deconverter, %struct.jpeg_color_deconverter* %492, i64 0, i32 1
  %496 = load void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)*, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %495, align 8
  %497 = icmp eq void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %496, null
  br i1 %497, label %499, label %498

498:                                              ; preds = %494
  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* @noop_convert, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %495, align 8
  br label %499

499:                                              ; preds = %498, %494, %477
  %500 = phi i8** [ %24, %498 ], [ null, %494 ], [ null, %477 ]
  %501 = phi void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* [ %496, %498 ], [ null, %494 ], [ null, %477 ]
  %502 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 87
  %503 = load %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer** %502, align 8
  %504 = icmp eq %struct.jpeg_color_quantizer* %503, null
  br i1 %504, label %510, label %505

505:                                              ; preds = %499
  %506 = getelementptr inbounds %struct.jpeg_color_quantizer, %struct.jpeg_color_quantizer* %503, i64 0, i32 1
  %507 = load void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %506, align 8
  %508 = icmp eq void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %507, null
  br i1 %508, label %510, label %509

509:                                              ; preds = %505
  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* @noop_quantize, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %506, align 8
  br label %510

510:                                              ; preds = %509, %505, %499
  %511 = phi void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* [ %507, %509 ], [ null, %505 ], [ null, %499 ]
  %512 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %488, i64 0, i32 2
  %513 = load i32, i32* %512, align 4
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %522, label %515

515:                                              ; preds = %510
  %516 = load i32, i32* %90, align 4
  %517 = icmp eq i32 %516, 2
  br i1 %517, label %518, label %522

518:                                              ; preds = %515
  %519 = bitcast %struct.jpeg_upsampler** %37 to %struct.my_merged_upsampler**
  %520 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %519, align 8
  %521 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %520, i64 0, i32 6
  br label %522

522:                                              ; preds = %518, %515, %510
  %523 = phi i8** [ %521, %518 ], [ %500, %515 ], [ %500, %510 ]
  %524 = icmp eq i32 %484, 0
  br i1 %524, label %576, label %525

525:                                              ; preds = %522
  %526 = bitcast i32* %22 to i8*
  %527 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %528 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  %529 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 2
  %530 = bitcast %struct.jpeg_progress_mgr** %529 to void (%struct.jpeg_common_struct*)***
  br label %531

531:                                              ; preds = %525, %573
  %532 = phi i32 [ %574, %573 ], [ 0, %525 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %526) #4
  store i32 -1431655766, i32* %22, align 4
  %533 = load i32, i32* %56, align 4
  %534 = icmp eq i32 %533, 205
  br i1 %534, label %544, label %535

535:                                              ; preds = %531
  %536 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %527, align 8
  %537 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %536, i64 0, i32 5
  store i32 20, i32* %537, align 8
  %538 = load i32, i32* %56, align 4
  %539 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %527, align 8
  %540 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %539, i64 0, i32 6, i32 0, i64 0
  store i32 %538, i32* %540, align 4
  %541 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %527, align 8
  %542 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %541, i64 0, i32 0
  %543 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %542, align 8
  call void %543(%struct.jpeg_common_struct* %528) #4
  br label %544

544:                                              ; preds = %535, %531
  %545 = load i32, i32* %71, align 8
  %546 = load i32, i32* %74, align 4
  %547 = icmp ult i32 %545, %546
  br i1 %547, label %554, label %548

548:                                              ; preds = %544
  %549 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %527, align 8
  %550 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %549, i64 0, i32 5
  store i32 123, i32* %550, align 8
  %551 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %527, align 8
  %552 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %551, i64 0, i32 1
  %553 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %552, align 8
  call void %553(%struct.jpeg_common_struct* %528, i32 -1) #4
  br label %573

554:                                              ; preds = %544
  %555 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %529, align 8
  %556 = icmp eq %struct.jpeg_progress_mgr* %555, null
  br i1 %556, label %566, label %557

557:                                              ; preds = %554
  %558 = zext i32 %545 to i64
  %559 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %555, i64 0, i32 1
  store i64 %558, i64* %559, align 8
  %560 = load i32, i32* %74, align 4
  %561 = zext i32 %560 to i64
  %562 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %529, align 8
  %563 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %562, i64 0, i32 2
  store i64 %561, i64* %563, align 8
  %564 = load void (%struct.jpeg_common_struct*)**, void (%struct.jpeg_common_struct*)*** %530, align 8
  %565 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %564, align 8
  call void %565(%struct.jpeg_common_struct* %528) #4
  br label %566

566:                                              ; preds = %557, %554
  store i32 0, i32* %22, align 4
  %567 = load %struct.jpeg_d_main_controller*, %struct.jpeg_d_main_controller** %28, align 8
  %568 = getelementptr inbounds %struct.jpeg_d_main_controller, %struct.jpeg_d_main_controller* %567, i64 0, i32 1
  %569 = load void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)** %568, align 8
  call void %569(%struct.jpeg_decompress_struct* %0, i8** %523, i32* nonnull %22, i32 1) #4
  %570 = load i32, i32* %22, align 4
  %571 = load i32, i32* %71, align 8
  %572 = add i32 %571, %570
  store i32 %572, i32* %71, align 8
  br label %573

573:                                              ; preds = %548, %566
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %526) #4
  %574 = add nuw i32 %532, 1
  %575 = icmp eq i32 %574, %484
  br i1 %575, label %576, label %531

576:                                              ; preds = %573, %522
  %577 = icmp eq void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %501, null
  br i1 %577, label %581, label %578

578:                                              ; preds = %576
  %579 = load %struct.jpeg_color_deconverter*, %struct.jpeg_color_deconverter** %491, align 8
  %580 = getelementptr inbounds %struct.jpeg_color_deconverter, %struct.jpeg_color_deconverter* %579, i64 0, i32 1
  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %501, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %580, align 8
  br label %581

581:                                              ; preds = %578, %576
  %582 = icmp eq void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %511, null
  br i1 %582, label %586, label %583

583:                                              ; preds = %581
  %584 = load %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer** %502, align 8
  %585 = getelementptr inbounds %struct.jpeg_color_quantizer, %struct.jpeg_color_quantizer* %584, i64 0, i32 1
  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %511, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %585, align 8
  br label %586

586:                                              ; preds = %581, %583
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %490) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %489) #4
  br label %1370

587:                                              ; preds = %372
  %588 = add i32 %95, %72
  store i32 %588, i32* %71, align 8
  %589 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %30, i64 0, i32 2
  store i32 0, i32* %589, align 8
  %590 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %30, i64 0, i32 3
  store i32 0, i32* %590, align 4
  %591 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %36, i64 0, i32 2
  %592 = load i32, i32* %591, align 4
  %593 = icmp eq i32 %592, 0
  br i1 %593, label %594, label %601

594:                                              ; preds = %587
  %595 = load i32, i32* %90, align 4
  %596 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %39, i64 0, i32 3
  store i32 %595, i32* %596, align 8
  %597 = load i32, i32* %74, align 4
  %598 = load i32, i32* %71, align 8
  %599 = sub i32 %597, %598
  %600 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %39, i64 0, i32 4
  store i32 %599, i32* %600, align 4
  br label %601

601:                                              ; preds = %358, %587, %594, %365
  %602 = phi i32 [ %219, %358 ], [ %219, %365 ], [ %96, %587 ], [ %96, %594 ]
  %603 = load %struct.jpeg_upsampler*, %struct.jpeg_upsampler** %37, align 8
  %604 = getelementptr inbounds %struct.jpeg_upsampler, %struct.jpeg_upsampler* %603, i64 0, i32 2
  %605 = load i32, i32* %604, align 8
  %606 = icmp eq i32 %605, 0
  %607 = add i32 %602, -1
  %608 = select i1 %606, i32 %602, i32 %607
  %609 = select i1 %606, i32 %602, i32 %607
  %610 = urem i32 %608, %92
  %611 = sub i32 %609, %610
  %612 = sub i32 %602, %611
  %613 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 81
  %614 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %613, align 8
  %615 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %614, i64 0, i32 4
  %616 = load i32, i32* %615, align 8
  %617 = icmp eq i32 %616, 0
  br i1 %617, label %618, label %629

618:                                              ; preds = %601
  %619 = icmp eq i32 %611, 0
  br i1 %619, label %1035, label %620

620:                                              ; preds = %618
  %621 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %33, i64 0, i32 3
  %622 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 68
  %623 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 83
  %624 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 36
  %625 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 38
  %626 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 64
  %627 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 66
  %628 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 67, i64 0
  br label %963

629:                                              ; preds = %601
  %630 = load i32, i32* %71, align 8
  %631 = add i32 %630, %611
  store i32 %631, i32* %71, align 8
  %632 = udiv i32 %611, %92
  %633 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 38
  %634 = load i32, i32* %633, align 8
  %635 = add i32 %634, %632
  store i32 %635, i32* %633, align 8
  br i1 %606, label %738, label %636

636:                                              ; preds = %629
  %637 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %30, i64 0, i32 8
  %638 = load i32, i32* %637, align 4
  %639 = add i32 %638, %632
  store i32 %639, i32* %637, align 4
  %640 = load %struct.my_decomp_master*, %struct.my_decomp_master** %35, align 8
  %641 = getelementptr inbounds [1 x i8], [1 x i8]* %26, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %641) #4
  store i8 0, i8* %641, align 1
  %642 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %642) #4
  store i8* %641, i8** %21, align 8
  %643 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 86
  %644 = load %struct.jpeg_color_deconverter*, %struct.jpeg_color_deconverter** %643, align 8
  %645 = icmp eq %struct.jpeg_color_deconverter* %644, null
  br i1 %645, label %651, label %646

646:                                              ; preds = %636
  %647 = getelementptr inbounds %struct.jpeg_color_deconverter, %struct.jpeg_color_deconverter* %644, i64 0, i32 1
  %648 = load void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)*, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %647, align 8
  %649 = icmp eq void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %648, null
  br i1 %649, label %651, label %650

650:                                              ; preds = %646
  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* @noop_convert, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %647, align 8
  br label %651

651:                                              ; preds = %650, %646, %636
  %652 = phi i8** [ %21, %650 ], [ null, %646 ], [ null, %636 ]
  %653 = phi void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* [ %648, %650 ], [ null, %646 ], [ null, %636 ]
  %654 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 87
  %655 = load %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer** %654, align 8
  %656 = icmp eq %struct.jpeg_color_quantizer* %655, null
  br i1 %656, label %662, label %657

657:                                              ; preds = %651
  %658 = getelementptr inbounds %struct.jpeg_color_quantizer, %struct.jpeg_color_quantizer* %655, i64 0, i32 1
  %659 = load void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %658, align 8
  %660 = icmp eq void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %659, null
  br i1 %660, label %662, label %661

661:                                              ; preds = %657
  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* @noop_quantize, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %658, align 8
  br label %662

662:                                              ; preds = %661, %657, %651
  %663 = phi void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* [ %659, %661 ], [ null, %657 ], [ null, %651 ]
  %664 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %640, i64 0, i32 2
  %665 = load i32, i32* %664, align 4
  %666 = icmp eq i32 %665, 0
  br i1 %666, label %674, label %667

667:                                              ; preds = %662
  %668 = load i32, i32* %90, align 4
  %669 = icmp eq i32 %668, 2
  br i1 %669, label %670, label %674

670:                                              ; preds = %667
  %671 = bitcast %struct.jpeg_upsampler** %37 to %struct.my_merged_upsampler**
  %672 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %671, align 8
  %673 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %672, i64 0, i32 6
  br label %674

674:                                              ; preds = %670, %667, %662
  %675 = phi i8** [ %673, %670 ], [ %652, %667 ], [ %652, %662 ]
  %676 = icmp eq i32 %612, 0
  br i1 %676, label %728, label %677

677:                                              ; preds = %674
  %678 = bitcast i32* %20 to i8*
  %679 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %680 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  %681 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 2
  %682 = bitcast %struct.jpeg_progress_mgr** %681 to void (%struct.jpeg_common_struct*)***
  br label %683

683:                                              ; preds = %677, %725
  %684 = phi i32 [ %726, %725 ], [ 0, %677 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %678) #4
  store i32 -1431655766, i32* %20, align 4
  %685 = load i32, i32* %56, align 4
  %686 = icmp eq i32 %685, 205
  br i1 %686, label %696, label %687

687:                                              ; preds = %683
  %688 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %679, align 8
  %689 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %688, i64 0, i32 5
  store i32 20, i32* %689, align 8
  %690 = load i32, i32* %56, align 4
  %691 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %679, align 8
  %692 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %691, i64 0, i32 6, i32 0, i64 0
  store i32 %690, i32* %692, align 4
  %693 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %679, align 8
  %694 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %693, i64 0, i32 0
  %695 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %694, align 8
  call void %695(%struct.jpeg_common_struct* %680) #4
  br label %696

696:                                              ; preds = %687, %683
  %697 = load i32, i32* %71, align 8
  %698 = load i32, i32* %74, align 4
  %699 = icmp ult i32 %697, %698
  br i1 %699, label %706, label %700

700:                                              ; preds = %696
  %701 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %679, align 8
  %702 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %701, i64 0, i32 5
  store i32 123, i32* %702, align 8
  %703 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %679, align 8
  %704 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %703, i64 0, i32 1
  %705 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %704, align 8
  call void %705(%struct.jpeg_common_struct* %680, i32 -1) #4
  br label %725

706:                                              ; preds = %696
  %707 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %681, align 8
  %708 = icmp eq %struct.jpeg_progress_mgr* %707, null
  br i1 %708, label %718, label %709

709:                                              ; preds = %706
  %710 = zext i32 %697 to i64
  %711 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %707, i64 0, i32 1
  store i64 %710, i64* %711, align 8
  %712 = load i32, i32* %74, align 4
  %713 = zext i32 %712 to i64
  %714 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %681, align 8
  %715 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %714, i64 0, i32 2
  store i64 %713, i64* %715, align 8
  %716 = load void (%struct.jpeg_common_struct*)**, void (%struct.jpeg_common_struct*)*** %682, align 8
  %717 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %716, align 8
  call void %717(%struct.jpeg_common_struct* %680) #4
  br label %718

718:                                              ; preds = %709, %706
  store i32 0, i32* %20, align 4
  %719 = load %struct.jpeg_d_main_controller*, %struct.jpeg_d_main_controller** %28, align 8
  %720 = getelementptr inbounds %struct.jpeg_d_main_controller, %struct.jpeg_d_main_controller* %719, i64 0, i32 1
  %721 = load void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)** %720, align 8
  call void %721(%struct.jpeg_decompress_struct* %0, i8** %675, i32* nonnull %20, i32 1) #4
  %722 = load i32, i32* %20, align 4
  %723 = load i32, i32* %71, align 8
  %724 = add i32 %723, %722
  store i32 %724, i32* %71, align 8
  br label %725

725:                                              ; preds = %700, %718
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %678) #4
  %726 = add nuw i32 %684, 1
  %727 = icmp eq i32 %726, %612
  br i1 %727, label %728, label %683

728:                                              ; preds = %725, %674
  %729 = icmp eq void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %653, null
  br i1 %729, label %733, label %730

730:                                              ; preds = %728
  %731 = load %struct.jpeg_color_deconverter*, %struct.jpeg_color_deconverter** %643, align 8
  %732 = getelementptr inbounds %struct.jpeg_color_deconverter, %struct.jpeg_color_deconverter* %731, i64 0, i32 1
  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %653, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %732, align 8
  br label %733

733:                                              ; preds = %730, %728
  %734 = icmp eq void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %663, null
  br i1 %734, label %952, label %735

735:                                              ; preds = %733
  %736 = load %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer** %654, align 8
  %737 = getelementptr inbounds %struct.jpeg_color_quantizer, %struct.jpeg_color_quantizer* %736, i64 0, i32 1
  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %663, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %737, align 8
  br label %952

738:                                              ; preds = %629
  %739 = load %struct.my_decomp_master*, %struct.my_decomp_master** %35, align 8
  %740 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %739, i64 0, i32 2
  %741 = load i32, i32* %740, align 4
  %742 = icmp ne i32 %741, 0
  %743 = load i32, i32* %90, align 4
  %744 = icmp eq i32 %743, 2
  %745 = and i1 %742, %744
  br i1 %745, label %746, label %843

746:                                              ; preds = %738
  %747 = getelementptr inbounds [1 x i8], [1 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %747) #4
  store i8 0, i8* %747, align 1
  %748 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %748) #4
  store i8* %747, i8** %8, align 8
  %749 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 86
  %750 = load %struct.jpeg_color_deconverter*, %struct.jpeg_color_deconverter** %749, align 8
  %751 = icmp eq %struct.jpeg_color_deconverter* %750, null
  br i1 %751, label %757, label %752

752:                                              ; preds = %746
  %753 = getelementptr inbounds %struct.jpeg_color_deconverter, %struct.jpeg_color_deconverter* %750, i64 0, i32 1
  %754 = load void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)*, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %753, align 8
  %755 = icmp eq void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %754, null
  br i1 %755, label %757, label %756

756:                                              ; preds = %752
  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* @noop_convert, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %753, align 8
  br label %757

757:                                              ; preds = %756, %752, %746
  %758 = phi i8** [ %8, %756 ], [ null, %752 ], [ null, %746 ]
  %759 = phi void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* [ %754, %756 ], [ null, %752 ], [ null, %746 ]
  %760 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 87
  %761 = load %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer** %760, align 8
  %762 = icmp eq %struct.jpeg_color_quantizer* %761, null
  br i1 %762, label %768, label %763

763:                                              ; preds = %757
  %764 = getelementptr inbounds %struct.jpeg_color_quantizer, %struct.jpeg_color_quantizer* %761, i64 0, i32 1
  %765 = load void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %764, align 8
  %766 = icmp eq void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %765, null
  br i1 %766, label %768, label %767

767:                                              ; preds = %763
  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* @noop_quantize, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %764, align 8
  br label %768

768:                                              ; preds = %767, %763, %757
  %769 = phi void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* [ %765, %767 ], [ null, %763 ], [ null, %757 ]
  %770 = load i32, i32* %740, align 4
  %771 = icmp eq i32 %770, 0
  br i1 %771, label %779, label %772

772:                                              ; preds = %768
  %773 = load i32, i32* %90, align 4
  %774 = icmp eq i32 %773, 2
  br i1 %774, label %775, label %779

775:                                              ; preds = %772
  %776 = bitcast %struct.jpeg_upsampler** %37 to %struct.my_merged_upsampler**
  %777 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %776, align 8
  %778 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %777, i64 0, i32 6
  br label %779

779:                                              ; preds = %775, %772, %768
  %780 = phi i8** [ %778, %775 ], [ %758, %772 ], [ %758, %768 ]
  %781 = icmp eq i32 %612, 0
  br i1 %781, label %833, label %782

782:                                              ; preds = %779
  %783 = bitcast i32* %6 to i8*
  %784 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %785 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  %786 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 2
  %787 = bitcast %struct.jpeg_progress_mgr** %786 to void (%struct.jpeg_common_struct*)***
  br label %788

788:                                              ; preds = %782, %830
  %789 = phi i32 [ %831, %830 ], [ 0, %782 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %783) #4
  store i32 -1431655766, i32* %6, align 4
  %790 = load i32, i32* %56, align 4
  %791 = icmp eq i32 %790, 205
  br i1 %791, label %801, label %792

792:                                              ; preds = %788
  %793 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %784, align 8
  %794 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %793, i64 0, i32 5
  store i32 20, i32* %794, align 8
  %795 = load i32, i32* %56, align 4
  %796 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %784, align 8
  %797 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %796, i64 0, i32 6, i32 0, i64 0
  store i32 %795, i32* %797, align 4
  %798 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %784, align 8
  %799 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %798, i64 0, i32 0
  %800 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %799, align 8
  call void %800(%struct.jpeg_common_struct* %785) #4
  br label %801

801:                                              ; preds = %792, %788
  %802 = load i32, i32* %71, align 8
  %803 = load i32, i32* %74, align 4
  %804 = icmp ult i32 %802, %803
  br i1 %804, label %811, label %805

805:                                              ; preds = %801
  %806 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %784, align 8
  %807 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %806, i64 0, i32 5
  store i32 123, i32* %807, align 8
  %808 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %784, align 8
  %809 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %808, i64 0, i32 1
  %810 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %809, align 8
  call void %810(%struct.jpeg_common_struct* %785, i32 -1) #4
  br label %830

811:                                              ; preds = %801
  %812 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %786, align 8
  %813 = icmp eq %struct.jpeg_progress_mgr* %812, null
  br i1 %813, label %823, label %814

814:                                              ; preds = %811
  %815 = zext i32 %802 to i64
  %816 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %812, i64 0, i32 1
  store i64 %815, i64* %816, align 8
  %817 = load i32, i32* %74, align 4
  %818 = zext i32 %817 to i64
  %819 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %786, align 8
  %820 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %819, i64 0, i32 2
  store i64 %818, i64* %820, align 8
  %821 = load void (%struct.jpeg_common_struct*)**, void (%struct.jpeg_common_struct*)*** %787, align 8
  %822 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %821, align 8
  call void %822(%struct.jpeg_common_struct* %785) #4
  br label %823

823:                                              ; preds = %814, %811
  store i32 0, i32* %6, align 4
  %824 = load %struct.jpeg_d_main_controller*, %struct.jpeg_d_main_controller** %28, align 8
  %825 = getelementptr inbounds %struct.jpeg_d_main_controller, %struct.jpeg_d_main_controller* %824, i64 0, i32 1
  %826 = load void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)** %825, align 8
  call void %826(%struct.jpeg_decompress_struct* %0, i8** %780, i32* nonnull %6, i32 1) #4
  %827 = load i32, i32* %6, align 4
  %828 = load i32, i32* %71, align 8
  %829 = add i32 %828, %827
  store i32 %829, i32* %71, align 8
  br label %830

830:                                              ; preds = %805, %823
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %783) #4
  %831 = add nuw i32 %789, 1
  %832 = icmp eq i32 %831, %612
  br i1 %832, label %833, label %788

833:                                              ; preds = %830, %779
  %834 = icmp eq void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %759, null
  br i1 %834, label %838, label %835

835:                                              ; preds = %833
  %836 = load %struct.jpeg_color_deconverter*, %struct.jpeg_color_deconverter** %749, align 8
  %837 = getelementptr inbounds %struct.jpeg_color_deconverter, %struct.jpeg_color_deconverter* %836, i64 0, i32 1
  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %759, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %837, align 8
  br label %838

838:                                              ; preds = %835, %833
  %839 = icmp eq void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %769, null
  br i1 %839, label %952, label %840

840:                                              ; preds = %838
  %841 = load %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer** %760, align 8
  %842 = getelementptr inbounds %struct.jpeg_color_quantizer, %struct.jpeg_color_quantizer* %841, i64 0, i32 1
  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %769, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %842, align 8
  br label %952

843:                                              ; preds = %738
  %844 = load %struct.my_main_controller*, %struct.my_main_controller** %29, align 8
  %845 = udiv i32 %612, %743
  %846 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %844, i64 0, i32 3
  %847 = load i32, i32* %846, align 4
  %848 = add i32 %847, %845
  store i32 %848, i32* %846, align 4
  %849 = load i32, i32* %90, align 4
  %850 = urem i32 %612, %849
  %851 = sub i32 %612, %850
  %852 = load i32, i32* %71, align 8
  %853 = add i32 %851, %852
  store i32 %853, i32* %71, align 8
  %854 = load %struct.my_decomp_master*, %struct.my_decomp_master** %35, align 8
  %855 = getelementptr inbounds [1 x i8], [1 x i8]* %18, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %855) #4
  store i8 0, i8* %855, align 1
  %856 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %856) #4
  store i8* %855, i8** %19, align 8
  %857 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 86
  %858 = load %struct.jpeg_color_deconverter*, %struct.jpeg_color_deconverter** %857, align 8
  %859 = icmp eq %struct.jpeg_color_deconverter* %858, null
  br i1 %859, label %865, label %860

860:                                              ; preds = %843
  %861 = getelementptr inbounds %struct.jpeg_color_deconverter, %struct.jpeg_color_deconverter* %858, i64 0, i32 1
  %862 = load void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)*, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %861, align 8
  %863 = icmp eq void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %862, null
  br i1 %863, label %865, label %864

864:                                              ; preds = %860
  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* @noop_convert, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %861, align 8
  br label %865

865:                                              ; preds = %864, %860, %843
  %866 = phi i8** [ %19, %864 ], [ null, %860 ], [ null, %843 ]
  %867 = phi void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* [ %862, %864 ], [ null, %860 ], [ null, %843 ]
  %868 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 87
  %869 = load %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer** %868, align 8
  %870 = icmp eq %struct.jpeg_color_quantizer* %869, null
  br i1 %870, label %876, label %871

871:                                              ; preds = %865
  %872 = getelementptr inbounds %struct.jpeg_color_quantizer, %struct.jpeg_color_quantizer* %869, i64 0, i32 1
  %873 = load void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %872, align 8
  %874 = icmp eq void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %873, null
  br i1 %874, label %876, label %875

875:                                              ; preds = %871
  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* @noop_quantize, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %872, align 8
  br label %876

876:                                              ; preds = %875, %871, %865
  %877 = phi void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* [ %873, %875 ], [ null, %871 ], [ null, %865 ]
  %878 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %854, i64 0, i32 2
  %879 = load i32, i32* %878, align 4
  %880 = icmp eq i32 %879, 0
  br i1 %880, label %888, label %881

881:                                              ; preds = %876
  %882 = load i32, i32* %90, align 4
  %883 = icmp eq i32 %882, 2
  br i1 %883, label %884, label %888

884:                                              ; preds = %881
  %885 = bitcast %struct.jpeg_upsampler** %37 to %struct.my_merged_upsampler**
  %886 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %885, align 8
  %887 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %886, i64 0, i32 6
  br label %888

888:                                              ; preds = %884, %881, %876
  %889 = phi i8** [ %887, %884 ], [ %866, %881 ], [ %866, %876 ]
  %890 = icmp eq i32 %850, 0
  br i1 %890, label %942, label %891

891:                                              ; preds = %888
  %892 = bitcast i32* %17 to i8*
  %893 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %894 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  %895 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 2
  %896 = bitcast %struct.jpeg_progress_mgr** %895 to void (%struct.jpeg_common_struct*)***
  br label %897

897:                                              ; preds = %891, %939
  %898 = phi i32 [ %940, %939 ], [ 0, %891 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %892) #4
  store i32 -1431655766, i32* %17, align 4
  %899 = load i32, i32* %56, align 4
  %900 = icmp eq i32 %899, 205
  br i1 %900, label %910, label %901

901:                                              ; preds = %897
  %902 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %893, align 8
  %903 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %902, i64 0, i32 5
  store i32 20, i32* %903, align 8
  %904 = load i32, i32* %56, align 4
  %905 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %893, align 8
  %906 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %905, i64 0, i32 6, i32 0, i64 0
  store i32 %904, i32* %906, align 4
  %907 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %893, align 8
  %908 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %907, i64 0, i32 0
  %909 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %908, align 8
  call void %909(%struct.jpeg_common_struct* %894) #4
  br label %910

910:                                              ; preds = %901, %897
  %911 = load i32, i32* %71, align 8
  %912 = load i32, i32* %74, align 4
  %913 = icmp ult i32 %911, %912
  br i1 %913, label %920, label %914

914:                                              ; preds = %910
  %915 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %893, align 8
  %916 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %915, i64 0, i32 5
  store i32 123, i32* %916, align 8
  %917 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %893, align 8
  %918 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %917, i64 0, i32 1
  %919 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %918, align 8
  call void %919(%struct.jpeg_common_struct* %894, i32 -1) #4
  br label %939

920:                                              ; preds = %910
  %921 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %895, align 8
  %922 = icmp eq %struct.jpeg_progress_mgr* %921, null
  br i1 %922, label %932, label %923

923:                                              ; preds = %920
  %924 = zext i32 %911 to i64
  %925 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %921, i64 0, i32 1
  store i64 %924, i64* %925, align 8
  %926 = load i32, i32* %74, align 4
  %927 = zext i32 %926 to i64
  %928 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %895, align 8
  %929 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %928, i64 0, i32 2
  store i64 %927, i64* %929, align 8
  %930 = load void (%struct.jpeg_common_struct*)**, void (%struct.jpeg_common_struct*)*** %896, align 8
  %931 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %930, align 8
  call void %931(%struct.jpeg_common_struct* %894) #4
  br label %932

932:                                              ; preds = %923, %920
  store i32 0, i32* %17, align 4
  %933 = load %struct.jpeg_d_main_controller*, %struct.jpeg_d_main_controller** %28, align 8
  %934 = getelementptr inbounds %struct.jpeg_d_main_controller, %struct.jpeg_d_main_controller* %933, i64 0, i32 1
  %935 = load void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)** %934, align 8
  call void %935(%struct.jpeg_decompress_struct* %0, i8** %889, i32* nonnull %17, i32 1) #4
  %936 = load i32, i32* %17, align 4
  %937 = load i32, i32* %71, align 8
  %938 = add i32 %937, %936
  store i32 %938, i32* %71, align 8
  br label %939

939:                                              ; preds = %914, %932
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %892) #4
  %940 = add nuw i32 %898, 1
  %941 = icmp eq i32 %940, %850
  br i1 %941, label %942, label %897

942:                                              ; preds = %939, %888
  %943 = icmp eq void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %867, null
  br i1 %943, label %947, label %944

944:                                              ; preds = %942
  %945 = load %struct.jpeg_color_deconverter*, %struct.jpeg_color_deconverter** %857, align 8
  %946 = getelementptr inbounds %struct.jpeg_color_deconverter, %struct.jpeg_color_deconverter* %945, i64 0, i32 1
  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %867, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %946, align 8
  br label %947

947:                                              ; preds = %944, %942
  %948 = icmp eq void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %877, null
  br i1 %948, label %952, label %949

949:                                              ; preds = %947
  %950 = load %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer** %868, align 8
  %951 = getelementptr inbounds %struct.jpeg_color_quantizer, %struct.jpeg_color_quantizer* %950, i64 0, i32 1
  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %877, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %951, align 8
  br label %952

952:                                              ; preds = %949, %947, %840, %838, %735, %733
  %953 = phi i8* [ %642, %733 ], [ %642, %735 ], [ %748, %838 ], [ %748, %840 ], [ %856, %947 ], [ %856, %949 ]
  %954 = phi i8* [ %641, %733 ], [ %641, %735 ], [ %747, %838 ], [ %747, %840 ], [ %855, %947 ], [ %855, %949 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %953) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %954) #4
  %955 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %36, i64 0, i32 2
  %956 = load i32, i32* %955, align 4
  %957 = icmp eq i32 %956, 0
  br i1 %957, label %958, label %1370

958:                                              ; preds = %952
  %959 = load i32, i32* %74, align 4
  %960 = load i32, i32* %71, align 8
  %961 = sub i32 %959, %960
  %962 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %39, i64 0, i32 4
  store i32 %961, i32* %962, align 4
  br label %1370

963:                                              ; preds = %620, %1030
  %964 = phi i32 [ 0, %620 ], [ %1031, %1030 ]
  %965 = load i32, i32* %621, align 8
  %966 = icmp sgt i32 %965, 0
  br i1 %966, label %967, label %1000

967:                                              ; preds = %963
  %968 = load i32, i32* %622, align 8
  br label %969

969:                                              ; preds = %967, %995
  %970 = phi i32 [ %996, %995 ], [ %965, %967 ]
  %971 = phi i32 [ %997, %995 ], [ %968, %967 ]
  %972 = phi i32 [ %998, %995 ], [ 0, %967 ]
  %973 = icmp eq i32 %971, 0
  br i1 %973, label %995, label %974

974:                                              ; preds = %969, %985
  %975 = phi i32 [ %990, %985 ], [ 0, %969 ]
  %976 = load %struct.jpeg_entropy_decoder*, %struct.jpeg_entropy_decoder** %623, align 8
  %977 = getelementptr inbounds %struct.jpeg_entropy_decoder, %struct.jpeg_entropy_decoder* %976, i64 0, i32 2
  %978 = load i32, i32* %977, align 8
  %979 = icmp eq i32 %978, 0
  br i1 %979, label %980, label %985

980:                                              ; preds = %974
  %981 = load i32, i32* %624, align 8
  %982 = load %struct.jpeg_decomp_master*, %struct.jpeg_decomp_master** %34, align 8
  %983 = getelementptr inbounds %struct.jpeg_decomp_master, %struct.jpeg_decomp_master* %982, i64 0, i32 8
  store i32 %981, i32* %983, align 8
  %984 = load %struct.jpeg_entropy_decoder*, %struct.jpeg_entropy_decoder** %623, align 8
  br label %985

985:                                              ; preds = %974, %980
  %986 = phi %struct.jpeg_entropy_decoder* [ %976, %974 ], [ %984, %980 ]
  %987 = getelementptr inbounds %struct.jpeg_entropy_decoder, %struct.jpeg_entropy_decoder* %986, i64 0, i32 1
  %988 = load i32 (%struct.jpeg_decompress_struct*, [64 x i16]**)*, i32 (%struct.jpeg_decompress_struct*, [64 x i16]**)** %987, align 8
  %989 = tail call i32 %988(%struct.jpeg_decompress_struct* %0, [64 x i16]** null) #4
  %990 = add nuw i32 %975, 1
  %991 = load i32, i32* %622, align 8
  %992 = icmp ult i32 %990, %991
  br i1 %992, label %974, label %993

993:                                              ; preds = %985
  %994 = load i32, i32* %621, align 8
  br label %995

995:                                              ; preds = %993, %969
  %996 = phi i32 [ %994, %993 ], [ %970, %969 ]
  %997 = phi i32 [ %991, %993 ], [ 0, %969 ]
  %998 = add nuw nsw i32 %972, 1
  %999 = icmp slt i32 %998, %996
  br i1 %999, label %969, label %1000

1000:                                             ; preds = %995, %963
  %1001 = load i32, i32* %624, align 8
  %1002 = add i32 %1001, 1
  store i32 %1002, i32* %624, align 8
  %1003 = load i32, i32* %625, align 8
  %1004 = add i32 %1003, 1
  store i32 %1004, i32* %625, align 8
  %1005 = load i32, i32* %626, align 4
  %1006 = icmp ult i32 %1002, %1005
  br i1 %1006, label %1007, label %1026

1007:                                             ; preds = %1000
  %1008 = load %struct.my_coef_controller*, %struct.my_coef_controller** %32, align 8
  %1009 = load i32, i32* %627, align 8
  %1010 = icmp sgt i32 %1009, 1
  br i1 %1010, label %1021, label %1011

1011:                                             ; preds = %1007
  %1012 = add i32 %1005, -1
  %1013 = icmp ult i32 %1002, %1012
  %1014 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %628, align 8
  br i1 %1013, label %1015, label %1018

1015:                                             ; preds = %1011
  %1016 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1014, i64 0, i32 3
  %1017 = load i32, i32* %1016, align 4
  br label %1021

1018:                                             ; preds = %1011
  %1019 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1014, i64 0, i32 18
  %1020 = load i32, i32* %1019, align 8
  br label %1021

1021:                                             ; preds = %1007, %1015, %1018
  %1022 = phi i32 [ %1017, %1015 ], [ %1020, %1018 ], [ 1, %1007 ]
  %1023 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1008, i64 0, i32 3
  store i32 %1022, i32* %1023, align 8
  %1024 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1008, i64 0, i32 1
  store i32 0, i32* %1024, align 8
  %1025 = getelementptr inbounds %struct.my_coef_controller, %struct.my_coef_controller* %1008, i64 0, i32 2
  store i32 0, i32* %1025, align 4
  br label %1030

1026:                                             ; preds = %1000
  %1027 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %613, align 8
  %1028 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %1027, i64 0, i32 3
  %1029 = load void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)** %1028, align 8
  tail call void %1029(%struct.jpeg_decompress_struct* %0) #4
  br label %1030

1030:                                             ; preds = %1021, %1026
  %1031 = add i32 %964, %92
  %1032 = icmp ult i32 %1031, %611
  br i1 %1032, label %963, label %1033

1033:                                             ; preds = %1030
  %1034 = load %struct.jpeg_upsampler*, %struct.jpeg_upsampler** %37, align 8
  br label %1035

1035:                                             ; preds = %1033, %618
  %1036 = phi %struct.jpeg_upsampler* [ %1034, %1033 ], [ %603, %618 ]
  %1037 = load i32, i32* %71, align 8
  %1038 = add i32 %1037, %611
  store i32 %1038, i32* %71, align 8
  %1039 = getelementptr inbounds %struct.jpeg_upsampler, %struct.jpeg_upsampler* %1036, i64 0, i32 2
  %1040 = load i32, i32* %1039, align 8
  %1041 = icmp eq i32 %1040, 0
  br i1 %1041, label %1145, label %1042

1042:                                             ; preds = %1035
  %1043 = udiv i32 %611, %92
  %1044 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %30, i64 0, i32 8
  %1045 = load i32, i32* %1044, align 4
  %1046 = add i32 %1045, %1043
  store i32 %1046, i32* %1044, align 4
  %1047 = load %struct.my_decomp_master*, %struct.my_decomp_master** %35, align 8
  %1048 = getelementptr inbounds [1 x i8], [1 x i8]* %26, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1048) #4
  store i8 0, i8* %1048, align 1
  %1049 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1049) #4
  store i8* %1048, i8** %16, align 8
  %1050 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 86
  %1051 = load %struct.jpeg_color_deconverter*, %struct.jpeg_color_deconverter** %1050, align 8
  %1052 = icmp eq %struct.jpeg_color_deconverter* %1051, null
  br i1 %1052, label %1058, label %1053

1053:                                             ; preds = %1042
  %1054 = getelementptr inbounds %struct.jpeg_color_deconverter, %struct.jpeg_color_deconverter* %1051, i64 0, i32 1
  %1055 = load void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)*, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %1054, align 8
  %1056 = icmp eq void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %1055, null
  br i1 %1056, label %1058, label %1057

1057:                                             ; preds = %1053
  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* @noop_convert, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %1054, align 8
  br label %1058

1058:                                             ; preds = %1057, %1053, %1042
  %1059 = phi i8** [ %16, %1057 ], [ null, %1053 ], [ null, %1042 ]
  %1060 = phi void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* [ %1055, %1057 ], [ null, %1053 ], [ null, %1042 ]
  %1061 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 87
  %1062 = load %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer** %1061, align 8
  %1063 = icmp eq %struct.jpeg_color_quantizer* %1062, null
  br i1 %1063, label %1069, label %1064

1064:                                             ; preds = %1058
  %1065 = getelementptr inbounds %struct.jpeg_color_quantizer, %struct.jpeg_color_quantizer* %1062, i64 0, i32 1
  %1066 = load void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %1065, align 8
  %1067 = icmp eq void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %1066, null
  br i1 %1067, label %1069, label %1068

1068:                                             ; preds = %1064
  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* @noop_quantize, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %1065, align 8
  br label %1069

1069:                                             ; preds = %1068, %1064, %1058
  %1070 = phi void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* [ %1066, %1068 ], [ null, %1064 ], [ null, %1058 ]
  %1071 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %1047, i64 0, i32 2
  %1072 = load i32, i32* %1071, align 4
  %1073 = icmp eq i32 %1072, 0
  br i1 %1073, label %1081, label %1074

1074:                                             ; preds = %1069
  %1075 = load i32, i32* %90, align 4
  %1076 = icmp eq i32 %1075, 2
  br i1 %1076, label %1077, label %1081

1077:                                             ; preds = %1074
  %1078 = bitcast %struct.jpeg_upsampler** %37 to %struct.my_merged_upsampler**
  %1079 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %1078, align 8
  %1080 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %1079, i64 0, i32 6
  br label %1081

1081:                                             ; preds = %1077, %1074, %1069
  %1082 = phi i8** [ %1080, %1077 ], [ %1059, %1074 ], [ %1059, %1069 ]
  %1083 = icmp eq i32 %612, 0
  br i1 %1083, label %1135, label %1084

1084:                                             ; preds = %1081
  %1085 = bitcast i32* %15 to i8*
  %1086 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %1087 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  %1088 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 2
  %1089 = bitcast %struct.jpeg_progress_mgr** %1088 to void (%struct.jpeg_common_struct*)***
  br label %1090

1090:                                             ; preds = %1084, %1132
  %1091 = phi i32 [ %1133, %1132 ], [ 0, %1084 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1085) #4
  store i32 -1431655766, i32* %15, align 4
  %1092 = load i32, i32* %56, align 4
  %1093 = icmp eq i32 %1092, 205
  br i1 %1093, label %1103, label %1094

1094:                                             ; preds = %1090
  %1095 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %1086, align 8
  %1096 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1095, i64 0, i32 5
  store i32 20, i32* %1096, align 8
  %1097 = load i32, i32* %56, align 4
  %1098 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %1086, align 8
  %1099 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1098, i64 0, i32 6, i32 0, i64 0
  store i32 %1097, i32* %1099, align 4
  %1100 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %1086, align 8
  %1101 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1100, i64 0, i32 0
  %1102 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %1101, align 8
  call void %1102(%struct.jpeg_common_struct* %1087) #4
  br label %1103

1103:                                             ; preds = %1094, %1090
  %1104 = load i32, i32* %71, align 8
  %1105 = load i32, i32* %74, align 4
  %1106 = icmp ult i32 %1104, %1105
  br i1 %1106, label %1113, label %1107

1107:                                             ; preds = %1103
  %1108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %1086, align 8
  %1109 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1108, i64 0, i32 5
  store i32 123, i32* %1109, align 8
  %1110 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %1086, align 8
  %1111 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1110, i64 0, i32 1
  %1112 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %1111, align 8
  call void %1112(%struct.jpeg_common_struct* %1087, i32 -1) #4
  br label %1132

1113:                                             ; preds = %1103
  %1114 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %1088, align 8
  %1115 = icmp eq %struct.jpeg_progress_mgr* %1114, null
  br i1 %1115, label %1125, label %1116

1116:                                             ; preds = %1113
  %1117 = zext i32 %1104 to i64
  %1118 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %1114, i64 0, i32 1
  store i64 %1117, i64* %1118, align 8
  %1119 = load i32, i32* %74, align 4
  %1120 = zext i32 %1119 to i64
  %1121 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %1088, align 8
  %1122 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %1121, i64 0, i32 2
  store i64 %1120, i64* %1122, align 8
  %1123 = load void (%struct.jpeg_common_struct*)**, void (%struct.jpeg_common_struct*)*** %1089, align 8
  %1124 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %1123, align 8
  call void %1124(%struct.jpeg_common_struct* %1087) #4
  br label %1125

1125:                                             ; preds = %1116, %1113
  store i32 0, i32* %15, align 4
  %1126 = load %struct.jpeg_d_main_controller*, %struct.jpeg_d_main_controller** %28, align 8
  %1127 = getelementptr inbounds %struct.jpeg_d_main_controller, %struct.jpeg_d_main_controller* %1126, i64 0, i32 1
  %1128 = load void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)** %1127, align 8
  call void %1128(%struct.jpeg_decompress_struct* %0, i8** %1082, i32* nonnull %15, i32 1) #4
  %1129 = load i32, i32* %15, align 4
  %1130 = load i32, i32* %71, align 8
  %1131 = add i32 %1130, %1129
  store i32 %1131, i32* %71, align 8
  br label %1132

1132:                                             ; preds = %1107, %1125
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1085) #4
  %1133 = add nuw i32 %1091, 1
  %1134 = icmp eq i32 %1133, %612
  br i1 %1134, label %1135, label %1090

1135:                                             ; preds = %1132, %1081
  %1136 = icmp eq void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %1060, null
  br i1 %1136, label %1140, label %1137

1137:                                             ; preds = %1135
  %1138 = load %struct.jpeg_color_deconverter*, %struct.jpeg_color_deconverter** %1050, align 8
  %1139 = getelementptr inbounds %struct.jpeg_color_deconverter, %struct.jpeg_color_deconverter* %1138, i64 0, i32 1
  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %1060, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %1139, align 8
  br label %1140

1140:                                             ; preds = %1137, %1135
  %1141 = icmp eq void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %1070, null
  br i1 %1141, label %1359, label %1142

1142:                                             ; preds = %1140
  %1143 = load %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer** %1061, align 8
  %1144 = getelementptr inbounds %struct.jpeg_color_quantizer, %struct.jpeg_color_quantizer* %1143, i64 0, i32 1
  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %1070, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %1144, align 8
  br label %1359

1145:                                             ; preds = %1035
  %1146 = load %struct.my_decomp_master*, %struct.my_decomp_master** %35, align 8
  %1147 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %1146, i64 0, i32 2
  %1148 = load i32, i32* %1147, align 4
  %1149 = icmp ne i32 %1148, 0
  %1150 = load i32, i32* %90, align 4
  %1151 = icmp eq i32 %1150, 2
  %1152 = and i1 %1149, %1151
  br i1 %1152, label %1153, label %1250

1153:                                             ; preds = %1145
  %1154 = getelementptr inbounds [1 x i8], [1 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1154) #4
  store i8 0, i8* %1154, align 1
  %1155 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1155) #4
  store i8* %1154, i8** %5, align 8
  %1156 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 86
  %1157 = load %struct.jpeg_color_deconverter*, %struct.jpeg_color_deconverter** %1156, align 8
  %1158 = icmp eq %struct.jpeg_color_deconverter* %1157, null
  br i1 %1158, label %1164, label %1159

1159:                                             ; preds = %1153
  %1160 = getelementptr inbounds %struct.jpeg_color_deconverter, %struct.jpeg_color_deconverter* %1157, i64 0, i32 1
  %1161 = load void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)*, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %1160, align 8
  %1162 = icmp eq void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %1161, null
  br i1 %1162, label %1164, label %1163

1163:                                             ; preds = %1159
  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* @noop_convert, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %1160, align 8
  br label %1164

1164:                                             ; preds = %1163, %1159, %1153
  %1165 = phi i8** [ %5, %1163 ], [ null, %1159 ], [ null, %1153 ]
  %1166 = phi void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* [ %1161, %1163 ], [ null, %1159 ], [ null, %1153 ]
  %1167 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 87
  %1168 = load %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer** %1167, align 8
  %1169 = icmp eq %struct.jpeg_color_quantizer* %1168, null
  br i1 %1169, label %1175, label %1170

1170:                                             ; preds = %1164
  %1171 = getelementptr inbounds %struct.jpeg_color_quantizer, %struct.jpeg_color_quantizer* %1168, i64 0, i32 1
  %1172 = load void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %1171, align 8
  %1173 = icmp eq void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %1172, null
  br i1 %1173, label %1175, label %1174

1174:                                             ; preds = %1170
  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* @noop_quantize, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %1171, align 8
  br label %1175

1175:                                             ; preds = %1174, %1170, %1164
  %1176 = phi void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* [ %1172, %1174 ], [ null, %1170 ], [ null, %1164 ]
  %1177 = load i32, i32* %1147, align 4
  %1178 = icmp eq i32 %1177, 0
  br i1 %1178, label %1186, label %1179

1179:                                             ; preds = %1175
  %1180 = load i32, i32* %90, align 4
  %1181 = icmp eq i32 %1180, 2
  br i1 %1181, label %1182, label %1186

1182:                                             ; preds = %1179
  %1183 = bitcast %struct.jpeg_upsampler** %37 to %struct.my_merged_upsampler**
  %1184 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %1183, align 8
  %1185 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %1184, i64 0, i32 6
  br label %1186

1186:                                             ; preds = %1182, %1179, %1175
  %1187 = phi i8** [ %1185, %1182 ], [ %1165, %1179 ], [ %1165, %1175 ]
  %1188 = icmp eq i32 %612, 0
  br i1 %1188, label %1240, label %1189

1189:                                             ; preds = %1186
  %1190 = bitcast i32* %3 to i8*
  %1191 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %1192 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  %1193 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 2
  %1194 = bitcast %struct.jpeg_progress_mgr** %1193 to void (%struct.jpeg_common_struct*)***
  br label %1195

1195:                                             ; preds = %1189, %1237
  %1196 = phi i32 [ %1238, %1237 ], [ 0, %1189 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1190) #4
  store i32 -1431655766, i32* %3, align 4
  %1197 = load i32, i32* %56, align 4
  %1198 = icmp eq i32 %1197, 205
  br i1 %1198, label %1208, label %1199

1199:                                             ; preds = %1195
  %1200 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %1191, align 8
  %1201 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1200, i64 0, i32 5
  store i32 20, i32* %1201, align 8
  %1202 = load i32, i32* %56, align 4
  %1203 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %1191, align 8
  %1204 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1203, i64 0, i32 6, i32 0, i64 0
  store i32 %1202, i32* %1204, align 4
  %1205 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %1191, align 8
  %1206 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1205, i64 0, i32 0
  %1207 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %1206, align 8
  call void %1207(%struct.jpeg_common_struct* %1192) #4
  br label %1208

1208:                                             ; preds = %1199, %1195
  %1209 = load i32, i32* %71, align 8
  %1210 = load i32, i32* %74, align 4
  %1211 = icmp ult i32 %1209, %1210
  br i1 %1211, label %1218, label %1212

1212:                                             ; preds = %1208
  %1213 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %1191, align 8
  %1214 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1213, i64 0, i32 5
  store i32 123, i32* %1214, align 8
  %1215 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %1191, align 8
  %1216 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1215, i64 0, i32 1
  %1217 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %1216, align 8
  call void %1217(%struct.jpeg_common_struct* %1192, i32 -1) #4
  br label %1237

1218:                                             ; preds = %1208
  %1219 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %1193, align 8
  %1220 = icmp eq %struct.jpeg_progress_mgr* %1219, null
  br i1 %1220, label %1230, label %1221

1221:                                             ; preds = %1218
  %1222 = zext i32 %1209 to i64
  %1223 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %1219, i64 0, i32 1
  store i64 %1222, i64* %1223, align 8
  %1224 = load i32, i32* %74, align 4
  %1225 = zext i32 %1224 to i64
  %1226 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %1193, align 8
  %1227 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %1226, i64 0, i32 2
  store i64 %1225, i64* %1227, align 8
  %1228 = load void (%struct.jpeg_common_struct*)**, void (%struct.jpeg_common_struct*)*** %1194, align 8
  %1229 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %1228, align 8
  call void %1229(%struct.jpeg_common_struct* %1192) #4
  br label %1230

1230:                                             ; preds = %1221, %1218
  store i32 0, i32* %3, align 4
  %1231 = load %struct.jpeg_d_main_controller*, %struct.jpeg_d_main_controller** %28, align 8
  %1232 = getelementptr inbounds %struct.jpeg_d_main_controller, %struct.jpeg_d_main_controller* %1231, i64 0, i32 1
  %1233 = load void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)** %1232, align 8
  call void %1233(%struct.jpeg_decompress_struct* %0, i8** %1187, i32* nonnull %3, i32 1) #4
  %1234 = load i32, i32* %3, align 4
  %1235 = load i32, i32* %71, align 8
  %1236 = add i32 %1235, %1234
  store i32 %1236, i32* %71, align 8
  br label %1237

1237:                                             ; preds = %1212, %1230
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1190) #4
  %1238 = add nuw i32 %1196, 1
  %1239 = icmp eq i32 %1238, %612
  br i1 %1239, label %1240, label %1195

1240:                                             ; preds = %1237, %1186
  %1241 = icmp eq void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %1166, null
  br i1 %1241, label %1245, label %1242

1242:                                             ; preds = %1240
  %1243 = load %struct.jpeg_color_deconverter*, %struct.jpeg_color_deconverter** %1156, align 8
  %1244 = getelementptr inbounds %struct.jpeg_color_deconverter, %struct.jpeg_color_deconverter* %1243, i64 0, i32 1
  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %1166, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %1244, align 8
  br label %1245

1245:                                             ; preds = %1242, %1240
  %1246 = icmp eq void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %1176, null
  br i1 %1246, label %1359, label %1247

1247:                                             ; preds = %1245
  %1248 = load %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer** %1167, align 8
  %1249 = getelementptr inbounds %struct.jpeg_color_quantizer, %struct.jpeg_color_quantizer* %1248, i64 0, i32 1
  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %1176, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %1249, align 8
  br label %1359

1250:                                             ; preds = %1145
  %1251 = load %struct.my_main_controller*, %struct.my_main_controller** %29, align 8
  %1252 = udiv i32 %612, %1150
  %1253 = getelementptr inbounds %struct.my_main_controller, %struct.my_main_controller* %1251, i64 0, i32 3
  %1254 = load i32, i32* %1253, align 4
  %1255 = add i32 %1254, %1252
  store i32 %1255, i32* %1253, align 4
  %1256 = load i32, i32* %90, align 4
  %1257 = urem i32 %612, %1256
  %1258 = sub i32 %612, %1257
  %1259 = load i32, i32* %71, align 8
  %1260 = add i32 %1258, %1259
  store i32 %1260, i32* %71, align 8
  %1261 = load %struct.my_decomp_master*, %struct.my_decomp_master** %35, align 8
  %1262 = getelementptr inbounds [1 x i8], [1 x i8]* %13, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1262) #4
  store i8 0, i8* %1262, align 1
  %1263 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1263) #4
  store i8* %1262, i8** %14, align 8
  %1264 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 86
  %1265 = load %struct.jpeg_color_deconverter*, %struct.jpeg_color_deconverter** %1264, align 8
  %1266 = icmp eq %struct.jpeg_color_deconverter* %1265, null
  br i1 %1266, label %1272, label %1267

1267:                                             ; preds = %1250
  %1268 = getelementptr inbounds %struct.jpeg_color_deconverter, %struct.jpeg_color_deconverter* %1265, i64 0, i32 1
  %1269 = load void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)*, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %1268, align 8
  %1270 = icmp eq void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %1269, null
  br i1 %1270, label %1272, label %1271

1271:                                             ; preds = %1267
  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* @noop_convert, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %1268, align 8
  br label %1272

1272:                                             ; preds = %1271, %1267, %1250
  %1273 = phi i8** [ %14, %1271 ], [ null, %1267 ], [ null, %1250 ]
  %1274 = phi void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* [ %1269, %1271 ], [ null, %1267 ], [ null, %1250 ]
  %1275 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 87
  %1276 = load %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer** %1275, align 8
  %1277 = icmp eq %struct.jpeg_color_quantizer* %1276, null
  br i1 %1277, label %1283, label %1278

1278:                                             ; preds = %1272
  %1279 = getelementptr inbounds %struct.jpeg_color_quantizer, %struct.jpeg_color_quantizer* %1276, i64 0, i32 1
  %1280 = load void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %1279, align 8
  %1281 = icmp eq void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %1280, null
  br i1 %1281, label %1283, label %1282

1282:                                             ; preds = %1278
  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* @noop_quantize, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %1279, align 8
  br label %1283

1283:                                             ; preds = %1282, %1278, %1272
  %1284 = phi void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* [ %1280, %1282 ], [ null, %1278 ], [ null, %1272 ]
  %1285 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %1261, i64 0, i32 2
  %1286 = load i32, i32* %1285, align 4
  %1287 = icmp eq i32 %1286, 0
  br i1 %1287, label %1295, label %1288

1288:                                             ; preds = %1283
  %1289 = load i32, i32* %90, align 4
  %1290 = icmp eq i32 %1289, 2
  br i1 %1290, label %1291, label %1295

1291:                                             ; preds = %1288
  %1292 = bitcast %struct.jpeg_upsampler** %37 to %struct.my_merged_upsampler**
  %1293 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %1292, align 8
  %1294 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %1293, i64 0, i32 6
  br label %1295

1295:                                             ; preds = %1291, %1288, %1283
  %1296 = phi i8** [ %1294, %1291 ], [ %1273, %1288 ], [ %1273, %1283 ]
  %1297 = icmp eq i32 %1257, 0
  br i1 %1297, label %1349, label %1298

1298:                                             ; preds = %1295
  %1299 = bitcast i32* %12 to i8*
  %1300 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %1301 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  %1302 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 2
  %1303 = bitcast %struct.jpeg_progress_mgr** %1302 to void (%struct.jpeg_common_struct*)***
  br label %1304

1304:                                             ; preds = %1298, %1346
  %1305 = phi i32 [ %1347, %1346 ], [ 0, %1298 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1299) #4
  store i32 -1431655766, i32* %12, align 4
  %1306 = load i32, i32* %56, align 4
  %1307 = icmp eq i32 %1306, 205
  br i1 %1307, label %1317, label %1308

1308:                                             ; preds = %1304
  %1309 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %1300, align 8
  %1310 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1309, i64 0, i32 5
  store i32 20, i32* %1310, align 8
  %1311 = load i32, i32* %56, align 4
  %1312 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %1300, align 8
  %1313 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1312, i64 0, i32 6, i32 0, i64 0
  store i32 %1311, i32* %1313, align 4
  %1314 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %1300, align 8
  %1315 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1314, i64 0, i32 0
  %1316 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %1315, align 8
  call void %1316(%struct.jpeg_common_struct* %1301) #4
  br label %1317

1317:                                             ; preds = %1308, %1304
  %1318 = load i32, i32* %71, align 8
  %1319 = load i32, i32* %74, align 4
  %1320 = icmp ult i32 %1318, %1319
  br i1 %1320, label %1327, label %1321

1321:                                             ; preds = %1317
  %1322 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %1300, align 8
  %1323 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1322, i64 0, i32 5
  store i32 123, i32* %1323, align 8
  %1324 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %1300, align 8
  %1325 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1324, i64 0, i32 1
  %1326 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %1325, align 8
  call void %1326(%struct.jpeg_common_struct* %1301, i32 -1) #4
  br label %1346

1327:                                             ; preds = %1317
  %1328 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %1302, align 8
  %1329 = icmp eq %struct.jpeg_progress_mgr* %1328, null
  br i1 %1329, label %1339, label %1330

1330:                                             ; preds = %1327
  %1331 = zext i32 %1318 to i64
  %1332 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %1328, i64 0, i32 1
  store i64 %1331, i64* %1332, align 8
  %1333 = load i32, i32* %74, align 4
  %1334 = zext i32 %1333 to i64
  %1335 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %1302, align 8
  %1336 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %1335, i64 0, i32 2
  store i64 %1334, i64* %1336, align 8
  %1337 = load void (%struct.jpeg_common_struct*)**, void (%struct.jpeg_common_struct*)*** %1303, align 8
  %1338 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %1337, align 8
  call void %1338(%struct.jpeg_common_struct* %1301) #4
  br label %1339

1339:                                             ; preds = %1330, %1327
  store i32 0, i32* %12, align 4
  %1340 = load %struct.jpeg_d_main_controller*, %struct.jpeg_d_main_controller** %28, align 8
  %1341 = getelementptr inbounds %struct.jpeg_d_main_controller, %struct.jpeg_d_main_controller* %1340, i64 0, i32 1
  %1342 = load void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)** %1341, align 8
  call void %1342(%struct.jpeg_decompress_struct* %0, i8** %1296, i32* nonnull %12, i32 1) #4
  %1343 = load i32, i32* %12, align 4
  %1344 = load i32, i32* %71, align 8
  %1345 = add i32 %1344, %1343
  store i32 %1345, i32* %71, align 8
  br label %1346

1346:                                             ; preds = %1321, %1339
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1299) #4
  %1347 = add nuw i32 %1305, 1
  %1348 = icmp eq i32 %1347, %1257
  br i1 %1348, label %1349, label %1304

1349:                                             ; preds = %1346, %1295
  %1350 = icmp eq void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %1274, null
  br i1 %1350, label %1354, label %1351

1351:                                             ; preds = %1349
  %1352 = load %struct.jpeg_color_deconverter*, %struct.jpeg_color_deconverter** %1264, align 8
  %1353 = getelementptr inbounds %struct.jpeg_color_deconverter, %struct.jpeg_color_deconverter* %1352, i64 0, i32 1
  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* %1274, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)** %1353, align 8
  br label %1354

1354:                                             ; preds = %1351, %1349
  %1355 = icmp eq void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %1284, null
  br i1 %1355, label %1359, label %1356

1356:                                             ; preds = %1354
  %1357 = load %struct.jpeg_color_quantizer*, %struct.jpeg_color_quantizer** %1275, align 8
  %1358 = getelementptr inbounds %struct.jpeg_color_quantizer, %struct.jpeg_color_quantizer* %1357, i64 0, i32 1
  store void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)* %1284, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)** %1358, align 8
  br label %1359

1359:                                             ; preds = %1356, %1354, %1247, %1245, %1142, %1140
  %1360 = phi i8* [ %1049, %1140 ], [ %1049, %1142 ], [ %1155, %1245 ], [ %1155, %1247 ], [ %1263, %1354 ], [ %1263, %1356 ]
  %1361 = phi i8* [ %1048, %1140 ], [ %1048, %1142 ], [ %1154, %1245 ], [ %1154, %1247 ], [ %1262, %1354 ], [ %1262, %1356 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1360) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1361) #4
  %1362 = getelementptr inbounds %struct.my_decomp_master, %struct.my_decomp_master* %36, i64 0, i32 2
  %1363 = load i32, i32* %1362, align 4
  %1364 = icmp eq i32 %1363, 0
  br i1 %1364, label %1365, label %1370

1365:                                             ; preds = %1359
  %1366 = load i32, i32* %74, align 4
  %1367 = load i32, i32* %71, align 8
  %1368 = sub i32 %1366, %1367
  %1369 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %39, i64 0, i32 4
  store i32 %1368, i32* %1369, align 4
  br label %1370

1370:                                             ; preds = %586, %476, %1365, %1359, %958, %952, %85, %209, %77
  %1371 = phi i32 [ %78, %77 ], [ %1, %209 ], [ 0, %85 ], [ %1, %952 ], [ %1, %958 ], [ %1, %1359 ], [ %1, %1365 ], [ %1, %476 ], [ %1, %586 ]
  ret i32 %1371
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @jpeg_read_raw_data(%struct.jpeg_decompress_struct*, i8***, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 206
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8
  %10 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 5
  store i32 20, i32* %10, align 8
  %11 = load i32, i32* %4, align 4
  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i64 0, i32 6, i32 0, i64 0
  store i32 %11, i32* %13, align 4
  %14 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8
  %15 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %14, i64 0, i32 0
  %16 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %15, align 8
  %17 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %16(%struct.jpeg_common_struct* %17) #4
  br label %18

18:                                               ; preds = %3, %7
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 34
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 28
  %22 = load i32, i32* %21, align 4
  %23 = icmp ult i32 %20, %22
  br i1 %23, label %32, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %26 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %25, align 8
  %27 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %26, i64 0, i32 5
  store i32 123, i32* %27, align 8
  %28 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %25, align 8
  %29 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %28, i64 0, i32 1
  %30 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %29, align 8
  %31 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %30(%struct.jpeg_common_struct* %31, i32 -1) #4
  br label %72

32:                                               ; preds = %18
  %33 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 2
  %34 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %33, align 8
  %35 = icmp eq %struct.jpeg_progress_mgr* %34, null
  br i1 %35, label %47, label %36

36:                                               ; preds = %32
  %37 = zext i32 %20 to i64
  %38 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %34, i64 0, i32 1
  store i64 %37, i64* %38, align 8
  %39 = load i32, i32* %21, align 4
  %40 = zext i32 %39 to i64
  %41 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %33, align 8
  %42 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %41, i64 0, i32 2
  store i64 %40, i64* %42, align 8
  %43 = bitcast %struct.jpeg_progress_mgr** %33 to void (%struct.jpeg_common_struct*)***
  %44 = load void (%struct.jpeg_common_struct*)**, void (%struct.jpeg_common_struct*)*** %43, align 8
  %45 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %44, align 8
  %46 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %45(%struct.jpeg_common_struct* %46) #4
  br label %47

47:                                               ; preds = %32, %36
  %48 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 62
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 63
  %51 = load i32, i32* %50, align 8
  %52 = mul nsw i32 %51, %49
  %53 = icmp ugt i32 %52, %2
  br i1 %53, label %54, label %62

54:                                               ; preds = %47
  %55 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %56 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %55, align 8
  %57 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %56, i64 0, i32 5
  store i32 23, i32* %57, align 8
  %58 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %55, align 8
  %59 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %58, i64 0, i32 0
  %60 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %59, align 8
  %61 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %60(%struct.jpeg_common_struct* %61) #4
  br label %62

62:                                               ; preds = %54, %47
  %63 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 79
  %64 = load %struct.jpeg_d_coef_controller*, %struct.jpeg_d_coef_controller** %63, align 8
  %65 = getelementptr inbounds %struct.jpeg_d_coef_controller, %struct.jpeg_d_coef_controller* %64, i64 0, i32 3
  %66 = load i32 (%struct.jpeg_decompress_struct*, i8***)*, i32 (%struct.jpeg_decompress_struct*, i8***)** %65, align 8
  %67 = tail call i32 %66(%struct.jpeg_decompress_struct* %0, i8*** %1) #4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %62
  %70 = load i32, i32* %19, align 8
  %71 = add i32 %70, %52
  store i32 %71, i32* %19, align 8
  br label %72

72:                                               ; preds = %62, %69, %24
  %73 = phi i32 [ 0, %24 ], [ %52, %69 ], [ 0, %62 ]
  ret i32 %73
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @jpeg_start_output(%struct.jpeg_decompress_struct*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %5 [
    i32 207, label %16
    i32 204, label %16
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %7 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %7, i64 0, i32 5
  store i32 20, i32* %8, align 8
  %9 = load i32, i32* %3, align 4
  %10 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %6, align 8
  %11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %10, i64 0, i32 6, i32 0, i64 0
  store i32 %9, i32* %11, align 4
  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %6, align 8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i64 0, i32 0
  %14 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %13, align 8
  %15 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %14(%struct.jpeg_common_struct* %15) #4
  br label %16

16:                                               ; preds = %2, %2, %5
  %17 = icmp sgt i32 %1, 1
  %18 = select i1 %17, i32 %1, i32 1
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 81
  %20 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %19, align 8
  %21 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %20, i64 0, i32 5
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 35
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %18, %26
  %28 = select i1 %27, i32 %26, i32 %18
  br label %29

29:                                               ; preds = %24, %16
  %30 = phi i32 [ %18, %16 ], [ %28, %24 ]
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 37
  store i32 %30, i32* %31, align 4
  %32 = tail call fastcc i32 @output_pass_setup(%struct.jpeg_decompress_struct* %0)
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @jpeg_finish_output(%struct.jpeg_decompress_struct*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -205
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %6, label %15

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 15
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 77
  %12 = load %struct.jpeg_decomp_master*, %struct.jpeg_decomp_master** %11, align 8
  %13 = getelementptr inbounds %struct.jpeg_decomp_master, %struct.jpeg_decomp_master* %12, i64 0, i32 1
  %14 = load void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)** %13, align 8
  tail call void %14(%struct.jpeg_decompress_struct* %0) #4
  store i32 208, i32* %2, align 4
  br label %28

15:                                               ; preds = %1
  %16 = icmp eq i32 %3, 208
  br i1 %16, label %28, label %17

17:                                               ; preds = %6, %15
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i64 0, i32 5
  store i32 20, i32* %20, align 8
  %21 = load i32, i32* %2, align 4
  %22 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8
  %23 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %22, i64 0, i32 6, i32 0, i64 0
  store i32 %21, i32* %23, align 4
  %24 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8
  %25 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %24, i64 0, i32 0
  %26 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %25, align 8
  %27 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %26(%struct.jpeg_common_struct* %27) #4
  br label %28

28:                                               ; preds = %15, %17, %10
  %29 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 35
  %30 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 37
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 81
  br label %32

32:                                               ; preds = %41, %28
  %33 = load i32, i32* %29, align 4
  %34 = load i32, i32* %30, align 4
  %35 = icmp sgt i32 %33, %34
  br i1 %35, label %46, label %36

36:                                               ; preds = %32
  %37 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %31, align 8
  %38 = getelementptr inbounds %struct.jpeg_input_controller, %struct.jpeg_input_controller* %37, i64 0, i32 5
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %36
  %42 = bitcast %struct.jpeg_input_controller* %37 to i32 (%struct.jpeg_decompress_struct*)**
  %43 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %42, align 8
  %44 = tail call i32 %43(%struct.jpeg_decompress_struct* %0) #4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %32

46:                                               ; preds = %32, %36
  store i32 207, i32* %2, align 4
  br label %47

47:                                               ; preds = %41, %46
  %48 = phi i32 [ 1, %46 ], [ 0, %41 ]
  ret i32 %48
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @noop_convert(%struct.jpeg_decompress_struct* nocapture, i8*** nocapture, i32, i8** nocapture, i32) #3 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @noop_quantize(%struct.jpeg_decompress_struct* nocapture, i8** nocapture, i8** nocapture, i32) #3 {
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
