; ModuleID = '../../third_party/skia/src/core/SkDraw_text.cpp'
source_filename = "../../third_party/skia/src/core/SkDraw_text.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkDraw = type { %"class.SkGlyphRunListPainter::BitmapDevicePainter", %class.SkPixmap, %class.SkMatrixProvider*, %class.SkRasterClip*, %class.SkPixmap* }
%"class.SkGlyphRunListPainter::BitmapDevicePainter" = type { i32 (...)** }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkM44 = type { [16 x float] }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkRasterClip = type { %class.SkRegion, %class.SkAAClip, i8, i8, i8, %struct.SkIRect*, %class.sk_sp.6 }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%class.SkAAClip = type { %struct.SkIRect, %"struct.SkAAClip::RunHead"* }
%"struct.SkAAClip::RunHead" = type opaque
%class.sk_sp.6 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray, %class.SkAutoTMalloc }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon }
%union.anon = type { %class.SkGlyph* }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.7, i32, %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", i8, i8 }>
%class.sk_sp.7 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.8, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.9, %class.SkTDArray.10, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.8 = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.9 = type { i8*, i32, i32 }
%class.SkTDArray.10 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.11 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.11 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.12", [3 x i8] }
%"struct.std::__1::atomic.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i8 }
%struct.SkPackedGlyphID = type { i32 }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.17" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %struct.SkPoint* }
%class.SkPaint = type <{ %class.sk_sp.21, %class.sk_sp.6, %class.sk_sp.22, %class.sk_sp.23, %class.sk_sp.24, %struct.SkRGBA4f, float, float, %union.anon.25, [4 x i8] }>
%class.sk_sp.21 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.22 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.23 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.24 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.25 = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkSTArenaAlloc = type { %"struct.std::__1::array", [4 x i8], %class.SkArenaAlloc.base, [4 x i8] }
%"struct.std::__1::array" = type { [3308 x i8] }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.SkFibBlockSizes = type { i32 }
%class.SkAAClipBlitterWrapper = type { %class.SkRegion, %class.SkAAClipBlitter, %class.SkRegion*, %class.SkBlitter* }
%class.SkAAClipBlitter = type { %class.SkBlitter, %class.SkBlitter*, %class.SkAAClip*, %struct.SkIRect, i16*, i8*, %class.SkAutoSMalloc, i8* }
%class.SkBlitter = type { i32 (...)**, %class.SkAutoMalloc }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr.26", i64 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i8* }
%class.SkAutoSMalloc = type { i8*, i64, [256 x i32] }
%struct.SkMask = type <{ i8*, %struct.SkIRect, i32, i8, [3 x i8] }>
%"class.SkRegion::Cliperator" = type <{ %"class.SkRegion::Iterator", %struct.SkIRect, %struct.SkIRect, i8, [7 x i8] }>
%"class.SkRegion::Iterator" = type <{ %class.SkRegion*, i32*, %struct.SkIRect, i8, [7 x i8] }>
%class.SkBitmap = type { %class.sk_sp.35, %class.SkPixmap, %class.sk_sp.36 }
%class.sk_sp.35 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.sk_sp.36 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkGlyphRunList = type { %class.SkSpan, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan = type { %class.SkGlyphRun*, i64 }
%class.SkGlyphRun = type { %class.SkZip.37, %class.SkSpan.42, %class.SkSpan.43, %class.SkSpan.44, %class.SkFont }
%class.SkZip.37 = type { %"class.std::__1::tuple.38", i64 }
%"class.std::__1::tuple.38" = type { %"struct.std::__1::__tuple_impl.39" }
%"struct.std::__1::__tuple_impl.39" = type { %"class.std::__1::__tuple_leaf.40", %"class.std::__1::__tuple_leaf.41" }
%"class.std::__1::__tuple_leaf.40" = type { i16* }
%"class.std::__1::__tuple_leaf.41" = type { %struct.SkPoint* }
%class.SkSpan.42 = type { i8*, i64 }
%class.SkSpan.43 = type { i32*, i64 }
%class.SkSpan.44 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp.45, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp.45 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkTextBlob = type { %class.SkNVRefCnt.46, %struct.SkRect, i32, %"struct.std::__1::atomic.47" }
%class.SkNVRefCnt.46 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__cxx_atomic_impl.50" }
%"struct.std::__1::__cxx_atomic_impl.50" = type { %"struct.std::__1::__cxx_atomic_base_impl.51" }
%"struct.std::__1::__cxx_atomic_base_impl.51" = type { i32 }
%class.SkGlyphRunListPainter = type { %class.SkSurfaceProps, %class.SkSurfaceProps, i32, i32, %class.SkStrikeForGPUCacheInterface*, %class.SkDrawableGlyphBuffer, %class.SkSourceGlyphBuffer }
%class.SkSurfaceProps = type { i32, i32 }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkSourceGlyphBuffer = type { %class.SkZip.37, i64, i32, i32, %class.SkZip.52, %class.SkSTArray, %class.SkSTArray.56 }
%class.SkZip.52 = type { %"class.std::__1::tuple.53", i64 }
%"class.std::__1::tuple.53" = type { %"struct.std::__1::__tuple_impl.54" }
%"struct.std::__1::__tuple_impl.54" = type { %"class.std::__1::__tuple_leaf.55", %"class.std::__1::__tuple_leaf.30" }
%"class.std::__1::__tuple_leaf.55" = type { i16* }
%"class.std::__1::__tuple_leaf.30" = type { %struct.SkPoint* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { i16*, i64 }
%class.SkSTArray.56 = type { %class.SkAlignedSTStorage.57, %class.SkTArray.58 }
%class.SkAlignedSTStorage.57 = type { [32 x i8] }
%class.SkTArray.58 = type { %struct.SkPoint*, i64 }
%class.SkPairBlitter = type { %class.SkBlitter, %class.SkBlitter*, %class.SkBlitter* }

$_ZZN12SkArenaAlloc4makeIZNS_4makeI13SkPairBlitterJRP9SkBlitterS4_EEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS6_ENUlPcE_8__invokeESF_ = comdat any

$_ZN13SkPairBlitterD0Ev = comdat any

$_ZN13SkPairBlitter5blitHEiii = comdat any

$_ZN13SkPairBlitter9blitAntiHEiiPKhPKs = comdat any

$_ZN13SkPairBlitter5blitVEiiih = comdat any

$_ZN13SkPairBlitter8blitRectEiiii = comdat any

$_ZN13SkPairBlitter12blitAntiRectEiiiihh = comdat any

$_ZN13SkPairBlitter8blitMaskERK6SkMaskRK7SkIRect = comdat any

$_ZN13SkPairBlitter17justAnOpaqueColorEPj = comdat any

$_ZN13SkPairBlitter10blitAntiH2Eiijj = comdat any

$_ZN13SkPairBlitter10blitAntiV2Eiijj = comdat any

$_ZNK9SkBlitter20requestRowsPreservedEv = comdat any

$_ZN9SkBlitter15allocBlitMemoryEm = comdat any

$_ZTV13SkPairBlitter = comdat any

@_ZTV13SkPairBlitter = linkonce_odr hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkBlitter*)* @_ZN9SkBlitterD2Ev to i8*), i8* bitcast (void (%class.SkPairBlitter*)* @_ZN13SkPairBlitterD0Ev to i8*), i8* bitcast (void (%class.SkPairBlitter*, i32, i32, i32)* @_ZN13SkPairBlitter5blitHEiii to i8*), i8* bitcast (void (%class.SkPairBlitter*, i32, i32, i8*, i16*)* @_ZN13SkPairBlitter9blitAntiHEiiPKhPKs to i8*), i8* bitcast (void (%class.SkPairBlitter*, i32, i32, i32, i8)* @_ZN13SkPairBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.SkPairBlitter*, i32, i32, i32, i32)* @_ZN13SkPairBlitter8blitRectEiiii to i8*), i8* bitcast (void (%class.SkPairBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN13SkPairBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkPairBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN13SkPairBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkPairBlitter*, i32*)* @_ZN13SkPairBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkPairBlitter*, i32, i32, i32, i32)* @_ZN13SkPairBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkPairBlitter*, i32, i32, i32, i32)* @_ZN13SkPairBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6SkDraw10paintMasksEP21SkDrawableGlyphBufferRK7SkPaint(%class.SkDraw*, %class.SkDrawableGlyphBuffer* nocapture readonly, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkSTArenaAlloc, align 8
  %5 = alloca %class.sk_sp.6, align 8
  %6 = alloca %class.SkPaint, align 8
  %7 = alloca %class.sk_sp.6, align 8
  %8 = alloca %class.SkAAClipBlitterWrapper, align 8
  %9 = alloca %struct.SkMask, align 8
  %10 = alloca %"class.SkRegion::Cliperator", align 8
  %11 = alloca %class.SkBitmap, align 8
  %12 = alloca %struct.SkImageInfo, align 16
  %13 = alloca %struct.SkIRect, align 4
  %14 = alloca %struct.SkMask, align 8
  %15 = alloca %struct.SkIRect, align 4
  %16 = alloca %class.SkBitmap, align 8
  %17 = alloca %struct.SkImageInfo, align 16
  %18 = getelementptr inbounds %class.SkSTArenaAlloc, %class.SkSTArenaAlloc* %4, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3344, i8* nonnull %18) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 3344, i1 false)
  %19 = getelementptr inbounds %class.SkSTArenaAlloc, %class.SkSTArenaAlloc* %4, i64 0, i32 0, i32 0, i64 3312
  %20 = bitcast i8* %19 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %20, i8* nonnull %18, i64 3308, i64 3308) #7
  %21 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1
  %22 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 2
  %23 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %22, align 8
  %24 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 3
  %25 = load %class.SkRasterClip*, %class.SkRasterClip** %24, align 8
  %26 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %5, i64 0, i32 0
  %27 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %25, i64 0, i32 6, i32 0
  %28 = load %class.SkShader*, %class.SkShader** %27, align 8, !noalias !2
  %29 = icmp eq %class.SkShader* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %3
  %31 = getelementptr inbounds %class.SkShader, %class.SkShader* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 1 monotonic, !noalias !2
  br label %33

33:                                               ; preds = %3, %30
  store %class.SkShader* %28, %class.SkShader** %26, align 8, !alias.scope !2
  %34 = call %class.SkBlitter* @_ZN9SkBlitter6ChooseERK8SkPixmapRK16SkMatrixProviderRK7SkPaintP12SkArenaAllocb5sk_spI8SkShaderE(%class.SkPixmap* dereferenceable(40) %21, %class.SkMatrixProvider* dereferenceable(112) %23, %class.SkPaint* dereferenceable(72) %2, %class.SkArenaAlloc* %20, i1 zeroext false, %class.sk_sp.6* nonnull %5) #7
  %35 = load %class.SkShader*, %class.SkShader** %26, align 8
  %36 = icmp eq %class.SkShader* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %class.SkShader, %class.SkShader* %35, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = bitcast %class.SkShader* %35 to %class.SkRefCntBase*
  %43 = bitcast %class.SkShader* %35 to void (%class.SkRefCntBase*)***
  %44 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %43, align 8
  %45 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, i64 2
  %46 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, align 8
  call void %46(%class.SkRefCntBase* nonnull %42) #7
  br label %47

47:                                               ; preds = %33, %37, %41
  %48 = ptrtoint %class.SkBlitter* %34 to i64
  %49 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 4
  %50 = load %class.SkPixmap*, %class.SkPixmap** %49, align 8
  %51 = icmp eq %class.SkPixmap* %50, null
  br i1 %51, label %94, label %52

52:                                               ; preds = %47
  %53 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %22, align 8
  %54 = bitcast %class.SkPaint* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %54) #7
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %6) #7
  %55 = load %class.SkRasterClip*, %class.SkRasterClip** %24, align 8
  %56 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %7, i64 0, i32 0
  %57 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %55, i64 0, i32 6, i32 0
  %58 = load %class.SkShader*, %class.SkShader** %57, align 8, !noalias !5
  %59 = icmp eq %class.SkShader* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %52
  %61 = getelementptr inbounds %class.SkShader, %class.SkShader* %58, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 1 monotonic, !noalias !5
  br label %63

63:                                               ; preds = %52, %60
  store %class.SkShader* %58, %class.SkShader** %56, align 8, !alias.scope !5
  %64 = call %class.SkBlitter* @_ZN9SkBlitter6ChooseERK8SkPixmapRK16SkMatrixProviderRK7SkPaintP12SkArenaAllocb5sk_spI8SkShaderE(%class.SkPixmap* nonnull dereferenceable(40) %50, %class.SkMatrixProvider* dereferenceable(112) %53, %class.SkPaint* nonnull dereferenceable(72) %6, %class.SkArenaAlloc* %20, i1 zeroext true, %class.sk_sp.6* nonnull %7) #7
  %65 = ptrtoint %class.SkBlitter* %64 to i64
  %66 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %20, i32 49, i32 8) #7
  %67 = getelementptr inbounds %class.SkSTArenaAlloc, %class.SkSTArenaAlloc* %4, i64 0, i32 0, i32 0, i64 3320
  %68 = bitcast i8* %67 to i8**
  %69 = bitcast i8* %67 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = ptrtoint i8* %66 to i64
  %72 = sub i64 %71, %70
  %73 = trunc i64 %72 to i32
  %74 = getelementptr inbounds i8, i8* %66, i64 40
  store i8* %74, i8** %68, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %20, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI13SkPairBlitterJRP9SkBlitterS4_EEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS6_ENUlPcE_8__invokeESF_, i32 %73) #7
  %75 = bitcast i8* %66 to i32 (...)***
  %76 = getelementptr inbounds i8, i8* %66, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 16, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV13SkPairBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8
  %77 = getelementptr inbounds i8, i8* %66, i64 24
  %78 = bitcast i8* %77 to i64*
  store i64 %48, i64* %78, align 8
  %79 = getelementptr inbounds i8, i8* %66, i64 32
  %80 = bitcast i8* %79 to i64*
  store i64 %65, i64* %80, align 8
  %81 = load %class.SkShader*, %class.SkShader** %56, align 8
  %82 = icmp eq %class.SkShader* %81, null
  br i1 %82, label %93, label %83

83:                                               ; preds = %63
  %84 = getelementptr inbounds %class.SkShader, %class.SkShader* %81, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw add i32* %84, i32 -1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %93

87:                                               ; preds = %83
  %88 = bitcast %class.SkShader* %81 to %class.SkRefCntBase*
  %89 = bitcast %class.SkShader* %81 to void (%class.SkRefCntBase*)***
  %90 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %89, align 8
  %91 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %90, i64 2
  %92 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %91, align 8
  call void %92(%class.SkRefCntBase* nonnull %88) #7
  br label %93

93:                                               ; preds = %63, %83, %87
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %54) #7
  br label %94

94:                                               ; preds = %47, %93
  %95 = phi i64 [ %48, %47 ], [ %71, %93 ]
  %96 = bitcast %class.SkAAClipBlitterWrapper* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1160, i8* nonnull %96) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 -86, i64 1160, i1 false)
  %97 = load %class.SkRasterClip*, %class.SkRasterClip** %24, align 8
  %98 = inttoptr i64 %95 to %class.SkBlitter*
  call void @_ZN22SkAAClipBlitterWrapperC1ERK12SkRasterClipP9SkBlitter(%class.SkAAClipBlitterWrapper* nonnull %8, %class.SkRasterClip* dereferenceable(72) %97, %class.SkBlitter* %98) #7
  %99 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %8, i64 0, i32 3
  %100 = load %class.SkBlitter*, %class.SkBlitter** %99, align 8
  %101 = load %class.SkRasterClip*, %class.SkRasterClip** %24, align 8
  %102 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %101, i64 0, i32 2
  %103 = load i8, i8* %102, align 8, !range !8
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %199, label %105

105:                                              ; preds = %94
  %106 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %101, i64 0, i32 4
  %107 = load i8, i8* %106, align 2, !range !8
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %109, label %199

109:                                              ; preds = %105
  %110 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 2
  %111 = load i64, i64* %110, align 8, !noalias !9
  %112 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %113 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %112, align 8, !noalias !9
  %114 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %115 = load %struct.SkPoint*, %struct.SkPoint** %114, align 8, !noalias !9
  %116 = icmp eq i64 %111, 0
  br i1 %116, label %311, label %117

117:                                              ; preds = %109
  %118 = bitcast %struct.SkMask* %9 to i8*
  %119 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %9, i64 0, i32 0
  %120 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %9, i64 0, i32 1
  %121 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %120, i64 0, i32 0
  %122 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %9, i64 0, i32 1, i32 1
  %123 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %9, i64 0, i32 1, i32 2
  %124 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %9, i64 0, i32 1, i32 3
  %125 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %9, i64 0, i32 2
  %126 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %9, i64 0, i32 3
  %127 = bitcast %"class.SkRegion::Cliperator"* %10 to i8*
  %128 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %10, i64 0, i32 3
  %129 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %10, i64 0, i32 2
  %130 = bitcast %class.SkBlitter* %100 to void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)***
  %131 = bitcast %class.SkBitmap* %11 to i8*
  %132 = bitcast %struct.SkImageInfo* %12 to i8*
  %133 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %12, i64 0, i32 1
  %134 = bitcast %struct.SkISize* %133 to i64*
  %135 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %12, i64 0, i32 0, i32 0, i32 0
  %136 = bitcast %struct.SkMask* %9 to i8*
  %137 = bitcast %struct.SkImageInfo* %12 to <2 x i64>*
  br label %138

138:                                              ; preds = %117, %196
  %139 = phi i64 [ 0, %117 ], [ %197, %196 ]
  %140 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %115, i64 %139
  %141 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %113, i64 %139, i32 0, i32 0
  %142 = load %class.SkGlyph*, %class.SkGlyph** %141, align 8
  %143 = bitcast %struct.SkPoint* %140 to <2 x float>*
  %144 = load <2 x float>, <2 x float>* %143, align 4
  %145 = extractelement <2 x float> %144, i32 0
  %146 = fcmp ugt float %145, 0x41DFFFA000000000
  %147 = fcmp ult float %145, 0xC1DFFFE000000000
  %148 = or i1 %146, %147
  br i1 %148, label %196, label %149

149:                                              ; preds = %138
  %150 = extractelement <2 x float> %144, i32 1
  %151 = fcmp ole float %150, 0x41DFFFA000000000
  %152 = fcmp oge float %150, 0xC1DFFFE000000000
  %153 = and i1 %151, %152
  br i1 %153, label %154, label %196

154:                                              ; preds = %149
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %118) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %136, i8 -86, i64 32, i1 false)
  %155 = load <2 x float>, <2 x float>* %143, align 4
  call void @_ZNK7SkGlyph4maskE7SkPoint(%struct.SkMask* nonnull sret %9, %class.SkGlyph* %142, <2 x float> %155) #7
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %127) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 -86, i64 80, i1 false)
  %156 = load %class.SkRasterClip*, %class.SkRasterClip** %24, align 8
  %157 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %156, i64 0, i32 0
  call void @_ZN8SkRegion10CliperatorC1ERKS_RK7SkIRect(%"class.SkRegion::Cliperator"* nonnull %10, %class.SkRegion* dereferenceable(24) %157, %struct.SkIRect* dereferenceable(16) %120) #7
  %158 = load i8, i8* %128, align 8, !range !8
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %160, label %195

160:                                              ; preds = %154
  %161 = load i8, i8* %126, align 4
  %162 = icmp eq i8 %161, 3
  br i1 %162, label %163, label %189

163:                                              ; preds = %160
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %131) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %131, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %11) #7
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132) #7
  %164 = load i32, i32* %123, align 8
  %165 = load i32, i32* %121, align 8
  %166 = sub i32 %164, %165
  %167 = load i32, i32* %124, align 4
  %168 = load i32, i32* %122, align 4
  %169 = sub i32 %167, %168
  %170 = zext i32 %169 to i64
  %171 = shl nuw i64 %170, 32
  %172 = zext i32 %166 to i64
  %173 = or i64 %171, %172
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %137, align 16, !alias.scope !12
  store i64 %173, i64* %134, align 16, !alias.scope !12
  %174 = load i8*, i8** %119, align 8
  %175 = load i32, i32* %125, align 8
  %176 = zext i32 %175 to i64
  %177 = call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* nonnull %11, %struct.SkImageInfo* nonnull dereferenceable(24) %12, i8* %174, i64 %176, void (i8*, i8*)* null, i8* null) #7
  %178 = load %class.SkColorSpace*, %class.SkColorSpace** %135, align 16
  %179 = icmp eq %class.SkColorSpace* %178, null
  br i1 %179, label %186, label %180

180:                                              ; preds = %163
  %181 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %178, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = atomicrmw add i32* %181, i32 -1 acq_rel
  %183 = icmp eq i32 %182, 1
  br i1 %183, label %184, label %186

184:                                              ; preds = %180
  %185 = bitcast %class.SkColorSpace* %178 to i8*
  call void @_ZdlPv(i8* %185) #8
  br label %186

186:                                              ; preds = %184, %180, %163
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132) #7
  %187 = load i32, i32* %121, align 8
  %188 = load i32, i32* %122, align 4
  call void @_ZNK6SkDraw10drawSpriteERK8SkBitmapiiRK7SkPaint(%class.SkDraw* %0, %class.SkBitmap* nonnull dereferenceable(56) %11, i32 %187, i32 %188, %class.SkPaint* dereferenceable(72) %2) #7
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %11) #7
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %131) #7
  br label %195

189:                                              ; preds = %160, %189
  %190 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %130, align 8
  %191 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %190, i64 7
  %192 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %191, align 8
  call void %192(%class.SkBlitter* %100, %struct.SkMask* nonnull dereferenceable(32) %9, %struct.SkIRect* dereferenceable(16) %129) #7
  call void @_ZN8SkRegion10Cliperator4nextEv(%"class.SkRegion::Cliperator"* nonnull %10) #7
  %193 = load i8, i8* %128, align 8, !range !8
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %189, label %195

195:                                              ; preds = %189, %154, %186
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %127) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %118) #7
  br label %196

196:                                              ; preds = %149, %138, %195
  %197 = add nuw i64 %139, 1
  %198 = icmp eq i64 %197, %111
  br i1 %198, label %311, label %138

199:                                              ; preds = %94, %105
  %200 = bitcast %struct.SkIRect* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %200) #7
  %201 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %13, i64 0, i32 0
  %202 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %13, i64 0, i32 1
  %203 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %13, i64 0, i32 2
  %204 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %13, i64 0, i32 3
  %205 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %101, i64 0, i32 0, i32 0
  %206 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %101, i64 0, i32 1, i32 0
  %207 = select i1 %104, %struct.SkIRect* %206, %struct.SkIRect* %205
  %208 = bitcast %struct.SkIRect* %207 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %200, i8* align 4 %208, i64 16, i1 false)
  %209 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 2
  %210 = load i64, i64* %209, align 8, !noalias !17
  %211 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %212 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %211, align 8, !noalias !17
  %213 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %214 = load %struct.SkPoint*, %struct.SkPoint** %213, align 8, !noalias !17
  %215 = icmp eq i64 %210, 0
  br i1 %215, label %236, label %216

216:                                              ; preds = %199
  %217 = bitcast %struct.SkMask* %14 to i8*
  %218 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %14, i64 0, i32 0
  %219 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %14, i64 0, i32 1
  %220 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %219, i64 0, i32 0
  %221 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %14, i64 0, i32 1, i32 1
  %222 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %14, i64 0, i32 1, i32 2
  %223 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %14, i64 0, i32 1, i32 3
  %224 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %14, i64 0, i32 2
  %225 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %14, i64 0, i32 3
  %226 = bitcast %struct.SkIRect* %15 to i8*
  %227 = bitcast %class.SkBlitter* %100 to void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)***
  %228 = bitcast %class.SkBitmap* %16 to i8*
  %229 = bitcast %struct.SkImageInfo* %17 to i8*
  %230 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %17, i64 0, i32 1
  %231 = bitcast %struct.SkISize* %230 to i64*
  %232 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %17, i64 0, i32 0, i32 0, i32 0
  %233 = bitcast %struct.SkMask* %14 to i8*
  %234 = bitcast %struct.SkIRect* %15 to i8*
  %235 = bitcast %struct.SkImageInfo* %17 to <2 x i64>*
  br label %237

236:                                              ; preds = %308, %199
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %200) #7
  br label %311

237:                                              ; preds = %216, %308
  %238 = phi i64 [ 0, %216 ], [ %309, %308 ]
  %239 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %214, i64 %238
  %240 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %212, i64 %238, i32 0, i32 0
  %241 = load %class.SkGlyph*, %class.SkGlyph** %240, align 8
  %242 = bitcast %struct.SkPoint* %239 to <2 x float>*
  %243 = load <2 x float>, <2 x float>* %242, align 4
  %244 = extractelement <2 x float> %243, i32 0
  %245 = fcmp ugt float %244, 0x41DFFFA000000000
  %246 = fcmp ult float %244, 0xC1DFFFE000000000
  %247 = or i1 %245, %246
  br i1 %247, label %308, label %248

248:                                              ; preds = %237
  %249 = extractelement <2 x float> %243, i32 1
  %250 = fcmp ole float %249, 0x41DFFFA000000000
  %251 = fcmp oge float %249, 0xC1DFFFE000000000
  %252 = and i1 %250, %251
  br i1 %252, label %253, label %308

253:                                              ; preds = %248
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %217) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %233, i8 -86, i64 32, i1 false)
  %254 = load <2 x float>, <2 x float>* %242, align 4
  call void @_ZNK7SkGlyph4maskE7SkPoint(%struct.SkMask* nonnull sret %14, %class.SkGlyph* %241, <2 x float> %254) #7
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %226) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %234, i8 -86, i64 16, i1 false)
  %255 = load i32, i32* %201, align 4
  %256 = load i32, i32* %220, align 8
  %257 = icmp sgt i32 %255, %256
  br i1 %257, label %270, label %258

258:                                              ; preds = %253
  %259 = load i32, i32* %202, align 4
  %260 = load i32, i32* %221, align 4
  %261 = icmp sgt i32 %259, %260
  br i1 %261, label %270, label %262

262:                                              ; preds = %258
  %263 = load i32, i32* %203, align 4
  %264 = load i32, i32* %222, align 8
  %265 = icmp slt i32 %263, %264
  br i1 %265, label %270, label %266

266:                                              ; preds = %262
  %267 = load i32, i32* %204, align 4
  %268 = load i32, i32* %223, align 4
  %269 = icmp slt i32 %267, %268
  br i1 %269, label %270, label %272

270:                                              ; preds = %266, %253, %258, %262
  %271 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %15, %struct.SkIRect* dereferenceable(16) %219, %struct.SkIRect* nonnull dereferenceable(16) %13) #7
  br i1 %271, label %272, label %307

272:                                              ; preds = %266, %270
  %273 = phi %struct.SkIRect* [ %219, %266 ], [ %15, %270 ]
  %274 = load i8, i8* %225, align 4
  %275 = icmp eq i8 %274, 3
  br i1 %275, label %276, label %302

276:                                              ; preds = %272
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %228) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %228, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %16) #7
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %229) #7
  %277 = load i32, i32* %222, align 8
  %278 = load i32, i32* %220, align 8
  %279 = sub i32 %277, %278
  %280 = load i32, i32* %223, align 4
  %281 = load i32, i32* %221, align 4
  %282 = sub i32 %280, %281
  %283 = zext i32 %282 to i64
  %284 = shl nuw i64 %283, 32
  %285 = zext i32 %279 to i64
  %286 = or i64 %284, %285
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %235, align 16, !alias.scope !20
  store i64 %286, i64* %231, align 16, !alias.scope !20
  %287 = load i8*, i8** %218, align 8
  %288 = load i32, i32* %224, align 8
  %289 = zext i32 %288 to i64
  %290 = call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* nonnull %16, %struct.SkImageInfo* nonnull dereferenceable(24) %17, i8* %287, i64 %289, void (i8*, i8*)* null, i8* null) #7
  %291 = load %class.SkColorSpace*, %class.SkColorSpace** %232, align 16
  %292 = icmp eq %class.SkColorSpace* %291, null
  br i1 %292, label %299, label %293

293:                                              ; preds = %276
  %294 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %291, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = atomicrmw add i32* %294, i32 -1 acq_rel
  %296 = icmp eq i32 %295, 1
  br i1 %296, label %297, label %299

297:                                              ; preds = %293
  %298 = bitcast %class.SkColorSpace* %291 to i8*
  call void @_ZdlPv(i8* %298) #8
  br label %299

299:                                              ; preds = %297, %293, %276
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %229) #7
  %300 = load i32, i32* %220, align 8
  %301 = load i32, i32* %221, align 4
  call void @_ZNK6SkDraw10drawSpriteERK8SkBitmapiiRK7SkPaint(%class.SkDraw* %0, %class.SkBitmap* nonnull dereferenceable(56) %16, i32 %300, i32 %301, %class.SkPaint* dereferenceable(72) %2) #7
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %16) #7
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %228) #7
  br label %306

302:                                              ; preds = %272
  %303 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %227, align 8
  %304 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %303, i64 7
  %305 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %304, align 8
  call void %305(%class.SkBlitter* %100, %struct.SkMask* nonnull dereferenceable(32) %14, %struct.SkIRect* dereferenceable(16) %273) #7
  br label %306

306:                                              ; preds = %302, %299
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %226) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %217) #7
  br label %308

307:                                              ; preds = %270
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %226) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %217) #7
  br label %308

308:                                              ; preds = %248, %237, %306, %307
  %309 = add nuw i64 %238, 1
  %310 = icmp eq i64 %309, %210
  br i1 %310, label %236, label %237

311:                                              ; preds = %196, %109, %236
  %312 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %8, i64 0, i32 1
  call void @_ZN15SkAAClipBlitterD1Ev(%class.SkAAClipBlitter* %312) #7
  %313 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %8, i64 0, i32 0
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %313) #7
  call void @llvm.lifetime.end.p0i8(i64 1160, i8* nonnull %96) #7
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %20) #7
  call void @llvm.lifetime.end.p0i8(i64 3344, i8* nonnull %18) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %class.SkBlitter* @_ZN9SkBlitter6ChooseERK8SkPixmapRK16SkMatrixProviderRK7SkPaintP12SkArenaAllocb5sk_spI8SkShaderE(%class.SkPixmap* dereferenceable(40), %class.SkMatrixProvider* dereferenceable(112), %class.SkPaint* dereferenceable(72), %class.SkArenaAlloc*, i1 zeroext, %class.sk_sp.6*) local_unnamed_addr #2

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN22SkAAClipBlitterWrapperC1ERK12SkRasterClipP9SkBlitter(%class.SkAAClipBlitterWrapper*, %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNK7SkGlyph4maskE7SkPoint(%struct.SkMask* sret, %class.SkGlyph*, <2 x float>) local_unnamed_addr #2

declare void @_ZN8SkRegion10CliperatorC1ERKS_RK7SkIRect(%"class.SkRegion::Cliperator"*, %class.SkRegion* dereferenceable(24), %struct.SkIRect* dereferenceable(16)) unnamed_addr #2

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare void @_ZNK6SkDraw10drawSpriteERK8SkBitmapiiRK7SkPaint(%class.SkDraw*, %class.SkBitmap* dereferenceable(56), i32, i32, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

declare void @_ZN8SkRegion10Cliperator4nextEv(%"class.SkRegion::Cliperator"*) local_unnamed_addr #2

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6SkDraw10paintPathsEP21SkDrawableGlyphBufferf7SkPointRK7SkPaint(%class.SkDraw*, %class.SkDrawableGlyphBuffer* nocapture readonly, float, <2 x float>, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %6 = alloca %class.SkMatrix, align 16
  %7 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 2
  %8 = load i64, i64* %7, align 8, !noalias !25
  %9 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %9, align 8, !noalias !25
  %11 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %12 = load %struct.SkPoint*, %struct.SkPoint** %11, align 8, !noalias !25
  %13 = icmp eq i64 %8, 0
  br i1 %13, label %32, label %14

14:                                               ; preds = %5
  %15 = bitcast %class.SkMatrix* %6 to i8*
  %16 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %17 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 0
  %18 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 1
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 2
  %20 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 3
  %21 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %22 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 5
  %23 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 6
  %24 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 7
  %25 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  %26 = extractelement <2 x float> %3, i32 0
  %27 = extractelement <2 x float> %3, i32 1
  %28 = fcmp une float %2, 1.000000e+00
  %29 = select i1 %28, i32 18, i32 16
  %30 = bitcast %class.SkMatrix* %6 to <4 x float>*
  %31 = bitcast float* %21 to <4 x float>*
  br label %33

32:                                               ; preds = %33, %5
  ret void

33:                                               ; preds = %14, %33
  %34 = phi i64 [ 0, %14 ], [ %49, %33 ]
  %35 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %10, i64 %34
  %36 = bitcast %class.SkGlyphVariant* %35 to %class.SkPath**
  %37 = load %class.SkPath*, %class.SkPath** %36, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #7
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %30, align 16
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %31, align 16
  store float 1.000000e+00, float* %25, align 16
  store i32 16, i32* %16, align 4
  %38 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 %34, i32 0
  %39 = load float, float* %38, align 4
  %40 = fadd float %26, %39
  %41 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 %34, i32 1
  %42 = load float, float* %41, align 4
  %43 = fadd float %27, %42
  store float %2, float* %17, align 16
  store float 0.000000e+00, float* %18, align 4
  store float %40, float* %19, align 8
  store float 0.000000e+00, float* %20, align 4
  store float %2, float* %21, align 16
  store float %43, float* %22, align 4
  store float 0.000000e+00, float* %23, align 8
  store float 0.000000e+00, float* %24, align 4
  store float 1.000000e+00, float* %25, align 16
  %44 = fcmp une float %40, 0.000000e+00
  %45 = fcmp une float %43, 0.000000e+00
  %46 = or i1 %44, %45
  %47 = zext i1 %46 to i32
  %48 = or i32 %29, %47
  store i32 %48, i32* %16, align 4
  call void @_ZNK6SkDraw8drawPathERK6SkPathRK7SkPaintPK8SkMatrixbbP9SkBlitter(%class.SkDraw* %0, %class.SkPath* dereferenceable(16) %37, %class.SkPaint* dereferenceable(72) %4, %class.SkMatrix* nonnull %6, i1 zeroext false, i1 zeroext false, %class.SkBlitter* null) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #7
  %49 = add nuw i64 %34, 1
  %50 = icmp eq i64 %49, %8
  br i1 %50, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6SkDraw16drawGlyphRunListERK14SkGlyphRunListRK7SkPaintP21SkGlyphRunListPainter(%class.SkDraw*, %class.SkGlyphRunList* dereferenceable(48), %class.SkPaint* dereferenceable(72), %class.SkGlyphRunListPainter*) local_unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 3
  %6 = load %class.SkRasterClip*, %class.SkRasterClip** %5, align 8
  %7 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %6, i64 0, i32 3
  %8 = load i8, i8* %7, align 1, !range !8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 2
  %12 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %11, align 8
  %13 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %12, i64 0, i32 2
  %14 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 0
  tail call void @_ZN21SkGlyphRunListPainter19drawForBitmapDeviceERK14SkGlyphRunListRK7SkPaintRK8SkMatrixPKNS_19BitmapDevicePainterE(%class.SkGlyphRunListPainter* %3, %class.SkGlyphRunList* dereferenceable(48) %1, %class.SkPaint* dereferenceable(72) %2, %class.SkMatrix* dereferenceable(40) %13, %"class.SkGlyphRunListPainter::BitmapDevicePainter"* %14) #7
  br label %15

15:                                               ; preds = %4, %10
  ret void
}

declare void @_ZN21SkGlyphRunListPainter19drawForBitmapDeviceERK14SkGlyphRunListRK7SkPaintRK8SkMatrixPKNS_19BitmapDevicePainterE(%class.SkGlyphRunListPainter*, %class.SkGlyphRunList* dereferenceable(48), %class.SkPaint* dereferenceable(72), %class.SkMatrix* dereferenceable(40), %"class.SkGlyphRunListPainter::BitmapDevicePainter"*) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN15SkAAClipBlitterD1Ev(%class.SkAAClipBlitter*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkRegionD1Ev(%class.SkRegion*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc*) unnamed_addr #3

declare void @_ZNK6SkDraw8drawPathERK6SkPathRK7SkPaintPK8SkMatrixbbP9SkBlitter(%class.SkDraw*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72), %class.SkMatrix*, i1 zeroext, i1 zeroext, %class.SkBlitter*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc*, i8*, i64, i64) unnamed_addr #2

declare i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #2

declare void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc*, i8* (i8*)*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeI13SkPairBlitterJRP9SkBlitterS4_EEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS6_ENUlPcE_8__invokeESF_(i8*) #6 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -49
  %3 = bitcast i8* %2 to %class.SkPairBlitter*
  %4 = bitcast i8* %2 to void (%class.SkPairBlitter*)***
  %5 = load void (%class.SkPairBlitter*)**, void (%class.SkPairBlitter*)*** %4, align 8
  %6 = load void (%class.SkPairBlitter*)*, void (%class.SkPairBlitter*)** %5, align 8
  tail call void %6(%class.SkPairBlitter* %3) #7
  ret i8* %2
}

; Function Attrs: nounwind
declare void @_ZN9SkBlitterD2Ev(%class.SkBlitter*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkPairBlitterD0Ev(%class.SkPairBlitter*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %2) #7
  %3 = bitcast %class.SkPairBlitter* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkPairBlitter5blitHEiii(%class.SkPairBlitter*, i32, i32, i32) unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 1
  %6 = load %class.SkBlitter*, %class.SkBlitter** %5, align 8
  %7 = bitcast %class.SkBlitter* %6 to void (%class.SkBlitter*, i32, i32, i32)***
  %8 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %8, i64 2
  %10 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %9, align 8
  tail call void %10(%class.SkBlitter* %6, i32 %1, i32 %2, i32 %3) #7
  %11 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 2
  %12 = load %class.SkBlitter*, %class.SkBlitter** %11, align 8
  %13 = bitcast %class.SkBlitter* %12 to void (%class.SkBlitter*, i32, i32, i32)***
  %14 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %14, i64 2
  %16 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %15, align 8
  tail call void %16(%class.SkBlitter* %12, i32 %1, i32 %2, i32 %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkPairBlitter9blitAntiHEiiPKhPKs(%class.SkPairBlitter*, i32, i32, i8*, i16*) unnamed_addr #4 comdat align 2 {
  %6 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 1
  %7 = load %class.SkBlitter*, %class.SkBlitter** %6, align 8
  %8 = bitcast %class.SkBlitter* %7 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %9 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %9, i64 3
  %11 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %10, align 8
  tail call void %11(%class.SkBlitter* %7, i32 %1, i32 %2, i8* %3, i16* %4) #7
  %12 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 2
  %13 = load %class.SkBlitter*, %class.SkBlitter** %12, align 8
  %14 = bitcast %class.SkBlitter* %13 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %15 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %15, i64 3
  %17 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %16, align 8
  tail call void %17(%class.SkBlitter* %13, i32 %1, i32 %2, i8* %3, i16* %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkPairBlitter5blitVEiiih(%class.SkPairBlitter*, i32, i32, i32, i8 zeroext) unnamed_addr #4 comdat align 2 {
  %6 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 1
  %7 = load %class.SkBlitter*, %class.SkBlitter** %6, align 8
  %8 = bitcast %class.SkBlitter* %7 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %9 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %9, i64 4
  %11 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %10, align 8
  tail call void %11(%class.SkBlitter* %7, i32 %1, i32 %2, i32 %3, i8 zeroext %4) #7
  %12 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 2
  %13 = load %class.SkBlitter*, %class.SkBlitter** %12, align 8
  %14 = bitcast %class.SkBlitter* %13 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %15 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %15, i64 4
  %17 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %16, align 8
  tail call void %17(%class.SkBlitter* %13, i32 %1, i32 %2, i32 %3, i8 zeroext %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkPairBlitter8blitRectEiiii(%class.SkPairBlitter*, i32, i32, i32, i32) unnamed_addr #4 comdat align 2 {
  %6 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 1
  %7 = load %class.SkBlitter*, %class.SkBlitter** %6, align 8
  %8 = bitcast %class.SkBlitter* %7 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %9 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %9, i64 5
  %11 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %10, align 8
  tail call void %11(%class.SkBlitter* %7, i32 %1, i32 %2, i32 %3, i32 %4) #7
  %12 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 2
  %13 = load %class.SkBlitter*, %class.SkBlitter** %12, align 8
  %14 = bitcast %class.SkBlitter* %13 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %15 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %15, i64 5
  %17 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %16, align 8
  tail call void %17(%class.SkBlitter* %13, i32 %1, i32 %2, i32 %3, i32 %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkPairBlitter12blitAntiRectEiiiihh(%class.SkPairBlitter*, i32, i32, i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #4 comdat align 2 {
  %8 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 1
  %9 = load %class.SkBlitter*, %class.SkBlitter** %8, align 8
  %10 = bitcast %class.SkBlitter* %9 to void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)***
  %11 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)**, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*** %10, align 8
  %12 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %11, i64 6
  %13 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %12, align 8
  tail call void %13(%class.SkBlitter* %9, i32 %1, i32 %2, i32 %3, i32 %4, i8 zeroext %5, i8 zeroext %6) #7
  %14 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 2
  %15 = load %class.SkBlitter*, %class.SkBlitter** %14, align 8
  %16 = bitcast %class.SkBlitter* %15 to void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)***
  %17 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)**, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %17, i64 6
  %19 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %18, align 8
  tail call void %19(%class.SkBlitter* %15, i32 %1, i32 %2, i32 %3, i32 %4, i8 zeroext %5, i8 zeroext %6) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkPairBlitter8blitMaskERK6SkMaskRK7SkIRect(%class.SkPairBlitter*, %struct.SkMask* dereferenceable(32), %struct.SkIRect* dereferenceable(16)) unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 1
  %5 = load %class.SkBlitter*, %class.SkBlitter** %4, align 8
  %6 = bitcast %class.SkBlitter* %5 to void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)***
  %7 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %7, i64 7
  %9 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %8, align 8
  tail call void %9(%class.SkBlitter* %5, %struct.SkMask* dereferenceable(32) %1, %struct.SkIRect* dereferenceable(16) %2) #7
  %10 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 2
  %11 = load %class.SkBlitter*, %class.SkBlitter** %10, align 8
  %12 = bitcast %class.SkBlitter* %11 to void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)***
  %13 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %13, i64 7
  %15 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %14, align 8
  tail call void %15(%class.SkBlitter* %11, %struct.SkMask* dereferenceable(32) %1, %struct.SkIRect* dereferenceable(16) %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkPixmap* @_ZN13SkPairBlitter17justAnOpaqueColorEPj(%class.SkPairBlitter*, i32*) unnamed_addr #4 comdat align 2 {
  ret %class.SkPixmap* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkPairBlitter10blitAntiH2Eiijj(%class.SkPairBlitter*, i32, i32, i32, i32) unnamed_addr #4 comdat align 2 {
  %6 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 1
  %7 = load %class.SkBlitter*, %class.SkBlitter** %6, align 8
  %8 = bitcast %class.SkBlitter* %7 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %9 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %9, i64 9
  %11 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %10, align 8
  tail call void %11(%class.SkBlitter* %7, i32 %1, i32 %2, i32 %3, i32 %4) #7
  %12 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 2
  %13 = load %class.SkBlitter*, %class.SkBlitter** %12, align 8
  %14 = bitcast %class.SkBlitter* %13 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %15 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %15, i64 9
  %17 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %16, align 8
  tail call void %17(%class.SkBlitter* %13, i32 %1, i32 %2, i32 %3, i32 %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkPairBlitter10blitAntiV2Eiijj(%class.SkPairBlitter*, i32, i32, i32, i32) unnamed_addr #4 comdat align 2 {
  %6 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 1
  %7 = load %class.SkBlitter*, %class.SkBlitter** %6, align 8
  %8 = bitcast %class.SkBlitter* %7 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %9 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %9, i64 10
  %11 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %10, align 8
  tail call void %11(%class.SkBlitter* %7, i32 %1, i32 %2, i32 %3, i32 %4) #7
  %12 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 2
  %13 = load %class.SkBlitter*, %class.SkBlitter** %12, align 8
  %14 = bitcast %class.SkBlitter* %13 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %15 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %15, i64 10
  %17 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %16, align 8
  tail call void %17(%class.SkBlitter* %13, i32 %1, i32 %2, i32 %3, i32 %4) #7
  ret void
}

declare zeroext i1 @_ZNK9SkBlitter13isNullBlitterEv(%class.SkBlitter*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK9SkBlitter20requestRowsPreservedEv(%class.SkBlitter*) unnamed_addr #4 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN9SkBlitter15allocBlitMemoryEm(%class.SkBlitter*, i64) unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, %1
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %1, i32 2) #7
  %9 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  store i8* %8, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @_Z7sk_freePv(i8* nonnull %10) #7
  br label %13

13:                                               ; preds = %12, %7
  store i64 %1, i64* %4, align 8
  br label %14

14:                                               ; preds = %2, %13
  %15 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  ret i8* %16
}

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK12SkRasterClip10clipShaderEv: argument 0"}
!4 = distinct !{!4, !"_ZNK12SkRasterClip10clipShaderEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK12SkRasterClip10clipShaderEv: argument 0"}
!7 = distinct !{!7, !"_ZNK12SkRasterClip10clipShaderEv"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN21SkDrawableGlyphBuffer8drawableEv: argument 0"}
!11 = distinct !{!11, !"_ZN21SkDrawableGlyphBuffer8drawableEv"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!14 = distinct !{!14, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!15 = distinct !{!15, !16, !"_ZN11SkImageInfo13MakeN32PremulE7SkISize5sk_spI12SkColorSpaceE: argument 0"}
!16 = distinct !{!16, !"_ZN11SkImageInfo13MakeN32PremulE7SkISize5sk_spI12SkColorSpaceE"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN21SkDrawableGlyphBuffer8drawableEv: argument 0"}
!19 = distinct !{!19, !"_ZN21SkDrawableGlyphBuffer8drawableEv"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!22 = distinct !{!22, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!23 = distinct !{!23, !24, !"_ZN11SkImageInfo13MakeN32PremulE7SkISize5sk_spI12SkColorSpaceE: argument 0"}
!24 = distinct !{!24, !"_ZN11SkImageInfo13MakeN32PremulE7SkISize5sk_spI12SkColorSpaceE"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN21SkDrawableGlyphBuffer8drawableEv: argument 0"}
!27 = distinct !{!27, !"_ZN21SkDrawableGlyphBuffer8drawableEv"}
