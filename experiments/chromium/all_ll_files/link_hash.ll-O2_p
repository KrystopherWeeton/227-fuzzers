; ModuleID = '../../third_party/blink/renderer/platform/link_hash.cc'
source_filename = "../../third_party/blink/renderer/platform/link_hash.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::StringUTF8Adaptor" = type <{ %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.url::RawCanonOutput" = type { %"class.url::RawCanonOutputT" }
%"class.url::RawCanonOutputT" = type { %"class.url::CanonOutputT", [2048 x i8] }
%"class.url::CanonOutputT" = type { i32 (...)**, i8*, i32, i32 }
%"class.url::CharsetConverter" = type { i32 (...)** }
%"class.blink::Platform" = type { i32 (...)** }

$_ZN3url14RawCanonOutputILi2048EED0Ev = comdat any

$_ZN3url15RawCanonOutputTIcLi2048EE6ResizeEi = comdat any

$_ZN3url15RawCanonOutputTIcLi2048EED2Ev = comdat any

$_ZN3url15RawCanonOutputTIcLi2048EED0Ev = comdat any

$_ZTVN3url14RawCanonOutputILi2048EEE = comdat any

$_ZTVN3url15RawCanonOutputTIcLi2048EEE = comdat any

@_ZTVN3url14RawCanonOutputILi2048EEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.url::RawCanonOutputT"*)* @_ZN3url15RawCanonOutputTIcLi2048EED2Ev to i8*), i8* bitcast (void (%"class.url::RawCanonOutput"*)* @_ZN3url14RawCanonOutputILi2048EED0Ev to i8*), i8* bitcast (void (%"class.url::RawCanonOutputT"*, i32)* @_ZN3url15RawCanonOutputTIcLi2048EE6ResizeEi to i8*)] }, comdat, align 8
@_ZTVN3url15RawCanonOutputTIcLi2048EEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.url::RawCanonOutputT"*)* @_ZN3url15RawCanonOutputTIcLi2048EED2Ev to i8*), i8* bitcast (void (%"class.url::RawCanonOutputT"*)* @_ZN3url15RawCanonOutputTIcLi2048EED0Ev to i8*), i8* bitcast (void (%"class.url::RawCanonOutputT"*, i32)* @_ZN3url15RawCanonOutputTIcLi2048EE6ResizeEi to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink15VisitedLinkHashERKNS_4KURLERKN3WTF12AtomicStringE(%"class.blink::KURL"* dereferenceable(112), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"struct.url::Parsed", align 8
  %4 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %5 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %6 = alloca %"class.url::RawCanonOutput", align 8
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %78, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.url::RawCanonOutput"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2072, i8* nonnull %11) #7
  %12 = getelementptr inbounds %"class.url::RawCanonOutput", %"class.url::RawCanonOutput"* %6, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 2048, i1 false)
  %13 = getelementptr inbounds %"class.url::RawCanonOutput", %"class.url::RawCanonOutput"* %6, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.url::RawCanonOutput", %"class.url::RawCanonOutput"* %6, i64 0, i32 0, i32 0, i32 1
  %15 = bitcast i8** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #7
  %16 = getelementptr inbounds %"class.url::RawCanonOutput", %"class.url::RawCanonOutput"* %6, i64 0, i32 0, i32 1, i64 0
  store i8* %16, i8** %14, align 8
  %17 = getelementptr inbounds %"class.url::RawCanonOutput", %"class.url::RawCanonOutput"* %6, i64 0, i32 0, i32 0, i32 2
  store i32 2048, i32* %17, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url14RawCanonOutputILi2048EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %18 = bitcast %"struct.url::Parsed"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %18) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 80, i1 false) #7
  call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* nonnull %3) #7
  %19 = bitcast %"class.WTF::StringUTF8Adaptor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 40, i1 false) #7
  %20 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %0, i64 0, i32 4
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %4, %"class.WTF::String"* dereferenceable(8) %20, i32 0) #7
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %40, label %26

26:                                               ; preds = %10
  %27 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  %28 = bitcast %"class.WTF::StringUTF8Adaptor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %28) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 40, i1 false) #7
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %27, i32 0) #7
  %29 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %4, i64 0, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %4, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %0, i64 0, i32 3
  %34 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 1
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %"class.url::RawCanonOutput", %"class.url::RawCanonOutput"* %6, i64 0, i32 0, i32 0
  %39 = call zeroext i1 @_ZN3url15ResolveRelativeEPKciRKNS_6ParsedES1_iPNS_16CharsetConverterEPNS_12CanonOutputTIcEEPS2_(i8* %30, i32 %32, %"struct.url::Parsed"* dereferenceable(80) %33, i8* %35, i32 %37, %"class.url::CharsetConverter"* null, %"class.url::CanonOutputT"* nonnull %38, %"struct.url::Parsed"* nonnull %3) #7
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28) #7
  br label %57

40:                                               ; preds = %10
  %41 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %4, i64 0, i32 1
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %4, i64 0, i32 2
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %0, i64 0, i32 3
  %46 = icmp eq %"class.WTF::StringImpl"* %21, null
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 1
  %48 = bitcast %"class.WTF::StringImpl"* %47 to i16*
  %49 = select i1 %46, i16* null, i16* %48
  br i1 %46, label %53, label %50

50:                                               ; preds = %40
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %40
  %54 = phi i32 [ %52, %50 ], [ 0, %40 ]
  %55 = getelementptr inbounds %"class.url::RawCanonOutput", %"class.url::RawCanonOutput"* %6, i64 0, i32 0, i32 0
  %56 = call zeroext i1 @_ZN3url15ResolveRelativeEPKciRKNS_6ParsedEPKDsiPNS_16CharsetConverterEPNS_12CanonOutputTIcEEPS2_(i8* %42, i32 %44, %"struct.url::Parsed"* dereferenceable(80) %45, i16* %49, i32 %54, %"class.url::CharsetConverter"* null, %"class.url::CanonOutputT"* nonnull %55, %"struct.url::Parsed"* nonnull %3) #7
  br label %57

57:                                               ; preds = %26, %53
  %58 = phi i1 [ %39, %26 ], [ %56, %53 ]
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #7
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %18) #7
  br i1 %58, label %59, label %70

59:                                               ; preds = %57
  %60 = call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #7
  %61 = load i8*, i8** %14, align 8
  %62 = getelementptr inbounds %"class.url::RawCanonOutput", %"class.url::RawCanonOutput"* %6, i64 0, i32 0, i32 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = sext i32 %63 to i64
  %65 = bitcast %"class.blink::Platform"* %60 to i64 (%"class.blink::Platform"*, i8*, i64)***
  %66 = load i64 (%"class.blink::Platform"*, i8*, i64)**, i64 (%"class.blink::Platform"*, i8*, i64)*** %65, align 8
  %67 = getelementptr inbounds i64 (%"class.blink::Platform"*, i8*, i64)*, i64 (%"class.blink::Platform"*, i8*, i64)** %66, i64 14
  %68 = load i64 (%"class.blink::Platform"*, i8*, i64)*, i64 (%"class.blink::Platform"*, i8*, i64)** %67, align 8
  %69 = call i64 %68(%"class.blink::Platform"* %60, i8* %61, i64 %64) #7
  br label %70

70:                                               ; preds = %57, %59
  %71 = phi i64 [ %69, %59 ], [ 0, %57 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIcLi2048EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %72 = load i8*, i8** %14, align 8
  %73 = icmp eq i8* %72, %16
  %74 = icmp eq i8* %72, null
  %75 = or i1 %73, %74
  br i1 %75, label %77, label %76

76:                                               ; preds = %70
  call void @_ZdaPv(i8* nonnull %72) #8
  br label %77

77:                                               ; preds = %70, %76
  call void @llvm.lifetime.end.p0i8(i64 2072, i8* nonnull %11) #7
  br label %78

78:                                               ; preds = %2, %77
  %79 = phi i64 [ %71, %77 ], [ 0, %2 ]
  ret i64 %79
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url14RawCanonOutputILi2048EED0Ev(%"class.url::RawCanonOutput"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.url::RawCanonOutput", %"class.url::RawCanonOutput"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIcLi2048EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.url::RawCanonOutput", %"class.url::RawCanonOutput"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.url::RawCanonOutput", %"class.url::RawCanonOutput"* %0, i64 0, i32 0, i32 1, i64 0
  %6 = icmp eq i8* %4, %5
  %7 = icmp eq i8* %4, null
  %8 = or i1 %6, %7
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #8
  br label %10

10:                                               ; preds = %1, %9
  %11 = bitcast %"class.url::RawCanonOutput"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url15RawCanonOutputTIcLi2048EE6ResizeEi(%"class.url::RawCanonOutputT"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = tail call i8* @_Znam(i64 %3) #8
  %5 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, %1
  %10 = select i1 %9, i32 %8, i32 %1
  %11 = sext i32 %10 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %4, i8* align 1 %6, i64 %11, i1 false)
  %12 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 1, i64 0
  %13 = icmp eq i8* %6, %12
  %14 = icmp eq i8* %6, null
  %15 = or i1 %13, %14
  br i1 %15, label %17, label %16

16:                                               ; preds = %2
  tail call void @_ZdaPv(i8* nonnull %6) #8
  br label %17

17:                                               ; preds = %2, %16
  store i8* %4, i8** %5, align 8
  %18 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 2
  store i32 %1, i32* %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url15RawCanonOutputTIcLi2048EED2Ev(%"class.url::RawCanonOutputT"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIcLi2048EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 1, i64 0
  %6 = icmp eq i8* %4, %5
  %7 = icmp eq i8* %4, null
  %8 = or i1 %6, %7
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #8
  br label %10

10:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url15RawCanonOutputTIcLi2048EED0Ev(%"class.url::RawCanonOutputT"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIcLi2048EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 1, i64 0
  %6 = icmp eq i8* %4, %5
  %7 = icmp eq i8* %4, null
  %8 = or i1 %6, %7
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #8
  br label %10

10:                                               ; preds = %1, %9
  %11 = bitcast %"class.url::RawCanonOutputT"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"*) unnamed_addr #2

declare void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #2

declare zeroext i1 @_ZN3url15ResolveRelativeEPKciRKNS_6ParsedES1_iPNS_16CharsetConverterEPNS_12CanonOutputTIcEEPS2_(i8*, i32, %"struct.url::Parsed"* dereferenceable(80), i8*, i32, %"class.url::CharsetConverter"*, %"class.url::CanonOutputT"*, %"struct.url::Parsed"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"*) unnamed_addr #6

declare zeroext i1 @_ZN3url15ResolveRelativeEPKciRKNS_6ParsedEPKDsiPNS_16CharsetConverterEPNS_12CanonOutputTIcEEPS2_(i8*, i32, %"struct.url::Parsed"* dereferenceable(80), i16*, i32, %"class.url::CharsetConverter"*, %"class.url::CanonOutputT"*, %"struct.url::Parsed"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"*) unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
