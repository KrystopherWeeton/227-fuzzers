; ModuleID = '../../net/quic/web_transport_client.cc'
source_filename = "../../net/quic/web_transport_client.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::WebTransportClientVisitor" = type { i32 (...)** }
%"struct.net::WebTransportParameters" = type { i8, i8, i8, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.quic::CertificateFingerprint"*, %"struct.quic::CertificateFingerprint"*, %"class.std::__1::__compressed_pair.1" }
%"struct.quic::CertificateFingerprint" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.quic::CertificateFingerprint"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.net::WebTransportClient" = type { i32 (...)** }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.9" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.GURL* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.15 }
%union.anon.15 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.16", %"class.absl::optional.16" }
%"class.absl::optional.16" = type { %"class.absl::optional_internal::optional_data.17" }
%"class.absl::optional_internal::optional_data.17" = type { %"class.absl::optional_internal::optional_data_base.18" }
%"class.absl::optional_internal::optional_data_base.18" = type { %"class.absl::optional_internal::optional_data_dtor_base.19" }
%"class.absl::optional_internal::optional_data_dtor_base.19" = type { i8, %union.anon.20 }
%union.anon.20 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.net::URLRequestContext" = type opaque
%"class.std::__1::allocator" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.net::QuicTransportClient" = type { %"class.net::WebTransportClient", %"class.quic::WebTransportVisitor", %"class.net::QuicChromiumPacketReader::Visitor", %"class.net::QuicChromiumPacketWriter::Delegate", %"class.quic::QuicSession::Visitor", %class.GURL, %"class.url::Origin", %"class.net::NetworkIsolationKey", %"class.net::URLRequestContext"*, %"class.net::WebTransportClientVisitor"*, %"class.net::ClientSocketFactory"*, %"class.net::QuicContext"*, %"class.net::NetLogWithSource", %"class.base::SequencedTaskRunner"*, %"class.std::__1::vector.36", %"class.std::__1::unique_ptr.73", %"class.quic::QuicCryptoClientConfig", i32, i32, %"struct.net::WebTransportError", i8, %"class.net::ProxyInfo", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.417", %"class.std::__1::unique_ptr.610", %"class.std::__1::unique_ptr.624", %"class.base::WeakPtrFactory.631" }
%"class.quic::WebTransportVisitor" = type { i32 (...)** }
%"class.net::QuicChromiumPacketReader::Visitor" = type { i32 (...)** }
%"class.net::QuicChromiumPacketWriter::Delegate" = type { i32 (...)** }
%"class.quic::QuicSession::Visitor" = type { i32 (...)** }
%"class.net::ClientSocketFactory" = type { i32 (...)** }
%"class.net::QuicContext" = type { %"class.std::__1::unique_ptr.30", %"struct.net::QuicParams" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.quic::QuicConnectionHelperInterface"* }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"struct.net::QuicParams" = type { %"class.std::__1::vector.36", %"class.std::__1::basic_string", i64, i64, %"class.std::__1::set", %"class.std::__1::vector.51", %"class.std::__1::vector.51", i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i32, i8, i8, i8, i8, i8, i8, i8, %"class.base::TimeDelta", i8, i8, i32 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { i64 }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { i32*, i32*, %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { i32* }
%"class.base::TimeDelta" = type { i64 }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.58", %"class.std::__1::vector.65" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.60" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.65" = type { %"class.std::__1::__vector_base.66" }
%"class.std::__1::__vector_base.66" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.67" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.72" }
%"struct.std::__1::__atomic_base.72" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.38" }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.net::QuicChromiumAlarmFactory"* }
%"class.net::QuicChromiumAlarmFactory" = type opaque
%"class.quic::QuicCryptoClientConfig" = type <{ %"class.quic::QuicCryptoConfig", %"class.std::__1::map", %"class.std::__1::map.88", %"class.std::__1::vector.97", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.122", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.quic::QuicCryptoConfig" = type { %"class.std::__1::vector.51", %"class.std::__1::vector.51", %"class.quic::CommonCertSets"* }
%"class.quic::CommonCertSets" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.79" }
%"class.std::__1::__tree.79" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::map.88" = type { %"class.std::__1::__tree.89" }
%"class.std::__1::__tree.89" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.90", %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.quic::ProofVerifier"* }
%"class.quic::ProofVerifier" = type { i32 (...)** }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.quic::SessionCache"* }
%"class.quic::SessionCache" = type { i32 (...)** }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.quic::ProofSource"* }
%"class.quic::ProofSource" = type { i32 (...)** }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %struct.ssl_ctx_st* }
%struct.ssl_ctx_st = type opaque
%"struct.net::WebTransportError" = type <{ i32, i32, %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.net::ProxyInfo" = type { %"class.net::ProxyList", %"class.std::__1::map.133", %"struct.net::MutableNetworkTrafficAnnotationTag", i8, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.net::ProxyList" = type { %"class.std::__1::vector.126" }
%"class.std::__1::vector.126" = type { %"class.std::__1::__vector_base.127" }
%"class.std::__1::__vector_base.127" = type { %"class.net::ProxyServer"*, %"class.net::ProxyServer"*, %"class.std::__1::__compressed_pair.128" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.net::ProxyServer"* }
%"class.std::__1::map.133" = type { %"class.std::__1::__tree.134" }
%"class.std::__1::__tree.134" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.135", %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.net::MutableNetworkTrafficAnnotationTag" = type { i32 }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.net::ProxyResolutionRequest"* }
%"class.net::ProxyResolutionRequest" = type opaque
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.net::HostResolver::ResolveHostRequest"* }
%"class.net::HostResolver::ResolveHostRequest" = type { i32 (...)** }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.net::DatagramClientSocket"* }
%"class.net::DatagramClientSocket" = type { %"class.net::DatagramSocket", %"class.net::Socket" }
%"class.net::DatagramSocket" = type { i32 (...)** }
%"class.net::Socket" = type { i32 (...)**, %"class.std::__1::vector.97" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.quic::QuicConnection"* }
%"class.quic::QuicConnection" = type <{ %"class.quic::QuicFramerVisitorInterface", %"class.quic::QuicBlockedWriterInterface", %"class.quic::QuicPacketCreator::DelegateInterface", %"class.quic::QuicSentPacketManager::NetworkChangeVisitor", %"class.quic::QuicNetworkBlackholeDetector::Delegate", %"class.quic::QuicIdleNetworkDetector::Delegate", %"class.quic::QuicPathValidator::SendDelegate", %"class.quic::QuicConnectionIdManagerVisitorInterface", %"class.quic::QuicFramer", i8, i8, i8, i8, [4 x i8], %"class.quic::QuicConnectionHelperInterface"*, %"class.quic::QuicAlarmFactory"*, %"struct.quic::PerPacketOptions"*, %"class.quic::QuicPacketWriter"*, i8, i8, [6 x i8], %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", i8, i8, [2 x i8], %"class.quic::QuicSocketAddress", [4 x i8], %"struct.quic::QuicConnection::PathState", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], i64, i8*, i8, [7 x i8], %"struct.quic::QuicPacketHeader", i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.std::__1::deque", %"class.quiche::QuicheCircularDeque", i64, i64, %"class.std::__1::unique_ptr.215", i32, [4 x i8], i64, %"struct.quic::QuicConnectionStats", %"class.quic::UberReceivedPacketManager", i32, i8, i8, [2 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i32, i32, %"class.quic::QuicOneBlockArena", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicConnectionVisitorInterface"*, %"class.quic::QuicConnectionDebugVisitor"*, %"class.quic::QuicPacketCreator", %"class.quic::QuicTime", %"class.quic::QuicSentPacketManager", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", [4 x i8], %"class.quic::QuicConnectionId", i8, [7 x i8], %"class.std::__1::vector.36", i64, i16, [6 x i8], i64, i64, i64, i8, i8, [6 x i8], i64, i64, i8, i8, i8, i8, %"struct.std::__1::array.182", i32, i8, i8, i8, [5 x i8], %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.342", %"class.quic::QuicTime::Delta", %"class.std::__1::unique_ptr.364", %"class.quiche::QuicheCircularDeque.370", %"class.quiche::QuicheCircularDeque.373", %"class.std::__1::vector.376", %"class.absl::optional.383", %"class.quic::QuicConnectionId", %"class.absl::optional.383", %"class.std::__1::list", %"class.quic::QuicCoalescedPacket", %"class.quic::QuicConnectionMtuDiscoverer", %"class.quic::QuicNetworkBlackholeDetector", %"class.quic::QuicIdleNetworkDetector", i8, i8, i8, i8, [4 x i8], %"class.std::__1::basic_string", i8, [7 x i8], i64, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPathValidator", %"struct.quic::QuicConnection::PathState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%"class.quic::QuicFramerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicBlockedWriterInterface" = type { i32 (...)** }
%"class.quic::QuicPacketCreator::DelegateInterface" = type { i32 (...)** }
%"class.quic::QuicSentPacketManager::NetworkChangeVisitor" = type { i32 (...)** }
%"class.quic::QuicNetworkBlackholeDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicIdleNetworkDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicPathValidator::SendDelegate" = type { i32 (...)** }
%"class.quic::QuicConnectionIdManagerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicFramer" = type { i32 (...)**, %"class.std::__1::basic_string", %"class.quic::QuicFramerVisitorInterface"*, i32, %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::ParsedQuicVersion", %"class.std::__1::vector.36", [4 x %"class.std::__1::unique_ptr.168"], i8, i8, i8, [4 x %"class.std::__1::unique_ptr.174"], i8, i8, %"struct.std::__1::array", i8, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", i8, i8, i8, %"class.quic::QuicPacketNumber", i64, %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168", %"class.quic::QuicPacketNumber", %"class.quic::QuicStreamFrameDataProducer"*, i8, i8, i8, i8, i8, i8, i64, i32, i32, i64 }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.quic::QuicEncrypter"* }
%"class.quic::QuicEncrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicCrypter" = type { i32 (...)** }
%"struct.std::__1::array" = type { [32 x i8] }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.quic::QuicDecrypter"* }
%"class.quic::QuicDecrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicStreamFrameDataProducer" = type { i32 (...)** }
%"class.quic::QuicAlarmFactory" = type { i32 (...)** }
%"struct.quic::PerPacketOptions" = type <{ i32 (...)**, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicPacketWriter" = type { i32 (...)** }
%"class.quic::QuicClock" = type { i32 (...)**, i8, %"class.quic::QuicTime::Delta" }
%"class.quic::QuicRandom" = type { i32 (...)** }
%"struct.quic::QuicPacketHeader" = type { %"class.quic::QuicConnectionId", i8, %"class.quic::QuicConnectionId", i8, i8, i8, i8, i8, i8, %"struct.quic::ParsedQuicVersion", %"struct.std::__1::array"*, %"class.quic::QuicPacketNumber", i8, i8, %"struct.std::__1::array.182", i8, %"class.absl::string_view", i8, i64 }
%"class.absl::string_view" = type { i8*, i64 }
%"class.quic::QuicPacketNumber" = type { i64 }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.209" }
%"struct.std::__1::__split_buffer" = type { %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"class.std::__1::__compressed_pair.204" }
%"struct.quic::QuicConnection::UndecryptablePacket" = type <{ %"class.std::__1::unique_ptr.198", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.quic::QuicEncryptedPacket"* }
%"class.quic::QuicEncryptedPacket" = type { %"class.quic::QuicData.base", [7 x i8] }
%"class.quic::QuicData.base" = type <{ i32 (...)**, i8*, i64, i8 }>
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.quic::QuicConnection::UndecryptablePacket"** }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.quiche::QuicheCircularDeque" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" = type { %"class.std::__1::unique_ptr.198"*, i64 }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.std::__1::vector.218"* }
%"class.std::__1::vector.218" = type opaque
%"struct.quic::QuicConnectionStats" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, float, i32, i32, i64, i64, i64, i64, %"class.quic::QuicTimeAccumulator", i32, i32, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.quic::QuicBandwidth", i64, i64, i64, i64, i64, i32, %"class.quic::QuicTime", %"class.quic::QuicTime", i64, i64, i64, i8, i64, i64, i64, i8, i8, %"class.quic::QuicPacketNumber", i64, i64, i64, i32, i64, i64, i8, i8, i64, i64, i64, i64, i64, i64, i64, i64, %"class.absl::optional.222", %"class.absl::optional.222", %"class.absl::optional.222" }
%"class.quic::QuicTimeAccumulator" = type { %"class.quic::QuicTime::Delta", %"class.quic::QuicTime" }
%"class.quic::QuicBandwidth" = type { i64 }
%"class.absl::optional.222" = type { %"class.absl::optional_internal::optional_data.223" }
%"class.absl::optional_internal::optional_data.223" = type { %"class.absl::optional_internal::optional_data_base.224" }
%"class.absl::optional_internal::optional_data_base.224" = type { %"class.absl::optional_internal::optional_data_dtor_base.225" }
%"class.absl::optional_internal::optional_data_dtor_base.225" = type { i8, %union.anon.226 }
%union.anon.226 = type { %"struct.quic::QuicConnectionStats::TlsServerOperationStats" }
%"struct.quic::QuicConnectionStats::TlsServerOperationStats" = type { i8, %"class.quic::QuicTime::Delta" }
%"class.quic::UberReceivedPacketManager" = type <{ i32 (...)**, [3 x %"class.quic::QuicReceivedPacketManager"], i8, [7 x i8] }>
%"class.quic::QuicReceivedPacketManager" = type { i32 (...)**, %"class.quic::QuicPacketNumber", %"struct.quic::QuicAckFrame", i8, i64, %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", %"struct.quic::QuicConnectionStats"*, i64, i64, i64, float, i8, i8, i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", i64 }
%"struct.quic::QuicAckFrame" = type { %"class.quic::QuicPacketNumber", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.227", %"class.quic::PacketNumberQueue", i8, i64, i64, i64 }
%"class.std::__1::vector.227" = type { %"class.std::__1::__vector_base.228" }
%"class.std::__1::__vector_base.228" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.229" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::pair"* }
%"class.quic::PacketNumberQueue" = type { %"class.quic::QuicIntervalSet" }
%"class.quic::QuicIntervalSet" = type { %"class.absl::btree_set" }
%"class.absl::btree_set" = type { %"class.absl::container_internal::btree_set_container" }
%"class.absl::container_internal::btree_set_container" = type { %"class.absl::container_internal::btree_container" }
%"class.absl::container_internal::btree_container" = type { %"class.absl::container_internal::btree" }
%"class.absl::container_internal::btree" = type { %"class.absl::container_internal::CompressedTuple", %"class.absl::container_internal::btree_node"*, i64 }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.237" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.237" = type { %"class.absl::container_internal::btree_node"* }
%"class.absl::container_internal::btree_node" = type { i8 }
%"class.quic::QuicOneBlockArena" = type { [1056 x i8], i32, [4 x i8] }
%"class.quic::QuicArenaScopedPtr" = type { i8* }
%"class.quic::QuicConnectionVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicConnectionDebugVisitor" = type { %"class.quic::QuicSentPacketManager::DebugDelegate" }
%"class.quic::QuicSentPacketManager::DebugDelegate" = type { i32 (...)** }
%"class.quic::QuicPacketCreator" = type <{ %"class.quic::QuicPacketCreator::DelegateInterface"*, %"class.quic::QuicPacketCreator::DebugDelegate"*, %"class.quic::QuicFramer"*, %"class.quic::QuicRandom"*, i8, i8, %"struct.std::__1::array", [6 x i8], i64, i64, i8, [7 x i8], %"class.std::__1::vector.238", i64, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::SerializedPacket", %"class.std::__1::basic_string", i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPacketNumber", i64, i64, i8, [7 x i8] }>
%"class.quic::QuicPacketCreator::DebugDelegate" = type { i32 (...)** }
%"class.std::__1::vector.238" = type { %"class.std::__1::__vector_base.239" }
%"class.std::__1::__vector_base.239" = type { %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"*, %"class.std::__1::__compressed_pair.266" }
%"struct.quic::QuicFrame" = type { %union.anon.240 }
%union.anon.240 = type { %"struct.quic::QuicStreamFrame" }
%"struct.quic::QuicStreamFrame" = type { i8, i8, i16, i32, i8*, i64 }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"struct.quic::QuicFrame"* }
%"struct.quic::SerializedPacket" = type <{ i8*, i16, [6 x i8], %"class.std::__1::function", %"class.std::__1::vector.238", %"class.std::__1::vector.238", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, i8, [3 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i8*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.quic::QuicTime" = type { i64 }
%"class.quic::QuicSentPacketManager" = type <{ i32 (...)**, %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"struct.quic::QuicConnectionStats"*, %"class.quic::QuicSentPacketManager::DebugDelegate"*, %"class.quic::QuicSentPacketManager::NetworkChangeVisitor"*, i64, %"class.quic::RttStats", %"class.std::__1::unique_ptr.183", %"class.quic::LossDetectionInterface"*, %"class.quic::UberLossAlgorithm", %"class.quic::QuicPacketNumber", i64, i64, i64, i64, i64, i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.290", %"class.std::__1::vector.297", %"class.quic::QuicPacketNumber", i16, [6 x i8], %"class.quic::PacingSender", i8, [7 x i8], %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i8, [7 x i8], %"class.quiche::QuicheCircularDeque.304", %"struct.quic::QuicAckFrame", i8, [7 x i8], %"class.std::__1::reverse_iterator", i8, [7 x i8], i64, i64, i8, i8, i8, [5 x i8], i64, i32, [4 x i8], i64, i8, i8, i8, i8, float, i8, [3 x i8], float, i32, i8, [3 x i8] }>
%"class.quic::QuicUnackedPacketMap" = type <{ i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quiche::QuicheCircularDeque.271", %"class.quic::QuicPacketNumber", i64, [3 x i64], i64, %"class.quic::QuicTime", [3 x %"class.quic::QuicTime"], %"class.quic::QuicTime", %"struct.quic::QuicStreamFrame", %"class.quic::SessionNotifierInterface"*, i8, i8, [6 x i8] }>
%"class.quiche::QuicheCircularDeque.271" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" = type { %"struct.quic::QuicTransmissionInfo"*, i64 }
%"struct.quic::QuicTransmissionInfo" = type { %"class.std::__1::vector.238", %"class.quic::QuicTime", i16, i8, i8, i8, i8, i8, i8, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber" }
%"class.quic::SessionNotifierInterface" = type { i32 (...)** }
%"class.quic::RttStats" = type <{ %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"struct.quic::RttStats::StandardDeviationCaculator", i8, [7 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", i8, [7 x i8] }>
%"struct.quic::RttStats::StandardDeviationCaculator" = type { i8, double }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.quic::SendAlgorithmInterface"* }
%"class.quic::SendAlgorithmInterface" = type { i32 (...)** }
%"class.quic::LossDetectionInterface" = type { i32 (...)** }
%"class.quic::UberLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", [3 x %"class.quic::GeneralLossAlgorithm"], %"class.std::__1::unique_ptr.274", %"struct.quic::LossDetectionParameters", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.quic::GeneralLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", %"class.quic::LossDetectionInterface"*, %"class.quic::QuicTime", i32, [4 x i8], i64, i8, i8, i8, [5 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.quic::LossDetectionTunerInterface"* }
%"class.quic::LossDetectionTunerInterface" = type { i32 (...)** }
%"struct.quic::LossDetectionParameters" = type { %"class.absl::optional.280", %"class.absl::optional.285" }
%"class.absl::optional.280" = type { %"class.absl::optional_internal::optional_data.281" }
%"class.absl::optional_internal::optional_data.281" = type { %"class.absl::optional_internal::optional_data_base.282" }
%"class.absl::optional_internal::optional_data_base.282" = type { %"class.absl::optional_internal::optional_data_dtor_base.283" }
%"class.absl::optional_internal::optional_data_dtor_base.283" = type { i8, %union.anon.284 }
%union.anon.284 = type { i32 }
%"class.absl::optional.285" = type { %"class.absl::optional_internal::optional_data.286" }
%"class.absl::optional_internal::optional_data.286" = type { %"class.absl::optional_internal::optional_data_base.287" }
%"class.absl::optional_internal::optional_data_base.287" = type { %"class.absl::optional_internal::optional_data_dtor_base.288" }
%"class.absl::optional_internal::optional_data_dtor_base.288" = type { i8, %union.anon.289 }
%union.anon.289 = type { i64 }
%"class.std::__1::vector.290" = type { %"class.std::__1::__vector_base.291" }
%"class.std::__1::__vector_base.291" = type { %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"*, %"class.std::__1::__compressed_pair.292" }
%"struct.quic::AckedPacket" = type { %"class.quic::QuicPacketNumber", i16, %"class.quic::QuicTime" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"struct.quic::AckedPacket"* }
%"class.std::__1::vector.297" = type { %"class.std::__1::__vector_base.298" }
%"class.std::__1::__vector_base.298" = type { %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"*, %"class.std::__1::__compressed_pair.299" }
%"struct.quic::LostPacket" = type <{ %"class.quic::QuicPacketNumber", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"struct.quic::LostPacket"* }
%"class.quic::PacingSender" = type <{ %"class.quic::SendAlgorithmInterface"*, %"class.quic::QuicBandwidth", i32, [4 x i8], %"class.quic::QuicTime", i32, i32, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicSustainedBandwidthRecorder" = type { i8, i8, i8, %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth", i64, %"class.quic::QuicTime" }
%"class.quiche::QuicheCircularDeque.304" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" = type { %"struct.std::__1::pair.307"*, i64 }
%"struct.std::__1::pair.307" = type opaque
%"class.std::__1::reverse_iterator" = type { %"struct.absl::container_internal::btree_iterator", %"struct.absl::container_internal::btree_iterator" }
%"struct.absl::container_internal::btree_iterator" = type <{ %"class.absl::container_internal::btree_node"*, i32, [4 x i8] }>
%"class.quic::QuicSocketAddress" = type <{ %"class.quic::QuicIpAddress", i16, [2 x i8] }>
%"class.quic::QuicIpAddress" = type { %union.anon.180, i32 }
%union.anon.180 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.181 }
%union.anon.181 = type { [4 x i32] }
%"struct.std::__1::array.182" = type { [16 x i8] }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.quic::QuicPeerIssuedConnectionIdManager"* }
%"class.quic::QuicPeerIssuedConnectionIdManager" = type { i64, %"class.quic::QuicClock"*, %"class.std::__1::unique_ptr.311", %"class.std::__1::vector.318", %"class.std::__1::vector.318", %"class.std::__1::vector.318", %"class.quic::QuicIntervalSet.325", i64 }
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.quic::QuicAlarm"* }
%"class.quic::QuicAlarm" = type { i32 (...)**, %"class.quic::QuicArenaScopedPtr.314", %"class.quic::QuicTime" }
%"class.quic::QuicArenaScopedPtr.314" = type { i8* }
%"class.std::__1::vector.318" = type { %"class.std::__1::__vector_base.319" }
%"class.std::__1::__vector_base.319" = type { %"struct.quic::QuicConnectionIdData"*, %"struct.quic::QuicConnectionIdData"*, %"class.std::__1::__compressed_pair.320" }
%"struct.quic::QuicConnectionIdData" = type { %"class.quic::QuicConnectionId", i64, %"struct.std::__1::array.182" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"struct.quic::QuicConnectionIdData"* }
%"class.quic::QuicIntervalSet.325" = type { %"class.absl::btree_set.326" }
%"class.absl::btree_set.326" = type { %"class.absl::container_internal::btree_set_container.327" }
%"class.absl::container_internal::btree_set_container.327" = type { %"class.absl::container_internal::btree_container.328" }
%"class.absl::container_internal::btree_container.328" = type { %"class.absl::container_internal::btree.329" }
%"class.absl::container_internal::btree.329" = type { %"class.absl::container_internal::CompressedTuple.330", %"class.absl::container_internal::btree_node.337"*, i64 }
%"class.absl::container_internal::CompressedTuple.330" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.331" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.331" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.336" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.336" = type { %"class.absl::container_internal::btree_node.337"* }
%"class.absl::container_internal::btree_node.337" = type { i8 }
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.quic::QuicSelfIssuedConnectionIdManager"* }
%"class.quic::QuicSelfIssuedConnectionIdManager" = type { i32 (...)**, i64, %"class.quic::QuicClock"*, %"class.quic::QuicConnectionIdManagerVisitorInterface"*, %"class.std::__1::vector.345", %"class.std::__1::vector.353", %"class.std::__1::unique_ptr.311", %"class.quic::QuicConnectionId", i64, i64 }
%"class.std::__1::vector.345" = type { %"class.std::__1::__vector_base.346" }
%"class.std::__1::__vector_base.346" = type { %"struct.std::__1::pair.347"*, %"struct.std::__1::pair.347"*, %"class.std::__1::__compressed_pair.348" }
%"struct.std::__1::pair.347" = type opaque
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"struct.std::__1::pair.347"* }
%"class.std::__1::vector.353" = type { %"class.std::__1::__vector_base.354" }
%"class.std::__1::__vector_base.354" = type { %"struct.std::__1::pair.355"*, %"struct.std::__1::pair.355"*, %"class.std::__1::__compressed_pair.356" }
%"struct.std::__1::pair.355" = type opaque
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"struct.std::__1::pair.355"* }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"struct.std::__1::array.257"* }
%"struct.std::__1::array.257" = type { [8 x i8] }
%"class.quiche::QuicheCircularDeque.370" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" = type { %"struct.std::__1::array.257"*, i64 }
%"class.quiche::QuicheCircularDeque.373" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" = type { %"struct.quic::QuicConnection::PendingPathChallenge"*, i64 }
%"struct.quic::QuicConnection::PendingPathChallenge" = type { %"struct.std::__1::array.257", %"class.quic::QuicSocketAddress" }
%"class.std::__1::vector.376" = type { %"class.std::__1::__vector_base.377" }
%"class.std::__1::__vector_base.377" = type { %"class.quic::QuicConnectionId"*, %"class.quic::QuicConnectionId"*, %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.quic::QuicConnectionId"* }
%"class.quic::QuicConnectionId" = type { %union.anon.165 }
%union.anon.165 = type { %struct.anon.167 }
%struct.anon.167 = type { i8, i8* }
%"class.absl::optional.383" = type { %"class.absl::optional_internal::optional_data.384" }
%"class.absl::optional_internal::optional_data.384" = type { %"class.absl::optional_internal::optional_data_base.385" }
%"class.absl::optional_internal::optional_data_base.385" = type { %"class.absl::optional_internal::optional_data_dtor_base.386" }
%"class.absl::optional_internal::optional_data_dtor_base.386" = type { i8, %union.anon.387 }
%union.anon.387 = type { %"class.quic::QuicConnectionId" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.388" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.quic::QuicCoalescedPacket" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", i16, i16, [4 x %"class.std::__1::basic_string"], [4 x i8], %"class.std::__1::unique_ptr.392" }
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"struct.quic::SerializedPacket"* }
%"class.quic::QuicConnectionMtuDiscoverer" = type { i16, i16, i16, i16, i64, %"class.quic::QuicPacketNumber" }
%"class.quic::QuicNetworkBlackholeDetector" = type { %"class.quic::QuicNetworkBlackholeDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicArenaScopedPtr" }
%"class.quic::QuicIdleNetworkDetector" = type <{ %"class.quic::QuicIdleNetworkDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicArenaScopedPtr", i8, [7 x i8] }>
%"class.quic::QuicPathValidator" = type { %"class.std::__1::vector.398", %"class.quic::QuicPathValidator::SendDelegate"*, %"class.quic::QuicRandom"*, %"class.std::__1::unique_ptr.402", %"class.std::__1::unique_ptr.408", %"class.quic::QuicArenaScopedPtr", i64 }
%"class.std::__1::vector.398" = type { %"class.std::__1::__vector_base.399" }
%"class.std::__1::__vector_base.399" = type { %"struct.std::__1::array.257"*, %"struct.std::__1::array.257"*, %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.quic::QuicPathValidationContext"* }
%"class.quic::QuicPathValidationContext" = type { i32 (...)**, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.quic::QuicPathValidator::ResultDelegate"* }
%"class.quic::QuicPathValidator::ResultDelegate" = type { i32 (...)** }
%"struct.quic::QuicConnection::PathState" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.std::__1::array.182", i8, i8, i64, i64, %"class.std::__1::unique_ptr.183", %"class.absl::optional.189" }
%"class.absl::optional.189" = type { %"class.absl::optional_internal::optional_data.190" }
%"class.absl::optional_internal::optional_data.190" = type { %"class.absl::optional_internal::optional_data_base.191" }
%"class.absl::optional_internal::optional_data_base.191" = type { %"class.absl::optional_internal::optional_data_dtor_base.192" }
%"class.absl::optional_internal::optional_data_dtor_base.192" = type { i8, [7 x i8], %union.anon.193 }
%union.anon.193 = type { %"class.quic::RttStats" }
%"class.std::__1::unique_ptr.417" = type { %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"class.quic::QuicTransportClientSession"* }
%"class.quic::QuicTransportClientSession" = type { %"class.quic::QuicSession.base", %"class.quic::WebTransportSession", %"class.quic::QuicTransportSessionInterface", %"class.quic::QuicCryptoClientStream::ProofHandler", %"class.std::__1::unique_ptr.585", %class.GURL, %"class.url::Origin", %"class.quic::WebTransportVisitor"*, i8, i8, i8, %"class.quiche::QuicheCircularDeque.598", %"class.quiche::QuicheCircularDeque.598" }
%"class.quic::QuicSession.base" = type <{ %"class.quic::QuicConnectionVisitorInterface", %"class.quic::SessionNotifierInterface", %"class.quic::QuicStreamFrameDataProducer", %"class.quic::QuicStreamIdManager::DelegateInterface", %"class.quic::HandshakerDelegateInterface", %"class.quic::StreamDelegateInterface", %"class.quic::QuicControlFrameManager::DelegateInterface", %"class.absl::flat_hash_map", %"class.quic::QuicConnection"*, i8, [7 x i8], %"class.quic::QuicSession::Visitor"*, %"class.quic::QuicWriteBlockedList", %"class.std::__1::vector.468", %"class.quic::QuicConfig", %"class.absl::flat_hash_map.524", %"class.absl::flat_hash_map.533", %"class.quic::LegacyQuicStreamIdManager", %"class.quic::UberQuicStreamIdManager", i64, i64, i64, i64, %"struct.quic::QuicConnectionCloseFrame", %"class.quic::QuicFlowController", i32, i8, i8, [2 x i8], %"class.quic::QuicControlFrameManager", i32, [4 x i8], %"class.quic::QuicDatagramQueue", %"class.quiche::QuicheLinkedHashMap", %"class.std::__1::unique_ptr.311", %"class.std::__1::vector.36", %"class.absl::optional.580", i8, i8, i8, i8 }>
%"class.quic::QuicStreamIdManager::DelegateInterface" = type { i32 (...)** }
%"class.quic::HandshakerDelegateInterface" = type { i32 (...)** }
%"class.quic::StreamDelegateInterface" = type { i32 (...)** }
%"class.quic::QuicControlFrameManager::DelegateInterface" = type { i32 (...)** }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple.420" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple.420" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.421" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.421" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.422" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.422" = type { i64 }
%"class.quic::QuicWriteBlockedList" = type { %"class.http2::PriorityWriteScheduler", [8 x i32], [8 x i64], i8, %"class.quic::QuicWriteBlockedList::StaticStreamCollection" }
%"class.http2::PriorityWriteScheduler" = type <{ %"class.http2::WriteScheduler", i64, [8 x %"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo"], %"class.std::__1::unordered_map", i32, [4 x i8] }>
%"class.http2::WriteScheduler" = type { i32 (...)** }
%"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo" = type { %"class.std::__1::deque.430", i64 }
%"class.std::__1::deque.430" = type { %"class.std::__1::__deque_base.431" }
%"class.std::__1::__deque_base.431" = type { %"struct.std::__1::__split_buffer.432", i64, %"class.std::__1::__compressed_pair.438" }
%"struct.std::__1::__split_buffer.432" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"class.std::__1::__compressed_pair.433" }
%"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo" = type { i8, i32, i8 }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"*** }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.442", %"class.std::__1::__compressed_pair.450", %"class.std::__1::__compressed_pair.455", %"class.std::__1::__compressed_pair.458", [4 x i8] }>
%"class.std::__1::unique_ptr.442" = type { %"class.std::__1::__compressed_pair.443" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444", %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { float }
%"class.quic::QuicWriteBlockedList::StaticStreamCollection" = type { i64, %"class.std::__1::vector.461" }
%"class.std::__1::vector.461" = type { %"class.std::__1::__vector_base.462" }
%"class.std::__1::__vector_base.462" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"class.std::__1::__compressed_pair.463" }
%"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair" = type { i32, i8 }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"* }
%"class.std::__1::vector.468" = type { %"class.std::__1::__vector_base.469" }
%"class.std::__1::__vector_base.469" = type { %"class.std::__1::unique_ptr.470"*, %"class.std::__1::unique_ptr.470"*, %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.quic::QuicStream"* }
%"class.quic::QuicStream" = type <{ %"class.quic::QuicStreamSequencer::StreamInterface", %"class.quic::QuicStreamSequencer", i32, [4 x i8], %"class.quic::QuicSession"*, %"class.quic::StreamDelegateInterface"*, %"class.spdy::StreamPrecedence", i64, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.absl::optional.480", %"class.quic::QuicFlowController"*, i8, [7 x i8], i64, i8, [7 x i8], %"class.quic::QuicStreamSendBuffer", i64, i8, [7 x i8], %"class.quic::QuicTime", i8, [3 x i8], i32, %"class.quic::QuicTime", i8, [7 x i8] }>
%"class.quic::QuicStreamSequencer::StreamInterface" = type { i32 (...)** }
%"class.quic::QuicStreamSequencer" = type <{ i32 (...)**, %"class.quic::QuicStreamSequencer::StreamInterface"*, %"class.quic::QuicStreamSequencerBuffer", i64, i64, i8, [3 x i8], i32, i32, i8, i8, [2 x i8] }>
%"class.quic::QuicStreamSequencerBuffer" = type { i64, i64, i64, i64, i8, %"class.std::__1::unique_ptr.473", i64, %"class.quic::QuicIntervalSet.325" }
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"struct.quic::QuicStreamSequencerBuffer::BufferBlock"** }
%"struct.quic::QuicStreamSequencerBuffer::BufferBlock" = type { [8192 x i8] }
%"class.quic::QuicSession" = type <{ %"class.quic::QuicConnectionVisitorInterface", %"class.quic::SessionNotifierInterface", %"class.quic::QuicStreamFrameDataProducer", %"class.quic::QuicStreamIdManager::DelegateInterface", %"class.quic::HandshakerDelegateInterface", %"class.quic::StreamDelegateInterface", %"class.quic::QuicControlFrameManager::DelegateInterface", %"class.absl::flat_hash_map", %"class.quic::QuicConnection"*, i8, [7 x i8], %"class.quic::QuicSession::Visitor"*, %"class.quic::QuicWriteBlockedList", %"class.std::__1::vector.468", %"class.quic::QuicConfig", %"class.absl::flat_hash_map.524", %"class.absl::flat_hash_map.533", %"class.quic::LegacyQuicStreamIdManager", %"class.quic::UberQuicStreamIdManager", i64, i64, i64, i64, %"struct.quic::QuicConnectionCloseFrame", %"class.quic::QuicFlowController", i32, i8, i8, [2 x i8], %"class.quic::QuicControlFrameManager", i32, [4 x i8], %"class.quic::QuicDatagramQueue", %"class.quiche::QuicheLinkedHashMap", %"class.std::__1::unique_ptr.311", %"class.std::__1::vector.36", %"class.absl::optional.580", i8, i8, i8, i8, [4 x i8] }>
%"class.spdy::StreamPrecedence" = type { i8, %union.anon.479 }
%union.anon.479 = type { %"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" }
%"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" = type { i32, i32, i8 }
%"class.absl::optional.480" = type { %"class.absl::optional_internal::optional_data.481" }
%"class.absl::optional_internal::optional_data.481" = type { %"class.absl::optional_internal::optional_data_base.482" }
%"class.absl::optional_internal::optional_data_base.482" = type { %"class.absl::optional_internal::optional_data_dtor_base.483" }
%"class.absl::optional_internal::optional_data_dtor_base.483" = type { i8, %union.anon.484 }
%union.anon.484 = type { %"class.quic::QuicFlowController" }
%"class.quic::QuicStreamSendBuffer" = type <{ i64, %"class.quic::QuicIntervalDeque", i64, %"class.quic::QuicBufferAllocator"*, i64, i64, %"class.quic::QuicIntervalSet.325", %"class.quic::QuicIntervalSet.325", i32, [4 x i8] }>
%"class.quic::QuicIntervalDeque" = type { %"class.quiche::QuicheCircularDeque.487", %"class.absl::optional.285" }
%"class.quiche::QuicheCircularDeque.487" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" = type { %"struct.quic::BufferedSlice"*, i64 }
%"struct.quic::BufferedSlice" = type { %"class.quic::QuicMemSlice", i64 }
%"class.quic::QuicMemSlice" = type { %"class.quic::QuicMemSliceImpl" }
%"class.quic::QuicMemSliceImpl" = type { %class.scoped_refptr, i64 }
%class.scoped_refptr = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.260", i8* }
%"class.base::RefCountedThreadSafe.260" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.quic::QuicBufferAllocator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.std::__1::unique_ptr.470"* }
%"class.quic::QuicConfig" = type { i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, %"class.quic::QuicFixedTagVector", %"class.quic::QuicFixedTagVector", %"class.quic::QuicTime::Delta", %"class.absl::optional.498", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint32", i8, i8, [6 x i8], %"class.quic::QuicFixedSocketAddress", %"class.quic::QuicFixedSocketAddress", %"class.absl::optional.503", %"class.quic::QuicFixedStatelessResetToken", %"class.std::__1::vector.51", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.absl::optional.383", %"class.absl::optional.383", %"class.absl::optional.383", %"class.absl::optional.383", %"class.absl::optional.383", %"class.absl::optional.383", %"class.absl::flat_hash_map.509", %"class.absl::flat_hash_map.509" }
%"class.quic::QuicFixedTagVector" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"class.std::__1::vector.51", %"class.std::__1::vector.51" }
%"class.quic::QuicConfigValue.base" = type <{ i32 (...)**, i32, i8 }>
%"class.absl::optional.498" = type { %"class.absl::optional_internal::optional_data.499" }
%"class.absl::optional_internal::optional_data.499" = type { %"class.absl::optional_internal::optional_data_base.500" }
%"class.absl::optional_internal::optional_data_base.500" = type { %"class.absl::optional_internal::optional_data_dtor_base.501" }
%"class.absl::optional_internal::optional_data_dtor_base.501" = type { i8, %union.anon.502 }
%union.anon.502 = type { %"class.quic::QuicTime::Delta" }
%"class.quic::QuicFixedSocketAddress" = type { %"class.quic::QuicConfigValue.base", i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.absl::optional.503" = type { %"class.absl::optional_internal::optional_data.504" }
%"class.absl::optional_internal::optional_data.504" = type { %"class.absl::optional_internal::optional_data_base.505" }
%"class.absl::optional_internal::optional_data_base.505" = type { %"class.absl::optional_internal::optional_data_dtor_base.506" }
%"class.absl::optional_internal::optional_data_dtor_base.506" = type { i8, %union.anon.507 }
%union.anon.507 = type { %"struct.std::__1::pair.508" }
%"struct.std::__1::pair.508" = type { %"class.quic::QuicConnectionId", %"struct.std::__1::array.182" }
%"class.quic::QuicFixedStatelessResetToken" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"struct.std::__1::array.182", %"struct.std::__1::array.182", i8 }
%"class.quic::QuicFixedUint32" = type { %"class.quic::QuicConfigValue.base", i8, i8, i32, i32 }
%"class.quic::QuicFixedUint62" = type { %"class.quic::QuicConfigValue.base", i8, i8, i64, i64 }
%"class.absl::flat_hash_map.509" = type { %"class.absl::container_internal::raw_hash_map.510" }
%"class.absl::container_internal::raw_hash_map.510" = type { %"class.absl::container_internal::raw_hash_set.511" }
%"class.absl::container_internal::raw_hash_set.511" = type { i8*, %"union.absl::container_internal::map_slot_type.512"*, i64, i64, %"class.absl::container_internal::CompressedTuple.513" }
%"union.absl::container_internal::map_slot_type.512" = type opaque
%"class.absl::container_internal::CompressedTuple.513" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.514" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.514" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.422" }
%"class.absl::flat_hash_map.524" = type { %"class.absl::container_internal::raw_hash_map.525" }
%"class.absl::container_internal::raw_hash_map.525" = type { %"class.absl::container_internal::raw_hash_set.526" }
%"class.absl::container_internal::raw_hash_set.526" = type { i8*, %"union.absl::container_internal::map_slot_type.527"*, i64, i64, %"class.absl::container_internal::CompressedTuple.528" }
%"union.absl::container_internal::map_slot_type.527" = type opaque
%"class.absl::container_internal::CompressedTuple.528" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.529" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.529" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.422" }
%"class.absl::flat_hash_map.533" = type { %"class.absl::container_internal::raw_hash_map.534" }
%"class.absl::container_internal::raw_hash_map.534" = type { %"class.absl::container_internal::raw_hash_set.535" }
%"class.absl::container_internal::raw_hash_set.535" = type { i8*, %"union.absl::container_internal::map_slot_type.536"*, i64, i64, %"class.absl::container_internal::CompressedTuple.537" }
%"union.absl::container_internal::map_slot_type.536" = type opaque
%"class.absl::container_internal::CompressedTuple.537" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.538" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.538" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.422" }
%"class.quic::LegacyQuicStreamIdManager" = type { i8, i32, i64, i64, i32, %"class.absl::flat_hash_set", i32, i64, i64 }
%"class.absl::flat_hash_set" = type { %"class.absl::container_internal::raw_hash_set.542" }
%"class.absl::container_internal::raw_hash_set.542" = type { i8*, i32*, i64, i64, %"class.absl::container_internal::CompressedTuple.543" }
%"class.absl::container_internal::CompressedTuple.543" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.544" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.544" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.422" }
%"class.quic::UberQuicStreamIdManager" = type { %"struct.quic::ParsedQuicVersion", %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager" }
%"class.quic::QuicStreamIdManager" = type <{ %"class.quic::QuicStreamIdManager::DelegateInterface"*, i8, i8, [2 x i8], %"struct.quic::ParsedQuicVersion", i32, i32, i32, i32, i32, i32, i32, %"class.absl::flat_hash_set", i32, [4 x i8] }>
%"struct.quic::QuicConnectionCloseFrame" = type { i32, i64, i32, %"class.std::__1::basic_string", i64 }
%"class.quic::QuicFlowController" = type { %"class.quic::QuicFlowControllerInterface", %"class.quic::QuicSession"*, %"class.quic::QuicConnection"*, i32, i8, i8, i64, i64, i64, i64, i64, i64, i64, i8, %"class.quic::QuicFlowControllerInterface"*, i64, %"class.quic::QuicTime" }
%"class.quic::QuicFlowControllerInterface" = type { i32 (...)** }
%"class.quic::QuicControlFrameManager" = type { %"class.quiche::QuicheCircularDeque.546", i32, i32, i32, %"class.quiche::QuicheLinkedHashMap", %"class.quic::QuicControlFrameManager::DelegateInterface"*, %"class.absl::flat_hash_map.562" }
%"class.quiche::QuicheCircularDeque.546" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" = type { %"struct.quic::QuicFrame"*, i64 }
%"class.absl::flat_hash_map.562" = type { %"class.absl::container_internal::raw_hash_map.563" }
%"class.absl::container_internal::raw_hash_map.563" = type { %"class.absl::container_internal::raw_hash_set.564" }
%"class.absl::container_internal::raw_hash_set.564" = type { i8*, %"union.absl::container_internal::map_slot_type.565"*, i64, i64, %"class.absl::container_internal::CompressedTuple.566" }
%"union.absl::container_internal::map_slot_type.565" = type opaque
%"class.absl::container_internal::CompressedTuple.566" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.567" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.567" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.422" }
%"class.quic::QuicDatagramQueue" = type { %"class.quic::QuicSession"*, %"class.quic::QuicClock"*, %"class.quic::QuicTime::Delta", %"class.quiche::QuicheCircularDeque.571", %"class.std::__1::unique_ptr.574" }
%"class.quiche::QuicheCircularDeque.571" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" = type { %"struct.quic::QuicDatagramQueue::Datagram"*, i64 }
%"struct.quic::QuicDatagramQueue::Datagram" = type { %"class.quic::QuicMemSlice", %"class.quic::QuicTime" }
%"class.std::__1::unique_ptr.574" = type { %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.quic::QuicDatagramQueue::Observer"* }
%"class.quic::QuicDatagramQueue::Observer" = type { i32 (...)** }
%"class.quiche::QuicheLinkedHashMap" = type { %"class.absl::node_hash_map", %"class.std::__1::list.555" }
%"class.absl::node_hash_map" = type { %"class.absl::container_internal::raw_hash_map.547" }
%"class.absl::container_internal::raw_hash_map.547" = type { %"class.absl::container_internal::raw_hash_set.548" }
%"class.absl::container_internal::raw_hash_set.548" = type { i8*, %"struct.std::__1::pair.549"**, i64, i64, %"class.absl::container_internal::CompressedTuple.550" }
%"struct.std::__1::pair.549" = type opaque
%"class.absl::container_internal::CompressedTuple.550" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.551" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.551" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.422" }
%"class.std::__1::list.555" = type { %"class.std::__1::__list_imp.556" }
%"class.std::__1::__list_imp.556" = type { %"struct.std::__1::__list_node_base.557", %"class.std::__1::__compressed_pair.558" }
%"struct.std::__1::__list_node_base.557" = type { %"struct.std::__1::__list_node_base.557"*, %"struct.std::__1::__list_node_base.557"* }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.absl::optional.580" = type { %"class.absl::optional_internal::optional_data.581" }
%"class.absl::optional_internal::optional_data.581" = type { %"class.absl::optional_internal::optional_data_base.582" }
%"class.absl::optional_internal::optional_data_base.582" = type { %"class.absl::optional_internal::optional_data_dtor_base.583" }
%"class.absl::optional_internal::optional_data_dtor_base.583" = type { i8, %union.anon.584 }
%union.anon.584 = type { %"class.std::__1::basic_string" }
%"class.quic::WebTransportSession" = type { i32 (...)** }
%"class.quic::QuicTransportSessionInterface" = type { i32 (...)** }
%"class.quic::QuicCryptoClientStream::ProofHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.quic::QuicCryptoClientStream"* }
%"class.quic::QuicCryptoClientStream" = type { %"class.quic::QuicCryptoClientStreamBase", %"class.std::__1::unique_ptr.589" }
%"class.quic::QuicCryptoClientStreamBase" = type { %"class.quic::QuicCryptoStream" }
%"class.quic::QuicCryptoStream" = type { %"class.quic::QuicStream.base", [4 x %"class.quic::QuicIntervalSet.325"], %"struct.std::__1::array.588" }
%"class.quic::QuicStream.base" = type <{ %"class.quic::QuicStreamSequencer::StreamInterface", %"class.quic::QuicStreamSequencer", i32, [4 x i8], %"class.quic::QuicSession"*, %"class.quic::StreamDelegateInterface"*, %"class.spdy::StreamPrecedence", i64, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.absl::optional.480", %"class.quic::QuicFlowController"*, i8, [7 x i8], i64, i8, [7 x i8], %"class.quic::QuicStreamSendBuffer", i64, i8, [7 x i8], %"class.quic::QuicTime", i8, [3 x i8], i32, %"class.quic::QuicTime", i8 }>
%"struct.std::__1::array.588" = type { [4 x %"struct.quic::QuicCryptoStream::CryptoSubstream"] }
%"struct.quic::QuicCryptoStream::CryptoSubstream" = type { %"class.quic::QuicStreamSequencer", %"class.quic::QuicStreamSendBuffer" }
%"class.std::__1::unique_ptr.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.quic::QuicCryptoClientStream::HandshakerInterface"* }
%"class.quic::QuicCryptoClientStream::HandshakerInterface" = type { i32 (...)** }
%"class.quiche::QuicheCircularDeque.598" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicTransportStream *, 3, std::__1::allocator<quic::QuicTransportStream *> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicTransportStream *, 3, std::__1::allocator<quic::QuicTransportStream *> >::AllocatorAndData" = type { %"class.quic::QuicTransportStream"**, i64 }
%"class.quic::QuicTransportStream" = type { %"class.quic::QuicStream.base", %"class.quic::WebTransportStream", %"class.quic::WebTransportStreamAdapter", %"class.quic::QuicTransportSessionInterface"* }
%"class.quic::WebTransportStream" = type { i32 (...)** }
%"class.quic::WebTransportStreamAdapter" = type <{ %"class.quic::WebTransportStream", %"class.quic::QuicSession"*, %"class.quic::QuicStream"*, %"class.quic::QuicStreamSequencer"*, %"class.std::__1::unique_ptr.601", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.601" = type { %"class.std::__1::__compressed_pair.602" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"struct.std::__1::__compressed_pair_elem.603" = type { %"class.quic::WebTransportStreamVisitor"* }
%"class.quic::WebTransportStreamVisitor" = type { i32 (...)** }
%"class.std::__1::unique_ptr.610" = type { %"class.std::__1::__compressed_pair.611" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.net::QuicChromiumPacketReader"* }
%"class.net::QuicChromiumPacketReader" = type { i32 (...)**, %"class.net::DatagramClientSocket"*, %"class.net::QuicChromiumPacketReader::Visitor"*, i8, i32, %"class.quic::QuicClock"*, i32, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %class.scoped_refptr.613, %"class.net::NetLogWithSource", %"class.base::WeakPtrFactory" }
%class.scoped_refptr.613 = type { %"class.net::IOBufferWithSize"* }
%"class.net::IOBufferWithSize" = type <{ %"class.net::IOBuffer", i32, [4 x i8] }>
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.614 }
%class.scoped_refptr.614 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.615", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.615" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.616" }
%"struct.std::__1::atomic.616" = type { %"struct.std::__1::__atomic_base.617" }
%"struct.std::__1::__atomic_base.617" = type { %"struct.std::__1::__atomic_base.618" }
%"struct.std::__1::__atomic_base.618" = type { %"struct.std::__1::__cxx_atomic_impl.619" }
%"struct.std::__1::__cxx_atomic_impl.619" = type { %"struct.std::__1::__cxx_atomic_base_impl.620" }
%"struct.std::__1::__cxx_atomic_base_impl.620" = type { i8 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.net::QuicEventLogger"* }
%"class.net::QuicEventLogger" = type <{ %"class.quic::QuicConnectionDebugVisitor", %"class.quic::QuicPacketCreator::DebugDelegate", %"class.quic::QuicSession"*, %"class.net::NetLogWithSource", %"class.net::IPEndPoint", [4 x i8] }>
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.627", i8 }
%"struct.std::__1::array.627" = type { [16 x i8] }
%"class.base::WeakPtrFactory.631" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::DedicatedWebTransportHttp3Client" = type { %"class.net::WebTransportClient", %"class.quic::WebTransportVisitor", %"class.net::QuicChromiumPacketReader::Visitor", %"class.net::QuicChromiumPacketWriter::Delegate", %class.GURL, %"class.url::Origin", %"class.net::NetworkIsolationKey", %"class.net::URLRequestContext"*, %"class.net::WebTransportClientVisitor"*, %"class.net::ClientSocketFactory"*, %"class.net::QuicContext"*, %"class.net::NetLogWithSource", %"class.base::SequencedTaskRunner"*, %"class.std::__1::vector.36", %"class.std::__1::unique_ptr.73", %"class.quic::QuicCryptoClientConfig", i32, i32, %"struct.net::WebTransportError", i8, i8, %"class.net::ProxyInfo", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.156", %"class.quic::QuicConnection"*, %"class.std::__1::unique_ptr.638", %"class.quic::QuicSpdyStream"*, %"class.quic::WebTransportSession"*, %"class.std::__1::unique_ptr.610", %"class.std::__1::unique_ptr.624", %"class.quic::QuicClientPushPromiseIndex", %"class.base::WeakPtrFactory.935" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.quic::QuicSpdyClientSession"* }
%"class.quic::QuicSpdyClientSession" = type <{ %"class.quic::QuicSpdyClientSessionBase.base", [4 x i8], %"class.std::__1::unique_ptr.876", %"class.quic::QuicServerId", %"class.quic::QuicCryptoClientConfig"*, %"class.std::__1::vector.882", i8, [7 x i8] }>
%"class.quic::QuicSpdyClientSessionBase.base" = type <{ %"class.quic::QuicSpdySession", %"class.quic::QuicCryptoClientStream::ProofHandler", %"class.quic::QuicClientPushPromiseIndex"*, %"class.absl::flat_hash_map.867", i32 }>
%"class.quic::QuicSpdySession" = type { %"class.quic::QuicSession.base", %"class.quic::QpackEncoder::DecoderStreamErrorDelegate", %"class.quic::QpackDecoder::EncoderStreamErrorDelegate", %"class.std::__1::unique_ptr.641", %"class.std::__1::unique_ptr.713", %"class.quic::QuicHeadersStream"*, %"class.quic::QuicSendControlStream"*, %"class.quic::QuicReceiveControlStream"*, %"class.quic::QpackReceiveStream"*, %"class.quic::QpackReceiveStream"*, %"class.quic::QpackSendStream"*, %"class.quic::QpackSendStream"*, %"struct.quic::SettingsFrame", i64, i64, i64, i64, i32, i32, i64, i8, [7 x i8], %"class.spdy::SpdyFramer", %"class.http2::Http2DecoderAdapter", %"class.std::__1::unique_ptr.827", %"class.absl::optional.285", %"class.quic::Http3DebugVisitor"*, %"class.absl::flat_hash_map.833", i32, %"class.absl::optional.285", %"class.absl::optional.285", i64, i8, i8, %"class.absl::flat_hash_map.842", i8, %"class.absl::flat_hash_set", %"class.std::__1::list.851" }
%"class.quic::QpackEncoder::DecoderStreamErrorDelegate" = type { i32 (...)** }
%"class.quic::QpackDecoder::EncoderStreamErrorDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.quic::QpackEncoder"* }
%"class.quic::QpackEncoder" = type <{ %"class.quic::QpackDecoderStreamReceiver::Delegate", %"class.quic::QpackEncoder::DecoderStreamErrorDelegate"*, %"class.quic::QpackDecoderStreamReceiver", %"class.quic::QpackEncoderStreamSender", %"class.quic::QpackEncoderHeaderTable", i64, %"class.quic::QpackBlockingManager", i32, [4 x i8] }>
%"class.quic::QpackDecoderStreamReceiver::Delegate" = type { i32 (...)** }
%"class.quic::QpackDecoderStreamReceiver" = type <{ %"class.quic::QpackInstructionDecoder::Delegate", %"class.quic::QpackStreamReceiver", %"class.quic::QpackInstructionDecoder", %"class.quic::QpackDecoderStreamReceiver::Delegate"*, i8, [7 x i8] }>
%"class.quic::QpackInstructionDecoder::Delegate" = type { i32 (...)** }
%"class.quic::QpackStreamReceiver" = type { i32 (...)** }
%"class.quic::QpackInstructionDecoder" = type { %"class.std::__1::vector.644"*, %"class.quic::QpackInstructionDecoder::Delegate"*, i8, i64, i64, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i64, %"class.http2::HpackVarintDecoder", %"class.http2::HpackHuffmanDecoder", i8, i32, %"struct.quic::QpackInstruction"*, %"class.std::__1::__wrap_iter" }
%"class.std::__1::vector.644" = type opaque
%"class.http2::HpackVarintDecoder" = type <{ i64, i8, [7 x i8] }>
%"class.http2::HpackHuffmanDecoder" = type { %"class.http2::HuffmanBitBuffer" }
%"class.http2::HuffmanBitBuffer" = type { i64, i64 }
%"struct.quic::QpackInstruction" = type { %"struct.quic::QpackInstructionOpcode", %"class.std::__1::vector.645" }
%"struct.quic::QpackInstructionOpcode" = type { i8, i8 }
%"class.std::__1::vector.645" = type { %"class.std::__1::__vector_base.646" }
%"class.std::__1::__vector_base.646" = type { %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"*, %"class.std::__1::__compressed_pair.647" }
%"struct.quic::QpackInstructionField" = type { i32, i8 }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"struct.quic::QpackInstructionField"* }
%"class.std::__1::__wrap_iter" = type { %"struct.quic::QpackInstructionField"* }
%"class.quic::QpackEncoderStreamSender" = type { %"class.quic::QpackStreamSenderDelegate"*, %"class.quic::QpackInstructionEncoder", %"class.std::__1::basic_string" }
%"class.quic::QpackStreamSenderDelegate" = type { i32 (...)** }
%"class.quic::QpackInstructionEncoder" = type { i8, i64, i8, i32, %"struct.quic::QpackInstruction"*, %"class.std::__1::__wrap_iter" }
%"class.quic::QpackEncoderHeaderTable" = type { %"class.quic::QpackHeaderTableBase.base", %"class.absl::flat_hash_map.664"*, %"class.absl::flat_hash_map.679"*, %"class.absl::flat_hash_map.664", %"class.absl::flat_hash_map.679" }
%"class.quic::QpackHeaderTableBase.base" = type <{ i32 (...)**, %"class.std::__1::deque.652", i64, i64, i64, i64, i64, i8 }>
%"class.std::__1::deque.652" = type { %"class.std::__1::__deque_base.653" }
%"class.std::__1::__deque_base.653" = type { %"struct.std::__1::__split_buffer.654", i64, %"class.std::__1::__compressed_pair.660" }
%"struct.std::__1::__split_buffer.654" = type { %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"**, %"class.std::__1::__compressed_pair.655" }
%"class.spdy::HpackEntry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.656" = type { %"class.spdy::HpackEntry"** }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.absl::flat_hash_map.664" = type { %"class.absl::container_internal::raw_hash_map.665" }
%"class.absl::container_internal::raw_hash_map.665" = type { %"class.absl::container_internal::raw_hash_set.666" }
%"class.absl::container_internal::raw_hash_set.666" = type { i8*, %"union.absl::container_internal::map_slot_type.667"*, i64, i64, %"class.absl::container_internal::CompressedTuple.668" }
%"union.absl::container_internal::map_slot_type.667" = type opaque
%"class.absl::container_internal::CompressedTuple.668" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.669" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.669" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.422" }
%"class.absl::flat_hash_map.679" = type { %"class.absl::container_internal::raw_hash_map.680" }
%"class.absl::container_internal::raw_hash_map.680" = type { %"class.absl::container_internal::raw_hash_set.681" }
%"class.absl::container_internal::raw_hash_set.681" = type { i8*, %"union.absl::container_internal::map_slot_type.682"*, i64, i64, %"class.absl::container_internal::CompressedTuple.683" }
%"union.absl::container_internal::map_slot_type.682" = type opaque
%"class.absl::container_internal::CompressedTuple.683" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.684" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.684" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.422" }
%"class.quic::QpackBlockingManager" = type { %"class.absl::flat_hash_map.690", %"class.std::__1::map.699", i64 }
%"class.absl::flat_hash_map.690" = type { %"class.absl::container_internal::raw_hash_map.691" }
%"class.absl::container_internal::raw_hash_map.691" = type { %"class.absl::container_internal::raw_hash_set.692" }
%"class.absl::container_internal::raw_hash_set.692" = type { i8*, %"union.absl::container_internal::map_slot_type.693"*, i64, i64, %"class.absl::container_internal::CompressedTuple.694" }
%"union.absl::container_internal::map_slot_type.693" = type opaque
%"class.absl::container_internal::CompressedTuple.694" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.695" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.695" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.422" }
%"class.std::__1::map.699" = type { %"class.std::__1::__tree.700" }
%"class.std::__1::__tree.700" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.701", %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::unique_ptr.713" = type { %"class.std::__1::__compressed_pair.714" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.715" }
%"struct.std::__1::__compressed_pair_elem.715" = type { %"class.quic::QpackDecoder"* }
%"class.quic::QpackDecoder" = type { %"class.quic::QpackEncoderStreamReceiver::Delegate", %"class.quic::QpackProgressiveDecoder::BlockedStreamLimitEnforcer", %"class.quic::QpackProgressiveDecoder::DecodingCompletedVisitor", %"class.quic::QpackDecoder::EncoderStreamErrorDelegate"*, %"class.quic::QpackEncoderStreamReceiver", %"class.quic::QpackDecoderStreamSender", %"class.quic::QpackDecoderHeaderTable", %"class.std::__1::set.728", i64, i64 }
%"class.quic::QpackEncoderStreamReceiver::Delegate" = type { i32 (...)** }
%"class.quic::QpackProgressiveDecoder::BlockedStreamLimitEnforcer" = type { i32 (...)** }
%"class.quic::QpackProgressiveDecoder::DecodingCompletedVisitor" = type { i32 (...)** }
%"class.quic::QpackEncoderStreamReceiver" = type <{ %"class.quic::QpackInstructionDecoder::Delegate", %"class.quic::QpackStreamReceiver", %"class.quic::QpackInstructionDecoder", %"class.quic::QpackEncoderStreamReceiver::Delegate"*, i8, [7 x i8] }>
%"class.quic::QpackDecoderStreamSender" = type { %"class.quic::QpackStreamSenderDelegate"*, %"class.quic::QpackInstructionEncoder", %"class.std::__1::basic_string" }
%"class.quic::QpackDecoderHeaderTable" = type { %"class.quic::QpackHeaderTableBase.base.718", %"class.std::__1::vector.719"*, %"class.std::__1::multimap" }
%"class.quic::QpackHeaderTableBase.base.718" = type <{ i32 (...)**, %"class.quiche::QuicheCircularDeque.717", i64, i64, i64, i64, i64, i8 }>
%"class.quiche::QuicheCircularDeque.717" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<spdy::HpackEntry, 3, std::__1::allocator<spdy::HpackEntry> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<spdy::HpackEntry, 3, std::__1::allocator<spdy::HpackEntry> >::AllocatorAndData" = type { %"class.spdy::HpackEntry"*, i64 }
%"class.std::__1::vector.719" = type opaque
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.720" }
%"class.std::__1::__tree.720" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.721", %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.quic::QuicHeadersStream" = type { %"class.quic::QuicStream.base", %"class.quic::QuicSpdySession"*, %"class.quiche::QuicheCircularDeque.740" }
%"class.quiche::QuicheCircularDeque.740" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicHeadersStream::CompressedHeaderInfo, 3, std::__1::allocator<quic::QuicHeadersStream::CompressedHeaderInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicHeadersStream::CompressedHeaderInfo, 3, std::__1::allocator<quic::QuicHeadersStream::CompressedHeaderInfo> >::AllocatorAndData" = type { %"struct.quic::QuicHeadersStream::CompressedHeaderInfo"*, i64 }
%"struct.quic::QuicHeadersStream::CompressedHeaderInfo" = type { i64, i64, i64, %"class.quic::QuicReferenceCountedPointer" }
%"class.quic::QuicReferenceCountedPointer" = type { %"class.quic::QuicReferenceCountedPointerImpl" }
%"class.quic::QuicReferenceCountedPointerImpl" = type { %class.scoped_refptr.743 }
%class.scoped_refptr.743 = type { %"class.quic::QuicAckListenerInterface"* }
%"class.quic::QuicAckListenerInterface" = type { %"class.quic::QuicReferenceCounted.base", [4 x i8] }
%"class.quic::QuicReferenceCounted.base" = type { %"class.quic::QuicReferenceCountedImpl.base" }
%"class.quic::QuicReferenceCountedImpl.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.744" }>
%"class.base::RefCountedThreadSafe.744" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.quic::QuicSendControlStream" = type { %"class.quic::QuicStream.base", i8, %"struct.quic::SettingsFrame", %"class.quic::QuicSpdySession"* }
%"class.quic::QuicReceiveControlStream" = type { %"class.quic::QuicStream.base", %"class.quic::HttpDecoder::Visitor", i8, [7 x i8], %"class.quic::HttpDecoder", %"class.quic::QuicSpdySession"* }
%"class.quic::HttpDecoder::Visitor" = type { i32 (...)** }
%"class.quic::HttpDecoder" = type <{ %"class.quic::HttpDecoder::Visitor"*, i8, [3 x i8], i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"struct.std::__1::array.759", %"struct.std::__1::array.759", %"struct.std::__1::array.759", i8, i8, [6 x i8] }>
%"struct.std::__1::array.759" = type { [8 x i8] }
%"class.quic::QpackReceiveStream" = type { %"class.quic::QuicStream.base", %"class.quic::QpackStreamReceiver"* }
%"class.quic::QpackSendStream" = type <{ %"class.quic::QuicStream.base", [7 x i8], %"class.quic::QpackStreamSenderDelegate", i64, i8, [7 x i8] }>
%"struct.quic::SettingsFrame" = type { %"class.absl::flat_hash_map.745" }
%"class.absl::flat_hash_map.745" = type { %"class.absl::container_internal::raw_hash_map.746" }
%"class.absl::container_internal::raw_hash_map.746" = type { %"class.absl::container_internal::raw_hash_set.747" }
%"class.absl::container_internal::raw_hash_set.747" = type { i8*, %"union.absl::container_internal::map_slot_type.748"*, i64, i64, %"class.absl::container_internal::CompressedTuple.749" }
%"union.absl::container_internal::map_slot_type.748" = type { %"struct.std::__1::pair.939" }
%"struct.std::__1::pair.939" = type { i64, i64 }
%"class.absl::container_internal::CompressedTuple.749" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.750" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.750" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.422" }
%"class.spdy::SpdyFramer" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.760", %"class.spdy::SpdyFramerDebugVisitorInterface"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.760" = type { %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.spdy::HpackEncoder"* }
%"class.spdy::HpackEncoder" = type <{ %"class.spdy::HpackHeaderTable", %"class.spdy::HpackOutputStream", i64, %"class.std::__1::function.763", %"class.std::__1::function.769", i8, i8, [6 x i8] }>
%"class.spdy::HpackHeaderTable" = type { %"class.std::__1::vector.719"*, %"class.std::__1::deque.652", %"class.absl::flat_hash_map.664"*, %"class.absl::flat_hash_map.679"*, %"class.absl::flat_hash_map.664", %"class.absl::flat_hash_map.679", i64, i64, i64, i64 }
%"class.spdy::HpackOutputStream" = type { %"class.std::__1::basic_string", i64 }
%"class.std::__1::function.763" = type { %"class.std::__1::__function::__policy_func.767" }
%"class.std::__1::__function::__policy_func.767" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.768", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.768" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.absl::string_view"*, %"class.absl::string_view"*)* }
%"class.std::__1::function.769" = type { %"class.std::__1::__function::__policy_func.773" }
%"class.std::__1::__function::__policy_func.773" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.774", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.774" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.absl::string_view"*, %"class.absl::string_view"*)* }
%"class.spdy::SpdyFramerDebugVisitorInterface" = type { i32 (...)** }
%"class.http2::Http2DecoderAdapter" = type { %"class.http2::Http2FrameDecoderListener", %"struct.http2::Http2FrameHeader", %"struct.http2::Http2FrameHeader", %"class.absl::optional.285", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.http2::Http2FrameDecoderNoOpListener", %"class.spdy::SpdyFramerVisitorInterface"*, %"class.spdy::SpdyFramerDebugVisitorInterface"*, %"class.spdy::ExtensionVisitorInterface"*, %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.820", i8, i32, i32, i64, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.http2::Http2FrameDecoderListener" = type { i32 (...)** }
%"struct.http2::Http2FrameHeader" = type { i32, i32, i8, i32 }
%"class.http2::Http2FrameDecoderNoOpListener" = type { %"class.http2::Http2FrameDecoderListener" }
%"class.spdy::SpdyFramerVisitorInterface" = type { i32 (...)** }
%"class.spdy::ExtensionVisitorInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.778" = type { %"class.std::__1::__compressed_pair.779" }
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.780" }
%"struct.std::__1::__compressed_pair_elem.780" = type { %"class.spdy::HpackDecoderAdapter"* }
%"class.spdy::HpackDecoderAdapter" = type { %"class.spdy::HpackDecoderAdapter::ListenerAdapter", %"class.http2::HpackDecoder", i64, i64, i8, i32, %"class.std::__1::basic_string" }
%"class.spdy::HpackDecoderAdapter::ListenerAdapter" = type { %"class.http2::HpackDecoderListener", %"class.spdy::Http2HeaderBlock", %"class.spdy::SpdyHeadersHandlerInterface"*, i64, i64 }
%"class.http2::HpackDecoderListener" = type { i32 (...)** }
%"class.spdy::Http2HeaderBlock" = type { %"class.quiche::QuicheLinkedHashMap.781", %"class.spdy::SpdyHeaderStorage", i64, i64 }
%"class.quiche::QuicheLinkedHashMap.781" = type { %"class.absl::node_hash_map.782", %"class.std::__1::list.793" }
%"class.absl::node_hash_map.782" = type { %"class.absl::container_internal::raw_hash_map.783" }
%"class.absl::container_internal::raw_hash_map.783" = type { %"class.absl::container_internal::raw_hash_set.784" }
%"class.absl::container_internal::raw_hash_set.784" = type { i8*, %"struct.std::__1::pair.785"**, i64, i64, %"class.absl::container_internal::CompressedTuple.786" }
%"struct.std::__1::pair.785" = type { %"class.absl::string_view", %"class.std::__1::__list_iterator" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base.795"* }
%"struct.std::__1::__list_node_base.795" = type { %"struct.std::__1::__list_node_base.795"*, %"struct.std::__1::__list_node_base.795"* }
%"class.absl::container_internal::CompressedTuple.786" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.787" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.787" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.422" }
%"class.std::__1::list.793" = type { %"class.std::__1::__list_imp.794" }
%"class.std::__1::__list_imp.794" = type { %"struct.std::__1::__list_node_base.795", %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.spdy::SpdyHeaderStorage" = type { %"class.spdy::SpdySimpleArena" }
%"class.spdy::SpdySimpleArena" = type { i64, %"class.std::__1::vector.800", %"class.spdy::SpdySimpleArena::Status" }
%"class.std::__1::vector.800" = type { %"class.std::__1::__vector_base.801" }
%"class.std::__1::__vector_base.801" = type { %"struct.spdy::SpdySimpleArena::Block"*, %"struct.spdy::SpdySimpleArena::Block"*, %"class.std::__1::__compressed_pair.808" }
%"struct.spdy::SpdySimpleArena::Block" = type { %"class.std::__1::unique_ptr.802", i64, i64 }
%"class.std::__1::unique_ptr.802" = type { %"class.std::__1::__compressed_pair.803" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { i8* }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.809" }
%"struct.std::__1::__compressed_pair_elem.809" = type { %"struct.spdy::SpdySimpleArena::Block"* }
%"class.spdy::SpdySimpleArena::Status" = type { i64 }
%"class.spdy::SpdyHeadersHandlerInterface" = type { i32 (...)** }
%"class.http2::HpackDecoder" = type { i32 (...)**, %"class.http2::HpackDecoderState", %"class.http2::HpackWholeEntryBuffer", %"class.http2::HpackBlockDecoder", i32, %"class.std::__1::basic_string" }
%"class.http2::HpackDecoderState" = type { %"class.http2::HpackWholeEntryListener", %"class.http2::HpackDecoderTables", %"class.http2::HpackDecoderListener"*, i32, i32, i8, i8, i8, i32, %"class.std::__1::basic_string" }
%"class.http2::HpackWholeEntryListener" = type { i32 (...)** }
%"class.http2::HpackDecoderTables" = type { %"class.http2::HpackDecoderStaticTable", %"class.http2::HpackDecoderDynamicTable" }
%"class.http2::HpackDecoderStaticTable" = type { %"class.std::__1::vector.813"* }
%"class.std::__1::vector.813" = type opaque
%"class.http2::HpackDecoderDynamicTable" = type { %"class.quiche::QuicheCircularDeque.814", i64, i64, i64 }
%"class.quiche::QuicheCircularDeque.814" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<http2::HpackStringPair, 3, std::__1::allocator<http2::HpackStringPair> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<http2::HpackStringPair, 3, std::__1::allocator<http2::HpackStringPair> >::AllocatorAndData" = type { %"struct.http2::HpackStringPair"*, i64 }
%"struct.http2::HpackStringPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.http2::HpackWholeEntryBuffer" = type <{ %"class.http2::HpackEntryDecoderListener", %"class.http2::HpackWholeEntryListener"*, %"class.http2::HpackDecoderStringBuffer", %"class.http2::HpackDecoderStringBuffer", i64, i64, i32, i8, [3 x i8] }>
%"class.http2::HpackEntryDecoderListener" = type { i32 (...)** }
%"class.http2::HpackDecoderStringBuffer" = type <{ %"class.std::__1::basic_string", %"class.absl::string_view", %"class.http2::HpackHuffmanDecoder", i64, i8, i8, i8, [5 x i8] }>
%"class.http2::HpackBlockDecoder" = type <{ %"class.http2::HpackEntryDecoder", %"class.http2::HpackEntryDecoderListener"*, i8, [7 x i8] }>
%"class.http2::HpackEntryDecoder" = type { %"class.http2::HpackEntryTypeDecoder", %"class.http2::HpackStringDecoder", i32, i32 }
%"class.http2::HpackEntryTypeDecoder" = type { %"class.http2::HpackVarintDecoder", i32, [4 x i8] }
%"class.http2::HpackStringDecoder" = type <{ %"class.http2::HpackVarintDecoder", i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.820" = type { %"class.std::__1::__compressed_pair.821" }
%"class.std::__1::__compressed_pair.821" = type { %"struct.std::__1::__compressed_pair_elem.822" }
%"struct.std::__1::__compressed_pair_elem.822" = type { %"class.http2::Http2FrameDecoder"* }
%"class.http2::Http2FrameDecoder" = type { %"class.http2::FrameDecoderState", %union.anon.823, i32, i64, %"class.http2::Http2FrameDecoderNoOpListener" }
%"class.http2::FrameDecoderState" = type { %"class.http2::Http2FrameDecoderListener"*, %"struct.http2::Http2FrameHeader", i32, i32, %"class.http2::Http2StructureDecoder" }
%"class.http2::Http2StructureDecoder" = type <{ i32, [9 x i8], [3 x i8] }>
%union.anon.823 = type { %"class.http2::HeadersPayloadDecoder" }
%"class.http2::HeadersPayloadDecoder" = type { i32, %"struct.http2::Http2PriorityFields" }
%"struct.http2::Http2PriorityFields" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"class.quic::QuicSpdySession::SpdyFramerVisitor"* }
%"class.quic::QuicSpdySession::SpdyFramerVisitor" = type opaque
%"class.quic::Http3DebugVisitor" = type { i32 (...)** }
%"class.absl::flat_hash_map.833" = type { %"class.absl::container_internal::raw_hash_map.834" }
%"class.absl::container_internal::raw_hash_map.834" = type { %"class.absl::container_internal::raw_hash_set.835" }
%"class.absl::container_internal::raw_hash_set.835" = type { i8*, %"union.absl::container_internal::map_slot_type.836"*, i64, i64, %"class.absl::container_internal::CompressedTuple.837" }
%"union.absl::container_internal::map_slot_type.836" = type opaque
%"class.absl::container_internal::CompressedTuple.837" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.838" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.838" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.422" }
%"class.absl::flat_hash_map.842" = type { %"class.absl::container_internal::raw_hash_map.843" }
%"class.absl::container_internal::raw_hash_map.843" = type { %"class.absl::container_internal::raw_hash_set.844" }
%"class.absl::container_internal::raw_hash_set.844" = type { i8*, %"union.absl::container_internal::map_slot_type.845"*, i64, i64, %"class.absl::container_internal::CompressedTuple.846" }
%"union.absl::container_internal::map_slot_type.845" = type opaque
%"class.absl::container_internal::CompressedTuple.846" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.847" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.847" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.422" }
%"class.std::__1::list.851" = type { %"class.std::__1::__list_imp.852" }
%"class.std::__1::__list_imp.852" = type { %"struct.std::__1::__list_node_base.853", %"class.std::__1::__compressed_pair.854" }
%"struct.std::__1::__list_node_base.853" = type { %"struct.std::__1::__list_node_base.853"*, %"struct.std::__1::__list_node_base.853"* }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.absl::flat_hash_map.867" = type { %"class.absl::container_internal::raw_hash_map.868" }
%"class.absl::container_internal::raw_hash_map.868" = type { %"class.absl::container_internal::raw_hash_set.869" }
%"class.absl::container_internal::raw_hash_set.869" = type { i8*, %"union.absl::container_internal::map_slot_type.870"*, i64, i64, %"class.absl::container_internal::CompressedTuple.871" }
%"union.absl::container_internal::map_slot_type.870" = type opaque
%"class.absl::container_internal::CompressedTuple.871" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.872" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.872" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.422" }
%"class.std::__1::unique_ptr.876" = type { %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"class.quic::QuicCryptoClientStreamBase"* }
%"class.quic::QuicServerId" = type <{ %"class.std::__1::basic_string", i16, i8, [5 x i8] }>
%"class.std::__1::vector.882" = type { %"class.std::__1::__vector_base.883" }
%"class.std::__1::__vector_base.883" = type { %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.quic::QuicSocketAddress"* }
%"class.quic::QuicSpdyStream" = type { %"class.quic::QuicStream.base", %"class.quic::QpackDecodedHeadersAccumulator::Visitor", %"class.quic::QuicSpdySession"*, i8, %"class.quic::QuicSpdyStream::Visitor"*, i8, i8, i8, %"class.quic::QuicHeaderList", i64, i8, i8, %"class.spdy::Http2HeaderBlock", %"class.std::__1::unique_ptr.896", %"class.std::__1::unique_ptr.914", %"class.quic::HttpDecoder", %"class.quic::QuicSpdyStreamBodyManager", i64, i8, %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicIntervalSet.325", i32, %"class.std::__1::unique_ptr.923", %"class.std::__1::unique_ptr.929" }
%"class.quic::QpackDecodedHeadersAccumulator::Visitor" = type { i32 (...)** }
%"class.quic::QuicSpdyStream::Visitor" = type { i32 (...)** }
%"class.quic::QuicHeaderList" = type { %"class.spdy::SpdyHeadersHandlerInterface", %"class.quiche::QuicheCircularDeque.892", i64, i64, i64, i64 }
%"class.quiche::QuicheCircularDeque.892" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, 3, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, 3, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::AllocatorAndData" = type { %"struct.std::__1::pair.895"*, i64 }
%"struct.std::__1::pair.895" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.896" = type { %"class.std::__1::__compressed_pair.897" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.898" }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"class.quic::QpackDecodedHeadersAccumulator"* }
%"class.quic::QpackDecodedHeadersAccumulator" = type <{ %"class.quic::QpackProgressiveDecoder::HeadersHandlerInterface", %"class.std::__1::unique_ptr.899", %"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, i64, i64, %"class.quic::QuicHeaderList", i64, i64, i8, i8, i8, [5 x i8] }>
%"class.quic::QpackProgressiveDecoder::HeadersHandlerInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.899" = type { %"class.std::__1::__compressed_pair.900" }
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.901" }
%"struct.std::__1::__compressed_pair_elem.901" = type { %"class.quic::QpackProgressiveDecoder"* }
%"class.quic::QpackProgressiveDecoder" = type <{ %"class.quic::QpackInstructionDecoder::Delegate", %"class.quic::QpackDecoderHeaderTable::Observer", i32, [4 x i8], %"class.std::__1::unique_ptr.902", %"class.quic::QpackInstructionDecoder", %"class.quic::QpackProgressiveDecoder::BlockedStreamLimitEnforcer"*, %"class.quic::QpackProgressiveDecoder::DecodingCompletedVisitor"*, %"class.quic::QpackDecoderHeaderTable"*, %"class.quic::QpackProgressiveDecoder::HeadersHandlerInterface"*, i64, i64, i64, i8, i8, [6 x i8], %"class.std::__1::basic_string", i8, i8, i8, [5 x i8] }>
%"class.quic::QpackDecoderHeaderTable::Observer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.902" = type { %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"class.quic::QpackInstructionDecoder"* }
%"class.std::__1::unique_ptr.914" = type { %"class.std::__1::__compressed_pair.915" }
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* }
%"class.quic::QuicSpdyStream::HttpDecoderVisitor" = type opaque
%"class.quic::QuicSpdyStreamBodyManager" = type { %"class.quiche::QuicheCircularDeque.920", i64 }
%"class.quiche::QuicheCircularDeque.920" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicSpdyStreamBodyManager::Fragment, 3, std::__1::allocator<quic::QuicSpdyStreamBodyManager::Fragment> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicSpdyStreamBodyManager::Fragment, 3, std::__1::allocator<quic::QuicSpdyStreamBodyManager::Fragment> >::AllocatorAndData" = type { %"struct.quic::QuicSpdyStreamBodyManager::Fragment"*, i64 }
%"struct.quic::QuicSpdyStreamBodyManager::Fragment" = type { %"class.absl::string_view", i64 }
%"class.std::__1::unique_ptr.923" = type { %"class.std::__1::__compressed_pair.924" }
%"class.std::__1::__compressed_pair.924" = type { %"struct.std::__1::__compressed_pair_elem.925" }
%"struct.std::__1::__compressed_pair_elem.925" = type { %"class.quic::WebTransportHttp3"* }
%"class.quic::WebTransportHttp3" = type opaque
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.quic::QuicSpdyStream::WebTransportDataStream"* }
%"struct.quic::QuicSpdyStream::WebTransportDataStream" = type { i64, %"class.quic::WebTransportStreamAdapter" }
%"class.quic::QuicClientPushPromiseIndex" = type { i32 (...)**, %"class.absl::flat_hash_map.858" }
%"class.absl::flat_hash_map.858" = type { %"class.absl::container_internal::raw_hash_map.859" }
%"class.absl::container_internal::raw_hash_map.859" = type { %"class.absl::container_internal::raw_hash_set.860" }
%"class.absl::container_internal::raw_hash_set.860" = type { i8*, %"union.absl::container_internal::map_slot_type.861"*, i64, i64, %"class.absl::container_internal::CompressedTuple.862" }
%"union.absl::container_internal::map_slot_type.861" = type opaque
%"class.absl::container_internal::CompressedTuple.862" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.863" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.863" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.422" }
%"class.base::WeakPtrFactory.935" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::(anonymous namespace)::FailedWebTransportClient" = type { %"class.net::WebTransportClient", %"struct.net::WebTransportError", %"class.net::WebTransportClientVisitor"* }

$_ZNSt3__16vectorIN4quic22CertificateFingerprintENS_9allocatorIS2_EEEC2ERKS5_ = comdat any

@_ZN3url20kQuicTransportSchemeE = external constant [0 x i8], align 1
@_ZN3url12kHttpsSchemeE = external constant [0 x i8], align 1
@_ZTVN3net25WebTransportClientVisitorE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::WebTransportClientVisitor"*)* @_ZN3net25WebTransportClientVisitorD2Ev to i8*), i8* bitcast (void (%"class.net::WebTransportClientVisitor"*)* @_ZN3net25WebTransportClientVisitorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN3net12_GLOBAL__N_124FailedWebTransportClientE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::(anonymous namespace)::FailedWebTransportClient"*)* @_ZN3net12_GLOBAL__N_124FailedWebTransportClientD2Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::FailedWebTransportClient"*)* @_ZN3net12_GLOBAL__N_124FailedWebTransportClientD0Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::FailedWebTransportClient"*)* @_ZN3net12_GLOBAL__N_124FailedWebTransportClient7ConnectEv to i8*), i8* bitcast (%"class.quic::WebTransportSession"* (%"class.net::(anonymous namespace)::FailedWebTransportClient"*)* @_ZN3net12_GLOBAL__N_124FailedWebTransportClient7sessionEv to i8*), i8* bitcast (%"struct.net::WebTransportError"* (%"class.net::(anonymous namespace)::FailedWebTransportClient"*)* @_ZNK3net12_GLOBAL__N_124FailedWebTransportClient5errorEv to i8*)] }, align 8

@_ZN3net25WebTransportClientVisitorD1Ev = hidden unnamed_addr alias void (%"class.net::WebTransportClientVisitor"*), void (%"class.net::WebTransportClientVisitor"*)* @_ZN3net25WebTransportClientVisitorD2Ev
@_ZN3net22WebTransportParametersC1Ev = hidden unnamed_addr alias void (%"struct.net::WebTransportParameters"*), void (%"struct.net::WebTransportParameters"*)* @_ZN3net22WebTransportParametersC2Ev
@_ZN3net22WebTransportParametersD1Ev = hidden unnamed_addr alias void (%"struct.net::WebTransportParameters"*), void (%"struct.net::WebTransportParameters"*)* @_ZN3net22WebTransportParametersD2Ev
@_ZN3net22WebTransportParametersC1ERKS0_ = hidden unnamed_addr alias void (%"struct.net::WebTransportParameters"*, %"struct.net::WebTransportParameters"*), void (%"struct.net::WebTransportParameters"*, %"struct.net::WebTransportParameters"*)* @_ZN3net22WebTransportParametersC2ERKS0_
@_ZN3net22WebTransportParametersC1EOS0_ = hidden unnamed_addr alias void (%"struct.net::WebTransportParameters"*, %"struct.net::WebTransportParameters"*), void (%"struct.net::WebTransportParameters"*, %"struct.net::WebTransportParameters"*)* @_ZN3net22WebTransportParametersC2EOS0_

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net25WebTransportClientVisitorD2Ev(%"class.net::WebTransportClientVisitor"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3net25WebTransportClientVisitorD0Ev(%"class.net::WebTransportClientVisitor"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net22WebTransportParametersC2Ev(%"struct.net::WebTransportParameters"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.net::WebTransportParameters", %"struct.net::WebTransportParameters"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"struct.net::WebTransportParameters", %"struct.net::WebTransportParameters"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %"struct.net::WebTransportParameters", %"struct.net::WebTransportParameters"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 2
  %5 = getelementptr inbounds %"struct.net::WebTransportParameters", %"struct.net::WebTransportParameters"* %0, i64 0, i32 3
  %6 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net22WebTransportParametersD2Ev(%"struct.net::WebTransportParameters"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.net::WebTransportParameters", %"struct.net::WebTransportParameters"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.quic::CertificateFingerprint"*, %"struct.quic::CertificateFingerprint"** %3, align 8
  %5 = icmp eq %"struct.quic::CertificateFingerprint"* %4, null
  br i1 %5, label %37, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.quic::CertificateFingerprint"* %4 to i8*
  %8 = getelementptr inbounds %"struct.net::WebTransportParameters", %"struct.net::WebTransportParameters"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = load %"struct.quic::CertificateFingerprint"*, %"struct.quic::CertificateFingerprint"** %8, align 8
  %10 = icmp eq %"struct.quic::CertificateFingerprint"* %9, %4
  br i1 %10, label %35, label %11

11:                                               ; preds = %6, %30
  %12 = phi %"struct.quic::CertificateFingerprint"* [ %13, %30 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.quic::CertificateFingerprint", %"struct.quic::CertificateFingerprint"* %12, i64 -1
  %14 = getelementptr inbounds %"struct.quic::CertificateFingerprint", %"struct.quic::CertificateFingerprint"* %12, i64 -1, i32 1
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #13
  br label %22

22:                                               ; preds = %19, %11
  %23 = bitcast %"struct.quic::CertificateFingerprint"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"struct.quic::CertificateFingerprint", %"struct.quic::CertificateFingerprint"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %27, %22
  %31 = icmp eq %"struct.quic::CertificateFingerprint"* %13, %4
  br i1 %31, label %32, label %11

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector"* %2 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %6
  %36 = phi i8* [ %34, %32 ], [ %7, %6 ]
  store %"struct.quic::CertificateFingerprint"* %4, %"struct.quic::CertificateFingerprint"** %8, align 8
  tail call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %1, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net22WebTransportParametersC2ERKS0_(%"struct.net::WebTransportParameters"*, %"struct.net::WebTransportParameters"* dereferenceable(32)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.net::WebTransportParameters", %"struct.net::WebTransportParameters"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.net::WebTransportParameters", %"struct.net::WebTransportParameters"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 3, i1 false)
  %5 = getelementptr inbounds %"struct.net::WebTransportParameters", %"struct.net::WebTransportParameters"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.net::WebTransportParameters", %"struct.net::WebTransportParameters"* %1, i64 0, i32 3
  tail call void @_ZNSt3__16vectorIN4quic22CertificateFingerprintENS_9allocatorIS2_EEEC2ERKS5_(%"class.std::__1::vector"* %5, %"class.std::__1::vector"* dereferenceable(24) %6)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4quic22CertificateFingerprintENS_9allocatorIS2_EEEC2ERKS5_(%"class.std::__1::vector"*, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #3 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #12
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.quic::CertificateFingerprint"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 48
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %71, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 384307168202282325
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #11
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #13
  %18 = bitcast i8* %17 to %"struct.quic::CertificateFingerprint"*
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"struct.quic::CertificateFingerprint"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"struct.quic::CertificateFingerprint", %"struct.quic::CertificateFingerprint"* %18, i64 %10
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.quic::CertificateFingerprint"* %22, %"struct.quic::CertificateFingerprint"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %25 = load %"struct.quic::CertificateFingerprint"*, %"struct.quic::CertificateFingerprint"** %24, align 8
  %26 = load %"struct.quic::CertificateFingerprint"*, %"struct.quic::CertificateFingerprint"** %4, align 8
  %27 = bitcast %"struct.quic::CertificateFingerprint"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"struct.quic::CertificateFingerprint"* %25, %26
  br i1 %29, label %69, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"struct.quic::CertificateFingerprint"*
  br label %32

32:                                               ; preds = %63, %30
  %33 = phi %"struct.quic::CertificateFingerprint"* [ %65, %63 ], [ %31, %30 ]
  %34 = phi %"struct.quic::CertificateFingerprint"* [ %64, %63 ], [ %25, %30 ]
  %35 = bitcast %"struct.quic::CertificateFingerprint"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"struct.quic::CertificateFingerprint"* %33 to i8*
  %41 = bitcast %"struct.quic::CertificateFingerprint"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #12
  br label %48

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"struct.quic::CertificateFingerprint", %"struct.quic::CertificateFingerprint"* %33, i64 0, i32 0
  %44 = getelementptr inbounds %"struct.quic::CertificateFingerprint", %"struct.quic::CertificateFingerprint"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"struct.quic::CertificateFingerprint", %"struct.quic::CertificateFingerprint"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %43, i8* %45, i64 %47) #12
  br label %48

48:                                               ; preds = %42, %39
  %49 = getelementptr inbounds %"struct.quic::CertificateFingerprint", %"struct.quic::CertificateFingerprint"* %33, i64 0, i32 1
  %50 = getelementptr inbounds %"struct.quic::CertificateFingerprint", %"struct.quic::CertificateFingerprint"* %34, i64 0, i32 1
  %51 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %48
  %56 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  %57 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #12
  br label %63

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds %"struct.quic::CertificateFingerprint", %"struct.quic::CertificateFingerprint"* %34, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %49, i8* %60, i64 %62) #12
  br label %63

63:                                               ; preds = %58, %55
  %64 = getelementptr inbounds %"struct.quic::CertificateFingerprint", %"struct.quic::CertificateFingerprint"* %34, i64 1
  %65 = getelementptr inbounds %"struct.quic::CertificateFingerprint", %"struct.quic::CertificateFingerprint"* %33, i64 1
  %66 = icmp eq %"struct.quic::CertificateFingerprint"* %64, %26
  br i1 %66, label %67, label %32

67:                                               ; preds = %63
  %68 = ptrtoint %"struct.quic::CertificateFingerprint"* %65 to i64
  br label %69

69:                                               ; preds = %16, %67
  %70 = phi i64 [ %28, %16 ], [ %68, %67 ]
  store i64 %70, i64* %27, align 8
  br label %71

71:                                               ; preds = %2, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net22WebTransportParametersC2EOS0_(%"struct.net::WebTransportParameters"* nocapture, %"struct.net::WebTransportParameters"* nocapture dereferenceable(32)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.net::WebTransportParameters", %"struct.net::WebTransportParameters"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.net::WebTransportParameters", %"struct.net::WebTransportParameters"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 3, i1 false)
  %5 = getelementptr inbounds %"struct.net::WebTransportParameters", %"struct.net::WebTransportParameters"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.net::WebTransportParameters", %"struct.net::WebTransportParameters"* %1, i64 0, i32 3
  %7 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #12
  %8 = bitcast %"class.std::__1::vector"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %5 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.net::WebTransportParameters", %"struct.net::WebTransportParameters"* %1, i64 0, i32 3, i32 0, i32 1
  %12 = bitcast %"struct.quic::CertificateFingerprint"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.net::WebTransportParameters", %"struct.net::WebTransportParameters"* %0, i64 0, i32 3, i32 0, i32 1
  %15 = bitcast %"struct.quic::CertificateFingerprint"** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.net::WebTransportParameters", %"struct.net::WebTransportParameters"* %1, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.quic::CertificateFingerprint"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.net::WebTransportParameters", %"struct.net::WebTransportParameters"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"struct.quic::CertificateFingerprint"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::WebTransportClient"* @_ZN3net24CreateWebTransportClientERK4GURLRKN3url6OriginEPNS_25WebTransportClientVisitorERKNS_19NetworkIsolationKeyEPNS_17URLRequestContextERKNS_22WebTransportParametersE(%class.GURL* dereferenceable(120), %"class.url::Origin"* dereferenceable(80), %"class.net::WebTransportClientVisitor"*, %"class.net::NetworkIsolationKey"* dereferenceable(184), %"class.net::URLRequestContext"*, %"struct.net::WebTransportParameters"* dereferenceable(32)) local_unnamed_addr #3 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::allocator", align 1
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::allocator", align 1
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = ptrtoint %"class.net::WebTransportClientVisitor"* %2 to i64
  %15 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 0, i32 1
  %17 = load i32, i32* %16, align 4, !noalias !2
  %18 = icmp slt i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #12, !alias.scope !2
  %20 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %33

21:                                               ; preds = %6
  %22 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0
  %23 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 0, i32 0
  %24 = load i32, i32* %23, align 4, !noalias !2
  %25 = sext i32 %24 to i64
  %26 = sext i32 %17 to i64
  %27 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %27) #12, !noalias !2
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %12, %"class.std::__1::basic_string"* dereferenceable(24) %22, i64 %25, i64 %26, %"class.std::__1::allocator"* nonnull dereferenceable(1) %11) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %27) #12, !noalias !2
  %28 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  br label %33

33:                                               ; preds = %19, %21
  %34 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %20, %19 ], [ %28, %21 ]
  %35 = phi i64 [ 0, %19 ], [ %32, %21 ]
  %36 = phi i8 [ 0, %19 ], [ %30, %21 ]
  %37 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url20kQuicTransportSchemeE, i64 0, i64 0)) #12
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %39 = icmp slt i8 %36, 0
  %40 = zext i8 %36 to i64
  %41 = select i1 %39, i64 %35, i64 %40
  %42 = icmp eq i64 %37, %41
  br i1 %42, label %43, label %46

43:                                               ; preds = %33
  %44 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %12, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url20kQuicTransportSchemeE, i64 0, i64 0), i64 %37) #12
  %45 = icmp eq i32 %44, 0
  br label %46

46:                                               ; preds = %33, %43
  %47 = phi i1 [ %45, %43 ], [ false, %33 ]
  %48 = load i8, i8* %38, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #13
  br label %53

53:                                               ; preds = %46, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  br i1 %47, label %54, label %110

54:                                               ; preds = %53
  %55 = getelementptr inbounds %"struct.net::WebTransportParameters", %"struct.net::WebTransportParameters"* %5, i64 0, i32 1
  %56 = load i8, i8* %55, align 1, !range !7
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %107

58:                                               ; preds = %54
  %59 = call i8* @_Znwm(i64 56) #13
  %60 = bitcast i8* %59 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net12_GLOBAL__N_124FailedWebTransportClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #12
  call void @_ZN3net13ErrorToStringEi(%"class.std::__1::basic_string"* nonnull sret %10, i32 -301) #12
  %62 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = select i1 %65, i8* %67, i8* %61
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = zext i8 %64 to i64
  %72 = select i1 %65, i64 %70, i64 %71
  %73 = getelementptr inbounds i8, i8* %59, i64 8
  %74 = bitcast i8* %73 to i32*
  store i32 -301, i32* %74, align 8
  %75 = getelementptr inbounds i8, i8* %59, i64 12
  %76 = bitcast i8* %75 to i32*
  store i32 0, i32* %76, align 4
  %77 = getelementptr inbounds i8, i8* %59, i64 16
  %78 = icmp ugt i64 %72, -17
  br i1 %78, label %79, label %81

79:                                               ; preds = %58
  %80 = bitcast i8* %77 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %80) #11
  unreachable

81:                                               ; preds = %58
  %82 = icmp ult i64 %72, 23
  br i1 %82, label %93, label %83

83:                                               ; preds = %81
  %84 = add nuw i64 %72, 16
  %85 = and i64 %84, -16
  %86 = call i8* @_Znwm(i64 %85) #13
  %87 = bitcast i8* %77 to i8**
  store i8* %86, i8** %87, align 8, !alias.scope !8
  %88 = or i64 %85, -9223372036854775808
  %89 = getelementptr inbounds i8, i8* %59, i64 32
  %90 = bitcast i8* %89 to i64*
  store i64 %88, i64* %90, align 8, !alias.scope !8
  %91 = getelementptr inbounds i8, i8* %59, i64 24
  %92 = bitcast i8* %91 to i64*
  store i64 %72, i64* %92, align 8, !alias.scope !8
  br label %97

93:                                               ; preds = %81
  %94 = trunc i64 %72 to i8
  %95 = getelementptr inbounds i8, i8* %59, i64 39
  store i8 %94, i8* %95, align 1, !alias.scope !8
  %96 = icmp eq i64 %72, 0
  br i1 %96, label %99, label %97

97:                                               ; preds = %93, %83
  %98 = phi i8* [ %86, %83 ], [ %77, %93 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %98, i8* align 1 %68, i64 %72, i1 false) #12
  br label %99

99:                                               ; preds = %97, %93
  %100 = phi i8* [ %77, %93 ], [ %98, %97 ]
  %101 = getelementptr inbounds i8, i8* %100, i64 %72
  store i8 0, i8* %101, align 1
  %102 = getelementptr inbounds i8, i8* %59, i64 40
  store i8 1, i8* %102, align 8
  br i1 %65, label %103, label %104

103:                                              ; preds = %99
  call void @_ZdlPv(i8* %67) #13
  br label %104

104:                                              ; preds = %103, %99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #12
  %105 = getelementptr inbounds i8, i8* %59, i64 48
  %106 = bitcast i8* %105 to i64*
  store i64 %14, i64* %106, align 8
  br label %254

107:                                              ; preds = %54
  %108 = call i8* @_Znwm(i64 960) #13
  %109 = bitcast i8* %108 to %"class.net::QuicTransportClient"*
  call void @_ZN3net19QuicTransportClientC1ERK4GURLRKN3url6OriginEPNS_25WebTransportClientVisitorERKNS_19NetworkIsolationKeyEPNS_17URLRequestContextERKNS_22WebTransportParametersE(%"class.net::QuicTransportClient"* nonnull %109, %class.GURL* dereferenceable(120) %0, %"class.url::Origin"* dereferenceable(80) %1, %"class.net::WebTransportClientVisitor"* %2, %"class.net::NetworkIsolationKey"* dereferenceable(184) %3, %"class.net::URLRequestContext"* %4, %"struct.net::WebTransportParameters"* dereferenceable(32) %5) #12
  br label %254

110:                                              ; preds = %53
  %111 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #12
  %112 = load i32, i32* %16, align 4, !noalias !11
  %113 = icmp slt i32 %112, 1
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 0, i64 24, i1 false) #12, !alias.scope !11
  %115 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %128

116:                                              ; preds = %110
  %117 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0
  %118 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 0, i32 0
  %119 = load i32, i32* %118, align 4, !noalias !11
  %120 = sext i32 %119 to i64
  %121 = sext i32 %112 to i64
  %122 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %122) #12, !noalias !11
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %13, %"class.std::__1::basic_string"* dereferenceable(24) %117, i64 %120, i64 %121, %"class.std::__1::allocator"* nonnull dereferenceable(1) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %122) #12, !noalias !11
  %123 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8
  br label %128

128:                                              ; preds = %114, %116
  %129 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %115, %114 ], [ %123, %116 ]
  %130 = phi i64 [ 0, %114 ], [ %127, %116 ]
  %131 = phi i8 [ 0, %114 ], [ %125, %116 ]
  %132 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0)) #12
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %134 = icmp slt i8 %131, 0
  %135 = zext i8 %131 to i64
  %136 = select i1 %134, i64 %130, i64 %135
  %137 = icmp eq i64 %132, %136
  br i1 %137, label %138, label %141

138:                                              ; preds = %128
  %139 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %13, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0), i64 %132) #12
  %140 = icmp eq i32 %139, 0
  br label %141

141:                                              ; preds = %128, %138
  %142 = phi i1 [ %140, %138 ], [ false, %128 ]
  %143 = load i8, i8* %133, align 1
  %144 = icmp slt i8 %143, 0
  br i1 %144, label %145, label %148

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  call void @_ZdlPv(i8* %147) #13
  br label %148

148:                                              ; preds = %141, %145
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #12
  br i1 %142, label %149, label %205

149:                                              ; preds = %148
  %150 = getelementptr inbounds %"struct.net::WebTransportParameters", %"struct.net::WebTransportParameters"* %5, i64 0, i32 2
  %151 = load i8, i8* %150, align 2, !range !7
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %153, label %202

153:                                              ; preds = %149
  %154 = call i8* @_Znwm(i64 56) #13
  %155 = bitcast i8* %154 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net12_GLOBAL__N_124FailedWebTransportClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %155, align 8
  %156 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %156) #12
  call void @_ZN3net13ErrorToStringEi(%"class.std::__1::basic_string"* nonnull sret %8, i32 -301) #12
  %157 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %158 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %157, i64 0, i32 1, i32 0
  %159 = load i8, i8* %158, align 1
  %160 = icmp slt i8 %159, 0
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  %163 = select i1 %160, i8* %162, i8* %156
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %165 = load i64, i64* %164, align 8
  %166 = zext i8 %159 to i64
  %167 = select i1 %160, i64 %165, i64 %166
  %168 = getelementptr inbounds i8, i8* %154, i64 8
  %169 = bitcast i8* %168 to i32*
  store i32 -301, i32* %169, align 8
  %170 = getelementptr inbounds i8, i8* %154, i64 12
  %171 = bitcast i8* %170 to i32*
  store i32 0, i32* %171, align 4
  %172 = getelementptr inbounds i8, i8* %154, i64 16
  %173 = icmp ugt i64 %167, -17
  br i1 %173, label %174, label %176

174:                                              ; preds = %153
  %175 = bitcast i8* %172 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %175) #11
  unreachable

176:                                              ; preds = %153
  %177 = icmp ult i64 %167, 23
  br i1 %177, label %188, label %178

178:                                              ; preds = %176
  %179 = add nuw i64 %167, 16
  %180 = and i64 %179, -16
  %181 = call i8* @_Znwm(i64 %180) #13
  %182 = bitcast i8* %172 to i8**
  store i8* %181, i8** %182, align 8, !alias.scope !16
  %183 = or i64 %180, -9223372036854775808
  %184 = getelementptr inbounds i8, i8* %154, i64 32
  %185 = bitcast i8* %184 to i64*
  store i64 %183, i64* %185, align 8, !alias.scope !16
  %186 = getelementptr inbounds i8, i8* %154, i64 24
  %187 = bitcast i8* %186 to i64*
  store i64 %167, i64* %187, align 8, !alias.scope !16
  br label %192

188:                                              ; preds = %176
  %189 = trunc i64 %167 to i8
  %190 = getelementptr inbounds i8, i8* %154, i64 39
  store i8 %189, i8* %190, align 1, !alias.scope !16
  %191 = icmp eq i64 %167, 0
  br i1 %191, label %194, label %192

192:                                              ; preds = %188, %178
  %193 = phi i8* [ %181, %178 ], [ %172, %188 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %193, i8* align 1 %163, i64 %167, i1 false) #12
  br label %194

194:                                              ; preds = %192, %188
  %195 = phi i8* [ %172, %188 ], [ %193, %192 ]
  %196 = getelementptr inbounds i8, i8* %195, i64 %167
  store i8 0, i8* %196, align 1
  %197 = getelementptr inbounds i8, i8* %154, i64 40
  store i8 1, i8* %197, align 8
  br i1 %160, label %198, label %199

198:                                              ; preds = %194
  call void @_ZdlPv(i8* %162) #13
  br label %199

199:                                              ; preds = %198, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %156) #12
  %200 = getelementptr inbounds i8, i8* %154, i64 48
  %201 = bitcast i8* %200 to i64*
  store i64 %14, i64* %201, align 8
  br label %254

202:                                              ; preds = %149
  %203 = call i8* @_Znwm(i64 1016) #13
  %204 = bitcast i8* %203 to %"class.net::DedicatedWebTransportHttp3Client"*
  call void @_ZN3net32DedicatedWebTransportHttp3ClientC1ERK4GURLRKN3url6OriginEPNS_25WebTransportClientVisitorERKNS_19NetworkIsolationKeyEPNS_17URLRequestContextERKNS_22WebTransportParametersE(%"class.net::DedicatedWebTransportHttp3Client"* nonnull %204, %class.GURL* dereferenceable(120) %0, %"class.url::Origin"* dereferenceable(80) %1, %"class.net::WebTransportClientVisitor"* %2, %"class.net::NetworkIsolationKey"* dereferenceable(184) %3, %"class.net::URLRequestContext"* %4, %"struct.net::WebTransportParameters"* dereferenceable(32) %5) #12
  br label %254

205:                                              ; preds = %148
  %206 = call i8* @_Znwm(i64 56) #13
  %207 = bitcast i8* %206 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net12_GLOBAL__N_124FailedWebTransportClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %207, align 8
  %208 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %208) #12
  call void @_ZN3net13ErrorToStringEi(%"class.std::__1::basic_string"* nonnull sret %7, i32 -302) #12
  %209 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %210 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %209, i64 0, i32 1, i32 0
  %211 = load i8, i8* %210, align 1
  %212 = icmp slt i8 %211, 0
  %213 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load i8*, i8** %213, align 8
  %215 = select i1 %212, i8* %214, i8* %208
  %216 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %217 = load i64, i64* %216, align 8
  %218 = zext i8 %211 to i64
  %219 = select i1 %212, i64 %217, i64 %218
  %220 = getelementptr inbounds i8, i8* %206, i64 8
  %221 = bitcast i8* %220 to i32*
  store i32 -302, i32* %221, align 8
  %222 = getelementptr inbounds i8, i8* %206, i64 12
  %223 = bitcast i8* %222 to i32*
  store i32 0, i32* %223, align 4
  %224 = getelementptr inbounds i8, i8* %206, i64 16
  %225 = icmp ugt i64 %219, -17
  br i1 %225, label %226, label %228

226:                                              ; preds = %205
  %227 = bitcast i8* %224 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %227) #11
  unreachable

228:                                              ; preds = %205
  %229 = icmp ult i64 %219, 23
  br i1 %229, label %240, label %230

230:                                              ; preds = %228
  %231 = add nuw i64 %219, 16
  %232 = and i64 %231, -16
  %233 = call i8* @_Znwm(i64 %232) #13
  %234 = bitcast i8* %224 to i8**
  store i8* %233, i8** %234, align 8, !alias.scope !19
  %235 = or i64 %232, -9223372036854775808
  %236 = getelementptr inbounds i8, i8* %206, i64 32
  %237 = bitcast i8* %236 to i64*
  store i64 %235, i64* %237, align 8, !alias.scope !19
  %238 = getelementptr inbounds i8, i8* %206, i64 24
  %239 = bitcast i8* %238 to i64*
  store i64 %219, i64* %239, align 8, !alias.scope !19
  br label %244

240:                                              ; preds = %228
  %241 = trunc i64 %219 to i8
  %242 = getelementptr inbounds i8, i8* %206, i64 39
  store i8 %241, i8* %242, align 1, !alias.scope !19
  %243 = icmp eq i64 %219, 0
  br i1 %243, label %246, label %244

244:                                              ; preds = %240, %230
  %245 = phi i8* [ %233, %230 ], [ %224, %240 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %245, i8* align 1 %215, i64 %219, i1 false) #12
  br label %246

246:                                              ; preds = %244, %240
  %247 = phi i8* [ %224, %240 ], [ %245, %244 ]
  %248 = getelementptr inbounds i8, i8* %247, i64 %219
  store i8 0, i8* %248, align 1
  %249 = getelementptr inbounds i8, i8* %206, i64 40
  store i8 1, i8* %249, align 8
  br i1 %212, label %250, label %251

250:                                              ; preds = %246
  call void @_ZdlPv(i8* %214) #13
  br label %251

251:                                              ; preds = %250, %246
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %208) #12
  %252 = getelementptr inbounds i8, i8* %206, i64 48
  %253 = bitcast i8* %252 to i64*
  store i64 %14, i64* %253, align 8
  br label %254

254:                                              ; preds = %251, %202, %199, %107, %104
  %255 = phi i8* [ %59, %104 ], [ %108, %107 ], [ %154, %199 ], [ %203, %202 ], [ %206, %251 ]
  %256 = bitcast i8* %255 to %"class.net::WebTransportClient"*
  ret %"class.net::WebTransportClient"* %256
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZN3net13ErrorToStringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_124FailedWebTransportClientD2Ev(%"class.net::(anonymous namespace)::FailedWebTransportClient"* nocapture) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::FailedWebTransportClient", %"class.net::(anonymous namespace)::FailedWebTransportClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net12_GLOBAL__N_124FailedWebTransportClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::FailedWebTransportClient", %"class.net::(anonymous namespace)::FailedWebTransportClient"* %0, i64 0, i32 1, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_124FailedWebTransportClientD0Ev(%"class.net::(anonymous namespace)::FailedWebTransportClient"*) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::FailedWebTransportClient", %"class.net::(anonymous namespace)::FailedWebTransportClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net12_GLOBAL__N_124FailedWebTransportClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::FailedWebTransportClient", %"class.net::(anonymous namespace)::FailedWebTransportClient"* %0, i64 0, i32 1, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.net::(anonymous namespace)::FailedWebTransportClient"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_124FailedWebTransportClient7ConnectEv(%"class.net::(anonymous namespace)::FailedWebTransportClient"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::FailedWebTransportClient", %"class.net::(anonymous namespace)::FailedWebTransportClient"* %0, i64 0, i32 2
  %3 = load %"class.net::WebTransportClientVisitor"*, %"class.net::WebTransportClientVisitor"** %2, align 8
  %4 = bitcast %"class.net::WebTransportClientVisitor"* %3 to void (%"class.net::WebTransportClientVisitor"*)***
  %5 = load void (%"class.net::WebTransportClientVisitor"*)**, void (%"class.net::WebTransportClientVisitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %5, i64 3
  %7 = load void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %6, align 8
  tail call void %7(%"class.net::WebTransportClientVisitor"* %3) #12
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal noalias %"class.quic::WebTransportSession"* @_ZN3net12_GLOBAL__N_124FailedWebTransportClient7sessionEv(%"class.net::(anonymous namespace)::FailedWebTransportClient"* nocapture readnone) unnamed_addr #0 align 2 {
  ret %"class.quic::WebTransportSession"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal dereferenceable(40) %"struct.net::WebTransportError"* @_ZNK3net12_GLOBAL__N_124FailedWebTransportClient5errorEv(%"class.net::(anonymous namespace)::FailedWebTransportClient"* readnone) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::FailedWebTransportClient", %"class.net::(anonymous namespace)::FailedWebTransportClient"* %0, i64 0, i32 1
  ret %"struct.net::WebTransportError"* %2
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

declare void @_ZN3net19QuicTransportClientC1ERK4GURLRKN3url6OriginEPNS_25WebTransportClientVisitorERKNS_19NetworkIsolationKeyEPNS_17URLRequestContextERKNS_22WebTransportParametersE(%"class.net::QuicTransportClient"*, %class.GURL* dereferenceable(120), %"class.url::Origin"* dereferenceable(80), %"class.net::WebTransportClientVisitor"*, %"class.net::NetworkIsolationKey"* dereferenceable(184), %"class.net::URLRequestContext"*, %"struct.net::WebTransportParameters"* dereferenceable(32)) unnamed_addr #5

declare void @_ZN3net32DedicatedWebTransportHttp3ClientC1ERK4GURLRKN3url6OriginEPNS_25WebTransportClientVisitorERKNS_19NetworkIsolationKeyEPNS_17URLRequestContextERKNS_22WebTransportParametersE(%"class.net::DedicatedWebTransportHttp3Client"*, %class.GURL* dereferenceable(120), %"class.url::Origin"* dereferenceable(80), %"class.net::WebTransportClientVisitor"*, %"class.net::NetworkIsolationKey"* dereferenceable(184), %"class.net::URLRequestContext"*, %"struct.net::WebTransportParameters"* dereferenceable(32)) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!4 = distinct !{!4, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!5 = distinct !{!5, !6, !"_ZNK4GURL6schemeEv: argument 0"}
!6 = distinct !{!6, !"_ZNK4GURL6schemeEv"}
!7 = !{i8 0, i8 2}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!10 = distinct !{!10, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!13 = distinct !{!13, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!14 = distinct !{!14, !15, !"_ZNK4GURL6schemeEv: argument 0"}
!15 = distinct !{!15, !"_ZNK4GURL6schemeEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!18 = distinct !{!18, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!21 = distinct !{!21, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
