; ModuleID = '../../third_party/webrtc/api/transport/goog_cc_factory.cc'
source_filename = "../../third_party/webrtc/api/transport/goog_cc_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::GoogCcNetworkControllerFactory" = type { %"class.webrtc::NetworkControllerFactoryInterface", %"class.webrtc::RtcEventLog"*, %"struct.webrtc::GoogCcFactoryConfig" }
%"class.webrtc::NetworkControllerFactoryInterface" = type { i32 (...)** }
%"struct.webrtc::GoogCcFactoryConfig" = type <{ %"class.std::__1::unique_ptr", %"class.webrtc::NetworkStatePredictorFactoryInterface"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.webrtc::NetworkStateEstimatorFactory"* }
%"class.webrtc::NetworkStateEstimatorFactory" = type { i32 (...)** }
%"class.webrtc::NetworkStatePredictorFactoryInterface" = type { i32 (...)** }
%"class.webrtc::RtcEventLog" = type { i32 (...)** }
%"class.webrtc::GoogCcFeedbackNetworkControllerFactory" = type { %"class.webrtc::GoogCcNetworkControllerFactory" }
%"class.webrtc::NetworkControllerInterface" = type { i32 (...)** }
%"struct.webrtc::NetworkControllerConfig" = type { %"struct.webrtc::TargetRateConstraints", %"struct.webrtc::StreamsConfig", %"class.webrtc::WebRtcKeyValueConfig"*, %"class.webrtc::RtcEventLog"* }
%"struct.webrtc::TargetRateConstraints" = type { %"class.webrtc::Timestamp", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional" }
%"class.webrtc::Timestamp" = type { %"class.webrtc::rtc_units_impl::UnitBase" }
%"class.webrtc::rtc_units_impl::UnitBase" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.webrtc::DataRate" }
%"class.webrtc::DataRate" = type { %"class.webrtc::rtc_units_impl::RelativeUnit" }
%"class.webrtc::rtc_units_impl::RelativeUnit" = type { %"class.webrtc::rtc_units_impl::UnitBase.7" }
%"class.webrtc::rtc_units_impl::UnitBase.7" = type { i64 }
%"struct.webrtc::StreamsConfig" = type { %"class.webrtc::Timestamp", %"class.absl::optional.8", %"class.absl::optional.13", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional.8" = type { %"class.absl::optional_internal::optional_data.9" }
%"class.absl::optional_internal::optional_data.9" = type { %"class.absl::optional_internal::optional_data_base.10" }
%"class.absl::optional_internal::optional_data_base.10" = type { %"class.absl::optional_internal::optional_data_dtor_base.11" }
%"class.absl::optional_internal::optional_data_dtor_base.11" = type { i8, %union.anon.12 }
%union.anon.12 = type { i8 }
%"class.absl::optional.13" = type { %"class.absl::optional_internal::optional_data.14" }
%"class.absl::optional_internal::optional_data.14" = type { %"class.absl::optional_internal::optional_data_base.15" }
%"class.absl::optional_internal::optional_data_base.15" = type { %"class.absl::optional_internal::optional_data_dtor_base.16" }
%"class.absl::optional_internal::optional_data_dtor_base.16" = type { i8, %union.anon.17 }
%union.anon.17 = type { double }
%"class.webrtc::WebRtcKeyValueConfig" = type { i32 (...)** }
%"struct.webrtc::GoogCcConfig" = type <{ %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.webrtc::NetworkStateEstimator"* }
%"class.webrtc::NetworkStateEstimator" = type { i32 (...)** }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.webrtc::NetworkStatePredictor"* }
%"class.webrtc::NetworkStatePredictor" = type { i32 (...)** }
%"class.webrtc::GoogCcNetworkController" = type { %"class.webrtc::NetworkControllerInterface", %"class.webrtc::FieldTrialBasedConfig", %"class.webrtc::WebRtcKeyValueConfig"*, %"class.webrtc::RtcEventLog"*, i8, [7 x i8], %"class.webrtc::FieldTrialFlag", %"class.webrtc::FieldTrialFlag", i8, i8, i8, [5 x i8], %"class.webrtc::RateControlSettings", i8, %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.151", %"class.absl::optional.157", %"class.webrtc::DataRate", %"class.webrtc::DataRate", %"class.webrtc::DataRate", %"class.absl::optional", i8, %"class.absl::optional.137", %"class.webrtc::Timestamp", i32, i32, %"class.std::__1::deque.162", %"class.webrtc::DataRate", %"class.webrtc::DataRate", %"class.webrtc::DataRate", %"class.absl::optional.174", %"class.webrtc::TimeDelta", %"class.webrtc::Timestamp", double, %"class.webrtc::DataRate", %"class.webrtc::DataRate", %"class.webrtc::DataRate", i8, %"class.absl::optional.47" }
%"class.webrtc::FieldTrialBasedConfig" = type { %"class.webrtc::WebRtcKeyValueConfig" }
%"class.webrtc::FieldTrialFlag" = type { %"class.webrtc::FieldTrialParameterInterface.base", i8, [6 x i8] }
%"class.webrtc::FieldTrialParameterInterface.base" = type <{ i32 (...)**, %"class.std::__1::vector", %"class.std::__1::basic_string", i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.webrtc::FieldTrialParameterInterface"**, %"class.webrtc::FieldTrialParameterInterface"**, %"class.std::__1::__compressed_pair.33" }
%"class.webrtc::FieldTrialParameterInterface" = type <{ i32 (...)**, %"class.std::__1::vector", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.webrtc::FieldTrialParameterInterface"** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.38 }
%union.anon.38 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.webrtc::RateControlSettings" = type { %"struct.webrtc::CongestionWindowConfig", %"struct.webrtc::VideoRateControlConfig" }
%"struct.webrtc::CongestionWindowConfig" = type <{ %"class.absl::optional.42", %"class.absl::optional.42", %"class.absl::optional.47", i8, [7 x i8] }>
%"class.absl::optional.42" = type { %"class.absl::optional_internal::optional_data.43" }
%"class.absl::optional_internal::optional_data.43" = type { %"class.absl::optional_internal::optional_data_base.44" }
%"class.absl::optional_internal::optional_data_base.44" = type { %"class.absl::optional_internal::optional_data_dtor_base.45" }
%"class.absl::optional_internal::optional_data_dtor_base.45" = type { i8, %union.anon.46 }
%union.anon.46 = type { i32 }
%"struct.webrtc::VideoRateControlConfig" = type <{ %"class.absl::optional.13", i8, [3 x i8], %"class.absl::optional.42", %"class.absl::optional.42", i8, i8, [2 x i8], double, double, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.webrtc::ProbeController"* }
%"class.webrtc::ProbeController" = type { i8, i32, i64, i64, i64, i64, i64, i64, %"class.absl::optional.57", %"class.absl::optional.57", i8, i64, i64, i64, i8, i8, i8, i64, i64, %"class.webrtc::RtcEventLog"*, i32, %"struct.webrtc::ProbeControllerConfig" }
%"class.absl::optional.57" = type { %"class.absl::optional_internal::optional_data.58" }
%"class.absl::optional_internal::optional_data.58" = type { %"class.absl::optional_internal::optional_data_base.59" }
%"class.absl::optional_internal::optional_data_base.59" = type { %"class.absl::optional_internal::optional_data_dtor_base.60" }
%"class.absl::optional_internal::optional_data_dtor_base.60" = type { i8, %union.anon.61 }
%union.anon.61 = type { i64 }
%"struct.webrtc::ProbeControllerConfig" = type { %"class.webrtc::FieldTrialParameter", %"class.webrtc::FieldTrialOptional", %"class.webrtc::FieldTrialParameter", %"class.webrtc::FieldTrialParameter", %"class.webrtc::FieldTrialParameter.62", %"class.webrtc::FieldTrialParameter", %"class.webrtc::FieldTrialOptional", %"class.webrtc::FieldTrialOptional", %"class.webrtc::FieldTrialFlag", %"class.webrtc::FieldTrialParameter.65" }
%"class.webrtc::FieldTrialParameter.62" = type { %"class.webrtc::FieldTrialParameterInterface.base", %"class.webrtc::TimeDelta" }
%"class.webrtc::FieldTrialParameter" = type { %"class.webrtc::FieldTrialParameterInterface.base", double }
%"class.webrtc::FieldTrialOptional" = type { %"class.webrtc::FieldTrialParameterInterface.base", %"class.absl::optional.13" }
%"class.webrtc::FieldTrialParameter.65" = type { %"class.webrtc::FieldTrialParameterInterface.base", %"class.webrtc::DataRate" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.webrtc::CongestionWindowPushbackController"* }
%"class.webrtc::CongestionWindowPushbackController" = type { i8, i32, %"class.absl::optional.47", i64, i64, double }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.webrtc::SendSideBandwidthEstimation"* }
%"class.webrtc::SendSideBandwidthEstimation" = type { %"class.webrtc::RttBasedBackoff", %"class.webrtc::LinkCapacityTracker", %"class.std::__1::deque", i32, i32, %"class.absl::optional", %"class.webrtc::DataRate", %"class.webrtc::DataRate", %"class.webrtc::DataRate", %"class.webrtc::DataRate", %"class.webrtc::Timestamp", i8, %"class.webrtc::Timestamp", %"class.webrtc::Timestamp", i8, i8, %"class.webrtc::TimeDelta", %"class.webrtc::DataRate", %"class.webrtc::DataRate", %"class.webrtc::Timestamp", %"class.webrtc::Timestamp", i32, %"class.webrtc::DataRate", i32, i32, %"class.std::__1::vector.88", %"class.webrtc::RtcEventLog"*, %"class.webrtc::Timestamp", float, float, %"class.webrtc::DataRate", %"class.webrtc::LossBasedBandwidthEstimation" }
%"class.webrtc::RttBasedBackoff" = type { %"class.webrtc::FieldTrialFlag", %"class.webrtc::FieldTrialParameter.62", %"class.webrtc::FieldTrialParameter", %"class.webrtc::FieldTrialParameter.62", %"class.webrtc::FieldTrialParameter.65", %"class.webrtc::TimeDelta", %"class.webrtc::Timestamp", %"class.webrtc::TimeDelta", %"class.webrtc::Timestamp" }
%"class.webrtc::LinkCapacityTracker" = type { %"class.webrtc::FieldTrialParameter.62", double, %"class.webrtc::Timestamp", %"class.webrtc::DataRate" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.83" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair"**, %"struct.std::__1::pair"**, %"struct.std::__1::pair"**, %"class.std::__1::__compressed_pair.78" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.std::__1::pair"** }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { i64 }
%"class.std::__1::vector.88" = type { i64*, i64, %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.webrtc::LossBasedBandwidthEstimation" = type { %"struct.webrtc::LossBasedControlConfig", double, double, %"class.webrtc::DataRate", %"class.webrtc::DataRate", %"class.webrtc::Timestamp", %"class.webrtc::Timestamp", i8, %"class.webrtc::Timestamp", double }
%"struct.webrtc::LossBasedControlConfig" = type { i8, %"class.webrtc::FieldTrialParameter", %"class.webrtc::FieldTrialParameter", %"class.webrtc::FieldTrialParameter.62", %"class.webrtc::FieldTrialParameter.62", %"class.webrtc::FieldTrialParameter", %"class.webrtc::FieldTrialParameter.62", %"class.webrtc::FieldTrialParameter.62", %"class.webrtc::FieldTrialParameter.62", %"class.webrtc::FieldTrialParameter.65", %"class.webrtc::FieldTrialParameter.65", %"class.webrtc::FieldTrialParameter.65", %"class.webrtc::FieldTrialParameter.65", %"class.webrtc::FieldTrialParameter", %"class.webrtc::FieldTrialParameter.93", %"class.webrtc::FieldTrialParameter.62", %"class.webrtc::FieldTrialParameter.62" }
%"class.webrtc::FieldTrialParameter.93" = type { %"class.webrtc::FieldTrialParameterInterface.base", i8, [6 x i8] }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.webrtc::AlrDetector"* }
%"class.webrtc::AlrDetector" = type { %"struct.webrtc::AlrDetectorConfig", %"class.absl::optional.57", %"class.webrtc::IntervalBudget", %"class.absl::optional.57", %"class.webrtc::RtcEventLog"* }
%"struct.webrtc::AlrDetectorConfig" = type { double, double, double }
%"class.webrtc::IntervalBudget" = type <{ i32, [4 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.webrtc::ProbeBitrateEstimator"* }
%"class.webrtc::ProbeBitrateEstimator" = type { %"class.std::__1::map", %"class.webrtc::RtcEventLog"*, %"class.absl::optional" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.webrtc::DelayBasedBwe"* }
%"class.webrtc::DelayBasedBwe" = type <{ i32 (...)**, %"class.rtc::RaceChecker", %"class.webrtc::RtcEventLog"*, %"class.webrtc::WebRtcKeyValueConfig"*, %"struct.webrtc::BweSeparateAudioPacketsSettings", i64, %"class.webrtc::Timestamp", %"class.webrtc::NetworkStatePredictor"*, %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.131", %"class.webrtc::DelayIncreaseDetectorInterface"*, %"class.webrtc::Timestamp", i8, [7 x i8], %"class.webrtc::AimdRateControl", %"class.webrtc::DataRate", i8, [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.rtc::RaceChecker" = type { i32, i64 }
%"struct.webrtc::BweSeparateAudioPacketsSettings" = type { i8, i32, %"class.webrtc::TimeDelta" }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.webrtc::InterArrival"* }
%"class.webrtc::InterArrival" = type { i32, %"struct.webrtc::InterArrival::TimestampGroup", %"struct.webrtc::InterArrival::TimestampGroup", double, i8, i32 }
%"struct.webrtc::InterArrival::TimestampGroup" = type { i64, i32, i32, i64, i64, i64 }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.webrtc::InterArrivalDelta"* }
%"class.webrtc::InterArrivalDelta" = type <{ %"class.webrtc::TimeDelta", %"struct.webrtc::InterArrivalDelta::SendTimeGroup", %"struct.webrtc::InterArrivalDelta::SendTimeGroup", i32, [4 x i8] }>
%"struct.webrtc::InterArrivalDelta::SendTimeGroup" = type { i64, %"class.webrtc::Timestamp", %"class.webrtc::Timestamp", %"class.webrtc::Timestamp", %"class.webrtc::Timestamp", %"class.webrtc::Timestamp" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.webrtc::DelayIncreaseDetectorInterface"* }
%"class.webrtc::DelayIncreaseDetectorInterface" = type { i32 (...)** }
%"class.webrtc::AimdRateControl" = type { %"class.webrtc::DataRate", %"class.webrtc::DataRate", %"class.webrtc::DataRate", %"class.webrtc::DataRate", %"class.webrtc::LinkCapacityEstimator", %"class.absl::optional.137", i32, %"class.webrtc::Timestamp", %"class.webrtc::Timestamp", %"class.webrtc::Timestamp", i8, double, i8, %"class.webrtc::TimeDelta", i8, i8, i8, i8, i8, %"class.absl::optional", %"class.webrtc::FieldTrialOptional.142", %"class.webrtc::FieldTrialFlag" }
%"class.webrtc::LinkCapacityEstimator" = type { %"class.absl::optional.13", double }
%"class.webrtc::FieldTrialOptional.142" = type { %"class.webrtc::FieldTrialParameterInterface.base", %"class.absl::optional.143" }
%"class.absl::optional.143" = type { %"class.absl::optional_internal::optional_data.144" }
%"class.absl::optional_internal::optional_data.144" = type { %"class.absl::optional_internal::optional_data_base.145" }
%"class.absl::optional_internal::optional_data_base.145" = type { %"class.absl::optional_internal::optional_data_dtor_base.146" }
%"class.absl::optional_internal::optional_data_dtor_base.146" = type { i8, %union.anon.147 }
%union.anon.147 = type { %"class.webrtc::TimeDelta" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.webrtc::AcknowledgedBitrateEstimatorInterface"* }
%"class.webrtc::AcknowledgedBitrateEstimatorInterface" = type { i32 (...)** }
%"class.absl::optional.157" = type { %"class.absl::optional_internal::optional_data.158" }
%"class.absl::optional_internal::optional_data.158" = type { %"class.absl::optional_internal::optional_data_base.159" }
%"class.absl::optional_internal::optional_data_base.159" = type { %"class.absl::optional_internal::optional_data_dtor_base.160" }
%"class.absl::optional_internal::optional_data_dtor_base.160" = type { i8, %union.anon.161 }
%union.anon.161 = type { %"struct.webrtc::NetworkControllerConfig" }
%"class.absl::optional.137" = type { %"class.absl::optional_internal::optional_data.138" }
%"class.absl::optional_internal::optional_data.138" = type { %"class.absl::optional_internal::optional_data_base.139" }
%"class.absl::optional_internal::optional_data_base.139" = type { %"class.absl::optional_internal::optional_data_dtor_base.140" }
%"class.absl::optional_internal::optional_data_dtor_base.140" = type { i8, %union.anon.141 }
%union.anon.141 = type { %"struct.webrtc::NetworkStateEstimate" }
%"struct.webrtc::NetworkStateEstimate" = type { double, %"class.webrtc::Timestamp", %"class.webrtc::Timestamp", %"class.webrtc::Timestamp", %"class.webrtc::DataRate", %"class.webrtc::DataRate", %"class.webrtc::DataRate", %"class.webrtc::TimeDelta", %"class.webrtc::TimeDelta", %"class.webrtc::TimeDelta", %"class.webrtc::TimeDelta", %"class.webrtc::Timestamp", double, double, %"class.webrtc::DataRate", %"class.webrtc::DataRate", double }
%"class.std::__1::deque.162" = type { %"class.std::__1::__deque_base.163" }
%"class.std::__1::__deque_base.163" = type { %"struct.std::__1::__split_buffer.164", i64, %"class.std::__1::__compressed_pair.170" }
%"struct.std::__1::__split_buffer.164" = type { i64**, i64**, i64**, %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { i64** }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.absl::optional.174" = type { %"class.absl::optional_internal::optional_data.175" }
%"class.absl::optional_internal::optional_data.175" = type { %"class.absl::optional_internal::optional_data_base.176" }
%"class.absl::optional_internal::optional_data_base.176" = type { %"class.absl::optional_internal::optional_data_dtor_base.177" }
%"class.absl::optional_internal::optional_data_dtor_base.177" = type { i8, %union.anon.178 }
%union.anon.178 = type { i8 }
%"class.webrtc::TimeDelta" = type { %"class.webrtc::rtc_units_impl::RelativeUnit.63" }
%"class.webrtc::rtc_units_impl::RelativeUnit.63" = type { %"class.webrtc::rtc_units_impl::UnitBase.64" }
%"class.webrtc::rtc_units_impl::UnitBase.64" = type { i64 }
%"class.absl::optional.47" = type { %"class.absl::optional_internal::optional_data.48" }
%"class.absl::optional_internal::optional_data.48" = type { %"class.absl::optional_internal::optional_data_base.49" }
%"class.absl::optional_internal::optional_data_base.49" = type { %"class.absl::optional_internal::optional_data_dtor_base.50" }
%"class.absl::optional_internal::optional_data_dtor_base.50" = type { i8, %union.anon.51 }
%union.anon.51 = type { %"class.webrtc::DataSize" }
%"class.webrtc::DataSize" = type { %"class.webrtc::rtc_units_impl::RelativeUnit.52" }
%"class.webrtc::rtc_units_impl::RelativeUnit.52" = type { %"class.webrtc::rtc_units_impl::UnitBase.53" }
%"class.webrtc::rtc_units_impl::UnitBase.53" = type { i64 }

$_ZN6webrtc30GoogCcNetworkControllerFactoryD2Ev = comdat any

$_ZN6webrtc30GoogCcNetworkControllerFactoryD0Ev = comdat any

$_ZN6webrtc38GoogCcFeedbackNetworkControllerFactoryD0Ev = comdat any

$_ZTVN6webrtc38GoogCcFeedbackNetworkControllerFactoryE = comdat any

@_ZTVN6webrtc30GoogCcNetworkControllerFactoryE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::GoogCcNetworkControllerFactory"*)* @_ZN6webrtc30GoogCcNetworkControllerFactoryD2Ev to i8*), i8* bitcast (void (%"class.webrtc::GoogCcNetworkControllerFactory"*)* @_ZN6webrtc30GoogCcNetworkControllerFactoryD0Ev to i8*), i8* bitcast (%"class.webrtc::NetworkControllerInterface"* (%"class.webrtc::GoogCcNetworkControllerFactory"*, %"struct.webrtc::NetworkControllerConfig"*)* @_ZN6webrtc30GoogCcNetworkControllerFactory6CreateENS_23NetworkControllerConfigE to i8*), i8* bitcast (i64 (%"class.webrtc::GoogCcNetworkControllerFactory"*)* @_ZNK6webrtc30GoogCcNetworkControllerFactory18GetProcessIntervalEv to i8*)] }, align 8
@_ZTVN6webrtc38GoogCcFeedbackNetworkControllerFactoryE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::GoogCcNetworkControllerFactory"*)* @_ZN6webrtc30GoogCcNetworkControllerFactoryD2Ev to i8*), i8* bitcast (void (%"class.webrtc::GoogCcFeedbackNetworkControllerFactory"*)* @_ZN6webrtc38GoogCcFeedbackNetworkControllerFactoryD0Ev to i8*), i8* bitcast (%"class.webrtc::NetworkControllerInterface"* (%"class.webrtc::GoogCcNetworkControllerFactory"*, %"struct.webrtc::NetworkControllerConfig"*)* @_ZN6webrtc30GoogCcNetworkControllerFactory6CreateENS_23NetworkControllerConfigE to i8*), i8* bitcast (i64 (%"class.webrtc::GoogCcNetworkControllerFactory"*)* @_ZNK6webrtc30GoogCcNetworkControllerFactory18GetProcessIntervalEv to i8*)] }, comdat, align 8

@_ZN6webrtc30GoogCcNetworkControllerFactoryC1EPNS_11RtcEventLogE = hidden unnamed_addr alias void (%"class.webrtc::GoogCcNetworkControllerFactory"*, %"class.webrtc::RtcEventLog"*), void (%"class.webrtc::GoogCcNetworkControllerFactory"*, %"class.webrtc::RtcEventLog"*)* @_ZN6webrtc30GoogCcNetworkControllerFactoryC2EPNS_11RtcEventLogE
@_ZN6webrtc30GoogCcNetworkControllerFactoryC1EPNS_37NetworkStatePredictorFactoryInterfaceE = hidden unnamed_addr alias void (%"class.webrtc::GoogCcNetworkControllerFactory"*, %"class.webrtc::NetworkStatePredictorFactoryInterface"*), void (%"class.webrtc::GoogCcNetworkControllerFactory"*, %"class.webrtc::NetworkStatePredictorFactoryInterface"*)* @_ZN6webrtc30GoogCcNetworkControllerFactoryC2EPNS_37NetworkStatePredictorFactoryInterfaceE
@_ZN6webrtc30GoogCcNetworkControllerFactoryC1ENS_19GoogCcFactoryConfigE = hidden unnamed_addr alias void (%"class.webrtc::GoogCcNetworkControllerFactory"*, %"struct.webrtc::GoogCcFactoryConfig"*), void (%"class.webrtc::GoogCcNetworkControllerFactory"*, %"struct.webrtc::GoogCcFactoryConfig"*)* @_ZN6webrtc30GoogCcNetworkControllerFactoryC2ENS_19GoogCcFactoryConfigE
@_ZN6webrtc38GoogCcFeedbackNetworkControllerFactoryC1EPNS_11RtcEventLogE = hidden unnamed_addr alias void (%"class.webrtc::GoogCcFeedbackNetworkControllerFactory"*, %"class.webrtc::RtcEventLog"*), void (%"class.webrtc::GoogCcFeedbackNetworkControllerFactory"*, %"class.webrtc::RtcEventLog"*)* @_ZN6webrtc38GoogCcFeedbackNetworkControllerFactoryC2EPNS_11RtcEventLogE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc30GoogCcNetworkControllerFactoryC2EPNS_11RtcEventLogE(%"class.webrtc::GoogCcNetworkControllerFactory"* nocapture, %"class.webrtc::RtcEventLog"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::GoogCcNetworkControllerFactory", %"class.webrtc::GoogCcNetworkControllerFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc30GoogCcNetworkControllerFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::GoogCcNetworkControllerFactory", %"class.webrtc::GoogCcNetworkControllerFactory"* %0, i64 0, i32 1
  store %"class.webrtc::RtcEventLog"* %1, %"class.webrtc::RtcEventLog"** %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::GoogCcNetworkControllerFactory", %"class.webrtc::GoogCcNetworkControllerFactory"* %0, i64 0, i32 2
  %6 = bitcast %"struct.webrtc::GoogCcFactoryConfig"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 17, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc30GoogCcNetworkControllerFactoryC2EPNS_37NetworkStatePredictorFactoryInterfaceE(%"class.webrtc::GoogCcNetworkControllerFactory"* nocapture, %"class.webrtc::NetworkStatePredictorFactoryInterface"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::GoogCcNetworkControllerFactory", %"class.webrtc::GoogCcNetworkControllerFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc30GoogCcNetworkControllerFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::GoogCcNetworkControllerFactory", %"class.webrtc::GoogCcNetworkControllerFactory"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.webrtc::GoogCcNetworkControllerFactory", %"class.webrtc::GoogCcNetworkControllerFactory"* %0, i64 0, i32 2, i32 1
  %6 = bitcast %"class.webrtc::RtcEventLog"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 25, i1 false)
  store %"class.webrtc::NetworkStatePredictorFactoryInterface"* %1, %"class.webrtc::NetworkStatePredictorFactoryInterface"** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc30GoogCcNetworkControllerFactoryC2ENS_19GoogCcFactoryConfigE(%"class.webrtc::GoogCcNetworkControllerFactory"* nocapture, %"struct.webrtc::GoogCcFactoryConfig"* nocapture byval(%"struct.webrtc::GoogCcFactoryConfig") align 8) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::GoogCcNetworkControllerFactory", %"class.webrtc::GoogCcNetworkControllerFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc30GoogCcNetworkControllerFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::GoogCcNetworkControllerFactory", %"class.webrtc::GoogCcNetworkControllerFactory"* %0, i64 0, i32 1
  store %"class.webrtc::RtcEventLog"* null, %"class.webrtc::RtcEventLog"** %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::GoogCcNetworkControllerFactory", %"class.webrtc::GoogCcNetworkControllerFactory"* %0, i64 0, i32 2
  %6 = bitcast %"struct.webrtc::GoogCcFactoryConfig"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"struct.webrtc::GoogCcFactoryConfig"* %5 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::GoogCcNetworkControllerFactory", %"class.webrtc::GoogCcNetworkControllerFactory"* %0, i64 0, i32 2, i32 1
  %10 = getelementptr inbounds %"struct.webrtc::GoogCcFactoryConfig", %"struct.webrtc::GoogCcFactoryConfig"* %1, i64 0, i32 1
  %11 = bitcast %"class.webrtc::NetworkStatePredictorFactoryInterface"** %9 to i8*
  %12 = bitcast %"class.webrtc::NetworkStatePredictorFactoryInterface"** %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 9, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::NetworkControllerInterface"* @_ZN6webrtc30GoogCcNetworkControllerFactory6CreateENS_23NetworkControllerConfigE(%"class.webrtc::GoogCcNetworkControllerFactory"* nocapture readonly, %"struct.webrtc::NetworkControllerConfig"*) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.webrtc::NetworkControllerConfig", align 8
  %4 = alloca %"struct.webrtc::GoogCcConfig", align 8
  %5 = getelementptr inbounds %"class.webrtc::GoogCcNetworkControllerFactory", %"class.webrtc::GoogCcNetworkControllerFactory"* %0, i64 0, i32 1
  %6 = load %"class.webrtc::RtcEventLog"*, %"class.webrtc::RtcEventLog"** %5, align 8
  %7 = icmp eq %"class.webrtc::RtcEventLog"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.webrtc::NetworkControllerConfig", %"struct.webrtc::NetworkControllerConfig"* %1, i64 0, i32 3
  store %"class.webrtc::RtcEventLog"* %6, %"class.webrtc::RtcEventLog"** %9, align 8
  br label %10

10:                                               ; preds = %2, %8
  %11 = getelementptr inbounds %"class.webrtc::GoogCcNetworkControllerFactory", %"class.webrtc::GoogCcNetworkControllerFactory"* %0, i64 0, i32 2, i32 2
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = getelementptr inbounds %"class.webrtc::GoogCcNetworkControllerFactory", %"class.webrtc::GoogCcNetworkControllerFactory"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.webrtc::NetworkStateEstimatorFactory"*, %"class.webrtc::NetworkStateEstimatorFactory"** %13, align 8
  %15 = icmp eq %"class.webrtc::NetworkStateEstimatorFactory"* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"struct.webrtc::NetworkControllerConfig", %"struct.webrtc::NetworkControllerConfig"* %1, i64 0, i32 2
  %18 = load %"class.webrtc::WebRtcKeyValueConfig"*, %"class.webrtc::WebRtcKeyValueConfig"** %17, align 8
  %19 = bitcast %"class.webrtc::NetworkStateEstimatorFactory"* %14 to %"class.webrtc::NetworkStateEstimator"* (%"class.webrtc::NetworkStateEstimatorFactory"*, %"class.webrtc::WebRtcKeyValueConfig"*)***
  %20 = load %"class.webrtc::NetworkStateEstimator"* (%"class.webrtc::NetworkStateEstimatorFactory"*, %"class.webrtc::WebRtcKeyValueConfig"*)**, %"class.webrtc::NetworkStateEstimator"* (%"class.webrtc::NetworkStateEstimatorFactory"*, %"class.webrtc::WebRtcKeyValueConfig"*)*** %19, align 8
  %21 = load %"class.webrtc::NetworkStateEstimator"* (%"class.webrtc::NetworkStateEstimatorFactory"*, %"class.webrtc::WebRtcKeyValueConfig"*)*, %"class.webrtc::NetworkStateEstimator"* (%"class.webrtc::NetworkStateEstimatorFactory"*, %"class.webrtc::WebRtcKeyValueConfig"*)** %20, align 8
  %22 = tail call %"class.webrtc::NetworkStateEstimator"* %21(%"class.webrtc::NetworkStateEstimatorFactory"* nonnull %14, %"class.webrtc::WebRtcKeyValueConfig"* %18) #8
  %23 = ptrtoint %"class.webrtc::NetworkStateEstimator"* %22 to i64
  br label %24

24:                                               ; preds = %10, %16
  %25 = phi i64 [ %23, %16 ], [ 0, %10 ]
  %26 = getelementptr inbounds %"class.webrtc::GoogCcNetworkControllerFactory", %"class.webrtc::GoogCcNetworkControllerFactory"* %0, i64 0, i32 2, i32 1
  %27 = load %"class.webrtc::NetworkStatePredictorFactoryInterface"*, %"class.webrtc::NetworkStatePredictorFactoryInterface"** %26, align 8
  %28 = icmp eq %"class.webrtc::NetworkStatePredictorFactoryInterface"* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = bitcast %"class.webrtc::NetworkStatePredictorFactoryInterface"* %27 to %"class.webrtc::NetworkStatePredictor"* (%"class.webrtc::NetworkStatePredictorFactoryInterface"*)***
  %31 = load %"class.webrtc::NetworkStatePredictor"* (%"class.webrtc::NetworkStatePredictorFactoryInterface"*)**, %"class.webrtc::NetworkStatePredictor"* (%"class.webrtc::NetworkStatePredictorFactoryInterface"*)*** %30, align 8
  %32 = load %"class.webrtc::NetworkStatePredictor"* (%"class.webrtc::NetworkStatePredictorFactoryInterface"*)*, %"class.webrtc::NetworkStatePredictor"* (%"class.webrtc::NetworkStatePredictorFactoryInterface"*)** %31, align 8
  %33 = tail call %"class.webrtc::NetworkStatePredictor"* %32(%"class.webrtc::NetworkStatePredictorFactoryInterface"* nonnull %27) #8
  %34 = ptrtoint %"class.webrtc::NetworkStatePredictor"* %33 to i64
  br label %35

35:                                               ; preds = %29, %24
  %36 = phi i64 [ 0, %24 ], [ %34, %29 ]
  %37 = bitcast %"struct.webrtc::NetworkControllerConfig"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %37)
  %38 = bitcast %"struct.webrtc::GoogCcConfig"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38)
  %39 = tail call i8* @_Znwm(i64 880) #9
  %40 = bitcast i8* %39 to %"class.webrtc::GoogCcNetworkController"*
  %41 = getelementptr inbounds %"struct.webrtc::NetworkControllerConfig", %"struct.webrtc::NetworkControllerConfig"* %3, i64 0, i32 0
  %42 = getelementptr inbounds %"struct.webrtc::NetworkControllerConfig", %"struct.webrtc::NetworkControllerConfig"* %1, i64 0, i32 0
  call void @_ZN6webrtc21TargetRateConstraintsC1ERKS0_(%"struct.webrtc::TargetRateConstraints"* nonnull %41, %"struct.webrtc::TargetRateConstraints"* dereferenceable(56) %42) #8
  %43 = getelementptr inbounds %"struct.webrtc::NetworkControllerConfig", %"struct.webrtc::NetworkControllerConfig"* %3, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.webrtc::NetworkControllerConfig", %"struct.webrtc::NetworkControllerConfig"* %1, i64 0, i32 1
  call void @_ZN6webrtc13StreamsConfigC1ERKS0_(%"struct.webrtc::StreamsConfig"* %43, %"struct.webrtc::StreamsConfig"* dereferenceable(80) %44) #8
  %45 = getelementptr inbounds %"struct.webrtc::NetworkControllerConfig", %"struct.webrtc::NetworkControllerConfig"* %3, i64 0, i32 2
  %46 = getelementptr inbounds %"struct.webrtc::NetworkControllerConfig", %"struct.webrtc::NetworkControllerConfig"* %1, i64 0, i32 2
  %47 = bitcast %"class.webrtc::WebRtcKeyValueConfig"** %45 to i8*
  %48 = bitcast %"class.webrtc::WebRtcKeyValueConfig"** %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 16, i1 false) #8
  %49 = bitcast %"struct.webrtc::GoogCcConfig"* %4 to i64*
  store i64 %25, i64* %49, align 8
  %50 = getelementptr inbounds %"struct.webrtc::GoogCcConfig", %"struct.webrtc::GoogCcConfig"* %4, i64 0, i32 1
  %51 = bitcast %"class.std::__1::unique_ptr.24"* %50 to i64*
  store i64 %36, i64* %51, align 8
  %52 = getelementptr inbounds %"struct.webrtc::GoogCcConfig", %"struct.webrtc::GoogCcConfig"* %4, i64 0, i32 2
  store i8 %12, i8* %52, align 8
  call void @_ZN6webrtc23GoogCcNetworkControllerC1ENS_23NetworkControllerConfigENS_12GoogCcConfigE(%"class.webrtc::GoogCcNetworkController"* nonnull %40, %"struct.webrtc::NetworkControllerConfig"* nonnull %3, %"struct.webrtc::GoogCcConfig"* nonnull byval(%"struct.webrtc::GoogCcConfig") align 8 %4) #8
  call void @_ZN6webrtc13StreamsConfigD1Ev(%"struct.webrtc::StreamsConfig"* %43) #8
  call void @_ZN6webrtc21TargetRateConstraintsD1Ev(%"struct.webrtc::TargetRateConstraints"* nonnull %41) #8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %37)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38)
  %53 = bitcast i8* %39 to %"class.webrtc::NetworkControllerInterface"*
  ret %"class.webrtc::NetworkControllerInterface"* %53
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK6webrtc30GoogCcNetworkControllerFactory18GetProcessIntervalEv(%"class.webrtc::GoogCcNetworkControllerFactory"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i64 25000
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc38GoogCcFeedbackNetworkControllerFactoryC2EPNS_11RtcEventLogE(%"class.webrtc::GoogCcFeedbackNetworkControllerFactory"* nocapture, %"class.webrtc::RtcEventLog"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::GoogCcFeedbackNetworkControllerFactory", %"class.webrtc::GoogCcFeedbackNetworkControllerFactory"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.webrtc::GoogCcFeedbackNetworkControllerFactory", %"class.webrtc::GoogCcFeedbackNetworkControllerFactory"* %0, i64 0, i32 0, i32 1
  store %"class.webrtc::RtcEventLog"* %1, %"class.webrtc::RtcEventLog"** %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::GoogCcFeedbackNetworkControllerFactory", %"class.webrtc::GoogCcFeedbackNetworkControllerFactory"* %0, i64 0, i32 0, i32 2
  %6 = bitcast %"struct.webrtc::GoogCcFactoryConfig"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc38GoogCcFeedbackNetworkControllerFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %7 = getelementptr inbounds %"class.webrtc::GoogCcFeedbackNetworkControllerFactory", %"class.webrtc::GoogCcFeedbackNetworkControllerFactory"* %0, i64 0, i32 0, i32 2, i32 2
  store i8 1, i8* %7, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc30GoogCcNetworkControllerFactoryD2Ev(%"class.webrtc::GoogCcNetworkControllerFactory"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::GoogCcNetworkControllerFactory", %"class.webrtc::GoogCcNetworkControllerFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc30GoogCcNetworkControllerFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::GoogCcNetworkControllerFactory", %"class.webrtc::GoogCcNetworkControllerFactory"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::NetworkStateEstimatorFactory"*, %"class.webrtc::NetworkStateEstimatorFactory"** %3, align 8
  store %"class.webrtc::NetworkStateEstimatorFactory"* null, %"class.webrtc::NetworkStateEstimatorFactory"** %3, align 8
  %5 = icmp eq %"class.webrtc::NetworkStateEstimatorFactory"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.webrtc::NetworkStateEstimatorFactory"* %4 to void (%"class.webrtc::NetworkStateEstimatorFactory"*)***
  %8 = load void (%"class.webrtc::NetworkStateEstimatorFactory"*)**, void (%"class.webrtc::NetworkStateEstimatorFactory"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.webrtc::NetworkStateEstimatorFactory"*)*, void (%"class.webrtc::NetworkStateEstimatorFactory"*)** %8, i64 2
  %10 = load void (%"class.webrtc::NetworkStateEstimatorFactory"*)*, void (%"class.webrtc::NetworkStateEstimatorFactory"*)** %9, align 8
  tail call void %10(%"class.webrtc::NetworkStateEstimatorFactory"* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc30GoogCcNetworkControllerFactoryD0Ev(%"class.webrtc::GoogCcNetworkControllerFactory"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::GoogCcNetworkControllerFactory", %"class.webrtc::GoogCcNetworkControllerFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc30GoogCcNetworkControllerFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::GoogCcNetworkControllerFactory", %"class.webrtc::GoogCcNetworkControllerFactory"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::NetworkStateEstimatorFactory"*, %"class.webrtc::NetworkStateEstimatorFactory"** %3, align 8
  store %"class.webrtc::NetworkStateEstimatorFactory"* null, %"class.webrtc::NetworkStateEstimatorFactory"** %3, align 8
  %5 = icmp eq %"class.webrtc::NetworkStateEstimatorFactory"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.webrtc::NetworkStateEstimatorFactory"* %4 to void (%"class.webrtc::NetworkStateEstimatorFactory"*)***
  %8 = load void (%"class.webrtc::NetworkStateEstimatorFactory"*)**, void (%"class.webrtc::NetworkStateEstimatorFactory"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.webrtc::NetworkStateEstimatorFactory"*)*, void (%"class.webrtc::NetworkStateEstimatorFactory"*)** %8, i64 2
  %10 = load void (%"class.webrtc::NetworkStateEstimatorFactory"*)*, void (%"class.webrtc::NetworkStateEstimatorFactory"*)** %9, align 8
  tail call void %10(%"class.webrtc::NetworkStateEstimatorFactory"* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.webrtc::GoogCcNetworkControllerFactory"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc38GoogCcFeedbackNetworkControllerFactoryD0Ev(%"class.webrtc::GoogCcFeedbackNetworkControllerFactory"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::GoogCcFeedbackNetworkControllerFactory", %"class.webrtc::GoogCcFeedbackNetworkControllerFactory"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc30GoogCcNetworkControllerFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::GoogCcFeedbackNetworkControllerFactory", %"class.webrtc::GoogCcFeedbackNetworkControllerFactory"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::NetworkStateEstimatorFactory"*, %"class.webrtc::NetworkStateEstimatorFactory"** %3, align 8
  store %"class.webrtc::NetworkStateEstimatorFactory"* null, %"class.webrtc::NetworkStateEstimatorFactory"** %3, align 8
  %5 = icmp eq %"class.webrtc::NetworkStateEstimatorFactory"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.webrtc::NetworkStateEstimatorFactory"* %4 to void (%"class.webrtc::NetworkStateEstimatorFactory"*)***
  %8 = load void (%"class.webrtc::NetworkStateEstimatorFactory"*)**, void (%"class.webrtc::NetworkStateEstimatorFactory"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.webrtc::NetworkStateEstimatorFactory"*)*, void (%"class.webrtc::NetworkStateEstimatorFactory"*)** %8, i64 2
  %10 = load void (%"class.webrtc::NetworkStateEstimatorFactory"*)*, void (%"class.webrtc::NetworkStateEstimatorFactory"*)** %9, align 8
  tail call void %10(%"class.webrtc::NetworkStateEstimatorFactory"* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.webrtc::GoogCcFeedbackNetworkControllerFactory"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN6webrtc23GoogCcNetworkControllerC1ENS_23NetworkControllerConfigENS_12GoogCcConfigE(%"class.webrtc::GoogCcNetworkController"*, %"struct.webrtc::NetworkControllerConfig"*, %"struct.webrtc::GoogCcConfig"* byval(%"struct.webrtc::GoogCcConfig") align 8) unnamed_addr #6

declare void @_ZN6webrtc21TargetRateConstraintsC1ERKS0_(%"struct.webrtc::TargetRateConstraints"*, %"struct.webrtc::TargetRateConstraints"* dereferenceable(56)) unnamed_addr #6

declare void @_ZN6webrtc13StreamsConfigC1ERKS0_(%"struct.webrtc::StreamsConfig"*, %"struct.webrtc::StreamsConfig"* dereferenceable(80)) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6webrtc13StreamsConfigD1Ev(%"struct.webrtc::StreamsConfig"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6webrtc21TargetRateConstraintsD1Ev(%"struct.webrtc::TargetRateConstraints"*) unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
