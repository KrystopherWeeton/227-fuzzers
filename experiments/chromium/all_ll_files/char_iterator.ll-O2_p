; ModuleID = '../../base/i18n/char_iterator.cc'
source_filename = "../../base/i18n/char_iterator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.base::i18n::UTF8CharIterator" = type <{ %"class.base::BasicStringPiece", i64, i64, i64, i32, [4 x i8] }>
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.base::i18n::UTF16CharIterator" = type { %"class.base::BasicStringPiece.0", i64, i64, i32, i32 }
%"class.base::BasicStringPiece.0" = type { i16*, i64 }

@.str = private unnamed_addr constant [17 x i8] c" 000000000000\1000\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"\00\00\00\00\00\00\00\00\1E\0F\0F\0F\00\00\00\00\00", align 1

@_ZN4base4i18n16UTF8CharIteratorC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE = hidden unnamed_addr alias void (%"class.base::i18n::UTF8CharIterator"*, i8*, i64), void (%"class.base::i18n::UTF8CharIterator"*, i8*, i64)* @_ZN4base4i18n16UTF8CharIteratorC2ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE
@_ZN4base4i18n16UTF8CharIteratorD1Ev = hidden unnamed_addr alias void (%"class.base::i18n::UTF8CharIterator"*), void (%"class.base::i18n::UTF8CharIterator"*)* @_ZN4base4i18n16UTF8CharIteratorD2Ev
@_ZN4base4i18n17UTF16CharIteratorC1ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE = hidden unnamed_addr alias void (%"class.base::i18n::UTF16CharIterator"*, i16*, i64), void (%"class.base::i18n::UTF16CharIterator"*, i16*, i64)* @_ZN4base4i18n17UTF16CharIteratorC2ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE
@_ZN4base4i18n17UTF16CharIteratorC1EOS1_ = hidden unnamed_addr alias void (%"class.base::i18n::UTF16CharIterator"*, %"class.base::i18n::UTF16CharIterator"*), void (%"class.base::i18n::UTF16CharIterator"*, %"class.base::i18n::UTF16CharIterator"*)* @_ZN4base4i18n17UTF16CharIteratorC2EOS1_
@_ZN4base4i18n17UTF16CharIteratorD1Ev = hidden unnamed_addr alias void (%"class.base::i18n::UTF16CharIterator"*), void (%"class.base::i18n::UTF16CharIterator"*)* @_ZN4base4i18n17UTF16CharIteratorD2Ev
@_ZN4base4i18n17UTF16CharIteratorC1ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEm = hidden unnamed_addr alias void (%"class.base::i18n::UTF16CharIterator"*, i16*, i64, i64), void (%"class.base::i18n::UTF16CharIterator"*, i16*, i64, i64)* @_ZN4base4i18n17UTF16CharIteratorC2ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEm

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base4i18n16UTF8CharIteratorC2ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::i18n::UTF8CharIterator"* nocapture, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::i18n::UTF8CharIterator", %"class.base::i18n::UTF8CharIterator"* %0, i64 0, i32 0, i32 0
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %"class.base::i18n::UTF8CharIterator", %"class.base::i18n::UTF8CharIterator"* %0, i64 0, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds %"class.base::i18n::UTF8CharIterator", %"class.base::i18n::UTF8CharIterator"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::i18n::UTF8CharIterator", %"class.base::i18n::UTF8CharIterator"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.base::i18n::UTF8CharIterator", %"class.base::i18n::UTF8CharIterator"* %0, i64 0, i32 4
  %9 = icmp eq i64 %2, 0
  %10 = bitcast i64* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 28, i1 false)
  br i1 %9, label %86, label %11

11:                                               ; preds = %3
  store i64 1, i64* %7, align 8
  %12 = load i8, i8* %1, align 1
  %13 = zext i8 %12 to i32
  store i32 %13, i32* %8, align 8
  %14 = icmp sgt i8 %12, -1
  br i1 %14, label %86, label %15

15:                                               ; preds = %11
  %16 = icmp eq i64 %2, 1
  br i1 %16, label %85, label %17

17:                                               ; preds = %15
  %18 = icmp ugt i8 %12, -33
  br i1 %18, label %19, label %69

19:                                               ; preds = %17
  %20 = icmp ult i8 %12, -16
  br i1 %20, label %21, label %36

21:                                               ; preds = %19
  %22 = and i32 %13, 15
  store i32 %22, i32* %8, align 8
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = getelementptr inbounds i8, i8* %1, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = lshr i8 %28, 5
  %30 = zext i8 %29 to i32
  %31 = shl i32 1, %30
  %32 = and i32 %31, %26
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %85, label %34

34:                                               ; preds = %21
  %35 = and i8 %28, 63
  br label %61

36:                                               ; preds = %19
  %37 = add nsw i32 %13, -240
  store i32 %37, i32* %8, align 8
  %38 = icmp slt i32 %37, 5
  br i1 %38, label %39, label %85

39:                                               ; preds = %36
  %40 = getelementptr inbounds i8, i8* %1, i64 1
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = lshr i32 %42, 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = sext i8 %46 to i32
  %48 = shl i32 1, %37
  %49 = and i32 %48, %47
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %85, label %51

51:                                               ; preds = %39
  %52 = shl nsw i32 %37, 6
  %53 = and i32 %42, 63
  %54 = or i32 %53, %52
  store i32 %54, i32* %8, align 8
  store i64 2, i64* %7, align 8
  %55 = icmp eq i64 %2, 2
  br i1 %55, label %85, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds i8, i8* %1, i64 2
  %58 = load i8, i8* %57, align 1
  %59 = xor i8 %58, -128
  %60 = icmp ult i8 %59, 64
  br i1 %60, label %61, label %85

61:                                               ; preds = %34, %56
  %62 = phi i64 [ 2, %34 ], [ 3, %56 ]
  %63 = phi i32 [ %22, %34 ], [ %54, %56 ]
  %64 = phi i8 [ %35, %34 ], [ %59, %56 ]
  %65 = shl nsw i32 %63, 6
  %66 = zext i8 %64 to i32
  %67 = or i32 %65, %66
  store i32 %67, i32* %8, align 8
  store i64 %62, i64* %7, align 8
  %68 = icmp eq i64 %62, %2
  br i1 %68, label %85, label %73

69:                                               ; preds = %17
  %70 = icmp ugt i8 %12, -63
  br i1 %70, label %71, label %85

71:                                               ; preds = %69
  %72 = and i32 %13, 31
  store i32 %72, i32* %8, align 8
  br label %73

73:                                               ; preds = %61, %71
  %74 = phi i32 [ %67, %61 ], [ %72, %71 ]
  %75 = phi i64 [ %62, %61 ], [ 1, %71 ]
  %76 = getelementptr inbounds i8, i8* %1, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = xor i8 %77, -128
  %79 = icmp ult i8 %78, 64
  br i1 %79, label %80, label %85

80:                                               ; preds = %73
  %81 = zext i8 %78 to i32
  %82 = shl i32 %74, 6
  %83 = or i32 %82, %81
  store i32 %83, i32* %8, align 8
  %84 = add nuw nsw i64 %75, 1
  store i64 %84, i64* %7, align 8
  br label %86

85:                                               ; preds = %21, %61, %51, %39, %15, %73, %69, %56, %36
  store i32 -1, i32* %8, align 8
  br label %86

86:                                               ; preds = %80, %85, %11, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base4i18n16UTF8CharIteratorD2Ev(%"class.base::i18n::UTF8CharIterator"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base4i18n16UTF8CharIterator7AdvanceEv(%"class.base::i18n::UTF8CharIterator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::i18n::UTF8CharIterator", %"class.base::i18n::UTF8CharIterator"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.base::i18n::UTF8CharIterator", %"class.base::i18n::UTF8CharIterator"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %3, %5
  br i1 %6, label %7, label %96

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::i18n::UTF8CharIterator", %"class.base::i18n::UTF8CharIterator"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %2, align 8
  %10 = getelementptr inbounds %"class.base::i18n::UTF8CharIterator", %"class.base::i18n::UTF8CharIterator"* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, 1
  store i64 %12, i64* %10, align 8
  %13 = icmp ult i64 %9, %5
  br i1 %13, label %14, label %96

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.base::i18n::UTF8CharIterator", %"class.base::i18n::UTF8CharIterator"* %0, i64 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = add nuw i64 %9, 1
  store i64 %17, i64* %8, align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 %9
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds %"class.base::i18n::UTF8CharIterator", %"class.base::i18n::UTF8CharIterator"* %0, i64 0, i32 4
  store i32 %20, i32* %21, align 8
  %22 = icmp sgt i8 %19, -1
  br i1 %22, label %96, label %23

23:                                               ; preds = %14
  %24 = icmp eq i64 %17, %5
  br i1 %24, label %95, label %25

25:                                               ; preds = %23
  %26 = icmp ugt i8 %19, -33
  br i1 %26, label %27, label %79

27:                                               ; preds = %25
  %28 = icmp ult i8 %19, -16
  br i1 %28, label %29, label %44

29:                                               ; preds = %27
  %30 = and i32 %20, 15
  store i32 %30, i32* %21, align 8
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i32
  %35 = getelementptr inbounds i8, i8* %16, i64 %17
  %36 = load i8, i8* %35, align 1
  %37 = lshr i8 %36, 5
  %38 = zext i8 %37 to i32
  %39 = shl i32 1, %38
  %40 = and i32 %39, %34
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %95, label %42

42:                                               ; preds = %29
  %43 = and i8 %36, 63
  br label %70

44:                                               ; preds = %27
  %45 = add nsw i32 %20, -240
  store i32 %45, i32* %21, align 8
  %46 = icmp slt i32 %45, 5
  br i1 %46, label %47, label %95

47:                                               ; preds = %44
  %48 = getelementptr inbounds i8, i8* %16, i64 %17
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = lshr i32 %50, 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = sext i8 %54 to i32
  %56 = shl i32 1, %45
  %57 = and i32 %56, %55
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %95, label %59

59:                                               ; preds = %47
  %60 = shl nsw i32 %45, 6
  %61 = and i32 %50, 63
  %62 = or i32 %61, %60
  store i32 %62, i32* %21, align 8
  %63 = add i64 %9, 2
  store i64 %63, i64* %8, align 8
  %64 = icmp eq i64 %63, %5
  br i1 %64, label %95, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds i8, i8* %16, i64 %63
  %67 = load i8, i8* %66, align 1
  %68 = xor i8 %67, -128
  %69 = icmp ult i8 %68, 64
  br i1 %69, label %70, label %95

70:                                               ; preds = %42, %65
  %71 = phi i64 [ %17, %42 ], [ %63, %65 ]
  %72 = phi i32 [ %30, %42 ], [ %62, %65 ]
  %73 = phi i8 [ %43, %42 ], [ %68, %65 ]
  %74 = shl nsw i32 %72, 6
  %75 = zext i8 %73 to i32
  %76 = or i32 %74, %75
  store i32 %76, i32* %21, align 8
  %77 = add i64 %71, 1
  store i64 %77, i64* %8, align 8
  %78 = icmp eq i64 %77, %5
  br i1 %78, label %95, label %83

79:                                               ; preds = %25
  %80 = icmp ugt i8 %19, -63
  br i1 %80, label %81, label %95

81:                                               ; preds = %79
  %82 = and i32 %20, 31
  store i32 %82, i32* %21, align 8
  br label %83

83:                                               ; preds = %70, %81
  %84 = phi i32 [ %76, %70 ], [ %82, %81 ]
  %85 = phi i64 [ %77, %70 ], [ %17, %81 ]
  %86 = getelementptr inbounds i8, i8* %16, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = xor i8 %87, -128
  %89 = icmp ult i8 %88, 64
  br i1 %89, label %90, label %95

90:                                               ; preds = %83
  %91 = zext i8 %88 to i32
  %92 = shl i32 %84, 6
  %93 = or i32 %92, %91
  store i32 %93, i32* %21, align 8
  %94 = add i64 %85, 1
  store i64 %94, i64* %8, align 8
  br label %96

95:                                               ; preds = %29, %70, %59, %47, %23, %83, %79, %65, %44
  store i32 -1, i32* %21, align 8
  br label %96

96:                                               ; preds = %7, %14, %95, %90, %1
  %97 = phi i1 [ false, %1 ], [ true, %90 ], [ true, %95 ], [ true, %14 ], [ true, %7 ]
  ret i1 %97
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base4i18n17UTF16CharIteratorC2ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.base::i18n::UTF16CharIterator"* nocapture, i16*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 0, i32 0
  store i16* %1, i16** %4, align 8
  %5 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 4
  %9 = icmp eq i64 %2, 0
  %10 = bitcast i64* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false)
  br i1 %9, label %28, label %11

11:                                               ; preds = %3
  store i64 1, i64* %7, align 8
  %12 = load i16, i16* %1, align 2
  %13 = zext i16 %12 to i32
  store i32 %13, i32* %8, align 4
  %14 = and i32 %13, 64512
  %15 = icmp ne i32 %14, 55296
  %16 = icmp eq i64 %2, 1
  %17 = or i1 %16, %15
  br i1 %17, label %28, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds i16, i16* %1, i64 1
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = and i32 %21, 64512
  %23 = icmp eq i32 %22, 56320
  br i1 %23, label %24, label %28

24:                                               ; preds = %18
  store i64 2, i64* %7, align 8
  %25 = shl nuw nsw i32 %13, 10
  %26 = add nsw i32 %25, -56613888
  %27 = add nsw i32 %26, %21
  store i32 %27, i32* %8, align 4
  br label %28

28:                                               ; preds = %3, %11, %18, %24
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base4i18n17UTF16CharIteratorC2ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEm(%"class.base::i18n::UTF16CharIterator"* nocapture, i16*, i64, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 0, i32 0
  store i16* %1, i16** %5, align 8
  %6 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 0, i32 1
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 1
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 2
  store i64 %3, i64* %8, align 8
  %9 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 3
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 4
  store i32 0, i32* %10, align 4
  %11 = icmp ugt i64 %2, %3
  br i1 %11, label %12, label %32

12:                                               ; preds = %4
  %13 = add nuw i64 %3, 1
  store i64 %13, i64* %8, align 8
  %14 = getelementptr inbounds i16, i16* %1, i64 %3
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i32
  store i32 %16, i32* %10, align 4
  %17 = and i32 %16, 64512
  %18 = icmp ne i32 %17, 55296
  %19 = icmp eq i64 %13, %2
  %20 = or i1 %19, %18
  br i1 %20, label %32, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds i16, i16* %1, i64 %13
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = and i32 %24, 64512
  %26 = icmp eq i32 %25, 56320
  br i1 %26, label %27, label %32

27:                                               ; preds = %21
  %28 = add i64 %3, 2
  store i64 %28, i64* %8, align 8
  %29 = shl nuw nsw i32 %16, 10
  %30 = add nsw i32 %29, -56613888
  %31 = add nsw i32 %30, %24
  store i32 %31, i32* %10, align 4
  br label %32

32:                                               ; preds = %12, %27, %21, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base4i18n17UTF16CharIteratorC2EOS1_(%"class.base::i18n::UTF16CharIterator"* nocapture, %"class.base::i18n::UTF16CharIterator"* nocapture readonly dereferenceable(40)) unnamed_addr #3 align 2 {
  %3 = bitcast %"class.base::i18n::UTF16CharIterator"* %0 to i8*
  %4 = bitcast %"class.base::i18n::UTF16CharIterator"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base4i18n17UTF16CharIteratorD2Ev(%"class.base::i18n::UTF16CharIterator"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.base::i18n::UTF16CharIterator"* @_ZN4base4i18n17UTF16CharIteratoraSEOS1_(%"class.base::i18n::UTF16CharIterator"* returned, %"class.base::i18n::UTF16CharIterator"* nocapture readonly dereferenceable(40)) local_unnamed_addr #3 align 2 {
  %3 = bitcast %"class.base::i18n::UTF16CharIterator"* %0 to i8*
  %4 = bitcast %"class.base::i18n::UTF16CharIterator"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %1, i64 0, i32 1
  %7 = bitcast i64* %5 to i8*
  %8 = bitcast i64* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  ret %"class.base::i18n::UTF16CharIterator"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base4i18n17UTF16CharIterator10LowerBoundENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEm(%"class.base::i18n::UTF16CharIterator"* noalias nocapture sret, i16*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds i16, i16* %1, i64 %3
  %6 = load i16, i16* %5, align 2
  %7 = and i16 %6, -1024
  %8 = icmp eq i16 %7, -9216
  %9 = icmp ne i64 %3, 0
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %18

11:                                               ; preds = %4
  %12 = add i64 %3, -1
  %13 = getelementptr inbounds i16, i16* %1, i64 %12
  %14 = load i16, i16* %13, align 2
  %15 = and i16 %14, -1024
  %16 = icmp eq i16 %15, -10240
  %17 = select i1 %16, i64 %12, i64 %3
  br label %18

18:                                               ; preds = %11, %4
  %19 = phi i64 [ %3, %4 ], [ %17, %11 ]
  %20 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 0, i32 0
  store i16* %1, i16** %20, align 8
  %21 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 0, i32 1
  store i64 %2, i64* %21, align 8
  %22 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 1
  store i64 %19, i64* %22, align 8
  %23 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 2
  store i64 %19, i64* %23, align 8
  %24 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 3
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 4
  store i32 0, i32* %25, align 4
  %26 = icmp ult i64 %19, %2
  br i1 %26, label %27, label %47

27:                                               ; preds = %18
  %28 = add nuw i64 %19, 1
  store i64 %28, i64* %23, align 8
  %29 = getelementptr inbounds i16, i16* %1, i64 %19
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  store i32 %31, i32* %25, align 4
  %32 = and i32 %31, 64512
  %33 = icmp ne i32 %32, 55296
  %34 = icmp eq i64 %28, %2
  %35 = or i1 %34, %33
  br i1 %35, label %47, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds i16, i16* %1, i64 %28
  %38 = load i16, i16* %37, align 2
  %39 = zext i16 %38 to i32
  %40 = and i32 %39, 64512
  %41 = icmp eq i32 %40, 56320
  br i1 %41, label %42, label %47

42:                                               ; preds = %36
  %43 = add i64 %19, 2
  store i64 %43, i64* %23, align 8
  %44 = shl nuw nsw i32 %31, 10
  %45 = add nsw i32 %44, -56613888
  %46 = add nsw i32 %45, %39
  store i32 %46, i32* %25, align 4
  br label %47

47:                                               ; preds = %18, %27, %36, %42
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base4i18n17UTF16CharIterator10UpperBoundENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEm(%"class.base::i18n::UTF16CharIterator"* noalias nocapture sret, i16*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %21, label %6

6:                                                ; preds = %4
  %7 = icmp ugt i64 %2, %3
  br i1 %7, label %8, label %21

8:                                                ; preds = %6
  %9 = add i64 %3, -1
  %10 = getelementptr inbounds i16, i16* %1, i64 %9
  %11 = load i16, i16* %10, align 2
  %12 = and i16 %11, -1024
  %13 = icmp eq i16 %12, -10240
  br i1 %13, label %14, label %21

14:                                               ; preds = %8
  %15 = getelementptr inbounds i16, i16* %1, i64 %3
  %16 = load i16, i16* %15, align 2
  %17 = and i16 %16, -1024
  %18 = icmp eq i16 %17, -9216
  %19 = zext i1 %18 to i64
  %20 = add nuw i64 %19, %3
  br label %21

21:                                               ; preds = %6, %14, %4, %8
  %22 = phi i64 [ %3, %8 ], [ 0, %4 ], [ %20, %14 ], [ %3, %6 ]
  %23 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 0, i32 0
  store i16* %1, i16** %23, align 8
  %24 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 0, i32 1
  store i64 %2, i64* %24, align 8
  %25 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 1
  store i64 %22, i64* %25, align 8
  %26 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 2
  store i64 %22, i64* %26, align 8
  %27 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 3
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 4
  store i32 0, i32* %28, align 4
  %29 = icmp ult i64 %22, %2
  br i1 %29, label %30, label %50

30:                                               ; preds = %21
  %31 = add nuw i64 %22, 1
  store i64 %31, i64* %26, align 8
  %32 = getelementptr inbounds i16, i16* %1, i64 %22
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  store i32 %34, i32* %28, align 4
  %35 = and i32 %34, 64512
  %36 = icmp ne i32 %35, 55296
  %37 = icmp eq i64 %31, %2
  %38 = or i1 %37, %36
  br i1 %38, label %50, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds i16, i16* %1, i64 %31
  %41 = load i16, i16* %40, align 2
  %42 = zext i16 %41 to i32
  %43 = and i32 %42, 64512
  %44 = icmp eq i32 %43, 56320
  br i1 %44, label %45, label %50

45:                                               ; preds = %39
  %46 = add i64 %22, 2
  store i64 %46, i64* %26, align 8
  %47 = shl nuw nsw i32 %34, 10
  %48 = add nsw i32 %47, -56613888
  %49 = add nsw i32 %48, %42
  store i32 %49, i32* %28, align 4
  br label %50

50:                                               ; preds = %21, %30, %39, %45
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK4base4i18n17UTF16CharIterator13NextCodePointEv(%"class.base::i18n::UTF16CharIterator"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %3, %5
  br i1 %6, label %7, label %44

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 0, i32 0
  %9 = load i16*, i16** %8, align 8
  %10 = getelementptr inbounds i16, i16* %9, i64 %3
  %11 = load i16, i16* %10, align 2
  %12 = zext i16 %11 to i32
  %13 = and i32 %12, 63488
  %14 = icmp eq i32 %13, 55296
  br i1 %14, label %15, label %44

15:                                               ; preds = %7
  %16 = and i32 %12, 1024
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %31

18:                                               ; preds = %15
  %19 = add nuw i64 %3, 1
  %20 = icmp eq i64 %19, %5
  br i1 %20, label %44, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds i16, i16* %9, i64 %19
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = and i32 %24, 64512
  %26 = icmp eq i32 %25, 56320
  br i1 %26, label %27, label %44

27:                                               ; preds = %21
  %28 = shl nuw nsw i32 %12, 10
  %29 = add nsw i32 %28, -56613888
  %30 = add nsw i32 %29, %24
  br label %44

31:                                               ; preds = %15
  %32 = icmp eq i64 %3, 0
  br i1 %32, label %44, label %33

33:                                               ; preds = %31
  %34 = add i64 %3, -1
  %35 = getelementptr inbounds i16, i16* %9, i64 %34
  %36 = load i16, i16* %35, align 2
  %37 = zext i16 %36 to i32
  %38 = and i32 %37, 64512
  %39 = icmp eq i32 %38, 55296
  br i1 %39, label %40, label %44

40:                                               ; preds = %33
  %41 = shl nuw nsw i32 %37, 10
  %42 = add nuw nsw i32 %12, -56613888
  %43 = add nsw i32 %42, %41
  br label %44

44:                                               ; preds = %7, %18, %31, %33, %40, %21, %27, %1
  %45 = phi i32 [ 0, %1 ], [ %12, %7 ], [ %30, %27 ], [ %12, %21 ], [ %12, %18 ], [ %43, %40 ], [ %12, %33 ], [ %12, %31 ]
  ret i32 %45
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK4base4i18n17UTF16CharIterator17PreviousCodePointEv(%"class.base::i18n::UTF16CharIterator"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = trunc i64 %3 to i32
  %7 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 0, i32 0
  %8 = load i16*, i16** %7, align 8
  %9 = add i32 %6, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i16, i16* %8, i64 %10
  %12 = load i16, i16* %11, align 2
  %13 = zext i16 %12 to i32
  %14 = and i32 %13, 64512
  %15 = icmp ne i32 %14, 56320
  %16 = icmp eq i32 %9, 0
  %17 = or i1 %16, %15
  br i1 %17, label %30, label %18

18:                                               ; preds = %5
  %19 = add i64 %3, 4294967294
  %20 = and i64 %19, 4294967295
  %21 = getelementptr inbounds i16, i16* %8, i64 %20
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i32
  %24 = and i32 %23, 64512
  %25 = icmp eq i32 %24, 55296
  br i1 %25, label %26, label %30

26:                                               ; preds = %18
  %27 = shl nuw nsw i32 %23, 10
  %28 = add nuw nsw i32 %13, -56613888
  %29 = add nsw i32 %28, %27
  br label %30

30:                                               ; preds = %5, %26, %18, %1
  %31 = phi i32 [ 0, %1 ], [ %13, %5 ], [ %29, %26 ], [ %13, %18 ]
  ret i32 %31
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base4i18n17UTF16CharIterator7AdvanceEv(%"class.base::i18n::UTF16CharIterator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %3, %5
  br i1 %6, label %7, label %37

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %2, align 8
  %10 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 8
  %13 = icmp ult i64 %9, %5
  br i1 %13, label %14, label %37

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = add nuw i64 %9, 1
  store i64 %17, i64* %8, align 8
  %18 = getelementptr inbounds i16, i16* %16, i64 %9
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 4
  store i32 %20, i32* %21, align 4
  %22 = and i32 %20, 64512
  %23 = icmp ne i32 %22, 55296
  %24 = icmp eq i64 %17, %5
  %25 = or i1 %23, %24
  br i1 %25, label %37, label %26

26:                                               ; preds = %14
  %27 = getelementptr inbounds i16, i16* %16, i64 %17
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = and i32 %29, 64512
  %31 = icmp eq i32 %30, 56320
  br i1 %31, label %32, label %37

32:                                               ; preds = %26
  %33 = add i64 %9, 2
  store i64 %33, i64* %8, align 8
  %34 = shl nuw nsw i32 %20, 10
  %35 = add nsw i32 %34, -56613888
  %36 = add nsw i32 %35, %29
  store i32 %36, i32* %21, align 4
  br label %37

37:                                               ; preds = %14, %32, %26, %7, %1
  %38 = phi i1 [ false, %1 ], [ true, %7 ], [ true, %14 ], [ true, %26 ], [ true, %32 ]
  ret i1 %38
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base4i18n17UTF16CharIterator8ReadCharEv(%"class.base::i18n::UTF16CharIterator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 0, i32 0
  %3 = load i16*, i16** %2, align 8
  %4 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 1
  store i64 %6, i64* %4, align 8
  %7 = getelementptr inbounds i16, i16* %3, i64 %5
  %8 = load i16, i16* %7, align 2
  %9 = zext i16 %8 to i32
  %10 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 4
  store i32 %9, i32* %10, align 4
  %11 = and i32 %9, 64512
  %12 = icmp eq i32 %11, 55296
  br i1 %12, label %13, label %28

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %6, %15
  br i1 %16, label %28, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds i16, i16* %3, i64 %6
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = and i32 %20, 64512
  %22 = icmp eq i32 %21, 56320
  br i1 %22, label %23, label %28

23:                                               ; preds = %17
  %24 = add i64 %5, 2
  store i64 %24, i64* %4, align 8
  %25 = shl nuw nsw i32 %9, 10
  %26 = add nsw i32 %25, -56613888
  %27 = add nsw i32 %26, %20
  store i32 %27, i32* %10, align 4
  br label %28

28:                                               ; preds = %17, %23, %13, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base4i18n17UTF16CharIterator6RewindEv(%"class.base::i18n::UTF16CharIterator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %32, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 2
  store i64 %3, i64* %6, align 8
  %7 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, -1
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 0, i32 0
  %11 = load i16*, i16** %10, align 8
  %12 = add i64 %3, -1
  store i64 %12, i64* %2, align 8
  %13 = getelementptr inbounds i16, i16* %11, i64 %12
  %14 = load i16, i16* %13, align 2
  %15 = zext i16 %14 to i32
  %16 = getelementptr inbounds %"class.base::i18n::UTF16CharIterator", %"class.base::i18n::UTF16CharIterator"* %0, i64 0, i32 4
  store i32 %15, i32* %16, align 4
  %17 = and i32 %15, 64512
  %18 = icmp ne i32 %17, 56320
  %19 = icmp eq i64 %12, 0
  %20 = or i1 %19, %18
  br i1 %20, label %32, label %21

21:                                               ; preds = %5
  %22 = add i64 %3, -2
  %23 = getelementptr inbounds i16, i16* %11, i64 %22
  %24 = load i16, i16* %23, align 2
  %25 = zext i16 %24 to i32
  %26 = and i32 %25, 64512
  %27 = icmp eq i32 %26, 55296
  br i1 %27, label %28, label %32

28:                                               ; preds = %21
  store i64 %22, i64* %2, align 8
  %29 = shl nuw nsw i32 %25, 10
  %30 = add nuw nsw i32 %15, -56613888
  %31 = add nsw i32 %30, %29
  store i32 %31, i32* %16, align 4
  br label %32

32:                                               ; preds = %5, %28, %21, %1
  %33 = phi i1 [ false, %1 ], [ true, %21 ], [ true, %28 ], [ true, %5 ]
  ret i1 %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
