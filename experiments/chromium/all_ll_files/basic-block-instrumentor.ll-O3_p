; ModuleID = '../../v8/src/compiler/basic-block-instrumentor.cc'
source_filename = "../../v8/src/compiler/basic-block-instrumentor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::BasicBlockProfilerData" = type <{ %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.v8::internal::OptimizedCompilationInfo" = type { i32, i32, i32, i32, %"class.v8::internal::Handle", %"class.v8::internal::Handle.13", %"class.v8::internal::Handle.14", %"class.v8::internal::Handle.15", %"class.v8::internal::BasicBlockProfilerData"*, %"class.std::__1::unique_ptr", %"class.v8::internal::BytecodeOffset", %"class.v8::internal::JavaScriptFrame"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::NodeObserver"*, i8, %"class.std::__1::vector.1145", i32, i32, %"class.v8::internal::Vector.1152", %"class.std::__1::unique_ptr.1153", %"class.v8::internal::TickCounter", %"class.std::__1::unique_ptr.1077", %"class.std::__1::unique_ptr.774" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Handle.13" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.14" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.15" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.v8::internal::wasm::WasmCompilationResult"* }
%"struct.v8::internal::wasm::WasmCompilationResult" = type opaque
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::JavaScriptFrame" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::CommonFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::CommonFrame" = type { %"class.v8::internal::StackFrame" }
%"class.v8::internal::StackFrame" = type { i32 (...)**, %"class.v8::internal::StackFrameIteratorBase"*, %"class.v8::internal::Isolate"*, %"struct.v8::internal::StackFrame::State" }
%"class.v8::internal::StackFrameIteratorBase" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::EntryFrame", %"class.v8::internal::ConstructEntryFrame", %"class.v8::internal::ExitFrame", %"class.v8::internal::WasmFrame", %"class.v8::internal::WasmToJsFrame", %"class.v8::internal::JsToWasmFrame", %"class.v8::internal::WasmDebugBreakFrame", %"class.v8::internal::CWasmEntryFrame", %"class.v8::internal::WasmExitFrame", %"class.v8::internal::WasmCompileLazyFrame", %"class.v8::internal::InterpretedFrame", %"class.v8::internal::BaselineFrame", %"class.v8::internal::OptimizedFrame", %"class.v8::internal::StubFrame", %"class.v8::internal::BuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame", %"class.v8::internal::InternalFrame", %"class.v8::internal::ConstructFrame", %"class.v8::internal::BuiltinFrame", %"class.v8::internal::BuiltinExitFrame", %"class.v8::internal::NativeFrame", %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackHandler"*, i8, [7 x i8] }>
%"class.v8::internal::EntryFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::TypedFrame" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::ConstructEntryFrame" = type { %"class.v8::internal::EntryFrame" }
%"class.v8::internal::ExitFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmToJsFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::JsToWasmFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmDebugBreakFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::CWasmEntryFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmExitFrame" = type { %"class.v8::internal::WasmFrame" }
%"class.v8::internal::WasmCompileLazyFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::InterpretedFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::UnoptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::BaselineFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::OptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::StubFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::BuiltinContinuationFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::JavaScriptBuiltinContinuationFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::TypedFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame" = type { %"class.v8::internal::JavaScriptBuiltinContinuationFrame" }
%"class.v8::internal::InternalFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::ConstructFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::BuiltinFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::BuiltinExitFrame" = type { %"class.v8::internal::ExitFrame" }
%"class.v8::internal::NativeFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::StackHandler" = type { i8 }
%"struct.v8::internal::StackFrame::State" = type { i64, i64, i64*, i64, i64*, i64* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", %"class.std::__1::unique_ptr.768", %"class.std::__1::unique_ptr.510" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i64 }
%"class.std::__1::unique_ptr.768" = type { %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.770" }
%"struct.std::__1::__compressed_pair_elem.770" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.513", %"class.std::__1::set.521" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.513" = type { %"class.std::__1::__tree.514" }
%"class.std::__1::__tree.514" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { i64 }
%"class.std::__1::set.521" = type { %"class.std::__1::__tree.522" }
%"class.std::__1::__tree.522" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.std::__1::vector.1145" = type { %"class.std::__1::__vector_base.1146" }
%"class.std::__1::__vector_base.1146" = type { %"struct.v8::internal::OptimizedCompilationInfo::InlinedFunctionHolder"*, %"struct.v8::internal::OptimizedCompilationInfo::InlinedFunctionHolder"*, %"class.std::__1::__compressed_pair.1147" }
%"struct.v8::internal::OptimizedCompilationInfo::InlinedFunctionHolder" = type { %"class.v8::internal::Handle.13", %"class.v8::internal::Handle", %"struct.v8::internal::InliningPosition" }
%"struct.v8::internal::InliningPosition" = type <{ %"class.v8::internal::SourcePosition", i32, [4 x i8] }>
%"class.v8::internal::SourcePosition" = type { i64 }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"struct.v8::internal::OptimizedCompilationInfo::InlinedFunctionHolder"* }
%"class.v8::internal::Vector.1152" = type { i8*, i64 }
%"class.std::__1::unique_ptr.1153" = type { %"class.std::__1::__compressed_pair.1154" }
%"class.std::__1::__compressed_pair.1154" = type { %"struct.std::__1::__compressed_pair_elem.1155" }
%"struct.std::__1::__compressed_pair_elem.1155" = type { i8* }
%"class.v8::internal::TickCounter" = type { i64, %"class.v8::internal::LocalHeap"* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1067", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1071", %"class.std::__1::unique_ptr.1077", %"class.std::__1::unique_ptr.503", %"class.std::__1::vector.1083", %"class.v8::internal::ConcurrentAllocator" }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.46", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.46", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.46", i64, i64, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.56", %"class.std::__1::vector.60", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.175", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.190", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.46", i64, i8, %"struct.std::__1::atomic.46", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.194", %"class.std::__1::vector.194", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.207", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.337", %"class.std::__1::unique_ptr.343", %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.388", %"class.std::__1::unique_ptr.427", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.473", %"class.std::__1::unique_ptr.479", %"class.std::__1::unique_ptr.479", %"class.std::__1::unique_ptr.485", %"class.std::__1::unique_ptr.491", %"class.std::__1::unique_ptr.491", %"class.std::__1::unique_ptr.497", %"class.std::__1::unique_ptr.503", %"class.std::__1::shared_ptr.509", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.532", %"class.std::__1::unique_ptr.558", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.564", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.577", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.359", i8, [7 x i8], %"class.std::__1::unordered_map.583", %"class.std::__1::unordered_map.609", %"class.std::__1::unordered_map.583", %"class.std::__1::unordered_map.633", %"class.std::__1::vector.661", i8, %"class.std::__1::unique_ptr.668", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.27", %"class.std::__1::__compressed_pair.36", %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.43", [4 x i8] }>
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29", %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.51", %"struct.std::__1::atomic.51", %"struct.std::__1::atomic.51" }
%"struct.std::__1::atomic.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__cxx_atomic_impl.54" }
%"struct.std::__1::__cxx_atomic_impl.54" = type { %"struct.std::__1::__cxx_atomic_base_impl.55" }
%"struct.std::__1::__cxx_atomic_base_impl.55" = type { i64 }
%"struct.std::__1::atomic.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i32 }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.62" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.132" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.46"*, %"class.std::__1::unique_ptr.126" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.46", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.67", %"class.std::__1::vector.67", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.69" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.74" }
%"class.std::__1::__hash_table.74" = type <{ %"class.std::__1::unique_ptr.75", %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.90", %"class.std::__1::__compressed_pair.92", [4 x i8] }>
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77", %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.std::__1::__hash_node_base.78"** }
%"struct.std::__1::__hash_node_base.78" = type { %"struct.std::__1::__hash_node_base.78"* }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.std::__1::__bucket_list_deallocator.80" }
%"class.std::__1::__bucket_list_deallocator.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.std::__1::__hash_node_base.78" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.51", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.115", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.46"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.51", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.51", %"struct.std::__1::atomic.97", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.97" = type { %"struct.std::__1::__atomic_base.98" }
%"struct.std::__1::__atomic_base.98" = type { %"struct.std::__1::__cxx_atomic_impl.99" }
%"struct.std::__1::__cxx_atomic_impl.99" = type { %"struct.std::__1::__cxx_atomic_base_impl.100" }
%"struct.std::__1::__cxx_atomic_base_impl.100" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.101" }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.103" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::atomic.115" = type { %"struct.std::__1::__atomic_base.116" }
%"struct.std::__1::__atomic_base.116" = type { %"struct.std::__1::__cxx_atomic_impl.117" }
%"struct.std::__1::__cxx_atomic_impl.117" = type { %"struct.std::__1::__cxx_atomic_base_impl.118" }
%"struct.std::__1::__cxx_atomic_base_impl.118" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.119", i8, [7 x i8] }>
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { i64*, i64*, %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.46", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.std::__1::pair.134"*, %"struct.std::__1::pair.134"*, %"class.std::__1::__compressed_pair.135" }
%"struct.std::__1::pair.134" = type { i32, i64 }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.std::__1::pair.134"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.46", i64, %"struct.std::__1::atomic.46" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.46", i32, %"struct.std::__1::atomic.46", %"class.v8::base::Mutex", %"struct.std::__1::atomic.46" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.140" }
%"class.std::__1::unordered_map.140" = type { %"class.std::__1::__hash_table.141" }
%"class.std::__1::__hash_table.141" = type <{ %"class.std::__1::unique_ptr.142", %"class.std::__1::__compressed_pair.152", %"class.std::__1::__compressed_pair.157", %"class.std::__1::__compressed_pair.162", [4 x i8] }>
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144", %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.std::__1::__hash_node_base.145"** }
%"struct.std::__1::__hash_node_base.145" = type { %"struct.std::__1::__hash_node_base.145"* }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.std::__1::__bucket_list_deallocator.147" }
%"class.std::__1::__bucket_list_deallocator.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"struct.std::__1::__hash_node_base.145" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.168", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.170" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.181", %"struct.std::__1::atomic.185", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.181" = type { %"struct.std::__1::__atomic_base.182" }
%"struct.std::__1::__atomic_base.182" = type { %"struct.std::__1::__cxx_atomic_impl.183" }
%"struct.std::__1::__cxx_atomic_impl.183" = type { %"struct.std::__1::__cxx_atomic_base_impl.184" }
%"struct.std::__1::__cxx_atomic_base_impl.184" = type { i8 }
%"struct.std::__1::atomic.185" = type { %"struct.std::__1::__atomic_base.186" }
%"struct.std::__1::__atomic_base.186" = type { %"struct.std::__1::__cxx_atomic_impl.187" }
%"struct.std::__1::__cxx_atomic_impl.187" = type { %"struct.std::__1::__cxx_atomic_base_impl.188" }
%"struct.std::__1::__cxx_atomic_base_impl.188" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.46", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.189" }
%"class.std::__1::shared_ptr.189" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.190" = type { %"struct.std::__1::__atomic_base.191" }
%"struct.std::__1::__atomic_base.191" = type { %"struct.std::__1::__cxx_atomic_impl.192" }
%"struct.std::__1::__cxx_atomic_impl.192" = type { %"struct.std::__1::__cxx_atomic_base_impl.193" }
%"struct.std::__1::__cxx_atomic_base_impl.193" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.196" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.255", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.309", %"class.std::__1::vector.309", %"class.std::__1::vector.309", %"class.std::__1::vector.316", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.210", %"class.std::__1::vector.211", %"class.std::__1::vector.218", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.210" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.211" = type { %"class.std::__1::__vector_base.212" }
%"class.std::__1::__vector_base.212" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.213" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.218" = type { %"class.std::__1::__vector_base.219" }
%"class.std::__1::__vector_base.219" = type { %"class.std::__1::unique_ptr.220"*, %"class.std::__1::unique_ptr.220"*, %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::unique_ptr.220" = type opaque
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.std::__1::unique_ptr.220"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.226", %"class.v8::internal::Worklist.228", %"class.v8::internal::Worklist.228", %"class.v8::internal::Worklist.228", %"class.v8::internal::Worklist.230", %"class.v8::internal::Worklist.232", %"class.v8::internal::Worklist.234", %"class.v8::internal::Worklist.236", %"class.v8::internal::Worklist.238", %"class.v8::internal::Worklist.240" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.v8::internal::Worklist.226" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.v8::internal::Worklist.228" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.v8::internal::Worklist.230" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.v8::internal::Worklist.232" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.v8::internal::Worklist.234" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.v8::internal::Worklist.236" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.v8::internal::Worklist.238" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.v8::internal::Worklist.240" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.46" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.242", i8, i64 }
%"class.std::__1::vector.242" = type { %"class.std::__1::__vector_base.243" }
%"class.std::__1::__vector_base.243" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.258" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.210"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.258" = type { %"class.std::__1::__hash_table.259" }
%"class.std::__1::__hash_table.259" = type <{ %"class.std::__1::unique_ptr.260", %"class.std::__1::__compressed_pair.270", %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.278", [4 x i8] }>
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262", %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.263"** }
%"struct.std::__1::__hash_node_base.263" = type { %"struct.std::__1::__hash_node_base.263"* }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.std::__1::__bucket_list_deallocator.265" }
%"class.std::__1::__bucket_list_deallocator.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::__hash_node_base.263" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.285" }
%"class.std::__1::unordered_map.285" = type { %"class.std::__1::__hash_table.286" }
%"class.std::__1::__hash_table.286" = type <{ %"class.std::__1::unique_ptr.287", %"class.std::__1::__compressed_pair.297", %"class.std::__1::__compressed_pair.302", %"class.std::__1::__compressed_pair.305", [4 x i8] }>
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289", %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.290"** }
%"struct.std::__1::__hash_node_base.290" = type { %"struct.std::__1::__hash_node_base.290"* }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.std::__1::__bucket_list_deallocator.292" }
%"class.std::__1::__bucket_list_deallocator.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"struct.std::__1::__hash_node_base.290" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::vector.309" = type { %"class.std::__1::__vector_base.310" }
%"class.std::__1::__vector_base.310" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.316" = type { %"class.std::__1::__vector_base.317" }
%"class.std::__1::__vector_base.317" = type { %"struct.std::__1::pair.318"*, %"struct.std::__1::pair.318"*, %"class.std::__1::__compressed_pair.319" }
%"struct.std::__1::pair.318" = type opaque
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"struct.std::__1::pair.318"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.324", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.309"], [3 x %"class.std::__1::vector.309"], i8, %"struct.std::__1::atomic.181", [6 x i8], %"class.std::__1::vector.309", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.334"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.309", %"class.std::__1::vector.309", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.334" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.359", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.352"], %"class.std::__1::unique_ptr.324" }
%"class.std::__1::vector.352" = type { %"class.std::__1::__vector_base.353" }
%"class.std::__1::__vector_base.353" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.391", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.395", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.400" }
%"struct.std::__1::atomic.391" = type { %"struct.std::__1::__atomic_base.392" }
%"struct.std::__1::__atomic_base.392" = type { %"struct.std::__1::__cxx_atomic_impl.393" }
%"struct.std::__1::__cxx_atomic_impl.393" = type { %"struct.std::__1::__cxx_atomic_base_impl.394" }
%"struct.std::__1::__cxx_atomic_base_impl.394" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.395" = type { %"struct.std::__1::__atomic_base.396" }
%"struct.std::__1::__atomic_base.396" = type { %"struct.std::__1::__cxx_atomic_impl.397" }
%"struct.std::__1::__cxx_atomic_impl.397" = type { %"struct.std::__1::__cxx_atomic_base_impl.398" }
%"struct.std::__1::__cxx_atomic_base_impl.398" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.400" = type { %"class.std::__1::__hash_table.401" }
%"class.std::__1::__hash_table.401" = type <{ %"class.std::__1::unique_ptr.402", %"class.std::__1::__compressed_pair.412", %"class.std::__1::__compressed_pair.417", %"class.std::__1::__compressed_pair.420", [4 x i8] }>
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404", %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"struct.std::__1::__hash_node_base.405"** }
%"struct.std::__1::__hash_node_base.405" = type { %"struct.std::__1::__hash_node_base.405"* }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"class.std::__1::__bucket_list_deallocator.407" }
%"class.std::__1::__bucket_list_deallocator.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"struct.std::__1::__hash_node_base.405" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.324", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.181", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.430", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.430" = type { %"class.std::__1::__hash_table.431" }
%"class.std::__1::__hash_table.431" = type <{ %"class.std::__1::unique_ptr.432", %"class.std::__1::__compressed_pair.442", %"class.std::__1::__compressed_pair.447", %"class.std::__1::__compressed_pair.450", [4 x i8] }>
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434", %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"struct.std::__1::__hash_node_base.435"** }
%"struct.std::__1::__hash_node_base.435" = type { %"struct.std::__1::__hash_node_base.435"* }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.std::__1::__bucket_list_deallocator.437" }
%"class.std::__1::__bucket_list_deallocator.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"struct.std::__1::__hash_node_base.435" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.466" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.491" = type { %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::shared_ptr.509" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.528", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.510", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.528" = type { %"struct.std::__1::__atomic_base.529" }
%"struct.std::__1::__atomic_base.529" = type { %"struct.std::__1::__cxx_atomic_impl.530" }
%"struct.std::__1::__cxx_atomic_impl.530" = type { %"struct.std::__1::__cxx_atomic_base_impl.531" }
%"struct.std::__1::__cxx_atomic_base_impl.531" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.532" = type { %"class.std::__1::__hash_table.533" }
%"class.std::__1::__hash_table.533" = type <{ %"class.std::__1::unique_ptr.534", %"class.std::__1::__compressed_pair.544", %"class.std::__1::__compressed_pair.549", %"class.std::__1::__compressed_pair.552", [4 x i8] }>
%"class.std::__1::unique_ptr.534" = type { %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536", %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"struct.std::__1::__hash_node_base.537"** }
%"struct.std::__1::__hash_node_base.537" = type { %"struct.std::__1::__hash_node_base.537"* }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.std::__1::__bucket_list_deallocator.539" }
%"class.std::__1::__bucket_list_deallocator.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"struct.std::__1::__hash_node_base.537" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.570", %"class.std::__1::vector.570" }
%"class.std::__1::vector.570" = type { %"class.std::__1::__vector_base.571" }
%"class.std::__1::__vector_base.571" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"class.v8::internal::Object"* }
%"class.std::__1::unique_ptr.577" = type { %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.std::__1::unordered_set.359" = type { %"class.std::__1::__hash_table.360" }
%"class.std::__1::__hash_table.360" = type <{ %"class.std::__1::unique_ptr.361", %"class.std::__1::__compressed_pair.371", %"class.std::__1::__compressed_pair.376", %"class.std::__1::__compressed_pair.380", [4 x i8] }>
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363", %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"struct.std::__1::__hash_node_base.364"** }
%"struct.std::__1::__hash_node_base.364" = type { %"struct.std::__1::__hash_node_base.364"* }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.std::__1::__bucket_list_deallocator.366" }
%"class.std::__1::__bucket_list_deallocator.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"struct.std::__1::__hash_node_base.364" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::unordered_map.609" = type { %"class.std::__1::__hash_table.610" }
%"class.std::__1::__hash_table.610" = type <{ %"class.std::__1::unique_ptr.611", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", %"class.std::__1::__compressed_pair.629", [4 x i8] }>
%"class.std::__1::unique_ptr.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.613", %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"struct.std::__1::__hash_node_base.614"** }
%"struct.std::__1::__hash_node_base.614" = type { %"struct.std::__1::__hash_node_base.614"* }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.std::__1::__bucket_list_deallocator.616" }
%"class.std::__1::__bucket_list_deallocator.616" = type { %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.622" }
%"struct.std::__1::__compressed_pair_elem.622" = type { %"struct.std::__1::__hash_node_base.614" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::unordered_map.583" = type { %"class.std::__1::__hash_table.584" }
%"class.std::__1::__hash_table.584" = type <{ %"class.std::__1::unique_ptr.585", %"class.std::__1::__compressed_pair.595", %"class.std::__1::__compressed_pair.600", %"class.std::__1::__compressed_pair.603", [4 x i8] }>
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587", %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"struct.std::__1::__hash_node_base.588"** }
%"struct.std::__1::__hash_node_base.588" = type { %"struct.std::__1::__hash_node_base.588"* }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.std::__1::__bucket_list_deallocator.590" }
%"class.std::__1::__bucket_list_deallocator.590" = type { %"class.std::__1::__compressed_pair.591" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"struct.std::__1::__hash_node_base.588" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::unordered_map.633" = type { %"class.std::__1::__hash_table.634" }
%"class.std::__1::__hash_table.634" = type <{ %"class.std::__1::unique_ptr.635", %"class.std::__1::__compressed_pair.645", %"class.std::__1::__compressed_pair.650", %"class.std::__1::__compressed_pair.655", [4 x i8] }>
%"class.std::__1::unique_ptr.635" = type { %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637", %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"struct.std::__1::__hash_node_base.638"** }
%"struct.std::__1::__hash_node_base.638" = type { %"struct.std::__1::__hash_node_base.638"* }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"class.std::__1::__bucket_list_deallocator.640" }
%"class.std::__1::__bucket_list_deallocator.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %"struct.std::__1::__hash_node_base.638" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::vector.661" = type { %"class.std::__1::__vector_base.662" }
%"class.std::__1::__vector_base.662" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.663" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.668" = type { %"class.std::__1::__compressed_pair.669" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.1067" = type { %"struct.std::__1::__atomic_base.1068" }
%"struct.std::__1::__atomic_base.1068" = type { %"struct.std::__1::__cxx_atomic_impl.1069" }
%"struct.std::__1::__cxx_atomic_impl.1069" = type { %"struct.std::__1::__cxx_atomic_base_impl.1070" }
%"struct.std::__1::__cxx_atomic_base_impl.1070" = type { i32 }
%"class.std::__1::unique_ptr.1071" = type { %"class.std::__1::__compressed_pair.1072" }
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.1073" }
%"struct.std::__1::__compressed_pair_elem.1073" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.838" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.774", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::vector.838" = type { %"class.std::__1::__vector_base.839" }
%"class.std::__1::__vector_base.839" = type { i64**, i64**, %"class.std::__1::__compressed_pair.840" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.841" }
%"struct.std::__1::__compressed_pair_elem.841" = type { i64** }
%"class.std::__1::unique_ptr.503" = type { %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::vector.1083" = type { %"class.std::__1::__vector_base.1084" }
%"class.std::__1::__vector_base.1084" = type { %"struct.std::__1::pair.1085"*, %"struct.std::__1::pair.1085"*, %"class.std::__1::__compressed_pair.1086" }
%"struct.std::__1::pair.1085" = type opaque
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.1087" }
%"struct.std::__1::__compressed_pair_elem.1087" = type { %"struct.std::__1::pair.1085"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1077" = type { %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.838", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::unique_ptr.774" = type { %"class.std::__1::__compressed_pair.775" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type { %"class.v8::internal::IdentityMapBase.base", %"class.v8::internal::ZoneAllocationPolicy" }
%"class.v8::internal::IdentityMapBase.base" = type <{ i32 (...)**, %"struct.v8::base::hash", [7 x i8], %"class.v8::internal::Heap"*, i32, i32, i32, i32, i64*, %"class.v8::internal::StrongRootsEntry"*, i64*, i8 }>
%"struct.v8::base::hash" = type { i8 }
%"class.v8::internal::ZoneAllocationPolicy" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::Graph" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, %"class.v8::internal::ZoneVector" }
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector.1159" }
%"class.std::__1::vector.1159" = type { %"class.std::__1::__vector_base.1160" }
%"class.std::__1::__vector_base.1160" = type { %"class.v8::internal::compiler::GraphDecorator"**, %"class.v8::internal::compiler::GraphDecorator"**, %"class.std::__1::__compressed_pair.1161" }
%"class.v8::internal::compiler::GraphDecorator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1161" = type { %"struct.std::__1::__compressed_pair_elem.1162", %"struct.std::__1::__compressed_pair_elem.1163" }
%"struct.std::__1::__compressed_pair_elem.1162" = type { %"class.v8::internal::compiler::GraphDecorator"** }
%"struct.std::__1::__compressed_pair_elem.1163" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::Schedule" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"* }
%"class.v8::internal::ZoneVector.1164" = type { %"class.std::__1::vector.1165" }
%"class.std::__1::vector.1165" = type { %"class.std::__1::__vector_base.1166" }
%"class.std::__1::__vector_base.1166" = type { %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"**, %"class.std::__1::__compressed_pair.1167" }
%"class.std::__1::__compressed_pair.1167" = type { %"struct.std::__1::__compressed_pair_elem.1168", %"struct.std::__1::__compressed_pair_elem.1169" }
%"struct.std::__1::__compressed_pair_elem.1168" = type { %"class.v8::internal::compiler::BasicBlock"** }
%"struct.std::__1::__compressed_pair_elem.1169" = type { %"class.v8::internal::ZoneAllocator.1170" }
%"class.v8::internal::ZoneAllocator.1170" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::BasicBlock" = type { i32, i32, i8, i32, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, i32, i32, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::ZoneVector.1171", %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::compiler::BasicBlock::Id" }
%"class.v8::internal::ZoneVector.1171" = type { %"class.std::__1::vector.1172" }
%"class.std::__1::vector.1172" = type { %"class.std::__1::__vector_base.1173" }
%"class.std::__1::__vector_base.1173" = type { %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"class.std::__1::__compressed_pair.1174" }
%"class.std::__1::__compressed_pair.1174" = type { %"struct.std::__1::__compressed_pair_elem.1175", %"struct.std::__1::__compressed_pair_elem.1176" }
%"struct.std::__1::__compressed_pair_elem.1175" = type { %"class.v8::internal::compiler::Node"** }
%"struct.std::__1::__compressed_pair_elem.1176" = type { %"class.v8::internal::ZoneAllocator.1177" }
%"class.v8::internal::ZoneAllocator.1177" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::BasicBlock::Id" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.21", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.674", %"class.std::__1::unique_ptr.695", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.705", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.851", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.861", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.866", %"struct.std::__1::atomic.181", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.941", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.984"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.992", i32, i8, i8, i32, i32, %"class.std::__1::vector.998", %"class.std::__1::vector.998", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1005", i64, %"class.std::__1::unordered_map.1006", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.570", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.189", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1062", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1100", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1134", %"class.std::__1::vector.1138", %"class.std::__1::vector.1138", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.19", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.19" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.570" }
%"class.std::__1::shared_ptr.674" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.168", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.675", %"class.std::__1::unique_ptr.689" }
%"class.std::__1::unique_ptr.675" = type { %"class.std::__1::__compressed_pair.676" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.678" }
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type { %"class.std::__1::__compressed_pair.1187" }
%"class.std::__1::__compressed_pair.1187" = type { %"struct.std::__1::__compressed_pair_elem.1188" }
%"struct.std::__1::__compressed_pair_elem.1188" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.695" = type { %"class.std::__1::__compressed_pair.696" }
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"struct.std::__1::__compressed_pair_elem.697" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.698", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.698" = type { %"struct.std::__1::__atomic_base.699" }
%"struct.std::__1::__atomic_base.699" = type { %"struct.std::__1::__cxx_atomic_impl.700" }
%"struct.std::__1::__cxx_atomic_impl.700" = type { %"struct.std::__1::__cxx_atomic_base_impl.701" }
%"struct.std::__1::__cxx_atomic_base_impl.701" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.705" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.706", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.706" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.707", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.707" = type { %"class.std::__1::__vector_base.708" }
%"class.std::__1::__vector_base.708" = type { %"class.std::__1::unique_ptr.709"*, %"class.std::__1::unique_ptr.709"*, %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::unique_ptr.709" = type opaque
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"class.std::__1::unique_ptr.709"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.715 }
%union.anon.715 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"struct.std::__1::atomic.181", %"class.std::__1::unique_ptr.728", %"class.std::__1::unique_ptr.734", %"class.std::__1::unique_ptr.740", %"class.std::__1::unique_ptr.746", %"class.std::__1::unique_ptr.752", %"class.std::__1::set.758", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.728" = type { %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.736" }
%"struct.std::__1::__compressed_pair_elem.736" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.740" = type { %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.746" = type { %"class.std::__1::__compressed_pair.747" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.748" }
%"struct.std::__1::__compressed_pair_elem.748" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.758" = type { %"class.std::__1::__tree.759" }
%"class.std::__1::__tree.759" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.760", %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.767" }
%"class.v8::internal::TaggedImpl.767" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.766" }
%"class.v8::internal::TaggedImpl.766" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.780", %"class.v8::internal::DetachableVector.781", %"class.v8::internal::DetachableVector.780", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.781" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.780" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.782", %"class.std::__1::vector.788", %"class.std::__1::unique_ptr.795", %"class.std::__1::vector.802", %"class.std::__1::unique_ptr.809", i64, %"class.std::__1::vector.815", %"class.std::__1::vector.823", %"class.std::__1::vector.831", i8, i8, i32 }
%"class.std::__1::unique_ptr.782" = type { %"class.std::__1::__compressed_pair.783" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.788" = type { %"class.std::__1::__vector_base.789" }
%"class.std::__1::__vector_base.789" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.790" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.795" = type { %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.v8::internal::GlobalHandles::NodeSpace.798"* }
%"class.v8::internal::GlobalHandles::NodeSpace.798" = type opaque
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.804" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.809" = type { %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"struct.std::__1::pair.817"*, %"struct.std::__1::pair.817"*, %"class.std::__1::__compressed_pair.818" }
%"struct.std::__1::pair.817" = type opaque
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"struct.std::__1::pair.817"* }
%"class.std::__1::vector.823" = type { %"class.std::__1::__vector_base.824" }
%"class.std::__1::__vector_base.824" = type { %"struct.std::__1::pair.825"*, %"struct.std::__1::pair.825"*, %"class.std::__1::__compressed_pair.826" }
%"struct.std::__1::pair.825" = type opaque
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"struct.std::__1::pair.825"* }
%"class.std::__1::vector.831" = type { %"class.std::__1::__vector_base.832" }
%"class.std::__1::__vector_base.832" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.833" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.834" }
%"struct.std::__1::__compressed_pair_elem.834" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.838", %"class.std::__1::vector" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.845" }
%"class.std::__1::unique_ptr.845" = type { %"class.std::__1::__compressed_pair.846" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.851" = type { %"struct.std::__1::__atomic_base.852" }
%"struct.std::__1::__atomic_base.852" = type { %"struct.std::__1::__cxx_atomic_impl.853" }
%"struct.std::__1::__cxx_atomic_impl.853" = type { %"struct.std::__1::__cxx_atomic_base_impl.854" }
%"struct.std::__1::__cxx_atomic_base_impl.854" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.861" = type { %"struct.std::__1::__atomic_base.862" }
%"struct.std::__1::__atomic_base.862" = type { %"struct.std::__1::__cxx_atomic_impl.863" }
%"struct.std::__1::__cxx_atomic_impl.863" = type { %"struct.std::__1::__cxx_atomic_base_impl.864" }
%"struct.std::__1::__cxx_atomic_base_impl.864" = type { i32 }
%"class.std::__1::unordered_map.866" = type { %"class.std::__1::__hash_table.867" }
%"class.std::__1::__hash_table.867" = type <{ %"class.std::__1::unique_ptr.868", %"class.std::__1::__compressed_pair.878", %"class.std::__1::__compressed_pair.883", %"class.std::__1::__compressed_pair.886", [4 x i8] }>
%"class.std::__1::unique_ptr.868" = type { %"class.std::__1::__compressed_pair.869" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.870", %"struct.std::__1::__compressed_pair_elem.872" }
%"struct.std::__1::__compressed_pair_elem.870" = type { %"struct.std::__1::__hash_node_base.871"** }
%"struct.std::__1::__hash_node_base.871" = type { %"struct.std::__1::__hash_node_base.871"* }
%"struct.std::__1::__compressed_pair_elem.872" = type { %"class.std::__1::__bucket_list_deallocator.873" }
%"class.std::__1::__bucket_list_deallocator.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"struct.std::__1::__hash_node_base.871" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.892", %"class.v8::internal::Handle.898", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.899", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.892" = type { %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.898" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.899" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.900", %"class.std::__1::vector.906", %"class.std::__1::unique_ptr.914", %"class.std::__1::unique_ptr.920", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.926", %"class.std::__1::vector.932", %"struct.std::__1::pair.940" }
%"class.std::__1::unique_ptr.900" = type { %"class.std::__1::__compressed_pair.901" }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.902" }
%"struct.std::__1::__compressed_pair_elem.902" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.906" = type { %"class.std::__1::__vector_base.907" }
%"class.std::__1::__vector_base.907" = type { %"class.std::__1::unique_ptr.908"*, %"class.std::__1::unique_ptr.908"*, %"class.std::__1::__compressed_pair.909" }
%"class.std::__1::unique_ptr.908" = type opaque
%"class.std::__1::__compressed_pair.909" = type { %"struct.std::__1::__compressed_pair_elem.910" }
%"struct.std::__1::__compressed_pair_elem.910" = type { %"class.std::__1::unique_ptr.908"* }
%"class.std::__1::unique_ptr.914" = type { %"class.std::__1::__compressed_pair.915" }
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.920" = type { %"class.std::__1::__compressed_pair.921" }
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.922" }
%"struct.std::__1::__compressed_pair_elem.922" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.926" = type { %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.932" = type { %"class.std::__1::__vector_base.933" }
%"class.std::__1::__vector_base.933" = type { %"struct.std::__1::pair.934"*, %"struct.std::__1::pair.934"*, %"class.std::__1::__compressed_pair.935" }
%"struct.std::__1::pair.934" = type opaque
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"struct.std::__1::pair.934"* }
%"struct.std::__1::pair.940" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.20"*, i16, i8*)*, i8* }
%"class.v8::Local.20" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.941" = type { %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.944", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.944" = type { %"class.std::__1::__hash_table.945" }
%"class.std::__1::__hash_table.945" = type <{ %"class.std::__1::unique_ptr.946", %"class.std::__1::__compressed_pair.956", %"class.std::__1::__compressed_pair.961", %"class.std::__1::__compressed_pair.965", [4 x i8] }>
%"class.std::__1::unique_ptr.946" = type { %"class.std::__1::__compressed_pair.947" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.948", %"struct.std::__1::__compressed_pair_elem.950" }
%"struct.std::__1::__compressed_pair_elem.948" = type { %"struct.std::__1::__hash_node_base.949"** }
%"struct.std::__1::__hash_node_base.949" = type { %"struct.std::__1::__hash_node_base.949"* }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"class.std::__1::__bucket_list_deallocator.951" }
%"class.std::__1::__bucket_list_deallocator.951" = type { %"class.std::__1::__compressed_pair.952" }
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.956" = type { %"struct.std::__1::__compressed_pair_elem.957" }
%"struct.std::__1::__compressed_pair_elem.957" = type { %"struct.std::__1::__hash_node_base.949" }
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.979" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.973"**, %"struct.std::__1::pair.973"**, %"struct.std::__1::pair.973"**, %"class.std::__1::__compressed_pair.974" }
%"struct.std::__1::pair.973" = type opaque
%"class.std::__1::__compressed_pair.974" = type { %"struct.std::__1::__compressed_pair_elem.975" }
%"struct.std::__1::__compressed_pair_elem.975" = type { %"struct.std::__1::pair.973"** }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.984" = type { %"class.std::__1::__vector_base.985" }
%"class.std::__1::__vector_base.985" = type { %"class.v8::internal::Handle.986"*, %"class.v8::internal::Handle.986"*, %"class.std::__1::__compressed_pair.987" }
%"class.v8::internal::Handle.986" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.988" }
%"struct.std::__1::__compressed_pair_elem.988" = type { %"class.v8::internal::Handle.986"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.856", i32, %"class.v8::Local.20" }
%"class.v8::Local.856" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.992" = type { %"class.std::__1::__compressed_pair.993" }
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.994" }
%"struct.std::__1::__compressed_pair_elem.994" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.998" = type { %"class.std::__1::__vector_base.999" }
%"class.std::__1::__vector_base.999" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.1001" }
%"struct.std::__1::__compressed_pair_elem.1001" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1005" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1006" = type { %"class.std::__1::__hash_table.1007" }
%"class.std::__1::__hash_table.1007" = type <{ %"class.std::__1::unique_ptr.1008", %"class.std::__1::__compressed_pair.1018", %"class.std::__1::__compressed_pair.1023", %"class.std::__1::__compressed_pair.1026", [4 x i8] }>
%"class.std::__1::unique_ptr.1008" = type { %"class.std::__1::__compressed_pair.1009" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.1010", %"struct.std::__1::__compressed_pair_elem.1012" }
%"struct.std::__1::__compressed_pair_elem.1010" = type { %"struct.std::__1::__hash_node_base.1011"** }
%"struct.std::__1::__hash_node_base.1011" = type { %"struct.std::__1::__hash_node_base.1011"* }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"class.std::__1::__bucket_list_deallocator.1013" }
%"class.std::__1::__bucket_list_deallocator.1013" = type { %"class.std::__1::__compressed_pair.1014" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"struct.std::__1::__hash_node_base.1011" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1030", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1059", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1060", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1030" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1055, %union.anon.1057, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1055 = type { i64 }
%union.anon.1057 = type { i64 }
%"class.std::__1::weak_ptr.1059" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1060" = type { %"class.v8::PersistentBase.1061" }
%"class.v8::PersistentBase.1061" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1031", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1031" = type { %"class.std::__1::__hash_table.1032" }
%"class.std::__1::__hash_table.1032" = type <{ %"class.std::__1::unique_ptr.1033", %"class.std::__1::__compressed_pair.1043", %"class.std::__1::__compressed_pair.1048", %"class.std::__1::__compressed_pair.1051", [4 x i8] }>
%"class.std::__1::unique_ptr.1033" = type { %"class.std::__1::__compressed_pair.1034" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.1035", %"struct.std::__1::__compressed_pair_elem.1037" }
%"struct.std::__1::__compressed_pair_elem.1035" = type { %"struct.std::__1::__hash_node_base.1036"** }
%"struct.std::__1::__hash_node_base.1036" = type { %"struct.std::__1::__hash_node_base.1036"* }
%"struct.std::__1::__compressed_pair_elem.1037" = type { %"class.std::__1::__bucket_list_deallocator.1038" }
%"class.std::__1::__bucket_list_deallocator.1038" = type { %"class.std::__1::__compressed_pair.1039" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.1044" }
%"struct.std::__1::__compressed_pair_elem.1044" = type { %"struct.std::__1::__hash_node_base.1036" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1062" = type { %"class.std::__1::__compressed_pair.1063" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.1064" }
%"struct.std::__1::__compressed_pair_elem.1064" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1091", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1091" = type { %"class.std::__1::__compressed_pair.1092" }
%"class.std::__1::__compressed_pair.1092" = type { %"struct.std::__1::__compressed_pair_elem.1093" }
%"struct.std::__1::__compressed_pair_elem.1093" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1100" = type { %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.1102" }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.857", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.857" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1108" }
%"class.std::__1::unordered_map.1108" = type { %"class.std::__1::__hash_table.1109" }
%"class.std::__1::__hash_table.1109" = type <{ %"class.std::__1::unique_ptr.1110", %"class.std::__1::__compressed_pair.1120", %"class.std::__1::__compressed_pair.1125", %"class.std::__1::__compressed_pair.1128", [4 x i8] }>
%"class.std::__1::unique_ptr.1110" = type { %"class.std::__1::__compressed_pair.1111" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.1112", %"struct.std::__1::__compressed_pair_elem.1114" }
%"struct.std::__1::__compressed_pair_elem.1112" = type { %"struct.std::__1::__hash_node_base.1113"** }
%"struct.std::__1::__hash_node_base.1113" = type { %"struct.std::__1::__hash_node_base.1113"* }
%"struct.std::__1::__compressed_pair_elem.1114" = type { %"class.std::__1::__bucket_list_deallocator.1115" }
%"class.std::__1::__bucket_list_deallocator.1115" = type { %"class.std::__1::__compressed_pair.1116" }
%"class.std::__1::__compressed_pair.1116" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.1121" }
%"struct.std::__1::__compressed_pair_elem.1121" = type { %"struct.std::__1::__hash_node_base.1113" }
%"class.std::__1::__compressed_pair.1125" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::atomic.1134" = type { %"struct.std::__1::__atomic_base.1135" }
%"struct.std::__1::__atomic_base.1135" = type { %"struct.std::__1::__cxx_atomic_impl.1136" }
%"struct.std::__1::__cxx_atomic_impl.1136" = type { %"struct.std::__1::__cxx_atomic_base_impl.1137" }
%"struct.std::__1::__cxx_atomic_base_impl.1137" = type { %"class.std::__1::vector.1138"* }
%"class.std::__1::vector.1138" = type { %"class.std::__1::__vector_base.1139" }
%"class.std::__1::__vector_base.1139" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1140" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1140" = type { %"struct.std::__1::__compressed_pair_elem.1141" }
%"struct.std::__1::__compressed_pair_elem.1141" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::array.1192" = type { [4 x %"class.v8::internal::compiler::Node"*] }
%"struct.std::__1::array.1193" = type { [2 x %"class.v8::internal::compiler::Node"*] }
%"struct.std::__1::array.1194" = type { [5 x %"class.v8::internal::compiler::Node"*] }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.v8::internal::compiler::CommonOperatorBuilder" = type { %"struct.v8::internal::compiler::CommonOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::CommonOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::MachineOperatorBuilder" = type <{ %"class.v8::internal::Zone"*, %"struct.v8::internal::compiler::MachineOperatorGlobalCache"*, i8, [3 x i8], %"class.v8::base::Flags.1185", %"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements", [4 x i8] }>
%"struct.v8::internal::compiler::MachineOperatorGlobalCache" = type opaque
%"class.v8::base::Flags.1185" = type { i32 }
%"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements" = type { i32, %"class.v8::base::EnumSet", %"class.v8::base::EnumSet" }
%"class.v8::base::EnumSet" = type { i32 }
%"class.v8::internal::BasicBlockProfiler" = type { %"class.std::__1::list.1178", %"class.v8::base::Mutex" }
%"class.std::__1::list.1178" = type { %"class.std::__1::__list_imp.1179" }
%"class.std::__1::__list_imp.1179" = type { %"struct.std::__1::__list_node_base.1180", %"class.std::__1::__compressed_pair.1181" }
%"struct.std::__1::__list_node_base.1180" = type { %"struct.std::__1::__list_node_base.1180"*, %"struct.std::__1::__list_node_base.1180"* }
%"class.std::__1::__compressed_pair.1181" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE6insertIPS5_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISC_E9referenceEEE5valueENS_11__wrap_iterISA_EEE4typeENSG_IPKS5_EESC_SC_ = comdat any

@_ZN2v88internal28FLAG_turbo_profiling_verboseE = external local_unnamed_addr global i8, align 1
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::BasicBlockProfilerData"* @_ZN2v88internal8compiler22BasicBlockInstrumentor10InstrumentEPNS0_24OptimizedCompilationInfoEPNS1_5GraphEPNS1_8ScheduleEPNS0_7IsolateE(%"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.std::__1::array.1192", align 8
  %6 = alloca %"struct.std::__1::array.1193", align 8
  %7 = alloca %"struct.std::__1::array.1193", align 8
  %8 = alloca %"struct.std::__1::array.1193", align 8
  %9 = alloca %"struct.std::__1::array.1193", align 8
  %10 = alloca %"struct.std::__1::array.1194", align 8
  %11 = alloca %"class.std::__1::basic_ostringstream", align 8
  %12 = alloca %"class.v8::internal::compiler::CommonOperatorBuilder", align 8
  %13 = alloca %"class.v8::internal::compiler::MachineOperatorBuilder", align 8
  %14 = alloca %"class.v8::internal::Handle.986", align 8
  %15 = alloca [10 x %"class.v8::internal::compiler::Node"*], align 16
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %2, i64 0, i32 3, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %2, i64 0, i32 3, i32 0, i32 0, i32 1
  %18 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.1165"* %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = add nsw i64 %23, -1
  %25 = tail call %"class.v8::internal::BasicBlockProfiler"* @_ZN2v88internal18BasicBlockProfiler3GetEv() #6
  %26 = tail call %"class.v8::internal::BasicBlockProfilerData"* @_ZN2v88internal18BasicBlockProfiler7NewDataEm(%"class.v8::internal::BasicBlockProfiler"* %25, i64 %24) #6
  %27 = tail call i8* @_ZNK2v88internal24OptimizedCompilationInfo12GetDebugNameEv(%"class.v8::internal::OptimizedCompilationInfo"* %0) #6
  tail call void @_ZN2v88internal22BasicBlockProfilerData15SetFunctionNameENSt3__110unique_ptrIA_cNS2_14default_deleteIS4_EEEE(%"class.v8::internal::BasicBlockProfilerData"* %26, i8* %27) #6
  %28 = load i8, i8* @_ZN2v88internal28FLAG_turbo_profiling_verboseE, align 1, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %81, label %30

30:                                               ; preds = %4
  %31 = bitcast %"class.std::__1::basic_ostringstream"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %31) #6
  %32 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %11, i64 0, i32 2, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %11, i64 0, i32 1
  %35 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %34, i64 0, i32 0
  %36 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %37 = bitcast %"class.std::__1::basic_ostringstream"* %11 to i64*
  store i64 %36, i64* %37, align 8
  %38 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %39 = bitcast %"class.std::__1::basic_ostringstream"* %11 to i8**
  %40 = inttoptr i64 %36 to i8*
  %41 = getelementptr i8, i8* %40, i64 -24
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds i8, i8* %31, i64 %43
  %45 = bitcast i8* %44 to i64*
  store i64 %38, i64* %45, align 8
  %46 = load i8*, i8** %39, align 8
  %47 = getelementptr i8, i8* %46, i64 -24
  %48 = bitcast i8* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds i8, i8* %31, i64 %49
  %51 = bitcast i8* %50 to %"class.std::__1::ios_base"*
  %52 = bitcast %"class.std::__1::basic_stringbuf"* %34 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %51, i8* %52) #6
  %53 = getelementptr inbounds i8, i8* %50, i64 136
  %54 = bitcast i8* %53 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %54, align 8
  %55 = getelementptr inbounds i8, i8* %50, i64 144
  %56 = bitcast i8* %55 to i32*
  store i32 -1, i32* %56, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %33, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %32, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %35) #6
  %57 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %34, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %11, i64 0, i32 1, i32 1
  %59 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %11, i64 0, i32 1, i32 3
  %60 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 32, i1 false) #6
  store i32 16, i32* %59, align 8
  %61 = bitcast %"class.std::__1::basic_ostringstream"* %11 to %"class.std::__1::basic_ostream"*
  %62 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_8ScheduleE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %61, %"class.v8::internal::compiler::Schedule"* dereferenceable(120) %2) #6
  call void @_ZN2v88internal22BasicBlockProfilerData11SetScheduleERKNSt3__119basic_ostringstreamIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.v8::internal::BasicBlockProfilerData"* %26, %"class.std::__1::basic_ostringstream"* nonnull dereferenceable(264) %11) #6
  %63 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %63, i64* %37, align 8
  %64 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %65 = inttoptr i64 %63 to i8*
  %66 = getelementptr i8, i8* %65, i64 -24
  %67 = bitcast i8* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds i8, i8* %31, i64 %68
  %70 = bitcast i8* %69 to i64*
  store i64 %64, i64* %70, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %71 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %30
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %77) #7
  br label %78

78:                                               ; preds = %30, %75
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %35) #6
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %61, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #6
  %79 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %11, i64 0, i32 2
  %80 = bitcast %"class.std::__1::basic_ios.base"* %79 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %80) #6
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %31) #6
  br label %81

81:                                               ; preds = %4, %78
  %82 = icmp eq %"class.v8::internal::Isolate"* %3, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 140
  %85 = load %"class.v8::internal::BuiltinsConstantsTableBuilder"*, %"class.v8::internal::BuiltinsConstantsTableBuilder"** %84, align 8
  %86 = icmp ne %"class.v8::internal::BuiltinsConstantsTableBuilder"* %85, null
  br label %87

87:                                               ; preds = %81, %83
  %88 = phi i1 [ false, %81 ], [ %86, %83 ]
  %89 = bitcast %"class.v8::internal::compiler::CommonOperatorBuilder"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #6
  %90 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %1, i64 0, i32 0
  %91 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %90, align 8
  call void @_ZN2v88internal8compiler21CommonOperatorBuilderC1EPNS0_4ZoneE(%"class.v8::internal::compiler::CommonOperatorBuilder"* nonnull %12, %"class.v8::internal::Zone"* %91) #6
  %92 = bitcast %"class.v8::internal::compiler::MachineOperatorBuilder"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %92) #6
  %93 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %90, align 8
  call void @_ZN2v88internal8compiler22MachineOperatorBuilderC1EPNS0_4ZoneENS0_21MachineRepresentationENS_4base5FlagsINS2_4FlagEjEENS2_21AlignmentRequirementsE(%"class.v8::internal::compiler::MachineOperatorBuilder"* nonnull %13, %"class.v8::internal::Zone"* %93, i8 zeroext 5, i32 0, i64 2, i32 0) #6
  br i1 %88, label %94, label %113

94:                                               ; preds = %87
  %95 = bitcast %"class.v8::internal::Handle.986"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #6
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 0, i32 7, i32 0, i64 127
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 31, i32 0
  %99 = load i64*, i64** %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 31, i32 1
  %101 = load i64*, i64** %100, align 8
  %102 = icmp eq i64* %99, %101
  br i1 %102, label %103, label %105

103:                                              ; preds = %94
  %104 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %3) #6
  br label %105

105:                                              ; preds = %94, %103
  %106 = phi i64* [ %104, %103 ], [ %99, %94 ]
  %107 = ptrtoint i64* %106 to i64
  %108 = add i64 %107, 8
  %109 = inttoptr i64 %108 to i64*
  store i64* %109, i64** %98, align 8
  store i64 %97, i64* %106, align 8
  %110 = getelementptr inbounds %"class.v8::internal::Handle.986", %"class.v8::internal::Handle.986"* %14, i64 0, i32 0, i32 0
  store i64* %106, i64** %110, align 8
  %111 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder12HeapConstantERKNS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::compiler::CommonOperatorBuilder"* nonnull %12, %"class.v8::internal::Handle.986"* nonnull dereferenceable(8) %14) #6
  %112 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1, %"class.v8::internal::compiler::Operator"* %111, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #6
  br label %119

113:                                              ; preds = %87
  %114 = getelementptr inbounds %"class.v8::internal::BasicBlockProfilerData", %"class.v8::internal::BasicBlockProfilerData"* %26, i64 0, i32 1, i32 0, i32 0
  %115 = bitcast i32** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder13Int64ConstantEl(%"class.v8::internal::compiler::CommonOperatorBuilder"* nonnull %12, i64 %116) #6
  %118 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1, %"class.v8::internal::compiler::Operator"* %117, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #6
  br label %119

119:                                              ; preds = %113, %105
  %120 = phi %"class.v8::internal::compiler::Node"* [ %112, %105 ], [ %118, %113 ]
  %121 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder13Int32ConstantEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* nonnull %12, i32 0) #6
  %122 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1, %"class.v8::internal::compiler::Operator"* %121, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #6
  %123 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder13Int32ConstantEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* nonnull %12, i32 1) #6
  %124 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1, %"class.v8::internal::compiler::Operator"* %123, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #6
  %125 = icmp eq i64 %24, 0
  br i1 %125, label %170, label %126

126:                                              ; preds = %119
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %2, i64 0, i32 3, i32 0, i32 0, i32 0
  %128 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %1, i64 0, i32 1
  %130 = bitcast %"class.v8::internal::compiler::Node"** %129 to i64*
  %131 = bitcast %"struct.std::__1::array.1192"* %5 to i8*
  %132 = getelementptr inbounds %"struct.std::__1::array.1192", %"struct.std::__1::array.1192"* %5, i64 0, i32 0, i64 0
  %133 = getelementptr inbounds %"struct.std::__1::array.1192", %"struct.std::__1::array.1192"* %5, i64 0, i32 0, i64 1
  %134 = getelementptr inbounds %"struct.std::__1::array.1192", %"struct.std::__1::array.1192"* %5, i64 0, i32 0, i64 2
  %135 = bitcast %"class.v8::internal::compiler::Node"** %134 to i64*
  %136 = getelementptr inbounds %"struct.std::__1::array.1192", %"struct.std::__1::array.1192"* %5, i64 0, i32 0, i64 3
  %137 = bitcast %"class.v8::internal::compiler::Node"** %136 to i64*
  %138 = bitcast %"struct.std::__1::array.1193"* %6 to i8*
  %139 = getelementptr inbounds %"struct.std::__1::array.1193", %"struct.std::__1::array.1193"* %6, i64 0, i32 0, i64 0
  %140 = getelementptr inbounds %"struct.std::__1::array.1193", %"struct.std::__1::array.1193"* %6, i64 0, i32 0, i64 1
  %141 = bitcast %"struct.std::__1::array.1193"* %7 to i8*
  %142 = getelementptr inbounds %"struct.std::__1::array.1193", %"struct.std::__1::array.1193"* %7, i64 0, i32 0, i64 0
  %143 = getelementptr inbounds %"struct.std::__1::array.1193", %"struct.std::__1::array.1193"* %7, i64 0, i32 0, i64 1
  %144 = bitcast %"struct.std::__1::array.1193"* %8 to i8*
  %145 = getelementptr inbounds %"struct.std::__1::array.1193", %"struct.std::__1::array.1193"* %8, i64 0, i32 0, i64 0
  %146 = getelementptr inbounds %"struct.std::__1::array.1193", %"struct.std::__1::array.1193"* %8, i64 0, i32 0, i64 1
  %147 = bitcast %"struct.std::__1::array.1193"* %9 to i8*
  %148 = getelementptr inbounds %"struct.std::__1::array.1193", %"struct.std::__1::array.1193"* %9, i64 0, i32 0, i64 0
  %149 = getelementptr inbounds %"struct.std::__1::array.1193", %"struct.std::__1::array.1193"* %9, i64 0, i32 0, i64 1
  %150 = bitcast %"struct.std::__1::array.1194"* %10 to i8*
  %151 = getelementptr inbounds %"struct.std::__1::array.1194", %"struct.std::__1::array.1194"* %10, i64 0, i32 0, i64 0
  %152 = getelementptr inbounds %"struct.std::__1::array.1194", %"struct.std::__1::array.1194"* %10, i64 0, i32 0, i64 1
  %153 = getelementptr inbounds %"struct.std::__1::array.1194", %"struct.std::__1::array.1194"* %10, i64 0, i32 0, i64 2
  %154 = getelementptr inbounds %"struct.std::__1::array.1194", %"struct.std::__1::array.1194"* %10, i64 0, i32 0, i64 3
  %155 = bitcast %"class.v8::internal::compiler::Node"** %154 to i64*
  %156 = getelementptr inbounds %"struct.std::__1::array.1194", %"struct.std::__1::array.1194"* %10, i64 0, i32 0, i64 4
  %157 = bitcast %"class.v8::internal::compiler::Node"** %156 to i64*
  %158 = bitcast [10 x %"class.v8::internal::compiler::Node"*]* %15 to i8*
  %159 = getelementptr inbounds [10 x %"class.v8::internal::compiler::Node"*], [10 x %"class.v8::internal::compiler::Node"*]* %15, i64 0, i64 0
  %160 = getelementptr inbounds [10 x %"class.v8::internal::compiler::Node"*], [10 x %"class.v8::internal::compiler::Node"*]* %15, i64 0, i64 1
  %161 = getelementptr inbounds [10 x %"class.v8::internal::compiler::Node"*], [10 x %"class.v8::internal::compiler::Node"*]* %15, i64 0, i64 2
  %162 = getelementptr inbounds [10 x %"class.v8::internal::compiler::Node"*], [10 x %"class.v8::internal::compiler::Node"*]* %15, i64 0, i64 3
  %163 = getelementptr inbounds [10 x %"class.v8::internal::compiler::Node"*], [10 x %"class.v8::internal::compiler::Node"*]* %15, i64 0, i64 4
  %164 = getelementptr inbounds [10 x %"class.v8::internal::compiler::Node"*], [10 x %"class.v8::internal::compiler::Node"*]* %15, i64 0, i64 5
  %165 = getelementptr inbounds [10 x %"class.v8::internal::compiler::Node"*], [10 x %"class.v8::internal::compiler::Node"*]* %15, i64 0, i64 6
  %166 = getelementptr inbounds [10 x %"class.v8::internal::compiler::Node"*], [10 x %"class.v8::internal::compiler::Node"*]* %15, i64 0, i64 7
  %167 = getelementptr inbounds [10 x %"class.v8::internal::compiler::Node"*], [10 x %"class.v8::internal::compiler::Node"*]* %15, i64 0, i64 8
  %168 = getelementptr inbounds [10 x %"class.v8::internal::compiler::Node"*], [10 x %"class.v8::internal::compiler::Node"*]* %15, i64 0, i64 9
  %169 = getelementptr inbounds [10 x %"class.v8::internal::compiler::Node"*], [10 x %"class.v8::internal::compiler::Node"*]* %15, i64 0, i64 10
  br label %171

170:                                              ; preds = %224, %119
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %92) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #6
  ret %"class.v8::internal::BasicBlockProfilerData"* %26

171:                                              ; preds = %224, %126
  %172 = phi i64 [ 0, %126 ], [ %226, %224 ]
  %173 = phi %"class.v8::internal::compiler::BasicBlock"** [ %128, %126 ], [ %225, %224 ]
  %174 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %173, align 8
  %175 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %174, i64 0, i32 14, i32 0
  %176 = load i64, i64* %175, align 8
  %177 = trunc i64 %176 to i32
  call void @_ZN2v88internal22BasicBlockProfilerData10SetBlockIdEmi(%"class.v8::internal::BasicBlockProfilerData"* %26, i64 %172, i32 %177) #6
  %178 = trunc i64 %172 to i32
  %179 = shl nsw i32 %178, 2
  %180 = add nsw i32 %179, 7
  %181 = select i1 %88, i32 %180, i32 %179
  %182 = sext i32 %181 to i64
  %183 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder13Int64ConstantEl(%"class.v8::internal::compiler::CommonOperatorBuilder"* nonnull %12, i64 %182) #6
  %184 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1, %"class.v8::internal::compiler::Operator"* %183, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #6
  %185 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder4LoadENS0_11MachineTypeE(%"class.v8::internal::compiler::MachineOperatorBuilder"* nonnull %13, i16 772) #6
  %186 = load i64, i64* %130, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %131) #6
  store %"class.v8::internal::compiler::Node"* %120, %"class.v8::internal::compiler::Node"** %132, align 8
  store %"class.v8::internal::compiler::Node"* %184, %"class.v8::internal::compiler::Node"** %133, align 8
  store i64 %186, i64* %135, align 8
  store i64 %186, i64* %137, align 8
  %187 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1, %"class.v8::internal::compiler::Operator"* %185, i32 4, %"class.v8::internal::compiler::Node"** nonnull %132, i1 zeroext false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %131) #6
  %188 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder8Int32AddEv(%"class.v8::internal::compiler::MachineOperatorBuilder"* nonnull %13) #6
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138) #6
  store %"class.v8::internal::compiler::Node"* %187, %"class.v8::internal::compiler::Node"** %139, align 8
  store %"class.v8::internal::compiler::Node"* %124, %"class.v8::internal::compiler::Node"** %140, align 8
  %189 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1, %"class.v8::internal::compiler::Operator"* %188, i32 2, %"class.v8::internal::compiler::Node"** nonnull %139, i1 zeroext false) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138) #6
  %190 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder14Uint32LessThanEv(%"class.v8::internal::compiler::MachineOperatorBuilder"* nonnull %13) #6
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %141) #6
  store %"class.v8::internal::compiler::Node"* %189, %"class.v8::internal::compiler::Node"** %142, align 8
  store %"class.v8::internal::compiler::Node"* %187, %"class.v8::internal::compiler::Node"** %143, align 8
  %191 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1, %"class.v8::internal::compiler::Operator"* %190, i32 2, %"class.v8::internal::compiler::Node"** nonnull %142, i1 zeroext false) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141) #6
  %192 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder8Int32SubEv(%"class.v8::internal::compiler::MachineOperatorBuilder"* nonnull %13) #6
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #6
  store %"class.v8::internal::compiler::Node"* %122, %"class.v8::internal::compiler::Node"** %145, align 8
  store %"class.v8::internal::compiler::Node"* %191, %"class.v8::internal::compiler::Node"** %146, align 8
  %193 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1, %"class.v8::internal::compiler::Operator"* %192, i32 2, %"class.v8::internal::compiler::Node"** nonnull %145, i1 zeroext false) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #6
  %194 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder8Word32OrEv(%"class.v8::internal::compiler::MachineOperatorBuilder"* nonnull %13) #6
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %147) #6
  store %"class.v8::internal::compiler::Node"* %189, %"class.v8::internal::compiler::Node"** %148, align 8
  store %"class.v8::internal::compiler::Node"* %193, %"class.v8::internal::compiler::Node"** %149, align 8
  %195 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1, %"class.v8::internal::compiler::Operator"* %194, i32 2, %"class.v8::internal::compiler::Node"** nonnull %148, i1 zeroext false) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %147) #6
  %196 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder5StoreENS1_19StoreRepresentationE(%"class.v8::internal::compiler::MachineOperatorBuilder"* nonnull %13, i16 4) #6
  %197 = load i64, i64* %130, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %150) #6
  store %"class.v8::internal::compiler::Node"* %120, %"class.v8::internal::compiler::Node"** %151, align 8
  store %"class.v8::internal::compiler::Node"* %184, %"class.v8::internal::compiler::Node"** %152, align 8
  store %"class.v8::internal::compiler::Node"* %195, %"class.v8::internal::compiler::Node"** %153, align 8
  store i64 %197, i64* %155, align 8
  store i64 %197, i64* %157, align 8
  %198 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1, %"class.v8::internal::compiler::Operator"* %196, i32 5, %"class.v8::internal::compiler::Node"** nonnull %151, i1 zeroext false) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %150) #6
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %158) #6
  store %"class.v8::internal::compiler::Node"* %120, %"class.v8::internal::compiler::Node"** %159, align 16
  store %"class.v8::internal::compiler::Node"* %122, %"class.v8::internal::compiler::Node"** %160, align 8
  store %"class.v8::internal::compiler::Node"* %124, %"class.v8::internal::compiler::Node"** %161, align 16
  store %"class.v8::internal::compiler::Node"* %184, %"class.v8::internal::compiler::Node"** %162, align 8
  store %"class.v8::internal::compiler::Node"* %187, %"class.v8::internal::compiler::Node"** %163, align 16
  store %"class.v8::internal::compiler::Node"* %189, %"class.v8::internal::compiler::Node"** %164, align 8
  store %"class.v8::internal::compiler::Node"* %191, %"class.v8::internal::compiler::Node"** %165, align 16
  store %"class.v8::internal::compiler::Node"* %193, %"class.v8::internal::compiler::Node"** %166, align 8
  store %"class.v8::internal::compiler::Node"* %195, %"class.v8::internal::compiler::Node"** %167, align 16
  store %"class.v8::internal::compiler::Node"* %198, %"class.v8::internal::compiler::Node"** %168, align 8
  %199 = icmp eq i64 %172, 0
  %200 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %174, i64 0, i32 11, i32 0, i32 0, i32 0
  %201 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %200, align 8
  %202 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %174, i64 0, i32 11, i32 0, i32 0, i32 1
  %203 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %202, align 8
  %204 = icmp eq %"class.v8::internal::compiler::Node"** %201, %203
  br i1 %204, label %218, label %205

205:                                              ; preds = %171, %214
  %206 = phi %"class.v8::internal::compiler::Node"** [ %215, %214 ], [ %201, %171 ]
  %207 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, align 8
  %208 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %207, i64 0, i32 0
  %209 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %208, align 8
  %210 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties17IsBasicBlockBeginEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %209) #6
  br i1 %210, label %214, label %211

211:                                              ; preds = %205
  %212 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %209, i64 0, i32 2
  %213 = load i16, i16* %212, align 8
  switch i16 %213, label %218 [
    i16 50, label %214
    i16 35, label %214
    i16 36, label %214
  ]

214:                                              ; preds = %211, %211, %211, %205
  %215 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 1
  %216 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %202, align 8
  %217 = icmp eq %"class.v8::internal::compiler::Node"** %215, %216
  br i1 %217, label %218, label %205

218:                                              ; preds = %211, %214, %171
  %219 = phi %"class.v8::internal::compiler::Node"** [ %201, %171 ], [ %206, %211 ], [ %215, %214 ]
  %220 = select i1 %199, i64 0, i64 3
  %221 = getelementptr inbounds [10 x %"class.v8::internal::compiler::Node"*], [10 x %"class.v8::internal::compiler::Node"*]* %15, i64 0, i64 %220
  %222 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %174, i64 0, i32 11, i32 0
  %223 = call %"class.v8::internal::compiler::Node"** @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE6insertIPS5_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISC_E9referenceEEE5valueENS_11__wrap_iterISA_EEE4typeENSG_IPKS5_EESC_SC_(%"class.std::__1::vector.1172"* %222, %"class.v8::internal::compiler::Node"** %219, %"class.v8::internal::compiler::Node"** %221, %"class.v8::internal::compiler::Node"** %169) #6
  br label %228

224:                                              ; preds = %228
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %158) #6
  %225 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %173, i64 1
  %226 = add nuw i64 %172, 1
  %227 = icmp eq i64 %226, %24
  br i1 %227, label %170, label %171

228:                                              ; preds = %228, %218
  %229 = phi i64 [ %220, %218 ], [ %232, %228 ]
  %230 = getelementptr inbounds [10 x %"class.v8::internal::compiler::Node"*], [10 x %"class.v8::internal::compiler::Node"*]* %15, i64 0, i64 %229
  %231 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %230, align 8
  call void @_ZN2v88internal8compiler8Schedule15SetBlockForNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %2, %"class.v8::internal::compiler::BasicBlock"* %174, %"class.v8::internal::compiler::Node"* %231) #6
  %232 = add nuw nsw i64 %229, 1
  %233 = icmp eq i64 %232, 10
  br i1 %233, label %224, label %228
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::internal::BasicBlockProfiler"* @_ZN2v88internal18BasicBlockProfiler3GetEv() local_unnamed_addr #2

declare %"class.v8::internal::BasicBlockProfilerData"* @_ZN2v88internal18BasicBlockProfiler7NewDataEm(%"class.v8::internal::BasicBlockProfiler"*, i64) local_unnamed_addr #2

declare void @_ZN2v88internal22BasicBlockProfilerData15SetFunctionNameENSt3__110unique_ptrIA_cNS2_14default_deleteIS4_EEEE(%"class.v8::internal::BasicBlockProfilerData"*, i8*) local_unnamed_addr #2

declare i8* @_ZNK2v88internal24OptimizedCompilationInfo12GetDebugNameEv(%"class.v8::internal::OptimizedCompilationInfo"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_8ScheduleE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.v8::internal::compiler::Schedule"* dereferenceable(120)) local_unnamed_addr #2

declare void @_ZN2v88internal22BasicBlockProfilerData11SetScheduleERKNSt3__119basic_ostringstreamIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.v8::internal::BasicBlockProfilerData"*, %"class.std::__1::basic_ostringstream"* dereferenceable(264)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2v88internal8compiler21CommonOperatorBuilderC1EPNS0_4ZoneE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::Zone"*) unnamed_addr #2

declare void @_ZN2v88internal8compiler22MachineOperatorBuilderC1EPNS0_4ZoneENS0_21MachineRepresentationENS_4base5FlagsINS2_4FlagEjEENS2_21AlignmentRequirementsE(%"class.v8::internal::compiler::MachineOperatorBuilder"*, %"class.v8::internal::Zone"*, i8 zeroext, i32, i64, i32) unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder12HeapConstantERKNS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::Handle.986"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder13Int32ConstantEi(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal22BasicBlockProfilerData10SetBlockIdEmi(%"class.v8::internal::BasicBlockProfilerData"*, i64, i32) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder4LoadENS0_11MachineTypeE(%"class.v8::internal::compiler::MachineOperatorBuilder"*, i16) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder8Int32AddEv(%"class.v8::internal::compiler::MachineOperatorBuilder"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder14Uint32LessThanEv(%"class.v8::internal::compiler::MachineOperatorBuilder"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder8Int32SubEv(%"class.v8::internal::compiler::MachineOperatorBuilder"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder8Word32OrEv(%"class.v8::internal::compiler::MachineOperatorBuilder"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler22MachineOperatorBuilder5StoreENS1_19StoreRepresentationE(%"class.v8::internal::compiler::MachineOperatorBuilder"*, i16) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler8Schedule15SetBlockForNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder13Int64ConstantEl(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties17IsBasicBlockBeginEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Operator"*, i32, %"class.v8::internal::compiler::Node"**, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::Node"** @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE6insertIPS5_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISC_E9referenceEEE5valueENS_11__wrap_iterISA_EEE4typeENSG_IPKS5_EESC_SC_(%"class.std::__1::vector.1172"*, %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.v8::internal::compiler::Node"** %1 to i8*
  %6 = ptrtoint %"class.v8::internal::compiler::Node"** %1 to i64
  %7 = ptrtoint %"class.v8::internal::compiler::Node"** %2 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.1172", %"class.std::__1::vector.1172"* %0, i64 0, i32 0, i32 0
  %9 = ptrtoint %"class.v8::internal::compiler::Node"** %3 to i64
  %10 = sub i64 %9, %7
  %11 = ashr exact i64 %10, 3
  %12 = icmp sgt i64 %10, 0
  br i1 %12, label %13, label %846

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.std::__1::vector.1172", %"class.std::__1::vector.1172"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.v8::internal::compiler::Node"*** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.1172", %"class.std::__1::vector.1172"* %0, i64 0, i32 0, i32 1
  %18 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %17, align 8
  %19 = ptrtoint %"class.v8::internal::compiler::Node"** %18 to i64
  %20 = sub i64 %16, %19
  %21 = ashr exact i64 %20, 3
  %22 = icmp sgt i64 %11, %21
  %23 = bitcast %"class.v8::internal::compiler::Node"*** %17 to i64*
  br i1 %22, label %359, label %24

24:                                               ; preds = %13
  %25 = sub i64 %19, %6
  %26 = ashr exact i64 %25, 3
  %27 = icmp sgt i64 %11, %26
  br i1 %27, label %28, label %213

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2, i64 %26
  %30 = icmp eq %"class.v8::internal::compiler::Node"** %29, %3
  br i1 %30, label %208, label %31

31:                                               ; preds = %28
  %32 = xor i64 %26, -1
  %33 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %3, i64 %32
  %34 = ptrtoint %"class.v8::internal::compiler::Node"** %33 to i64
  %35 = sub i64 %34, %7
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 4
  br i1 %38, label %134, label %39

39:                                               ; preds = %31
  %40 = xor i64 %26, -1
  %41 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %3, i64 %40
  %42 = ptrtoint %"class.v8::internal::compiler::Node"** %41 to i64
  %43 = sub i64 %42, %7
  %44 = lshr i64 %43, 3
  %45 = add nuw nsw i64 %44, 1
  %46 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %45
  %47 = add nsw i64 %26, %44
  %48 = add nsw i64 %47, 1
  %49 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2, i64 %48
  %50 = icmp ult %"class.v8::internal::compiler::Node"** %18, %49
  %51 = icmp ult %"class.v8::internal::compiler::Node"** %29, %46
  %52 = and i1 %50, %51
  br i1 %52, label %134, label %53

53:                                               ; preds = %39
  %54 = and i64 %37, 4611686018427387900
  %55 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %54
  %56 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 %54
  %57 = add nsw i64 %54, -4
  %58 = lshr exact i64 %57, 2
  %59 = add nuw nsw i64 %58, 1
  %60 = and i64 %59, 3
  %61 = icmp ult i64 %57, 12
  br i1 %61, label %113, label %62

62:                                               ; preds = %53
  %63 = sub nsw i64 %59, %60
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i64 [ 0, %62 ], [ %110, %64 ]
  %66 = phi i64 [ %63, %62 ], [ %111, %64 ]
  %67 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %65
  %68 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 %65
  %69 = bitcast %"class.v8::internal::compiler::Node"** %68 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 8, !alias.scope !3
  %71 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, i64 2
  %72 = bitcast %"class.v8::internal::compiler::Node"** %71 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 8, !alias.scope !3
  %74 = bitcast %"class.v8::internal::compiler::Node"** %67 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %74, align 8, !alias.scope !6, !noalias !3
  %75 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 2
  %76 = bitcast %"class.v8::internal::compiler::Node"** %75 to <2 x i64>*
  store <2 x i64> %73, <2 x i64>* %76, align 8, !alias.scope !6, !noalias !3
  %77 = or i64 %65, 4
  %78 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %77
  %79 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 %77
  %80 = bitcast %"class.v8::internal::compiler::Node"** %79 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 8, !alias.scope !3
  %82 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %79, i64 2
  %83 = bitcast %"class.v8::internal::compiler::Node"** %82 to <2 x i64>*
  %84 = load <2 x i64>, <2 x i64>* %83, align 8, !alias.scope !3
  %85 = bitcast %"class.v8::internal::compiler::Node"** %78 to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %85, align 8, !alias.scope !6, !noalias !3
  %86 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 2
  %87 = bitcast %"class.v8::internal::compiler::Node"** %86 to <2 x i64>*
  store <2 x i64> %84, <2 x i64>* %87, align 8, !alias.scope !6, !noalias !3
  %88 = or i64 %65, 8
  %89 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %88
  %90 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 %88
  %91 = bitcast %"class.v8::internal::compiler::Node"** %90 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 8, !alias.scope !3
  %93 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %90, i64 2
  %94 = bitcast %"class.v8::internal::compiler::Node"** %93 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 8, !alias.scope !3
  %96 = bitcast %"class.v8::internal::compiler::Node"** %89 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %96, align 8, !alias.scope !6, !noalias !3
  %97 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, i64 2
  %98 = bitcast %"class.v8::internal::compiler::Node"** %97 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %98, align 8, !alias.scope !6, !noalias !3
  %99 = or i64 %65, 12
  %100 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %99
  %101 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 %99
  %102 = bitcast %"class.v8::internal::compiler::Node"** %101 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 8, !alias.scope !3
  %104 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %101, i64 2
  %105 = bitcast %"class.v8::internal::compiler::Node"** %104 to <2 x i64>*
  %106 = load <2 x i64>, <2 x i64>* %105, align 8, !alias.scope !3
  %107 = bitcast %"class.v8::internal::compiler::Node"** %100 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %107, align 8, !alias.scope !6, !noalias !3
  %108 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %100, i64 2
  %109 = bitcast %"class.v8::internal::compiler::Node"** %108 to <2 x i64>*
  store <2 x i64> %106, <2 x i64>* %109, align 8, !alias.scope !6, !noalias !3
  %110 = add i64 %65, 16
  %111 = add i64 %66, -4
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %64, !llvm.loop !8

113:                                              ; preds = %64, %53
  %114 = phi i64 [ 0, %53 ], [ %110, %64 ]
  %115 = icmp eq i64 %60, 0
  br i1 %115, label %132, label %116

116:                                              ; preds = %113, %116
  %117 = phi i64 [ %129, %116 ], [ %114, %113 ]
  %118 = phi i64 [ %130, %116 ], [ %60, %113 ]
  %119 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %117
  %120 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 %117
  %121 = bitcast %"class.v8::internal::compiler::Node"** %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !3
  %123 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %120, i64 2
  %124 = bitcast %"class.v8::internal::compiler::Node"** %123 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8, !alias.scope !3
  %126 = bitcast %"class.v8::internal::compiler::Node"** %119 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %126, align 8, !alias.scope !6, !noalias !3
  %127 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %119, i64 2
  %128 = bitcast %"class.v8::internal::compiler::Node"** %127 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %128, align 8, !alias.scope !6, !noalias !3
  %129 = add i64 %117, 4
  %130 = add i64 %118, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %116, !llvm.loop !10

132:                                              ; preds = %116, %113
  %133 = icmp eq i64 %37, %54
  br i1 %133, label %205, label %134

134:                                              ; preds = %132, %39, %31
  %135 = phi %"class.v8::internal::compiler::Node"** [ %18, %39 ], [ %18, %31 ], [ %55, %132 ]
  %136 = phi %"class.v8::internal::compiler::Node"** [ %29, %39 ], [ %29, %31 ], [ %56, %132 ]
  %137 = ptrtoint %"class.v8::internal::compiler::Node"** %136 to i64
  %138 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %3, i64 -1
  %139 = ptrtoint %"class.v8::internal::compiler::Node"** %138 to i64
  %140 = sub i64 %139, %137
  %141 = lshr i64 %140, 3
  %142 = add nuw nsw i64 %141, 1
  %143 = and i64 %142, 7
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %134, %145
  %146 = phi %"class.v8::internal::compiler::Node"** [ %153, %145 ], [ %135, %134 ]
  %147 = phi %"class.v8::internal::compiler::Node"** [ %152, %145 ], [ %136, %134 ]
  %148 = phi i64 [ %154, %145 ], [ %143, %134 ]
  %149 = bitcast %"class.v8::internal::compiler::Node"** %146 to i64*
  %150 = bitcast %"class.v8::internal::compiler::Node"** %147 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %147, i64 1
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %146, i64 1
  %154 = add i64 %148, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %145, !llvm.loop !12

156:                                              ; preds = %145, %134
  %157 = phi %"class.v8::internal::compiler::Node"** [ undef, %134 ], [ %153, %145 ]
  %158 = phi %"class.v8::internal::compiler::Node"** [ %135, %134 ], [ %153, %145 ]
  %159 = phi %"class.v8::internal::compiler::Node"** [ %136, %134 ], [ %152, %145 ]
  %160 = icmp ult i64 %140, 56
  br i1 %160, label %205, label %161

161:                                              ; preds = %156, %161
  %162 = phi %"class.v8::internal::compiler::Node"** [ %203, %161 ], [ %158, %156 ]
  %163 = phi %"class.v8::internal::compiler::Node"** [ %202, %161 ], [ %159, %156 ]
  %164 = bitcast %"class.v8::internal::compiler::Node"** %162 to i64*
  %165 = bitcast %"class.v8::internal::compiler::Node"** %163 to i64*
  %166 = load i64, i64* %165, align 8
  store i64 %166, i64* %164, align 8
  %167 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 1
  %168 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 1
  %169 = bitcast %"class.v8::internal::compiler::Node"** %168 to i64*
  %170 = bitcast %"class.v8::internal::compiler::Node"** %167 to i64*
  %171 = load i64, i64* %170, align 8
  store i64 %171, i64* %169, align 8
  %172 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 2
  %173 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 2
  %174 = bitcast %"class.v8::internal::compiler::Node"** %173 to i64*
  %175 = bitcast %"class.v8::internal::compiler::Node"** %172 to i64*
  %176 = load i64, i64* %175, align 8
  store i64 %176, i64* %174, align 8
  %177 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 3
  %178 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 3
  %179 = bitcast %"class.v8::internal::compiler::Node"** %178 to i64*
  %180 = bitcast %"class.v8::internal::compiler::Node"** %177 to i64*
  %181 = load i64, i64* %180, align 8
  store i64 %181, i64* %179, align 8
  %182 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 4
  %183 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 4
  %184 = bitcast %"class.v8::internal::compiler::Node"** %183 to i64*
  %185 = bitcast %"class.v8::internal::compiler::Node"** %182 to i64*
  %186 = load i64, i64* %185, align 8
  store i64 %186, i64* %184, align 8
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 5
  %188 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 5
  %189 = bitcast %"class.v8::internal::compiler::Node"** %188 to i64*
  %190 = bitcast %"class.v8::internal::compiler::Node"** %187 to i64*
  %191 = load i64, i64* %190, align 8
  store i64 %191, i64* %189, align 8
  %192 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 6
  %193 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 6
  %194 = bitcast %"class.v8::internal::compiler::Node"** %193 to i64*
  %195 = bitcast %"class.v8::internal::compiler::Node"** %192 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 7
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 7
  %199 = bitcast %"class.v8::internal::compiler::Node"** %198 to i64*
  %200 = bitcast %"class.v8::internal::compiler::Node"** %197 to i64*
  %201 = load i64, i64* %200, align 8
  store i64 %201, i64* %199, align 8
  %202 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 8
  %203 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 8
  %204 = icmp eq %"class.v8::internal::compiler::Node"** %202, %3
  br i1 %204, label %205, label %161, !llvm.loop !13

205:                                              ; preds = %156, %161, %132
  %206 = phi %"class.v8::internal::compiler::Node"** [ %55, %132 ], [ %157, %156 ], [ %203, %161 ]
  %207 = ptrtoint %"class.v8::internal::compiler::Node"** %206 to i64
  br label %208

208:                                              ; preds = %205, %28
  %209 = phi i64 [ %19, %28 ], [ %207, %205 ]
  store i64 %209, i64* %23, align 8
  %210 = icmp sgt i64 %25, 0
  br i1 %210, label %211, label %846

211:                                              ; preds = %208
  %212 = inttoptr i64 %209 to %"class.v8::internal::compiler::Node"**
  br label %213

213:                                              ; preds = %211, %24
  %214 = phi i64 [ %209, %211 ], [ %19, %24 ]
  %215 = phi %"class.v8::internal::compiler::Node"** [ %212, %211 ], [ %18, %24 ]
  %216 = phi %"class.v8::internal::compiler::Node"** [ %29, %211 ], [ %3, %24 ]
  %217 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %11
  %218 = ptrtoint %"class.v8::internal::compiler::Node"** %217 to i64
  %219 = sub i64 %214, %218
  %220 = ashr exact i64 %219, 3
  %221 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %220
  %222 = icmp ult %"class.v8::internal::compiler::Node"** %221, %18
  br i1 %222, label %223, label %336

223:                                              ; preds = %213
  %224 = sub nsw i64 0, %220
  %225 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %224
  %226 = bitcast %"class.v8::internal::compiler::Node"** %225 to i8*
  %227 = xor i64 %6, -1
  %228 = getelementptr i8, i8* %226, i64 %227
  %229 = ptrtoint i8* %228 to i64
  %230 = lshr i64 %229, 3
  %231 = add nuw nsw i64 %230, 1
  %232 = icmp ult i64 %231, 4
  br i1 %232, label %233, label %236

233:                                              ; preds = %331, %236, %223
  %234 = phi %"class.v8::internal::compiler::Node"** [ %215, %236 ], [ %215, %223 ], [ %254, %331 ]
  %235 = phi %"class.v8::internal::compiler::Node"** [ %221, %236 ], [ %221, %223 ], [ %255, %331 ]
  br label %344

236:                                              ; preds = %223
  %237 = sub nsw i64 0, %220
  %238 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %237
  %239 = bitcast %"class.v8::internal::compiler::Node"** %238 to i8*
  %240 = xor i64 %6, -1
  %241 = getelementptr i8, i8* %239, i64 %240
  %242 = ptrtoint i8* %241 to i64
  %243 = lshr i64 %242, 3
  %244 = add nuw nsw i64 %243, 1
  %245 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %244
  %246 = add nsw i64 %220, %243
  %247 = add nsw i64 %246, 1
  %248 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %247
  %249 = icmp ult %"class.v8::internal::compiler::Node"** %215, %248
  %250 = icmp ult %"class.v8::internal::compiler::Node"** %221, %245
  %251 = and i1 %249, %250
  br i1 %251, label %233, label %252

252:                                              ; preds = %236
  %253 = and i64 %231, 4611686018427387900
  %254 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %253
  %255 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 %253
  %256 = add nsw i64 %253, -4
  %257 = lshr exact i64 %256, 2
  %258 = add nuw nsw i64 %257, 1
  %259 = and i64 %258, 3
  %260 = icmp ult i64 %256, 12
  br i1 %260, label %312, label %261

261:                                              ; preds = %252
  %262 = sub nsw i64 %258, %259
  br label %263

263:                                              ; preds = %263, %261
  %264 = phi i64 [ 0, %261 ], [ %309, %263 ]
  %265 = phi i64 [ %262, %261 ], [ %310, %263 ]
  %266 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %264
  %267 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 %264
  %268 = bitcast %"class.v8::internal::compiler::Node"** %267 to <2 x i64>*
  %269 = load <2 x i64>, <2 x i64>* %268, align 8, !alias.scope !14
  %270 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %267, i64 2
  %271 = bitcast %"class.v8::internal::compiler::Node"** %270 to <2 x i64>*
  %272 = load <2 x i64>, <2 x i64>* %271, align 8, !alias.scope !14
  %273 = bitcast %"class.v8::internal::compiler::Node"** %266 to <2 x i64>*
  store <2 x i64> %269, <2 x i64>* %273, align 8, !alias.scope !17, !noalias !14
  %274 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %266, i64 2
  %275 = bitcast %"class.v8::internal::compiler::Node"** %274 to <2 x i64>*
  store <2 x i64> %272, <2 x i64>* %275, align 8, !alias.scope !17, !noalias !14
  %276 = or i64 %264, 4
  %277 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %276
  %278 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 %276
  %279 = bitcast %"class.v8::internal::compiler::Node"** %278 to <2 x i64>*
  %280 = load <2 x i64>, <2 x i64>* %279, align 8, !alias.scope !14
  %281 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %278, i64 2
  %282 = bitcast %"class.v8::internal::compiler::Node"** %281 to <2 x i64>*
  %283 = load <2 x i64>, <2 x i64>* %282, align 8, !alias.scope !14
  %284 = bitcast %"class.v8::internal::compiler::Node"** %277 to <2 x i64>*
  store <2 x i64> %280, <2 x i64>* %284, align 8, !alias.scope !17, !noalias !14
  %285 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %277, i64 2
  %286 = bitcast %"class.v8::internal::compiler::Node"** %285 to <2 x i64>*
  store <2 x i64> %283, <2 x i64>* %286, align 8, !alias.scope !17, !noalias !14
  %287 = or i64 %264, 8
  %288 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %287
  %289 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 %287
  %290 = bitcast %"class.v8::internal::compiler::Node"** %289 to <2 x i64>*
  %291 = load <2 x i64>, <2 x i64>* %290, align 8, !alias.scope !14
  %292 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %289, i64 2
  %293 = bitcast %"class.v8::internal::compiler::Node"** %292 to <2 x i64>*
  %294 = load <2 x i64>, <2 x i64>* %293, align 8, !alias.scope !14
  %295 = bitcast %"class.v8::internal::compiler::Node"** %288 to <2 x i64>*
  store <2 x i64> %291, <2 x i64>* %295, align 8, !alias.scope !17, !noalias !14
  %296 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %288, i64 2
  %297 = bitcast %"class.v8::internal::compiler::Node"** %296 to <2 x i64>*
  store <2 x i64> %294, <2 x i64>* %297, align 8, !alias.scope !17, !noalias !14
  %298 = or i64 %264, 12
  %299 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %298
  %300 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 %298
  %301 = bitcast %"class.v8::internal::compiler::Node"** %300 to <2 x i64>*
  %302 = load <2 x i64>, <2 x i64>* %301, align 8, !alias.scope !14
  %303 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %300, i64 2
  %304 = bitcast %"class.v8::internal::compiler::Node"** %303 to <2 x i64>*
  %305 = load <2 x i64>, <2 x i64>* %304, align 8, !alias.scope !14
  %306 = bitcast %"class.v8::internal::compiler::Node"** %299 to <2 x i64>*
  store <2 x i64> %302, <2 x i64>* %306, align 8, !alias.scope !17, !noalias !14
  %307 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %299, i64 2
  %308 = bitcast %"class.v8::internal::compiler::Node"** %307 to <2 x i64>*
  store <2 x i64> %305, <2 x i64>* %308, align 8, !alias.scope !17, !noalias !14
  %309 = add i64 %264, 16
  %310 = add i64 %265, -4
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %263, !llvm.loop !19

312:                                              ; preds = %263, %252
  %313 = phi i64 [ 0, %252 ], [ %309, %263 ]
  %314 = icmp eq i64 %259, 0
  br i1 %314, label %331, label %315

315:                                              ; preds = %312, %315
  %316 = phi i64 [ %328, %315 ], [ %313, %312 ]
  %317 = phi i64 [ %329, %315 ], [ %259, %312 ]
  %318 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %316
  %319 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 %316
  %320 = bitcast %"class.v8::internal::compiler::Node"** %319 to <2 x i64>*
  %321 = load <2 x i64>, <2 x i64>* %320, align 8, !alias.scope !14
  %322 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %319, i64 2
  %323 = bitcast %"class.v8::internal::compiler::Node"** %322 to <2 x i64>*
  %324 = load <2 x i64>, <2 x i64>* %323, align 8, !alias.scope !14
  %325 = bitcast %"class.v8::internal::compiler::Node"** %318 to <2 x i64>*
  store <2 x i64> %321, <2 x i64>* %325, align 8, !alias.scope !17, !noalias !14
  %326 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %318, i64 2
  %327 = bitcast %"class.v8::internal::compiler::Node"** %326 to <2 x i64>*
  store <2 x i64> %324, <2 x i64>* %327, align 8, !alias.scope !17, !noalias !14
  %328 = add i64 %316, 4
  %329 = add i64 %317, -1
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %331, label %315, !llvm.loop !20

331:                                              ; preds = %315, %312
  %332 = icmp eq i64 %231, %253
  br i1 %332, label %333, label %233

333:                                              ; preds = %344, %331
  %334 = phi %"class.v8::internal::compiler::Node"** [ %254, %331 ], [ %351, %344 ]
  %335 = ptrtoint %"class.v8::internal::compiler::Node"** %334 to i64
  br label %336

336:                                              ; preds = %333, %213
  %337 = phi i64 [ %335, %333 ], [ %214, %213 ]
  store i64 %337, i64* %23, align 8
  %338 = icmp eq i64 %219, 0
  br i1 %338, label %353, label %339

339:                                              ; preds = %336
  %340 = sub nsw i64 0, %220
  %341 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %340
  %342 = bitcast %"class.v8::internal::compiler::Node"** %341 to i8*
  %343 = bitcast %"class.v8::internal::compiler::Node"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %342, i8* align 8 %343, i64 %219, i1 false) #6
  br label %353

344:                                              ; preds = %233, %344
  %345 = phi %"class.v8::internal::compiler::Node"** [ %351, %344 ], [ %234, %233 ]
  %346 = phi %"class.v8::internal::compiler::Node"** [ %350, %344 ], [ %235, %233 ]
  %347 = bitcast %"class.v8::internal::compiler::Node"** %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = bitcast %"class.v8::internal::compiler::Node"** %345 to i64*
  store i64 %348, i64* %349, align 8
  %350 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %346, i64 1
  %351 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %345, i64 1
  %352 = icmp ult %"class.v8::internal::compiler::Node"** %350, %18
  br i1 %352, label %344, label %333, !llvm.loop !21

353:                                              ; preds = %336, %339
  %354 = ptrtoint %"class.v8::internal::compiler::Node"** %216 to i64
  %355 = sub i64 %354, %7
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %846, label %357

357:                                              ; preds = %353
  %358 = bitcast %"class.v8::internal::compiler::Node"** %2 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %358, i64 %355, i1 false) #6
  br label %846

359:                                              ; preds = %13
  %360 = bitcast %"class.std::__1::vector.1172"* %0 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = sub i64 %19, %361
  %363 = ashr exact i64 %362, 3
  %364 = add nsw i64 %363, %11
  %365 = icmp ugt i64 %364, 268435455
  br i1 %365, label %366, label %368

366:                                              ; preds = %359
  %367 = bitcast %"class.std::__1::vector.1172"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %367) #8
  unreachable

368:                                              ; preds = %359
  %369 = sub i64 %16, %361
  %370 = ashr exact i64 %369, 3
  %371 = icmp ult i64 %370, 134217727
  br i1 %371, label %375, label %372

372:                                              ; preds = %368
  %373 = sub i64 %6, %361
  %374 = ashr exact i64 %373, 3
  br label %382

375:                                              ; preds = %368
  %376 = ashr exact i64 %369, 2
  %377 = icmp ult i64 %376, %364
  %378 = select i1 %377, i64 %364, i64 %376
  %379 = sub i64 %6, %361
  %380 = ashr exact i64 %379, 3
  %381 = icmp eq i64 %378, 0
  br i1 %381, label %401, label %382

382:                                              ; preds = %372, %375
  %383 = phi i64 [ %374, %372 ], [ %380, %375 ]
  %384 = phi i64 [ 268435455, %372 ], [ %378, %375 ]
  %385 = getelementptr inbounds %"class.std::__1::vector.1172", %"class.std::__1::vector.1172"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %386 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %385, align 8
  %387 = shl i64 %384, 3
  %388 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %386, i64 0, i32 2
  %389 = load i64, i64* %388, align 8
  %390 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %386, i64 0, i32 3
  %391 = load i64, i64* %390, align 8
  %392 = sub i64 %391, %389
  %393 = icmp ugt i64 %387, %392
  br i1 %393, label %394, label %396, !prof !22

394:                                              ; preds = %382
  %395 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %386, i64 %387) #6
  br label %398

396:                                              ; preds = %382
  %397 = add i64 %389, %387
  store i64 %397, i64* %388, align 8
  br label %398

398:                                              ; preds = %396, %394
  %399 = phi i64 [ %395, %394 ], [ %389, %396 ]
  %400 = inttoptr i64 %399 to %"class.v8::internal::compiler::Node"**
  br label %401

401:                                              ; preds = %398, %375
  %402 = phi i64 [ %383, %398 ], [ %380, %375 ]
  %403 = phi i64 [ %384, %398 ], [ 0, %375 ]
  %404 = phi %"class.v8::internal::compiler::Node"** [ %400, %398 ], [ null, %375 ]
  %405 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %404, i64 %402
  %406 = ptrtoint %"class.v8::internal::compiler::Node"** %405 to i64
  %407 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %404, i64 %403
  %408 = ptrtoint %"class.v8::internal::compiler::Node"** %407 to i64
  %409 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %405, i64 %11
  %410 = add i64 %10, -8
  %411 = lshr i64 %410, 3
  %412 = add nuw nsw i64 %411, 1
  %413 = and i64 %412, 7
  %414 = icmp eq i64 %413, 0
  br i1 %414, label %430, label %415

415:                                              ; preds = %401, %415
  %416 = phi %"class.v8::internal::compiler::Node"** [ %423, %415 ], [ %405, %401 ]
  %417 = phi %"class.v8::internal::compiler::Node"** [ %425, %415 ], [ %2, %401 ]
  %418 = phi i64 [ %424, %415 ], [ %406, %401 ]
  %419 = phi i64 [ %426, %415 ], [ %413, %401 ]
  %420 = bitcast %"class.v8::internal::compiler::Node"** %417 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = inttoptr i64 %418 to i64*
  store i64 %421, i64* %422, align 8
  %423 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %416, i64 1
  %424 = ptrtoint %"class.v8::internal::compiler::Node"** %423 to i64
  %425 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %417, i64 1
  %426 = add i64 %419, -1
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %415, !llvm.loop !23

428:                                              ; preds = %415
  %429 = ptrtoint %"class.v8::internal::compiler::Node"** %423 to i64
  br label %430

430:                                              ; preds = %401, %428
  %431 = phi %"class.v8::internal::compiler::Node"** [ %405, %401 ], [ %423, %428 ]
  %432 = phi %"class.v8::internal::compiler::Node"** [ %2, %401 ], [ %425, %428 ]
  %433 = phi i64 [ %406, %401 ], [ %429, %428 ]
  %434 = icmp ult i64 %410, 56
  br i1 %434, label %481, label %435

435:                                              ; preds = %430, %435
  %436 = phi %"class.v8::internal::compiler::Node"** [ %477, %435 ], [ %431, %430 ]
  %437 = phi %"class.v8::internal::compiler::Node"** [ %479, %435 ], [ %432, %430 ]
  %438 = phi i64 [ %478, %435 ], [ %433, %430 ]
  %439 = bitcast %"class.v8::internal::compiler::Node"** %437 to i64*
  %440 = load i64, i64* %439, align 8
  %441 = inttoptr i64 %438 to i64*
  store i64 %440, i64* %441, align 8
  %442 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 1
  %443 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %437, i64 1
  %444 = bitcast %"class.v8::internal::compiler::Node"** %443 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = bitcast %"class.v8::internal::compiler::Node"** %442 to i64*
  store i64 %445, i64* %446, align 8
  %447 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 2
  %448 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %437, i64 2
  %449 = bitcast %"class.v8::internal::compiler::Node"** %448 to i64*
  %450 = load i64, i64* %449, align 8
  %451 = bitcast %"class.v8::internal::compiler::Node"** %447 to i64*
  store i64 %450, i64* %451, align 8
  %452 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 3
  %453 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %437, i64 3
  %454 = bitcast %"class.v8::internal::compiler::Node"** %453 to i64*
  %455 = load i64, i64* %454, align 8
  %456 = bitcast %"class.v8::internal::compiler::Node"** %452 to i64*
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 4
  %458 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %437, i64 4
  %459 = bitcast %"class.v8::internal::compiler::Node"** %458 to i64*
  %460 = load i64, i64* %459, align 8
  %461 = bitcast %"class.v8::internal::compiler::Node"** %457 to i64*
  store i64 %460, i64* %461, align 8
  %462 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 5
  %463 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %437, i64 5
  %464 = bitcast %"class.v8::internal::compiler::Node"** %463 to i64*
  %465 = load i64, i64* %464, align 8
  %466 = bitcast %"class.v8::internal::compiler::Node"** %462 to i64*
  store i64 %465, i64* %466, align 8
  %467 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 6
  %468 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %437, i64 6
  %469 = bitcast %"class.v8::internal::compiler::Node"** %468 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = bitcast %"class.v8::internal::compiler::Node"** %467 to i64*
  store i64 %470, i64* %471, align 8
  %472 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 7
  %473 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %437, i64 7
  %474 = bitcast %"class.v8::internal::compiler::Node"** %473 to i64*
  %475 = load i64, i64* %474, align 8
  %476 = bitcast %"class.v8::internal::compiler::Node"** %472 to i64*
  store i64 %475, i64* %476, align 8
  %477 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 8
  %478 = ptrtoint %"class.v8::internal::compiler::Node"** %477 to i64
  %479 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %437, i64 8
  %480 = icmp eq %"class.v8::internal::compiler::Node"** %409, %477
  br i1 %480, label %481, label %435

481:                                              ; preds = %435, %430
  %482 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %8, align 8
  %483 = ptrtoint %"class.v8::internal::compiler::Node"** %482 to i64
  %484 = icmp eq %"class.v8::internal::compiler::Node"** %482, %1
  br i1 %484, label %657, label %485

485:                                              ; preds = %481
  %486 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 -1
  %487 = ptrtoint %"class.v8::internal::compiler::Node"** %486 to i64
  %488 = sub i64 %487, %483
  %489 = lshr i64 %488, 3
  %490 = add nuw nsw i64 %489, 1
  %491 = icmp ult i64 %490, 4
  br i1 %491, label %584, label %492

492:                                              ; preds = %485
  %493 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 -1
  %494 = ptrtoint %"class.v8::internal::compiler::Node"** %493 to i64
  %495 = sub i64 %494, %483
  %496 = lshr i64 %495, 3
  %497 = xor i64 %496, -1
  %498 = add nsw i64 %402, %497
  %499 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %404, i64 %498
  %500 = xor i64 %496, -1
  %501 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %500
  %502 = icmp ult %"class.v8::internal::compiler::Node"** %499, %1
  %503 = icmp ult %"class.v8::internal::compiler::Node"** %501, %405
  %504 = and i1 %502, %503
  br i1 %504, label %584, label %505

505:                                              ; preds = %492
  %506 = and i64 %490, 4611686018427387900
  %507 = sub nsw i64 0, %506
  %508 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %405, i64 %507
  %509 = sub nsw i64 0, %506
  %510 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %509
  %511 = add nsw i64 %506, -4
  %512 = lshr exact i64 %511, 2
  %513 = add nuw nsw i64 %512, 1
  %514 = and i64 %513, 1
  %515 = icmp eq i64 %511, 0
  br i1 %515, label %560, label %516

516:                                              ; preds = %505
  %517 = sub nuw nsw i64 %513, %514
  %518 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %405, i64 -1
  %519 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 -1
  %520 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %405, i64 -1
  %521 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 -1
  br label %522

522:                                              ; preds = %522, %516
  %523 = phi i64 [ 0, %516 ], [ %557, %522 ]
  %524 = phi i64 [ %517, %516 ], [ %558, %522 ]
  %525 = sub i64 0, %523
  %526 = sub i64 0, %523
  %527 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %518, i64 %525
  %528 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %519, i64 %526
  %529 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %528, i64 -1
  %530 = bitcast %"class.v8::internal::compiler::Node"** %529 to <2 x i64>*
  %531 = load <2 x i64>, <2 x i64>* %530, align 8, !alias.scope !24
  %532 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %528, i64 -2
  %533 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %532, i64 -1
  %534 = bitcast %"class.v8::internal::compiler::Node"** %533 to <2 x i64>*
  %535 = load <2 x i64>, <2 x i64>* %534, align 8, !alias.scope !24
  %536 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %527, i64 -1
  %537 = bitcast %"class.v8::internal::compiler::Node"** %536 to <2 x i64>*
  store <2 x i64> %531, <2 x i64>* %537, align 8, !alias.scope !27, !noalias !24
  %538 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %527, i64 -2
  %539 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %538, i64 -1
  %540 = bitcast %"class.v8::internal::compiler::Node"** %539 to <2 x i64>*
  store <2 x i64> %535, <2 x i64>* %540, align 8, !alias.scope !27, !noalias !24
  %541 = sub nuw nsw i64 -4, %523
  %542 = sub nuw nsw i64 -4, %523
  %543 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %520, i64 %541
  %544 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %521, i64 %542
  %545 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %544, i64 -1
  %546 = bitcast %"class.v8::internal::compiler::Node"** %545 to <2 x i64>*
  %547 = load <2 x i64>, <2 x i64>* %546, align 8, !alias.scope !24
  %548 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %544, i64 -2
  %549 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %548, i64 -1
  %550 = bitcast %"class.v8::internal::compiler::Node"** %549 to <2 x i64>*
  %551 = load <2 x i64>, <2 x i64>* %550, align 8, !alias.scope !24
  %552 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %543, i64 -1
  %553 = bitcast %"class.v8::internal::compiler::Node"** %552 to <2 x i64>*
  store <2 x i64> %547, <2 x i64>* %553, align 8, !alias.scope !27, !noalias !24
  %554 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %543, i64 -2
  %555 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %554, i64 -1
  %556 = bitcast %"class.v8::internal::compiler::Node"** %555 to <2 x i64>*
  store <2 x i64> %551, <2 x i64>* %556, align 8, !alias.scope !27, !noalias !24
  %557 = add i64 %523, 8
  %558 = add i64 %524, -2
  %559 = icmp eq i64 %558, 0
  br i1 %559, label %560, label %522, !llvm.loop !29

560:                                              ; preds = %522, %505
  %561 = phi i64 [ 0, %505 ], [ %557, %522 ]
  %562 = icmp eq i64 %514, 0
  br i1 %562, label %582, label %563

563:                                              ; preds = %560
  %564 = sub i64 0, %561
  %565 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %405, i64 -1
  %566 = sub i64 0, %561
  %567 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 -1
  %568 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %565, i64 %564
  %569 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %567, i64 %566
  %570 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %569, i64 -1
  %571 = bitcast %"class.v8::internal::compiler::Node"** %570 to <2 x i64>*
  %572 = load <2 x i64>, <2 x i64>* %571, align 8, !alias.scope !24
  %573 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %569, i64 -2
  %574 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %573, i64 -1
  %575 = bitcast %"class.v8::internal::compiler::Node"** %574 to <2 x i64>*
  %576 = load <2 x i64>, <2 x i64>* %575, align 8, !alias.scope !24
  %577 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %568, i64 -1
  %578 = bitcast %"class.v8::internal::compiler::Node"** %577 to <2 x i64>*
  store <2 x i64> %572, <2 x i64>* %578, align 8, !alias.scope !27, !noalias !24
  %579 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %568, i64 -2
  %580 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %579, i64 -1
  %581 = bitcast %"class.v8::internal::compiler::Node"** %580 to <2 x i64>*
  store <2 x i64> %576, <2 x i64>* %581, align 8, !alias.scope !27, !noalias !24
  br label %582

582:                                              ; preds = %560, %563
  %583 = icmp eq i64 %490, %506
  br i1 %583, label %654, label %584

584:                                              ; preds = %582, %492, %485
  %585 = phi %"class.v8::internal::compiler::Node"** [ %405, %492 ], [ %405, %485 ], [ %508, %582 ]
  %586 = phi %"class.v8::internal::compiler::Node"** [ %1, %492 ], [ %1, %485 ], [ %510, %582 ]
  %587 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %586, i64 -1
  %588 = ptrtoint %"class.v8::internal::compiler::Node"** %587 to i64
  %589 = sub i64 %588, %483
  %590 = lshr i64 %589, 3
  %591 = add nuw nsw i64 %590, 1
  %592 = and i64 %591, 7
  %593 = icmp eq i64 %592, 0
  br i1 %593, label %605, label %594

594:                                              ; preds = %584, %594
  %595 = phi %"class.v8::internal::compiler::Node"** [ %598, %594 ], [ %585, %584 ]
  %596 = phi %"class.v8::internal::compiler::Node"** [ %599, %594 ], [ %586, %584 ]
  %597 = phi i64 [ %603, %594 ], [ %592, %584 ]
  %598 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %595, i64 -1
  %599 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %596, i64 -1
  %600 = bitcast %"class.v8::internal::compiler::Node"** %599 to i64*
  %601 = load i64, i64* %600, align 8
  %602 = bitcast %"class.v8::internal::compiler::Node"** %598 to i64*
  store i64 %601, i64* %602, align 8
  %603 = add i64 %597, -1
  %604 = icmp eq i64 %603, 0
  br i1 %604, label %605, label %594, !llvm.loop !30

605:                                              ; preds = %594, %584
  %606 = phi %"class.v8::internal::compiler::Node"** [ undef, %584 ], [ %598, %594 ]
  %607 = phi %"class.v8::internal::compiler::Node"** [ %585, %584 ], [ %598, %594 ]
  %608 = phi %"class.v8::internal::compiler::Node"** [ %586, %584 ], [ %599, %594 ]
  %609 = icmp ult i64 %589, 56
  br i1 %609, label %654, label %610

610:                                              ; preds = %605, %610
  %611 = phi %"class.v8::internal::compiler::Node"** [ %648, %610 ], [ %607, %605 ]
  %612 = phi %"class.v8::internal::compiler::Node"** [ %649, %610 ], [ %608, %605 ]
  %613 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -1
  %614 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -1
  %615 = bitcast %"class.v8::internal::compiler::Node"** %614 to i64*
  %616 = load i64, i64* %615, align 8
  %617 = bitcast %"class.v8::internal::compiler::Node"** %613 to i64*
  store i64 %616, i64* %617, align 8
  %618 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -2
  %619 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -2
  %620 = bitcast %"class.v8::internal::compiler::Node"** %619 to i64*
  %621 = load i64, i64* %620, align 8
  %622 = bitcast %"class.v8::internal::compiler::Node"** %618 to i64*
  store i64 %621, i64* %622, align 8
  %623 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -3
  %624 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -3
  %625 = bitcast %"class.v8::internal::compiler::Node"** %624 to i64*
  %626 = load i64, i64* %625, align 8
  %627 = bitcast %"class.v8::internal::compiler::Node"** %623 to i64*
  store i64 %626, i64* %627, align 8
  %628 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -4
  %629 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -4
  %630 = bitcast %"class.v8::internal::compiler::Node"** %629 to i64*
  %631 = load i64, i64* %630, align 8
  %632 = bitcast %"class.v8::internal::compiler::Node"** %628 to i64*
  store i64 %631, i64* %632, align 8
  %633 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -5
  %634 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -5
  %635 = bitcast %"class.v8::internal::compiler::Node"** %634 to i64*
  %636 = load i64, i64* %635, align 8
  %637 = bitcast %"class.v8::internal::compiler::Node"** %633 to i64*
  store i64 %636, i64* %637, align 8
  %638 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -6
  %639 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -6
  %640 = bitcast %"class.v8::internal::compiler::Node"** %639 to i64*
  %641 = load i64, i64* %640, align 8
  %642 = bitcast %"class.v8::internal::compiler::Node"** %638 to i64*
  store i64 %641, i64* %642, align 8
  %643 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -7
  %644 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -7
  %645 = bitcast %"class.v8::internal::compiler::Node"** %644 to i64*
  %646 = load i64, i64* %645, align 8
  %647 = bitcast %"class.v8::internal::compiler::Node"** %643 to i64*
  store i64 %646, i64* %647, align 8
  %648 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -8
  %649 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -8
  %650 = bitcast %"class.v8::internal::compiler::Node"** %649 to i64*
  %651 = load i64, i64* %650, align 8
  %652 = bitcast %"class.v8::internal::compiler::Node"** %648 to i64*
  store i64 %651, i64* %652, align 8
  %653 = icmp eq %"class.v8::internal::compiler::Node"** %649, %482
  br i1 %653, label %654, label %610, !llvm.loop !31

654:                                              ; preds = %605, %610, %582
  %655 = phi %"class.v8::internal::compiler::Node"** [ %508, %582 ], [ %606, %605 ], [ %648, %610 ]
  %656 = ptrtoint %"class.v8::internal::compiler::Node"** %655 to i64
  br label %657

657:                                              ; preds = %654, %481
  %658 = phi i64 [ %406, %481 ], [ %656, %654 ]
  %659 = phi %"class.v8::internal::compiler::Node"** [ %405, %481 ], [ %655, %654 ]
  %660 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %17, align 8
  %661 = icmp eq %"class.v8::internal::compiler::Node"** %660, %1
  br i1 %661, label %662, label %664

662:                                              ; preds = %657
  %663 = ptrtoint %"class.v8::internal::compiler::Node"** %659 to i64
  br label %842

664:                                              ; preds = %657
  %665 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %660, i64 -1
  %666 = ptrtoint %"class.v8::internal::compiler::Node"** %665 to i64
  %667 = sub i64 %666, %6
  %668 = lshr i64 %667, 3
  %669 = add nuw nsw i64 %668, 1
  %670 = icmp ult i64 %669, 4
  br i1 %670, label %767, label %671

671:                                              ; preds = %664
  %672 = add nsw i64 %402, %11
  %673 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %660, i64 -1
  %674 = ptrtoint %"class.v8::internal::compiler::Node"** %673 to i64
  %675 = sub i64 %674, %6
  %676 = lshr i64 %675, 3
  %677 = add nsw i64 %672, %676
  %678 = add nsw i64 %677, 1
  %679 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %404, i64 %678
  %680 = add nuw nsw i64 %676, 1
  %681 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %680
  %682 = icmp ult %"class.v8::internal::compiler::Node"** %409, %681
  %683 = icmp ugt %"class.v8::internal::compiler::Node"** %679, %1
  %684 = and i1 %682, %683
  br i1 %684, label %767, label %685

685:                                              ; preds = %671
  %686 = and i64 %669, 4611686018427387900
  %687 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 %686
  %688 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 %686
  %689 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %686
  %690 = add nsw i64 %686, -4
  %691 = lshr exact i64 %690, 2
  %692 = add nuw nsw i64 %691, 1
  %693 = and i64 %692, 3
  %694 = icmp ult i64 %690, 12
  br i1 %694, label %746, label %695

695:                                              ; preds = %685
  %696 = sub nsw i64 %692, %693
  br label %697

697:                                              ; preds = %697, %695
  %698 = phi i64 [ 0, %695 ], [ %743, %697 ]
  %699 = phi i64 [ %696, %695 ], [ %744, %697 ]
  %700 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 %698
  %701 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %698
  %702 = bitcast %"class.v8::internal::compiler::Node"** %701 to <2 x i64>*
  %703 = load <2 x i64>, <2 x i64>* %702, align 8, !alias.scope !32
  %704 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %701, i64 2
  %705 = bitcast %"class.v8::internal::compiler::Node"** %704 to <2 x i64>*
  %706 = load <2 x i64>, <2 x i64>* %705, align 8, !alias.scope !32
  %707 = bitcast %"class.v8::internal::compiler::Node"** %700 to <2 x i64>*
  store <2 x i64> %703, <2 x i64>* %707, align 8, !alias.scope !35, !noalias !32
  %708 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %700, i64 2
  %709 = bitcast %"class.v8::internal::compiler::Node"** %708 to <2 x i64>*
  store <2 x i64> %706, <2 x i64>* %709, align 8, !alias.scope !35, !noalias !32
  %710 = or i64 %698, 4
  %711 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 %710
  %712 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %710
  %713 = bitcast %"class.v8::internal::compiler::Node"** %712 to <2 x i64>*
  %714 = load <2 x i64>, <2 x i64>* %713, align 8, !alias.scope !32
  %715 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %712, i64 2
  %716 = bitcast %"class.v8::internal::compiler::Node"** %715 to <2 x i64>*
  %717 = load <2 x i64>, <2 x i64>* %716, align 8, !alias.scope !32
  %718 = bitcast %"class.v8::internal::compiler::Node"** %711 to <2 x i64>*
  store <2 x i64> %714, <2 x i64>* %718, align 8, !alias.scope !35, !noalias !32
  %719 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %711, i64 2
  %720 = bitcast %"class.v8::internal::compiler::Node"** %719 to <2 x i64>*
  store <2 x i64> %717, <2 x i64>* %720, align 8, !alias.scope !35, !noalias !32
  %721 = or i64 %698, 8
  %722 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 %721
  %723 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %721
  %724 = bitcast %"class.v8::internal::compiler::Node"** %723 to <2 x i64>*
  %725 = load <2 x i64>, <2 x i64>* %724, align 8, !alias.scope !32
  %726 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %723, i64 2
  %727 = bitcast %"class.v8::internal::compiler::Node"** %726 to <2 x i64>*
  %728 = load <2 x i64>, <2 x i64>* %727, align 8, !alias.scope !32
  %729 = bitcast %"class.v8::internal::compiler::Node"** %722 to <2 x i64>*
  store <2 x i64> %725, <2 x i64>* %729, align 8, !alias.scope !35, !noalias !32
  %730 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %722, i64 2
  %731 = bitcast %"class.v8::internal::compiler::Node"** %730 to <2 x i64>*
  store <2 x i64> %728, <2 x i64>* %731, align 8, !alias.scope !35, !noalias !32
  %732 = or i64 %698, 12
  %733 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 %732
  %734 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %732
  %735 = bitcast %"class.v8::internal::compiler::Node"** %734 to <2 x i64>*
  %736 = load <2 x i64>, <2 x i64>* %735, align 8, !alias.scope !32
  %737 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %734, i64 2
  %738 = bitcast %"class.v8::internal::compiler::Node"** %737 to <2 x i64>*
  %739 = load <2 x i64>, <2 x i64>* %738, align 8, !alias.scope !32
  %740 = bitcast %"class.v8::internal::compiler::Node"** %733 to <2 x i64>*
  store <2 x i64> %736, <2 x i64>* %740, align 8, !alias.scope !35, !noalias !32
  %741 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %733, i64 2
  %742 = bitcast %"class.v8::internal::compiler::Node"** %741 to <2 x i64>*
  store <2 x i64> %739, <2 x i64>* %742, align 8, !alias.scope !35, !noalias !32
  %743 = add i64 %698, 16
  %744 = add i64 %699, -4
  %745 = icmp eq i64 %744, 0
  br i1 %745, label %746, label %697, !llvm.loop !37

746:                                              ; preds = %697, %685
  %747 = phi i64 [ 0, %685 ], [ %743, %697 ]
  %748 = icmp eq i64 %693, 0
  br i1 %748, label %765, label %749

749:                                              ; preds = %746, %749
  %750 = phi i64 [ %762, %749 ], [ %747, %746 ]
  %751 = phi i64 [ %763, %749 ], [ %693, %746 ]
  %752 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 %750
  %753 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %750
  %754 = bitcast %"class.v8::internal::compiler::Node"** %753 to <2 x i64>*
  %755 = load <2 x i64>, <2 x i64>* %754, align 8, !alias.scope !32
  %756 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %753, i64 2
  %757 = bitcast %"class.v8::internal::compiler::Node"** %756 to <2 x i64>*
  %758 = load <2 x i64>, <2 x i64>* %757, align 8, !alias.scope !32
  %759 = bitcast %"class.v8::internal::compiler::Node"** %752 to <2 x i64>*
  store <2 x i64> %755, <2 x i64>* %759, align 8, !alias.scope !35, !noalias !32
  %760 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %752, i64 2
  %761 = bitcast %"class.v8::internal::compiler::Node"** %760 to <2 x i64>*
  store <2 x i64> %758, <2 x i64>* %761, align 8, !alias.scope !35, !noalias !32
  %762 = add i64 %750, 4
  %763 = add i64 %751, -1
  %764 = icmp eq i64 %763, 0
  br i1 %764, label %765, label %749, !llvm.loop !38

765:                                              ; preds = %749, %746
  %766 = icmp eq i64 %669, %686
  br i1 %766, label %842, label %767

767:                                              ; preds = %765, %671, %664
  %768 = phi %"class.v8::internal::compiler::Node"** [ %409, %671 ], [ %409, %664 ], [ %687, %765 ]
  %769 = phi %"class.v8::internal::compiler::Node"** [ %409, %671 ], [ %409, %664 ], [ %688, %765 ]
  %770 = phi %"class.v8::internal::compiler::Node"** [ %1, %671 ], [ %1, %664 ], [ %689, %765 ]
  %771 = ptrtoint %"class.v8::internal::compiler::Node"** %770 to i64
  %772 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %660, i64 -1
  %773 = ptrtoint %"class.v8::internal::compiler::Node"** %772 to i64
  %774 = sub i64 %773, %771
  %775 = lshr i64 %774, 3
  %776 = add nuw nsw i64 %775, 1
  %777 = and i64 %776, 7
  %778 = icmp eq i64 %777, 0
  br i1 %778, label %791, label %779

779:                                              ; preds = %767, %779
  %780 = phi %"class.v8::internal::compiler::Node"** [ %788, %779 ], [ %768, %767 ]
  %781 = phi %"class.v8::internal::compiler::Node"** [ %788, %779 ], [ %769, %767 ]
  %782 = phi %"class.v8::internal::compiler::Node"** [ %787, %779 ], [ %770, %767 ]
  %783 = phi i64 [ %789, %779 ], [ %777, %767 ]
  %784 = bitcast %"class.v8::internal::compiler::Node"** %781 to i64*
  %785 = bitcast %"class.v8::internal::compiler::Node"** %782 to i64*
  %786 = load i64, i64* %785, align 8
  store i64 %786, i64* %784, align 8
  %787 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %782, i64 1
  %788 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %780, i64 1
  %789 = add i64 %783, -1
  %790 = icmp eq i64 %789, 0
  br i1 %790, label %791, label %779, !llvm.loop !39

791:                                              ; preds = %779, %767
  %792 = phi %"class.v8::internal::compiler::Node"** [ undef, %767 ], [ %788, %779 ]
  %793 = phi %"class.v8::internal::compiler::Node"** [ %768, %767 ], [ %788, %779 ]
  %794 = phi %"class.v8::internal::compiler::Node"** [ %769, %767 ], [ %788, %779 ]
  %795 = phi %"class.v8::internal::compiler::Node"** [ %770, %767 ], [ %787, %779 ]
  %796 = icmp ult i64 %774, 56
  br i1 %796, label %842, label %797

797:                                              ; preds = %791, %797
  %798 = phi %"class.v8::internal::compiler::Node"** [ %840, %797 ], [ %793, %791 ]
  %799 = phi %"class.v8::internal::compiler::Node"** [ %840, %797 ], [ %794, %791 ]
  %800 = phi %"class.v8::internal::compiler::Node"** [ %839, %797 ], [ %795, %791 ]
  %801 = bitcast %"class.v8::internal::compiler::Node"** %799 to i64*
  %802 = bitcast %"class.v8::internal::compiler::Node"** %800 to i64*
  %803 = load i64, i64* %802, align 8
  store i64 %803, i64* %801, align 8
  %804 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 1
  %805 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 1
  %806 = bitcast %"class.v8::internal::compiler::Node"** %805 to i64*
  %807 = bitcast %"class.v8::internal::compiler::Node"** %804 to i64*
  %808 = load i64, i64* %807, align 8
  store i64 %808, i64* %806, align 8
  %809 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 2
  %810 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 2
  %811 = bitcast %"class.v8::internal::compiler::Node"** %810 to i64*
  %812 = bitcast %"class.v8::internal::compiler::Node"** %809 to i64*
  %813 = load i64, i64* %812, align 8
  store i64 %813, i64* %811, align 8
  %814 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 3
  %815 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 3
  %816 = bitcast %"class.v8::internal::compiler::Node"** %815 to i64*
  %817 = bitcast %"class.v8::internal::compiler::Node"** %814 to i64*
  %818 = load i64, i64* %817, align 8
  store i64 %818, i64* %816, align 8
  %819 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 4
  %820 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 4
  %821 = bitcast %"class.v8::internal::compiler::Node"** %820 to i64*
  %822 = bitcast %"class.v8::internal::compiler::Node"** %819 to i64*
  %823 = load i64, i64* %822, align 8
  store i64 %823, i64* %821, align 8
  %824 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 5
  %825 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 5
  %826 = bitcast %"class.v8::internal::compiler::Node"** %825 to i64*
  %827 = bitcast %"class.v8::internal::compiler::Node"** %824 to i64*
  %828 = load i64, i64* %827, align 8
  store i64 %828, i64* %826, align 8
  %829 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 6
  %830 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 6
  %831 = bitcast %"class.v8::internal::compiler::Node"** %830 to i64*
  %832 = bitcast %"class.v8::internal::compiler::Node"** %829 to i64*
  %833 = load i64, i64* %832, align 8
  store i64 %833, i64* %831, align 8
  %834 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 7
  %835 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 7
  %836 = bitcast %"class.v8::internal::compiler::Node"** %835 to i64*
  %837 = bitcast %"class.v8::internal::compiler::Node"** %834 to i64*
  %838 = load i64, i64* %837, align 8
  store i64 %838, i64* %836, align 8
  %839 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 8
  %840 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 8
  %841 = icmp eq %"class.v8::internal::compiler::Node"** %839, %660
  br i1 %841, label %842, label %797, !llvm.loop !40

842:                                              ; preds = %791, %797, %765, %662
  %843 = phi %"class.v8::internal::compiler::Node"** [ %409, %662 ], [ %687, %765 ], [ %792, %791 ], [ %840, %797 ]
  %844 = phi i64 [ %663, %662 ], [ %658, %765 ], [ %658, %797 ], [ %658, %791 ]
  %845 = ptrtoint %"class.v8::internal::compiler::Node"** %843 to i64
  store i64 %844, i64* %360, align 8
  store i64 %845, i64* %23, align 8
  store i64 %408, i64* %15, align 8
  ret %"class.v8::internal::compiler::Node"** %405

846:                                              ; preds = %208, %353, %357, %4
  ret %"class.v8::internal::compiler::Node"** %1
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !9}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !9}
!20 = distinct !{!20, !11}
!21 = distinct !{!21, !9}
!22 = !{!"branch_weights", i32 1, i32 2000}
!23 = distinct !{!23, !11}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !9}
!30 = distinct !{!30, !11}
!31 = distinct !{!31, !9}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !9}
!38 = distinct !{!38, !11}
!39 = distinct !{!39, !11}
!40 = distinct !{!40, !9}
