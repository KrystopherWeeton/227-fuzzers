; ModuleID = '../../third_party/pdfium/core/fxcrt/css/cfx_cssstyleselector.cpp'
source_filename = "../../third_party/pdfium/core/fxcrt/css/cfx_cssstyleselector.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_CSSStyleSelector = type { float, %"class.std::__1::unique_ptr", %class.CFX_CSSRuleCollection }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFX_CSSStyleSheet* }
%class.CFX_CSSStyleSheet = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::unique_ptr.0" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::unique_ptr.0"* }
%class.CFX_CSSRuleCollection = type <{ %"class.std::__1::map", i32, [4 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i64 }
%"class.fxcrt::RetainPtr.43" = type { %"class.std::__1::unique_ptr.44" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %class.CFX_CSSComputedStyle* }
%class.CFX_CSSComputedStyle = type { %"class.fxcrt::Retainable", %"class.CFX_CSSComputedStyle::InheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.std::__1::vector.30" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.CFX_CSSComputedStyle::InheritedData" = type <{ %class.CFX_CSSLength, %class.CFX_CSSLength, %class.CFX_CSSLength, %"class.fxcrt::RetainPtr", float, float, i32, i16, i8, i8, i8, [7 x i8] }>
%class.CFX_CSSLength = type { i8, float }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.13" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %class.CFX_CSSValueList* }
%class.CFX_CSSValueList = type { %class.CFX_CSSValue.base, %"class.std::__1::vector.16" }
%class.CFX_CSSValue.base = type <{ %"class.fxcrt::Retainable", i8 }>
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"class.fxcrt::RetainPtr.18"*, %"class.fxcrt::RetainPtr.18"*, %"class.std::__1::__compressed_pair.23" }
%"class.fxcrt::RetainPtr.18" = type { %"class.std::__1::unique_ptr.19" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.CFX_CSSValue* }
%class.CFX_CSSValue = type <{ %"class.fxcrt::Retainable", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.fxcrt::RetainPtr.18"* }
%"class.CFX_CSSComputedStyle::NonInheritedData" = type <{ %class.CFX_CSSRect, %class.CFX_CSSRect, %class.CFX_CSSRect, %class.CFX_CSSLength, %class.CFX_CSSLength, %class.CFX_CSSLength, %class.CFX_CSSLength, float, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%class.CFX_CSSRect = type { %class.CFX_CSSLength, %class.CFX_CSSLength, %class.CFX_CSSLength, %class.CFX_CSSLength }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty*, %"class.std::__1::__compressed_pair.38" }
%class.CFX_CSSCustomProperty = type { %"class.fxcrt::WideString", %"class.fxcrt::WideString" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.32" }
%"class.fxcrt::RetainPtr.32" = type { %"class.std::__1::unique_ptr.33" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %class.CFX_CSSCustomProperty* }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %class.CFX_CSSDeclaration**, %class.CFX_CSSDeclaration**, %"class.std::__1::__compressed_pair.67" }
%class.CFX_CSSDeclaration = type { %"class.std::__1::vector.51", %"class.std::__1::vector.59" }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { %"class.std::__1::unique_ptr.53"*, %"class.std::__1::unique_ptr.53"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %class.CFX_CSSPropertyHolder* }
%class.CFX_CSSPropertyHolder = type { i8, i8, %"class.fxcrt::RetainPtr.18" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.53"* }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"class.std::__1::unique_ptr.61"*, %"class.std::__1::unique_ptr.61"*, %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.std::__1::unique_ptr.61"* }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %class.CFX_CSSDeclaration** }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i32* }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"class.std::__1::unique_ptr.74"*, %"class.std::__1::unique_ptr.74"*, %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.CFX_CSSRuleCollection::Data"* }
%"class.CFX_CSSRuleCollection::Data" = type { %class.CFX_CSSSelector*, %class.CFX_CSSDeclaration* }
%class.CFX_CSSSelector = type { i8, i32, %"class.std::__1::unique_ptr.77" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %class.CFX_CSSSelector* }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.std::__1::unique_ptr.74"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.CFX_CSSData::Property" = type { i8, i32, i32 }
%class.CFX_CSSSyntaxParser = type { i8, i8, %class.CFX_CSSOutputTextBuf, %class.CFX_CSSInputTextBuf, %"class.std::__1::stack" }
%class.CFX_CSSOutputTextBuf = type { %"class.std::__1::vector.128" }
%"class.std::__1::vector.128" = type { %"class.std::__1::__vector_base.129" }
%"class.std::__1::__vector_base.129" = type { i32*, i32*, %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { i32* }
%class.CFX_CSSInputTextBuf = type { %"class.fxcrt::StringViewTemplate", i64 }
%"class.std::__1::stack" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.138" }
%"struct.std::__1::__split_buffer" = type { i8**, i8**, i8**, %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { i8** }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { %class.CFX_CSSPropertyHolder**, %class.CFX_CSSPropertyHolder**, %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %class.CFX_CSSPropertyHolder** }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %class.CFX_CSSCustomProperty**, %class.CFX_CSSCustomProperty**, %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %class.CFX_CSSCustomProperty** }
%class.CFX_CSSNumberValue = type { %class.CFX_CSSValue.base, i32, float, [4 x i8] }
%class.CFX_CSSEnumValue = type { %class.CFX_CSSValue.base, i8, [6 x i8] }

@.str = private unnamed_addr constant [1 x i32] zeroinitializer, align 4

@_ZN20CFX_CSSStyleSelectorC1Ev = hidden unnamed_addr alias void (%class.CFX_CSSStyleSelector*), void (%class.CFX_CSSStyleSelector*)* @_ZN20CFX_CSSStyleSelectorC2Ev
@_ZN20CFX_CSSStyleSelectorD1Ev = hidden unnamed_addr alias void (%class.CFX_CSSStyleSelector*), void (%class.CFX_CSSStyleSelector*)* @_ZN20CFX_CSSStyleSelectorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CFX_CSSStyleSelectorC2Ev(%class.CFX_CSSStyleSelector*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSStyleSelector, %class.CFX_CSSStyleSelector* %0, i64 0, i32 0
  store float 1.200000e+01, float* %2, align 8
  %3 = getelementptr inbounds %class.CFX_CSSStyleSelector, %class.CFX_CSSStyleSelector* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %class.CFX_CSSStyleSelector, %class.CFX_CSSStyleSelector* %0, i64 0, i32 2
  tail call void @_ZN21CFX_CSSRuleCollectionC1Ev(%class.CFX_CSSRuleCollection* %5) #11
  ret void
}

declare void @_ZN21CFX_CSSRuleCollectionC1Ev(%class.CFX_CSSRuleCollection*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CFX_CSSStyleSelectorD2Ev(%class.CFX_CSSStyleSelector*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSStyleSelector, %class.CFX_CSSStyleSelector* %0, i64 0, i32 2
  tail call void @_ZN21CFX_CSSRuleCollectionD1Ev(%class.CFX_CSSRuleCollection* %2) #11
  %3 = getelementptr inbounds %class.CFX_CSSStyleSelector, %class.CFX_CSSStyleSelector* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.CFX_CSSStyleSheet*, %class.CFX_CSSStyleSheet** %3, align 8
  store %class.CFX_CSSStyleSheet* null, %class.CFX_CSSStyleSheet** %3, align 8
  %5 = icmp eq %class.CFX_CSSStyleSheet* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN17CFX_CSSStyleSheetD1Ev(%class.CFX_CSSStyleSheet* nonnull %4) #11
  %7 = bitcast %class.CFX_CSSStyleSheet* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN21CFX_CSSRuleCollectionD1Ev(%class.CFX_CSSRuleCollection*) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN20CFX_CSSStyleSelector18SetDefaultFontSizeEf(%class.CFX_CSSStyleSelector* nocapture, float) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.CFX_CSSStyleSelector, %class.CFX_CSSStyleSelector* %0, i64 0, i32 0
  store float %1, float* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CFX_CSSStyleSelector19CreateComputedStyleEPK20CFX_CSSComputedStyle(%"class.fxcrt::RetainPtr.43"* noalias nocapture sret, %class.CFX_CSSStyleSelector* nocapture readnone, %class.CFX_CSSComputedStyle* readonly) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 240) #12, !noalias !2
  %5 = bitcast i8* %4 to %class.CFX_CSSComputedStyle*
  tail call void @_ZN20CFX_CSSComputedStyleC1Ev(%class.CFX_CSSComputedStyle* nonnull %5) #11, !noalias !2
  %6 = ptrtoint i8* %4 to i64
  %7 = bitcast %"class.fxcrt::RetainPtr.43"* %0 to i64*
  store i64 %6, i64* %7, align 8, !alias.scope !2
  %8 = getelementptr inbounds i8, i8* %4, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8, !noalias !2
  %11 = add nsw i64 %10, 1
  store i64 %11, i64* %9, align 8, !noalias !2
  %12 = icmp eq %class.CFX_CSSComputedStyle* %2, null
  br i1 %12, label %47, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds i8, i8* %4, i64 16
  %15 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %2, i64 0, i32 1, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #11
  %16 = getelementptr inbounds i8, i8* %4, i64 40
  %17 = bitcast i8* %16 to %class.CFX_CSSValueList**
  %18 = load %class.CFX_CSSValueList*, %class.CFX_CSSValueList** %17, align 8
  %19 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %2, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0
  %20 = load %class.CFX_CSSValueList*, %class.CFX_CSSValueList** %19, align 8
  %21 = icmp eq %class.CFX_CSSValueList* %18, %20
  br i1 %21, label %43, label %22

22:                                               ; preds = %13
  %23 = icmp eq %class.CFX_CSSValueList* %20, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %class.CFX_CSSValueList, %class.CFX_CSSValueList* %20, i64 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = add nsw i64 %26, 1
  store i64 %27, i64* %25, align 8
  %28 = load %class.CFX_CSSValueList*, %class.CFX_CSSValueList** %17, align 8
  br label %29

29:                                               ; preds = %24, %22
  %30 = phi %class.CFX_CSSValueList* [ %28, %24 ], [ %18, %22 ]
  store %class.CFX_CSSValueList* %20, %class.CFX_CSSValueList** %17, align 8
  %31 = icmp eq %class.CFX_CSSValueList* %30, null
  br i1 %31, label %43, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %class.CFX_CSSValueList, %class.CFX_CSSValueList* %30, i64 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = add nsw i64 %34, -1
  store i64 %35, i64* %33, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %32
  %38 = getelementptr inbounds %class.CFX_CSSValueList, %class.CFX_CSSValueList* %30, i64 0, i32 0, i32 0
  %39 = bitcast %class.CFX_CSSValueList* %30 to void (%"class.fxcrt::Retainable"*)***
  %40 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %40, i64 1
  %42 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %41, align 8
  tail call void %42(%"class.fxcrt::Retainable"* nonnull %38) #11
  br label %43

43:                                               ; preds = %13, %29, %32, %37
  %44 = getelementptr inbounds i8, i8* %4, i64 48
  %45 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %2, i64 0, i32 1, i32 4
  %46 = bitcast float* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %46, i64 17, i1 false) #11
  br label %47

47:                                               ; preds = %43, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CFX_CSSStyleSelector15SetUAStyleSheetENSt3__110unique_ptrI17CFX_CSSStyleSheetNS0_14default_deleteIS2_EEEE(%class.CFX_CSSStyleSelector* nocapture, %class.CFX_CSSStyleSheet*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %class.CFX_CSSStyleSheet* %1 to i64
  %4 = getelementptr inbounds %class.CFX_CSSStyleSelector, %class.CFX_CSSStyleSelector* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.CFX_CSSStyleSheet*, %class.CFX_CSSStyleSheet** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %class.CFX_CSSStyleSheet* %6, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  tail call void @_ZN17CFX_CSSStyleSheetD1Ev(%class.CFX_CSSStyleSheet* nonnull %6) #11
  %10 = bitcast %class.CFX_CSSStyleSheet* %6 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CFX_CSSStyleSelector16UpdateStyleIndexEv(%class.CFX_CSSStyleSelector*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSStyleSelector, %class.CFX_CSSStyleSelector* %0, i64 0, i32 2
  tail call void @_ZN21CFX_CSSRuleCollection5ClearEv(%class.CFX_CSSRuleCollection* %2) #11
  %3 = getelementptr inbounds %class.CFX_CSSStyleSelector, %class.CFX_CSSStyleSelector* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.CFX_CSSStyleSheet*, %class.CFX_CSSStyleSheet** %3, align 8
  tail call void @_ZN21CFX_CSSRuleCollection12AddRulesFromEPK17CFX_CSSStyleSheet(%class.CFX_CSSRuleCollection* %2, %class.CFX_CSSStyleSheet* %4) #11
  ret void
}

declare void @_ZN21CFX_CSSRuleCollection5ClearEv(%class.CFX_CSSRuleCollection*) local_unnamed_addr #1

declare void @_ZN21CFX_CSSRuleCollection12AddRulesFromEPK17CFX_CSSStyleSheet(%class.CFX_CSSRuleCollection*, %class.CFX_CSSStyleSheet*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CFX_CSSStyleSelector17MatchDeclarationsERKN5fxcrt10WideStringE(%"class.std::__1::vector.49"* noalias sret, %class.CFX_CSSStyleSelector*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.std::__1::vector.49"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #11
  %8 = getelementptr inbounds %class.CFX_CSSStyleSelector, %class.CFX_CSSStyleSelector* %1, i64 0, i32 2
  %9 = getelementptr inbounds %class.CFX_CSSStyleSelector, %class.CFX_CSSStyleSelector* %1, i64 0, i32 2, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %127, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %13, align 8
  %15 = icmp eq %"class.fxcrt::StringDataTemplate"* %14, null
  br i1 %15, label %127, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %14, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %127, label %20

20:                                               ; preds = %16
  %21 = tail call %"class.std::__1::vector.72"* @_ZNK21CFX_CSSRuleCollection14GetTagRuleDataERKN5fxcrt10WideStringE(%class.CFX_CSSRuleCollection* %8, %"class.fxcrt::WideString"* dereferenceable(8) %2) #11
  %22 = icmp eq %"class.std::__1::vector.72"* %21, null
  br i1 %22, label %127, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %21, i64 0, i32 0, i32 0
  %25 = load %"class.std::__1::unique_ptr.74"*, %"class.std::__1::unique_ptr.74"** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %21, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::unique_ptr.74"*, %"class.std::__1::unique_ptr.74"** %26, align 8
  %28 = icmp eq %"class.std::__1::unique_ptr.74"* %25, %27
  br i1 %28, label %127, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.fxcrt::StringViewTemplate"* %4 to i8*
  %31 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 1
  %33 = bitcast %class.CFX_CSSDeclaration*** %5 to i64*
  %34 = bitcast %"class.std::__1::vector.49"* %0 to i64*
  %35 = bitcast %class.CFX_CSSDeclaration*** %6 to i64*
  br label %36

36:                                               ; preds = %29, %124
  %37 = phi %"class.std::__1::unique_ptr.74"* [ %25, %29 ], [ %125, %124 ]
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.74"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.CFX_CSSRuleCollection::Data"*, %"class.CFX_CSSRuleCollection::Data"** %38, align 8
  %40 = getelementptr inbounds %"class.CFX_CSSRuleCollection::Data", %"class.CFX_CSSRuleCollection::Data"* %39, i64 0, i32 0
  %41 = load %class.CFX_CSSSelector*, %class.CFX_CSSSelector** %40, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30)
  %42 = icmp eq %class.CFX_CSSSelector* %41, null
  br i1 %42, label %62, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %class.CFX_CSSSelector, %class.CFX_CSSSelector* %41, i64 0, i32 2, i32 0, i32 0, i32 0
  %45 = load %class.CFX_CSSSelector*, %class.CFX_CSSSelector** %44, align 8
  %46 = icmp eq %class.CFX_CSSSelector* %45, null
  br i1 %46, label %47, label %62

47:                                               ; preds = %43
  %48 = getelementptr inbounds %class.CFX_CSSSelector, %class.CFX_CSSSelector* %41, i64 0, i32 0
  %49 = load i8, i8* %48, align 8, !range !5
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %62

51:                                               ; preds = %47
  %52 = getelementptr inbounds %class.CFX_CSSSelector, %class.CFX_CSSSelector* %41, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %13, align 8, !noalias !6
  %55 = icmp eq %"class.fxcrt::StringDataTemplate"* %54, null
  %56 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %54, i64 0, i32 3
  %57 = select i1 %55, [1 x i32]* @.str, [1 x i32]* %56
  %58 = getelementptr inbounds [1 x i32], [1 x i32]* %57, i64 0, i64 0
  br i1 %55, label %63, label %59

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %54, i64 0, i32 1
  %61 = load i64, i64* %60, align 8, !noalias !6
  br label %63

62:                                               ; preds = %43, %36, %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30)
  br label %124

63:                                               ; preds = %51, %59
  %64 = phi i64 [ %61, %59 ], [ 0, %51 ]
  store i32* %58, i32** %31, align 8, !alias.scope !6
  store i64 %64, i64* %32, align 8, !alias.scope !6
  %65 = call i32 @_Z16FX_HashCode_GetWN5fxcrt18StringViewTemplateIwEEb(%"class.fxcrt::StringViewTemplate"* nonnull %4, i1 zeroext true) #11
  %66 = icmp eq i32 %53, %65
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30)
  br i1 %66, label %67, label %124

67:                                               ; preds = %63
  %68 = load %"class.CFX_CSSRuleCollection::Data"*, %"class.CFX_CSSRuleCollection::Data"** %38, align 8
  %69 = getelementptr inbounds %"class.CFX_CSSRuleCollection::Data", %"class.CFX_CSSRuleCollection::Data"* %68, i64 0, i32 1
  %70 = bitcast %class.CFX_CSSDeclaration** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = load %class.CFX_CSSDeclaration**, %class.CFX_CSSDeclaration*** %5, align 8
  %73 = load %class.CFX_CSSDeclaration**, %class.CFX_CSSDeclaration*** %6, align 8
  %74 = icmp ult %class.CFX_CSSDeclaration** %72, %73
  %75 = ptrtoint %class.CFX_CSSDeclaration** %73 to i64
  br i1 %74, label %76, label %80

76:                                               ; preds = %67
  %77 = bitcast %class.CFX_CSSDeclaration** %72 to i64*
  store i64 %71, i64* %77, align 8
  %78 = getelementptr inbounds %class.CFX_CSSDeclaration*, %class.CFX_CSSDeclaration** %72, i64 1
  %79 = ptrtoint %class.CFX_CSSDeclaration** %78 to i64
  store i64 %79, i64* %33, align 8
  br label %124

80:                                               ; preds = %67
  %81 = ptrtoint %class.CFX_CSSDeclaration** %72 to i64
  %82 = load i64, i64* %34, align 8
  %83 = sub i64 %81, %82
  %84 = ashr exact i64 %83, 3
  %85 = add nsw i64 %84, 1
  %86 = icmp ugt i64 %85, 2305843009213693951
  br i1 %86, label %87, label %89

87:                                               ; preds = %80
  %88 = bitcast %"class.std::__1::vector.49"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %88) #13
  unreachable

89:                                               ; preds = %80
  %90 = sub i64 %75, %82
  %91 = ashr exact i64 %90, 3
  %92 = icmp ult i64 %91, 1152921504606846975
  br i1 %92, label %93, label %101

93:                                               ; preds = %89
  %94 = ashr exact i64 %90, 2
  %95 = icmp ult i64 %94, %85
  %96 = select i1 %95, i64 %85, i64 %94
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %106, label %98

98:                                               ; preds = %93
  %99 = icmp ugt i64 %96, 2305843009213693951
  br i1 %99, label %100, label %101

100:                                              ; preds = %98
  call void @abort() #13
  unreachable

101:                                              ; preds = %98, %89
  %102 = phi i64 [ %96, %98 ], [ 2305843009213693951, %89 ]
  %103 = shl i64 %102, 3
  %104 = call i8* @_Znwm(i64 %103) #12
  %105 = bitcast i8* %104 to %class.CFX_CSSDeclaration**
  br label %106

106:                                              ; preds = %101, %93
  %107 = phi i64 [ %102, %101 ], [ 0, %93 ]
  %108 = phi i8* [ %104, %101 ], [ null, %93 ]
  %109 = phi %class.CFX_CSSDeclaration** [ %105, %101 ], [ null, %93 ]
  %110 = getelementptr inbounds %class.CFX_CSSDeclaration*, %class.CFX_CSSDeclaration** %109, i64 %84
  %111 = getelementptr inbounds %class.CFX_CSSDeclaration*, %class.CFX_CSSDeclaration** %109, i64 %107
  %112 = ptrtoint %class.CFX_CSSDeclaration** %111 to i64
  %113 = bitcast %class.CFX_CSSDeclaration** %110 to i64*
  store i64 %71, i64* %113, align 8
  %114 = getelementptr inbounds %class.CFX_CSSDeclaration*, %class.CFX_CSSDeclaration** %110, i64 1
  %115 = ptrtoint %class.CFX_CSSDeclaration** %114 to i64
  %116 = ptrtoint %class.CFX_CSSDeclaration** %109 to i64
  %117 = icmp sgt i64 %83, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %106
  %119 = inttoptr i64 %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %119, i64 %83, i1 false) #11
  br label %120

120:                                              ; preds = %118, %106
  store i64 %116, i64* %34, align 8
  store i64 %115, i64* %33, align 8
  store i64 %112, i64* %35, align 8
  %121 = icmp eq i64 %82, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = inttoptr i64 %82 to i8*
  call void @_ZdlPv(i8* %123) #12
  br label %124

124:                                              ; preds = %122, %120, %76, %62, %63
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.74"* %37, i64 1
  %126 = icmp eq %"class.std::__1::unique_ptr.74"* %125, %27
  br i1 %126, label %127, label %36

127:                                              ; preds = %124, %23, %12, %16, %3, %20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.std::__1::vector.72"* @_ZNK21CFX_CSSRuleCollection14GetTagRuleDataERKN5fxcrt10WideStringE(%class.CFX_CSSRuleCollection*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20CFX_CSSStyleSelector13MatchSelectorERKN5fxcrt10WideStringEP15CFX_CSSSelector(%class.CFX_CSSStyleSelector* nocapture readnone, %"class.fxcrt::WideString"* nocapture readonly dereferenceable(8), %class.CFX_CSSSelector* readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = icmp eq %class.CFX_CSSSelector* %2, null
  br i1 %5, label %32, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.CFX_CSSSelector, %class.CFX_CSSSelector* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %class.CFX_CSSSelector*, %class.CFX_CSSSelector** %7, align 8
  %9 = icmp eq %class.CFX_CSSSelector* %8, null
  br i1 %9, label %10, label %32

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.CFX_CSSSelector, %class.CFX_CSSSelector* %2, i64 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %32

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.CFX_CSSSelector, %class.CFX_CSSSelector* %2, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %17, align 8, !noalias !9
  %19 = icmp eq %"class.fxcrt::StringDataTemplate"* %18, null
  %20 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %18, i64 0, i32 3
  %21 = select i1 %19, [1 x i32]* @.str, [1 x i32]* %20
  %22 = getelementptr inbounds [1 x i32], [1 x i32]* %21, i64 0, i64 0
  br i1 %19, label %26, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %18, i64 0, i32 1
  %25 = load i64, i64* %24, align 8, !noalias !9
  br label %26

26:                                               ; preds = %14, %23
  %27 = phi i64 [ %25, %23 ], [ 0, %14 ]
  %28 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %22, i32** %28, align 8, !alias.scope !9
  %29 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 1
  store i64 %27, i64* %29, align 8, !alias.scope !9
  %30 = call i32 @_Z16FX_HashCode_GetWN5fxcrt18StringViewTemplateIwEEb(%"class.fxcrt::StringViewTemplate"* nonnull %4, i1 zeroext true) #11
  %31 = icmp eq i32 %16, %30
  br label %32

32:                                               ; preds = %10, %3, %6, %26
  %33 = phi i1 [ %31, %26 ], [ false, %6 ], [ false, %3 ], [ false, %10 ]
  ret i1 %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare i32 @_Z16FX_HashCode_GetWN5fxcrt18StringViewTemplateIwEEb(%"class.fxcrt::StringViewTemplate"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CFX_CSSStyleSelector12ComputeStyleERKNSt3__16vectorIPK18CFX_CSSDeclarationNS0_9allocatorIS4_EEEERKN5fxcrt10WideStringESD_P20CFX_CSSComputedStyle(%class.CFX_CSSStyleSelector* nocapture readonly, %"class.std::__1::vector.49"* nocapture readonly dereferenceable(24), %"class.fxcrt::WideString"* nocapture readonly dereferenceable(8), %"class.fxcrt::WideString"* nocapture readonly dereferenceable(8), %class.CFX_CSSComputedStyle*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %7 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %7, align 8
  %9 = icmp eq %"class.fxcrt::StringDataTemplate"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %8, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %22

14:                                               ; preds = %5, %10
  %15 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %15, align 8
  %17 = icmp eq %"class.fxcrt::StringDataTemplate"* %16, null
  br i1 %17, label %54, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %16, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %54, label %22

22:                                               ; preds = %18, %10
  %23 = tail call i8* @_Znwm(i64 48) #12
  %24 = bitcast i8* %23 to %class.CFX_CSSDeclaration*
  tail call void @_ZN18CFX_CSSDeclarationC1Ev(%class.CFX_CSSDeclaration* nonnull %24) #11
  %25 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %7, align 8
  %26 = icmp eq %"class.fxcrt::StringDataTemplate"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %25, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  tail call void @_ZN20CFX_CSSStyleSelector17AppendInlineStyleEP18CFX_CSSDeclarationRKN5fxcrt10WideStringE(%class.CFX_CSSStyleSelector* undef, %class.CFX_CSSDeclaration* nonnull %24, %"class.fxcrt::WideString"* dereferenceable(8) %2)
  br label %32

32:                                               ; preds = %22, %31, %27
  %33 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %33, align 8
  %35 = icmp eq %"class.fxcrt::StringDataTemplate"* %34, null
  br i1 %35, label %55, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %34, i64 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %55, label %40

40:                                               ; preds = %36
  %41 = tail call %"struct.CFX_CSSData::Property"* @_ZN11CFX_CSSData17GetPropertyByEnumE15CFX_CSSProperty(i8 zeroext 16) #11
  %42 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %33, align 8, !noalias !12
  %43 = icmp eq %"class.fxcrt::StringDataTemplate"* %42, null
  %44 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %42, i64 0, i32 3
  %45 = select i1 %43, [1 x i32]* @.str, [1 x i32]* %44
  %46 = getelementptr inbounds [1 x i32], [1 x i32]* %45, i64 0, i64 0
  br i1 %43, label %50, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %42, i64 0, i32 1
  %49 = load i64, i64* %48, align 8, !noalias !12
  br label %50

50:                                               ; preds = %40, %47
  %51 = phi i64 [ %49, %47 ], [ 0, %40 ]
  %52 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %46, i32** %52, align 8, !alias.scope !12
  %53 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 1
  store i64 %51, i64* %53, align 8, !alias.scope !12
  call void @_ZN18CFX_CSSDeclaration11AddPropertyEPKN11CFX_CSSData8PropertyEN5fxcrt18StringViewTemplateIwEE(%class.CFX_CSSDeclaration* nonnull %24, %"struct.CFX_CSSData::Property"* %41, %"class.fxcrt::StringViewTemplate"* nonnull %6) #11
  br label %55

54:                                               ; preds = %18, %14
  tail call void @_ZN20CFX_CSSStyleSelector17ApplyDeclarationsERKNSt3__16vectorIPK18CFX_CSSDeclarationNS0_9allocatorIS4_EEEES4_P20CFX_CSSComputedStyle(%class.CFX_CSSStyleSelector* %0, %"class.std::__1::vector.49"* dereferenceable(24) %1, %class.CFX_CSSDeclaration* null, %class.CFX_CSSComputedStyle* %4)
  br label %56

55:                                               ; preds = %32, %36, %50
  call void @_ZN20CFX_CSSStyleSelector17ApplyDeclarationsERKNSt3__16vectorIPK18CFX_CSSDeclarationNS0_9allocatorIS4_EEEES4_P20CFX_CSSComputedStyle(%class.CFX_CSSStyleSelector* %0, %"class.std::__1::vector.49"* dereferenceable(24) %1, %class.CFX_CSSDeclaration* nonnull %24, %class.CFX_CSSComputedStyle* %4)
  call void @_ZN18CFX_CSSDeclarationD1Ev(%class.CFX_CSSDeclaration* nonnull %24) #11
  call void @_ZdlPv(i8* nonnull %23) #12
  br label %56

56:                                               ; preds = %54, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CFX_CSSStyleSelector17AppendInlineStyleEP18CFX_CSSDeclarationRKN5fxcrt10WideStringE(%class.CFX_CSSStyleSelector* nocapture readnone, %class.CFX_CSSDeclaration*, %"class.fxcrt::WideString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %7 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %8 = alloca %"class.fxcrt::WideString", align 8
  %9 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %10 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %11 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %12 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %12, align 8, !noalias !15
  %14 = icmp eq %"class.fxcrt::StringDataTemplate"* %13, null
  %15 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %13, i64 0, i32 3
  %16 = select i1 %14, [1 x i32]* @.str, [1 x i32]* %15
  %17 = getelementptr inbounds [1 x i32], [1 x i32]* %16, i64 0, i64 0
  br i1 %14, label %21, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %13, i64 0, i32 1
  %20 = load i64, i64* %19, align 8, !noalias !15
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i64 [ %20, %18 ], [ 0, %3 ]
  %23 = bitcast %"class.fxcrt::StringViewTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23)
  %24 = tail call i8* @_Znwm(i64 104) #12
  %25 = bitcast i8* %24 to %class.CFX_CSSSyntaxParser*
  %26 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %17, i32** %26, align 8
  %27 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 1
  store i64 %22, i64* %27, align 8
  call void @_ZN19CFX_CSSSyntaxParserC1EN5fxcrt18StringViewTemplateIwEE(%class.CFX_CSSSyntaxParser* nonnull %25, %"class.fxcrt::StringViewTemplate"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23)
  call void @_ZN19CFX_CSSSyntaxParser24SetParseOnlyDeclarationsEv(%class.CFX_CSSSyntaxParser* nonnull %25) #11
  %28 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  %29 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %29, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %5) #11
  %30 = bitcast %"class.fxcrt::StringViewTemplate"* %10 to i8*
  %31 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %10, i64 0, i32 0, i32 1
  %32 = bitcast %"class.fxcrt::StringViewTemplate"* %11 to i8*
  %33 = bitcast %"class.fxcrt::StringViewTemplate"* %6 to i8*
  %34 = bitcast %"class.fxcrt::StringViewTemplate"* %7 to i8*
  %35 = bitcast %"class.fxcrt::WideString"* %8 to i8*
  %36 = bitcast %"class.fxcrt::StringViewTemplate"* %9 to i8*
  %37 = bitcast %"class.fxcrt::StringViewTemplate"* %10 to i8*
  %38 = bitcast %"class.fxcrt::StringViewTemplate"* %6 to i8*
  br label %39

39:                                               ; preds = %56, %21
  %40 = phi %"struct.CFX_CSSData::Property"* [ null, %21 ], [ %57, %56 ]
  %41 = call zeroext i8 @_ZN19CFX_CSSSyntaxParser13DoSyntaxParseEv(%class.CFX_CSSSyntaxParser* nonnull %25) #11
  switch i8 %41, label %58 [
    i8 7, label %42
    i8 8, label %47
  ]

42:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 16, i1 false)
  call void @_ZNK19CFX_CSSSyntaxParser16GetCurrentStringEv(%"class.fxcrt::StringViewTemplate"* nonnull sret %6, %class.CFX_CSSSyntaxParser* nonnull %25) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %33, i64 16, i1 false)
  %43 = call %"struct.CFX_CSSData::Property"* @_ZN11CFX_CSSData17GetPropertyByNameEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nonnull %7) #11
  %44 = icmp eq %"struct.CFX_CSSData::Property"* %43, null
  br i1 %44, label %45, label %53

45:                                               ; preds = %42
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* nonnull align 8 %33, i64 16, i1 false)
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"* nonnull %8, %"class.fxcrt::StringViewTemplate"* nonnull %9) #11
  %46 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* nonnull %5, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %8) #11
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  br label %53

47:                                               ; preds = %39
  %48 = icmp eq %"struct.CFX_CSSData::Property"* %40, null
  br i1 %48, label %56, label %49

49:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 16, i1 false)
  call void @_ZNK19CFX_CSSSyntaxParser16GetCurrentStringEv(%"class.fxcrt::StringViewTemplate"* nonnull sret %10, %class.CFX_CSSSyntaxParser* nonnull %25) #11
  %50 = load i64, i64* %31, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %49
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %30, i64 16, i1 false)
  call void @_ZN18CFX_CSSDeclaration11AddPropertyEPKN11CFX_CSSData8PropertyEN5fxcrt18StringViewTemplateIwEE(%class.CFX_CSSDeclaration* %1, %"struct.CFX_CSSData::Property"* nonnull %40, %"class.fxcrt::StringViewTemplate"* nonnull %11) #11
  br label %53

53:                                               ; preds = %49, %52, %45, %42
  %54 = phi i8* [ %33, %42 ], [ %33, %45 ], [ %30, %52 ], [ %30, %49 ]
  %55 = phi %"struct.CFX_CSSData::Property"* [ %43, %42 ], [ %43, %45 ], [ %40, %52 ], [ %40, %49 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #11
  br label %56

56:                                               ; preds = %53, %47
  %57 = phi %"struct.CFX_CSSData::Property"* [ null, %47 ], [ %55, %53 ]
  br label %39

58:                                               ; preds = %39
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN19CFX_CSSSyntaxParserD1Ev(%class.CFX_CSSSyntaxParser* nonnull %25) #11
  call void @_ZdlPv(i8* nonnull %24) #12
  ret void
}

declare void @_ZN18CFX_CSSDeclaration11AddPropertyEPKN11CFX_CSSData8PropertyEN5fxcrt18StringViewTemplateIwEE(%class.CFX_CSSDeclaration*, %"struct.CFX_CSSData::Property"*, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #1

declare %"struct.CFX_CSSData::Property"* @_ZN11CFX_CSSData17GetPropertyByEnumE15CFX_CSSProperty(i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CFX_CSSStyleSelector17ApplyDeclarationsERKNSt3__16vectorIPK18CFX_CSSDeclarationNS0_9allocatorIS4_EEEES4_P20CFX_CSSComputedStyle(%class.CFX_CSSStyleSelector* nocapture readonly, %"class.std::__1::vector.49"* nocapture readonly dereferenceable(24), %class.CFX_CSSDeclaration* readonly, %class.CFX_CSSComputedStyle*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.97", align 8
  %6 = alloca %"class.std::__1::vector.97", align 8
  %7 = alloca %"class.std::__1::vector.104", align 8
  %8 = bitcast %"class.std::__1::vector.97"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %5, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #11
  %11 = bitcast %"class.std::__1::vector.97"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %6, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #11
  %14 = bitcast %"class.std::__1::vector.104"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.std::__1::vector.104", %"class.std::__1::vector.104"* %7, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.104", %"class.std::__1::vector.104"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #11
  %17 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %1, i64 0, i32 0, i32 0
  %18 = load %class.CFX_CSSDeclaration**, %class.CFX_CSSDeclaration*** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %1, i64 0, i32 0, i32 1
  %20 = load %class.CFX_CSSDeclaration**, %class.CFX_CSSDeclaration*** %19, align 8
  %21 = icmp eq %class.CFX_CSSDeclaration** %18, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %24, %4
  %23 = icmp eq %class.CFX_CSSDeclaration* %2, null
  br i1 %23, label %30, label %29

24:                                               ; preds = %4, %24
  %25 = phi %class.CFX_CSSDeclaration** [ %27, %24 ], [ %18, %4 ]
  %26 = load %class.CFX_CSSDeclaration*, %class.CFX_CSSDeclaration** %25, align 8
  call void @_ZN20CFX_CSSStyleSelector13ExtractValuesEPK18CFX_CSSDeclarationPNSt3__16vectorIPK21CFX_CSSPropertyHolderNS3_9allocatorIS7_EEEESB_PNS4_IPK21CFX_CSSCustomPropertyNS8_ISE_EEEE(%class.CFX_CSSStyleSelector* undef, %class.CFX_CSSDeclaration* %26, %"class.std::__1::vector.97"* nonnull %5, %"class.std::__1::vector.97"* nonnull %6, %"class.std::__1::vector.104"* nonnull %7)
  %27 = getelementptr inbounds %class.CFX_CSSDeclaration*, %class.CFX_CSSDeclaration** %25, i64 1
  %28 = icmp eq %class.CFX_CSSDeclaration** %27, %20
  br i1 %28, label %22, label %24

29:                                               ; preds = %22
  call void @_ZN20CFX_CSSStyleSelector13ExtractValuesEPK18CFX_CSSDeclarationPNSt3__16vectorIPK21CFX_CSSPropertyHolderNS3_9allocatorIS7_EEEESB_PNS4_IPK21CFX_CSSCustomPropertyNS8_ISE_EEEE(%class.CFX_CSSStyleSelector* undef, %class.CFX_CSSDeclaration* nonnull %2, %"class.std::__1::vector.97"* nonnull %5, %"class.std::__1::vector.97"* nonnull %6, %"class.std::__1::vector.104"* nonnull %7)
  br label %30

30:                                               ; preds = %22, %29
  %31 = load %class.CFX_CSSPropertyHolder**, %class.CFX_CSSPropertyHolder*** %12, align 8
  %32 = load %class.CFX_CSSPropertyHolder**, %class.CFX_CSSPropertyHolder*** %13, align 8
  %33 = icmp eq %class.CFX_CSSPropertyHolder** %31, %32
  br i1 %33, label %34, label %38

34:                                               ; preds = %38, %30
  %35 = load %class.CFX_CSSCustomProperty**, %class.CFX_CSSCustomProperty*** %15, align 8
  %36 = load %class.CFX_CSSCustomProperty**, %class.CFX_CSSCustomProperty*** %16, align 8
  %37 = icmp eq %class.CFX_CSSCustomProperty** %35, %36
  br i1 %37, label %46, label %50

38:                                               ; preds = %30, %38
  %39 = phi %class.CFX_CSSPropertyHolder** [ %44, %38 ], [ %31, %30 ]
  %40 = load %class.CFX_CSSPropertyHolder*, %class.CFX_CSSPropertyHolder** %39, align 8
  %41 = getelementptr inbounds %class.CFX_CSSPropertyHolder, %class.CFX_CSSPropertyHolder* %40, i64 0, i32 0
  %42 = load i8, i8* %41, align 8
  %43 = getelementptr inbounds %class.CFX_CSSPropertyHolder, %class.CFX_CSSPropertyHolder* %40, i64 0, i32 2
  call void @_ZN20CFX_CSSStyleSelector13ApplyPropertyE15CFX_CSSPropertyRKN5fxcrt9RetainPtrI12CFX_CSSValueEEP20CFX_CSSComputedStyle(%class.CFX_CSSStyleSelector* %0, i8 zeroext %42, %"class.fxcrt::RetainPtr.18"* dereferenceable(8) %43, %class.CFX_CSSComputedStyle* %3)
  %44 = getelementptr inbounds %class.CFX_CSSPropertyHolder*, %class.CFX_CSSPropertyHolder** %39, i64 1
  %45 = icmp eq %class.CFX_CSSPropertyHolder** %44, %32
  br i1 %45, label %34, label %38

46:                                               ; preds = %50, %34
  %47 = load %class.CFX_CSSPropertyHolder**, %class.CFX_CSSPropertyHolder*** %9, align 8
  %48 = load %class.CFX_CSSPropertyHolder**, %class.CFX_CSSPropertyHolder*** %10, align 8
  %49 = icmp eq %class.CFX_CSSPropertyHolder** %47, %48
  br i1 %49, label %55, label %77

50:                                               ; preds = %34, %50
  %51 = phi %class.CFX_CSSCustomProperty** [ %53, %50 ], [ %35, %34 ]
  %52 = load %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty** %51, align 8
  call void @_ZN20CFX_CSSComputedStyle14AddCustomStyleERK21CFX_CSSCustomProperty(%class.CFX_CSSComputedStyle* %3, %class.CFX_CSSCustomProperty* dereferenceable(16) %52) #11
  %53 = getelementptr inbounds %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty** %51, i64 1
  %54 = icmp eq %class.CFX_CSSCustomProperty** %53, %36
  br i1 %54, label %46, label %50

55:                                               ; preds = %77, %46
  %56 = load %class.CFX_CSSCustomProperty**, %class.CFX_CSSCustomProperty*** %15, align 8
  %57 = icmp eq %class.CFX_CSSCustomProperty** %56, null
  br i1 %57, label %62, label %58

58:                                               ; preds = %55
  %59 = ptrtoint %class.CFX_CSSCustomProperty** %56 to i64
  %60 = bitcast %class.CFX_CSSCustomProperty*** %16 to i64*
  store i64 %59, i64* %60, align 8
  %61 = bitcast %class.CFX_CSSCustomProperty** %56 to i8*
  call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %55, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  %63 = load %class.CFX_CSSPropertyHolder**, %class.CFX_CSSPropertyHolder*** %12, align 8
  %64 = icmp eq %class.CFX_CSSPropertyHolder** %63, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %62
  %66 = ptrtoint %class.CFX_CSSPropertyHolder** %63 to i64
  %67 = bitcast %class.CFX_CSSPropertyHolder*** %13 to i64*
  store i64 %66, i64* %67, align 8
  %68 = bitcast %class.CFX_CSSPropertyHolder** %63 to i8*
  call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %62, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  %70 = load %class.CFX_CSSPropertyHolder**, %class.CFX_CSSPropertyHolder*** %9, align 8
  %71 = icmp eq %class.CFX_CSSPropertyHolder** %70, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %69
  %73 = ptrtoint %class.CFX_CSSPropertyHolder** %70 to i64
  %74 = bitcast %class.CFX_CSSPropertyHolder*** %10 to i64*
  store i64 %73, i64* %74, align 8
  %75 = bitcast %class.CFX_CSSPropertyHolder** %70 to i8*
  call void @_ZdlPv(i8* %75) #12
  br label %76

76:                                               ; preds = %69, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  ret void

77:                                               ; preds = %46, %77
  %78 = phi %class.CFX_CSSPropertyHolder** [ %83, %77 ], [ %47, %46 ]
  %79 = load %class.CFX_CSSPropertyHolder*, %class.CFX_CSSPropertyHolder** %78, align 8
  %80 = getelementptr inbounds %class.CFX_CSSPropertyHolder, %class.CFX_CSSPropertyHolder* %79, i64 0, i32 0
  %81 = load i8, i8* %80, align 8
  %82 = getelementptr inbounds %class.CFX_CSSPropertyHolder, %class.CFX_CSSPropertyHolder* %79, i64 0, i32 2
  call void @_ZN20CFX_CSSStyleSelector13ApplyPropertyE15CFX_CSSPropertyRKN5fxcrt9RetainPtrI12CFX_CSSValueEEP20CFX_CSSComputedStyle(%class.CFX_CSSStyleSelector* %0, i8 zeroext %81, %"class.fxcrt::RetainPtr.18"* dereferenceable(8) %82, %class.CFX_CSSComputedStyle* %3)
  %83 = getelementptr inbounds %class.CFX_CSSPropertyHolder*, %class.CFX_CSSPropertyHolder** %78, i64 1
  %84 = icmp eq %class.CFX_CSSPropertyHolder** %83, %48
  br i1 %84, label %55, label %77
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CFX_CSSStyleSelector13ExtractValuesEPK18CFX_CSSDeclarationPNSt3__16vectorIPK21CFX_CSSPropertyHolderNS3_9allocatorIS7_EEEESB_PNS4_IPK21CFX_CSSCustomPropertyNS8_ISE_EEEE(%class.CFX_CSSStyleSelector* nocapture readnone, %class.CFX_CSSDeclaration* nocapture readonly, %"class.std::__1::vector.97"*, %"class.std::__1::vector.97"*, %"class.std::__1::vector.104"*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.CFX_CSSDeclaration, %class.CFX_CSSDeclaration* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.53"*, %"class.std::__1::unique_ptr.53"** %6, align 8
  %8 = getelementptr inbounds %class.CFX_CSSDeclaration, %class.CFX_CSSDeclaration* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.53"*, %"class.std::__1::unique_ptr.53"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.53"* %7, %9
  br i1 %10, label %24, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %2, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %class.CFX_CSSPropertyHolder*** %12 to i64*
  %15 = bitcast %"class.std::__1::vector.97"* %2 to i64*
  %16 = bitcast %class.CFX_CSSPropertyHolder*** %13 to i64*
  %17 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %2, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %3, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %class.CFX_CSSPropertyHolder*** %18 to i64*
  %21 = bitcast %"class.std::__1::vector.97"* %3 to i64*
  %22 = bitcast %class.CFX_CSSPropertyHolder*** %19 to i64*
  %23 = getelementptr inbounds %"class.std::__1::vector.97", %"class.std::__1::vector.97"* %3, i64 0, i32 0, i32 0
  br label %37

24:                                               ; preds = %169, %5
  %25 = getelementptr inbounds %class.CFX_CSSDeclaration, %class.CFX_CSSDeclaration* %1, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.std::__1::unique_ptr.61"*, %"class.std::__1::unique_ptr.61"** %25, align 8
  %27 = getelementptr inbounds %class.CFX_CSSDeclaration, %class.CFX_CSSDeclaration* %1, i64 0, i32 1, i32 0, i32 1
  %28 = load %"class.std::__1::unique_ptr.61"*, %"class.std::__1::unique_ptr.61"** %27, align 8
  %29 = icmp eq %"class.std::__1::unique_ptr.61"* %26, %28
  br i1 %29, label %172, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::vector.104", %"class.std::__1::vector.104"* %4, i64 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.std::__1::vector.104", %"class.std::__1::vector.104"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %class.CFX_CSSCustomProperty*** %31 to i64*
  %34 = bitcast %"class.std::__1::vector.104"* %4 to i64*
  %35 = bitcast %class.CFX_CSSCustomProperty*** %32 to i64*
  %36 = getelementptr inbounds %"class.std::__1::vector.104", %"class.std::__1::vector.104"* %4, i64 0, i32 0, i32 0
  br label %173

37:                                               ; preds = %11, %169
  %38 = phi %"class.std::__1::unique_ptr.53"* [ %7, %11 ], [ %170, %169 ]
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %class.CFX_CSSPropertyHolder*, %class.CFX_CSSPropertyHolder** %39, align 8
  %41 = getelementptr inbounds %class.CFX_CSSPropertyHolder, %class.CFX_CSSPropertyHolder* %40, i64 0, i32 1
  %42 = load i8, i8* %41, align 1, !range !5
  %43 = icmp eq i8 %42, 0
  %44 = ptrtoint %class.CFX_CSSPropertyHolder* %40 to i64
  br i1 %43, label %107, label %45

45:                                               ; preds = %37
  %46 = load %class.CFX_CSSPropertyHolder**, %class.CFX_CSSPropertyHolder*** %12, align 8
  %47 = load %class.CFX_CSSPropertyHolder**, %class.CFX_CSSPropertyHolder*** %13, align 8
  %48 = icmp ult %class.CFX_CSSPropertyHolder** %46, %47
  %49 = ptrtoint %class.CFX_CSSPropertyHolder** %47 to i64
  br i1 %48, label %50, label %54

50:                                               ; preds = %45
  %51 = bitcast %class.CFX_CSSPropertyHolder** %46 to i64*
  store i64 %44, i64* %51, align 8
  %52 = getelementptr inbounds %class.CFX_CSSPropertyHolder*, %class.CFX_CSSPropertyHolder** %46, i64 1
  %53 = ptrtoint %class.CFX_CSSPropertyHolder** %52 to i64
  store i64 %53, i64* %14, align 8
  br label %169

54:                                               ; preds = %45
  %55 = ptrtoint %class.CFX_CSSPropertyHolder** %46 to i64
  %56 = load i64, i64* %15, align 8
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = add nsw i64 %58, 1
  %60 = icmp ugt i64 %59, 2305843009213693951
  br i1 %60, label %61, label %63

61:                                               ; preds = %54
  %62 = bitcast %"class.std::__1::vector.97"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %62) #13
  unreachable

63:                                               ; preds = %54
  %64 = sub i64 %49, %56
  %65 = ashr exact i64 %64, 3
  %66 = icmp ult i64 %65, 1152921504606846975
  br i1 %66, label %67, label %75

67:                                               ; preds = %63
  %68 = ashr exact i64 %64, 2
  %69 = icmp ult i64 %68, %59
  %70 = select i1 %69, i64 %59, i64 %68
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %80, label %72

72:                                               ; preds = %67
  %73 = icmp ugt i64 %70, 2305843009213693951
  br i1 %73, label %74, label %75

74:                                               ; preds = %72
  tail call void @abort() #13
  unreachable

75:                                               ; preds = %72, %63
  %76 = phi i64 [ %70, %72 ], [ 2305843009213693951, %63 ]
  %77 = shl i64 %76, 3
  %78 = tail call i8* @_Znwm(i64 %77) #12
  %79 = bitcast i8* %78 to %class.CFX_CSSPropertyHolder**
  br label %80

80:                                               ; preds = %75, %67
  %81 = phi i64 [ %76, %75 ], [ 0, %67 ]
  %82 = phi %class.CFX_CSSPropertyHolder** [ %79, %75 ], [ null, %67 ]
  %83 = getelementptr inbounds %class.CFX_CSSPropertyHolder*, %class.CFX_CSSPropertyHolder** %82, i64 %58
  %84 = getelementptr inbounds %class.CFX_CSSPropertyHolder*, %class.CFX_CSSPropertyHolder** %82, i64 %81
  %85 = ptrtoint %class.CFX_CSSPropertyHolder** %84 to i64
  %86 = bitcast %class.CFX_CSSPropertyHolder** %83 to i64*
  store i64 %44, i64* %86, align 8
  %87 = getelementptr inbounds %class.CFX_CSSPropertyHolder*, %class.CFX_CSSPropertyHolder** %83, i64 1
  %88 = ptrtoint %class.CFX_CSSPropertyHolder** %87 to i64
  %89 = load %class.CFX_CSSPropertyHolder**, %class.CFX_CSSPropertyHolder*** %17, align 8
  %90 = load i64, i64* %14, align 8
  %91 = ptrtoint %class.CFX_CSSPropertyHolder** %89 to i64
  %92 = sub i64 %90, %91
  %93 = ashr exact i64 %92, 3
  %94 = sub nsw i64 0, %93
  %95 = getelementptr inbounds %class.CFX_CSSPropertyHolder*, %class.CFX_CSSPropertyHolder** %83, i64 %94
  %96 = ptrtoint %class.CFX_CSSPropertyHolder** %95 to i64
  %97 = icmp sgt i64 %92, 0
  br i1 %97, label %98, label %102

98:                                               ; preds = %80
  %99 = bitcast %class.CFX_CSSPropertyHolder** %95 to i8*
  %100 = bitcast %class.CFX_CSSPropertyHolder** %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 %92, i1 false) #11
  %101 = load %class.CFX_CSSPropertyHolder**, %class.CFX_CSSPropertyHolder*** %17, align 8
  br label %102

102:                                              ; preds = %98, %80
  %103 = phi %class.CFX_CSSPropertyHolder** [ %89, %80 ], [ %101, %98 ]
  store i64 %96, i64* %15, align 8
  store i64 %88, i64* %14, align 8
  store i64 %85, i64* %16, align 8
  %104 = icmp eq %class.CFX_CSSPropertyHolder** %103, null
  br i1 %104, label %169, label %105

105:                                              ; preds = %102
  %106 = bitcast %class.CFX_CSSPropertyHolder** %103 to i8*
  tail call void @_ZdlPv(i8* %106) #12
  br label %169

107:                                              ; preds = %37
  %108 = load %class.CFX_CSSPropertyHolder**, %class.CFX_CSSPropertyHolder*** %18, align 8
  %109 = load %class.CFX_CSSPropertyHolder**, %class.CFX_CSSPropertyHolder*** %19, align 8
  %110 = icmp ult %class.CFX_CSSPropertyHolder** %108, %109
  %111 = ptrtoint %class.CFX_CSSPropertyHolder** %109 to i64
  br i1 %110, label %112, label %116

112:                                              ; preds = %107
  %113 = bitcast %class.CFX_CSSPropertyHolder** %108 to i64*
  store i64 %44, i64* %113, align 8
  %114 = getelementptr inbounds %class.CFX_CSSPropertyHolder*, %class.CFX_CSSPropertyHolder** %108, i64 1
  %115 = ptrtoint %class.CFX_CSSPropertyHolder** %114 to i64
  store i64 %115, i64* %20, align 8
  br label %169

116:                                              ; preds = %107
  %117 = ptrtoint %class.CFX_CSSPropertyHolder** %108 to i64
  %118 = load i64, i64* %21, align 8
  %119 = sub i64 %117, %118
  %120 = ashr exact i64 %119, 3
  %121 = add nsw i64 %120, 1
  %122 = icmp ugt i64 %121, 2305843009213693951
  br i1 %122, label %123, label %125

123:                                              ; preds = %116
  %124 = bitcast %"class.std::__1::vector.97"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %124) #13
  unreachable

125:                                              ; preds = %116
  %126 = sub i64 %111, %118
  %127 = ashr exact i64 %126, 3
  %128 = icmp ult i64 %127, 1152921504606846975
  br i1 %128, label %129, label %137

129:                                              ; preds = %125
  %130 = ashr exact i64 %126, 2
  %131 = icmp ult i64 %130, %121
  %132 = select i1 %131, i64 %121, i64 %130
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %142, label %134

134:                                              ; preds = %129
  %135 = icmp ugt i64 %132, 2305843009213693951
  br i1 %135, label %136, label %137

136:                                              ; preds = %134
  tail call void @abort() #13
  unreachable

137:                                              ; preds = %134, %125
  %138 = phi i64 [ %132, %134 ], [ 2305843009213693951, %125 ]
  %139 = shl i64 %138, 3
  %140 = tail call i8* @_Znwm(i64 %139) #12
  %141 = bitcast i8* %140 to %class.CFX_CSSPropertyHolder**
  br label %142

142:                                              ; preds = %137, %129
  %143 = phi i64 [ %138, %137 ], [ 0, %129 ]
  %144 = phi %class.CFX_CSSPropertyHolder** [ %141, %137 ], [ null, %129 ]
  %145 = getelementptr inbounds %class.CFX_CSSPropertyHolder*, %class.CFX_CSSPropertyHolder** %144, i64 %120
  %146 = getelementptr inbounds %class.CFX_CSSPropertyHolder*, %class.CFX_CSSPropertyHolder** %144, i64 %143
  %147 = ptrtoint %class.CFX_CSSPropertyHolder** %146 to i64
  %148 = bitcast %class.CFX_CSSPropertyHolder** %145 to i64*
  store i64 %44, i64* %148, align 8
  %149 = getelementptr inbounds %class.CFX_CSSPropertyHolder*, %class.CFX_CSSPropertyHolder** %145, i64 1
  %150 = ptrtoint %class.CFX_CSSPropertyHolder** %149 to i64
  %151 = load %class.CFX_CSSPropertyHolder**, %class.CFX_CSSPropertyHolder*** %23, align 8
  %152 = load i64, i64* %20, align 8
  %153 = ptrtoint %class.CFX_CSSPropertyHolder** %151 to i64
  %154 = sub i64 %152, %153
  %155 = ashr exact i64 %154, 3
  %156 = sub nsw i64 0, %155
  %157 = getelementptr inbounds %class.CFX_CSSPropertyHolder*, %class.CFX_CSSPropertyHolder** %145, i64 %156
  %158 = ptrtoint %class.CFX_CSSPropertyHolder** %157 to i64
  %159 = icmp sgt i64 %154, 0
  br i1 %159, label %160, label %164

160:                                              ; preds = %142
  %161 = bitcast %class.CFX_CSSPropertyHolder** %157 to i8*
  %162 = bitcast %class.CFX_CSSPropertyHolder** %151 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* align 8 %162, i64 %154, i1 false) #11
  %163 = load %class.CFX_CSSPropertyHolder**, %class.CFX_CSSPropertyHolder*** %23, align 8
  br label %164

164:                                              ; preds = %160, %142
  %165 = phi %class.CFX_CSSPropertyHolder** [ %151, %142 ], [ %163, %160 ]
  store i64 %158, i64* %21, align 8
  store i64 %150, i64* %20, align 8
  store i64 %147, i64* %22, align 8
  %166 = icmp eq %class.CFX_CSSPropertyHolder** %165, null
  br i1 %166, label %169, label %167

167:                                              ; preds = %164
  %168 = bitcast %class.CFX_CSSPropertyHolder** %165 to i8*
  tail call void @_ZdlPv(i8* %168) #12
  br label %169

169:                                              ; preds = %167, %164, %112, %105, %102, %50
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53"* %38, i64 1
  %171 = icmp eq %"class.std::__1::unique_ptr.53"* %170, %9
  br i1 %171, label %24, label %37

172:                                              ; preds = %238, %24
  ret void

173:                                              ; preds = %30, %238
  %174 = phi %"class.std::__1::unique_ptr.61"* [ %26, %30 ], [ %239, %238 ]
  %175 = bitcast %"class.std::__1::unique_ptr.61"* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = load %class.CFX_CSSCustomProperty**, %class.CFX_CSSCustomProperty*** %31, align 8
  %178 = load %class.CFX_CSSCustomProperty**, %class.CFX_CSSCustomProperty*** %32, align 8
  %179 = icmp ult %class.CFX_CSSCustomProperty** %177, %178
  %180 = ptrtoint %class.CFX_CSSCustomProperty** %178 to i64
  br i1 %179, label %181, label %185

181:                                              ; preds = %173
  %182 = bitcast %class.CFX_CSSCustomProperty** %177 to i64*
  store i64 %176, i64* %182, align 8
  %183 = getelementptr inbounds %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty** %177, i64 1
  %184 = ptrtoint %class.CFX_CSSCustomProperty** %183 to i64
  store i64 %184, i64* %33, align 8
  br label %238

185:                                              ; preds = %173
  %186 = ptrtoint %class.CFX_CSSCustomProperty** %177 to i64
  %187 = load i64, i64* %34, align 8
  %188 = sub i64 %186, %187
  %189 = ashr exact i64 %188, 3
  %190 = add nsw i64 %189, 1
  %191 = icmp ugt i64 %190, 2305843009213693951
  br i1 %191, label %192, label %194

192:                                              ; preds = %185
  %193 = bitcast %"class.std::__1::vector.104"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %193) #13
  unreachable

194:                                              ; preds = %185
  %195 = sub i64 %180, %187
  %196 = ashr exact i64 %195, 3
  %197 = icmp ult i64 %196, 1152921504606846975
  br i1 %197, label %198, label %206

198:                                              ; preds = %194
  %199 = ashr exact i64 %195, 2
  %200 = icmp ult i64 %199, %190
  %201 = select i1 %200, i64 %190, i64 %199
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %211, label %203

203:                                              ; preds = %198
  %204 = icmp ugt i64 %201, 2305843009213693951
  br i1 %204, label %205, label %206

205:                                              ; preds = %203
  tail call void @abort() #13
  unreachable

206:                                              ; preds = %203, %194
  %207 = phi i64 [ %201, %203 ], [ 2305843009213693951, %194 ]
  %208 = shl i64 %207, 3
  %209 = tail call i8* @_Znwm(i64 %208) #12
  %210 = bitcast i8* %209 to %class.CFX_CSSCustomProperty**
  br label %211

211:                                              ; preds = %206, %198
  %212 = phi i64 [ %207, %206 ], [ 0, %198 ]
  %213 = phi %class.CFX_CSSCustomProperty** [ %210, %206 ], [ null, %198 ]
  %214 = getelementptr inbounds %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty** %213, i64 %189
  %215 = getelementptr inbounds %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty** %213, i64 %212
  %216 = ptrtoint %class.CFX_CSSCustomProperty** %215 to i64
  %217 = bitcast %class.CFX_CSSCustomProperty** %214 to i64*
  store i64 %176, i64* %217, align 8
  %218 = getelementptr inbounds %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty** %214, i64 1
  %219 = ptrtoint %class.CFX_CSSCustomProperty** %218 to i64
  %220 = load %class.CFX_CSSCustomProperty**, %class.CFX_CSSCustomProperty*** %36, align 8
  %221 = load i64, i64* %33, align 8
  %222 = ptrtoint %class.CFX_CSSCustomProperty** %220 to i64
  %223 = sub i64 %221, %222
  %224 = ashr exact i64 %223, 3
  %225 = sub nsw i64 0, %224
  %226 = getelementptr inbounds %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty** %214, i64 %225
  %227 = ptrtoint %class.CFX_CSSCustomProperty** %226 to i64
  %228 = icmp sgt i64 %223, 0
  br i1 %228, label %229, label %233

229:                                              ; preds = %211
  %230 = bitcast %class.CFX_CSSCustomProperty** %226 to i8*
  %231 = bitcast %class.CFX_CSSCustomProperty** %220 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %230, i8* align 8 %231, i64 %223, i1 false) #11
  %232 = load %class.CFX_CSSCustomProperty**, %class.CFX_CSSCustomProperty*** %36, align 8
  br label %233

233:                                              ; preds = %229, %211
  %234 = phi %class.CFX_CSSCustomProperty** [ %220, %211 ], [ %232, %229 ]
  store i64 %227, i64* %34, align 8
  store i64 %219, i64* %33, align 8
  store i64 %216, i64* %35, align 8
  %235 = icmp eq %class.CFX_CSSCustomProperty** %234, null
  br i1 %235, label %238, label %236

236:                                              ; preds = %233
  %237 = bitcast %class.CFX_CSSCustomProperty** %234 to i8*
  tail call void @_ZdlPv(i8* %237) #12
  br label %238

238:                                              ; preds = %181, %233, %236
  %239 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %174, i64 1
  %240 = load %"class.std::__1::unique_ptr.61"*, %"class.std::__1::unique_ptr.61"** %27, align 8
  %241 = icmp eq %"class.std::__1::unique_ptr.61"* %239, %240
  br i1 %241, label %172, label %173
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CFX_CSSStyleSelector13ApplyPropertyE15CFX_CSSPropertyRKN5fxcrt9RetainPtrI12CFX_CSSValueEEP20CFX_CSSComputedStyle(%class.CFX_CSSStyleSelector* nocapture readonly, i8 zeroext, %"class.fxcrt::RetainPtr.18"* readonly dereferenceable(8), %class.CFX_CSSComputedStyle*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.fxcrt::RetainPtr", align 8
  %6 = getelementptr inbounds %"class.fxcrt::RetainPtr.18", %"class.fxcrt::RetainPtr.18"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %6, align 8
  %8 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 1
  %9 = load i8, i8* %8, align 8
  %10 = icmp eq i8 %9, 6
  %11 = bitcast %class.CFX_CSSValue* %7 to %class.CFX_CSSNumberValue*
  br i1 %10, label %604, label %12

12:                                               ; preds = %4
  switch i8 %1, label %668 [
    i8 31, label %13
    i8 24, label %43
    i8 28, label %84
    i8 16, label %122
    i8 3, label %150
    i8 13, label %155
    i8 26, label %210
    i8 14, label %236
    i8 6, label %260
    i8 39, label %267
    i8 29, label %274
    i8 38, label %281
    i8 5, label %288
    i8 19, label %295
    i8 10, label %302
    i8 32, label %309
    i8 30, label %316
    i8 33, label %323
    i8 17, label %330
    i8 22, label %337
    i8 18, label %344
    i8 20, label %397
    i8 15, label %424
    i8 34, label %504
    i8 1, label %584
    i8 9, label %589
    i8 35, label %594
    i8 4, label %599
  ]

13:                                               ; preds = %12
  %14 = icmp eq i8 %9, 4
  br i1 %14, label %15, label %668

15:                                               ; preds = %13
  %16 = icmp eq %class.CFX_CSSValue* %7, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8, !noalias !18
  %20 = add nsw i64 %19, 1
  store i64 %20, i64* %18, align 8, !noalias !18
  br label %21

21:                                               ; preds = %15, %17
  %22 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 2, i64 0
  %23 = load i8, i8* %22, align 1
  switch i8 %23, label %28 [
    i8 37, label %29
    i8 1, label %24
    i8 26, label %25
    i8 34, label %26
    i8 35, label %27
  ]

24:                                               ; preds = %21
  br label %29

25:                                               ; preds = %21
  br label %29

26:                                               ; preds = %21
  br label %29

27:                                               ; preds = %21
  br label %29

28:                                               ; preds = %21
  br label %29

29:                                               ; preds = %21, %24, %25, %26, %27, %28
  %30 = phi i8 [ 3, %28 ], [ 4, %27 ], [ 5, %26 ], [ 1, %25 ], [ 0, %24 ], [ 2, %21 ]
  %31 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 8
  store i8 %30, i8* %31, align 4
  br i1 %16, label %668, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = add nsw i64 %34, -1
  store i64 %35, i64* %33, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %668

37:                                               ; preds = %32
  %38 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0
  %39 = bitcast %class.CFX_CSSValue* %7 to void (%"class.fxcrt::Retainable"*)***
  %40 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %40, i64 1
  %42 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %41, align 8
  tail call void %42(%"class.fxcrt::Retainable"* nonnull %38) #11
  br label %668

43:                                               ; preds = %12
  %44 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  switch i8 %9, label %668 [
    i8 1, label %45
    i8 4, label %65
  ]

45:                                               ; preds = %43
  %46 = icmp eq %class.CFX_CSSValue* %7, null
  br i1 %46, label %47, label %50

47:                                               ; preds = %45
  %48 = load float, float* %44, align 4
  %49 = tail call float @_ZNK18CFX_CSSNumberValue5ApplyEf(%class.CFX_CSSNumberValue* null, float %48) #11
  store float %49, float* %44, align 4
  br label %668

50:                                               ; preds = %45
  %51 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8, !noalias !21
  %53 = add nsw i64 %52, 1
  store i64 %53, i64* %51, align 8, !noalias !21
  %54 = load float, float* %44, align 4
  %55 = tail call float @_ZNK18CFX_CSSNumberValue5ApplyEf(%class.CFX_CSSNumberValue* nonnull %11, float %54) #11
  store float %55, float* %44, align 4
  %56 = load i64, i64* %51, align 8
  %57 = add nsw i64 %56, -1
  store i64 %57, i64* %51, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %668

59:                                               ; preds = %50
  %60 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0
  %61 = bitcast %class.CFX_CSSValue* %7 to void (%"class.fxcrt::Retainable"*)***
  %62 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %62, i64 1
  %64 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %63, align 8
  tail call void %64(%"class.fxcrt::Retainable"* nonnull %60) #11
  br label %668

65:                                               ; preds = %43
  %66 = icmp eq %class.CFX_CSSValue* %7, null
  br i1 %66, label %659, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8, !noalias !24
  %70 = add nsw i64 %69, 1
  store i64 %70, i64* %68, align 8, !noalias !24
  %71 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 2, i64 0
  %72 = load i8, i8* %71, align 1
  %73 = load float, float* %44, align 4
  %74 = tail call float @_ZN20CFX_CSSStyleSelector10ToFontSizeE20CFX_CSSPropertyValuef(%class.CFX_CSSStyleSelector* %0, i8 zeroext %72, float %73)
  store float %74, float* %44, align 4
  %75 = load i64, i64* %68, align 8
  %76 = add nsw i64 %75, -1
  store i64 %76, i64* %68, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %668

78:                                               ; preds = %67
  %79 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0
  %80 = bitcast %class.CFX_CSSValue* %7 to void (%"class.fxcrt::Retainable"*)***
  %81 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %81, i64 1
  %83 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %82, align 8
  tail call void %83(%"class.fxcrt::Retainable"* nonnull %79) #11
  br label %668

84:                                               ; preds = %12
  %85 = icmp eq i8 %9, 1
  br i1 %85, label %86, label %668

86:                                               ; preds = %84
  %87 = icmp eq %class.CFX_CSSValue* %7, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %86
  %89 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8, !noalias !27
  %91 = add nsw i64 %90, 1
  store i64 %91, i64* %89, align 8, !noalias !27
  br label %92

92:                                               ; preds = %86, %88
  %93 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 2, i64 3
  %94 = bitcast i8* %93 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %104

97:                                               ; preds = %92
  %98 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 1
  %99 = bitcast %class.CFX_CSSValue* %98 to float*
  %100 = load float, float* %99, align 8
  %101 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %102 = load float, float* %101, align 8
  %103 = fmul float %100, %102
  br label %108

104:                                              ; preds = %92
  %105 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %106 = load float, float* %105, align 8
  %107 = tail call float @_ZNK18CFX_CSSNumberValue5ApplyEf(%class.CFX_CSSNumberValue* %11, float %106) #11
  br label %108

108:                                              ; preds = %104, %97
  %109 = phi float [ %107, %104 ], [ %103, %97 ]
  %110 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 5
  store float %109, float* %110, align 4
  br i1 %87, label %668, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = add nsw i64 %113, -1
  store i64 %114, i64* %112, align 8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %668

116:                                              ; preds = %111
  %117 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0
  %118 = bitcast %class.CFX_CSSValue* %7 to void (%"class.fxcrt::Retainable"*)***
  %119 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %119, i64 1
  %121 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %120, align 8
  tail call void %121(%"class.fxcrt::Retainable"* nonnull %117) #11
  br label %668

122:                                              ; preds = %12
  %123 = icmp eq i8 %9, 4
  br i1 %123, label %124, label %668

124:                                              ; preds = %122
  %125 = icmp eq %class.CFX_CSSValue* %7, null
  br i1 %125, label %130, label %126

126:                                              ; preds = %124
  %127 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0, i32 1
  %128 = load i64, i64* %127, align 8, !noalias !30
  %129 = add nsw i64 %128, 1
  store i64 %129, i64* %127, align 8, !noalias !30
  br label %130

130:                                              ; preds = %124, %126
  %131 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 2, i64 0
  %132 = load i8, i8* %131, align 1
  switch i8 %132, label %135 [
    i8 18, label %136
    i8 5, label %133
    i8 23, label %134
  ]

133:                                              ; preds = %130
  br label %136

134:                                              ; preds = %130
  br label %136

135:                                              ; preds = %130
  br label %136

136:                                              ; preds = %130, %133, %134, %135
  %137 = phi i8 [ 0, %135 ], [ 3, %134 ], [ 1, %133 ], [ 2, %130 ]
  %138 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 10
  store i8 %137, i8* %138, align 8
  br i1 %125, label %668, label %139

139:                                              ; preds = %136
  %140 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = add nsw i64 %141, -1
  store i64 %142, i64* %140, align 8
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %668

144:                                              ; preds = %139
  %145 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0
  %146 = bitcast %class.CFX_CSSValue* %7 to void (%"class.fxcrt::Retainable"*)***
  %147 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %147, i64 1
  %149 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %148, align 8
  tail call void %149(%"class.fxcrt::Retainable"* nonnull %145) #11
  br label %668

150:                                              ; preds = %12
  %151 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 2
  %152 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %153 = load float, float* %152, align 8
  %154 = tail call zeroext i1 @_ZN20CFX_CSSStyleSelector20SetLengthWithPercentER13CFX_CSSLengthN12CFX_CSSValue13PrimitiveTypeERKN5fxcrt9RetainPtrIS2_EEf(%class.CFX_CSSStyleSelector* undef, %class.CFX_CSSLength* dereferenceable(8) %151, i8 zeroext %9, %"class.fxcrt::RetainPtr.18"* dereferenceable(8) %2, float %153)
  br label %668

155:                                              ; preds = %12
  switch i8 %9, label %668 [
    i8 4, label %156
    i8 1, label %182
  ]

156:                                              ; preds = %155
  %157 = icmp eq %class.CFX_CSSValue* %7, null
  br i1 %157, label %162, label %158

158:                                              ; preds = %156
  %159 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0, i32 1
  %160 = load i64, i64* %159, align 8, !noalias !33
  %161 = add nsw i64 %160, 1
  store i64 %161, i64* %159, align 8, !noalias !33
  br label %162

162:                                              ; preds = %156, %158
  %163 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 2, i64 0
  %164 = load i8, i8* %163, align 1
  switch i8 %164, label %167 [
    i8 28, label %168
    i8 0, label %165
    i8 15, label %166
  ]

165:                                              ; preds = %162
  br label %168

166:                                              ; preds = %162
  br label %168

167:                                              ; preds = %162
  br label %168

168:                                              ; preds = %162, %165, %166, %167
  %169 = phi i16 [ 400, %167 ], [ 200, %166 ], [ 900, %165 ], [ 700, %162 ]
  %170 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 7
  store i16 %169, i16* %170, align 4
  br i1 %157, label %668, label %171

171:                                              ; preds = %168
  %172 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  %174 = add nsw i64 %173, -1
  store i64 %174, i64* %172, align 8
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %668

176:                                              ; preds = %171
  %177 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0
  %178 = bitcast %class.CFX_CSSValue* %7 to void (%"class.fxcrt::Retainable"*)***
  %179 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %178, align 8
  %180 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %179, i64 1
  %181 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %180, align 8
  tail call void %181(%"class.fxcrt::Retainable"* nonnull %177) #11
  br label %668

182:                                              ; preds = %155
  %183 = icmp eq %class.CFX_CSSValue* %7, null
  br i1 %183, label %184, label %187

184:                                              ; preds = %182
  %185 = load float, float* inttoptr (i64 24 to float*), align 8
  %186 = fptosi float %185 to i32
  br label %201

187:                                              ; preds = %182
  %188 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0, i32 1
  %189 = load i64, i64* %188, align 8, !noalias !36
  %190 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 1
  %191 = bitcast %class.CFX_CSSValue* %190 to float*
  %192 = load float, float* %191, align 8
  %193 = fptosi float %192 to i32
  store i64 %189, i64* %188, align 8
  %194 = icmp eq i64 %189, 0
  br i1 %194, label %195, label %201

195:                                              ; preds = %187
  %196 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0
  %197 = bitcast %class.CFX_CSSValue* %7 to void (%"class.fxcrt::Retainable"*)***
  %198 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %197, align 8
  %199 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %198, i64 1
  %200 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %199, align 8
  tail call void %200(%"class.fxcrt::Retainable"* nonnull %196) #11
  br label %201

201:                                              ; preds = %184, %187, %195
  %202 = phi i32 [ %186, %184 ], [ %193, %187 ], [ %193, %195 ]
  %203 = add i32 %202, -100
  %204 = icmp ult i32 %203, 900
  br i1 %204, label %205, label %668

205:                                              ; preds = %201
  %206 = trunc i32 %202 to i16
  %207 = urem i16 %206, 100
  %208 = sub nuw nsw i16 %206, %207
  %209 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 7
  store i16 %208, i16* %209, align 4
  br label %668

210:                                              ; preds = %12
  %211 = icmp eq i8 %9, 4
  br i1 %211, label %212, label %668

212:                                              ; preds = %210
  %213 = icmp eq %class.CFX_CSSValue* %7, null
  br i1 %213, label %218, label %214

214:                                              ; preds = %212
  %215 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0, i32 1
  %216 = load i64, i64* %215, align 8, !noalias !39
  %217 = add nsw i64 %216, 1
  store i64 %217, i64* %215, align 8, !noalias !39
  br label %218

218:                                              ; preds = %212, %214
  %219 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 2, i64 0
  %220 = load i8, i8* %219, align 1
  switch i8 %220, label %221 [
    i8 38, label %222
    i8 16, label %222
  ]

221:                                              ; preds = %218
  br label %222

222:                                              ; preds = %218, %218, %221
  %223 = phi i8 [ 0, %221 ], [ 1, %218 ], [ 1, %218 ]
  %224 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 9
  store i8 %223, i8* %224, align 1
  br i1 %213, label %668, label %225

225:                                              ; preds = %222
  %226 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0, i32 1
  %227 = load i64, i64* %226, align 8
  %228 = add nsw i64 %227, -1
  store i64 %228, i64* %226, align 8
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %230, label %668

230:                                              ; preds = %225
  %231 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0
  %232 = bitcast %class.CFX_CSSValue* %7 to void (%"class.fxcrt::Retainable"*)***
  %233 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %232, align 8
  %234 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %233, i64 1
  %235 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %234, align 8
  tail call void %235(%"class.fxcrt::Retainable"* nonnull %231) #11
  br label %668

236:                                              ; preds = %12
  %237 = icmp eq i8 %9, 3
  br i1 %237, label %238, label %668

238:                                              ; preds = %236
  %239 = icmp eq %class.CFX_CSSValue* %7, null
  br i1 %239, label %240, label %243

240:                                              ; preds = %238
  %241 = load i32, i32* inttoptr (i64 20 to i32*), align 4
  %242 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 6
  store i32 %241, i32* %242, align 8
  br label %668

243:                                              ; preds = %238
  %244 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0, i32 1
  %245 = load i64, i64* %244, align 8, !noalias !42
  %246 = add nsw i64 %245, 1
  store i64 %246, i64* %244, align 8, !noalias !42
  %247 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 2, i64 3
  %248 = bitcast i8* %247 to i32*
  %249 = load i32, i32* %248, align 4
  %250 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 6
  store i32 %249, i32* %250, align 8
  %251 = load i64, i64* %244, align 8
  %252 = add nsw i64 %251, -1
  store i64 %252, i64* %244, align 8
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %254, label %668

254:                                              ; preds = %243
  %255 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0
  %256 = bitcast %class.CFX_CSSValue* %7 to void (%"class.fxcrt::Retainable"*)***
  %257 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %256, align 8
  %258 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %257, i64 1
  %259 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %258, align 8
  tail call void %259(%"class.fxcrt::Retainable"* nonnull %255) #11
  br label %668

260:                                              ; preds = %12
  %261 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 0, i32 0
  %262 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %263 = load float, float* %262, align 8
  %264 = tail call zeroext i1 @_ZN20CFX_CSSStyleSelector20SetLengthWithPercentER13CFX_CSSLengthN12CFX_CSSValue13PrimitiveTypeERKN5fxcrt9RetainPtrIS2_EEf(%class.CFX_CSSStyleSelector* undef, %class.CFX_CSSLength* dereferenceable(8) %261, i8 zeroext %9, %"class.fxcrt::RetainPtr.18"* dereferenceable(8) %2, float %263)
  br i1 %264, label %265, label %668

265:                                              ; preds = %260
  %266 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 11
  store i8 1, i8* %266, align 1
  br label %668

267:                                              ; preds = %12
  %268 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 0, i32 1
  %269 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %270 = load float, float* %269, align 8
  %271 = tail call zeroext i1 @_ZN20CFX_CSSStyleSelector20SetLengthWithPercentER13CFX_CSSLengthN12CFX_CSSValue13PrimitiveTypeERKN5fxcrt9RetainPtrIS2_EEf(%class.CFX_CSSStyleSelector* undef, %class.CFX_CSSLength* dereferenceable(8) %268, i8 zeroext %9, %"class.fxcrt::RetainPtr.18"* dereferenceable(8) %2, float %270)
  br i1 %271, label %272, label %668

272:                                              ; preds = %267
  %273 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 11
  store i8 1, i8* %273, align 1
  br label %668

274:                                              ; preds = %12
  %275 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 0, i32 2
  %276 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %277 = load float, float* %276, align 8
  %278 = tail call zeroext i1 @_ZN20CFX_CSSStyleSelector20SetLengthWithPercentER13CFX_CSSLengthN12CFX_CSSValue13PrimitiveTypeERKN5fxcrt9RetainPtrIS2_EEf(%class.CFX_CSSStyleSelector* undef, %class.CFX_CSSLength* dereferenceable(8) %275, i8 zeroext %9, %"class.fxcrt::RetainPtr.18"* dereferenceable(8) %2, float %277)
  br i1 %278, label %279, label %668

279:                                              ; preds = %274
  %280 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 11
  store i8 1, i8* %280, align 1
  br label %668

281:                                              ; preds = %12
  %282 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 0, i32 3
  %283 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %284 = load float, float* %283, align 8
  %285 = tail call zeroext i1 @_ZN20CFX_CSSStyleSelector20SetLengthWithPercentER13CFX_CSSLengthN12CFX_CSSValue13PrimitiveTypeERKN5fxcrt9RetainPtrIS2_EEf(%class.CFX_CSSStyleSelector* undef, %class.CFX_CSSLength* dereferenceable(8) %282, i8 zeroext %9, %"class.fxcrt::RetainPtr.18"* dereferenceable(8) %2, float %284)
  br i1 %285, label %286, label %668

286:                                              ; preds = %281
  %287 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 11
  store i8 1, i8* %287, align 1
  br label %668

288:                                              ; preds = %12
  %289 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 2, i32 0
  %290 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %291 = load float, float* %290, align 8
  %292 = tail call zeroext i1 @_ZN20CFX_CSSStyleSelector20SetLengthWithPercentER13CFX_CSSLengthN12CFX_CSSValue13PrimitiveTypeERKN5fxcrt9RetainPtrIS2_EEf(%class.CFX_CSSStyleSelector* undef, %class.CFX_CSSLength* dereferenceable(8) %289, i8 zeroext %9, %"class.fxcrt::RetainPtr.18"* dereferenceable(8) %2, float %291)
  br i1 %292, label %293, label %668

293:                                              ; preds = %288
  %294 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 13
  store i8 1, i8* %294, align 1
  br label %668

295:                                              ; preds = %12
  %296 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 2, i32 1
  %297 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %298 = load float, float* %297, align 8
  %299 = tail call zeroext i1 @_ZN20CFX_CSSStyleSelector20SetLengthWithPercentER13CFX_CSSLengthN12CFX_CSSValue13PrimitiveTypeERKN5fxcrt9RetainPtrIS2_EEf(%class.CFX_CSSStyleSelector* undef, %class.CFX_CSSLength* dereferenceable(8) %296, i8 zeroext %9, %"class.fxcrt::RetainPtr.18"* dereferenceable(8) %2, float %298)
  br i1 %299, label %300, label %668

300:                                              ; preds = %295
  %301 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 13
  store i8 1, i8* %301, align 1
  br label %668

302:                                              ; preds = %12
  %303 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 2, i32 2
  %304 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %305 = load float, float* %304, align 8
  %306 = tail call zeroext i1 @_ZN20CFX_CSSStyleSelector20SetLengthWithPercentER13CFX_CSSLengthN12CFX_CSSValue13PrimitiveTypeERKN5fxcrt9RetainPtrIS2_EEf(%class.CFX_CSSStyleSelector* undef, %class.CFX_CSSLength* dereferenceable(8) %303, i8 zeroext %9, %"class.fxcrt::RetainPtr.18"* dereferenceable(8) %2, float %305)
  br i1 %306, label %307, label %668

307:                                              ; preds = %302
  %308 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 13
  store i8 1, i8* %308, align 1
  br label %668

309:                                              ; preds = %12
  %310 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 2, i32 3
  %311 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %312 = load float, float* %311, align 8
  %313 = tail call zeroext i1 @_ZN20CFX_CSSStyleSelector20SetLengthWithPercentER13CFX_CSSLengthN12CFX_CSSValue13PrimitiveTypeERKN5fxcrt9RetainPtrIS2_EEf(%class.CFX_CSSStyleSelector* undef, %class.CFX_CSSLength* dereferenceable(8) %310, i8 zeroext %9, %"class.fxcrt::RetainPtr.18"* dereferenceable(8) %2, float %312)
  br i1 %313, label %314, label %668

314:                                              ; preds = %309
  %315 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 13
  store i8 1, i8* %315, align 1
  br label %668

316:                                              ; preds = %12
  %317 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 1, i32 0
  %318 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %319 = load float, float* %318, align 8
  %320 = tail call zeroext i1 @_ZN20CFX_CSSStyleSelector20SetLengthWithPercentER13CFX_CSSLengthN12CFX_CSSValue13PrimitiveTypeERKN5fxcrt9RetainPtrIS2_EEf(%class.CFX_CSSStyleSelector* undef, %class.CFX_CSSLength* dereferenceable(8) %317, i8 zeroext %9, %"class.fxcrt::RetainPtr.18"* dereferenceable(8) %2, float %319)
  br i1 %320, label %321, label %668

321:                                              ; preds = %316
  %322 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 12
  store i8 1, i8* %322, align 8
  br label %668

323:                                              ; preds = %12
  %324 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 1, i32 1
  %325 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %326 = load float, float* %325, align 8
  %327 = tail call zeroext i1 @_ZN20CFX_CSSStyleSelector20SetLengthWithPercentER13CFX_CSSLengthN12CFX_CSSValue13PrimitiveTypeERKN5fxcrt9RetainPtrIS2_EEf(%class.CFX_CSSStyleSelector* undef, %class.CFX_CSSLength* dereferenceable(8) %324, i8 zeroext %9, %"class.fxcrt::RetainPtr.18"* dereferenceable(8) %2, float %326)
  br i1 %327, label %328, label %668

328:                                              ; preds = %323
  %329 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 12
  store i8 1, i8* %329, align 8
  br label %668

330:                                              ; preds = %12
  %331 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 1, i32 2
  %332 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %333 = load float, float* %332, align 8
  %334 = tail call zeroext i1 @_ZN20CFX_CSSStyleSelector20SetLengthWithPercentER13CFX_CSSLengthN12CFX_CSSValue13PrimitiveTypeERKN5fxcrt9RetainPtrIS2_EEf(%class.CFX_CSSStyleSelector* undef, %class.CFX_CSSLength* dereferenceable(8) %331, i8 zeroext %9, %"class.fxcrt::RetainPtr.18"* dereferenceable(8) %2, float %333)
  br i1 %334, label %335, label %668

335:                                              ; preds = %330
  %336 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 12
  store i8 1, i8* %336, align 8
  br label %668

337:                                              ; preds = %12
  %338 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 1, i32 3
  %339 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %340 = load float, float* %339, align 8
  %341 = tail call zeroext i1 @_ZN20CFX_CSSStyleSelector20SetLengthWithPercentER13CFX_CSSLengthN12CFX_CSSValue13PrimitiveTypeERKN5fxcrt9RetainPtrIS2_EEf(%class.CFX_CSSStyleSelector* undef, %class.CFX_CSSLength* dereferenceable(8) %338, i8 zeroext %9, %"class.fxcrt::RetainPtr.18"* dereferenceable(8) %2, float %340)
  br i1 %341, label %342, label %668

342:                                              ; preds = %337
  %343 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 12
  store i8 1, i8* %343, align 8
  br label %668

344:                                              ; preds = %12
  switch i8 %9, label %668 [
    i8 4, label %345
    i8 1, label %375
  ]

345:                                              ; preds = %344
  %346 = icmp eq %class.CFX_CSSValue* %7, null
  br i1 %346, label %351, label %347

347:                                              ; preds = %345
  %348 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0, i32 1
  %349 = load i64, i64* %348, align 8, !noalias !45
  %350 = add nsw i64 %349, 1
  store i64 %350, i64* %348, align 8, !noalias !45
  br label %351

351:                                              ; preds = %345, %347
  %352 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 2, i64 0
  %353 = load i8, i8* %352, align 1
  switch i8 %353, label %360 [
    i8 24, label %361
    i8 12, label %354
    i8 17, label %355
    i8 3, label %356
    i8 4, label %357
    i8 43, label %358
    i8 32, label %359
  ]

354:                                              ; preds = %351
  br label %361

355:                                              ; preds = %351
  br label %361

356:                                              ; preds = %351
  br label %361

357:                                              ; preds = %351
  br label %361

358:                                              ; preds = %351
  br label %361

359:                                              ; preds = %351
  br label %361

360:                                              ; preds = %351
  br label %361

361:                                              ; preds = %351, %354, %355, %356, %357, %358, %359, %360
  %362 = phi i8 [ 0, %360 ], [ 7, %359 ], [ 4, %358 ], [ 3, %357 ], [ 1, %356 ], [ 2, %355 ], [ 6, %354 ], [ 5, %351 ]
  %363 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 9
  store i8 %362, i8* %363, align 1
  br i1 %346, label %668, label %364

364:                                              ; preds = %361
  %365 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0, i32 1
  %366 = load i64, i64* %365, align 8
  %367 = add nsw i64 %366, -1
  store i64 %367, i64* %365, align 8
  %368 = icmp eq i64 %367, 0
  br i1 %368, label %369, label %668

369:                                              ; preds = %364
  %370 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0
  %371 = bitcast %class.CFX_CSSValue* %7 to void (%"class.fxcrt::Retainable"*)***
  %372 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %371, align 8
  %373 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %372, i64 1
  %374 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %373, align 8
  tail call void %374(%"class.fxcrt::Retainable"* nonnull %370) #11
  br label %668

375:                                              ; preds = %344
  %376 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 9
  store i8 8, i8* %376, align 1
  %377 = bitcast %"class.fxcrt::RetainPtr.18"* %2 to %class.CFX_CSSNumberValue**
  %378 = load %class.CFX_CSSNumberValue*, %class.CFX_CSSNumberValue** %377, align 8, !noalias !48
  %379 = icmp eq %class.CFX_CSSNumberValue* %378, null
  br i1 %379, label %663, label %380

380:                                              ; preds = %375
  %381 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %378, i64 0, i32 0, i32 0, i32 1
  %382 = load i64, i64* %381, align 8, !noalias !48
  %383 = add nsw i64 %382, 1
  store i64 %383, i64* %381, align 8, !noalias !48
  %384 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %385 = load float, float* %384, align 8
  %386 = tail call float @_ZNK18CFX_CSSNumberValue5ApplyEf(%class.CFX_CSSNumberValue* nonnull %378, float %385) #11
  %387 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 7
  store float %386, float* %387, align 8
  %388 = load i64, i64* %381, align 8
  %389 = add nsw i64 %388, -1
  store i64 %389, i64* %381, align 8
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %391, label %668

391:                                              ; preds = %380
  %392 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %378, i64 0, i32 0, i32 0
  %393 = bitcast %class.CFX_CSSNumberValue* %378 to void (%"class.fxcrt::Retainable"*)***
  %394 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %393, align 8
  %395 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %394, i64 1
  %396 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %395, align 8
  tail call void %396(%"class.fxcrt::Retainable"* nonnull %392) #11
  br label %668

397:                                              ; preds = %12
  %398 = icmp eq i8 %9, 4
  br i1 %398, label %399, label %668

399:                                              ; preds = %397
  %400 = icmp eq %class.CFX_CSSValue* %7, null
  br i1 %400, label %401, label %406

401:                                              ; preds = %399
  %402 = load i8, i8* inttoptr (i64 17 to i8*), align 1
  %403 = icmp eq i8 %402, 29
  %404 = zext i1 %403 to i8
  %405 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 8
  store i8 %404, i8* %405, align 2
  br label %668

406:                                              ; preds = %399
  %407 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0, i32 1
  %408 = load i64, i64* %407, align 8, !noalias !51
  %409 = add nsw i64 %408, 1
  store i64 %409, i64* %407, align 8, !noalias !51
  %410 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 2, i64 0
  %411 = load i8, i8* %410, align 1
  %412 = icmp eq i8 %411, 29
  %413 = zext i1 %412 to i8
  %414 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 8
  store i8 %413, i8* %414, align 2
  %415 = load i64, i64* %407, align 8
  %416 = add nsw i64 %415, -1
  store i64 %416, i64* %407, align 8
  %417 = icmp eq i64 %416, 0
  br i1 %417, label %418, label %668

418:                                              ; preds = %406
  %419 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0
  %420 = bitcast %class.CFX_CSSValue* %7 to void (%"class.fxcrt::Retainable"*)***
  %421 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %420, align 8
  %422 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %421, i64 1
  %423 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %422, align 8
  tail call void %423(%"class.fxcrt::Retainable"* nonnull %419) #11
  br label %668

424:                                              ; preds = %12
  switch i8 %9, label %668 [
    i8 4, label %425
    i8 1, label %427
  ]

425:                                              ; preds = %424
  %426 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 0, i32 0
  store i8 2, i8* %426, align 4
  br label %668

427:                                              ; preds = %424
  %428 = bitcast %"class.fxcrt::RetainPtr.18"* %2 to %class.CFX_CSSNumberValue**
  %429 = icmp eq %class.CFX_CSSValue* %7, null
  br i1 %429, label %430, label %433

430:                                              ; preds = %427
  %431 = load i32, i32* inttoptr (i64 20 to i32*), align 4
  %432 = icmp eq i32 %431, 1
  br i1 %432, label %668, label %448

433:                                              ; preds = %427
  %434 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0, i32 1
  %435 = load i64, i64* %434, align 8, !noalias !54
  %436 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 2, i64 3
  %437 = bitcast i8* %436 to i32*
  %438 = load i32, i32* %437, align 4
  %439 = icmp eq i32 %438, 1
  store i64 %435, i64* %434, align 8
  %440 = icmp eq i64 %435, 0
  br i1 %440, label %441, label %447

441:                                              ; preds = %433
  %442 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0
  %443 = bitcast %class.CFX_CSSValue* %7 to void (%"class.fxcrt::Retainable"*)***
  %444 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %443, align 8
  %445 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %444, i64 1
  %446 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %445, align 8
  tail call void %446(%"class.fxcrt::Retainable"* nonnull %442) #11
  br i1 %439, label %668, label %448

447:                                              ; preds = %433
  br i1 %439, label %668, label %448

448:                                              ; preds = %441, %430, %447
  %449 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 0
  %450 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %451 = load float, float* %450, align 8
  %452 = load %class.CFX_CSSNumberValue*, %class.CFX_CSSNumberValue** %428, align 8, !noalias !57
  %453 = icmp eq %class.CFX_CSSNumberValue* %452, null
  br i1 %453, label %458, label %454

454:                                              ; preds = %448
  %455 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %452, i64 0, i32 0, i32 0, i32 1
  %456 = load i64, i64* %455, align 8, !noalias !57
  %457 = add nsw i64 %456, 1
  store i64 %457, i64* %455, align 8, !noalias !57
  br label %458

458:                                              ; preds = %454, %448
  %459 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %452, i64 0, i32 1
  %460 = load i32, i32* %459, align 4
  %461 = icmp eq i32 %460, 1
  br i1 %461, label %462, label %488

462:                                              ; preds = %458
  %463 = load %class.CFX_CSSNumberValue*, %class.CFX_CSSNumberValue** %428, align 8, !noalias !60
  %464 = icmp eq %class.CFX_CSSNumberValue* %463, null
  br i1 %464, label %483, label %465

465:                                              ; preds = %462
  %466 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %463, i64 0, i32 0, i32 0, i32 1
  %467 = load i64, i64* %466, align 8, !noalias !60
  %468 = add nsw i64 %467, 1
  store i64 %468, i64* %466, align 8, !noalias !60
  %469 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %463, i64 0, i32 2
  %470 = load float, float* %469, align 8
  %471 = fdiv float %470, 1.000000e+02
  %472 = getelementptr inbounds %class.CFX_CSSLength, %class.CFX_CSSLength* %449, i64 0, i32 0
  store i8 4, i8* %472, align 4
  %473 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 0, i32 1
  store float %471, float* %473, align 4
  %474 = load i64, i64* %466, align 8
  %475 = add nsw i64 %474, -1
  store i64 %475, i64* %466, align 8
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %492

477:                                              ; preds = %465
  %478 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %463, i64 0, i32 0, i32 0
  %479 = bitcast %class.CFX_CSSNumberValue* %463 to void (%"class.fxcrt::Retainable"*)***
  %480 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %479, align 8
  %481 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %480, i64 1
  %482 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %481, align 8
  tail call void %482(%"class.fxcrt::Retainable"* nonnull %478) #11
  br label %492

483:                                              ; preds = %462
  %484 = load float, float* inttoptr (i64 24 to float*), align 8
  %485 = fdiv float %484, 1.000000e+02
  %486 = getelementptr inbounds %class.CFX_CSSLength, %class.CFX_CSSLength* %449, i64 0, i32 0
  store i8 4, i8* %486, align 4
  %487 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 0, i32 1
  store float %485, float* %487, align 4
  br label %492

488:                                              ; preds = %458
  %489 = tail call float @_ZNK18CFX_CSSNumberValue5ApplyEf(%class.CFX_CSSNumberValue* %452, float %451) #11
  %490 = getelementptr inbounds %class.CFX_CSSLength, %class.CFX_CSSLength* %449, i64 0, i32 0
  store i8 3, i8* %490, align 4
  %491 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 0, i32 1
  store float %489, float* %491, align 4
  br label %492

492:                                              ; preds = %465, %477, %483, %488
  br i1 %453, label %668, label %493

493:                                              ; preds = %492
  %494 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %452, i64 0, i32 0, i32 0, i32 1
  %495 = load i64, i64* %494, align 8
  %496 = add nsw i64 %495, -1
  store i64 %496, i64* %494, align 8
  %497 = icmp eq i64 %496, 0
  br i1 %497, label %498, label %668

498:                                              ; preds = %493
  %499 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %452, i64 0, i32 0, i32 0
  %500 = bitcast %class.CFX_CSSNumberValue* %452 to void (%"class.fxcrt::Retainable"*)***
  %501 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %500, align 8
  %502 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %501, i64 1
  %503 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %502, align 8
  tail call void %503(%"class.fxcrt::Retainable"* nonnull %499) #11
  br label %668

504:                                              ; preds = %12
  switch i8 %9, label %668 [
    i8 4, label %505
    i8 1, label %507
  ]

505:                                              ; preds = %504
  %506 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 1, i32 0
  store i8 2, i8* %506, align 4
  br label %668

507:                                              ; preds = %504
  %508 = bitcast %"class.fxcrt::RetainPtr.18"* %2 to %class.CFX_CSSNumberValue**
  %509 = icmp eq %class.CFX_CSSValue* %7, null
  br i1 %509, label %510, label %513

510:                                              ; preds = %507
  %511 = load i32, i32* inttoptr (i64 20 to i32*), align 4
  %512 = icmp eq i32 %511, 1
  br i1 %512, label %668, label %528

513:                                              ; preds = %507
  %514 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0, i32 1
  %515 = load i64, i64* %514, align 8, !noalias !63
  %516 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 2, i64 3
  %517 = bitcast i8* %516 to i32*
  %518 = load i32, i32* %517, align 4
  %519 = icmp eq i32 %518, 1
  store i64 %515, i64* %514, align 8
  %520 = icmp eq i64 %515, 0
  br i1 %520, label %521, label %527

521:                                              ; preds = %513
  %522 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0
  %523 = bitcast %class.CFX_CSSValue* %7 to void (%"class.fxcrt::Retainable"*)***
  %524 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %523, align 8
  %525 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %524, i64 1
  %526 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %525, align 8
  tail call void %526(%"class.fxcrt::Retainable"* nonnull %522) #11
  br i1 %519, label %668, label %528

527:                                              ; preds = %513
  br i1 %519, label %668, label %528

528:                                              ; preds = %521, %510, %527
  %529 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 1
  %530 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %531 = load float, float* %530, align 8
  %532 = load %class.CFX_CSSNumberValue*, %class.CFX_CSSNumberValue** %508, align 8, !noalias !66
  %533 = icmp eq %class.CFX_CSSNumberValue* %532, null
  br i1 %533, label %538, label %534

534:                                              ; preds = %528
  %535 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %532, i64 0, i32 0, i32 0, i32 1
  %536 = load i64, i64* %535, align 8, !noalias !66
  %537 = add nsw i64 %536, 1
  store i64 %537, i64* %535, align 8, !noalias !66
  br label %538

538:                                              ; preds = %534, %528
  %539 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %532, i64 0, i32 1
  %540 = load i32, i32* %539, align 4
  %541 = icmp eq i32 %540, 1
  br i1 %541, label %542, label %568

542:                                              ; preds = %538
  %543 = load %class.CFX_CSSNumberValue*, %class.CFX_CSSNumberValue** %508, align 8, !noalias !69
  %544 = icmp eq %class.CFX_CSSNumberValue* %543, null
  br i1 %544, label %563, label %545

545:                                              ; preds = %542
  %546 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %543, i64 0, i32 0, i32 0, i32 1
  %547 = load i64, i64* %546, align 8, !noalias !69
  %548 = add nsw i64 %547, 1
  store i64 %548, i64* %546, align 8, !noalias !69
  %549 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %543, i64 0, i32 2
  %550 = load float, float* %549, align 8
  %551 = fdiv float %550, 1.000000e+02
  %552 = getelementptr inbounds %class.CFX_CSSLength, %class.CFX_CSSLength* %529, i64 0, i32 0
  store i8 4, i8* %552, align 4
  %553 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 1, i32 1
  store float %551, float* %553, align 4
  %554 = load i64, i64* %546, align 8
  %555 = add nsw i64 %554, -1
  store i64 %555, i64* %546, align 8
  %556 = icmp eq i64 %555, 0
  br i1 %556, label %557, label %572

557:                                              ; preds = %545
  %558 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %543, i64 0, i32 0, i32 0
  %559 = bitcast %class.CFX_CSSNumberValue* %543 to void (%"class.fxcrt::Retainable"*)***
  %560 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %559, align 8
  %561 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %560, i64 1
  %562 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %561, align 8
  tail call void %562(%"class.fxcrt::Retainable"* nonnull %558) #11
  br label %572

563:                                              ; preds = %542
  %564 = load float, float* inttoptr (i64 24 to float*), align 8
  %565 = fdiv float %564, 1.000000e+02
  %566 = getelementptr inbounds %class.CFX_CSSLength, %class.CFX_CSSLength* %529, i64 0, i32 0
  store i8 4, i8* %566, align 4
  %567 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 1, i32 1
  store float %565, float* %567, align 4
  br label %572

568:                                              ; preds = %538
  %569 = tail call float @_ZNK18CFX_CSSNumberValue5ApplyEf(%class.CFX_CSSNumberValue* %532, float %531) #11
  %570 = getelementptr inbounds %class.CFX_CSSLength, %class.CFX_CSSLength* %529, i64 0, i32 0
  store i8 3, i8* %570, align 4
  %571 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 1, i32 1
  store float %569, float* %571, align 4
  br label %572

572:                                              ; preds = %545, %557, %563, %568
  br i1 %533, label %668, label %573

573:                                              ; preds = %572
  %574 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %532, i64 0, i32 0, i32 0, i32 1
  %575 = load i64, i64* %574, align 8
  %576 = add nsw i64 %575, -1
  store i64 %576, i64* %574, align 8
  %577 = icmp eq i64 %576, 0
  br i1 %577, label %578, label %668

578:                                              ; preds = %573
  %579 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %532, i64 0, i32 0, i32 0
  %580 = bitcast %class.CFX_CSSNumberValue* %532 to void (%"class.fxcrt::Retainable"*)***
  %581 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %580, align 8
  %582 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %581, i64 1
  %583 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %582, align 8
  tail call void %583(%"class.fxcrt::Retainable"* nonnull %579) #11
  br label %668

584:                                              ; preds = %12
  %585 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 3
  %586 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %587 = load float, float* %586, align 8
  %588 = tail call zeroext i1 @_ZN20CFX_CSSStyleSelector20SetLengthWithPercentER13CFX_CSSLengthN12CFX_CSSValue13PrimitiveTypeERKN5fxcrt9RetainPtrIS2_EEf(%class.CFX_CSSStyleSelector* undef, %class.CFX_CSSLength* dereferenceable(8) %585, i8 zeroext %9, %"class.fxcrt::RetainPtr.18"* dereferenceable(8) %2, float %587)
  br label %668

589:                                              ; preds = %12
  %590 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 4
  %591 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %592 = load float, float* %591, align 8
  %593 = tail call zeroext i1 @_ZN20CFX_CSSStyleSelector20SetLengthWithPercentER13CFX_CSSLengthN12CFX_CSSValue13PrimitiveTypeERKN5fxcrt9RetainPtrIS2_EEf(%class.CFX_CSSStyleSelector* undef, %class.CFX_CSSLength* dereferenceable(8) %590, i8 zeroext %9, %"class.fxcrt::RetainPtr.18"* dereferenceable(8) %2, float %592)
  br label %668

594:                                              ; preds = %12
  %595 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 5
  %596 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %597 = load float, float* %596, align 8
  %598 = tail call zeroext i1 @_ZN20CFX_CSSStyleSelector20SetLengthWithPercentER13CFX_CSSLengthN12CFX_CSSValue13PrimitiveTypeERKN5fxcrt9RetainPtrIS2_EEf(%class.CFX_CSSStyleSelector* undef, %class.CFX_CSSLength* dereferenceable(8) %595, i8 zeroext %9, %"class.fxcrt::RetainPtr.18"* dereferenceable(8) %2, float %597)
  br label %668

599:                                              ; preds = %12
  %600 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 6
  %601 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %602 = load float, float* %601, align 8
  %603 = tail call zeroext i1 @_ZN20CFX_CSSStyleSelector20SetLengthWithPercentER13CFX_CSSLengthN12CFX_CSSValue13PrimitiveTypeERKN5fxcrt9RetainPtrIS2_EEf(%class.CFX_CSSStyleSelector* undef, %class.CFX_CSSLength* dereferenceable(8) %600, i8 zeroext %9, %"class.fxcrt::RetainPtr.18"* dereferenceable(8) %2, float %602)
  br label %668

604:                                              ; preds = %4
  %605 = bitcast %"class.fxcrt::RetainPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %605) #11
  %606 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %607 = ptrtoint %class.CFX_CSSValue* %7 to i64
  %608 = bitcast %"class.fxcrt::RetainPtr"* %5 to i64*
  store i64 %607, i64* %608, align 8, !alias.scope !72
  %609 = icmp eq %class.CFX_CSSValue* %7, null
  br i1 %609, label %614, label %610

610:                                              ; preds = %604
  %611 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0, i32 1
  %612 = load i64, i64* %611, align 8, !noalias !72
  %613 = add nsw i64 %612, 1
  store i64 %613, i64* %611, align 8, !noalias !72
  br label %614

614:                                              ; preds = %604, %610
  %615 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 1
  %616 = bitcast %class.CFX_CSSValue* %615 to %"class.fxcrt::RetainPtr.18"**
  %617 = load %"class.fxcrt::RetainPtr.18"*, %"class.fxcrt::RetainPtr.18"** %616, align 8
  %618 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 1, i32 0, i32 1
  %619 = bitcast i64* %618 to %"class.fxcrt::RetainPtr.18"**
  %620 = load %"class.fxcrt::RetainPtr.18"*, %"class.fxcrt::RetainPtr.18"** %619, align 8
  %621 = icmp eq %"class.fxcrt::RetainPtr.18"* %617, %620
  br i1 %621, label %645, label %622

622:                                              ; preds = %614
  switch i8 %1, label %645 [
    i8 12, label %623
    i8 36, label %640
  ]

623:                                              ; preds = %622
  %624 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 3
  store %class.CFX_CSSValueList* null, %class.CFX_CSSValueList** %606, align 8
  %625 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %624, i64 0, i32 0, i32 0, i32 0, i32 0
  %626 = load %class.CFX_CSSValueList*, %class.CFX_CSSValueList** %625, align 8
  %627 = bitcast %"class.fxcrt::RetainPtr"* %624 to i64*
  store i64 %607, i64* %627, align 8
  %628 = icmp eq %class.CFX_CSSValueList* %626, null
  br i1 %628, label %644, label %629

629:                                              ; preds = %623
  %630 = getelementptr inbounds %class.CFX_CSSValueList, %class.CFX_CSSValueList* %626, i64 0, i32 0, i32 0, i32 1
  %631 = load i64, i64* %630, align 8
  %632 = add nsw i64 %631, -1
  store i64 %632, i64* %630, align 8
  %633 = icmp eq i64 %632, 0
  br i1 %633, label %634, label %644

634:                                              ; preds = %629
  %635 = getelementptr inbounds %class.CFX_CSSValueList, %class.CFX_CSSValueList* %626, i64 0, i32 0, i32 0
  %636 = bitcast %class.CFX_CSSValueList* %626 to void (%"class.fxcrt::Retainable"*)***
  %637 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %636, align 8
  %638 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %637, i64 1
  %639 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %638, align 8
  tail call void %639(%"class.fxcrt::Retainable"* nonnull %635) #11
  br label %644

640:                                              ; preds = %622
  %641 = call i32 @_ZN20CFX_CSSStyleSelector16ToTextDecorationERKN5fxcrt9RetainPtrI16CFX_CSSValueListEE(%class.CFX_CSSStyleSelector* undef, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %5)
  %642 = trunc i32 %641 to i8
  %643 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 10
  store i8 %642, i8* %643, align 2
  br label %645

644:                                              ; preds = %634, %629, %623
  store %class.CFX_CSSValueList* null, %class.CFX_CSSValueList** %606, align 8
  br label %658

645:                                              ; preds = %640, %622, %614
  store %class.CFX_CSSValueList* null, %class.CFX_CSSValueList** %606, align 8
  %646 = icmp eq %class.CFX_CSSValue* %7, null
  br i1 %646, label %658, label %647

647:                                              ; preds = %645
  %648 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0, i32 1
  %649 = load i64, i64* %648, align 8
  %650 = add nsw i64 %649, -1
  store i64 %650, i64* %648, align 8
  %651 = icmp eq i64 %650, 0
  br i1 %651, label %652, label %658

652:                                              ; preds = %647
  %653 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %7, i64 0, i32 0
  %654 = bitcast %class.CFX_CSSValue* %7 to void (%"class.fxcrt::Retainable"*)***
  %655 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %654, align 8
  %656 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %655, i64 1
  %657 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %656, align 8
  tail call void %657(%"class.fxcrt::Retainable"* nonnull %653) #11
  br label %658

658:                                              ; preds = %644, %645, %647, %652
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %605) #11
  br label %668

659:                                              ; preds = %65
  %660 = load i8, i8* inttoptr (i64 17 to i8*), align 1
  %661 = load float, float* %44, align 4
  %662 = tail call float @_ZN20CFX_CSSStyleSelector10ToFontSizeE20CFX_CSSPropertyValuef(%class.CFX_CSSStyleSelector* %0, i8 zeroext %660, float %661)
  store float %662, float* %44, align 4
  br label %668

663:                                              ; preds = %375
  %664 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 1, i32 4
  %665 = load float, float* %664, align 8
  %666 = tail call float @_ZNK18CFX_CSSNumberValue5ApplyEf(%class.CFX_CSSNumberValue* null, float %665) #11
  %667 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %3, i64 0, i32 2, i32 7
  store float %666, float* %667, align 8
  br label %668

668:                                              ; preds = %663, %659, %578, %573, %572, %521, %510, %498, %493, %492, %441, %430, %418, %406, %401, %391, %380, %369, %364, %361, %254, %243, %240, %230, %225, %222, %176, %171, %168, %144, %139, %136, %116, %111, %108, %78, %67, %59, %50, %47, %37, %32, %29, %150, %584, %589, %594, %599, %13, %84, %122, %210, %236, %265, %260, %272, %267, %279, %274, %286, %281, %293, %288, %300, %295, %307, %302, %314, %309, %321, %316, %328, %323, %335, %330, %342, %337, %397, %447, %425, %527, %505, %12, %43, %155, %205, %201, %344, %424, %504, %658
  ret void
}

declare void @_ZN20CFX_CSSComputedStyle14AddCustomStyleERK21CFX_CSSCustomProperty(%class.CFX_CSSComputedStyle*, %class.CFX_CSSCustomProperty* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN19CFX_CSSSyntaxParser24SetParseOnlyDeclarationsEv(%class.CFX_CSSSyntaxParser*) local_unnamed_addr #1

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #1

declare zeroext i8 @_ZN19CFX_CSSSyntaxParser13DoSyntaxParseEv(%class.CFX_CSSSyntaxParser*) local_unnamed_addr #1

declare void @_ZNK19CFX_CSSSyntaxParser16GetCurrentStringEv(%"class.fxcrt::StringViewTemplate"* sret, %class.CFX_CSSSyntaxParser*) local_unnamed_addr #1

declare %"struct.CFX_CSSData::Property"* @_ZN11CFX_CSSData17GetPropertyByNameEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i8 @_ZN20CFX_CSSStyleSelector9ToDisplayE20CFX_CSSPropertyValue(%class.CFX_CSSStyleSelector* nocapture readnone, i8 zeroext) local_unnamed_addr #5 align 2 {
  switch i8 %1, label %7 [
    i8 37, label %8
    i8 1, label %3
    i8 26, label %4
    i8 34, label %5
    i8 35, label %6
  ]

3:                                                ; preds = %2
  br label %8

4:                                                ; preds = %2
  br label %8

5:                                                ; preds = %2
  br label %8

6:                                                ; preds = %2
  br label %8

7:                                                ; preds = %2
  br label %8

8:                                                ; preds = %2, %7, %6, %5, %4, %3
  %9 = phi i8 [ 3, %7 ], [ 4, %6 ], [ 5, %5 ], [ 1, %4 ], [ 0, %3 ], [ 2, %2 ]
  ret i8 %9
}

declare float @_ZNK18CFX_CSSNumberValue5ApplyEf(%class.CFX_CSSNumberValue*, float) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZN20CFX_CSSStyleSelector10ToFontSizeE20CFX_CSSPropertyValuef(%class.CFX_CSSStyleSelector* nocapture readonly, i8 zeroext, float) local_unnamed_addr #6 align 2 {
  switch i8 %1, label %41 [
    i8 27, label %4
    i8 9, label %10
    i8 11, label %15
    i8 25, label %19
    i8 41, label %22
    i8 40, label %26
    i8 19, label %31
    i8 33, label %37
    i8 20, label %39
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %class.CFX_CSSStyleSelector, %class.CFX_CSSStyleSelector* %0, i64 0, i32 0
  %6 = load float, float* %5, align 8
  %7 = fdiv float %6, 0x3FF3333340000000
  %8 = fdiv float %7, 0x3FF3333340000000
  %9 = fdiv float %8, 0x3FF3333340000000
  br label %41

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.CFX_CSSStyleSelector, %class.CFX_CSSStyleSelector* %0, i64 0, i32 0
  %12 = load float, float* %11, align 8
  %13 = fdiv float %12, 0x3FF3333340000000
  %14 = fdiv float %13, 0x3FF3333340000000
  br label %41

15:                                               ; preds = %3
  %16 = getelementptr inbounds %class.CFX_CSSStyleSelector, %class.CFX_CSSStyleSelector* %0, i64 0, i32 0
  %17 = load float, float* %16, align 8
  %18 = fdiv float %17, 0x3FF3333340000000
  br label %41

19:                                               ; preds = %3
  %20 = getelementptr inbounds %class.CFX_CSSStyleSelector, %class.CFX_CSSStyleSelector* %0, i64 0, i32 0
  %21 = load float, float* %20, align 8
  br label %41

22:                                               ; preds = %3
  %23 = getelementptr inbounds %class.CFX_CSSStyleSelector, %class.CFX_CSSStyleSelector* %0, i64 0, i32 0
  %24 = load float, float* %23, align 8
  %25 = fmul float %24, 0x3FF3333340000000
  br label %41

26:                                               ; preds = %3
  %27 = getelementptr inbounds %class.CFX_CSSStyleSelector, %class.CFX_CSSStyleSelector* %0, i64 0, i32 0
  %28 = load float, float* %27, align 8
  %29 = fmul float %28, 0x3FF3333340000000
  %30 = fmul float %29, 0x3FF3333340000000
  br label %41

31:                                               ; preds = %3
  %32 = getelementptr inbounds %class.CFX_CSSStyleSelector, %class.CFX_CSSStyleSelector* %0, i64 0, i32 0
  %33 = load float, float* %32, align 8
  %34 = fmul float %33, 0x3FF3333340000000
  %35 = fmul float %34, 0x3FF3333340000000
  %36 = fmul float %35, 0x3FF3333340000000
  br label %41

37:                                               ; preds = %3
  %38 = fmul float %2, 0x3FF3333340000000
  br label %41

39:                                               ; preds = %3
  %40 = fdiv float %2, 0x3FF3333340000000
  br label %41

41:                                               ; preds = %3, %39, %37, %31, %26, %22, %19, %15, %10, %4
  %42 = phi float [ %40, %39 ], [ %38, %37 ], [ %36, %31 ], [ %30, %26 ], [ %25, %22 ], [ %21, %19 ], [ %18, %15 ], [ %14, %10 ], [ %9, %4 ], [ %2, %3 ]
  ret float %42
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i8 @_ZN20CFX_CSSStyleSelector11ToTextAlignE20CFX_CSSPropertyValue(%class.CFX_CSSStyleSelector* nocapture readnone, i8 zeroext) local_unnamed_addr #5 align 2 {
  switch i8 %1, label %5 [
    i8 18, label %6
    i8 5, label %3
    i8 23, label %4
  ]

3:                                                ; preds = %2
  br label %6

4:                                                ; preds = %2
  br label %6

5:                                                ; preds = %2
  br label %6

6:                                                ; preds = %2, %5, %4, %3
  %7 = phi i8 [ 0, %5 ], [ 3, %4 ], [ 1, %3 ], [ 2, %2 ]
  ret i8 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20CFX_CSSStyleSelector20SetLengthWithPercentER13CFX_CSSLengthN12CFX_CSSValue13PrimitiveTypeERKN5fxcrt9RetainPtrIS2_EEf(%class.CFX_CSSStyleSelector* nocapture readnone, %class.CFX_CSSLength* nocapture dereferenceable(8), i8 zeroext, %"class.fxcrt::RetainPtr.18"* nocapture readonly dereferenceable(8), float) local_unnamed_addr #0 align 2 {
  switch i8 %2, label %96 [
    i8 1, label %6
    i8 4, label %63
  ]

6:                                                ; preds = %5
  %7 = bitcast %"class.fxcrt::RetainPtr.18"* %3 to %class.CFX_CSSNumberValue**
  %8 = load %class.CFX_CSSNumberValue*, %class.CFX_CSSNumberValue** %7, align 8, !noalias !75
  %9 = icmp eq %class.CFX_CSSNumberValue* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %8, i64 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8, !noalias !75
  %13 = add nsw i64 %12, 1
  store i64 %13, i64* %11, align 8, !noalias !75
  br label %14

14:                                               ; preds = %6, %10
  %15 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %8, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %44

18:                                               ; preds = %14
  %19 = load %class.CFX_CSSNumberValue*, %class.CFX_CSSNumberValue** %7, align 8, !noalias !78
  %20 = icmp eq %class.CFX_CSSNumberValue* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %19, i64 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8, !noalias !78
  %24 = add nsw i64 %23, 1
  store i64 %24, i64* %22, align 8, !noalias !78
  br label %25

25:                                               ; preds = %18, %21
  %26 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %19, i64 0, i32 2
  %27 = load float, float* %26, align 8
  %28 = fdiv float %27, 1.000000e+02
  %29 = getelementptr inbounds %class.CFX_CSSLength, %class.CFX_CSSLength* %1, i64 0, i32 0
  store i8 4, i8* %29, align 4
  %30 = getelementptr inbounds %class.CFX_CSSLength, %class.CFX_CSSLength* %1, i64 0, i32 1
  store float %28, float* %30, align 4
  br i1 %20, label %42, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %19, i64 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = add nsw i64 %33, -1
  store i64 %34, i64* %32, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %42

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %19, i64 0, i32 0, i32 0
  %38 = bitcast %class.CFX_CSSNumberValue* %19 to void (%"class.fxcrt::Retainable"*)***
  %39 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %39, i64 1
  %41 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %40, align 8
  tail call void %41(%"class.fxcrt::Retainable"* nonnull %37) #11
  br label %42

42:                                               ; preds = %25, %31, %36
  %43 = load float, float* %30, align 4
  br label %48

44:                                               ; preds = %14
  %45 = tail call float @_ZNK18CFX_CSSNumberValue5ApplyEf(%class.CFX_CSSNumberValue* %8, float %4) #11
  %46 = getelementptr inbounds %class.CFX_CSSLength, %class.CFX_CSSLength* %1, i64 0, i32 0
  store i8 3, i8* %46, align 4
  %47 = getelementptr inbounds %class.CFX_CSSLength, %class.CFX_CSSLength* %1, i64 0, i32 1
  store float %45, float* %47, align 4
  br label %48

48:                                               ; preds = %44, %42
  %49 = phi float [ %43, %42 ], [ %45, %44 ]
  %50 = fptosi float %49 to i32
  %51 = icmp ne i32 %50, 0
  br i1 %9, label %96, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %8, i64 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = add nsw i64 %54, -1
  store i64 %55, i64* %53, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %96

57:                                               ; preds = %52
  %58 = getelementptr inbounds %class.CFX_CSSNumberValue, %class.CFX_CSSNumberValue* %8, i64 0, i32 0, i32 0
  %59 = bitcast %class.CFX_CSSNumberValue* %8 to void (%"class.fxcrt::Retainable"*)***
  %60 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %60, i64 1
  %62 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %61, align 8
  tail call void %62(%"class.fxcrt::Retainable"* nonnull %58) #11
  br label %96

63:                                               ; preds = %5
  %64 = bitcast %"class.fxcrt::RetainPtr.18"* %3 to %class.CFX_CSSEnumValue**
  %65 = load %class.CFX_CSSEnumValue*, %class.CFX_CSSEnumValue** %64, align 8, !noalias !81
  %66 = icmp eq %class.CFX_CSSEnumValue* %65, null
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  %68 = load i8, i8* inttoptr (i64 17 to i8*), align 1
  br label %81

69:                                               ; preds = %63
  %70 = getelementptr inbounds %class.CFX_CSSEnumValue, %class.CFX_CSSEnumValue* %65, i64 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8, !noalias !81
  %72 = getelementptr inbounds %class.CFX_CSSEnumValue, %class.CFX_CSSEnumValue* %65, i64 0, i32 1
  %73 = load i8, i8* %72, align 1
  store i64 %71, i64* %70, align 8
  %74 = icmp eq i64 %71, 0
  br i1 %74, label %75, label %81

75:                                               ; preds = %69
  %76 = getelementptr inbounds %class.CFX_CSSEnumValue, %class.CFX_CSSEnumValue* %65, i64 0, i32 0, i32 0
  %77 = bitcast %class.CFX_CSSEnumValue* %65 to void (%"class.fxcrt::Retainable"*)***
  %78 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %78, i64 1
  %80 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %79, align 8
  tail call void %80(%"class.fxcrt::Retainable"* nonnull %76) #11
  br label %81

81:                                               ; preds = %67, %69, %75
  %82 = phi i8 [ %68, %67 ], [ %73, %69 ], [ %73, %75 ]
  switch i8 %82, label %96 [
    i8 7, label %83
    i8 1, label %85
    i8 10, label %87
    i8 25, label %90
    i8 22, label %93
  ]

83:                                               ; preds = %81
  %84 = getelementptr inbounds %class.CFX_CSSLength, %class.CFX_CSSLength* %1, i64 0, i32 0
  store i8 0, i8* %84, align 4
  br label %96

85:                                               ; preds = %81
  %86 = getelementptr inbounds %class.CFX_CSSLength, %class.CFX_CSSLength* %1, i64 0, i32 0
  store i8 1, i8* %86, align 4
  br label %96

87:                                               ; preds = %81
  %88 = getelementptr inbounds %class.CFX_CSSLength, %class.CFX_CSSLength* %1, i64 0, i32 0
  store i8 3, i8* %88, align 4
  %89 = getelementptr inbounds %class.CFX_CSSLength, %class.CFX_CSSLength* %1, i64 0, i32 1
  store float 2.000000e+00, float* %89, align 4
  br label %96

90:                                               ; preds = %81
  %91 = getelementptr inbounds %class.CFX_CSSLength, %class.CFX_CSSLength* %1, i64 0, i32 0
  store i8 3, i8* %91, align 4
  %92 = getelementptr inbounds %class.CFX_CSSLength, %class.CFX_CSSLength* %1, i64 0, i32 1
  store float 3.000000e+00, float* %92, align 4
  br label %96

93:                                               ; preds = %81
  %94 = getelementptr inbounds %class.CFX_CSSLength, %class.CFX_CSSLength* %1, i64 0, i32 0
  store i8 3, i8* %94, align 4
  %95 = getelementptr inbounds %class.CFX_CSSLength, %class.CFX_CSSLength* %1, i64 0, i32 1
  store float 4.000000e+00, float* %95, align 4
  br label %96

96:                                               ; preds = %57, %52, %48, %5, %81, %93, %90, %87, %85, %83
  %97 = phi i1 [ true, %93 ], [ true, %90 ], [ true, %87 ], [ true, %85 ], [ true, %83 ], [ false, %81 ], [ false, %5 ], [ %51, %48 ], [ %51, %52 ], [ %51, %57 ]
  ret i1 %97
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i16 @_ZN20CFX_CSSStyleSelector12ToFontWeightE20CFX_CSSPropertyValue(%class.CFX_CSSStyleSelector* nocapture readnone, i8 zeroext) local_unnamed_addr #5 align 2 {
  switch i8 %1, label %5 [
    i8 28, label %6
    i8 0, label %3
    i8 15, label %4
  ]

3:                                                ; preds = %2
  br label %6

4:                                                ; preds = %2
  br label %6

5:                                                ; preds = %2
  br label %6

6:                                                ; preds = %2, %5, %4, %3
  %7 = phi i16 [ 400, %5 ], [ 200, %4 ], [ 900, %3 ], [ 700, %2 ]
  ret i16 %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i8 @_ZN20CFX_CSSStyleSelector11ToFontStyleE20CFX_CSSPropertyValue(%class.CFX_CSSStyleSelector* nocapture readnone, i8 zeroext) local_unnamed_addr #5 align 2 {
  switch i8 %1, label %3 [
    i8 38, label %4
    i8 16, label %4
  ]

3:                                                ; preds = %2
  br label %4

4:                                                ; preds = %2, %2, %3
  %5 = phi i8 [ 0, %3 ], [ 1, %2 ], [ 1, %2 ]
  ret i8 %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i8 @_ZN20CFX_CSSStyleSelector15ToVerticalAlignE20CFX_CSSPropertyValue(%class.CFX_CSSStyleSelector* nocapture readnone, i8 zeroext) local_unnamed_addr #5 align 2 {
  switch i8 %1, label %9 [
    i8 24, label %10
    i8 12, label %3
    i8 17, label %4
    i8 3, label %5
    i8 4, label %6
    i8 43, label %7
    i8 32, label %8
  ]

3:                                                ; preds = %2
  br label %10

4:                                                ; preds = %2
  br label %10

5:                                                ; preds = %2
  br label %10

6:                                                ; preds = %2
  br label %10

7:                                                ; preds = %2
  br label %10

8:                                                ; preds = %2
  br label %10

9:                                                ; preds = %2
  br label %10

10:                                               ; preds = %2, %9, %8, %7, %6, %5, %4, %3
  %11 = phi i8 [ 0, %9 ], [ 7, %8 ], [ 4, %7 ], [ 3, %6 ], [ 1, %5 ], [ 2, %4 ], [ 6, %3 ], [ 5, %2 ]
  ret i8 %11
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i8 @_ZN20CFX_CSSStyleSelector13ToFontVariantE20CFX_CSSPropertyValue(%class.CFX_CSSStyleSelector* nocapture readnone, i8 zeroext) local_unnamed_addr #5 align 2 {
  %3 = icmp eq i8 %1, 29
  %4 = zext i1 %3 to i8
  ret i8 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN20CFX_CSSStyleSelector16ToTextDecorationERKN5fxcrt9RetainPtrI16CFX_CSSValueListEE(%class.CFX_CSSStyleSelector* nocapture readnone, %"class.fxcrt::RetainPtr"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CFX_CSSValueList*, %class.CFX_CSSValueList** %3, align 8
  %5 = getelementptr inbounds %class.CFX_CSSValueList, %class.CFX_CSSValueList* %4, i64 0, i32 1, i32 0, i32 1
  %6 = load %"class.fxcrt::RetainPtr.18"*, %"class.fxcrt::RetainPtr.18"** %5, align 8
  %7 = getelementptr inbounds %class.CFX_CSSValueList, %class.CFX_CSSValueList* %4, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.fxcrt::RetainPtr.18"*, %"class.fxcrt::RetainPtr.18"** %7, align 8
  %9 = icmp eq %"class.fxcrt::RetainPtr.18"* %6, %8
  br i1 %9, label %10, label %12

10:                                               ; preds = %49, %2
  %11 = phi i32 [ 0, %2 ], [ %50, %49 ]
  ret i32 %11

12:                                               ; preds = %2, %49
  %13 = phi i32 [ %50, %49 ], [ 0, %2 ]
  %14 = phi %"class.fxcrt::RetainPtr.18"* [ %15, %49 ], [ %6, %2 ]
  %15 = getelementptr inbounds %"class.fxcrt::RetainPtr.18", %"class.fxcrt::RetainPtr.18"* %14, i64 -1
  %16 = getelementptr inbounds %"class.fxcrt::RetainPtr.18", %"class.fxcrt::RetainPtr.18"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %16, align 8
  %18 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %17, i64 0, i32 1
  %19 = load i8, i8* %18, align 8
  %20 = icmp eq i8 %19, 4
  br i1 %20, label %21, label %49

21:                                               ; preds = %12
  %22 = icmp eq %class.CFX_CSSValue* %17, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = load i8, i8* inttoptr (i64 17 to i8*), align 1
  br label %37

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %17, i64 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8, !noalias !84
  %28 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %17, i64 0, i32 2, i64 0
  %29 = load i8, i8* %28, align 1
  store i64 %27, i64* %26, align 8
  %30 = icmp eq i64 %27, 0
  br i1 %30, label %31, label %37

31:                                               ; preds = %25
  %32 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %17, i64 0, i32 0
  %33 = bitcast %class.CFX_CSSValue* %17 to void (%"class.fxcrt::Retainable"*)***
  %34 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %34, i64 1
  %36 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %35, align 8
  tail call void %36(%"class.fxcrt::Retainable"* nonnull %32) #11
  br label %37

37:                                               ; preds = %23, %25, %31
  %38 = phi i8 [ %24, %23 ], [ %29, %25 ], [ %29, %31 ]
  switch i8 %38, label %49 [
    i8 13, label %39
    i8 39, label %41
    i8 31, label %43
    i8 36, label %45
    i8 14, label %47
  ]

39:                                               ; preds = %37
  %40 = or i32 %13, 1
  br label %49

41:                                               ; preds = %37
  %42 = or i32 %13, 4
  br label %49

43:                                               ; preds = %37
  %44 = or i32 %13, 2
  br label %49

45:                                               ; preds = %37
  %46 = or i32 %13, 8
  br label %49

47:                                               ; preds = %37
  %48 = or i32 %13, 16
  br label %49

49:                                               ; preds = %39, %41, %43, %45, %47, %37, %12
  %50 = phi i32 [ %13, %12 ], [ %13, %37 ], [ %48, %47 ], [ %46, %45 ], [ %44, %43 ], [ %42, %41 ], [ %40, %39 ]
  %51 = icmp eq %"class.fxcrt::RetainPtr.18"* %15, %8
  br i1 %51, label %10, label %12
}

; Function Attrs: nounwind
declare void @_ZN17CFX_CSSStyleSheetD1Ev(%class.CFX_CSSStyleSheet*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN20CFX_CSSComputedStyleC1Ev(%class.CFX_CSSComputedStyle*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN18CFX_CSSDeclarationD1Ev(%class.CFX_CSSDeclaration*) unnamed_addr #2

declare void @_ZN18CFX_CSSDeclarationC1Ev(%class.CFX_CSSDeclaration*) unnamed_addr #1

declare void @_ZN19CFX_CSSSyntaxParserC1EN5fxcrt18StringViewTemplateIwEE(%class.CFX_CSSSyntaxParser*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN19CFX_CSSSyntaxParserD1Ev(%class.CFX_CSSSyntaxParser*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6pdfium10MakeRetainI20CFX_CSSComputedStyleJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!4 = distinct !{!4, !"_ZN6pdfium10MakeRetainI20CFX_CSSComputedStyleJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!8 = distinct !{!8, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!14 = distinct !{!14, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!17 = distinct !{!17, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI16CFX_CSSEnumValueEENS0_IT_EEv: argument 0"}
!20 = distinct !{!20, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI16CFX_CSSEnumValueEENS0_IT_EEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv: argument 0"}
!23 = distinct !{!23, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI16CFX_CSSEnumValueEENS0_IT_EEv: argument 0"}
!26 = distinct !{!26, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI16CFX_CSSEnumValueEENS0_IT_EEv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv: argument 0"}
!29 = distinct !{!29, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI16CFX_CSSEnumValueEENS0_IT_EEv: argument 0"}
!32 = distinct !{!32, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI16CFX_CSSEnumValueEENS0_IT_EEv"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI16CFX_CSSEnumValueEENS0_IT_EEv: argument 0"}
!35 = distinct !{!35, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI16CFX_CSSEnumValueEENS0_IT_EEv"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv: argument 0"}
!38 = distinct !{!38, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI16CFX_CSSEnumValueEENS0_IT_EEv: argument 0"}
!41 = distinct !{!41, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI16CFX_CSSEnumValueEENS0_IT_EEv"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI17CFX_CSSColorValueEENS0_IT_EEv: argument 0"}
!44 = distinct !{!44, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI17CFX_CSSColorValueEENS0_IT_EEv"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI16CFX_CSSEnumValueEENS0_IT_EEv: argument 0"}
!47 = distinct !{!47, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI16CFX_CSSEnumValueEENS0_IT_EEv"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv: argument 0"}
!50 = distinct !{!50, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI16CFX_CSSEnumValueEENS0_IT_EEv: argument 0"}
!53 = distinct !{!53, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI16CFX_CSSEnumValueEENS0_IT_EEv"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv: argument 0"}
!56 = distinct !{!56, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv: argument 0"}
!59 = distinct !{!59, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv: argument 0"}
!62 = distinct !{!62, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv: argument 0"}
!65 = distinct !{!65, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv: argument 0"}
!68 = distinct !{!68, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv: argument 0"}
!71 = distinct !{!71, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI16CFX_CSSValueListEENS0_IT_EEv: argument 0"}
!74 = distinct !{!74, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI16CFX_CSSValueListEENS0_IT_EEv"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv: argument 0"}
!77 = distinct !{!77, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv: argument 0"}
!80 = distinct !{!80, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSNumberValueEENS0_IT_EEv"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI16CFX_CSSEnumValueEENS0_IT_EEv: argument 0"}
!83 = distinct !{!83, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI16CFX_CSSEnumValueEENS0_IT_EEv"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI16CFX_CSSEnumValueEENS0_IT_EEv: argument 0"}
!86 = distinct !{!86, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI16CFX_CSSEnumValueEENS0_IT_EEv"}
