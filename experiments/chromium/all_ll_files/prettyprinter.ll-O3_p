; ModuleID = '../../v8/src/ast/prettyprinter.cc'
source_filename = "../../v8/src/ast/prettyprinter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::CallPrinter" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8], %"class.std::__1::unique_ptr.1131", i32, i8, i8, i8, i8, i8, i8, [2 x i8], i32, %"class.v8::internal::ObjectLiteralProperty"*, %"class.v8::internal::Assignment"*, %"class.v8::internal::Expression"*, i8, [7 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1131" = type { %"class.std::__1::__compressed_pair.1132" }
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.1133" }
%"struct.std::__1::__compressed_pair_elem.1133" = type { %"class.v8::internal::IncrementalStringBuilder"* }
%"class.v8::internal::IncrementalStringBuilder" = type { %"class.v8::internal::Isolate"*, i32, i8, i32, i32, %"class.v8::internal::Handle.957", %"class.v8::internal::Handle.957" }
%"class.v8::internal::Handle.957" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::ObjectLiteralProperty" = type <{ %"class.v8::internal::LiteralProperty", i8, i8, [6 x i8] }>
%"class.v8::internal::LiteralProperty" = type { %"class.v8::internal::PointerWithPayload", %"class.v8::internal::Expression"* }
%"class.v8::internal::PointerWithPayload" = type { i64 }
%"class.v8::internal::Assignment" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"* }
%"class.v8::internal::Expression" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::AstNode" = type { i32, i32 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.815", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.828", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.838", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.969"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.978", i32, i8, i8, i32, i32, %"class.std::__1::vector.984", %"class.std::__1::vector.984", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.991", i64, %"class.std::__1::unordered_map.992", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1048", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1086", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1120", %"class.std::__1::vector.1124", %"class.std::__1::vector.1124", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1053", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1057", %"class.std::__1::unique_ptr.1063", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1069", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1053" = type { %"struct.std::__1::__atomic_base.1054" }
%"struct.std::__1::__atomic_base.1054" = type { %"struct.std::__1::__cxx_atomic_impl.1055" }
%"struct.std::__1::__cxx_atomic_impl.1055" = type { %"struct.std::__1::__cxx_atomic_base_impl.1056" }
%"struct.std::__1::__cxx_atomic_base_impl.1056" = type { i32 }
%"class.std::__1::unique_ptr.1057" = type { %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.808" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { i64**, i64**, %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { i64** }
%"class.std::__1::unique_ptr.1063" = type { %"class.std::__1::__compressed_pair.1064" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.1065" }
%"struct.std::__1::__compressed_pair_elem.1065" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.808", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1069" = type { %"class.std::__1::__vector_base.1070" }
%"class.std::__1::__vector_base.1070" = type { %"struct.std::__1::pair.1071"*, %"struct.std::__1::pair.1071"*, %"class.std::__1::__compressed_pair.1072" }
%"struct.std::__1::pair.1071" = type opaque
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.1073" }
%"struct.std::__1::__compressed_pair_elem.1073" = type { %"struct.std::__1::pair.1071"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1185" }
%"class.std::__1::__compressed_pair.1185" = type { %"struct.std::__1::__compressed_pair_elem.1186" }
%"struct.std::__1::__compressed_pair_elem.1186" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.744", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.750", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.752", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.772", %"class.std::__1::unique_ptr.779", i64, %"class.std::__1::vector.785", %"class.std::__1::vector.793", %"class.std::__1::vector.801", i8, i8, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.760" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::NodeSpace.768"* }
%"class.v8::internal::GlobalHandles::NodeSpace.768" = type opaque
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.774" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.808", %"class.std::__1::vector.815" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.828" = type { %"struct.std::__1::__atomic_base.829" }
%"struct.std::__1::__atomic_base.829" = type { %"struct.std::__1::__cxx_atomic_impl.830" }
%"struct.std::__1::__cxx_atomic_impl.830" = type { %"struct.std::__1::__cxx_atomic_base_impl.831" }
%"struct.std::__1::__cxx_atomic_base_impl.831" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.845 }
%union.anon.845 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type { %"class.v8::internal::Zone", %"class.v8::base::TemplateHashMapImpl", i64, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ %union.anon.1177, i32, [4 x i8] }>
%union.anon.1177 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::AstRawString" = type <{ %union.anon.956, %"class.v8::internal::Vector", i32, i8, [3 x i8] }>
%union.anon.956 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.964" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.958"**, %"struct.std::__1::pair.958"**, %"struct.std::__1::pair.958"**, %"class.std::__1::__compressed_pair.959" }
%"struct.std::__1::pair.958" = type opaque
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.960" }
%"struct.std::__1::__compressed_pair_elem.960" = type { %"struct.std::__1::pair.958"** }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.969" = type { %"class.std::__1::__vector_base.970" }
%"class.std::__1::__vector_base.970" = type { %"class.v8::internal::Handle.971"*, %"class.v8::internal::Handle.971"*, %"class.std::__1::__compressed_pair.972" }
%"class.v8::internal::Handle.971" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.v8::internal::Handle.971"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector.977", [128 x i8] }
%"class.v8::internal::Vector.977" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.833", i32, %"class.v8::Local.0" }
%"class.v8::Local.833" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.978" = type { %"class.std::__1::__compressed_pair.979" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.980" }
%"struct.std::__1::__compressed_pair_elem.980" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.984" = type { %"class.std::__1::__vector_base.985" }
%"class.std::__1::__vector_base.985" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.986" }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.987" }
%"struct.std::__1::__compressed_pair_elem.987" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.991" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.992" = type { %"class.std::__1::__hash_table.993" }
%"class.std::__1::__hash_table.993" = type <{ %"class.std::__1::unique_ptr.994", %"class.std::__1::__compressed_pair.1004", %"class.std::__1::__compressed_pair.1009", %"class.std::__1::__compressed_pair.1012", [4 x i8] }>
%"class.std::__1::unique_ptr.994" = type { %"class.std::__1::__compressed_pair.995" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.996", %"struct.std::__1::__compressed_pair_elem.998" }
%"struct.std::__1::__compressed_pair_elem.996" = type { %"struct.std::__1::__hash_node_base.997"** }
%"struct.std::__1::__hash_node_base.997" = type { %"struct.std::__1::__hash_node_base.997"* }
%"struct.std::__1::__compressed_pair_elem.998" = type { %"class.std::__1::__bucket_list_deallocator.999" }
%"class.std::__1::__bucket_list_deallocator.999" = type { %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.1005" }
%"struct.std::__1::__compressed_pair_elem.1005" = type { %"struct.std::__1::__hash_node_base.997" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1016", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1045", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1046", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1016" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1041, %union.anon.1043, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1041 = type { i64 }
%union.anon.1043 = type { i64 }
%"class.std::__1::weak_ptr.1045" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1046" = type { %"class.v8::PersistentBase.1047" }
%"class.v8::PersistentBase.1047" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1017", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1017" = type { %"class.std::__1::__hash_table.1018" }
%"class.std::__1::__hash_table.1018" = type <{ %"class.std::__1::unique_ptr.1019", %"class.std::__1::__compressed_pair.1029", %"class.std::__1::__compressed_pair.1034", %"class.std::__1::__compressed_pair.1037", [4 x i8] }>
%"class.std::__1::unique_ptr.1019" = type { %"class.std::__1::__compressed_pair.1020" }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.1021", %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"struct.std::__1::__hash_node_base.1022"** }
%"struct.std::__1::__hash_node_base.1022" = type { %"struct.std::__1::__hash_node_base.1022"* }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"class.std::__1::__bucket_list_deallocator.1024" }
%"class.std::__1::__bucket_list_deallocator.1024" = type { %"class.std::__1::__compressed_pair.1025" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.1030" }
%"struct.std::__1::__compressed_pair_elem.1030" = type { %"struct.std::__1::__hash_node_base.1022" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1048" = type { %"class.std::__1::__compressed_pair.1049" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.1050" }
%"struct.std::__1::__compressed_pair_elem.1050" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1077", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1077" = type { %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1086" = type { %"class.std::__1::__compressed_pair.1087" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.834", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.834" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1094" }
%"class.std::__1::unordered_map.1094" = type { %"class.std::__1::__hash_table.1095" }
%"class.std::__1::__hash_table.1095" = type <{ %"class.std::__1::unique_ptr.1096", %"class.std::__1::__compressed_pair.1106", %"class.std::__1::__compressed_pair.1111", %"class.std::__1::__compressed_pair.1114", [4 x i8] }>
%"class.std::__1::unique_ptr.1096" = type { %"class.std::__1::__compressed_pair.1097" }
%"class.std::__1::__compressed_pair.1097" = type { %"struct.std::__1::__compressed_pair_elem.1098", %"struct.std::__1::__compressed_pair_elem.1100" }
%"struct.std::__1::__compressed_pair_elem.1098" = type { %"struct.std::__1::__hash_node_base.1099"** }
%"struct.std::__1::__hash_node_base.1099" = type { %"struct.std::__1::__hash_node_base.1099"* }
%"struct.std::__1::__compressed_pair_elem.1100" = type { %"class.std::__1::__bucket_list_deallocator.1101" }
%"class.std::__1::__bucket_list_deallocator.1101" = type { %"class.std::__1::__compressed_pair.1102" }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.1107" }
%"struct.std::__1::__compressed_pair_elem.1107" = type { %"struct.std::__1::__hash_node_base.1099" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1120" = type { %"struct.std::__1::__atomic_base.1121" }
%"struct.std::__1::__atomic_base.1121" = type { %"struct.std::__1::__cxx_atomic_impl.1122" }
%"struct.std::__1::__cxx_atomic_impl.1122" = type { %"struct.std::__1::__cxx_atomic_base_impl.1123" }
%"struct.std::__1::__cxx_atomic_base_impl.1123" = type { %"class.std::__1::vector.1124"* }
%"class.std::__1::vector.1124" = type { %"class.std::__1::__vector_base.1125" }
%"class.std::__1::__vector_base.1125" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1126" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1126" = type { %"struct.std::__1::__compressed_pair_elem.1127" }
%"struct.std::__1::__compressed_pair_elem.1127" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::FunctionLiteral" = type { %"class.v8::internal::Expression", i32, i32, i32, i32, i32, i32, %"class.v8::internal::AstConsString"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::ZoneList.1157", %"class.v8::internal::AstConsString"*, %"class.v8::internal::Handle.957", %"class.v8::internal::ProducedPreparseData"* }
%"class.v8::internal::DeclarationScope" = type <{ %"class.v8::internal::Scope.base", i16, i8, [2 x i8], i32, [4 x i8], %"class.v8::internal::ZoneList", %"class.v8::base::ThreadedListBase.1143", %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::PreparseDataBuilder"*, %"struct.v8::internal::DeclarationScope::RareData"* }>
%"class.v8::internal::Scope.base" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::VariableMap", %"class.v8::base::ThreadedListBase", %"class.v8::base::ThreadedListBase.1139", %"class.v8::base::ThreadedListBase.1141", %"class.v8::internal::Handle.1142", i32, i32, i32, i32, i8, i16 }>
%"class.v8::internal::Scope" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::VariableMap", %"class.v8::base::ThreadedListBase", %"class.v8::base::ThreadedListBase.1139", %"class.v8::base::ThreadedListBase.1141", %"class.v8::internal::Handle.1142", i32, i32, i32, i32, i8, i16, [5 x i8] }>
%"class.v8::internal::VariableMap" = type { %"class.v8::base::PointerTemplateHashMapImpl" }
%"class.v8::base::PointerTemplateHashMapImpl" = type { %"class.v8::base::TemplateHashMapImpl.1137" }
%"class.v8::base::TemplateHashMapImpl.1137" = type { %"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::internal::ZoneAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::internal::ZoneAllocationPolicy>::Impl" = type { %"class.v8::internal::ZoneAllocationPolicy", %"struct.v8::base::TemplateHashMapEntry.1138"*, i32, i32 }
%"class.v8::internal::ZoneAllocationPolicy" = type { %"class.v8::internal::Zone"* }
%"struct.v8::base::TemplateHashMapEntry.1138" = type <{ i8*, i8*, i32, [4 x i8] }>
%"class.v8::base::ThreadedListBase" = type { %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** }
%"class.v8::base::ThreadedListBase.1139" = type { %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** }
%"class.v8::internal::VariableProxy" = type { %"class.v8::internal::Expression", %union.anon.1140, %"class.v8::internal::VariableProxy"* }
%union.anon.1140 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::base::ThreadedListBase.1141" = type { %"class.v8::internal::Declaration"*, %"class.v8::internal::Declaration"** }
%"class.v8::internal::Declaration" = type { %"class.v8::internal::AstNode", %"class.v8::internal::Variable"*, %"class.v8::internal::Declaration"* }
%"class.v8::internal::Handle.1142" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::ZoneList" = type { %"class.v8::internal::Variable"**, i32, i32 }
%"class.v8::base::ThreadedListBase.1143" = type { %"class.v8::internal::SloppyBlockFunctionStatement"*, %"class.v8::internal::SloppyBlockFunctionStatement"** }
%"class.v8::internal::SloppyBlockFunctionStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::Variable"*, %"class.v8::internal::Statement"*, %"class.v8::internal::SloppyBlockFunctionStatement"* }
%"class.v8::internal::Statement" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::Variable" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, i32, i32, i16, [6 x i8] }>
%"class.v8::internal::PreparseDataBuilder" = type <{ %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder::ByteData", %union.anon.1154, %"class.v8::internal::DeclarationScope"*, i32, i32, i32, i8, [3 x i8] }>
%"class.v8::internal::PreparseDataBuilder::ByteData" = type <{ %union.anon.1144, i8, [7 x i8] }>
%union.anon.1144 = type { %struct.anon.1145 }
%struct.anon.1145 = type { %"class.std::__1::vector.1146"*, i32 }
%"class.std::__1::vector.1146" = type { %"class.std::__1::__vector_base.1147" }
%"class.std::__1::__vector_base.1147" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1148" }
%"class.std::__1::__compressed_pair.1148" = type { %"struct.std::__1::__compressed_pair_elem.1149" }
%"struct.std::__1::__compressed_pair_elem.1149" = type { i8* }
%union.anon.1154 = type { %"class.v8::internal::ScopedList" }
%"class.v8::internal::ScopedList" = type { %"class.std::__1::vector.1155"*, i64, i64 }
%"class.std::__1::vector.1155" = type { %"class.std::__1::__vector_base.1179" }
%"class.std::__1::__vector_base.1179" = type { i8**, i8**, %"class.std::__1::__compressed_pair.1180" }
%"class.std::__1::__compressed_pair.1180" = type { %"struct.std::__1::__compressed_pair_elem.1181" }
%"struct.std::__1::__compressed_pair_elem.1181" = type { i8** }
%"struct.v8::internal::DeclarationScope::RareData" = type { %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"* }
%"class.v8::internal::ZoneList.1157" = type { %"class.v8::internal::Statement"**, i32, i32 }
%"class.v8::internal::AstConsString" = type { %"class.v8::internal::Handle.957", %"struct.v8::internal::AstConsString::Segment" }
%"struct.v8::internal::AstConsString::Segment" = type { %"class.v8::internal::AstRawString"*, %"struct.v8::internal::AstConsString::Segment"* }
%"class.v8::internal::ProducedPreparseData" = type { i32 (...)** }
%"class.v8::internal::Block" = type { %"class.v8::internal::BreakableStatement", %"class.v8::internal::ZoneList.1157", %"class.v8::internal::Scope"* }
%"class.v8::internal::BreakableStatement" = type { %"class.v8::internal::Statement" }
%"class.v8::internal::VariableDeclaration" = type { %"class.v8::internal::Declaration" }
%"class.v8::internal::FunctionDeclaration" = type { %"class.v8::internal::Declaration", %"class.v8::internal::FunctionLiteral"* }
%"class.v8::internal::ExpressionStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::Expression"* }
%"class.v8::internal::EmptyStatement" = type { %"class.v8::internal::Statement" }
%"class.v8::internal::IfStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::Expression"*, %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"* }
%"class.v8::internal::ContinueStatement" = type { %"class.v8::internal::JumpStatement", %"class.v8::internal::IterationStatement"* }
%"class.v8::internal::JumpStatement" = type { %"class.v8::internal::Statement" }
%"class.v8::internal::IterationStatement" = type { %"class.v8::internal::BreakableStatement", %"class.v8::internal::Statement"* }
%"class.v8::internal::BreakStatement" = type { %"class.v8::internal::JumpStatement", %"class.v8::internal::BreakableStatement"* }
%"class.v8::internal::ReturnStatement" = type <{ %"class.v8::internal::JumpStatement", %"class.v8::internal::Expression"*, i32, [4 x i8] }>
%"class.v8::internal::WithStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::Scope"*, %"class.v8::internal::Expression"*, %"class.v8::internal::Statement"* }
%"class.v8::internal::SwitchStatement" = type { %"class.v8::internal::BreakableStatement", %"class.v8::internal::Expression"*, %"class.v8::internal::ZoneList.1158" }
%"class.v8::internal::ZoneList.1158" = type { %"class.v8::internal::CaseClause"**, i32, i32 }
%"class.v8::internal::CaseClause" = type { %"class.v8::internal::Expression"*, %"class.v8::internal::ZoneList.1157" }
%"class.v8::internal::DoWhileStatement" = type { %"class.v8::internal::IterationStatement", %"class.v8::internal::Expression"* }
%"class.v8::internal::WhileStatement" = type { %"class.v8::internal::IterationStatement", %"class.v8::internal::Expression"* }
%"class.v8::internal::ForStatement" = type { %"class.v8::internal::IterationStatement", %"class.v8::internal::Statement"*, %"class.v8::internal::Expression"*, %"class.v8::internal::Statement"* }
%"class.v8::internal::ForInStatement" = type { %"class.v8::internal::ForEachStatement" }
%"class.v8::internal::ForEachStatement" = type { %"class.v8::internal::IterationStatement", %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"* }
%"class.v8::internal::ForOfStatement" = type <{ %"class.v8::internal::ForEachStatement", i32, [4 x i8] }>
%"class.v8::internal::TryCatchStatement" = type <{ %"class.v8::internal::TryStatement", %"class.v8::internal::Scope"*, %"class.v8::internal::Block"*, i32, [4 x i8] }>
%"class.v8::internal::TryStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::Block"* }
%"class.v8::internal::TryFinallyStatement" = type { %"class.v8::internal::TryStatement", %"class.v8::internal::Block"* }
%"class.v8::internal::DebuggerStatement" = type { %"class.v8::internal::Statement" }
%"class.v8::internal::ClassLiteral" = type { %"class.v8::internal::Expression", i32, %"class.v8::internal::ClassScope"*, %"class.v8::internal::Expression"*, %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::ZoneList.1160"*, %"class.v8::internal::ZoneList.1160"*, %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"* }
%"class.v8::internal::ClassScope" = type <{ %"class.v8::internal::Scope.base", [5 x i8], %"class.v8::internal::PointerWithPayload.1159", %"class.v8::internal::Variable"*, i8, i8, i8, i8, [4 x i8] }>
%"class.v8::internal::PointerWithPayload.1159" = type { i64 }
%"class.v8::internal::ZoneList.1160" = type { %"class.v8::internal::ClassLiteralProperty"**, i32, i32 }
%"class.v8::internal::ClassLiteralProperty" = type { %"class.v8::internal::LiteralProperty", i8, i8, i8, %"class.v8::internal::Variable"* }
%"class.v8::internal::InitializeClassMembersStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::ZoneList.1160"* }
%"class.v8::internal::InitializeClassStaticElementsStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::ZoneList.1161"* }
%"class.v8::internal::ZoneList.1161" = type { %"class.v8::internal::ClassLiteralStaticElement"**, i32, i32 }
%"class.v8::internal::ClassLiteralStaticElement" = type { i8, %union.anon.1162 }
%union.anon.1162 = type { %"class.v8::internal::ClassLiteralProperty"* }
%"class.v8::internal::NativeFunctionLiteral" = type { %"class.v8::internal::Expression", %"class.v8::internal::AstRawString"*, %"class.v8::Extension"* }
%"class.v8::Extension" = type <{ i32 (...)**, i8*, i64, %"class.v8::String::ExternalOneByteStringResource"*, i32, [4 x i8], i8**, i8, [7 x i8] }>
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::internal::Conditional" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"* }
%"class.v8::internal::Literal" = type { %"class.v8::internal::Expression", %union.anon.1163 }
%union.anon.1163 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::RegExpLiteral" = type { %"class.v8::internal::MaterializedLiteral", i32, %"class.v8::internal::AstRawString"* }
%"class.v8::internal::MaterializedLiteral" = type { %"class.v8::internal::Expression" }
%"class.v8::internal::ObjectLiteral" = type { %"class.v8::internal::AggregateLiteral", i32, %"class.v8::internal::Handle.1165", %"class.v8::internal::ZoneList.1166", %"class.v8::internal::Variable"* }
%"class.v8::internal::AggregateLiteral" = type { %"class.v8::internal::MaterializedLiteral", i32 }
%"class.v8::internal::Handle.1165" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::ZoneList.1166" = type { %"class.v8::internal::ObjectLiteralProperty"**, i32, i32 }
%"class.v8::internal::ArrayLiteral" = type { %"class.v8::internal::AggregateLiteral", i32, %"class.v8::internal::Handle.1167", %"class.v8::internal::ZoneList.1168" }
%"class.v8::internal::Handle.1167" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::ZoneList.1168" = type { %"class.v8::internal::Expression"**, i32, i32 }
%"class.v8::internal::CompoundAssignment" = type { %"class.v8::internal::Assignment", %"class.v8::internal::BinaryOperation"* }
%"class.v8::internal::BinaryOperation" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"* }
%"class.v8::internal::Yield" = type { %"class.v8::internal::Suspend" }
%"class.v8::internal::Suspend" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"* }
%"class.v8::internal::YieldStar" = type { %"class.v8::internal::Suspend" }
%"class.v8::internal::Await" = type { %"class.v8::internal::Suspend" }
%"class.v8::internal::Throw" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"* }
%"class.v8::internal::OptionalChain" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"* }
%"class.v8::internal::Property" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"* }
%"class.v8::internal::Call" = type { %"class.v8::internal::CallBase" }
%"class.v8::internal::CallBase" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"*, %"class.v8::internal::ZoneList.1168" }
%"class.v8::internal::Spread" = type { %"class.v8::internal::Expression", i32, %"class.v8::internal::Expression"* }
%"class.v8::internal::CallNew" = type { %"class.v8::internal::CallBase" }
%"class.v8::internal::CallRuntime" = type { %"class.v8::internal::Expression", i32, %"struct.v8::internal::Runtime::Function"*, %"class.v8::internal::ZoneList.1168" }
%"class.v8::internal::UnaryOperation" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"* }
%"class.v8::internal::CountOperation" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"* }
%"class.v8::internal::NaryOperation" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"*, %"class.v8::internal::ZoneVector" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector.1169" }
%"class.std::__1::vector.1169" = type { %"class.std::__1::__vector_base.1170" }
%"class.std::__1::__vector_base.1170" = type { %"struct.v8::internal::NaryOperation::NaryOperationEntry"*, %"struct.v8::internal::NaryOperation::NaryOperationEntry"*, %"class.std::__1::__compressed_pair.1171" }
%"struct.v8::internal::NaryOperation::NaryOperationEntry" = type <{ %"class.v8::internal::Expression"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.1172", %"struct.std::__1::__compressed_pair_elem.1173" }
%"struct.std::__1::__compressed_pair_elem.1172" = type { %"struct.v8::internal::NaryOperation::NaryOperationEntry"* }
%"struct.std::__1::__compressed_pair_elem.1173" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::CompareOperation" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"* }
%"class.v8::internal::EmptyParentheses" = type { %"class.v8::internal::Expression" }
%"class.v8::internal::GetTemplateObject" = type { %"class.v8::internal::Expression", %"class.v8::internal::ZoneList.1174"*, %"class.v8::internal::ZoneList.1174"* }
%"class.v8::internal::ZoneList.1174" = type opaque
%"class.v8::internal::TemplateLiteral" = type { %"class.v8::internal::Expression", %"class.v8::internal::ZoneList.1174"*, %"class.v8::internal::ZoneList.1168"* }
%"class.v8::internal::ImportCallExpression" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"* }
%"class.v8::internal::ThisExpression" = type { %"class.v8::internal::Expression" }
%"class.v8::internal::SuperPropertyReference" = type { %"class.v8::internal::Expression", %"class.v8::internal::VariableProxy"* }
%"class.v8::internal::SuperCallReference" = type { %"class.v8::internal::Expression", %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"* }

$_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE = comdat any

@.str = private unnamed_addr constant [21 x i8] c"(intermediate value)\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"g\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"m\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"(var)\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"yield* \00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"?.\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"(...)\00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"(...\00", align 1
@.str.24 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.25 = private unnamed_addr constant [12 x i8] c"ImportCall(\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"this\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"super\00", align 1
@.str.28 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.29 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"undefined\00", align 1
@_ZN2v88internal5Token7string_E = external local_unnamed_addr constant [117 x i8*], align 16
@.str.33 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.34 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1

@_ZN2v88internal11CallPrinterC1EPNS0_7IsolateEbNS1_21SpreadErrorInArgsHintE = hidden unnamed_addr alias void (%"class.v8::internal::CallPrinter"*, %"class.v8::internal::Isolate"*, i1, i32), void (%"class.v8::internal::CallPrinter"*, %"class.v8::internal::Isolate"*, i1, i32)* @_ZN2v88internal11CallPrinterC2EPNS0_7IsolateEbNS1_21SpreadErrorInArgsHintE
@_ZN2v88internal11CallPrinterD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::CallPrinter"*), void (%"class.v8::internal::CallPrinter"*)* @_ZN2v88internal11CallPrinterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinterC2EPNS0_7IsolateEbNS1_21SpreadErrorInArgsHintE(%"class.v8::internal::CallPrinter"* nocapture, %"class.v8::internal::Isolate"*, i1 zeroext, i32) unnamed_addr #0 align 2 {
  %5 = zext i1 %2 to i8
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 3
  %7 = tail call i8* @_Znwm(i64 40) #9
  %8 = bitcast i8* %7 to %"class.v8::internal::IncrementalStringBuilder"*
  tail call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %8, %"class.v8::internal::Isolate"* %1) #10
  %9 = ptrtoint i8* %7 to i64
  %10 = bitcast %"class.std::__1::unique_ptr.1131"* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 4
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 6
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 10
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 8
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 9
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 13
  %20 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 7
  %21 = bitcast %"class.v8::internal::ObjectLiteralProperty"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false)
  store i8 %5, i8* %20, align 2
  %22 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 12
  store i32 %3, i32* %22, align 4
  %23 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 15
  store %"class.v8::internal::Expression"* null, %"class.v8::internal::Expression"** %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 16
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 6, i32 1, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  store i8 0, i8* %28, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"*, %"class.v8::internal::Isolate"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinterD2Ev(%"class.v8::internal::CallPrinter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::IncrementalStringBuilder"*, %"class.v8::internal::IncrementalStringBuilder"** %2, align 8
  store %"class.v8::internal::IncrementalStringBuilder"* null, %"class.v8::internal::IncrementalStringBuilder"** %2, align 8
  %4 = icmp eq %"class.v8::internal::IncrementalStringBuilder"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::internal::IncrementalStringBuilder"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal11CallPrinter12GetErrorHintEv(%"class.v8::internal::CallPrinter"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 10
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 8
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp ne i8 %6, 0
  br i1 %4, label %13, label %8

8:                                                ; preds = %1
  br i1 %7, label %19, label %9

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 9
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %18, label %19

13:                                               ; preds = %1
  br i1 %7, label %19, label %14

14:                                               ; preds = %13
  %15 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 9
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %9, %14
  br label %19

19:                                               ; preds = %14, %13, %9, %8, %18
  %20 = phi i32 [ 0, %18 ], [ 3, %8 ], [ 4, %9 ], [ 1, %13 ], [ 2, %14 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal11CallPrinter5PrintEPNS0_15FunctionLiteralEi(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::FunctionLiteral"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 4
  store i32 %2, i32* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %1, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %3
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %22

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %22

15:                                               ; preds = %11
  %16 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %17 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %16, %18
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  store i8 1, i8* %12, align 8
  br label %22

21:                                               ; preds = %15
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %6) #10
  br label %22

22:                                               ; preds = %10, %11, %20, %21
  %23 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.v8::internal::IncrementalStringBuilder"*, %"class.v8::internal::IncrementalStringBuilder"** %23, align 8
  %25 = tail call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* %24) #10
  %26 = icmp eq i64* %25, null
  br i1 %26, label %27, label %28, !prof !3

27:                                               ; preds = %22
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0)) #11
  unreachable

28:                                               ; preds = %22
  ret i64* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter4FindEPNS0_7AstNodeEb(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::AstNode"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %25, label %7

7:                                                ; preds = %3
  br i1 %2, label %8, label %24

8:                                                ; preds = %7
  %9 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %8
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %16 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  store i8 1, i8* %11, align 8
  br label %21

20:                                               ; preds = %14
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %1) #10
  br label %21

21:                                               ; preds = %8, %19, %20
  %22 = load i32, i32* %9, align 8
  %23 = icmp eq i32 %10, %22
  br i1 %23, label %24, label %36

24:                                               ; preds = %21, %7
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0))
  br label %36

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %25
  %30 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %31 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %32 = load i64, i64* %31, align 8
  %33 = icmp ult i64 %30, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store i8 1, i8* %26, align 8
  br label %36

35:                                               ; preds = %29
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %1) #10
  br label %36

36:                                               ; preds = %25, %34, %35, %21, %24
  ret void
}

declare i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* nocapture, i8* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %71, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 6
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %71

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 8
  %14 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load %"class.v8::internal::IncrementalStringBuilder"*, %"class.v8::internal::IncrementalStringBuilder"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %15, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  %19 = load i8, i8* %1, align 1
  %20 = icmp eq i8 %19, 0
  br i1 %18, label %26, label %21

21:                                               ; preds = %10
  br i1 %20, label %71, label %22

22:                                               ; preds = %21
  %23 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %15, i64 0, i32 6, i32 0, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %15, i64 0, i32 4
  %25 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %15, i64 0, i32 3
  br label %50

26:                                               ; preds = %10
  br i1 %20, label %71, label %27

27:                                               ; preds = %26
  %28 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %15, i64 0, i32 6, i32 0, i32 0
  %29 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %15, i64 0, i32 4
  %30 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %15, i64 0, i32 3
  br label %31

31:                                               ; preds = %47, %27
  %32 = phi i8 [ %19, %27 ], [ %48, %47 ]
  %33 = phi i8* [ %1, %27 ], [ %34, %47 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 1
  %35 = load i64*, i64** %28, align 8
  %36 = load i64, i64* %35, align 8
  %37 = load i32, i32* %29, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %29, align 4
  %39 = sext i32 %37 to i64
  %40 = add i64 %36, 11
  %41 = add i64 %40, %39
  %42 = inttoptr i64 %41 to i8*
  store i8 %32, i8* %42, align 1
  %43 = load i32, i32* %29, align 4
  %44 = load i32, i32* %30, align 8
  %45 = icmp eq i32 %43, %44
  br i1 %45, label %46, label %47

46:                                               ; preds = %31
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %15) #10
  br label %47

47:                                               ; preds = %46, %31
  %48 = load i8, i8* %34, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %71, label %31

50:                                               ; preds = %68, %22
  %51 = phi i8 [ %19, %22 ], [ %69, %68 ]
  %52 = phi i8* [ %1, %22 ], [ %53, %68 ]
  %53 = getelementptr inbounds i8, i8* %52, i64 1
  %54 = load i64*, i64** %23, align 8
  %55 = load i64, i64* %54, align 8
  %56 = load i32, i32* %24, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %24, align 4
  %58 = zext i8 %51 to i16
  %59 = shl nsw i32 %56, 1
  %60 = sext i32 %59 to i64
  %61 = add i64 %55, 11
  %62 = add i64 %61, %60
  %63 = inttoptr i64 %62 to i16*
  store i16 %58, i16* %63, align 2
  %64 = load i32, i32* %24, align 4
  %65 = load i32, i32* %25, align 8
  %66 = icmp eq i32 %64, %65
  br i1 %66, label %67, label %68

67:                                               ; preds = %50
  tail call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* %15) #10
  br label %68

68:                                               ; preds = %67, %50
  %69 = load i8, i8* %53, align 1
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %50

71:                                               ; preds = %68, %47, %26, %21, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter5PrintENS0_6HandleINS0_6StringEEE(%"class.v8::internal::CallPrinter"* nocapture, i64*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 6
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 8
  %14 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load %"class.v8::internal::IncrementalStringBuilder"*, %"class.v8::internal::IncrementalStringBuilder"** %14, align 8
  tail call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* %15, i64* %1) #10
  br label %16

16:                                               ; preds = %6, %2, %10
  ret void
}

declare void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter10VisitBlockEPNS0_5BlockE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::Block"* readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %1, i64 0, i32 1
  %4 = icmp eq %"class.v8::internal::ZoneList.1157"* %3, null
  br i1 %4, label %37, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %1, i64 0, i32 1, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %37

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.v8::internal::ZoneList.1157", %"class.v8::internal::ZoneList.1157"* %3, i64 0, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %12 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %13 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  br label %14

14:                                               ; preds = %9, %32
  %15 = phi i64 [ 0, %9 ], [ %33, %32 ]
  %16 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %10, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %16, i64 %15
  %18 = bitcast %"class.v8::internal::Statement"** %17 to %"class.v8::internal::AstNode"**
  %19 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %18, align 8
  %20 = load i8, i8* %11, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %14
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %32

23:                                               ; preds = %14
  %24 = load i8, i8* %12, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %23
  %27 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %28 = load i64, i64* %13, align 8
  %29 = icmp ult i64 %27, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  store i8 1, i8* %12, align 8
  br label %32

31:                                               ; preds = %26
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %19) #10
  br label %32

32:                                               ; preds = %23, %30, %31, %22
  %33 = add nuw nsw i64 %15, 1
  %34 = load i32, i32* %6, align 4
  %35 = sext i32 %34 to i64
  %36 = icmp slt i64 %33, %35
  br i1 %36, label %14, label %37

37:                                               ; preds = %32, %5, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter14FindStatementsEPKNS0_8ZoneListIPNS0_9StatementEEE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::ZoneList.1157"* readonly) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.v8::internal::ZoneList.1157"* %1, null
  br i1 %3, label %36, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8::internal::ZoneList.1157", %"class.v8::internal::ZoneList.1157"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %36

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.v8::internal::ZoneList.1157", %"class.v8::internal::ZoneList.1157"* %1, i64 0, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %12 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  br label %13

13:                                               ; preds = %8, %31
  %14 = phi i64 [ 0, %8 ], [ %32, %31 ]
  %15 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %9, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %15, i64 %14
  %17 = bitcast %"class.v8::internal::Statement"** %16 to %"class.v8::internal::AstNode"**
  %18 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %17, align 8
  %19 = load i8, i8* %10, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %13
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %31

22:                                               ; preds = %13
  %23 = load i8, i8* %11, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %22
  %26 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %27 = load i64, i64* %12, align 8
  %28 = icmp ult i64 %26, %27
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  store i8 1, i8* %11, align 8
  br label %31

30:                                               ; preds = %25
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %18) #10
  br label %31

31:                                               ; preds = %22, %29, %30, %21
  %32 = add nuw nsw i64 %14, 1
  %33 = load i32, i32* %5, align 4
  %34 = sext i32 %33 to i64
  %35 = icmp slt i64 %32, %34
  br i1 %35, label %13, label %36

36:                                               ; preds = %31, %4, %2
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter24VisitVariableDeclarationEPNS0_19VariableDeclarationE(%"class.v8::internal::CallPrinter"* nocapture, %"class.v8::internal::VariableDeclaration"* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter24VisitFunctionDeclarationEPNS0_19FunctionDeclarationE(%"class.v8::internal::CallPrinter"* nocapture, %"class.v8::internal::FunctionDeclaration"* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter24VisitExpressionStatementEPNS0_19ExpressionStatementE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::ExpressionStatement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ExpressionStatement", %"class.v8::internal::ExpressionStatement"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %16 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  store i8 1, i8* %11, align 8
  br label %21

20:                                               ; preds = %14
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %21

21:                                               ; preds = %10, %19, %20, %9
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter19VisitEmptyStatementEPNS0_14EmptyStatementE(%"class.v8::internal::CallPrinter"* nocapture, %"class.v8::internal::EmptyStatement"* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter33VisitSloppyBlockFunctionStatementEPNS0_28SloppyBlockFunctionStatementE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::SloppyBlockFunctionStatement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::SloppyBlockFunctionStatement", %"class.v8::internal::SloppyBlockFunctionStatement"* %1, i64 0, i32 2
  %4 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %16 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  store i8 1, i8* %11, align 8
  br label %21

20:                                               ; preds = %14
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %21

21:                                               ; preds = %10, %19, %20, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter16VisitIfStatementEPNS0_11IfStatementE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::IfStatement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::IfStatement", %"class.v8::internal::IfStatement"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %16 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  store i8 1, i8* %11, align 8
  br label %21

20:                                               ; preds = %14
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %21

21:                                               ; preds = %10, %19, %20, %9
  %22 = getelementptr inbounds %"class.v8::internal::IfStatement", %"class.v8::internal::IfStatement"* %1, i64 0, i32 2
  %23 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %23, i64 0, i32 0
  %25 = load i8, i8* %6, align 4, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %21
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %39

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %39

32:                                               ; preds = %28
  %33 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %34 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %33, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  store i8 1, i8* %29, align 8
  br label %39

38:                                               ; preds = %32
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %24) #10
  br label %39

39:                                               ; preds = %28, %37, %38, %27
  %40 = getelementptr inbounds %"class.v8::internal::IfStatement", %"class.v8::internal::IfStatement"* %1, i64 0, i32 3
  %41 = bitcast %"class.v8::internal::Statement"** %40 to %"class.v8::internal::AstNode"**
  %42 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %42, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, 63
  %46 = icmp eq i32 %45, 10
  br i1 %46, label %62, label %47

47:                                               ; preds = %39
  %48 = load i8, i8* %6, align 4, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %51, label %50

50:                                               ; preds = %47
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %62

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %53 = load i8, i8* %52, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %62

55:                                               ; preds = %51
  %56 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %57 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %58 = load i64, i64* %57, align 8
  %59 = icmp ult i64 %56, %58
  br i1 %59, label %60, label %61

60:                                               ; preds = %55
  store i8 1, i8* %52, align 8
  br label %62

61:                                               ; preds = %55
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %42) #10
  br label %62

62:                                               ; preds = %39, %51, %60, %50, %61
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter22VisitContinueStatementEPNS0_17ContinueStatementE(%"class.v8::internal::CallPrinter"* nocapture, %"class.v8::internal::ContinueStatement"* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter19VisitBreakStatementEPNS0_14BreakStatementE(%"class.v8::internal::CallPrinter"* nocapture, %"class.v8::internal::BreakStatement"* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter20VisitReturnStatementEPNS0_15ReturnStatementE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::ReturnStatement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ReturnStatement", %"class.v8::internal::ReturnStatement"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %16 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  store i8 1, i8* %11, align 8
  br label %21

20:                                               ; preds = %14
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %21

21:                                               ; preds = %10, %19, %20, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter18VisitWithStatementEPNS0_13WithStatementE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::WithStatement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::WithStatement", %"class.v8::internal::WithStatement"* %1, i64 0, i32 2
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %16 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  store i8 1, i8* %11, align 8
  br label %21

20:                                               ; preds = %14
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %21

21:                                               ; preds = %10, %19, %20, %9
  %22 = getelementptr inbounds %"class.v8::internal::WithStatement", %"class.v8::internal::WithStatement"* %1, i64 0, i32 3
  %23 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %23, i64 0, i32 0
  %25 = load i8, i8* %6, align 4, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %21
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %39

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %39

32:                                               ; preds = %28
  %33 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %34 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %33, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  store i8 1, i8* %29, align 8
  br label %39

38:                                               ; preds = %32
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %24) #10
  br label %39

39:                                               ; preds = %28, %37, %38, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter20VisitSwitchStatementEPNS0_15SwitchStatementE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::SwitchStatement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::SwitchStatement", %"class.v8::internal::SwitchStatement"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %16 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  store i8 1, i8* %11, align 8
  br label %21

20:                                               ; preds = %14
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %21

21:                                               ; preds = %10, %19, %20, %9
  %22 = getelementptr inbounds %"class.v8::internal::SwitchStatement", %"class.v8::internal::SwitchStatement"* %1, i64 0, i32 2, i32 0
  %23 = load %"class.v8::internal::CaseClause"**, %"class.v8::internal::CaseClause"*** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::SwitchStatement", %"class.v8::internal::SwitchStatement"* %1, i64 0, i32 2, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %"class.v8::internal::CaseClause"*, %"class.v8::internal::CaseClause"** %23, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %31 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  br label %33

32:                                               ; preds = %85, %21
  ret void

33:                                               ; preds = %29, %85
  %34 = phi %"class.v8::internal::CaseClause"** [ %23, %29 ], [ %86, %85 ]
  %35 = load %"class.v8::internal::CaseClause"*, %"class.v8::internal::CaseClause"** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::CaseClause", %"class.v8::internal::CaseClause"* %35, i64 0, i32 0
  %37 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %36, align 8
  %38 = icmp eq %"class.v8::internal::Expression"* %37, null
  br i1 %38, label %53, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %37, i64 0, i32 0
  %41 = load i8, i8* %6, align 4, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %39
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %53

44:                                               ; preds = %39
  %45 = load i8, i8* %30, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %44
  %48 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %49 = load i64, i64* %31, align 8
  %50 = icmp ult i64 %48, %49
  br i1 %50, label %51, label %52

51:                                               ; preds = %47
  store i8 1, i8* %30, align 8
  br label %53

52:                                               ; preds = %47
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %40) #10
  br label %53

53:                                               ; preds = %44, %51, %43, %52, %33
  %54 = getelementptr inbounds %"class.v8::internal::CaseClause", %"class.v8::internal::CaseClause"* %35, i64 0, i32 1
  %55 = icmp eq %"class.v8::internal::ZoneList.1157"* %54, null
  br i1 %55, label %85, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.v8::internal::CaseClause", %"class.v8::internal::CaseClause"* %35, i64 0, i32 1, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %60, label %85

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.v8::internal::ZoneList.1157", %"class.v8::internal::ZoneList.1157"* %54, i64 0, i32 0
  br label %62

62:                                               ; preds = %60, %80
  %63 = phi i64 [ 0, %60 ], [ %81, %80 ]
  %64 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %61, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %64, i64 %63
  %66 = bitcast %"class.v8::internal::Statement"** %65 to %"class.v8::internal::AstNode"**
  %67 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %66, align 8
  %68 = load i8, i8* %6, align 4, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %71, label %70

70:                                               ; preds = %62
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %80

71:                                               ; preds = %62
  %72 = load i8, i8* %30, align 8, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %80

74:                                               ; preds = %71
  %75 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %76 = load i64, i64* %31, align 8
  %77 = icmp ult i64 %75, %76
  br i1 %77, label %78, label %79

78:                                               ; preds = %74
  store i8 1, i8* %30, align 8
  br label %80

79:                                               ; preds = %74
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %67) #10
  br label %80

80:                                               ; preds = %71, %78, %79, %70
  %81 = add nuw nsw i64 %63, 1
  %82 = load i32, i32* %57, align 4
  %83 = sext i32 %82 to i64
  %84 = icmp slt i64 %81, %83
  br i1 %84, label %62, label %85

85:                                               ; preds = %80, %56, %53
  %86 = getelementptr inbounds %"class.v8::internal::CaseClause"*, %"class.v8::internal::CaseClause"** %34, i64 1
  %87 = icmp eq %"class.v8::internal::CaseClause"** %86, %27
  br i1 %87, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter21VisitDoWhileStatementEPNS0_16DoWhileStatementE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::DoWhileStatement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::DoWhileStatement", %"class.v8::internal::DoWhileStatement"* %1, i64 0, i32 0, i32 1
  %4 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %16 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  store i8 1, i8* %11, align 8
  br label %21

20:                                               ; preds = %14
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %21

21:                                               ; preds = %10, %19, %20, %9
  %22 = getelementptr inbounds %"class.v8::internal::DoWhileStatement", %"class.v8::internal::DoWhileStatement"* %1, i64 0, i32 1
  %23 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %23, i64 0, i32 0
  %25 = load i8, i8* %6, align 4, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %21
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %39

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %39

32:                                               ; preds = %28
  %33 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %34 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %33, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  store i8 1, i8* %29, align 8
  br label %39

38:                                               ; preds = %32
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %24) #10
  br label %39

39:                                               ; preds = %28, %37, %38, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter19VisitWhileStatementEPNS0_14WhileStatementE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::WhileStatement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::WhileStatement", %"class.v8::internal::WhileStatement"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %16 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  store i8 1, i8* %11, align 8
  br label %21

20:                                               ; preds = %14
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %21

21:                                               ; preds = %10, %19, %20, %9
  %22 = getelementptr inbounds %"class.v8::internal::WhileStatement", %"class.v8::internal::WhileStatement"* %1, i64 0, i32 0, i32 1
  %23 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %23, i64 0, i32 0
  %25 = load i8, i8* %6, align 4, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %21
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %39

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %39

32:                                               ; preds = %28
  %33 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %34 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %33, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  store i8 1, i8* %29, align 8
  br label %39

38:                                               ; preds = %32
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %24) #10
  br label %39

39:                                               ; preds = %28, %37, %38, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter17VisitForStatementEPNS0_12ForStatementE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::ForStatement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ForStatement", %"class.v8::internal::ForStatement"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %3, align 8
  %5 = icmp eq %"class.v8::internal::Statement"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %23

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %12
  %17 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %18 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %17, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  store i8 1, i8* %13, align 8
  br label %23

22:                                               ; preds = %16
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %7) #10
  br label %23

23:                                               ; preds = %12, %21, %11, %22, %2
  %24 = getelementptr inbounds %"class.v8::internal::ForStatement", %"class.v8::internal::ForStatement"* %1, i64 0, i32 2
  %25 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %24, align 8
  %26 = icmp eq %"class.v8::internal::Expression"* %25, null
  br i1 %26, label %44, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %25, i64 0, i32 0
  %29 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %30 = load i8, i8* %29, align 4, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %44

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %44

37:                                               ; preds = %33
  %38 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %39 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %40 = load i64, i64* %39, align 8
  %41 = icmp ult i64 %38, %40
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  store i8 1, i8* %34, align 8
  br label %44

43:                                               ; preds = %37
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %28) #10
  br label %44

44:                                               ; preds = %33, %42, %32, %43, %23
  %45 = getelementptr inbounds %"class.v8::internal::ForStatement", %"class.v8::internal::ForStatement"* %1, i64 0, i32 3
  %46 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %45, align 8
  %47 = icmp eq %"class.v8::internal::Statement"* %46, null
  br i1 %47, label %65, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %46, i64 0, i32 0
  %50 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %51 = load i8, i8* %50, align 4, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %48
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %65

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %56 = load i8, i8* %55, align 8, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %65

58:                                               ; preds = %54
  %59 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %60 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %61 = load i64, i64* %60, align 8
  %62 = icmp ult i64 %59, %61
  br i1 %62, label %63, label %64

63:                                               ; preds = %58
  store i8 1, i8* %55, align 8
  br label %65

64:                                               ; preds = %58
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %49) #10
  br label %65

65:                                               ; preds = %54, %63, %53, %64, %44
  %66 = getelementptr inbounds %"class.v8::internal::ForStatement", %"class.v8::internal::ForStatement"* %1, i64 0, i32 0, i32 1
  %67 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %67, i64 0, i32 0
  %69 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %70 = load i8, i8* %69, align 4, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %73, label %72

72:                                               ; preds = %65
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %84

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %84

77:                                               ; preds = %73
  %78 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %79 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %80 = load i64, i64* %79, align 8
  %81 = icmp ult i64 %78, %80
  br i1 %81, label %82, label %83

82:                                               ; preds = %77
  store i8 1, i8* %74, align 8
  br label %84

83:                                               ; preds = %77
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %68) #10
  br label %84

84:                                               ; preds = %73, %82, %83, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter19VisitForInStatementEPNS0_14ForInStatementE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::ForInStatement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ForInStatement", %"class.v8::internal::ForInStatement"* %1, i64 0, i32 0, i32 1
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %16 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  store i8 1, i8* %11, align 8
  br label %21

20:                                               ; preds = %14
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %21

21:                                               ; preds = %10, %19, %20, %9
  %22 = getelementptr inbounds %"class.v8::internal::ForInStatement", %"class.v8::internal::ForInStatement"* %1, i64 0, i32 0, i32 2
  %23 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %23, i64 0, i32 0
  %25 = load i8, i8* %6, align 4, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %21
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %39

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %39

32:                                               ; preds = %28
  %33 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %34 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %33, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  store i8 1, i8* %29, align 8
  br label %39

38:                                               ; preds = %32
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %24) #10
  br label %39

39:                                               ; preds = %28, %37, %38, %27
  %40 = getelementptr inbounds %"class.v8::internal::ForInStatement", %"class.v8::internal::ForInStatement"* %1, i64 0, i32 0, i32 0, i32 1
  %41 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %41, i64 0, i32 0
  %43 = load i8, i8* %6, align 4, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %39
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %57

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %57

50:                                               ; preds = %46
  %51 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %52 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %51, %53
  br i1 %54, label %55, label %56

55:                                               ; preds = %50
  store i8 1, i8* %47, align 8
  br label %57

56:                                               ; preds = %50
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %42) #10
  br label %57

57:                                               ; preds = %46, %55, %56, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter19VisitForOfStatementEPNS0_14ForOfStatementE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::ForOfStatement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ForOfStatement", %"class.v8::internal::ForOfStatement"* %1, i64 0, i32 0, i32 1
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %16 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  store i8 1, i8* %11, align 8
  br label %21

20:                                               ; preds = %14
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %21

21:                                               ; preds = %10, %19, %20, %9
  %22 = getelementptr inbounds %"class.v8::internal::ForOfStatement", %"class.v8::internal::ForOfStatement"* %1, i64 0, i32 0, i32 2
  %23 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %23, i64 0, i32 0
  %25 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %23, i64 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %30, label %62

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.v8::internal::ForOfStatement", %"class.v8::internal::ForOfStatement"* %1, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 1
  %34 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 9
  %35 = zext i1 %33 to i8
  store i8 %35, i8* %34, align 8
  %36 = xor i1 %33, true
  %37 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 8
  %38 = zext i1 %36 to i8
  store i8 %38, i8* %37, align 1
  %39 = load i8, i8* %6, align 4, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  store i8 1, i8* %6, align 4
  %42 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %22, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %42, i64 0, i32 0
  %44 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %56

49:                                               ; preds = %41
  %50 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %51 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %50, %52
  br i1 %53, label %54, label %55

54:                                               ; preds = %49
  store i8 1, i8* %46, align 8
  br label %56

55:                                               ; preds = %49
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %43) #10
  br label %56

56:                                               ; preds = %41, %54, %55
  %57 = load i32, i32* %44, align 8
  %58 = icmp eq i32 %45, %57
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %60

60:                                               ; preds = %59, %56
  %61 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 6
  store i8 1, i8* %61, align 1
  store i8 0, i8* %6, align 4
  br label %116

62:                                               ; preds = %21
  %63 = load i8, i8* %6, align 4, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %82, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %78

71:                                               ; preds = %65
  %72 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %73 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %74 = load i64, i64* %73, align 8
  %75 = icmp ult i64 %72, %74
  br i1 %75, label %76, label %77

76:                                               ; preds = %71
  store i8 1, i8* %68, align 8
  br label %78

77:                                               ; preds = %71
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %24) #10
  br label %78

78:                                               ; preds = %65, %76, %77
  %79 = load i32, i32* %66, align 8
  %80 = icmp eq i32 %67, %79
  br i1 %80, label %81, label %112

81:                                               ; preds = %78
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %112

82:                                               ; preds = %62
  %83 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %84 = load i8, i8* %83, align 8, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %112

86:                                               ; preds = %82
  %87 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %88 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %89 = load i64, i64* %88, align 8
  %90 = icmp ult i64 %87, %89
  br i1 %90, label %91, label %92

91:                                               ; preds = %86
  store i8 1, i8* %83, align 8
  br label %112

92:                                               ; preds = %86
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %24) #10
  br label %112

93:                                               ; preds = %30
  %94 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %22, align 8
  %95 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %94, i64 0, i32 0
  %96 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %99 = load i8, i8* %98, align 8, !range !2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %101, label %108

101:                                              ; preds = %93
  %102 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %103 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %104 = load i64, i64* %103, align 8
  %105 = icmp ult i64 %102, %104
  br i1 %105, label %106, label %107

106:                                              ; preds = %101
  store i8 1, i8* %98, align 8
  br label %108

107:                                              ; preds = %101
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %95) #10
  br label %108

108:                                              ; preds = %93, %106, %107
  %109 = load i32, i32* %96, align 8
  %110 = icmp eq i32 %97, %109
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %112

112:                                              ; preds = %82, %91, %111, %108, %81, %78, %92
  %113 = load i8, i8* %6, align 4
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %116, label %115

115:                                              ; preds = %112
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %130

116:                                              ; preds = %60, %112
  %117 = getelementptr inbounds %"class.v8::internal::ForOfStatement", %"class.v8::internal::ForOfStatement"* %1, i64 0, i32 0, i32 0, i32 1
  %118 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %117, align 8
  %119 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %118, i64 0, i32 0
  %120 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %121 = load i8, i8* %120, align 8, !range !2
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %130

123:                                              ; preds = %116
  %124 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %125 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %126 = load i64, i64* %125, align 8
  %127 = icmp ult i64 %124, %126
  br i1 %127, label %128, label %129

128:                                              ; preds = %123
  store i8 1, i8* %120, align 8
  br label %130

129:                                              ; preds = %123
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %119) #10
  br label %130

130:                                              ; preds = %116, %128, %129, %115
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter22VisitTryCatchStatementEPNS0_17TryCatchStatementE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::TryCatchStatement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::TryCatchStatement", %"class.v8::internal::TryCatchStatement"* %1, i64 0, i32 0, i32 1
  %4 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %16 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  store i8 1, i8* %11, align 8
  br label %21

20:                                               ; preds = %14
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %21

21:                                               ; preds = %10, %19, %20, %9
  %22 = getelementptr inbounds %"class.v8::internal::TryCatchStatement", %"class.v8::internal::TryCatchStatement"* %1, i64 0, i32 2
  %23 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load i8, i8* %6, align 4, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %21
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %39

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %39

32:                                               ; preds = %28
  %33 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %34 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %33, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  store i8 1, i8* %29, align 8
  br label %39

38:                                               ; preds = %32
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %24) #10
  br label %39

39:                                               ; preds = %28, %37, %38, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter24VisitTryFinallyStatementEPNS0_19TryFinallyStatementE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::TryFinallyStatement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::TryFinallyStatement", %"class.v8::internal::TryFinallyStatement"* %1, i64 0, i32 0, i32 1
  %4 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %16 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  store i8 1, i8* %11, align 8
  br label %21

20:                                               ; preds = %14
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %21

21:                                               ; preds = %10, %19, %20, %9
  %22 = getelementptr inbounds %"class.v8::internal::TryFinallyStatement", %"class.v8::internal::TryFinallyStatement"* %1, i64 0, i32 1
  %23 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load i8, i8* %6, align 4, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %21
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %39

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %39

32:                                               ; preds = %28
  %33 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %34 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %33, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  store i8 1, i8* %29, align 8
  br label %39

38:                                               ; preds = %32
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %24) #10
  br label %39

39:                                               ; preds = %28, %37, %38, %27
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter22VisitDebuggerStatementEPNS0_17DebuggerStatementE(%"class.v8::internal::CallPrinter"* nocapture, %"class.v8::internal::DebuggerStatement"* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter20VisitFunctionLiteralEPNS0_15FunctionLiteralE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::FunctionLiteral"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 16
  %4 = load i8, i8* %3, align 8
  %5 = tail call zeroext i8 @_ZNK2v88internal15FunctionLiteral4kindEv(%"class.v8::internal::FunctionLiteral"* %1) #10
  store i8 %5, i8* %3, align 8
  %6 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %1, i64 0, i32 9
  %7 = icmp eq %"class.v8::internal::ZoneList.1157"* %6, null
  br i1 %7, label %40, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %1, i64 0, i32 9, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %40

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::ZoneList.1157", %"class.v8::internal::ZoneList.1157"* %6, i64 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %15 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %16 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  br label %17

17:                                               ; preds = %12, %35
  %18 = phi i64 [ 0, %12 ], [ %36, %35 ]
  %19 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %13, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %19, i64 %18
  %21 = bitcast %"class.v8::internal::Statement"** %20 to %"class.v8::internal::AstNode"**
  %22 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %21, align 8
  %23 = load i8, i8* %14, align 4, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %17
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %35

26:                                               ; preds = %17
  %27 = load i8, i8* %15, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %35

29:                                               ; preds = %26
  %30 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %31 = load i64, i64* %16, align 8
  %32 = icmp ult i64 %30, %31
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  store i8 1, i8* %15, align 8
  br label %35

34:                                               ; preds = %29
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %22) #10
  br label %35

35:                                               ; preds = %26, %33, %34, %25
  %36 = add nuw nsw i64 %18, 1
  %37 = load i32, i32* %9, align 4
  %38 = sext i32 %37 to i64
  %39 = icmp slt i64 %36, %38
  br i1 %39, label %17, label %40

40:                                               ; preds = %35, %8, %2
  store i8 %4, i8* %3, align 8
  ret void
}

declare zeroext i8 @_ZNK2v88internal15FunctionLiteral4kindEv(%"class.v8::internal::FunctionLiteral"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter17VisitClassLiteralEPNS0_12ClassLiteralE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::ClassLiteral"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ClassLiteral", %"class.v8::internal::ClassLiteral"* %1, i64 0, i32 3
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = icmp eq %"class.v8::internal::Expression"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %23

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %12
  %17 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %18 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %17, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  store i8 1, i8* %13, align 8
  br label %23

22:                                               ; preds = %16
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %7) #10
  br label %23

23:                                               ; preds = %12, %21, %11, %22, %2
  %24 = getelementptr inbounds %"class.v8::internal::ClassLiteral", %"class.v8::internal::ClassLiteral"* %1, i64 0, i32 5
  %25 = load %"class.v8::internal::ZoneList.1160"*, %"class.v8::internal::ZoneList.1160"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::ZoneList.1160", %"class.v8::internal::ZoneList.1160"* %25, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %31 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %32 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  br label %43

33:                                               ; preds = %66, %23
  %34 = getelementptr inbounds %"class.v8::internal::ClassLiteral", %"class.v8::internal::ClassLiteral"* %1, i64 0, i32 6
  %35 = load %"class.v8::internal::ZoneList.1160"*, %"class.v8::internal::ZoneList.1160"** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::ZoneList.1160", %"class.v8::internal::ZoneList.1160"* %35, i64 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %73

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %41 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %42 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  br label %74

43:                                               ; preds = %29, %66
  %44 = phi i64 [ 0, %29 ], [ %67, %66 ]
  %45 = phi %"class.v8::internal::ZoneList.1160"* [ %25, %29 ], [ %68, %66 ]
  %46 = getelementptr inbounds %"class.v8::internal::ZoneList.1160", %"class.v8::internal::ZoneList.1160"* %45, i64 0, i32 0
  %47 = load %"class.v8::internal::ClassLiteralProperty"**, %"class.v8::internal::ClassLiteralProperty"*** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %47, i64 %44
  %49 = bitcast %"class.v8::internal::ClassLiteralProperty"** %48 to %"class.v8::internal::LiteralProperty"**
  %50 = load %"class.v8::internal::LiteralProperty"*, %"class.v8::internal::LiteralProperty"** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::LiteralProperty", %"class.v8::internal::LiteralProperty"* %50, i64 0, i32 1
  %52 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %52, i64 0, i32 0
  %54 = load i8, i8* %30, align 4, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %43
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %66

57:                                               ; preds = %43
  %58 = load i8, i8* %31, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %66

60:                                               ; preds = %57
  %61 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %62 = load i64, i64* %32, align 8
  %63 = icmp ult i64 %61, %62
  br i1 %63, label %64, label %65

64:                                               ; preds = %60
  store i8 1, i8* %31, align 8
  br label %66

65:                                               ; preds = %60
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %53) #10
  br label %66

66:                                               ; preds = %57, %64, %65, %56
  %67 = add nuw nsw i64 %44, 1
  %68 = load %"class.v8::internal::ZoneList.1160"*, %"class.v8::internal::ZoneList.1160"** %24, align 8
  %69 = getelementptr inbounds %"class.v8::internal::ZoneList.1160", %"class.v8::internal::ZoneList.1160"* %68, i64 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = sext i32 %70 to i64
  %72 = icmp slt i64 %67, %71
  br i1 %72, label %43, label %33

73:                                               ; preds = %97, %33
  ret void

74:                                               ; preds = %39, %97
  %75 = phi i64 [ 0, %39 ], [ %98, %97 ]
  %76 = phi %"class.v8::internal::ZoneList.1160"* [ %35, %39 ], [ %99, %97 ]
  %77 = getelementptr inbounds %"class.v8::internal::ZoneList.1160", %"class.v8::internal::ZoneList.1160"* %76, i64 0, i32 0
  %78 = load %"class.v8::internal::ClassLiteralProperty"**, %"class.v8::internal::ClassLiteralProperty"*** %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %78, i64 %75
  %80 = bitcast %"class.v8::internal::ClassLiteralProperty"** %79 to %"class.v8::internal::LiteralProperty"**
  %81 = load %"class.v8::internal::LiteralProperty"*, %"class.v8::internal::LiteralProperty"** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::LiteralProperty", %"class.v8::internal::LiteralProperty"* %81, i64 0, i32 1
  %83 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %83, i64 0, i32 0
  %85 = load i8, i8* %40, align 4, !range !2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %88, label %87

87:                                               ; preds = %74
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %97

88:                                               ; preds = %74
  %89 = load i8, i8* %41, align 8, !range !2
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %97

91:                                               ; preds = %88
  %92 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %93 = load i64, i64* %42, align 8
  %94 = icmp ult i64 %92, %93
  br i1 %94, label %95, label %96

95:                                               ; preds = %91
  store i8 1, i8* %41, align 8
  br label %97

96:                                               ; preds = %91
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %84) #10
  br label %97

97:                                               ; preds = %88, %95, %96, %87
  %98 = add nuw nsw i64 %75, 1
  %99 = load %"class.v8::internal::ZoneList.1160"*, %"class.v8::internal::ZoneList.1160"** %34, align 8
  %100 = getelementptr inbounds %"class.v8::internal::ZoneList.1160", %"class.v8::internal::ZoneList.1160"* %99, i64 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = sext i32 %101 to i64
  %103 = icmp slt i64 %98, %102
  br i1 %103, label %74, label %73
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter36VisitInitializeClassMembersStatementEPNS0_31InitializeClassMembersStatementE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::InitializeClassMembersStatement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::InitializeClassMembersStatement", %"class.v8::internal::InitializeClassMembersStatement"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::ZoneList.1160"*, %"class.v8::internal::ZoneList.1160"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::ZoneList.1160", %"class.v8::internal::ZoneList.1160"* %4, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %10 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  br label %13

12:                                               ; preds = %36, %2
  ret void

13:                                               ; preds = %8, %36
  %14 = phi i64 [ 0, %8 ], [ %37, %36 ]
  %15 = phi %"class.v8::internal::ZoneList.1160"* [ %4, %8 ], [ %38, %36 ]
  %16 = getelementptr inbounds %"class.v8::internal::ZoneList.1160", %"class.v8::internal::ZoneList.1160"* %15, i64 0, i32 0
  %17 = load %"class.v8::internal::ClassLiteralProperty"**, %"class.v8::internal::ClassLiteralProperty"*** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %17, i64 %14
  %19 = bitcast %"class.v8::internal::ClassLiteralProperty"** %18 to %"class.v8::internal::LiteralProperty"**
  %20 = load %"class.v8::internal::LiteralProperty"*, %"class.v8::internal::LiteralProperty"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::LiteralProperty", %"class.v8::internal::LiteralProperty"* %20, i64 0, i32 1
  %22 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %22, i64 0, i32 0
  %24 = load i8, i8* %9, align 4, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %13
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %36

27:                                               ; preds = %13
  %28 = load i8, i8* %10, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %27
  %31 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %32 = load i64, i64* %11, align 8
  %33 = icmp ult i64 %31, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  store i8 1, i8* %10, align 8
  br label %36

35:                                               ; preds = %30
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %23) #10
  br label %36

36:                                               ; preds = %27, %34, %35, %26
  %37 = add nuw nsw i64 %14, 1
  %38 = load %"class.v8::internal::ZoneList.1160"*, %"class.v8::internal::ZoneList.1160"** %3, align 8
  %39 = getelementptr inbounds %"class.v8::internal::ZoneList.1160", %"class.v8::internal::ZoneList.1160"* %38, i64 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = sext i32 %40 to i64
  %42 = icmp slt i64 %37, %41
  br i1 %42, label %13, label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter43VisitInitializeClassStaticElementsStatementEPNS0_38InitializeClassStaticElementsStatementE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::InitializeClassStaticElementsStatement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::InitializeClassStaticElementsStatement", %"class.v8::internal::InitializeClassStaticElementsStatement"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::ZoneList.1161"*, %"class.v8::internal::ZoneList.1161"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::ZoneList.1161", %"class.v8::internal::ZoneList.1161"* %4, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %10 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  br label %13

12:                                               ; preds = %58, %2
  ret void

13:                                               ; preds = %8, %58
  %14 = phi i64 [ 0, %8 ], [ %59, %58 ]
  %15 = phi %"class.v8::internal::ZoneList.1161"* [ %4, %8 ], [ %60, %58 ]
  %16 = getelementptr inbounds %"class.v8::internal::ZoneList.1161", %"class.v8::internal::ZoneList.1161"* %15, i64 0, i32 0
  %17 = load %"class.v8::internal::ClassLiteralStaticElement"**, %"class.v8::internal::ClassLiteralStaticElement"*** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::ClassLiteralStaticElement"*, %"class.v8::internal::ClassLiteralStaticElement"** %17, i64 %14
  %19 = load %"class.v8::internal::ClassLiteralStaticElement"*, %"class.v8::internal::ClassLiteralStaticElement"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::ClassLiteralStaticElement", %"class.v8::internal::ClassLiteralStaticElement"* %19, i64 0, i32 0
  %21 = load i8, i8* %20, align 8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %41

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.v8::internal::ClassLiteralStaticElement", %"class.v8::internal::ClassLiteralStaticElement"* %19, i64 0, i32 1, i32 0
  %25 = load %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %25, i64 0, i32 0, i32 1
  %27 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %27, i64 0, i32 0
  %29 = load i8, i8* %9, align 4, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %23
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %58

32:                                               ; preds = %23
  %33 = load i8, i8* %10, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %58

35:                                               ; preds = %32
  %36 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %37 = load i64, i64* %11, align 8
  %38 = icmp ult i64 %36, %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  store i8 1, i8* %10, align 8
  br label %58

40:                                               ; preds = %35
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %28) #10
  br label %58

41:                                               ; preds = %13
  %42 = getelementptr inbounds %"class.v8::internal::ClassLiteralStaticElement", %"class.v8::internal::ClassLiteralStaticElement"* %19, i64 0, i32 1
  %43 = bitcast %union.anon.1162* %42 to %"class.v8::internal::Block"**
  %44 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %9, align 4, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %41
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %58

49:                                               ; preds = %41
  %50 = load i8, i8* %10, align 8, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %49
  %53 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %54 = load i64, i64* %11, align 8
  %55 = icmp ult i64 %53, %54
  br i1 %55, label %56, label %57

56:                                               ; preds = %52
  store i8 1, i8* %10, align 8
  br label %58

57:                                               ; preds = %52
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %45) #10
  br label %58

58:                                               ; preds = %49, %56, %32, %39, %48, %57, %31, %40
  %59 = add nuw nsw i64 %14, 1
  %60 = load %"class.v8::internal::ZoneList.1161"*, %"class.v8::internal::ZoneList.1161"** %3, align 8
  %61 = getelementptr inbounds %"class.v8::internal::ZoneList.1161", %"class.v8::internal::ZoneList.1161"* %60, i64 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = sext i32 %62 to i64
  %64 = icmp slt i64 %59, %63
  br i1 %64, label %13, label %12
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter26VisitNativeFunctionLiteralEPNS0_21NativeFunctionLiteralE(%"class.v8::internal::CallPrinter"* nocapture, %"class.v8::internal::NativeFunctionLiteral"* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter16VisitConditionalEPNS0_11ConditionalE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::Conditional"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Conditional", %"class.v8::internal::Conditional"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %16 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  store i8 1, i8* %11, align 8
  br label %21

20:                                               ; preds = %14
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %21

21:                                               ; preds = %10, %19, %20, %9
  %22 = getelementptr inbounds %"class.v8::internal::Conditional", %"class.v8::internal::Conditional"* %1, i64 0, i32 2
  %23 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %23, i64 0, i32 0
  %25 = load i8, i8* %6, align 4, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %21
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %39

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %39

32:                                               ; preds = %28
  %33 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %34 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %33, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  store i8 1, i8* %29, align 8
  br label %39

38:                                               ; preds = %32
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %24) #10
  br label %39

39:                                               ; preds = %28, %37, %38, %27
  %40 = getelementptr inbounds %"class.v8::internal::Conditional", %"class.v8::internal::Conditional"* %1, i64 0, i32 3
  %41 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %41, i64 0, i32 0
  %43 = load i8, i8* %6, align 4, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %39
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %57

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %57

50:                                               ; preds = %46
  %51 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %52 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %51, %53
  br i1 %54, label %55, label %56

55:                                               ; preds = %50
  store i8 1, i8* %47, align 8
  br label %57

56:                                               ; preds = %50
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %42) #10
  br label %57

57:                                               ; preds = %46, %55, %56, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter12VisitLiteralEPNS0_7LiteralE(%"class.v8::internal::CallPrinter"* nocapture, %"class.v8::internal::Literal"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = tail call i64* @_ZNK2v88internal7Literal10BuildValueINS0_7IsolateEEENS0_6HandleINS0_6ObjectEEEPT_(%"class.v8::internal::Literal"* %1, %"class.v8::internal::Isolate"* %4) #10
  tail call void @_ZN2v88internal11CallPrinter12PrintLiteralENS0_6HandleINS0_6ObjectEEEb(%"class.v8::internal::CallPrinter"* %0, i64* %5, i1 zeroext true)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter12PrintLiteralENS0_6HandleINS0_6ObjectEEEb(%"class.v8::internal::CallPrinter"* nocapture, i64*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 0
  br label %5

5:                                                ; preds = %111, %3
  %6 = phi i64* [ %1, %3 ], [ %112, %111 ]
  %7 = phi i1 [ %2, %3 ], [ false, %111 ]
  %8 = load i64, i64* %6, align 8
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %38, label %11

11:                                               ; preds = %5
  %12 = and i64 %8, -4294967296
  %13 = add i64 %8, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp ult i16 %20, 64
  br i1 %21, label %22, label %38

22:                                               ; preds = %11
  br i1 %7, label %23, label %126

23:                                               ; preds = %22
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0))
  %24 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %25 = load i8, i8* %24, align 4, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 6
  %29 = load i8, i8* %28, align 1, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %37

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %32, align 8
  %35 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.v8::internal::IncrementalStringBuilder"*, %"class.v8::internal::IncrementalStringBuilder"** %35, align 8
  tail call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* %36, i64* %6) #10
  br label %37

37:                                               ; preds = %23, %27, %31
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0))
  br label %140

38:                                               ; preds = %5, %11
  %39 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %39, i64 0, i32 0, i32 7, i32 0, i64 6
  %41 = load i64, i64* %40, align 8
  %42 = trunc i64 %8 to i32
  %43 = trunc i64 %41 to i32
  %44 = icmp eq i32 %42, %43
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i64 0, i64 0))
  br label %140

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %39, i64 0, i32 0, i32 7, i32 0, i64 7
  %48 = load i64, i64* %47, align 8
  %49 = trunc i64 %48 to i32
  %50 = icmp eq i32 %42, %49
  br i1 %50, label %51, label %52

51:                                               ; preds = %46
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i64 0, i64 0))
  br label %140

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %39, i64 0, i32 0, i32 7, i32 0, i64 8
  %54 = load i64, i64* %53, align 8
  %55 = trunc i64 %54 to i32
  %56 = icmp eq i32 %42, %55
  br i1 %56, label %57, label %58

57:                                               ; preds = %52
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0))
  br label %140

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %39, i64 0, i32 0, i32 7, i32 0, i64 4
  %60 = load i64, i64* %59, align 8
  %61 = trunc i64 %60 to i32
  %62 = icmp eq i32 %42, %61
  br i1 %62, label %63, label %64

63:                                               ; preds = %58
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0))
  br label %140

64:                                               ; preds = %58
  br i1 %10, label %76, label %65

65:                                               ; preds = %64
  %66 = and i64 %8, -4294967296
  %67 = add i64 %8, -1
  %68 = inttoptr i64 %67 to i32*
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = zext i32 %69 to i64
  %71 = or i64 %66, %70
  %72 = add i64 %71, 7
  %73 = inttoptr i64 %72 to i16*
  %74 = load atomic i16, i16* %73 monotonic, align 2
  %75 = icmp eq i16 %74, 66
  br i1 %75, label %76, label %92

76:                                               ; preds = %64, %65
  %77 = bitcast %"class.v8::internal::Isolate"* %39 to %"class.v8::internal::Factory"*
  %78 = tail call i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"* %77, i64* %6, i32 2) #10
  %79 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %80 = load i8, i8* %79, align 4, !range !2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %140, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 6
  %84 = load i8, i8* %83, align 1, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %140

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %87, align 8
  %90 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %91 = load %"class.v8::internal::IncrementalStringBuilder"*, %"class.v8::internal::IncrementalStringBuilder"** %90, align 8
  tail call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* %91, i64* %78) #10
  br label %140

92:                                               ; preds = %65
  %93 = load atomic i32, i32* %68 monotonic, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %66, %94
  %96 = add i64 %95, 7
  %97 = inttoptr i64 %96 to i16*
  %98 = load atomic i16, i16* %97 monotonic, align 2
  %99 = icmp eq i16 %98, 64
  br i1 %99, label %100, label %140

100:                                              ; preds = %92
  %101 = add i64 %8, 11
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = zext i32 %103 to i64
  %105 = or i64 %66, %104
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %39, i64 0, i32 31, i32 4
  %107 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %106, align 8
  %108 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %107, null
  br i1 %108, label %113, label %109

109:                                              ; preds = %100
  %110 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %107, i64 %105) #10
  br label %111

111:                                              ; preds = %109, %121
  %112 = phi i64* [ %110, %109 ], [ %122, %121 ]
  br label %5

113:                                              ; preds = %100
  %114 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %39, i64 0, i32 31, i32 0
  %115 = load i64*, i64** %114, align 8
  %116 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %39, i64 0, i32 31, i32 1
  %117 = load i64*, i64** %116, align 8
  %118 = icmp eq i64* %115, %117
  br i1 %118, label %119, label %121

119:                                              ; preds = %113
  %120 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %39) #10
  br label %121

121:                                              ; preds = %119, %113
  %122 = phi i64* [ %120, %119 ], [ %115, %113 ]
  %123 = ptrtoint i64* %122 to i64
  %124 = add i64 %123, 8
  %125 = inttoptr i64 %124 to i64*
  store i64* %125, i64** %114, align 8
  store i64 %105, i64* %122, align 8
  br label %111

126:                                              ; preds = %22
  %127 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %128 = load i8, i8* %127, align 4, !range !2
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %140, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 6
  %132 = load i8, i8* %131, align 1, !range !2
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %134, label %140

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %136 = load i32, i32* %135, align 8
  %137 = add nsw i32 %136, 1
  store i32 %137, i32* %135, align 8
  %138 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %139 = load %"class.v8::internal::IncrementalStringBuilder"*, %"class.v8::internal::IncrementalStringBuilder"** %138, align 8
  tail call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* %139, i64* %6) #10
  br label %140

140:                                              ; preds = %92, %134, %130, %126, %86, %82, %76, %45, %57, %63, %51, %37
  ret void
}

declare i64* @_ZNK2v88internal7Literal10BuildValueINS0_7IsolateEEENS0_6HandleINS0_6ObjectEEEPT_(%"class.v8::internal::Literal"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter18VisitRegExpLiteralEPNS0_13RegExpLiteralE(%"class.v8::internal::CallPrinter"* nocapture, %"class.v8::internal::RegExpLiteral"* nocapture readonly) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %3 = getelementptr inbounds %"class.v8::internal::RegExpLiteral", %"class.v8::internal::RegExpLiteral"* %1, i64 0, i32 2
  %4 = bitcast %"class.v8::internal::AstRawString"** %3 to i64***
  %5 = load i64**, i64*** %4, align 8
  %6 = load i64*, i64** %5, align 8
  tail call void @_ZN2v88internal11CallPrinter12PrintLiteralENS0_6HandleINS0_6ObjectEEEb(%"class.v8::internal::CallPrinter"* %0, i64* %6, i1 zeroext false)
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %7 = getelementptr inbounds %"class.v8::internal::RegExpLiteral", %"class.v8::internal::RegExpLiteral"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = trunc i32 %8 to i8
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %12 = load i32, i32* %7, align 8
  br label %13

13:                                               ; preds = %11, %2
  %14 = phi i32 [ %12, %11 ], [ %8, %2 ]
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %18 = load i32, i32* %7, align 8
  br label %19

19:                                               ; preds = %13, %17
  %20 = phi i32 [ %14, %13 ], [ %18, %17 ]
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0))
  %24 = load i32, i32* %7, align 8
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi i32 [ %20, %19 ], [ %24, %23 ]
  %27 = and i32 %26, 64
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  %30 = load i32, i32* %7, align 8
  br label %31

31:                                               ; preds = %25, %29
  %32 = phi i32 [ %26, %25 ], [ %30, %29 ]
  %33 = and i32 %32, 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0))
  %36 = load i32, i32* %7, align 8
  br label %37

37:                                               ; preds = %31, %35
  %38 = phi i32 [ %32, %31 ], [ %36, %35 ]
  %39 = and i32 %38, 16
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0))
  %42 = load i32, i32* %7, align 8
  br label %43

43:                                               ; preds = %37, %41
  %44 = phi i32 [ %38, %37 ], [ %42, %41 ]
  %45 = and i32 %44, 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0))
  br label %48

48:                                               ; preds = %43, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter18VisitObjectLiteralEPNS0_13ObjectLiteralE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::ObjectLiteral"* nocapture readonly) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0))
  %3 = getelementptr inbounds %"class.v8::internal::ObjectLiteral", %"class.v8::internal::ObjectLiteral"* %1, i64 0, i32 3, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::ObjectLiteral", %"class.v8::internal::ObjectLiteral"* %1, i64 0, i32 3, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %9 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %10 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  br label %12

11:                                               ; preds = %33, %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0))
  ret void

12:                                               ; preds = %6, %33
  %13 = phi i64 [ 0, %6 ], [ %34, %33 ]
  %14 = load %"class.v8::internal::ObjectLiteralProperty"**, %"class.v8::internal::ObjectLiteralProperty"*** %7, align 8
  %15 = getelementptr inbounds %"class.v8::internal::ObjectLiteralProperty"*, %"class.v8::internal::ObjectLiteralProperty"** %14, i64 %13
  %16 = bitcast %"class.v8::internal::ObjectLiteralProperty"** %15 to %"class.v8::internal::LiteralProperty"**
  %17 = load %"class.v8::internal::LiteralProperty"*, %"class.v8::internal::LiteralProperty"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::LiteralProperty", %"class.v8::internal::LiteralProperty"* %17, i64 0, i32 1
  %19 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %19, i64 0, i32 0
  %21 = load i8, i8* %8, align 4, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %12
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %33

24:                                               ; preds = %12
  %25 = load i8, i8* %9, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %33

27:                                               ; preds = %24
  %28 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %29 = load i64, i64* %10, align 8
  %30 = icmp ult i64 %28, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  store i8 1, i8* %9, align 8
  br label %33

32:                                               ; preds = %27
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %20) #10
  br label %33

33:                                               ; preds = %24, %31, %32, %23
  %34 = add nuw nsw i64 %13, 1
  %35 = load i32, i32* %3, align 4
  %36 = sext i32 %35 to i64
  %37 = icmp slt i64 %34, %36
  br i1 %37, label %12, label %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter17VisitArrayLiteralEPNS0_12ArrayLiteralE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::ArrayLiteral"* nocapture readonly) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0))
  %3 = getelementptr inbounds %"class.v8::internal::ArrayLiteral", %"class.v8::internal::ArrayLiteral"* %1, i64 0, i32 3, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %91

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::ArrayLiteral", %"class.v8::internal::ArrayLiteral"* %1, i64 0, i32 3, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %9 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %12 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  br label %13

13:                                               ; preds = %6, %84
  %14 = phi i64 [ 0, %6 ], [ %85, %84 ]
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  %17 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %7, align 8
  br label %21

18:                                               ; preds = %13
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0))
  %19 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %7, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %19, i64 %14
  br label %21

21:                                               ; preds = %16, %18
  %22 = phi %"class.v8::internal::Expression"** [ %17, %16 ], [ %20, %18 ]
  %23 = bitcast %"class.v8::internal::Expression"** %22 to %"class.v8::internal::AstNode"**
  %24 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %24, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %26, 63
  %28 = icmp ne i32 %27, 45
  %29 = icmp eq %"class.v8::internal::AstNode"* %24, null
  %30 = or i1 %29, %28
  %31 = load i8, i8* %8, align 4, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %30, label %60, label %33

33:                                               ; preds = %21
  br i1 %32, label %34, label %61

34:                                               ; preds = %33
  %35 = load i32, i32* %9, align 8
  %36 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %24, i64 2
  %37 = bitcast %"class.v8::internal::AstNode"* %36 to %"class.v8::internal::Expression"**
  %38 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %38, i64 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %35, %40
  br i1 %41, label %42, label %75

42:                                               ; preds = %34
  %43 = bitcast %"class.v8::internal::AstNode"* %36 to %"class.v8::internal::Expression"**
  store i8 1, i8* %8, align 4
  %44 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 8
  store i8 1, i8* %44, align 1
  %45 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %43, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %45, i64 0, i32 0
  %47 = load i32, i32* %10, align 8
  %48 = load i8, i8* %11, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %42
  %51 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %52 = load i64, i64* %12, align 8
  %53 = icmp ult i64 %51, %52
  br i1 %53, label %54, label %55

54:                                               ; preds = %50
  store i8 1, i8* %11, align 8
  br label %56

55:                                               ; preds = %50
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %46) #10
  br label %56

56:                                               ; preds = %42, %54, %55
  %57 = load i32, i32* %10, align 8
  %58 = icmp eq i32 %47, %57
  br i1 %58, label %59, label %89

59:                                               ; preds = %56
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %89

60:                                               ; preds = %21
  br i1 %32, label %75, label %61

61:                                               ; preds = %33, %60
  %62 = load i32, i32* %10, align 8
  %63 = load i8, i8* %11, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %71

65:                                               ; preds = %61
  %66 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %67 = load i64, i64* %12, align 8
  %68 = icmp ult i64 %66, %67
  br i1 %68, label %69, label %70

69:                                               ; preds = %65
  store i8 1, i8* %11, align 8
  br label %71

70:                                               ; preds = %65
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %24) #10
  br label %71

71:                                               ; preds = %61, %69, %70
  %72 = load i32, i32* %10, align 8
  %73 = icmp eq i32 %62, %72
  br i1 %73, label %74, label %84

74:                                               ; preds = %71
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %84

75:                                               ; preds = %34, %60
  %76 = load i8, i8* %11, align 8, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %84

78:                                               ; preds = %75
  %79 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %80 = load i64, i64* %12, align 8
  %81 = icmp ult i64 %79, %80
  br i1 %81, label %82, label %83

82:                                               ; preds = %78
  store i8 1, i8* %11, align 8
  br label %84

83:                                               ; preds = %78
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %24) #10
  br label %84

84:                                               ; preds = %75, %82, %83, %71, %74
  %85 = add nuw nsw i64 %14, 1
  %86 = load i32, i32* %3, align 4
  %87 = sext i32 %86 to i64
  %88 = icmp slt i64 %85, %87
  br i1 %88, label %13, label %91

89:                                               ; preds = %56, %59
  %90 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 6
  store i8 1, i8* %90, align 1
  br label %92

91:                                               ; preds = %84, %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0))
  br label %92

92:                                               ; preds = %89, %91
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter18VisitVariableProxyEPNS0_13VariableProxyE(%"class.v8::internal::CallPrinter"* nocapture, %"class.v8::internal::VariableProxy"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 7
  %4 = load i8, i8* %3, align 2, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 256
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.v8::internal::VariableProxy", %"class.v8::internal::VariableProxy"* %1, i64 0, i32 1
  br i1 %10, label %16, label %12

12:                                               ; preds = %6
  %13 = bitcast %union.anon.1140* %11 to %"class.v8::internal::Variable"**
  %14 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %14, i64 0, i32 1
  br label %18

16:                                               ; preds = %6
  %17 = getelementptr inbounds %union.anon.1140, %union.anon.1140* %11, i64 0, i32 0
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi %"class.v8::internal::AstRawString"** [ %15, %12 ], [ %17, %16 ]
  %20 = bitcast %"class.v8::internal::AstRawString"** %19 to i64***
  %21 = load i64**, i64*** %20, align 8
  %22 = load i64*, i64** %21, align 8
  tail call void @_ZN2v88internal11CallPrinter12PrintLiteralENS0_6HandleINS0_6ObjectEEEb(%"class.v8::internal::CallPrinter"* %0, i64* %22, i1 zeroext false)
  br label %24

23:                                               ; preds = %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0))
  br label %24

24:                                               ; preds = %23, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter15VisitAssignmentEPNS0_10AssignmentE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::Assignment"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Assignment", %"class.v8::internal::Assignment"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 63
  %8 = icmp eq i32 %7, 23
  br i1 %8, label %9, label %48

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %17 = load i8, i8* %16, align 4, !range !2
  store i8 1, i8* %16, align 4
  br label %42

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 3
  %20 = bitcast %"class.v8::internal::Expression"* %19 to %"class.v8::internal::ObjectLiteralProperty"***
  %21 = load %"class.v8::internal::ObjectLiteralProperty"**, %"class.v8::internal::ObjectLiteralProperty"*** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 4, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %"class.v8::internal::ObjectLiteralProperty"*, %"class.v8::internal::ObjectLiteralProperty"** %21, i64 %24
  %26 = icmp eq i32 %23, 0
  br i1 %26, label %46, label %29

27:                                               ; preds = %29
  %28 = icmp eq %"class.v8::internal::ObjectLiteralProperty"** %37, %25
  br i1 %28, label %46, label %29

29:                                               ; preds = %18, %27
  %30 = phi %"class.v8::internal::ObjectLiteralProperty"** [ %37, %27 ], [ %21, %18 ]
  %31 = load %"class.v8::internal::ObjectLiteralProperty"*, %"class.v8::internal::ObjectLiteralProperty"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::ObjectLiteralProperty", %"class.v8::internal::ObjectLiteralProperty"* %31, i64 0, i32 0, i32 1
  %33 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %33, i64 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, %13
  %37 = getelementptr inbounds %"class.v8::internal::ObjectLiteralProperty"*, %"class.v8::internal::ObjectLiteralProperty"** %30, i64 1
  br i1 %36, label %38, label %27

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %40 = load i8, i8* %39, align 4, !range !2
  store i8 1, i8* %39, align 4
  %41 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 13
  store %"class.v8::internal::ObjectLiteralProperty"* %31, %"class.v8::internal::ObjectLiteralProperty"** %41, align 8
  br label %42

42:                                               ; preds = %38, %15
  %43 = phi i8 [ %17, %15 ], [ %40, %38 ]
  %44 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 14
  store %"class.v8::internal::Assignment"* %1, %"class.v8::internal::Assignment"** %44, align 8
  %45 = icmp eq i8 %43, 1
  br i1 %45, label %46, label %152

46:                                               ; preds = %27, %18, %42
  %47 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  br label %48

48:                                               ; preds = %46, %2
  %49 = phi %"class.v8::internal::Expression"* [ %47, %46 ], [ %4, %2 ]
  %50 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %49, i64 0, i32 0
  %51 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %52 = load i8, i8* %51, align 4, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %48
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %66

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %57 = load i8, i8* %56, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %66

59:                                               ; preds = %55
  %60 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %61 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %62 = load i64, i64* %61, align 8
  %63 = icmp ult i64 %60, %62
  br i1 %63, label %64, label %65

64:                                               ; preds = %59
  store i8 1, i8* %56, align 8
  br label %66

65:                                               ; preds = %59
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %50) #10
  br label %66

66:                                               ; preds = %55, %64, %65, %54
  %67 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %67, i64 0, i32 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = and i32 %69, 63
  %71 = icmp eq i32 %70, 24
  %72 = getelementptr inbounds %"class.v8::internal::Assignment", %"class.v8::internal::Assignment"* %1, i64 0, i32 2
  %73 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %73, i64 0, i32 0
  br i1 %71, label %75, label %137

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %73, i64 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 4
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %77, %79
  br i1 %80, label %81, label %106

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 8
  store i8 1, i8* %82, align 1
  %83 = load i8, i8* %51, align 4, !range !2
  %84 = icmp eq i8 %83, 0
  store i8 1, i8* %51, align 4
  %85 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %72, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %85, i64 0, i32 0
  %87 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %90 = load i8, i8* %89, align 8, !range !2
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %99

92:                                               ; preds = %81
  %93 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %94 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %95 = load i64, i64* %94, align 8
  %96 = icmp ult i64 %93, %95
  br i1 %96, label %97, label %98

97:                                               ; preds = %92
  store i8 1, i8* %89, align 8
  br label %99

98:                                               ; preds = %92
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %86) #10
  br label %99

99:                                               ; preds = %81, %97, %98
  %100 = load i32, i32* %87, align 8
  %101 = icmp eq i32 %88, %100
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %103

103:                                              ; preds = %99, %102
  br i1 %84, label %104, label %189

104:                                              ; preds = %103
  %105 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 6
  store i8 1, i8* %105, align 1
  store i8 0, i8* %51, align 4
  br label %189

106:                                              ; preds = %75
  %107 = load i8, i8* %51, align 4, !range !2
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %126, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %113 = load i8, i8* %112, align 8, !range !2
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %115, label %122

115:                                              ; preds = %109
  %116 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %117 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %118 = load i64, i64* %117, align 8
  %119 = icmp ult i64 %116, %118
  br i1 %119, label %120, label %121

120:                                              ; preds = %115
  store i8 1, i8* %112, align 8
  br label %122

121:                                              ; preds = %115
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %74) #10
  br label %122

122:                                              ; preds = %109, %120, %121
  %123 = load i32, i32* %110, align 8
  %124 = icmp eq i32 %111, %123
  br i1 %124, label %125, label %189

125:                                              ; preds = %122
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %189

126:                                              ; preds = %106
  %127 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %128 = load i8, i8* %127, align 8, !range !2
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %189

130:                                              ; preds = %126
  %131 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %132 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %133 = load i64, i64* %132, align 8
  %134 = icmp ult i64 %131, %133
  br i1 %134, label %135, label %136

135:                                              ; preds = %130
  store i8 1, i8* %127, align 8
  br label %189

136:                                              ; preds = %130
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %74) #10
  br label %189

137:                                              ; preds = %66
  %138 = load i8, i8* %51, align 4, !range !2
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %141, label %140

140:                                              ; preds = %137
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %189

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %143 = load i8, i8* %142, align 8, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %189

145:                                              ; preds = %141
  %146 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %147 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %148 = load i64, i64* %147, align 8
  %149 = icmp ult i64 %146, %148
  br i1 %149, label %150, label %151

150:                                              ; preds = %145
  store i8 1, i8* %142, align 8
  br label %189

151:                                              ; preds = %145
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %74) #10
  br label %189

152:                                              ; preds = %42
  %153 = getelementptr inbounds %"class.v8::internal::Assignment", %"class.v8::internal::Assignment"* %1, i64 0, i32 2
  %154 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %153, align 8
  %155 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %154, i64 0, i32 0
  %156 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %157 = load i8, i8* %156, align 4, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %176, label %159

159:                                              ; preds = %152
  %160 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %161 = load i32, i32* %160, align 8
  %162 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %163 = load i8, i8* %162, align 8, !range !2
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %165, label %172

165:                                              ; preds = %159
  %166 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %167 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %168 = load i64, i64* %167, align 8
  %169 = icmp ult i64 %166, %168
  br i1 %169, label %170, label %171

170:                                              ; preds = %165
  store i8 1, i8* %162, align 8
  br label %172

171:                                              ; preds = %165
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %155) #10
  br label %172

172:                                              ; preds = %159, %170, %171
  %173 = load i32, i32* %160, align 8
  %174 = icmp eq i32 %161, %173
  br i1 %174, label %175, label %187

175:                                              ; preds = %172
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %187

176:                                              ; preds = %152
  %177 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %178 = load i8, i8* %177, align 8, !range !2
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %180, label %187

180:                                              ; preds = %176
  %181 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %182 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %183 = load i64, i64* %182, align 8
  %184 = icmp ult i64 %181, %183
  br i1 %184, label %185, label %186

185:                                              ; preds = %180
  store i8 1, i8* %177, align 8
  br label %187

186:                                              ; preds = %180
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %155) #10
  br label %187

187:                                              ; preds = %176, %185, %186, %172, %175
  %188 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 6
  store i8 1, i8* %188, align 1
  store i8 0, i8* %156, align 4
  br label %189

189:                                              ; preds = %141, %150, %126, %135, %140, %151, %125, %122, %136, %104, %103, %187
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter23VisitCompoundAssignmentEPNS0_18CompoundAssignmentE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::CompoundAssignment"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::CompoundAssignment", %"class.v8::internal::CompoundAssignment"* %1, i64 0, i32 0
  tail call void @_ZN2v88internal11CallPrinter15VisitAssignmentEPNS0_10AssignmentE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::Assignment"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter10VisitYieldEPNS0_5YieldE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::Yield"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Yield", %"class.v8::internal::Yield"* %1, i64 0, i32 0, i32 1
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %16 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  store i8 1, i8* %11, align 8
  br label %21

20:                                               ; preds = %14
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %21

21:                                               ; preds = %10, %19, %20, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter14VisitYieldStarEPNS0_9YieldStarE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::YieldStar"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %27

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::YieldStar", %"class.v8::internal::YieldStar"* %1, i64 0, i32 0, i32 1
  %10 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %10, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %8, %12
  br i1 %13, label %14, label %28

14:                                               ; preds = %6
  store i8 1, i8* %3, align 4
  %15 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 16
  %16 = load i8, i8* %15, align 8
  %17 = add i8 %16, -12
  %18 = icmp ult i8 %17, 7
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 9
  store i8 1, i8* %20, align 8
  br label %23

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 8
  store i8 1, i8* %22, align 1
  br label %23

23:                                               ; preds = %19, %21
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0))
  %24 = load i8, i8* %3, align 4
  %25 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %9, align 8
  %26 = icmp eq i8 %24, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %2, %23
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %41

28:                                               ; preds = %6, %23
  %29 = phi %"class.v8::internal::Expression"* [ %25, %23 ], [ %10, %6 ]
  %30 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %29, i64 0, i32 0
  %31 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %41

34:                                               ; preds = %28
  %35 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %36 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %37 = load i64, i64* %36, align 8
  %38 = icmp ult i64 %35, %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %34
  store i8 1, i8* %31, align 8
  br label %41

40:                                               ; preds = %34
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %30) #10
  br label %41

41:                                               ; preds = %28, %39, %40, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter10VisitAwaitEPNS0_5AwaitE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::Await"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Await", %"class.v8::internal::Await"* %1, i64 0, i32 0, i32 1
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %16 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  store i8 1, i8* %11, align 8
  br label %21

20:                                               ; preds = %14
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %21

21:                                               ; preds = %10, %19, %20, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter10VisitThrowEPNS0_5ThrowE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::Throw"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Throw", %"class.v8::internal::Throw"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %16 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  store i8 1, i8* %11, align 8
  br label %21

20:                                               ; preds = %14
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %21

21:                                               ; preds = %10, %19, %20, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter18VisitOptionalChainEPNS0_13OptionalChainE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::OptionalChain"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::OptionalChain", %"class.v8::internal::OptionalChain"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %16 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  store i8 1, i8* %11, align 8
  br label %21

20:                                               ; preds = %14
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %21

21:                                               ; preds = %10, %19, %20, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter13VisitPropertyEPNS0_8PropertyE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::Property"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Property", %"class.v8::internal::Property"* %1, i64 0, i32 2
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 63
  %9 = icmp eq i32 %8, 41
  %10 = bitcast %"class.v8::internal::Expression"* %4 to %"class.v8::internal::Literal"*
  %11 = select i1 %9, %"class.v8::internal::Literal"* %10, %"class.v8::internal::Literal"* null
  %12 = icmp eq %"class.v8::internal::Literal"* %11, null
  br i1 %12, label %31, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %14, align 8
  %16 = tail call i64* @_ZNK2v88internal7Literal10BuildValueINS0_7IsolateEEENS0_6HandleINS0_6ObjectEEEPT_(%"class.v8::internal::Literal"* nonnull %11, %"class.v8::internal::Isolate"* %15) #10
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %31, label %20

20:                                               ; preds = %13
  %21 = and i64 %17, -4294967296
  %22 = add i64 %17, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = icmp ult i16 %29, 32
  br label %31

31:                                               ; preds = %20, %13, %2
  %32 = phi i1 [ false, %2 ], [ false, %13 ], [ %30, %20 ]
  %33 = getelementptr inbounds %"class.v8::internal::Property", %"class.v8::internal::Property"* %1, i64 0, i32 1
  %34 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %34, i64 0, i32 0
  %36 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %37 = load i8, i8* %36, align 4, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %56, label %39

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %52

45:                                               ; preds = %39
  %46 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %47 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %48 = load i64, i64* %47, align 8
  %49 = icmp ult i64 %46, %48
  br i1 %49, label %50, label %51

50:                                               ; preds = %45
  store i8 1, i8* %42, align 8
  br label %52

51:                                               ; preds = %45
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %35) #10
  br label %52

52:                                               ; preds = %39, %50, %51
  %53 = load i32, i32* %40, align 8
  %54 = icmp eq i32 %41, %53
  br i1 %54, label %55, label %67

55:                                               ; preds = %52
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %67

56:                                               ; preds = %31
  %57 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %56
  %61 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %62 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %63 = load i64, i64* %62, align 8
  %64 = icmp ult i64 %61, %63
  br i1 %64, label %65, label %66

65:                                               ; preds = %60
  store i8 1, i8* %57, align 8
  br label %67

66:                                               ; preds = %60
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %35) #10
  br label %67

67:                                               ; preds = %56, %65, %66, %52, %55
  %68 = getelementptr inbounds %"class.v8::internal::Property", %"class.v8::internal::Property"* %1, i64 0, i32 0, i32 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = trunc i32 %69 to i8
  %71 = icmp slt i8 %70, 0
  br i1 %32, label %72, label %78

72:                                               ; preds = %67
  br i1 %71, label %73, label %74

73:                                               ; preds = %72
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0))
  br label %74

74:                                               ; preds = %73, %72
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0))
  %75 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 0
  %76 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %75, align 8
  %77 = tail call i64* @_ZNK2v88internal7Literal10BuildValueINS0_7IsolateEEENS0_6HandleINS0_6ObjectEEEPT_(%"class.v8::internal::Literal"* %11, %"class.v8::internal::Isolate"* %76) #10
  tail call void @_ZN2v88internal11CallPrinter12PrintLiteralENS0_6HandleINS0_6ObjectEEEb(%"class.v8::internal::CallPrinter"* %0, i64* %77, i1 zeroext false)
  br label %112

78:                                               ; preds = %67
  br i1 %71, label %79, label %80

79:                                               ; preds = %78
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0))
  br label %80

80:                                               ; preds = %79, %78
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0))
  %81 = load i8, i8* %36, align 4, !range !2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %100, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %85 = load i32, i32* %84, align 8
  %86 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %87 = load i8, i8* %86, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %96

89:                                               ; preds = %83
  %90 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %91 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %92 = load i64, i64* %91, align 8
  %93 = icmp ult i64 %90, %92
  br i1 %93, label %94, label %95

94:                                               ; preds = %89
  store i8 1, i8* %86, align 8
  br label %96

95:                                               ; preds = %89
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %96

96:                                               ; preds = %83, %94, %95
  %97 = load i32, i32* %84, align 8
  %98 = icmp eq i32 %85, %97
  br i1 %98, label %99, label %111

99:                                               ; preds = %96
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %111

100:                                              ; preds = %80
  %101 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %102 = load i8, i8* %101, align 8, !range !2
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %111

104:                                              ; preds = %100
  %105 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %106 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %107 = load i64, i64* %106, align 8
  %108 = icmp ult i64 %105, %107
  br i1 %108, label %109, label %110

109:                                              ; preds = %104
  store i8 1, i8* %101, align 8
  br label %111

110:                                              ; preds = %104
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %111

111:                                              ; preds = %100, %109, %110, %96, %99
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0))
  br label %112

112:                                              ; preds = %111, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter9VisitCallEPNS0_4CallE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::Call"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Call", %"class.v8::internal::Call"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %76

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 12
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %51

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  store i8 1, i8* %13, align 4
  %14 = getelementptr inbounds %"class.v8::internal::Call", %"class.v8::internal::Call"* %1, i64 0, i32 0, i32 2, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %15, -1
  %17 = getelementptr inbounds %"class.v8::internal::Call", %"class.v8::internal::Call"* %1, i64 0, i32 0, i32 2, i32 0
  %18 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %17, align 8
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %18, i64 %19
  %21 = bitcast %"class.v8::internal::Expression"** %20 to %"class.v8::internal::AstNode"**
  %22 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 63
  %26 = icmp eq i32 %25, 45
  %27 = bitcast %"class.v8::internal::AstNode"* %22 to %"class.v8::internal::Spread"*
  %28 = select i1 %26, %"class.v8::internal::Spread"* %27, %"class.v8::internal::Spread"* null
  %29 = getelementptr inbounds %"class.v8::internal::Spread", %"class.v8::internal::Spread"* %28, i64 0, i32 2
  %30 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 15
  store %"class.v8::internal::Expression"* %30, %"class.v8::internal::Expression"** %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %30, i64 0, i32 0
  %33 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %12
  %39 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %40 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %41 = load i64, i64* %40, align 8
  %42 = icmp ult i64 %39, %41
  br i1 %42, label %43, label %44

43:                                               ; preds = %38
  store i8 1, i8* %35, align 8
  br label %45

44:                                               ; preds = %38
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %32) #10
  br label %45

45:                                               ; preds = %12, %43, %44
  %46 = load i32, i32* %33, align 8
  %47 = icmp eq i32 %34, %46
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %49

49:                                               ; preds = %45, %48
  %50 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 6
  store i8 1, i8* %50, align 1
  store i8 0, i8* %13, align 4
  br label %196

51:                                               ; preds = %8
  %52 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 10
  store i8 1, i8* %52, align 1
  %53 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %54 = load i8, i8* %53, align 4, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %70

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 7
  %58 = load i8, i8* %57, align 2, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %69

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.v8::internal::Call", %"class.v8::internal::Call"* %1, i64 0, i32 0, i32 1
  %62 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %62, i64 0, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, 63
  %66 = icmp eq i32 %65, 52
  br i1 %66, label %67, label %69

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 6
  store i8 1, i8* %68, align 1
  br label %196

69:                                               ; preds = %56, %60
  store i8 1, i8* %53, align 4
  br label %70

70:                                               ; preds = %69, %51
  %71 = phi i1 [ false, %51 ], [ true, %69 ]
  %72 = getelementptr inbounds %"class.v8::internal::Call", %"class.v8::internal::Call"* %1, i64 0, i32 0, i32 1
  %73 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %73, i64 0, i32 0
  %75 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  br label %84

76:                                               ; preds = %2
  %77 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %78 = load i8, i8* %77, align 4, !range !2
  %79 = getelementptr inbounds %"class.v8::internal::Call", %"class.v8::internal::Call"* %1, i64 0, i32 0, i32 1
  %80 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %80, i64 0, i32 0
  %82 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %83 = icmp eq i8 %78, 0
  br i1 %83, label %104, label %84

84:                                               ; preds = %70, %76
  %85 = phi i8* [ %75, %70 ], [ %82, %76 ]
  %86 = phi %"class.v8::internal::AstNode"* [ %74, %70 ], [ %81, %76 ]
  %87 = phi i1 [ %71, %70 ], [ false, %76 ]
  %88 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %100

93:                                               ; preds = %84
  %94 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %95 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %96 = load i64, i64* %95, align 8
  %97 = icmp ult i64 %94, %96
  br i1 %97, label %98, label %99

98:                                               ; preds = %93
  store i8 1, i8* %90, align 8
  br label %100

99:                                               ; preds = %93
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %86) #10
  br label %100

100:                                              ; preds = %84, %98, %99
  %101 = load i32, i32* %88, align 8
  %102 = icmp eq i32 %89, %101
  br i1 %102, label %103, label %115

103:                                              ; preds = %100
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br i1 %87, label %158, label %116

104:                                              ; preds = %76
  %105 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %108, label %116

108:                                              ; preds = %104
  %109 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %110 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %111 = load i64, i64* %110, align 8
  %112 = icmp ult i64 %109, %111
  br i1 %112, label %113, label %114

113:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  br label %116

114:                                              ; preds = %108
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %81) #10
  br label %116

115:                                              ; preds = %100
  br i1 %87, label %158, label %116

116:                                              ; preds = %114, %113, %104, %103, %115
  %117 = phi i8* [ %85, %115 ], [ %85, %103 ], [ %82, %104 ], [ %82, %113 ], [ %82, %114 ]
  %118 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 8
  %119 = load i8, i8* %118, align 1, !range !2
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %116
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0))
  br label %122

122:                                              ; preds = %116, %121
  %123 = load i8, i8* %117, align 4, !range !2
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %196

125:                                              ; preds = %122
  %126 = getelementptr inbounds %"class.v8::internal::Call", %"class.v8::internal::Call"* %1, i64 0, i32 0, i32 2, i32 2
  %127 = load i32, i32* %126, align 4
  %128 = icmp sgt i32 %127, 0
  br i1 %128, label %129, label %196

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.v8::internal::Call", %"class.v8::internal::Call"* %1, i64 0, i32 0, i32 2, i32 0
  %131 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %132 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  br label %133

133:                                              ; preds = %156, %129
  %134 = phi i8 [ 0, %129 ], [ %157, %156 ]
  %135 = phi i64 [ 0, %129 ], [ %152, %156 ]
  %136 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %130, align 8
  %137 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %136, i64 %135
  %138 = bitcast %"class.v8::internal::Expression"** %137 to %"class.v8::internal::AstNode"**
  %139 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %138, align 8
  %140 = icmp eq i8 %134, 0
  br i1 %140, label %142, label %141

141:                                              ; preds = %133
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %151

142:                                              ; preds = %133
  %143 = load i8, i8* %131, align 8, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %151

145:                                              ; preds = %142
  %146 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %147 = load i64, i64* %132, align 8
  %148 = icmp ult i64 %146, %147
  br i1 %148, label %149, label %150

149:                                              ; preds = %145
  store i8 1, i8* %131, align 8
  br label %151

150:                                              ; preds = %145
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %139) #10
  br label %151

151:                                              ; preds = %142, %149, %150, %141
  %152 = add nuw nsw i64 %135, 1
  %153 = load i32, i32* %126, align 4
  %154 = sext i32 %153 to i64
  %155 = icmp slt i64 %152, %154
  br i1 %155, label %156, label %196

156:                                              ; preds = %151
  %157 = load i8, i8* %117, align 4, !range !2
  br label %133

158:                                              ; preds = %103, %115
  %159 = load i8, i8* %85, align 4, !range !2
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %161, label %194

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"class.v8::internal::Call", %"class.v8::internal::Call"* %1, i64 0, i32 0, i32 2, i32 2
  %163 = load i32, i32* %162, align 4
  %164 = icmp sgt i32 %163, 0
  br i1 %164, label %165, label %194

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.v8::internal::Call", %"class.v8::internal::Call"* %1, i64 0, i32 0, i32 2, i32 0
  %167 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %168 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  br label %169

169:                                              ; preds = %192, %165
  %170 = phi i8 [ 0, %165 ], [ %193, %192 ]
  %171 = phi i64 [ 0, %165 ], [ %188, %192 ]
  %172 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %166, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %172, i64 %171
  %174 = bitcast %"class.v8::internal::Expression"** %173 to %"class.v8::internal::AstNode"**
  %175 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %174, align 8
  %176 = icmp eq i8 %170, 0
  br i1 %176, label %178, label %177

177:                                              ; preds = %169
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %187

178:                                              ; preds = %169
  %179 = load i8, i8* %167, align 8, !range !2
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %181, label %187

181:                                              ; preds = %178
  %182 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %183 = load i64, i64* %168, align 8
  %184 = icmp ult i64 %182, %183
  br i1 %184, label %185, label %186

185:                                              ; preds = %181
  store i8 1, i8* %167, align 8
  br label %187

186:                                              ; preds = %181
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %175) #10
  br label %187

187:                                              ; preds = %178, %185, %186, %177
  %188 = add nuw nsw i64 %171, 1
  %189 = load i32, i32* %162, align 4
  %190 = sext i32 %189 to i64
  %191 = icmp slt i64 %188, %190
  br i1 %191, label %192, label %194

192:                                              ; preds = %187
  %193 = load i8, i8* %85, align 4, !range !2
  br label %169

194:                                              ; preds = %187, %161, %158
  %195 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 6
  store i8 1, i8* %195, align 1
  store i8 0, i8* %85, align 4
  br label %196

196:                                              ; preds = %151, %125, %122, %194, %67, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter13FindArgumentsEPKNS0_8ZoneListIPNS0_10ExpressionEEE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::ZoneList.1168"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %39

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::ZoneList.1168", %"class.v8::internal::ZoneList.1168"* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %39

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::ZoneList.1168", %"class.v8::internal::ZoneList.1168"* %1, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %13 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  br label %14

14:                                               ; preds = %37, %10
  %15 = phi i8 [ 0, %10 ], [ %38, %37 ]
  %16 = phi i64 [ 0, %10 ], [ %33, %37 ]
  %17 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %11, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %17, i64 %16
  %19 = bitcast %"class.v8::internal::Expression"** %18 to %"class.v8::internal::AstNode"**
  %20 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %19, align 8
  %21 = icmp eq i8 %15, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %14
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %32

23:                                               ; preds = %14
  %24 = load i8, i8* %12, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %23
  %27 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %28 = load i64, i64* %13, align 8
  %29 = icmp ult i64 %27, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  store i8 1, i8* %12, align 8
  br label %32

31:                                               ; preds = %26
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %20) #10
  br label %32

32:                                               ; preds = %23, %30, %31, %22
  %33 = add nuw nsw i64 %16, 1
  %34 = load i32, i32* %7, align 4
  %35 = sext i32 %34 to i64
  %36 = icmp slt i64 %33, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %32
  %38 = load i8, i8* %3, align 4, !range !2
  br label %14

39:                                               ; preds = %32, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter12VisitCallNewEPNS0_7CallNewE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::CallNew"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::CallNew", %"class.v8::internal::CallNew"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %74

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 12
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %51

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  store i8 1, i8* %13, align 4
  %14 = getelementptr inbounds %"class.v8::internal::CallNew", %"class.v8::internal::CallNew"* %1, i64 0, i32 0, i32 2, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %15, -1
  %17 = getelementptr inbounds %"class.v8::internal::CallNew", %"class.v8::internal::CallNew"* %1, i64 0, i32 0, i32 2, i32 0
  %18 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %17, align 8
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %18, i64 %19
  %21 = bitcast %"class.v8::internal::Expression"** %20 to %"class.v8::internal::AstNode"**
  %22 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 63
  %26 = icmp eq i32 %25, 45
  %27 = bitcast %"class.v8::internal::AstNode"* %22 to %"class.v8::internal::Spread"*
  %28 = select i1 %26, %"class.v8::internal::Spread"* %27, %"class.v8::internal::Spread"* null
  %29 = getelementptr inbounds %"class.v8::internal::Spread", %"class.v8::internal::Spread"* %28, i64 0, i32 2
  %30 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 15
  store %"class.v8::internal::Expression"* %30, %"class.v8::internal::Expression"** %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %30, i64 0, i32 0
  %33 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %12
  %39 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %40 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %41 = load i64, i64* %40, align 8
  %42 = icmp ult i64 %39, %41
  br i1 %42, label %43, label %44

43:                                               ; preds = %38
  store i8 1, i8* %35, align 8
  br label %45

44:                                               ; preds = %38
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %32) #10
  br label %45

45:                                               ; preds = %12, %43, %44
  %46 = load i32, i32* %33, align 8
  %47 = icmp eq i32 %34, %46
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %49

49:                                               ; preds = %45, %48
  %50 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 6
  store i8 1, i8* %50, align 1
  store i8 0, i8* %13, align 4
  br label %210

51:                                               ; preds = %8
  %52 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 10
  store i8 1, i8* %52, align 1
  %53 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %54 = load i8, i8* %53, align 4, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.v8::internal::CallNew", %"class.v8::internal::CallNew"* %1, i64 0, i32 0, i32 1
  %58 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %58, i64 0, i32 0
  %60 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  br label %82

61:                                               ; preds = %51
  %62 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 7
  %63 = load i8, i8* %62, align 2, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %153

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.v8::internal::CallNew", %"class.v8::internal::CallNew"* %1, i64 0, i32 0, i32 1
  %67 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %67, i64 0, i32 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = and i32 %69, 63
  %71 = icmp eq i32 %70, 52
  br i1 %71, label %72, label %153

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 6
  store i8 1, i8* %73, align 1
  br label %210

74:                                               ; preds = %2
  %75 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %76 = load i8, i8* %75, align 4, !range !2
  %77 = getelementptr inbounds %"class.v8::internal::CallNew", %"class.v8::internal::CallNew"* %1, i64 0, i32 0, i32 1
  %78 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %78, i64 0, i32 0
  %80 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %81 = icmp eq i8 %76, 0
  br i1 %81, label %105, label %82

82:                                               ; preds = %56, %74
  %83 = phi i8* [ %60, %56 ], [ %80, %74 ]
  %84 = phi %"class.v8::internal::AstNode"* [ %59, %56 ], [ %79, %74 ]
  %85 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 8
  %86 = load i8, i8* %85, align 1, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %104, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %92 = load i8, i8* %91, align 8, !range !2
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %101

94:                                               ; preds = %88
  %95 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %96 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %97 = load i64, i64* %96, align 8
  %98 = icmp ult i64 %95, %97
  br i1 %98, label %99, label %100

99:                                               ; preds = %94
  store i8 1, i8* %91, align 8
  br label %101

100:                                              ; preds = %94
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %84) #10
  br label %101

101:                                              ; preds = %88, %99, %100
  %102 = load i32, i32* %89, align 8
  %103 = icmp eq i32 %90, %102
  br i1 %103, label %104, label %116

104:                                              ; preds = %82, %101
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %116

105:                                              ; preds = %74
  %106 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %107 = load i8, i8* %106, align 8, !range !2
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %109, label %116

109:                                              ; preds = %105
  %110 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %111 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %112 = load i64, i64* %111, align 8
  %113 = icmp ult i64 %110, %112
  br i1 %113, label %114, label %115

114:                                              ; preds = %109
  store i8 1, i8* %106, align 8
  br label %116

115:                                              ; preds = %109
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %79) #10
  br label %116

116:                                              ; preds = %105, %114, %115, %101, %104
  %117 = phi i8* [ %80, %105 ], [ %80, %114 ], [ %80, %115 ], [ %83, %101 ], [ %83, %104 ]
  %118 = load i8, i8* %117, align 4, !range !2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %210

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.v8::internal::CallNew", %"class.v8::internal::CallNew"* %1, i64 0, i32 0, i32 2, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = icmp sgt i32 %122, 0
  br i1 %123, label %124, label %210

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.v8::internal::CallNew", %"class.v8::internal::CallNew"* %1, i64 0, i32 0, i32 2, i32 0
  %126 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %127 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  br label %128

128:                                              ; preds = %151, %124
  %129 = phi i8 [ 0, %124 ], [ %152, %151 ]
  %130 = phi i64 [ 0, %124 ], [ %147, %151 ]
  %131 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %125, align 8
  %132 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %131, i64 %130
  %133 = bitcast %"class.v8::internal::Expression"** %132 to %"class.v8::internal::AstNode"**
  %134 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %133, align 8
  %135 = icmp eq i8 %129, 0
  br i1 %135, label %137, label %136

136:                                              ; preds = %128
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %146

137:                                              ; preds = %128
  %138 = load i8, i8* %126, align 8, !range !2
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %140, label %146

140:                                              ; preds = %137
  %141 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %142 = load i64, i64* %127, align 8
  %143 = icmp ult i64 %141, %142
  br i1 %143, label %144, label %145

144:                                              ; preds = %140
  store i8 1, i8* %126, align 8
  br label %146

145:                                              ; preds = %140
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %134) #10
  br label %146

146:                                              ; preds = %137, %144, %145, %136
  %147 = add nuw nsw i64 %130, 1
  %148 = load i32, i32* %121, align 4
  %149 = sext i32 %148 to i64
  %150 = icmp slt i64 %147, %149
  br i1 %150, label %151, label %210

151:                                              ; preds = %146
  %152 = load i8, i8* %117, align 4, !range !2
  br label %128

153:                                              ; preds = %61, %65
  store i8 1, i8* %53, align 4
  %154 = getelementptr inbounds %"class.v8::internal::CallNew", %"class.v8::internal::CallNew"* %1, i64 0, i32 0, i32 1
  %155 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %154, align 8
  %156 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %155, i64 0, i32 0
  %157 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %158 = load i32, i32* %157, align 8
  %159 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %160 = load i8, i8* %159, align 8, !range !2
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %162, label %169

162:                                              ; preds = %153
  %163 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %164 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %165 = load i64, i64* %164, align 8
  %166 = icmp ult i64 %163, %165
  br i1 %166, label %167, label %168

167:                                              ; preds = %162
  store i8 1, i8* %159, align 8
  br label %169

168:                                              ; preds = %162
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %156) #10
  br label %169

169:                                              ; preds = %153, %167, %168
  %170 = load i32, i32* %157, align 8
  %171 = icmp eq i32 %158, %170
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %173

173:                                              ; preds = %169, %172
  %174 = load i8, i8* %53, align 4, !range !2
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %176, label %208

176:                                              ; preds = %173
  %177 = getelementptr inbounds %"class.v8::internal::CallNew", %"class.v8::internal::CallNew"* %1, i64 0, i32 0, i32 2, i32 2
  %178 = load i32, i32* %177, align 4
  %179 = icmp sgt i32 %178, 0
  br i1 %179, label %180, label %208

180:                                              ; preds = %176
  %181 = getelementptr inbounds %"class.v8::internal::CallNew", %"class.v8::internal::CallNew"* %1, i64 0, i32 0, i32 2, i32 0
  %182 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  br label %183

183:                                              ; preds = %206, %180
  %184 = phi i8 [ 0, %180 ], [ %207, %206 ]
  %185 = phi i64 [ 0, %180 ], [ %202, %206 ]
  %186 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %181, align 8
  %187 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %186, i64 %185
  %188 = bitcast %"class.v8::internal::Expression"** %187 to %"class.v8::internal::AstNode"**
  %189 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %188, align 8
  %190 = icmp eq i8 %184, 0
  br i1 %190, label %192, label %191

191:                                              ; preds = %183
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %201

192:                                              ; preds = %183
  %193 = load i8, i8* %159, align 8, !range !2
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %195, label %201

195:                                              ; preds = %192
  %196 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %197 = load i64, i64* %182, align 8
  %198 = icmp ult i64 %196, %197
  br i1 %198, label %199, label %200

199:                                              ; preds = %195
  store i8 1, i8* %159, align 8
  br label %201

200:                                              ; preds = %195
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %189) #10
  br label %201

201:                                              ; preds = %192, %199, %200, %191
  %202 = add nuw nsw i64 %185, 1
  %203 = load i32, i32* %177, align 4
  %204 = sext i32 %203 to i64
  %205 = icmp slt i64 %202, %204
  br i1 %205, label %206, label %208

206:                                              ; preds = %201
  %207 = load i8, i8* %53, align 4, !range !2
  br label %183

208:                                              ; preds = %201, %176, %173
  %209 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 6
  store i8 1, i8* %209, align 1
  store i8 0, i8* %53, align 4
  br label %210

210:                                              ; preds = %146, %120, %116, %208, %72, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter16VisitCallRuntimeEPNS0_11CallRuntimeE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::CallRuntime"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %39

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::CallRuntime", %"class.v8::internal::CallRuntime"* %1, i64 0, i32 3, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %39

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::CallRuntime", %"class.v8::internal::CallRuntime"* %1, i64 0, i32 3, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %13 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  br label %14

14:                                               ; preds = %37, %10
  %15 = phi i8 [ 0, %10 ], [ %38, %37 ]
  %16 = phi i64 [ 0, %10 ], [ %33, %37 ]
  %17 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %11, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %17, i64 %16
  %19 = bitcast %"class.v8::internal::Expression"** %18 to %"class.v8::internal::AstNode"**
  %20 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %19, align 8
  %21 = icmp eq i8 %15, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %14
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %32

23:                                               ; preds = %14
  %24 = load i8, i8* %12, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %23
  %27 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %28 = load i64, i64* %13, align 8
  %29 = icmp ult i64 %27, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  store i8 1, i8* %12, align 8
  br label %32

31:                                               ; preds = %26
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %20) #10
  br label %32

32:                                               ; preds = %23, %30, %31, %22
  %33 = add nuw nsw i64 %16, 1
  %34 = load i32, i32* %7, align 4
  %35 = sext i32 %34 to i64
  %36 = icmp slt i64 %33, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %32
  %38 = load i8, i8* %3, align 4, !range !2
  br label %14

39:                                               ; preds = %32, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter19VisitUnaryOperationEPNS0_14UnaryOperationE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::UnaryOperation"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::UnaryOperation", %"class.v8::internal::UnaryOperation"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = lshr i32 %4, 7
  %6 = trunc i32 %5 to i8
  %7 = and i8 %6, 127
  switch i8 %7, label %9 [
    i8 51, label %13
    i8 52, label %13
    i8 53, label %8
  ]

8:                                                ; preds = %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0))
  br label %16

9:                                                ; preds = %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0))
  %10 = zext i8 %7 to i64
  %11 = getelementptr inbounds [117 x i8*], [117 x i8*]* @_ZN2v88internal5Token7string_E, i64 0, i64 %10
  %12 = load i8*, i8** %11, align 8
  br label %19

13:                                               ; preds = %2, %2
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0))
  %14 = zext i8 %7 to i64
  %15 = getelementptr inbounds [117 x i8*], [117 x i8*]* @_ZN2v88internal5Token7string_E, i64 0, i64 %14
  br label %16

16:                                               ; preds = %8, %13
  %17 = phi i8** [ getelementptr inbounds ([117 x i8*], [117 x i8*]* @_ZN2v88internal5Token7string_E, i64 0, i64 53), %8 ], [ %15, %13 ]
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* %18)
  br label %19

19:                                               ; preds = %9, %16
  %20 = phi i8* [ %12, %9 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0), %16 ]
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* %20)
  %21 = getelementptr inbounds %"class.v8::internal::UnaryOperation", %"class.v8::internal::UnaryOperation"* %1, i64 0, i32 1
  %22 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %22, i64 0, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %25 = load i8, i8* %24, align 4, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %44, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %40

33:                                               ; preds = %27
  %34 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %35 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %36 = load i64, i64* %35, align 8
  %37 = icmp ult i64 %34, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %33
  store i8 1, i8* %30, align 8
  br label %40

39:                                               ; preds = %33
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %23) #10
  br label %40

40:                                               ; preds = %27, %38, %39
  %41 = load i32, i32* %28, align 8
  %42 = icmp eq i32 %29, %41
  br i1 %42, label %43, label %55

43:                                               ; preds = %40
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %55

44:                                               ; preds = %19
  %45 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %55

48:                                               ; preds = %44
  %49 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %50 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %49, %51
  br i1 %52, label %53, label %54

53:                                               ; preds = %48
  store i8 1, i8* %45, align 8
  br label %55

54:                                               ; preds = %48
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %23) #10
  br label %55

55:                                               ; preds = %44, %53, %54, %40, %43
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0))
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter19VisitCountOperationEPNS0_14CountOperationE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::CountOperation"* nocapture readonly) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0))
  %3 = getelementptr inbounds %"class.v8::internal::CountOperation", %"class.v8::internal::CountOperation"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = trunc i32 %4 to i8
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = lshr i32 %4, 8
  %9 = and i32 %8, 127
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds [117 x i8*], [117 x i8*]* @_ZN2v88internal5Token7string_E, i64 0, i64 %10
  %12 = load i8*, i8** %11, align 8
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* %12)
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds %"class.v8::internal::CountOperation", %"class.v8::internal::CountOperation"* %1, i64 0, i32 1
  %15 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %15, i64 0, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %18 = load i8, i8* %17, align 4, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %37, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %20
  %27 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %28 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %29 = load i64, i64* %28, align 8
  %30 = icmp ult i64 %27, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %26
  store i8 1, i8* %23, align 8
  br label %33

32:                                               ; preds = %26
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %16) #10
  br label %33

33:                                               ; preds = %20, %31, %32
  %34 = load i32, i32* %21, align 8
  %35 = icmp eq i32 %22, %34
  br i1 %35, label %36, label %48

36:                                               ; preds = %33
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %48

37:                                               ; preds = %13
  %38 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %37
  %42 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %43 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %44 = load i64, i64* %43, align 8
  %45 = icmp ult i64 %42, %44
  br i1 %45, label %46, label %47

46:                                               ; preds = %41
  store i8 1, i8* %38, align 8
  br label %48

47:                                               ; preds = %41
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %16) #10
  br label %48

48:                                               ; preds = %37, %46, %47, %33, %36
  %49 = load i32, i32* %3, align 4
  %50 = trunc i32 %49 to i8
  %51 = icmp sgt i8 %50, -1
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = lshr i32 %49, 8
  %54 = and i32 %53, 127
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds [117 x i8*], [117 x i8*]* @_ZN2v88internal5Token7string_E, i64 0, i64 %55
  %57 = load i8*, i8** %56, align 8
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* %57)
  br label %58

58:                                               ; preds = %52, %48
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0))
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter20VisitBinaryOperationEPNS0_15BinaryOperationE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::BinaryOperation"* nocapture readonly) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0))
  %3 = getelementptr inbounds %"class.v8::internal::BinaryOperation", %"class.v8::internal::BinaryOperation"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %22

15:                                               ; preds = %9
  %16 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %17 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %16, %18
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  store i8 1, i8* %12, align 8
  br label %22

21:                                               ; preds = %15
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %22

22:                                               ; preds = %9, %20, %21
  %23 = load i32, i32* %10, align 8
  %24 = icmp eq i32 %11, %23
  br i1 %24, label %25, label %37

25:                                               ; preds = %22
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %37

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %26
  %31 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %32 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %31, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  store i8 1, i8* %27, align 8
  br label %37

36:                                               ; preds = %30
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %37

37:                                               ; preds = %26, %35, %36, %22, %25
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0))
  %38 = getelementptr inbounds %"class.v8::internal::BinaryOperation", %"class.v8::internal::BinaryOperation"* %1, i64 0, i32 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = lshr i32 %39, 7
  %41 = and i32 %40, 127
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds [117 x i8*], [117 x i8*]* @_ZN2v88internal5Token7string_E, i64 0, i64 %42
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* %44)
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0))
  %45 = getelementptr inbounds %"class.v8::internal::BinaryOperation", %"class.v8::internal::BinaryOperation"* %1, i64 0, i32 2
  %46 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %46, i64 0, i32 0
  %48 = load i8, i8* %6, align 4, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %67, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %54 = load i8, i8* %53, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %63

56:                                               ; preds = %50
  %57 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %58 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %59 = load i64, i64* %58, align 8
  %60 = icmp ult i64 %57, %59
  br i1 %60, label %61, label %62

61:                                               ; preds = %56
  store i8 1, i8* %53, align 8
  br label %63

62:                                               ; preds = %56
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %47) #10
  br label %63

63:                                               ; preds = %50, %61, %62
  %64 = load i32, i32* %51, align 8
  %65 = icmp eq i32 %52, %64
  br i1 %65, label %66, label %78

66:                                               ; preds = %63
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %78

67:                                               ; preds = %37
  %68 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %78

71:                                               ; preds = %67
  %72 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %73 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %74 = load i64, i64* %73, align 8
  %75 = icmp ult i64 %72, %74
  br i1 %75, label %76, label %77

76:                                               ; preds = %71
  store i8 1, i8* %68, align 8
  br label %78

77:                                               ; preds = %71
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %47) #10
  br label %78

78:                                               ; preds = %67, %76, %77, %63, %66
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0))
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter18VisitNaryOperationEPNS0_13NaryOperationE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::NaryOperation"* nocapture readonly) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0))
  %3 = getelementptr inbounds %"class.v8::internal::NaryOperation", %"class.v8::internal::NaryOperation"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %22

15:                                               ; preds = %9
  %16 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %17 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %16, %18
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  store i8 1, i8* %12, align 8
  br label %22

21:                                               ; preds = %15
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %22

22:                                               ; preds = %9, %20, %21
  %23 = load i32, i32* %10, align 8
  %24 = icmp eq i32 %11, %23
  br i1 %24, label %25, label %37

25:                                               ; preds = %22
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %37

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %26
  %31 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %32 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %31, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  store i8 1, i8* %27, align 8
  br label %37

36:                                               ; preds = %30
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %37

37:                                               ; preds = %26, %35, %36, %22, %25
  %38 = getelementptr inbounds %"class.v8::internal::NaryOperation", %"class.v8::internal::NaryOperation"* %1, i64 0, i32 2, i32 0
  %39 = getelementptr inbounds %"class.v8::internal::NaryOperation", %"class.v8::internal::NaryOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %40 = bitcast %"struct.v8::internal::NaryOperation::NaryOperationEntry"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::vector.1169"* %38 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %41, %43
  br i1 %44, label %51, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.v8::internal::NaryOperation", %"class.v8::internal::NaryOperation"* %1, i64 0, i32 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.v8::internal::NaryOperation", %"class.v8::internal::NaryOperation"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %49 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %50 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  br label %52

51:                                               ; preds = %89, %37
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0))
  ret void

52:                                               ; preds = %45, %89
  %53 = phi i64 [ 0, %45 ], [ %90, %89 ]
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0))
  %54 = load i32, i32* %46, align 4
  %55 = lshr i32 %54, 7
  %56 = and i32 %55, 127
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds [117 x i8*], [117 x i8*]* @_ZN2v88internal5Token7string_E, i64 0, i64 %57
  %59 = load i8*, i8** %58, align 8
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* %59)
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0))
  %60 = load %"struct.v8::internal::NaryOperation::NaryOperationEntry"*, %"struct.v8::internal::NaryOperation::NaryOperationEntry"** %47, align 8
  %61 = getelementptr inbounds %"struct.v8::internal::NaryOperation::NaryOperationEntry", %"struct.v8::internal::NaryOperation::NaryOperationEntry"* %60, i64 %53, i32 0
  %62 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %62, i64 0, i32 0
  %64 = load i8, i8* %6, align 4, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %80, label %66

66:                                               ; preds = %52
  %67 = load i32, i32* %48, align 8
  %68 = load i8, i8* %49, align 8, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %76

70:                                               ; preds = %66
  %71 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %72 = load i64, i64* %50, align 8
  %73 = icmp ult i64 %71, %72
  br i1 %73, label %74, label %75

74:                                               ; preds = %70
  store i8 1, i8* %49, align 8
  br label %76

75:                                               ; preds = %70
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %63) #10
  br label %76

76:                                               ; preds = %66, %74, %75
  %77 = load i32, i32* %48, align 8
  %78 = icmp eq i32 %67, %77
  br i1 %78, label %79, label %89

79:                                               ; preds = %76
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %89

80:                                               ; preds = %52
  %81 = load i8, i8* %49, align 8, !range !2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %89

83:                                               ; preds = %80
  %84 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %85 = load i64, i64* %50, align 8
  %86 = icmp ult i64 %84, %85
  br i1 %86, label %87, label %88

87:                                               ; preds = %83
  store i8 1, i8* %49, align 8
  br label %89

88:                                               ; preds = %83
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %63) #10
  br label %89

89:                                               ; preds = %80, %87, %88, %76, %79
  %90 = add nuw i64 %53, 1
  %91 = load i64, i64* %40, align 8
  %92 = load i64, i64* %42, align 8
  %93 = sub i64 %91, %92
  %94 = ashr exact i64 %93, 4
  %95 = icmp ult i64 %90, %94
  br i1 %95, label %52, label %51
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter21VisitCompareOperationEPNS0_16CompareOperationE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::CompareOperation"* nocapture readonly) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0))
  %3 = getelementptr inbounds %"class.v8::internal::CompareOperation", %"class.v8::internal::CompareOperation"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %22

15:                                               ; preds = %9
  %16 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %17 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %16, %18
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  store i8 1, i8* %12, align 8
  br label %22

21:                                               ; preds = %15
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %22

22:                                               ; preds = %9, %20, %21
  %23 = load i32, i32* %10, align 8
  %24 = icmp eq i32 %11, %23
  br i1 %24, label %25, label %37

25:                                               ; preds = %22
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %37

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %26
  %31 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %32 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %31, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  store i8 1, i8* %27, align 8
  br label %37

36:                                               ; preds = %30
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %37

37:                                               ; preds = %26, %35, %36, %22, %25
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0))
  %38 = getelementptr inbounds %"class.v8::internal::CompareOperation", %"class.v8::internal::CompareOperation"* %1, i64 0, i32 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = lshr i32 %39, 7
  %41 = and i32 %40, 127
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds [117 x i8*], [117 x i8*]* @_ZN2v88internal5Token7string_E, i64 0, i64 %42
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* %44)
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0))
  %45 = getelementptr inbounds %"class.v8::internal::CompareOperation", %"class.v8::internal::CompareOperation"* %1, i64 0, i32 2
  %46 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %46, i64 0, i32 0
  %48 = load i8, i8* %6, align 4, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %67, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %54 = load i8, i8* %53, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %63

56:                                               ; preds = %50
  %57 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %58 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %59 = load i64, i64* %58, align 8
  %60 = icmp ult i64 %57, %59
  br i1 %60, label %61, label %62

61:                                               ; preds = %56
  store i8 1, i8* %53, align 8
  br label %63

62:                                               ; preds = %56
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %47) #10
  br label %63

63:                                               ; preds = %50, %61, %62
  %64 = load i32, i32* %51, align 8
  %65 = icmp eq i32 %52, %64
  br i1 %65, label %66, label %78

66:                                               ; preds = %63
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %78

67:                                               ; preds = %37
  %68 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %78

71:                                               ; preds = %67
  %72 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %73 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %74 = load i64, i64* %73, align 8
  %75 = icmp ult i64 %72, %74
  br i1 %75, label %76, label %77

76:                                               ; preds = %71
  store i8 1, i8* %68, align 8
  br label %78

77:                                               ; preds = %71
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %47) #10
  br label %78

78:                                               ; preds = %67, %76, %77, %63, %66
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0))
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter11VisitSpreadEPNS0_6SpreadE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::Spread"* nocapture readonly) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0))
  %3 = getelementptr inbounds %"class.v8::internal::Spread", %"class.v8::internal::Spread"* %1, i64 0, i32 2
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %22

15:                                               ; preds = %9
  %16 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %17 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %16, %18
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  store i8 1, i8* %12, align 8
  br label %22

21:                                               ; preds = %15
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %22

22:                                               ; preds = %9, %20, %21
  %23 = load i32, i32* %10, align 8
  %24 = icmp eq i32 %11, %23
  br i1 %24, label %25, label %37

25:                                               ; preds = %22
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %37

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %26
  %31 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %32 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %31, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  store i8 1, i8* %27, align 8
  br label %37

36:                                               ; preds = %30
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %37

37:                                               ; preds = %26, %35, %36, %22, %25
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0))
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter21VisitEmptyParenthesesEPNS0_16EmptyParenthesesE(%"class.v8::internal::CallPrinter"* nocapture readnone, %"class.v8::internal::EmptyParentheses"* nocapture readnone) local_unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0)) #11
  unreachable
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter22VisitGetTemplateObjectEPNS0_17GetTemplateObjectE(%"class.v8::internal::CallPrinter"* nocapture, %"class.v8::internal::GetTemplateObject"* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter20VisitTemplateLiteralEPNS0_15TemplateLiteralE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::TemplateLiteral"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::TemplateLiteral", %"class.v8::internal::TemplateLiteral"* %1, i64 0, i32 2
  %4 = load %"class.v8::internal::ZoneList.1168"*, %"class.v8::internal::ZoneList.1168"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::ZoneList.1168", %"class.v8::internal::ZoneList.1168"* %4, i64 0, i32 0
  %6 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::ZoneList.1168", %"class.v8::internal::ZoneList.1168"* %4, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %6, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %14 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %16 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  br label %18

17:                                               ; preds = %47, %2
  ret void

18:                                               ; preds = %12, %47
  %19 = phi %"class.v8::internal::Expression"** [ %6, %12 ], [ %48, %47 ]
  %20 = bitcast %"class.v8::internal::Expression"** %19 to %"class.v8::internal::AstNode"**
  %21 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %20, align 8
  %22 = load i8, i8* %13, align 4, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %38, label %24

24:                                               ; preds = %18
  %25 = load i32, i32* %14, align 8
  %26 = load i8, i8* %15, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %34

28:                                               ; preds = %24
  %29 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %30 = load i64, i64* %16, align 8
  %31 = icmp ult i64 %29, %30
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  store i8 1, i8* %15, align 8
  br label %34

33:                                               ; preds = %28
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %21) #10
  br label %34

34:                                               ; preds = %24, %32, %33
  %35 = load i32, i32* %14, align 8
  %36 = icmp eq i32 %25, %35
  br i1 %36, label %37, label %47

37:                                               ; preds = %34
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %47

38:                                               ; preds = %18
  %39 = load i8, i8* %15, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %47

41:                                               ; preds = %38
  %42 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %43 = load i64, i64* %16, align 8
  %44 = icmp ult i64 %42, %43
  br i1 %44, label %45, label %46

45:                                               ; preds = %41
  store i8 1, i8* %15, align 8
  br label %47

46:                                               ; preds = %41
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %21) #10
  br label %47

47:                                               ; preds = %38, %45, %46, %34, %37
  %48 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %19, i64 1
  %49 = icmp eq %"class.v8::internal::Expression"** %48, %10
  br i1 %49, label %17, label %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter25VisitImportCallExpressionEPNS0_20ImportCallExpressionE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::ImportCallExpression"* nocapture readonly) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i64 0, i64 0))
  %3 = getelementptr inbounds %"class.v8::internal::ImportCallExpression", %"class.v8::internal::ImportCallExpression"* %1, i64 0, i32 1
  %4 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %22

15:                                               ; preds = %9
  %16 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %17 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %16, %18
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  store i8 1, i8* %12, align 8
  br label %22

21:                                               ; preds = %15
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %22

22:                                               ; preds = %9, %20, %21
  %23 = load i32, i32* %10, align 8
  %24 = icmp eq i32 %11, %23
  br i1 %24, label %25, label %37

25:                                               ; preds = %22
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %37

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %26
  %31 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %32 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %31, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  store i8 1, i8* %27, align 8
  br label %37

36:                                               ; preds = %30
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %5) #10
  br label %37

37:                                               ; preds = %26, %35, %36, %22, %25
  %38 = getelementptr inbounds %"class.v8::internal::ImportCallExpression", %"class.v8::internal::ImportCallExpression"* %1, i64 0, i32 2
  %39 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %38, align 8
  %40 = icmp eq %"class.v8::internal::Expression"* %39, null
  br i1 %40, label %73, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %39, i64 0, i32 0
  %43 = load i8, i8* %6, align 4, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %62, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %49 = load i8, i8* %48, align 8, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %58

51:                                               ; preds = %45
  %52 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %53 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %54 = load i64, i64* %53, align 8
  %55 = icmp ult i64 %52, %54
  br i1 %55, label %56, label %57

56:                                               ; preds = %51
  store i8 1, i8* %48, align 8
  br label %58

57:                                               ; preds = %51
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %42) #10
  br label %58

58:                                               ; preds = %45, %56, %57
  %59 = load i32, i32* %46, align 8
  %60 = icmp eq i32 %47, %59
  br i1 %60, label %61, label %73

61:                                               ; preds = %58
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %73

62:                                               ; preds = %41
  %63 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %64 = load i8, i8* %63, align 8, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %73

66:                                               ; preds = %62
  %67 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %68 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %69 = load i64, i64* %68, align 8
  %70 = icmp ult i64 %67, %69
  br i1 %70, label %71, label %72

71:                                               ; preds = %66
  store i8 1, i8* %63, align 8
  br label %73

72:                                               ; preds = %66
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %42) #10
  br label %73

73:                                               ; preds = %62, %71, %61, %58, %72, %37
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0))
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter19VisitThisExpressionEPNS0_14ThisExpressionE(%"class.v8::internal::CallPrinter"* nocapture, %"class.v8::internal::ThisExpression"* nocapture readnone) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0))
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter27VisitSuperPropertyReferenceEPNS0_22SuperPropertyReferenceE(%"class.v8::internal::CallPrinter"* nocapture, %"class.v8::internal::SuperPropertyReference"* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter23VisitSuperCallReferenceEPNS0_18SuperCallReferenceE(%"class.v8::internal::CallPrinter"* nocapture, %"class.v8::internal::SuperCallReference"* nocapture readnone) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0))
  ret void
}

declare i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"*, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11CallPrinter12PrintLiteralEPKNS0_12AstRawStringEb(%"class.v8::internal::CallPrinter"* nocapture, %"class.v8::internal::AstRawString"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::internal::AstRawString"* %1 to i64**
  %5 = load i64*, i64** %4, align 8
  tail call void @_ZN2v88internal11CallPrinter12PrintLiteralENS0_6HandleINS0_6ObjectEEEb(%"class.v8::internal::CallPrinter"* %0, i64* %5, i1 zeroext %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"*, %"class.v8::internal::AstNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 19
  %5 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 18
  %6 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 16
  %8 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 8
  %9 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 9
  br label %10

10:                                               ; preds = %62, %2
  %11 = phi %"class.v8::internal::AstNode"* [ %1, %2 ], [ %63, %62 ]
  %12 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 63
  switch i8 %15, label %878 [
    i8 55, label %877
    i8 54, label %845
    i8 2, label %30
    i8 3, label %65
    i8 4, label %98
    i8 5, label %100
    i8 6, label %102
    i8 7, label %104
    i8 8, label %134
    i8 9, label %136
    i8 53, label %829
    i8 11, label %152
    i8 12, label %168
    i8 52, label %809
    i8 51, label %807
    i8 15, label %222
    i8 16, label %238
    i8 17, label %271
    i8 18, label %304
    i8 50, label %791
    i8 20, label %23
    i8 21, label %16
    i8 22, label %419
    i8 23, label %421
    i8 24, label %455
    i8 25, label %457
    i8 26, label %459
    i8 27, label %475
    i8 28, label %491
    i8 29, label %493
    i8 30, label %495
    i8 31, label %497
    i8 32, label %532
    i8 33, label %625
    i8 34, label %641
    i8 35, label %643
    i8 36, label %693
    i8 37, label %695
    i8 38, label %696
    i8 49, label %790
    i8 40, label %732
    i8 41, label %744
    i8 48, label %773
    i8 43, label %749
    i8 44, label %765
    i8 45, label %767
    i8 46, label %772
  ]

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 1
  %18 = bitcast %"class.v8::internal::AstNode"* %17 to %"class.v8::internal::ZoneList.1161"**
  %19 = load %"class.v8::internal::ZoneList.1161"*, %"class.v8::internal::ZoneList.1161"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::ZoneList.1161", %"class.v8::internal::ZoneList.1161"* %19, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %367, label %878

23:                                               ; preds = %10
  %24 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 1
  %25 = bitcast %"class.v8::internal::AstNode"* %24 to %"class.v8::internal::ZoneList.1160"**
  %26 = load %"class.v8::internal::ZoneList.1160"*, %"class.v8::internal::ZoneList.1160"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::ZoneList.1160", %"class.v8::internal::ZoneList.1160"* %26, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %337, label %878

30:                                               ; preds = %10
  %31 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 1
  %32 = bitcast %"class.v8::internal::AstNode"* %31 to %"class.v8::internal::Statement"**
  %33 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %33, i64 0, i32 0
  %35 = load i8, i8* %3, align 4, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %30
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %47

38:                                               ; preds = %30
  %39 = load i8, i8* %4, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %51

41:                                               ; preds = %38
  %42 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %43 = load i64, i64* %5, align 8
  %44 = icmp ult i64 %42, %43
  br i1 %44, label %45, label %46

45:                                               ; preds = %41
  store i8 1, i8* %4, align 8
  br label %47

46:                                               ; preds = %41
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %34) #10
  br label %47

47:                                               ; preds = %45, %46, %37
  %48 = load i8, i8* %3, align 4
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %51, label %50

50:                                               ; preds = %47
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %878

51:                                               ; preds = %38, %47
  %52 = load i8, i8* %4, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %878

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 2
  %56 = bitcast %"class.v8::internal::AstNode"* %55 to %"class.v8::internal::Expression"**
  %57 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %57, i64 0, i32 0
  %59 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %60 = load i64, i64* %5, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %64, label %62

62:                                               ; preds = %54, %89, %147, %163, %217, %233, %262, %295, %328, %470, %688, %760, %802, %840, %871
  %63 = phi %"class.v8::internal::AstNode"* [ %58, %54 ], [ %93, %89 ], [ %140, %147 ], [ %156, %163 ], [ %205, %217 ], [ %226, %233 ], [ %266, %262 ], [ %299, %295 ], [ %332, %328 ], [ %463, %470 ], [ %681, %688 ], [ %753, %760 ], [ %795, %802 ], [ %833, %840 ], [ %872, %871 ]
  br label %10

64:                                               ; preds = %54
  store i8 1, i8* %4, align 8
  br label %878

65:                                               ; preds = %10
  %66 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 2
  %67 = bitcast %"class.v8::internal::AstNode"* %66 to %"class.v8::internal::Expression"**
  %68 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %68, i64 0, i32 0
  %70 = load i8, i8* %3, align 4, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %73, label %72

72:                                               ; preds = %65
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %82

73:                                               ; preds = %65
  %74 = load i8, i8* %4, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %86

76:                                               ; preds = %73
  %77 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %78 = load i64, i64* %5, align 8
  %79 = icmp ult i64 %77, %78
  br i1 %79, label %80, label %81

80:                                               ; preds = %76
  store i8 1, i8* %4, align 8
  br label %82

81:                                               ; preds = %76
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %69) #10
  br label %82

82:                                               ; preds = %80, %81, %72
  %83 = load i8, i8* %3, align 4
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %86, label %85

85:                                               ; preds = %82
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %878

86:                                               ; preds = %73, %82
  %87 = load i8, i8* %4, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %878

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 1
  %91 = bitcast %"class.v8::internal::AstNode"* %90 to %"class.v8::internal::Statement"**
  %92 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %92, i64 0, i32 0
  %94 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %95 = load i64, i64* %5, align 8
  %96 = icmp ult i64 %94, %95
  br i1 %96, label %97, label %62

97:                                               ; preds = %89
  store i8 1, i8* %4, align 8
  br label %878

98:                                               ; preds = %10
  %99 = bitcast %"class.v8::internal::AstNode"* %11 to %"class.v8::internal::ForStatement"*
  tail call void @_ZN2v88internal11CallPrinter17VisitForStatementEPNS0_12ForStatementE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::ForStatement"* %99)
  br label %878

100:                                              ; preds = %10
  %101 = bitcast %"class.v8::internal::AstNode"* %11 to %"class.v8::internal::ForInStatement"*
  tail call void @_ZN2v88internal11CallPrinter19VisitForInStatementEPNS0_14ForInStatementE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::ForInStatement"* %101)
  br label %878

102:                                              ; preds = %10
  %103 = bitcast %"class.v8::internal::AstNode"* %11 to %"class.v8::internal::ForOfStatement"*
  tail call void @_ZN2v88internal11CallPrinter19VisitForOfStatementEPNS0_14ForOfStatementE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::ForOfStatement"* %103)
  br label %878

104:                                              ; preds = %10
  %105 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 2, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %106, 0
  br i1 %107, label %108, label %878

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 1
  %110 = bitcast %"class.v8::internal::AstNode"* %109 to %"class.v8::internal::Statement"***
  br label %111

111:                                              ; preds = %108, %129
  %112 = phi i64 [ 0, %108 ], [ %130, %129 ]
  %113 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %110, align 8
  %114 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %113, i64 %112
  %115 = bitcast %"class.v8::internal::Statement"** %114 to %"class.v8::internal::AstNode"**
  %116 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %115, align 8
  %117 = load i8, i8* %3, align 4, !range !2
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %120, label %119

119:                                              ; preds = %111
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %129

120:                                              ; preds = %111
  %121 = load i8, i8* %4, align 8, !range !2
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %129

123:                                              ; preds = %120
  %124 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %125 = load i64, i64* %5, align 8
  %126 = icmp ult i64 %124, %125
  br i1 %126, label %127, label %128

127:                                              ; preds = %123
  store i8 1, i8* %4, align 8
  br label %129

128:                                              ; preds = %123
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %116) #10
  br label %129

129:                                              ; preds = %120, %127, %128, %119
  %130 = add nuw nsw i64 %112, 1
  %131 = load i32, i32* %105, align 4
  %132 = sext i32 %131 to i64
  %133 = icmp slt i64 %130, %132
  br i1 %133, label %111, label %878

134:                                              ; preds = %10
  %135 = bitcast %"class.v8::internal::AstNode"* %11 to %"class.v8::internal::SwitchStatement"*
  tail call void @_ZN2v88internal11CallPrinter20VisitSwitchStatementEPNS0_15SwitchStatementE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::SwitchStatement"* %135)
  br label %878

136:                                              ; preds = %10
  %137 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 1
  %138 = bitcast %"class.v8::internal::AstNode"* %137 to %"class.v8::internal::Expression"**
  %139 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %138, align 8
  %140 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %139, i64 0, i32 0
  %141 = load i8, i8* %3, align 4, !range !2
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %144, label %143

143:                                              ; preds = %136
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %878

144:                                              ; preds = %136
  %145 = load i8, i8* %4, align 8, !range !2
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %147, label %878

147:                                              ; preds = %144
  %148 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %149 = load i64, i64* %5, align 8
  %150 = icmp ult i64 %148, %149
  br i1 %150, label %151, label %62

151:                                              ; preds = %147
  store i8 1, i8* %4, align 8
  br label %878

152:                                              ; preds = %10
  %153 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 2
  %154 = bitcast %"class.v8::internal::AstNode"* %153 to %"class.v8::internal::Statement"**
  %155 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %154, align 8
  %156 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %155, i64 0, i32 0
  %157 = load i8, i8* %3, align 4, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %160, label %159

159:                                              ; preds = %152
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %878

160:                                              ; preds = %152
  %161 = load i8, i8* %4, align 8, !range !2
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %163, label %878

163:                                              ; preds = %160
  %164 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %165 = load i64, i64* %5, align 8
  %166 = icmp ult i64 %164, %165
  br i1 %166, label %167, label %62

167:                                              ; preds = %163
  store i8 1, i8* %4, align 8
  br label %878

168:                                              ; preds = %10
  %169 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 1
  %170 = bitcast %"class.v8::internal::AstNode"* %169 to %"class.v8::internal::Expression"**
  %171 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %170, align 8
  %172 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %171, i64 0, i32 0
  %173 = load i8, i8* %3, align 4, !range !2
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %176, label %175

175:                                              ; preds = %168
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %185

176:                                              ; preds = %168
  %177 = load i8, i8* %4, align 8, !range !2
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %179, label %189

179:                                              ; preds = %176
  %180 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %181 = load i64, i64* %5, align 8
  %182 = icmp ult i64 %180, %181
  br i1 %182, label %183, label %184

183:                                              ; preds = %179
  store i8 1, i8* %4, align 8
  br label %185

184:                                              ; preds = %179
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %172) #10
  br label %185

185:                                              ; preds = %183, %184, %175
  %186 = load i8, i8* %3, align 4
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %189, label %188

188:                                              ; preds = %185
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %202

189:                                              ; preds = %176, %185
  %190 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 2
  %191 = bitcast %"class.v8::internal::AstNode"* %190 to %"class.v8::internal::Statement"**
  %192 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %191, align 8
  %193 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %192, i64 0, i32 0
  %194 = load i8, i8* %4, align 8, !range !2
  %195 = icmp eq i8 %194, 0
  br i1 %195, label %196, label %202

196:                                              ; preds = %189
  %197 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %198 = load i64, i64* %5, align 8
  %199 = icmp ult i64 %197, %198
  br i1 %199, label %200, label %201

200:                                              ; preds = %196
  store i8 1, i8* %4, align 8
  br label %202

201:                                              ; preds = %196
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %193) #10
  br label %202

202:                                              ; preds = %189, %200, %201, %188
  %203 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 3
  %204 = bitcast %"class.v8::internal::AstNode"* %203 to %"class.v8::internal::AstNode"**
  %205 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %204, align 8
  %206 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %205, i64 0, i32 1
  %207 = load i32, i32* %206, align 4
  %208 = and i32 %207, 63
  %209 = icmp eq i32 %208, 10
  br i1 %209, label %878, label %210

210:                                              ; preds = %202
  %211 = load i8, i8* %3, align 4, !range !2
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %214, label %213

213:                                              ; preds = %210
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %878

214:                                              ; preds = %210
  %215 = load i8, i8* %4, align 8, !range !2
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %217, label %878

217:                                              ; preds = %214
  %218 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %219 = load i64, i64* %5, align 8
  %220 = icmp ult i64 %218, %219
  br i1 %220, label %221, label %62

221:                                              ; preds = %217
  store i8 1, i8* %4, align 8
  br label %878

222:                                              ; preds = %10
  %223 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 1
  %224 = bitcast %"class.v8::internal::AstNode"* %223 to %"class.v8::internal::Expression"**
  %225 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %224, align 8
  %226 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %225, i64 0, i32 0
  %227 = load i8, i8* %3, align 4, !range !2
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %230, label %229

229:                                              ; preds = %222
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %878

230:                                              ; preds = %222
  %231 = load i8, i8* %4, align 8, !range !2
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %233, label %878

233:                                              ; preds = %230
  %234 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %235 = load i64, i64* %5, align 8
  %236 = icmp ult i64 %234, %235
  br i1 %236, label %237, label %62

237:                                              ; preds = %233
  store i8 1, i8* %4, align 8
  br label %878

238:                                              ; preds = %10
  %239 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 2
  %240 = bitcast %"class.v8::internal::AstNode"* %239 to %"class.v8::internal::Expression"**
  %241 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %240, align 8
  %242 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %241, i64 0, i32 0
  %243 = load i8, i8* %3, align 4, !range !2
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %246, label %245

245:                                              ; preds = %238
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %255

246:                                              ; preds = %238
  %247 = load i8, i8* %4, align 8, !range !2
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %249, label %259

249:                                              ; preds = %246
  %250 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %251 = load i64, i64* %5, align 8
  %252 = icmp ult i64 %250, %251
  br i1 %252, label %253, label %254

253:                                              ; preds = %249
  store i8 1, i8* %4, align 8
  br label %255

254:                                              ; preds = %249
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %242) #10
  br label %255

255:                                              ; preds = %253, %254, %245
  %256 = load i8, i8* %3, align 4
  %257 = icmp eq i8 %256, 0
  br i1 %257, label %259, label %258

258:                                              ; preds = %255
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %878

259:                                              ; preds = %246, %255
  %260 = load i8, i8* %4, align 8, !range !2
  %261 = icmp eq i8 %260, 0
  br i1 %261, label %262, label %878

262:                                              ; preds = %259
  %263 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 3
  %264 = bitcast %"class.v8::internal::AstNode"* %263 to %"class.v8::internal::Statement"**
  %265 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %264, align 8
  %266 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %265, i64 0, i32 0
  %267 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %268 = load i64, i64* %5, align 8
  %269 = icmp ult i64 %267, %268
  br i1 %269, label %270, label %62

270:                                              ; preds = %262
  store i8 1, i8* %4, align 8
  br label %878

271:                                              ; preds = %10
  %272 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 1
  %273 = bitcast %"class.v8::internal::AstNode"* %272 to %"class.v8::internal::Block"**
  %274 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %273, align 8
  %275 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %274, i64 0, i32 0, i32 0, i32 0
  %276 = load i8, i8* %3, align 4, !range !2
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %279, label %278

278:                                              ; preds = %271
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %288

279:                                              ; preds = %271
  %280 = load i8, i8* %4, align 8, !range !2
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %282, label %292

282:                                              ; preds = %279
  %283 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %284 = load i64, i64* %5, align 8
  %285 = icmp ult i64 %283, %284
  br i1 %285, label %286, label %287

286:                                              ; preds = %282
  store i8 1, i8* %4, align 8
  br label %288

287:                                              ; preds = %282
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %275) #10
  br label %288

288:                                              ; preds = %286, %287, %278
  %289 = load i8, i8* %3, align 4
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %292, label %291

291:                                              ; preds = %288
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %878

292:                                              ; preds = %279, %288
  %293 = load i8, i8* %4, align 8, !range !2
  %294 = icmp eq i8 %293, 0
  br i1 %294, label %295, label %878

295:                                              ; preds = %292
  %296 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 3
  %297 = bitcast %"class.v8::internal::AstNode"* %296 to %"class.v8::internal::Block"**
  %298 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %297, align 8
  %299 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %298, i64 0, i32 0, i32 0, i32 0
  %300 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %301 = load i64, i64* %5, align 8
  %302 = icmp ult i64 %300, %301
  br i1 %302, label %303, label %62

303:                                              ; preds = %295
  store i8 1, i8* %4, align 8
  br label %878

304:                                              ; preds = %10
  %305 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 1
  %306 = bitcast %"class.v8::internal::AstNode"* %305 to %"class.v8::internal::Block"**
  %307 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %306, align 8
  %308 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %307, i64 0, i32 0, i32 0, i32 0
  %309 = load i8, i8* %3, align 4, !range !2
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %312, label %311

311:                                              ; preds = %304
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %321

312:                                              ; preds = %304
  %313 = load i8, i8* %4, align 8, !range !2
  %314 = icmp eq i8 %313, 0
  br i1 %314, label %315, label %325

315:                                              ; preds = %312
  %316 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %317 = load i64, i64* %5, align 8
  %318 = icmp ult i64 %316, %317
  br i1 %318, label %319, label %320

319:                                              ; preds = %315
  store i8 1, i8* %4, align 8
  br label %321

320:                                              ; preds = %315
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %308) #10
  br label %321

321:                                              ; preds = %319, %320, %311
  %322 = load i8, i8* %3, align 4
  %323 = icmp eq i8 %322, 0
  br i1 %323, label %325, label %324

324:                                              ; preds = %321
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %878

325:                                              ; preds = %312, %321
  %326 = load i8, i8* %4, align 8, !range !2
  %327 = icmp eq i8 %326, 0
  br i1 %327, label %328, label %878

328:                                              ; preds = %325
  %329 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 2
  %330 = bitcast %"class.v8::internal::AstNode"* %329 to %"class.v8::internal::Block"**
  %331 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %330, align 8
  %332 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %331, i64 0, i32 0, i32 0, i32 0
  %333 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %334 = load i64, i64* %5, align 8
  %335 = icmp ult i64 %333, %334
  br i1 %335, label %336, label %62

336:                                              ; preds = %328
  store i8 1, i8* %4, align 8
  br label %878

337:                                              ; preds = %23, %360
  %338 = phi i64 [ %361, %360 ], [ 0, %23 ]
  %339 = phi %"class.v8::internal::ZoneList.1160"* [ %362, %360 ], [ %26, %23 ]
  %340 = getelementptr inbounds %"class.v8::internal::ZoneList.1160", %"class.v8::internal::ZoneList.1160"* %339, i64 0, i32 0
  %341 = load %"class.v8::internal::ClassLiteralProperty"**, %"class.v8::internal::ClassLiteralProperty"*** %340, align 8
  %342 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %341, i64 %338
  %343 = bitcast %"class.v8::internal::ClassLiteralProperty"** %342 to %"class.v8::internal::LiteralProperty"**
  %344 = load %"class.v8::internal::LiteralProperty"*, %"class.v8::internal::LiteralProperty"** %343, align 8
  %345 = getelementptr inbounds %"class.v8::internal::LiteralProperty", %"class.v8::internal::LiteralProperty"* %344, i64 0, i32 1
  %346 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %345, align 8
  %347 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %346, i64 0, i32 0
  %348 = load i8, i8* %3, align 4, !range !2
  %349 = icmp eq i8 %348, 0
  br i1 %349, label %351, label %350

350:                                              ; preds = %337
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %360

351:                                              ; preds = %337
  %352 = load i8, i8* %4, align 8, !range !2
  %353 = icmp eq i8 %352, 0
  br i1 %353, label %354, label %360

354:                                              ; preds = %351
  %355 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %356 = load i64, i64* %5, align 8
  %357 = icmp ult i64 %355, %356
  br i1 %357, label %358, label %359

358:                                              ; preds = %354
  store i8 1, i8* %4, align 8
  br label %360

359:                                              ; preds = %354
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %347) #10
  br label %360

360:                                              ; preds = %351, %358, %359, %350
  %361 = add nuw nsw i64 %338, 1
  %362 = load %"class.v8::internal::ZoneList.1160"*, %"class.v8::internal::ZoneList.1160"** %25, align 8
  %363 = getelementptr inbounds %"class.v8::internal::ZoneList.1160", %"class.v8::internal::ZoneList.1160"* %362, i64 0, i32 2
  %364 = load i32, i32* %363, align 4
  %365 = sext i32 %364 to i64
  %366 = icmp slt i64 %361, %365
  br i1 %366, label %337, label %878

367:                                              ; preds = %16, %412
  %368 = phi i64 [ %413, %412 ], [ 0, %16 ]
  %369 = phi %"class.v8::internal::ZoneList.1161"* [ %414, %412 ], [ %19, %16 ]
  %370 = getelementptr inbounds %"class.v8::internal::ZoneList.1161", %"class.v8::internal::ZoneList.1161"* %369, i64 0, i32 0
  %371 = load %"class.v8::internal::ClassLiteralStaticElement"**, %"class.v8::internal::ClassLiteralStaticElement"*** %370, align 8
  %372 = getelementptr inbounds %"class.v8::internal::ClassLiteralStaticElement"*, %"class.v8::internal::ClassLiteralStaticElement"** %371, i64 %368
  %373 = load %"class.v8::internal::ClassLiteralStaticElement"*, %"class.v8::internal::ClassLiteralStaticElement"** %372, align 8
  %374 = getelementptr inbounds %"class.v8::internal::ClassLiteralStaticElement", %"class.v8::internal::ClassLiteralStaticElement"* %373, i64 0, i32 0
  %375 = load i8, i8* %374, align 8
  %376 = icmp eq i8 %375, 0
  br i1 %376, label %377, label %395

377:                                              ; preds = %367
  %378 = getelementptr inbounds %"class.v8::internal::ClassLiteralStaticElement", %"class.v8::internal::ClassLiteralStaticElement"* %373, i64 0, i32 1, i32 0
  %379 = load %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %378, align 8
  %380 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %379, i64 0, i32 0, i32 1
  %381 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %380, align 8
  %382 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %381, i64 0, i32 0
  %383 = load i8, i8* %3, align 4, !range !2
  %384 = icmp eq i8 %383, 0
  br i1 %384, label %386, label %385

385:                                              ; preds = %377
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %412

386:                                              ; preds = %377
  %387 = load i8, i8* %4, align 8, !range !2
  %388 = icmp eq i8 %387, 0
  br i1 %388, label %389, label %412

389:                                              ; preds = %386
  %390 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %391 = load i64, i64* %5, align 8
  %392 = icmp ult i64 %390, %391
  br i1 %392, label %393, label %394

393:                                              ; preds = %389
  store i8 1, i8* %4, align 8
  br label %412

394:                                              ; preds = %389
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %382) #10
  br label %412

395:                                              ; preds = %367
  %396 = getelementptr inbounds %"class.v8::internal::ClassLiteralStaticElement", %"class.v8::internal::ClassLiteralStaticElement"* %373, i64 0, i32 1
  %397 = bitcast %union.anon.1162* %396 to %"class.v8::internal::Block"**
  %398 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %397, align 8
  %399 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %398, i64 0, i32 0, i32 0, i32 0
  %400 = load i8, i8* %3, align 4, !range !2
  %401 = icmp eq i8 %400, 0
  br i1 %401, label %403, label %402

402:                                              ; preds = %395
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %412

403:                                              ; preds = %395
  %404 = load i8, i8* %4, align 8, !range !2
  %405 = icmp eq i8 %404, 0
  br i1 %405, label %406, label %412

406:                                              ; preds = %403
  %407 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %408 = load i64, i64* %5, align 8
  %409 = icmp ult i64 %407, %408
  br i1 %409, label %410, label %411

410:                                              ; preds = %406
  store i8 1, i8* %4, align 8
  br label %412

411:                                              ; preds = %406
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %399) #10
  br label %412

412:                                              ; preds = %403, %410, %386, %393, %402, %411, %385, %394
  %413 = add nuw nsw i64 %368, 1
  %414 = load %"class.v8::internal::ZoneList.1161"*, %"class.v8::internal::ZoneList.1161"** %18, align 8
  %415 = getelementptr inbounds %"class.v8::internal::ZoneList.1161", %"class.v8::internal::ZoneList.1161"* %414, i64 0, i32 2
  %416 = load i32, i32* %415, align 4
  %417 = sext i32 %416 to i64
  %418 = icmp slt i64 %413, %417
  br i1 %418, label %367, label %878

419:                                              ; preds = %10
  %420 = bitcast %"class.v8::internal::AstNode"* %11 to %"class.v8::internal::RegExpLiteral"*
  tail call void @_ZN2v88internal11CallPrinter18VisitRegExpLiteralEPNS0_13RegExpLiteralE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::RegExpLiteral"* %420)
  br label %878

421:                                              ; preds = %10
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #10
  %422 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 4, i32 1
  %423 = load i32, i32* %422, align 4
  %424 = icmp sgt i32 %423, 0
  br i1 %424, label %425, label %454

425:                                              ; preds = %421
  %426 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 3
  %427 = bitcast %"class.v8::internal::AstNode"* %426 to %"class.v8::internal::ObjectLiteralProperty"***
  br label %428

428:                                              ; preds = %425, %449
  %429 = phi i64 [ 0, %425 ], [ %450, %449 ]
  %430 = load %"class.v8::internal::ObjectLiteralProperty"**, %"class.v8::internal::ObjectLiteralProperty"*** %427, align 8
  %431 = getelementptr inbounds %"class.v8::internal::ObjectLiteralProperty"*, %"class.v8::internal::ObjectLiteralProperty"** %430, i64 %429
  %432 = bitcast %"class.v8::internal::ObjectLiteralProperty"** %431 to %"class.v8::internal::LiteralProperty"**
  %433 = load %"class.v8::internal::LiteralProperty"*, %"class.v8::internal::LiteralProperty"** %432, align 8
  %434 = getelementptr inbounds %"class.v8::internal::LiteralProperty", %"class.v8::internal::LiteralProperty"* %433, i64 0, i32 1
  %435 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %434, align 8
  %436 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %435, i64 0, i32 0
  %437 = load i8, i8* %3, align 4, !range !2
  %438 = icmp eq i8 %437, 0
  br i1 %438, label %440, label %439

439:                                              ; preds = %428
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %449

440:                                              ; preds = %428
  %441 = load i8, i8* %4, align 8, !range !2
  %442 = icmp eq i8 %441, 0
  br i1 %442, label %443, label %449

443:                                              ; preds = %440
  %444 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %445 = load i64, i64* %5, align 8
  %446 = icmp ult i64 %444, %445
  br i1 %446, label %447, label %448

447:                                              ; preds = %443
  store i8 1, i8* %4, align 8
  br label %449

448:                                              ; preds = %443
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %436) #10
  br label %449

449:                                              ; preds = %440, %447, %448, %439
  %450 = add nuw nsw i64 %429, 1
  %451 = load i32, i32* %422, align 4
  %452 = sext i32 %451 to i64
  %453 = icmp slt i64 %450, %452
  br i1 %453, label %428, label %454

454:                                              ; preds = %449, %421
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  br label %878

455:                                              ; preds = %10
  %456 = bitcast %"class.v8::internal::AstNode"* %11 to %"class.v8::internal::ArrayLiteral"*
  tail call void @_ZN2v88internal11CallPrinter17VisitArrayLiteralEPNS0_12ArrayLiteralE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::ArrayLiteral"* %456)
  br label %878

457:                                              ; preds = %10
  %458 = bitcast %"class.v8::internal::AstNode"* %11 to %"class.v8::internal::Assignment"*
  tail call void @_ZN2v88internal11CallPrinter15VisitAssignmentEPNS0_10AssignmentE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::Assignment"* %458)
  br label %878

459:                                              ; preds = %10
  %460 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 1
  %461 = bitcast %"class.v8::internal::AstNode"* %460 to %"class.v8::internal::Expression"**
  %462 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %461, align 8
  %463 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %462, i64 0, i32 0
  %464 = load i8, i8* %3, align 4, !range !2
  %465 = icmp eq i8 %464, 0
  br i1 %465, label %467, label %466

466:                                              ; preds = %459
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %878

467:                                              ; preds = %459
  %468 = load i8, i8* %4, align 8, !range !2
  %469 = icmp eq i8 %468, 0
  br i1 %469, label %470, label %878

470:                                              ; preds = %467
  %471 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %472 = load i64, i64* %5, align 8
  %473 = icmp ult i64 %471, %472
  br i1 %473, label %474, label %62

474:                                              ; preds = %470
  store i8 1, i8* %4, align 8
  br label %878

475:                                              ; preds = %10
  %476 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 0, i32 1
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #10
  %477 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 1
  %478 = bitcast %"class.v8::internal::AstNode"* %477 to %"class.v8::internal::Expression"**
  %479 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %478, align 8
  %480 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %479, i64 0, i32 0
  tail call void @_ZN2v88internal11CallPrinter4FindEPNS0_7AstNodeEb(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %480, i1 zeroext true) #10
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #10
  %481 = load i32, i32* %476, align 4
  %482 = lshr i32 %481, 7
  %483 = and i32 %482, 127
  %484 = zext i32 %483 to i64
  %485 = getelementptr inbounds [117 x i8*], [117 x i8*]* @_ZN2v88internal5Token7string_E, i64 0, i64 %484
  %486 = load i8*, i8** %485, align 8
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* %486) #10
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #10
  %487 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 2
  %488 = bitcast %"class.v8::internal::AstNode"* %487 to %"class.v8::internal::Expression"**
  %489 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %488, align 8
  %490 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %489, i64 0, i32 0
  tail call void @_ZN2v88internal11CallPrinter4FindEPNS0_7AstNodeEb(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %490, i1 zeroext true) #10
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #10
  br label %878

491:                                              ; preds = %10
  %492 = bitcast %"class.v8::internal::AstNode"* %11 to %"class.v8::internal::NaryOperation"*
  tail call void @_ZN2v88internal11CallPrinter18VisitNaryOperationEPNS0_13NaryOperationE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::NaryOperation"* %492)
  br label %878

493:                                              ; preds = %10
  %494 = bitcast %"class.v8::internal::AstNode"* %11 to %"class.v8::internal::Call"*
  tail call void @_ZN2v88internal11CallPrinter9VisitCallEPNS0_4CallE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::Call"* %494)
  br label %878

495:                                              ; preds = %10
  %496 = bitcast %"class.v8::internal::AstNode"* %11 to %"class.v8::internal::CallNew"*
  tail call void @_ZN2v88internal11CallPrinter12VisitCallNewEPNS0_7CallNewE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::CallNew"* %496)
  br label %878

497:                                              ; preds = %10
  %498 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 3
  %499 = load i8, i8* %3, align 4, !range !2
  %500 = icmp eq i8 %499, 0
  br i1 %500, label %501, label %878

501:                                              ; preds = %497
  %502 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 4, i32 1
  %503 = load i32, i32* %502, align 4
  %504 = icmp sgt i32 %503, 0
  br i1 %504, label %505, label %878

505:                                              ; preds = %501
  %506 = bitcast %"class.v8::internal::AstNode"* %498 to %"class.v8::internal::Expression"***
  br label %507

507:                                              ; preds = %530, %505
  %508 = phi i8 [ 0, %505 ], [ %531, %530 ]
  %509 = phi i64 [ 0, %505 ], [ %526, %530 ]
  %510 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %506, align 8
  %511 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %510, i64 %509
  %512 = bitcast %"class.v8::internal::Expression"** %511 to %"class.v8::internal::AstNode"**
  %513 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %512, align 8
  %514 = icmp eq i8 %508, 0
  br i1 %514, label %516, label %515

515:                                              ; preds = %507
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %525

516:                                              ; preds = %507
  %517 = load i8, i8* %4, align 8, !range !2
  %518 = icmp eq i8 %517, 0
  br i1 %518, label %519, label %525

519:                                              ; preds = %516
  %520 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %521 = load i64, i64* %5, align 8
  %522 = icmp ult i64 %520, %521
  br i1 %522, label %523, label %524

523:                                              ; preds = %519
  store i8 1, i8* %4, align 8
  br label %525

524:                                              ; preds = %519
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %513) #10
  br label %525

525:                                              ; preds = %516, %523, %524, %515
  %526 = add nuw nsw i64 %509, 1
  %527 = load i32, i32* %502, align 4
  %528 = sext i32 %527 to i64
  %529 = icmp slt i64 %526, %528
  br i1 %529, label %530, label %878

530:                                              ; preds = %525
  %531 = load i8, i8* %3, align 4, !range !2
  br label %507

532:                                              ; preds = %10
  %533 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 3
  %534 = bitcast %"class.v8::internal::AstNode"* %533 to %"class.v8::internal::Expression"**
  %535 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %534, align 8
  %536 = icmp eq %"class.v8::internal::Expression"* %535, null
  br i1 %536, label %551, label %537

537:                                              ; preds = %532
  %538 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %535, i64 0, i32 0
  %539 = load i8, i8* %3, align 4, !range !2
  %540 = icmp eq i8 %539, 0
  br i1 %540, label %542, label %541

541:                                              ; preds = %537
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %551

542:                                              ; preds = %537
  %543 = load i8, i8* %4, align 8, !range !2
  %544 = icmp eq i8 %543, 0
  br i1 %544, label %545, label %551

545:                                              ; preds = %542
  %546 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %547 = load i64, i64* %5, align 8
  %548 = icmp ult i64 %546, %547
  br i1 %548, label %549, label %550

549:                                              ; preds = %545
  store i8 1, i8* %4, align 8
  br label %551

550:                                              ; preds = %545
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %538) #10
  br label %551

551:                                              ; preds = %542, %549, %541, %550, %532
  %552 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 5
  %553 = bitcast %"class.v8::internal::AstNode"* %552 to %"class.v8::internal::ZoneList.1160"**
  %554 = load %"class.v8::internal::ZoneList.1160"*, %"class.v8::internal::ZoneList.1160"** %553, align 8
  %555 = getelementptr inbounds %"class.v8::internal::ZoneList.1160", %"class.v8::internal::ZoneList.1160"* %554, i64 0, i32 2
  %556 = load i32, i32* %555, align 4
  %557 = icmp sgt i32 %556, 0
  br i1 %557, label %565, label %558

558:                                              ; preds = %588, %551
  %559 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 6
  %560 = bitcast %"class.v8::internal::AstNode"* %559 to %"class.v8::internal::ZoneList.1160"**
  %561 = load %"class.v8::internal::ZoneList.1160"*, %"class.v8::internal::ZoneList.1160"** %560, align 8
  %562 = getelementptr inbounds %"class.v8::internal::ZoneList.1160", %"class.v8::internal::ZoneList.1160"* %561, i64 0, i32 2
  %563 = load i32, i32* %562, align 4
  %564 = icmp sgt i32 %563, 0
  br i1 %564, label %595, label %878

565:                                              ; preds = %551, %588
  %566 = phi i64 [ %589, %588 ], [ 0, %551 ]
  %567 = phi %"class.v8::internal::ZoneList.1160"* [ %590, %588 ], [ %554, %551 ]
  %568 = getelementptr inbounds %"class.v8::internal::ZoneList.1160", %"class.v8::internal::ZoneList.1160"* %567, i64 0, i32 0
  %569 = load %"class.v8::internal::ClassLiteralProperty"**, %"class.v8::internal::ClassLiteralProperty"*** %568, align 8
  %570 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %569, i64 %566
  %571 = bitcast %"class.v8::internal::ClassLiteralProperty"** %570 to %"class.v8::internal::LiteralProperty"**
  %572 = load %"class.v8::internal::LiteralProperty"*, %"class.v8::internal::LiteralProperty"** %571, align 8
  %573 = getelementptr inbounds %"class.v8::internal::LiteralProperty", %"class.v8::internal::LiteralProperty"* %572, i64 0, i32 1
  %574 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %573, align 8
  %575 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %574, i64 0, i32 0
  %576 = load i8, i8* %3, align 4, !range !2
  %577 = icmp eq i8 %576, 0
  br i1 %577, label %579, label %578

578:                                              ; preds = %565
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %588

579:                                              ; preds = %565
  %580 = load i8, i8* %4, align 8, !range !2
  %581 = icmp eq i8 %580, 0
  br i1 %581, label %582, label %588

582:                                              ; preds = %579
  %583 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %584 = load i64, i64* %5, align 8
  %585 = icmp ult i64 %583, %584
  br i1 %585, label %586, label %587

586:                                              ; preds = %582
  store i8 1, i8* %4, align 8
  br label %588

587:                                              ; preds = %582
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %575) #10
  br label %588

588:                                              ; preds = %579, %586, %587, %578
  %589 = add nuw nsw i64 %566, 1
  %590 = load %"class.v8::internal::ZoneList.1160"*, %"class.v8::internal::ZoneList.1160"** %553, align 8
  %591 = getelementptr inbounds %"class.v8::internal::ZoneList.1160", %"class.v8::internal::ZoneList.1160"* %590, i64 0, i32 2
  %592 = load i32, i32* %591, align 4
  %593 = sext i32 %592 to i64
  %594 = icmp slt i64 %589, %593
  br i1 %594, label %565, label %558

595:                                              ; preds = %558, %618
  %596 = phi i64 [ %619, %618 ], [ 0, %558 ]
  %597 = phi %"class.v8::internal::ZoneList.1160"* [ %620, %618 ], [ %561, %558 ]
  %598 = getelementptr inbounds %"class.v8::internal::ZoneList.1160", %"class.v8::internal::ZoneList.1160"* %597, i64 0, i32 0
  %599 = load %"class.v8::internal::ClassLiteralProperty"**, %"class.v8::internal::ClassLiteralProperty"*** %598, align 8
  %600 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %599, i64 %596
  %601 = bitcast %"class.v8::internal::ClassLiteralProperty"** %600 to %"class.v8::internal::LiteralProperty"**
  %602 = load %"class.v8::internal::LiteralProperty"*, %"class.v8::internal::LiteralProperty"** %601, align 8
  %603 = getelementptr inbounds %"class.v8::internal::LiteralProperty", %"class.v8::internal::LiteralProperty"* %602, i64 0, i32 1
  %604 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %603, align 8
  %605 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %604, i64 0, i32 0
  %606 = load i8, i8* %3, align 4, !range !2
  %607 = icmp eq i8 %606, 0
  br i1 %607, label %609, label %608

608:                                              ; preds = %595
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %618

609:                                              ; preds = %595
  %610 = load i8, i8* %4, align 8, !range !2
  %611 = icmp eq i8 %610, 0
  br i1 %611, label %612, label %618

612:                                              ; preds = %609
  %613 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %614 = load i64, i64* %5, align 8
  %615 = icmp ult i64 %613, %614
  br i1 %615, label %616, label %617

616:                                              ; preds = %612
  store i8 1, i8* %4, align 8
  br label %618

617:                                              ; preds = %612
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %605) #10
  br label %618

618:                                              ; preds = %609, %616, %617, %608
  %619 = add nuw nsw i64 %596, 1
  %620 = load %"class.v8::internal::ZoneList.1160"*, %"class.v8::internal::ZoneList.1160"** %560, align 8
  %621 = getelementptr inbounds %"class.v8::internal::ZoneList.1160", %"class.v8::internal::ZoneList.1160"* %620, i64 0, i32 2
  %622 = load i32, i32* %621, align 4
  %623 = sext i32 %622 to i64
  %624 = icmp slt i64 %619, %623
  br i1 %624, label %595, label %878

625:                                              ; preds = %10
  %626 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 0, i32 1
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #10
  %627 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 1
  %628 = bitcast %"class.v8::internal::AstNode"* %627 to %"class.v8::internal::Expression"**
  %629 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %628, align 8
  %630 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %629, i64 0, i32 0
  tail call void @_ZN2v88internal11CallPrinter4FindEPNS0_7AstNodeEb(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %630, i1 zeroext true) #10
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #10
  %631 = load i32, i32* %626, align 4
  %632 = lshr i32 %631, 7
  %633 = and i32 %632, 127
  %634 = zext i32 %633 to i64
  %635 = getelementptr inbounds [117 x i8*], [117 x i8*]* @_ZN2v88internal5Token7string_E, i64 0, i64 %634
  %636 = load i8*, i8** %635, align 8
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* %636) #10
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #10
  %637 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 2
  %638 = bitcast %"class.v8::internal::AstNode"* %637 to %"class.v8::internal::Expression"**
  %639 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %638, align 8
  %640 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %639, i64 0, i32 0
  tail call void @_ZN2v88internal11CallPrinter4FindEPNS0_7AstNodeEb(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %640, i1 zeroext true) #10
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #10
  br label %878

641:                                              ; preds = %10
  %642 = bitcast %"class.v8::internal::AstNode"* %11 to %"class.v8::internal::Assignment"*
  tail call void @_ZN2v88internal11CallPrinter15VisitAssignmentEPNS0_10AssignmentE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::Assignment"* %642) #10
  br label %878

643:                                              ; preds = %10
  %644 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 1
  %645 = bitcast %"class.v8::internal::AstNode"* %644 to %"class.v8::internal::Expression"**
  %646 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %645, align 8
  %647 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %646, i64 0, i32 0
  %648 = load i8, i8* %3, align 4, !range !2
  %649 = icmp eq i8 %648, 0
  br i1 %649, label %651, label %650

650:                                              ; preds = %643
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %660

651:                                              ; preds = %643
  %652 = load i8, i8* %4, align 8, !range !2
  %653 = icmp eq i8 %652, 0
  br i1 %653, label %654, label %664

654:                                              ; preds = %651
  %655 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %656 = load i64, i64* %5, align 8
  %657 = icmp ult i64 %655, %656
  br i1 %657, label %658, label %659

658:                                              ; preds = %654
  store i8 1, i8* %4, align 8
  br label %660

659:                                              ; preds = %654
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %647) #10
  br label %660

660:                                              ; preds = %658, %659, %650
  %661 = load i8, i8* %3, align 4
  %662 = icmp eq i8 %661, 0
  br i1 %662, label %664, label %663

663:                                              ; preds = %660
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %677

664:                                              ; preds = %651, %660
  %665 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 2
  %666 = bitcast %"class.v8::internal::AstNode"* %665 to %"class.v8::internal::Expression"**
  %667 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %666, align 8
  %668 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %667, i64 0, i32 0
  %669 = load i8, i8* %4, align 8, !range !2
  %670 = icmp eq i8 %669, 0
  br i1 %670, label %671, label %677

671:                                              ; preds = %664
  %672 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %673 = load i64, i64* %5, align 8
  %674 = icmp ult i64 %672, %673
  br i1 %674, label %675, label %676

675:                                              ; preds = %671
  store i8 1, i8* %4, align 8
  br label %677

676:                                              ; preds = %671
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %668) #10
  br label %677

677:                                              ; preds = %664, %675, %676, %663
  %678 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 3
  %679 = bitcast %"class.v8::internal::AstNode"* %678 to %"class.v8::internal::Expression"**
  %680 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %679, align 8
  %681 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %680, i64 0, i32 0
  %682 = load i8, i8* %3, align 4, !range !2
  %683 = icmp eq i8 %682, 0
  br i1 %683, label %685, label %684

684:                                              ; preds = %677
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %878

685:                                              ; preds = %677
  %686 = load i8, i8* %4, align 8, !range !2
  %687 = icmp eq i8 %686, 0
  br i1 %687, label %688, label %878

688:                                              ; preds = %685
  %689 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %690 = load i64, i64* %5, align 8
  %691 = icmp ult i64 %689, %690
  br i1 %691, label %692, label %62

692:                                              ; preds = %688
  store i8 1, i8* %4, align 8
  br label %878

693:                                              ; preds = %10
  %694 = bitcast %"class.v8::internal::AstNode"* %11 to %"class.v8::internal::CountOperation"*
  tail call void @_ZN2v88internal11CallPrinter19VisitCountOperationEPNS0_14CountOperationE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::CountOperation"* %694)
  br label %878

695:                                              ; preds = %10
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0)) #11
  unreachable

696:                                              ; preds = %10
  %697 = bitcast %"class.v8::internal::AstNode"* %11 to %"class.v8::internal::FunctionLiteral"*
  %698 = load i8, i8* %7, align 8
  %699 = tail call zeroext i8 @_ZNK2v88internal15FunctionLiteral4kindEv(%"class.v8::internal::FunctionLiteral"* %697) #10
  store i8 %699, i8* %7, align 8
  %700 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 6
  %701 = icmp eq %"class.v8::internal::AstNode"* %700, null
  br i1 %701, label %731, label %702

702:                                              ; preds = %696
  %703 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 7, i32 1
  %704 = load i32, i32* %703, align 4
  %705 = icmp sgt i32 %704, 0
  br i1 %705, label %706, label %731

706:                                              ; preds = %702
  %707 = bitcast %"class.v8::internal::AstNode"* %700 to %"class.v8::internal::Statement"***
  br label %708

708:                                              ; preds = %706, %726
  %709 = phi i64 [ 0, %706 ], [ %727, %726 ]
  %710 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %707, align 8
  %711 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %710, i64 %709
  %712 = bitcast %"class.v8::internal::Statement"** %711 to %"class.v8::internal::AstNode"**
  %713 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %712, align 8
  %714 = load i8, i8* %3, align 4, !range !2
  %715 = icmp eq i8 %714, 0
  br i1 %715, label %717, label %716

716:                                              ; preds = %708
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %726

717:                                              ; preds = %708
  %718 = load i8, i8* %4, align 8, !range !2
  %719 = icmp eq i8 %718, 0
  br i1 %719, label %720, label %726

720:                                              ; preds = %717
  %721 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %722 = load i64, i64* %5, align 8
  %723 = icmp ult i64 %721, %722
  br i1 %723, label %724, label %725

724:                                              ; preds = %720
  store i8 1, i8* %4, align 8
  br label %726

725:                                              ; preds = %720
  tail call void @_ZN2v88internal11CallPrinter25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %713) #10
  br label %726

726:                                              ; preds = %717, %724, %725, %716
  %727 = add nuw nsw i64 %709, 1
  %728 = load i32, i32* %703, align 4
  %729 = sext i32 %728 to i64
  %730 = icmp slt i64 %727, %729
  br i1 %730, label %708, label %731

731:                                              ; preds = %726, %702, %696
  store i8 %698, i8* %7, align 8
  br label %878

732:                                              ; preds = %10
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i64 0, i64 0)) #10
  %733 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 1
  %734 = bitcast %"class.v8::internal::AstNode"* %733 to %"class.v8::internal::Expression"**
  %735 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %734, align 8
  %736 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %735, i64 0, i32 0
  tail call void @_ZN2v88internal11CallPrinter4FindEPNS0_7AstNodeEb(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %736, i1 zeroext true) #10
  %737 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 2
  %738 = bitcast %"class.v8::internal::AstNode"* %737 to %"class.v8::internal::Expression"**
  %739 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %738, align 8
  %740 = icmp eq %"class.v8::internal::Expression"* %739, null
  br i1 %740, label %743, label %741

741:                                              ; preds = %732
  %742 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %739, i64 0, i32 0
  tail call void @_ZN2v88internal11CallPrinter4FindEPNS0_7AstNodeEb(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %742, i1 zeroext true) #10
  br label %743

743:                                              ; preds = %732, %741
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #10
  br label %878

744:                                              ; preds = %10
  %745 = bitcast %"class.v8::internal::AstNode"* %11 to %"class.v8::internal::Literal"*
  %746 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 0
  %747 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %746, align 8
  %748 = tail call i64* @_ZNK2v88internal7Literal10BuildValueINS0_7IsolateEEENS0_6HandleINS0_6ObjectEEEPT_(%"class.v8::internal::Literal"* %745, %"class.v8::internal::Isolate"* %747) #10
  tail call void @_ZN2v88internal11CallPrinter12PrintLiteralENS0_6HandleINS0_6ObjectEEEb(%"class.v8::internal::CallPrinter"* %0, i64* %748, i1 zeroext true) #10
  br label %878

749:                                              ; preds = %10
  %750 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 1
  %751 = bitcast %"class.v8::internal::AstNode"* %750 to %"class.v8::internal::Expression"**
  %752 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %751, align 8
  %753 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %752, i64 0, i32 0
  %754 = load i8, i8* %3, align 4, !range !2
  %755 = icmp eq i8 %754, 0
  br i1 %755, label %757, label %756

756:                                              ; preds = %749
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %878

757:                                              ; preds = %749
  %758 = load i8, i8* %4, align 8, !range !2
  %759 = icmp eq i8 %758, 0
  br i1 %759, label %760, label %878

760:                                              ; preds = %757
  %761 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %762 = load i64, i64* %5, align 8
  %763 = icmp ult i64 %761, %762
  br i1 %763, label %764, label %62

764:                                              ; preds = %760
  store i8 1, i8* %4, align 8
  br label %878

765:                                              ; preds = %10
  %766 = bitcast %"class.v8::internal::AstNode"* %11 to %"class.v8::internal::Property"*
  tail call void @_ZN2v88internal11CallPrinter13VisitPropertyEPNS0_8PropertyE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::Property"* %766)
  br label %878

767:                                              ; preds = %10
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0)) #10
  %768 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 2
  %769 = bitcast %"class.v8::internal::AstNode"* %768 to %"class.v8::internal::Expression"**
  %770 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %769, align 8
  %771 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %770, i64 0, i32 0
  tail call void @_ZN2v88internal11CallPrinter4FindEPNS0_7AstNodeEb(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %771, i1 zeroext true) #10
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #10
  br label %878

772:                                              ; preds = %10
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0)) #10
  br label %878

773:                                              ; preds = %10
  %774 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 2
  %775 = bitcast %"class.v8::internal::AstNode"* %774 to %"class.v8::internal::ZoneList.1168"**
  %776 = load %"class.v8::internal::ZoneList.1168"*, %"class.v8::internal::ZoneList.1168"** %775, align 8
  %777 = getelementptr inbounds %"class.v8::internal::ZoneList.1168", %"class.v8::internal::ZoneList.1168"* %776, i64 0, i32 0
  %778 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %777, align 8
  %779 = getelementptr inbounds %"class.v8::internal::ZoneList.1168", %"class.v8::internal::ZoneList.1168"* %776, i64 0, i32 2
  %780 = load i32, i32* %779, align 4
  %781 = sext i32 %780 to i64
  %782 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %778, i64 %781
  %783 = icmp eq i32 %780, 0
  br i1 %783, label %878, label %784

784:                                              ; preds = %773, %784
  %785 = phi %"class.v8::internal::Expression"** [ %788, %784 ], [ %778, %773 ]
  %786 = bitcast %"class.v8::internal::Expression"** %785 to %"class.v8::internal::AstNode"**
  %787 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %786, align 8
  tail call void @_ZN2v88internal11CallPrinter4FindEPNS0_7AstNodeEb(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::AstNode"* %787, i1 zeroext true) #10
  %788 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %785, i64 1
  %789 = icmp eq %"class.v8::internal::Expression"** %788, %782
  br i1 %789, label %878, label %784

790:                                              ; preds = %10
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0)) #10
  br label %878

791:                                              ; preds = %10
  %792 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 1
  %793 = bitcast %"class.v8::internal::AstNode"* %792 to %"class.v8::internal::Expression"**
  %794 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %793, align 8
  %795 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %794, i64 0, i32 0
  %796 = load i8, i8* %3, align 4, !range !2
  %797 = icmp eq i8 %796, 0
  br i1 %797, label %799, label %798

798:                                              ; preds = %791
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %878

799:                                              ; preds = %791
  %800 = load i8, i8* %4, align 8, !range !2
  %801 = icmp eq i8 %800, 0
  br i1 %801, label %802, label %878

802:                                              ; preds = %799
  %803 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %804 = load i64, i64* %5, align 8
  %805 = icmp ult i64 %803, %804
  br i1 %805, label %806, label %62

806:                                              ; preds = %802
  store i8 1, i8* %4, align 8
  br label %878

807:                                              ; preds = %10
  %808 = bitcast %"class.v8::internal::AstNode"* %11 to %"class.v8::internal::UnaryOperation"*
  tail call void @_ZN2v88internal11CallPrinter19VisitUnaryOperationEPNS0_14UnaryOperationE(%"class.v8::internal::CallPrinter"* %0, %"class.v8::internal::UnaryOperation"* %808)
  br label %878

809:                                              ; preds = %10
  %810 = getelementptr inbounds %"class.v8::internal::CallPrinter", %"class.v8::internal::CallPrinter"* %0, i64 0, i32 7
  %811 = load i8, i8* %810, align 2, !range !2
  %812 = icmp eq i8 %811, 0
  br i1 %812, label %828, label %813

813:                                              ; preds = %809
  %814 = and i32 %13, 256
  %815 = icmp eq i32 %814, 0
  %816 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 1
  br i1 %815, label %821, label %817

817:                                              ; preds = %813
  %818 = bitcast %"class.v8::internal::AstNode"* %816 to %"class.v8::internal::Variable"**
  %819 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %818, align 8
  %820 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %819, i64 0, i32 1
  br label %823

821:                                              ; preds = %813
  %822 = bitcast %"class.v8::internal::AstNode"* %816 to %"class.v8::internal::AstRawString"**
  br label %823

823:                                              ; preds = %821, %817
  %824 = phi %"class.v8::internal::AstRawString"** [ %820, %817 ], [ %822, %821 ]
  %825 = bitcast %"class.v8::internal::AstRawString"** %824 to i64***
  %826 = load i64**, i64*** %825, align 8
  %827 = load i64*, i64** %826, align 8
  tail call void @_ZN2v88internal11CallPrinter12PrintLiteralENS0_6HandleINS0_6ObjectEEEb(%"class.v8::internal::CallPrinter"* %0, i64* %827, i1 zeroext false) #10
  br label %878

828:                                              ; preds = %809
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)) #10
  br label %878

829:                                              ; preds = %10
  %830 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 1
  %831 = bitcast %"class.v8::internal::AstNode"* %830 to %"class.v8::internal::Expression"**
  %832 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %831, align 8
  %833 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %832, i64 0, i32 0
  %834 = load i8, i8* %3, align 4, !range !2
  %835 = icmp eq i8 %834, 0
  br i1 %835, label %837, label %836

836:                                              ; preds = %829
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %878

837:                                              ; preds = %829
  %838 = load i8, i8* %4, align 8, !range !2
  %839 = icmp eq i8 %838, 0
  br i1 %839, label %840, label %878

840:                                              ; preds = %837
  %841 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %842 = load i64, i64* %5, align 8
  %843 = icmp ult i64 %841, %842
  br i1 %843, label %844, label %62

844:                                              ; preds = %840
  store i8 1, i8* %4, align 8
  br label %878

845:                                              ; preds = %10
  %846 = load i8, i8* %3, align 4, !range !2
  %847 = icmp eq i8 %846, 0
  br i1 %847, label %848, label %866

848:                                              ; preds = %845
  %849 = load i32, i32* %6, align 8
  %850 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %11, i64 1
  %851 = bitcast %"class.v8::internal::AstNode"* %850 to %"class.v8::internal::Expression"**
  %852 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %851, align 8
  %853 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %852, i64 0, i32 0, i32 0
  %854 = load i32, i32* %853, align 4
  %855 = icmp eq i32 %849, %854
  br i1 %855, label %856, label %867

856:                                              ; preds = %848
  store i8 1, i8* %3, align 4
  %857 = load i8, i8* %7, align 8
  %858 = add i8 %857, -12
  %859 = icmp ult i8 %858, 7
  br i1 %859, label %860, label %861

860:                                              ; preds = %856
  store i8 1, i8* %9, align 8
  br label %862

861:                                              ; preds = %856
  store i8 1, i8* %8, align 1
  br label %862

862:                                              ; preds = %860, %861
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0)) #10
  %863 = load i8, i8* %3, align 4
  %864 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %851, align 8
  %865 = icmp eq i8 %863, 0
  br i1 %865, label %867, label %866

866:                                              ; preds = %845, %862
  tail call void @_ZN2v88internal11CallPrinter5PrintEPKc(%"class.v8::internal::CallPrinter"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #10
  br label %878

867:                                              ; preds = %848, %862
  %868 = phi %"class.v8::internal::Expression"* [ %864, %862 ], [ %852, %848 ]
  %869 = load i8, i8* %4, align 8, !range !2
  %870 = icmp eq i8 %869, 0
  br i1 %870, label %871, label %878

871:                                              ; preds = %867
  %872 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %868, i64 0, i32 0
  %873 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #10
  %874 = load i64, i64* %5, align 8
  %875 = icmp ult i64 %873, %874
  br i1 %875, label %876, label %62

876:                                              ; preds = %871
  store i8 1, i8* %4, align 8
  br label %878

877:                                              ; preds = %10
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0)) #11
  unreachable

878:                                              ; preds = %202, %867, %837, %799, %757, %685, %467, %325, %292, %259, %230, %214, %160, %144, %86, %51, %10, %784, %618, %525, %412, %360, %129, %773, %558, %501, %16, %23, %104, %876, %844, %806, %764, %692, %474, %336, %303, %270, %237, %221, %167, %151, %97, %64, %866, %836, %828, %823, %798, %756, %684, %497, %466, %324, %291, %258, %229, %213, %159, %143, %85, %50, %98, %100, %102, %134, %419, %454, %455, %457, %475, %491, %493, %495, %625, %641, %693, %731, %743, %744, %765, %767, %772, %790, %807
  ret void
}

declare i64 @_ZN2v88internal23GetCurrentStackPositionEv() local_unnamed_addr #2

declare void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
