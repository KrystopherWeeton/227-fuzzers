; ModuleID = '../../third_party/blink/renderer/modules/peerconnection/rtc_rtp_transceiver.cc'
source_filename = "../../third_party/blink/renderer/modules/peerconnection/rtc_rtp_transceiver.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1003", i32, i32, %"class.blink::Persistent.1005" }
%"class.WTF::RefCounted.1003" = type { %"class.base::RefCounted.1004" }
%"class.base::RefCounted.1004" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent.1005" = type { %"class.blink::PersistentBase.1006" }
%"class.blink::PersistentBase.1006" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1009" }
%"class.blink::HeapHashMap.1009" = type { %"class.WTF::HashMap.1012" }
%"class.WTF::HashMap.1012" = type { %"class.WTF::HashTable.1013" }
%"class.WTF::HashTable.1013" = type <{ %"struct.WTF::KeyValuePair.1015"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1015" = type { %"class.blink::WeakMember.1016", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1016" = type { %"class.blink::MemberBase.1017" }
%"class.blink::MemberBase.1017" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.405", i32, [4 x i8], %"class.std::__1::unique_ptr.543", %"class.std::__1::unique_ptr.543", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.554", %"class.std::__1::unique_ptr.560", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.572", %"class.std::__1::unique_ptr.578", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.585", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.408", %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.420", %"class.std::__1::unique_ptr.426", %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.438", %"class.std::__1::unique_ptr.449", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.470", %"class.std::__1::unique_ptr.477", %"class.std::__1::unique_ptr.477", %"class.std::__1::unique_ptr.484", %"class.std::__1::unique_ptr.491", %"class.std::__1::unique_ptr.498", %"class.std::__1::unique_ptr.523", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.420" = type { %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.441" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.441" = type { %"struct.std::__1::__atomic_base.442" }
%"struct.std::__1::__atomic_base.442" = type { %"struct.std::__1::__atomic_base.443" }
%"struct.std::__1::__atomic_base.443" = type { %"struct.std::__1::__cxx_atomic_impl.444" }
%"struct.std::__1::__cxx_atomic_impl.444" = type { %"struct.std::__1::__cxx_atomic_base_impl.445" }
%"struct.std::__1::__cxx_atomic_base_impl.445" = type { i64 }
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"class.blink::Worklist.452"* }
%"class.blink::Worklist.452" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.441" }
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.blink::Worklist.459"* }
%"class.blink::Worklist.459" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.441" }
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.blink::Worklist.466"* }
%"class.blink::Worklist.466" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.441" }
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.blink::Worklist.473"* }
%"class.blink::Worklist.473" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.441" }
%"class.std::__1::unique_ptr.477" = type { %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"class.blink::Worklist.480"* }
%"class.blink::Worklist.480" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.441" }
%"class.std::__1::unique_ptr.484" = type { %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"class.blink::Worklist.487"* }
%"class.blink::Worklist.487" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.441" }
%"class.std::__1::unique_ptr.491" = type { %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"class.blink::Worklist.494"* }
%"class.blink::Worklist.494" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.441" }
%"class.std::__1::unique_ptr.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.501", %"class.std::__1::__compressed_pair.510", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.517", [4 x i8] }>
%"class.std::__1::unique_ptr.501" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503", %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { i64 }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { float }
%"class.std::__1::unique_ptr.523" = type { %"class.std::__1::__compressed_pair.524" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.525" }
%"struct.std::__1::__compressed_pair_elem.525" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.526", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.526" = type { %"class.std::__1::__compressed_pair.527" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.535" }
%"class.WTF::Vector.535" = type { %"class.WTF::VectorBuffer.536" }
%"class.WTF::VectorBuffer.536" = type { %"class.WTF::VectorBufferBase.537" }
%"class.WTF::VectorBufferBase.537" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.543" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.551" }
%"class.WTF::VectorBuffer.551" = type { %"class.WTF::VectorBufferBase.552" }
%"class.WTF::VectorBufferBase.552" = type { %"struct.std::__1::pair.553"*, i32, i32 }
%"struct.std::__1::pair.553" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.554" = type { %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.560" = type { %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.566" }
%"class.std::__1::unique_ptr.566" = type { %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.452"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.459"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.466"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.473"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.480"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.884", i64 }
%"class.std::__1::vector.884" = type { %"class.std::__1::__vector_base.885" }
%"class.std::__1::__vector_base.885" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.886" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.578" = type { %"class.std::__1::__compressed_pair.579" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.584 }
%class.scoped_refptr.584 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.585" = type { %"struct.std::__1::__atomic_base.586" }
%"struct.std::__1::__atomic_base.586" = type { %"struct.std::__1::__cxx_atomic_impl.587" }
%"struct.std::__1::__cxx_atomic_impl.587" = type { %"struct.std::__1::__cxx_atomic_base_impl.588" }
%"struct.std::__1::__cxx_atomic_base_impl.588" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.105" }
%"struct.std::__1::atomic.105" = type { %"struct.std::__1::__atomic_base.106" }
%"struct.std::__1::__atomic_base.106" = type { %"struct.std::__1::__atomic_base.107" }
%"struct.std::__1::__atomic_base.107" = type { %"struct.std::__1::__cxx_atomic_impl.108" }
%"struct.std::__1::__cxx_atomic_impl.108" = type { %"struct.std::__1::__cxx_atomic_base_impl.109" }
%"struct.std::__1::__cxx_atomic_base_impl.109" = type { i32 }
%"class.blink::RTCRtpTransceiver" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.336", %"class.std::__1::unique_ptr.877", %"class.blink::Member.367", %"class.blink::Member.376", i8, %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.331" }
%"class.blink::Member.336" = type { %"class.blink::MemberBase.337" }
%"class.blink::MemberBase.337" = type { %"class.blink::RTCPeerConnection"* }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RTCRtpTransceiverPlatform"* }
%"class.blink::Member.367" = type { %"class.blink::MemberBase.368" }
%"class.blink::MemberBase.368" = type { %"class.blink::RTCRtpSender"* }
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::RTCRtpReceiver"* }
%"class.WTF::String" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.WTF::StringImpl"* }
%"class.absl::optional.331" = type { %"class.absl::optional_internal::optional_data.332" }
%"class.absl::optional_internal::optional_data.332" = type { %"class.absl::optional_internal::optional_data_base.333" }
%"class.absl::optional_internal::optional_data_base.333" = type { %"class.absl::optional_internal::optional_data_dtor_base.334" }
%"class.absl::optional_internal::optional_data_dtor_base.334" = type { i8, %union.anon.335 }
%union.anon.335 = type { i32 }
%"class.blink::RTCPeerConnection" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::RTCPeerConnectionHandlerClient", %"class.blink::ActiveScriptWrappable.338", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::MediaStreamObserver", %"class.blink::ThreadState::PrefinalizerRegistration.341", [7 x i8], %"class.blink::Member.342", %"class.blink::Member.342", %"class.blink::Member.342", %"class.blink::Member.342", i32, i32, i32, i32, %"class.blink::CallSetupStateTracker", %"class.blink::HeapHashMap.354", %"class.blink::HeapVector.361", %"class.blink::HeapVector.370", %"class.blink::HeapVector.379", %"class.blink::HeapHashMap.388", %"class.blink::HeapHashMap.395", %"class.std::__1::unique_ptr.402", %"class.base::OnceCallback.664", %"class.blink::TaskHandle", %"class.blink::HeapVector.867", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", i8, i8, i8, [5 x i8], %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.875", i32, i8, [3 x i8], %"class.base::TimeDelta", i8, i8, [6 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.87" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.76" }
%"class.blink::HeapVector.76" = type { %"class.WTF::Vector.79" }
%"class.WTF::Vector.79" = type { %"class.WTF::VectorBuffer.80" }
%"class.WTF::VectorBuffer.80" = type { %"class.WTF::VectorBufferBase.81", [32 x i8] }
%"class.WTF::VectorBufferBase.81" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.82" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::HeapVector.84"* }
%"class.blink::HeapVector.84" = type opaque
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.WTF::Vector.90"* }
%"class.WTF::Vector.90" = type opaque
%"class.blink::RTCPeerConnectionHandlerClient" = type { i32 (...)** }
%"class.blink::ActiveScriptWrappable.338" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.339" }
%"class.blink::WeakMember.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.2" }
%"class.WTF::HashTable.2" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::MediaStreamObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ThreadState::PrefinalizerRegistration.341" = type { i8 }
%"class.blink::Member.342" = type { %"class.blink::MemberBase.343" }
%"class.blink::MemberBase.343" = type { %"class.blink::RTCSessionDescription"* }
%"class.blink::RTCSessionDescription" = type opaque
%"class.blink::CallSetupStateTracker" = type <{ %"class.WTF::HashSet.344", %"class.WTF::HashSet.349", i32, i32, i8, i8, [6 x i8] }>
%"class.WTF::HashSet.344" = type { %"class.WTF::HashTable.345" }
%"class.WTF::HashTable.345" = type <{ %"struct.std::__1::pair.348"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.348" = type opaque
%"class.WTF::HashSet.349" = type { %"class.WTF::HashTable.350" }
%"class.WTF::HashTable.350" = type <{ %"struct.std::__1::pair.353"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.353" = type opaque
%"class.blink::HeapHashMap.354" = type { %"class.WTF::HashMap.357" }
%"class.WTF::HashMap.357" = type { %"class.WTF::HashTable.358" }
%"class.WTF::HashTable.358" = type <{ %"struct.WTF::KeyValuePair.360"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.360" = type opaque
%"class.blink::HeapVector.361" = type { %"class.WTF::Vector.364" }
%"class.WTF::Vector.364" = type { %"class.WTF::VectorBuffer.365" }
%"class.WTF::VectorBuffer.365" = type { %"class.WTF::VectorBufferBase.366" }
%"class.WTF::VectorBufferBase.366" = type { %"class.blink::Member.367"*, i32, i32 }
%"class.blink::HeapVector.370" = type { %"class.WTF::Vector.373" }
%"class.WTF::Vector.373" = type { %"class.WTF::VectorBuffer.374" }
%"class.WTF::VectorBuffer.374" = type { %"class.WTF::VectorBufferBase.375" }
%"class.WTF::VectorBufferBase.375" = type { %"class.blink::Member.376"*, i32, i32 }
%"class.blink::HeapVector.379" = type { %"class.WTF::Vector.382" }
%"class.WTF::Vector.382" = type { %"class.WTF::VectorBuffer.383" }
%"class.WTF::VectorBuffer.383" = type { %"class.WTF::VectorBufferBase.384" }
%"class.WTF::VectorBufferBase.384" = type { %"class.blink::Member.385"*, i32, i32 }
%"class.blink::Member.385" = type { %"class.blink::MemberBase.386" }
%"class.blink::MemberBase.386" = type { %"class.blink::RTCRtpTransceiver"* }
%"class.blink::HeapHashMap.388" = type { %"class.WTF::HashMap.391" }
%"class.WTF::HashMap.391" = type { %"class.WTF::HashTable.392" }
%"class.WTF::HashTable.392" = type <{ %"struct.WTF::KeyValuePair.394"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.394" = type opaque
%"class.blink::HeapHashMap.395" = type { %"class.WTF::HashMap.398" }
%"class.WTF::HashMap.398" = type { %"class.WTF::HashTable.399" }
%"class.WTF::HashTable.399" = type <{ %"struct.WTF::KeyValuePair.401"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.401" = type opaque
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.blink::RTCPeerConnectionHandler"* }
%"class.blink::RTCPeerConnectionHandler" = type { i32 (...)**, i8, %"class.blink::RTCPeerConnectionHandlerClient"*, i8, i8, i32, %"class.blink::Persistent", %"class.blink::WebLocalFrame"*, %class.scoped_refptr.589, %"class.std::__1::vector.617", %"class.std::__1::vector.625", %"class.std::__1::vector.633", %"class.WTF::Vector.641", %"class.blink::WeakPersistent", %"class.blink::MediaStreamTrackMetrics", i32, i32, i32, %"class.blink::CrossThreadPersistent", %class.scoped_refptr.823, %"struct.webrtc::PeerConnectionInterface::RTCConfiguration", i8, i8, %class.scoped_refptr.848, %"class.std::__1::unique_ptr.849", i32, %"class.std::__1::unique_ptr.856", %"class.std::__1::unique_ptr.856", %"class.base::TimeTicks", [7 x i8], %class.scoped_refptr.289, %"class.base::WeakPtrFactory.862" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::PeerConnectionDependencyFactory"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PeerConnectionDependencyFactory" = type opaque
%"class.blink::WebLocalFrame" = type opaque
%class.scoped_refptr.589 = type { %"class.blink::WebRtcMediaStreamTrackAdapterMap"* }
%"class.blink::WebRtcMediaStreamTrackAdapterMap" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", %"class.blink::CrossThreadWeakPersistent", %class.scoped_refptr.289, %"class.base::Lock", %"class.blink::TwoKeysAdapterMap", %"class.blink::TwoKeysAdapterMap.606" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.590" }
%"class.base::RefCountedThreadSafe.590" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.105" }
%"class.blink::CrossThreadWeakPersistent" = type { %"class.blink::PersistentBase.591" }
%"class.blink::PersistentBase.591" = type { %"class.blink::PeerConnectionDependencyFactory"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.592" }
%"struct.std::__1::atomic.592" = type { %"struct.std::__1::__atomic_base.593" }
%"struct.std::__1::__atomic_base.593" = type { %"struct.std::__1::__cxx_atomic_impl.594" }
%"struct.std::__1::__cxx_atomic_impl.594" = type { %"struct.std::__1::__cxx_atomic_base_impl.595" }
%"struct.std::__1::__cxx_atomic_base_impl.595" = type { %"class.blink::PersistentNode"* }
%"class.blink::TwoKeysAdapterMap" = type { %"class.WTF::HashMap.596", %"class.WTF::HashMap.601" }
%"class.WTF::HashMap.596" = type { %"class.WTF::HashTable.597" }
%"class.WTF::HashTable.597" = type <{ %"struct.WTF::KeyValuePair.600"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.600" = type opaque
%"class.WTF::HashMap.601" = type { %"class.WTF::HashTable.602" }
%"class.WTF::HashTable.602" = type <{ %"struct.WTF::KeyValuePair.605"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.605" = type opaque
%"class.blink::TwoKeysAdapterMap.606" = type { %"class.WTF::HashMap.607", %"class.WTF::HashMap.612" }
%"class.WTF::HashMap.607" = type { %"class.WTF::HashTable.608" }
%"class.WTF::HashTable.608" = type <{ %"struct.WTF::KeyValuePair.611"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.611" = type opaque
%"class.WTF::HashMap.612" = type { %"class.WTF::HashTable.613" }
%"class.WTF::HashTable.613" = type <{ %"struct.WTF::KeyValuePair.616"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.616" = type opaque
%"class.std::__1::vector.617" = type { %"class.std::__1::__vector_base.618" }
%"class.std::__1::__vector_base.618" = type { %"class.std::__1::unique_ptr.619"*, %"class.std::__1::unique_ptr.619"*, %"class.std::__1::__compressed_pair.620" }
%"class.std::__1::unique_ptr.619" = type opaque
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"class.std::__1::unique_ptr.619"* }
%"class.std::__1::vector.625" = type { %"class.std::__1::__vector_base.626" }
%"class.std::__1::__vector_base.626" = type { %"class.std::__1::unique_ptr.627"*, %"class.std::__1::unique_ptr.627"*, %"class.std::__1::__compressed_pair.628" }
%"class.std::__1::unique_ptr.627" = type opaque
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"struct.std::__1::__compressed_pair_elem.629" = type { %"class.std::__1::unique_ptr.627"* }
%"class.std::__1::vector.633" = type { %"class.std::__1::__vector_base.634" }
%"class.std::__1::__vector_base.634" = type { %"class.std::__1::unique_ptr.635"*, %"class.std::__1::unique_ptr.635"*, %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::unique_ptr.635" = type opaque
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"class.std::__1::unique_ptr.635"* }
%"class.WTF::Vector.641" = type { %"class.WTF::VectorBuffer.642" }
%"class.WTF::VectorBuffer.642" = type { %"class.WTF::VectorBufferBase.643" }
%"class.WTF::VectorBufferBase.643" = type { i64*, i32, i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.646" }
%"class.blink::PersistentBase.646" = type { %"class.blink::PeerConnectionTracker"*, %"class.blink::PersistentNodePtr.647" }
%"class.blink::PeerConnectionTracker" = type opaque
%"class.blink::PersistentNodePtr.647" = type { %"class.blink::PersistentNode"* }
%"class.blink::MediaStreamTrackMetrics" = type <{ i32 (...)**, %"class.mojo::Remote", %"class.std::__1::vector.813", i32, [4 x i8] }>
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.807" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.648, %"class.std::__1::unique_ptr.757", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.650, i32 }>
%class.scoped_refptr.648 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.650, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.723", %"class.absl::optional.728", %"class.absl::optional.684", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.748", i8, [7 x i8], %class.scoped_refptr.650, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.649" }>
%"class.base::RefCountedThreadSafe.649" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.149 }
%union.anon.149 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.651", %"class.std::__1::unique_ptr.657", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.663" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.657" = type { %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.663" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.291 }
%class.scoped_refptr.291 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.110" }
%"struct.std::__1::atomic.110" = type { %"struct.std::__1::__atomic_base.111" }
%"struct.std::__1::__atomic_base.111" = type { %"struct.std::__1::__atomic_base.112" }
%"struct.std::__1::__atomic_base.112" = type { %"struct.std::__1::__cxx_atomic_impl.113" }
%"struct.std::__1::__cxx_atomic_impl.113" = type { %"struct.std::__1::__cxx_atomic_base_impl.114" }
%"struct.std::__1::__cxx_atomic_base_impl.114" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.664", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.650, %"class.std::__1::unique_ptr.665", %"class.absl::optional.674", %"struct.std::__1::atomic.585", i8, i8, i8, i8, i32, i32, %"class.absl::optional.684", %"class.std::__1::unique_ptr.689", i8, i64, %class.scoped_refptr.719, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.721", %"class.base::WeakPtrFactory.722" }
%"class.std::__1::unique_ptr.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.667" }
%"struct.std::__1::__compressed_pair_elem.667" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.650, i8, %"class.mojo::ScopedHandleBase.668", %class.scoped_refptr.669, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.670" }
%"class.mojo::ScopedHandleBase.668" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.669 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.206 }
%class.scoped_refptr.206 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.207", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.207" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.670" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.674" = type { %"class.absl::optional_internal::optional_data.675" }
%"class.absl::optional_internal::optional_data.675" = type { %"class.absl::optional_internal::optional_data_base.676" }
%"class.absl::optional_internal::optional_data_base.676" = type { %"class.absl::optional_internal::optional_data_dtor_base.677" }
%"class.absl::optional_internal::optional_data_dtor_base.677" = type { i8, %union.anon.678 }
%union.anon.678 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.679", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.679" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.692", i8, i64, %class.scoped_refptr.693, %class.scoped_refptr.715 }
%"class.base::RepeatingCallback.692" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.693 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.694", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.704", i8, [7 x i8] }>
%"class.base::RefCounted.694" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.696", %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"struct.std::__1::__compressed_pair_elem.697" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"class.std::__1::map.704" = type { %"class.std::__1::__tree.705" }
%"class.std::__1::__tree.705" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.706", %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%class.scoped_refptr.715 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.719 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.720 }
%class.scoped_refptr.720 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.883", [4 x i8], %"class.base::RepeatingCallback.760", %class.scoped_refptr.650, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.883" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.760" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr.721" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.104 }
%class.scoped_refptr.104 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.722" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.723" = type { %"class.absl::optional_internal::optional_data.724" }
%"class.absl::optional_internal::optional_data.724" = type { %"class.absl::optional_internal::optional_data_base.725" }
%"class.absl::optional_internal::optional_data_base.725" = type { %"class.absl::optional_internal::optional_data_dtor_base.726" }
%"class.absl::optional_internal::optional_data_dtor_base.726" = type { i8, %union.anon.727 }
%union.anon.727 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.728" = type { %"class.absl::optional_internal::optional_data.729" }
%"class.absl::optional_internal::optional_data.729" = type { %"class.absl::optional_internal::optional_data_base.730" }
%"class.absl::optional_internal::optional_data_base.730" = type { %"class.absl::optional_internal::optional_data_dtor_base.731" }
%"class.absl::optional_internal::optional_data_dtor_base.731" = type { i8, [7 x i8], %union.anon.732 }
%union.anon.732 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.684" = type { %"class.absl::optional_internal::optional_data.685" }
%"class.absl::optional_internal::optional_data.685" = type { %"class.absl::optional_internal::optional_data_base.686" }
%"class.absl::optional_internal::optional_data_base.686" = type { %"class.absl::optional_internal::optional_data_dtor_base.687" }
%"class.absl::optional_internal::optional_data_dtor_base.687" = type { i8, %union.anon.688 }
%union.anon.688 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.733 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.733 = type { %"class.std::__1::map.736" }
%"class.std::__1::map.736" = type { %"class.std::__1::__tree.737" }
%"class.std::__1::__tree.737" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.738", %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.747"*, i64 }
%"class.std::__1::unique_ptr.747" = type opaque
%"class.std::__1::map.748" = type { %"class.std::__1::__tree.749" }
%"class.std::__1::__tree.749" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.750", %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.750" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.760", %"class.base::OnceCallback.761", %"class.absl::optional.762", %"class.absl::optional.767", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.774", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.782", %"class.std::__1::map.793", i64, %"class.base::OnceCallback.664", %"class.base::OnceCallback.802", i8, %class.scoped_refptr.650, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.803" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.761" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.762" = type { %"class.absl::optional_internal::optional_data.763" }
%"class.absl::optional_internal::optional_data.763" = type { %"class.absl::optional_internal::optional_data_base.764" }
%"class.absl::optional_internal::optional_data_base.764" = type { %"class.absl::optional_internal::optional_data_dtor_base.765" }
%"class.absl::optional_internal::optional_data_dtor_base.765" = type { i8, %union.anon.766 }
%union.anon.766 = type { %"class.base::TimeDelta" }
%"class.absl::optional.767" = type { %"class.absl::optional_internal::optional_data.768" }
%"class.absl::optional_internal::optional_data.768" = type { %"class.absl::optional_internal::optional_data_base.769" }
%"class.absl::optional_internal::optional_data_base.769" = type { %"class.absl::optional_internal::optional_data_dtor_base.770" }
%"class.absl::optional_internal::optional_data_dtor_base.770" = type { i8, %union.anon.771 }
%union.anon.771 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.664" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.650, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.772" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.772" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.773 }
%class.scoped_refptr.773 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.774" = type { %"class.std::__1::__compressed_pair.775" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.777", %class.scoped_refptr.778 }
%"class.base::RepeatingCallback.777" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.778 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.649", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.782" = type { %"class.std::__1::__tree.783" }
%"class.std::__1::__tree.783" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.784", %"class.std::__1::__compressed_pair.788" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"class.std::__1::map.793" = type { %"class.std::__1::__tree.794" }
%"class.std::__1::__tree.794" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.795", %"class.std::__1::__compressed_pair.799" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"class.base::OnceCallback.802" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.664" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.803" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.650 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.290" }>
%"class.base::RefCountedThreadSafe.290" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.807" = type { %"class.std::__1::__compressed_pair.808" }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.809" }
%"struct.std::__1::__compressed_pair_elem.809" = type { %"class.blink::mojom::blink::MediaStreamTrackMetricsHostProxy"* }
%"class.blink::mojom::blink::MediaStreamTrackMetricsHostProxy" = type { %"class.blink::mojom::blink::MediaStreamTrackMetricsHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::MediaStreamTrackMetricsHost" = type { i32 (...)** }
%"class.std::__1::vector.813" = type { %"class.std::__1::__vector_base.814" }
%"class.std::__1::__vector_base.814" = type { %"class.std::__1::unique_ptr.815"*, %"class.std::__1::unique_ptr.815"*, %"class.std::__1::__compressed_pair.816" }
%"class.std::__1::unique_ptr.815" = type opaque
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.817" }
%"struct.std::__1::__compressed_pair_elem.817" = type { %"class.std::__1::unique_ptr.815"* }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.821" }
%"class.blink::PersistentBase.821" = type { %"class.blink::RTCPeerConnectionHandler::Observer"*, %"class.blink::CrossThreadPersistentNodePtr.822" }
%"class.blink::RTCPeerConnectionHandler::Observer" = type opaque
%"class.blink::CrossThreadPersistentNodePtr.822" = type { %"struct.std::__1::atomic.592" }
%class.scoped_refptr.823 = type { %"class.webrtc::PeerConnectionInterface"* }
%"class.webrtc::PeerConnectionInterface" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::RefCountInterface" = type { i32 (...)** }
%"struct.webrtc::PeerConnectionInterface::RTCConfiguration" = type <{ %"class.std::__1::vector.824", i32, i32, i32, [4 x i8], %"class.std::__1::vector.831", i32, i8, i8, [2 x i8], i32, i8, [3 x i8], %"class.absl::optional.316", %"class.absl::optional.242", %"class.absl::optional.242", i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8], i32, i32, i32, i8, [3 x i8], %"struct.cricket::MediaConfig", i8, [3 x i8], i32, i8, i8, i8, i8, %"class.absl::optional.316", %"class.absl::optional.316", %"class.absl::optional.316", %"class.absl::optional.316", %"class.absl::optional.316", %"class.absl::optional.316", %"class.absl::optional.316", [4 x i8], %"class.webrtc::TurnCustomizer"*, %"class.absl::optional.838", i32, i8, %"class.absl::optional.843", i8, [4 x i8], %"class.std::__1::basic_string", i8, %"class.absl::optional.242", i8, %"class.absl::optional.316", %"class.absl::optional.316", [4 x i8] }>
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"struct.webrtc::PeerConnectionInterface::IceServer"*, %"struct.webrtc::PeerConnectionInterface::IceServer"*, %"class.std::__1::__compressed_pair.826" }
%"struct.webrtc::PeerConnectionInterface::IceServer" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.302", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.std::__1::vector.302", %"class.std::__1::vector.302" }
%"class.std::__1::vector.302" = type { %"class.std::__1::__vector_base.303" }
%"class.std::__1::__vector_base.303" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"struct.webrtc::PeerConnectionInterface::IceServer"* }
%"class.std::__1::vector.831" = type { %"class.std::__1::__vector_base.832" }
%"class.std::__1::__vector_base.832" = type { %"class.rtc::scoped_refptr"*, %"class.rtc::scoped_refptr"*, %"class.std::__1::__compressed_pair.833" }
%"class.rtc::scoped_refptr" = type opaque
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.834" }
%"struct.std::__1::__compressed_pair_elem.834" = type { %"class.rtc::scoped_refptr"* }
%"struct.cricket::MediaConfig" = type { i8, %"struct.cricket::MediaConfig::Video", %"struct.cricket::MediaConfig::Audio" }
%"struct.cricket::MediaConfig::Video" = type { i8, i8, i8, i8, i8, i32 }
%"struct.cricket::MediaConfig::Audio" = type { i32 }
%"class.webrtc::TurnCustomizer" = type { i32 (...)** }
%"class.absl::optional.838" = type { %"class.absl::optional_internal::optional_data.839" }
%"class.absl::optional_internal::optional_data.839" = type { %"class.absl::optional_internal::optional_data_base.840" }
%"class.absl::optional_internal::optional_data_base.840" = type { %"class.absl::optional_internal::optional_data_dtor_base.841" }
%"class.absl::optional_internal::optional_data_dtor_base.841" = type { i8, %union.anon.842 }
%union.anon.842 = type { i32 }
%"class.absl::optional.843" = type { %"class.absl::optional_internal::optional_data.844" }
%"class.absl::optional_internal::optional_data.844" = type { %"class.absl::optional_internal::optional_data_base.845" }
%"class.absl::optional_internal::optional_data_base.845" = type { %"class.absl::optional_internal::optional_data_dtor_base.846" }
%"class.absl::optional_internal::optional_data_dtor_base.846" = type { i8, %union.anon.847 }
%union.anon.847 = type { %"struct.webrtc::CryptoOptions" }
%"struct.webrtc::CryptoOptions" = type { %"struct.webrtc::CryptoOptions::Srtp", %"struct.webrtc::CryptoOptions::SFrame" }
%"struct.webrtc::CryptoOptions::Srtp" = type { i8, i8, i8, i8 }
%"struct.webrtc::CryptoOptions::SFrame" = type { i8 }
%"class.absl::optional.242" = type { %"class.absl::optional_internal::optional_data.243" }
%"class.absl::optional_internal::optional_data.243" = type { %"class.absl::optional_internal::optional_data_base.244" }
%"class.absl::optional_internal::optional_data_base.244" = type { %"class.absl::optional_internal::optional_data_dtor_base.245" }
%"class.absl::optional_internal::optional_data_dtor_base.245" = type { i8, %union.anon.246 }
%union.anon.246 = type { i8 }
%"class.absl::optional.316" = type { %"class.absl::optional_internal::optional_data.317" }
%"class.absl::optional_internal::optional_data.317" = type { %"class.absl::optional_internal::optional_data_base.318" }
%"class.absl::optional_internal::optional_data_base.318" = type { %"class.absl::optional_internal::optional_data_dtor_base.319" }
%"class.absl::optional_internal::optional_data_dtor_base.319" = type { i8, %union.anon.320 }
%union.anon.320 = type { i32 }
%class.scoped_refptr.848 = type { %"class.blink::ThermalResource"* }
%"class.blink::ThermalResource" = type { %"class.webrtc::Resource", %class.scoped_refptr.650, %"class.base::Lock", %"class.webrtc::ResourceListener"*, i32, i64 }
%"class.webrtc::Resource" = type { %"class.rtc::RefCountInterface" }
%"class.webrtc::ResourceListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.849" = type { %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"class.blink::ThermalUmaListener"* }
%"class.blink::ThermalUmaListener" = type { %"class.base::Lock", %class.scoped_refptr.650, i32, %"class.base::WeakPtrFactory.852" }
%"class.base::WeakPtrFactory.852" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.858" }
%"struct.std::__1::__compressed_pair_elem.858" = type { %"struct.blink::RTCPeerConnectionHandler::FirstSessionDescription"* }
%"struct.blink::RTCPeerConnectionHandler::FirstSessionDescription" = type { i8, i8, i8 }
%class.scoped_refptr.289 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.862" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback.664" = type { %"class.base::internal::CallbackBase" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.866 }
%class.scoped_refptr.866 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::HeapVector.867" = type { %"class.WTF::Vector.870" }
%"class.WTF::Vector.870" = type { %"class.WTF::VectorBuffer.871" }
%"class.WTF::VectorBuffer.871" = type { %"class.WTF::VectorBufferBase.872" }
%"class.WTF::VectorBufferBase.872" = type { %"class.blink::Member.873"*, i32, i32 }
%"class.blink::Member.873" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::Member.875" = type { %"class.blink::MemberBase.876" }
%"class.blink::MemberBase.876" = type { %"class.blink::RTCSctpTransport"* }
%"class.blink::RTCSctpTransport" = type opaque
%"class.base::TimeDelta" = type { i64 }
%"class.blink::RTCRtpTransceiverPlatform" = type { i32 (...)** }
%"class.blink::RTCRtpSender" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.336", %"class.std::__1::unique_ptr.915", %"class.WTF::String", %"class.blink::Member.101", %"class.blink::Member.897", %"class.blink::Member.921", %"class.blink::HeapVector.63", %"class.blink::Member.923", %"class.blink::Member.385", i8, %"class.blink::Member.905", %"class.blink::Member.907", %"class.blink::Member.909", i8, %"class.blink::Member.911", %"class.blink::Member.913", %"class.blink::Member.909" }
%"class.std::__1::unique_ptr.915" = type { %"class.std::__1::__compressed_pair.916" }
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.917" }
%"struct.std::__1::__compressed_pair_elem.917" = type { %"class.blink::RTCRtpSenderPlatform"* }
%"class.blink::RTCRtpSenderPlatform" = type { i32 (...)** }
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::MediaStreamTrack"* }
%"class.blink::MediaStreamTrack" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable.103", %"class.blink::MediaStreamSource::Observer", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", i32, [4 x i8], %"class.blink::HeapHashSet.115", i8, %"class.blink::Member.121", %"class.blink::Member.253", %"class.blink::WeakMember.94", %"class.blink::HeapHashSet.255" }
%"class.blink::ActiveScriptWrappable.103" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::MediaStreamSource::Observer" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::HeapHashSet.115" = type { %"class.WTF::HashSet.118" }
%"class.WTF::HashSet.118" = type { %"class.WTF::HashTable.119" }
%"class.WTF::HashTable.119" = type <{ %"class.blink::Member.69"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::MediaStream"* }
%"class.blink::MediaStream" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContextClient", %"class.blink::ActiveScriptWrappable", %"class.blink::MediaStreamDescriptorClient", %"class.blink::HeapVector.95", %"class.blink::HeapVector.95", %"class.blink::Member.263", %"class.blink::HeapHashSet.281", %"class.base::OnceCallback.288", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.293", i32, [4 x i8] }>
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.94" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::MediaStreamDescriptorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::HeapVector.95" = type { %"class.WTF::Vector.98" }
%"class.WTF::Vector.98" = type { %"class.WTF::VectorBuffer.99" }
%"class.WTF::VectorBuffer.99" = type { %"class.WTF::VectorBufferBase.100" }
%"class.WTF::VectorBufferBase.100" = type { %"class.blink::Member.101"*, i32, i32 }
%"class.blink::Member.263" = type { %"class.blink::MemberBase.264" }
%"class.blink::MemberBase.264" = type { %"class.blink::MediaStreamDescriptor"* }
%"class.blink::MediaStreamDescriptor" = type <{ %"class.blink::Member.267", %"class.WTF::String", i32, [4 x i8], %"class.blink::HeapVector.269", %"class.blink::HeapVector.269", %"class.WTF::Vector.276", i8, [7 x i8] }>
%"class.blink::Member.267" = type { %"class.blink::MemberBase.268" }
%"class.blink::MemberBase.268" = type { %"class.blink::MediaStreamDescriptorClient"* }
%"class.blink::HeapVector.269" = type { %"class.WTF::Vector.272" }
%"class.WTF::Vector.272" = type { %"class.WTF::VectorBuffer.273" }
%"class.WTF::VectorBuffer.273" = type { %"class.WTF::VectorBufferBase.274" }
%"class.WTF::VectorBufferBase.274" = type { %"class.blink::Member.121"*, i32, i32 }
%"class.WTF::Vector.276" = type { %"class.WTF::VectorBuffer.277" }
%"class.WTF::VectorBuffer.277" = type { %"class.WTF::VectorBufferBase.278" }
%"class.WTF::VectorBufferBase.278" = type { %"class.blink::WebMediaStreamObserver"**, i32, i32 }
%"class.blink::WebMediaStreamObserver" = type opaque
%"class.blink::HeapHashSet.281" = type { %"class.WTF::HashSet.284" }
%"class.WTF::HashSet.284" = type { %"class.WTF::HashTable.285" }
%"class.WTF::HashTable.285" = type <{ %"class.blink::WeakMember.287"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.287" = type opaque
%"class.base::OnceCallback.288" = type { %"class.base::internal::CallbackBase" }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.292", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.289, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.292" = type { %"class.blink::MemberBase.70" }
%"class.blink::HeapVector.293" = type { %"class.WTF::Vector.296" }
%"class.WTF::Vector.296" = type { %"class.WTF::VectorBuffer.297" }
%"class.WTF::VectorBuffer.297" = type { %"class.WTF::VectorBufferBase.298" }
%"class.WTF::VectorBufferBase.298" = type { %"class.blink::Member.299"*, i32, i32 }
%"class.blink::Member.299" = type { %"class.blink::MemberBase.300" }
%"class.blink::MemberBase.300" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::MediaStreamComponent"* }
%"class.blink::MediaStreamComponent" = type { %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::MediaStreamComponent::AudioSourceProviderImpl", %"class.blink::Member.128", %"class.WTF::String", i32, i8, i8, i32, %"class.blink::MediaConstraints", %"class.std::__1::unique_ptr.247" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::MediaStreamComponent::AudioSourceProviderImpl" = type { %"class.blink::AudioSourceProvider", %"class.blink::WebAudioSourceProvider"*, %"class.WTF::Mutex", %"class.blink::WebVector" }
%"class.blink::AudioSourceProvider" = type { i32 (...)** }
%"class.blink::WebAudioSourceProvider" = type opaque
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float**, float**, %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { float** }
%"class.blink::Member.128" = type { %"class.blink::MemberBase.129" }
%"class.blink::MemberBase.129" = type { %"class.blink::MediaStreamSource"* }
%"class.blink::MediaStreamSource" = type <{ %"class.blink::ThreadState::PrefinalizerRegistration.132", [7 x i8], %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", i8, [3 x i8], i32, i8, [7 x i8], %"class.blink::HeapHashSet.133", %"class.WTF::Mutex", %"class.WTF::HashSet.140", %"class.std::__1::unique_ptr.144", %"class.blink::MediaConstraints", %"struct.blink::MediaStreamSource::Capabilities", %"class.absl::optional.237", %"class.absl::optional.242", %"class.absl::optional.242", [4 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.132" = type { i8 }
%"class.blink::HeapHashSet.133" = type { %"class.WTF::HashSet.136" }
%"class.WTF::HashSet.136" = type { %"class.WTF::HashTable.137" }
%"class.WTF::HashTable.137" = type <{ %"class.blink::WeakMember.139"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.139" = type opaque
%"class.WTF::HashSet.140" = type { %"class.WTF::HashTable.141" }
%"class.WTF::HashTable.141" = type <{ %"class.blink::AudioDestinationConsumer"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioDestinationConsumer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::WebPlatformMediaStreamSource"* }
%"class.blink::WebPlatformMediaStreamSource" = type { i32 (...)**, %"struct.blink::MediaStreamDevice", %"class.base::OnceCallback", %"class.blink::WebPrivatePtr" }
%"struct.blink::MediaStreamDevice" = type { i32, %"class.std::__1::basic_string", %"struct.media::VideoCaptureControlSupport", i32, %"class.absl::optional.153", %"class.absl::optional.153", %"class.std::__1::basic_string", %"class.media::AudioParameters", %"class.absl::optional.170", %"class.absl::optional.201" }
%"struct.media::VideoCaptureControlSupport" = type { i8, i8, i8 }
%"class.absl::optional.153" = type { %"class.absl::optional_internal::optional_data.154" }
%"class.absl::optional_internal::optional_data.154" = type { %"class.absl::optional_internal::optional_data_base.155" }
%"class.absl::optional_internal::optional_data_base.155" = type { %"class.absl::optional_internal::optional_data_dtor_base.156" }
%"class.absl::optional_internal::optional_data_dtor_base.156" = type { i8, %union.anon.157 }
%union.anon.157 = type { %"class.std::__1::basic_string" }
%"class.media::AudioParameters" = type { i32, i32, i32, i32, i32, i32, %"class.std::__1::vector.158", i32, %"class.absl::optional.165" }
%"class.std::__1::vector.158" = type { %"class.std::__1::__vector_base.159" }
%"class.std::__1::__vector_base.159" = type { %"class.gfx::Point3F"*, %"class.gfx::Point3F"*, %"class.std::__1::__compressed_pair.160" }
%"class.gfx::Point3F" = type { float, float, float }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.gfx::Point3F"* }
%"class.absl::optional.165" = type { %"class.absl::optional_internal::optional_data.166" }
%"class.absl::optional_internal::optional_data.166" = type { %"class.absl::optional_internal::optional_data_base.167" }
%"class.absl::optional_internal::optional_data_base.167" = type { %"class.absl::optional_internal::optional_data_dtor_base.168" }
%"class.absl::optional_internal::optional_data_dtor_base.168" = type { i8, %union.anon.169 }
%union.anon.169 = type { %"struct.media::AudioParameters::HardwareCapabilities" }
%"struct.media::AudioParameters::HardwareCapabilities" = type { i32, i32 }
%"class.absl::optional.170" = type { %"class.absl::optional_internal::optional_data.171" }
%"class.absl::optional_internal::optional_data.171" = type { %"class.absl::optional_internal::optional_data_base.172" }
%"class.absl::optional_internal::optional_data_base.172" = type { %"class.absl::optional_internal::optional_data_dtor_base.173" }
%"class.absl::optional_internal::optional_data_dtor_base.173" = type { i8, %union.anon.174 }
%union.anon.174 = type { %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.175" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.media::mojom::DisplayMediaInformation"* }
%"class.media::mojom::DisplayMediaInformation" = type { i32, i8, i32, %"class.mojo::StructPtr.178" }
%"class.mojo::StructPtr.178" = type { %"class.std::__1::unique_ptr.179" }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.media::mojom::CaptureHandle"* }
%"class.media::mojom::CaptureHandle" = type { %"class.url::Origin", %"class.std::__1::basic_string.182" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::basic_string.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.185 }
%union.anon.185 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.absl::optional.201" = type { %"class.absl::optional_internal::optional_data.202" }
%"class.absl::optional_internal::optional_data.202" = type { %"class.absl::optional_internal::optional_data_base.203" }
%"class.absl::optional_internal::optional_data_base.203" = type { %"class.absl::optional_internal::optional_data_dtor_base.204" }
%"class.absl::optional_internal::optional_data_dtor_base.204" = type { i8, %union.anon.205 }
%union.anon.205 = type { %"class.base::UnguessableToken" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"struct.blink::MediaStreamSource::Capabilities" = type { %"class.WTF::Vector.212", %"class.WTF::Vector.212", %"class.WTF::Vector.217", %"class.WTF::Vector.217", %"class.WTF::Vector.222", %"class.WTF::Vector.227", %"class.WTF::Vector.222", %"class.WTF::Vector.222", %"class.WTF::Vector.232", %"class.WTF::Vector.232", %"class.WTF::Vector.232", %"class.WTF::Vector.217", i32, %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::Vector.212" = type { %"class.WTF::VectorBuffer.213" }
%"class.WTF::VectorBuffer.213" = type { %"class.WTF::VectorBufferBase.214" }
%"class.WTF::VectorBufferBase.214" = type { i32*, i32, i32 }
%"class.WTF::Vector.227" = type { %"class.WTF::VectorBuffer.228" }
%"class.WTF::VectorBuffer.228" = type { %"class.WTF::VectorBufferBase.229" }
%"class.WTF::VectorBufferBase.229" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.222" = type { %"class.WTF::VectorBuffer.223" }
%"class.WTF::VectorBuffer.223" = type { %"class.WTF::VectorBufferBase.224" }
%"class.WTF::VectorBufferBase.224" = type { i8*, i32, i32 }
%"class.WTF::Vector.232" = type { %"class.WTF::VectorBuffer.233" }
%"class.WTF::VectorBuffer.233" = type { %"class.WTF::VectorBufferBase.234" }
%"class.WTF::VectorBufferBase.234" = type { i32*, i32, i32 }
%"class.WTF::Vector.217" = type { %"class.WTF::VectorBuffer.218" }
%"class.WTF::VectorBuffer.218" = type { %"class.WTF::VectorBufferBase.219" }
%"class.WTF::VectorBufferBase.219" = type { double*, i32, i32 }
%"class.absl::optional.237" = type { %"class.absl::optional_internal::optional_data.238" }
%"class.absl::optional_internal::optional_data.238" = type { %"class.absl::optional_internal::optional_data_base.239" }
%"class.absl::optional_internal::optional_data_base.239" = type { %"class.absl::optional_internal::optional_data_dtor_base.240" }
%"class.absl::optional_internal::optional_data_dtor_base.240" = type { i8, %union.anon.241 }
%union.anon.241 = type { i32 }
%"class.blink::MediaConstraints" = type { %"class.blink::WebPrivatePtr.211" }
%"class.blink::WebPrivatePtr.211" = type { i8* }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::MediaStreamTrackPlatform"* }
%"class.blink::MediaStreamTrackPlatform" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::Member.253" = type { %"class.blink::MemberBase.254" }
%"class.blink::MemberBase.254" = type { %"class.blink::ImageCapture"* }
%"class.blink::ImageCapture" = type opaque
%"class.blink::WeakMember.94" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.25", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.31", %"class.blink::Member.33", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.42", %"class.blink::Member.48", %"class.blink::Member.50", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.4" }
%"class.blink::Supplementable.4" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.5" }
%"class.blink::HeapHashMap.5" = type { %"class.WTF::HashMap.8" }
%"class.WTF::HashMap.8" = type { %"class.WTF::HashTable.9" }
%"class.WTF::HashTable.9" = type <{ %"struct.WTF::KeyValuePair.11"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.11" = type { i8*, %"class.blink::Member.1027" }
%"class.blink::Member.1027" = type { %"class.blink::MemberBase.1028" }
%"class.blink::MemberBase.1028" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1029" }
%"class.blink::Member.1029" = type { %"class.blink::MemberBase.1030" }
%"class.blink::MemberBase.1030" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.22", i32, i32 }
%class.scoped_refptr = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.14 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.14 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.WTF::HashSet.22" = type { %"class.WTF::HashTable.23" }
%"class.WTF::HashTable.23" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.29"*, i32, i32 }
%"class.blink::Member.29" = type opaque
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.35", i32, i32 }
%"class.blink::HeapHashMap.35" = type { %"class.WTF::HashMap.38" }
%"class.WTF::HashMap.38" = type { %"class.WTF::HashTable.39" }
%"class.WTF::HashTable.39" = type <{ %"struct.WTF::KeyValuePair.41"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.41" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::HeapHashSet.255" = type { %"class.WTF::HashSet.258" }
%"class.WTF::HashSet.258" = type { %"class.WTF::HashTable.259" }
%"class.WTF::HashTable.259" = type <{ %"class.blink::WeakMember.261"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.261" = type opaque
%"class.blink::Member.897" = type { %"class.blink::MemberBase.898" }
%"class.blink::MemberBase.898" = type { %"class.blink::RTCDtlsTransport"* }
%"class.blink::RTCDtlsTransport" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::RTCDTMFSender"* }
%"class.blink::RTCDTMFSender" = type opaque
%"class.blink::HeapVector.63" = type { %"class.WTF::Vector.66" }
%"class.WTF::Vector.66" = type { %"class.WTF::VectorBuffer.67" }
%"class.WTF::VectorBuffer.67" = type { %"class.WTF::VectorBufferBase.68" }
%"class.WTF::VectorBufferBase.68" = type { %"class.blink::Member.69"*, i32, i32 }
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::RTCRtpSendParameters"* }
%"class.blink::RTCRtpSendParameters" = type { %"class.blink::RTCRtpParameters", i8, %"class.WTF::String", %"class.blink::HeapVector.54", %"class.WTF::String" }
%"class.blink::RTCRtpParameters" = type { %"class.blink::IDLDictionaryBase", i8, i8, %"class.blink::HeapVector.925", %"class.blink::HeapVector.933", %"class.blink::Member.941" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::HeapVector.925" = type { %"class.WTF::Vector.928" }
%"class.WTF::Vector.928" = type { %"class.WTF::VectorBuffer.929" }
%"class.WTF::VectorBuffer.929" = type { %"class.WTF::VectorBufferBase.930" }
%"class.WTF::VectorBufferBase.930" = type { %"class.blink::Member.931"*, i32, i32 }
%"class.blink::Member.931" = type opaque
%"class.blink::HeapVector.933" = type { %"class.WTF::Vector.936" }
%"class.WTF::Vector.936" = type { %"class.WTF::VectorBuffer.937" }
%"class.WTF::VectorBuffer.937" = type { %"class.WTF::VectorBufferBase.938" }
%"class.WTF::VectorBufferBase.938" = type { %"class.blink::Member.939"*, i32, i32 }
%"class.blink::Member.939" = type opaque
%"class.blink::Member.941" = type { %"class.blink::MemberBase.942" }
%"class.blink::MemberBase.942" = type { %"class.blink::RTCRtcpParameters"* }
%"class.blink::RTCRtcpParameters" = type opaque
%"class.blink::HeapVector.54" = type { %"class.WTF::Vector.57" }
%"class.WTF::Vector.57" = type { %"class.WTF::VectorBuffer.58" }
%"class.WTF::VectorBuffer.58" = type { %"class.WTF::VectorBufferBase.59" }
%"class.WTF::VectorBufferBase.59" = type { %"class.blink::Member.60"*, i32, i32 }
%"class.blink::Member.60" = type { %"class.blink::MemberBase.61" }
%"class.blink::MemberBase.61" = type { %"class.blink::RTCRtpEncodingParameters"* }
%"class.blink::RTCRtpEncodingParameters" = type { %"class.blink::RTCRtpCodingParameters", i8, i8, i8, i8, i8, i8, i8, i32, double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", double }
%"class.blink::RTCRtpCodingParameters" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String" }
%"class.blink::Member.905" = type { %"class.blink::MemberBase.906" }
%"class.blink::MemberBase.906" = type { %"class.blink::RTCEncodedAudioUnderlyingSource"* }
%"class.blink::RTCEncodedAudioUnderlyingSource" = type opaque
%"class.blink::Member.907" = type { %"class.blink::MemberBase.908" }
%"class.blink::MemberBase.908" = type { %"class.blink::RTCEncodedAudioUnderlyingSink"* }
%"class.blink::RTCEncodedAudioUnderlyingSink" = type opaque
%"class.blink::Member.911" = type { %"class.blink::MemberBase.912" }
%"class.blink::MemberBase.912" = type { %"class.blink::RTCEncodedVideoUnderlyingSource"* }
%"class.blink::RTCEncodedVideoUnderlyingSource" = type opaque
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::RTCEncodedVideoUnderlyingSink"* }
%"class.blink::RTCEncodedVideoUnderlyingSink" = type opaque
%"class.blink::Member.909" = type { %"class.blink::MemberBase.910" }
%"class.blink::MemberBase.910" = type { %"class.blink::RTCInsertableStreams"* }
%"class.blink::RTCInsertableStreams" = type opaque
%"class.blink::RTCRtpReceiver" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.336", %"class.std::__1::unique_ptr.891", %"class.blink::Member.101", %"class.blink::Member.897", %"class.blink::HeapVector.63", %"class.WTF::Vector.899", i8, %"class.blink::Member.385", %"class.absl::optional.321", i8, %"class.blink::Member.905", %"class.blink::Member.907", %"class.blink::Member.909", i8, %"class.blink::Member.911", %"class.blink::Member.913", %"class.blink::Member.909" }
%"class.std::__1::unique_ptr.891" = type { %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.blink::RTCRtpReceiverPlatform"* }
%"class.blink::RTCRtpReceiverPlatform" = type { i32 (...)** }
%"class.WTF::Vector.899" = type { %"class.WTF::VectorBuffer.900" }
%"class.WTF::VectorBuffer.900" = type { %"class.WTF::VectorBufferBase.901" }
%"class.WTF::VectorBufferBase.901" = type { %"class.std::__1::unique_ptr.902"*, i32, i32 }
%"class.std::__1::unique_ptr.902" = type opaque
%"class.absl::optional.321" = type { %"class.absl::optional_internal::optional_data.322" }
%"class.absl::optional_internal::optional_data.322" = type { %"class.absl::optional_internal::optional_data_base.323" }
%"class.absl::optional_internal::optional_data_base.323" = type { %"class.absl::optional_internal::optional_data_dtor_base.324" }
%"class.absl::optional_internal::optional_data_dtor_base.324" = type { i8, %union.anon.325 }
%union.anon.325 = type { double }
%"struct.webrtc::RtpTransceiverInit" = type { i32, %"class.std::__1::vector.302", %"class.std::__1::vector.309" }
%"class.std::__1::vector.309" = type { %"class.std::__1::__vector_base.310" }
%"class.std::__1::__vector_base.310" = type { %"struct.webrtc::RtpEncodingParameters"*, %"struct.webrtc::RtpEncodingParameters"*, %"class.std::__1::__compressed_pair.326" }
%"struct.webrtc::RtpEncodingParameters" = type <{ %"class.absl::optional.311", double, i32, %"class.absl::optional.316", %"class.absl::optional.316", [4 x i8], %"class.absl::optional.321", %"class.absl::optional.316", %"class.absl::optional.321", %"class.absl::optional.153", i8, [7 x i8], %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.absl::optional.311" = type { %"class.absl::optional_internal::optional_data.312" }
%"class.absl::optional_internal::optional_data.312" = type { %"class.absl::optional_internal::optional_data_base.313" }
%"class.absl::optional_internal::optional_data_base.313" = type { %"class.absl::optional_internal::optional_data_dtor_base.314" }
%"class.absl::optional_internal::optional_data_dtor_base.314" = type { i8, %union.anon.315 }
%union.anon.315 = type { i32 }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"struct.webrtc::RtpEncodingParameters"* }
%"class.blink::RTCRtpTransceiverInit" = type { %"class.blink::IDLDictionaryBase", i8, i8, %"class.WTF::String", %"class.blink::HeapVector.54", %"class.blink::HeapVector.63" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.943" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.943" = type { %"class.v8::TracedReference.944" }
%"class.v8::TracedReference.944" = type { %"class.v8::BasicTracedReference.945" }
%"class.v8::BasicTracedReference.945" = type { %"class.v8::TracedReferenceBase" }
%"class.webrtc::RTCError" = type { i32, %"class.std::__1::basic_string", i32, %"class.absl::optional.946" }
%"class.absl::optional.946" = type { %"class.absl::optional_internal::optional_data.947" }
%"class.absl::optional_internal::optional_data.947" = type { %"class.absl::optional_internal::optional_data_base.948" }
%"class.absl::optional_internal::optional_data_base.948" = type { %"class.absl::optional_internal::optional_data_dtor_base.949" }
%"class.absl::optional_internal::optional_data_dtor_base.949" = type { i8, %union.anon.950 }
%union.anon.950 = type { i16 }
%"class.blink::HeapVector.951" = type { %"class.WTF::Vector.954" }
%"class.WTF::Vector.954" = type { %"class.WTF::VectorBuffer.955" }
%"class.WTF::VectorBuffer.955" = type { %"class.WTF::VectorBufferBase.956" }
%"class.WTF::VectorBufferBase.956" = type { %"class.blink::Member.957"*, i32, i32 }
%"class.blink::Member.957" = type { %"class.blink::MemberBase.958" }
%"class.blink::MemberBase.958" = type { %"class.blink::RTCRtpCodecCapability"* }
%"class.blink::RTCRtpCodecCapability" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i16, i32, %"class.WTF::String", %"class.WTF::Vector.227", %"class.WTF::String" }
%"class.WTF::Vector.960" = type { %"class.WTF::VectorBuffer.961" }
%"class.WTF::VectorBuffer.961" = type { %"class.WTF::VectorBufferBase.962" }
%"class.WTF::VectorBufferBase.962" = type { %"struct.webrtc::RtpCodecCapability"*, i32, i32 }
%"struct.webrtc::RtpCodecCapability" = type <{ %"class.std::__1::basic_string", i32, %"class.absl::optional.316", %"class.absl::optional.316", %"class.absl::optional.316", %"class.absl::optional.316", %"class.absl::optional.316", [4 x i8], %"class.std::__1::vector.963", %"class.std::__1::map.975", %"class.std::__1::map.975", i32, i32, i8, [7 x i8] }>
%"class.std::__1::vector.963" = type { %"class.std::__1::__vector_base.964" }
%"class.std::__1::__vector_base.964" = type { %"struct.webrtc::RtcpFeedback"*, %"struct.webrtc::RtcpFeedback"*, %"class.std::__1::__compressed_pair.970" }
%"struct.webrtc::RtcpFeedback" = type { i32, %"class.absl::optional.965" }
%"class.absl::optional.965" = type { %"class.absl::optional_internal::optional_data.966" }
%"class.absl::optional_internal::optional_data.966" = type { %"class.absl::optional_internal::optional_data_base.967" }
%"class.absl::optional_internal::optional_data_base.967" = type { %"class.absl::optional_internal::optional_data_dtor_base.968" }
%"class.absl::optional_internal::optional_data_dtor_base.968" = type { i8, %union.anon.969 }
%union.anon.969 = type { i32 }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"struct.webrtc::RtcpFeedback"* }
%"class.std::__1::map.975" = type { %"class.std::__1::__tree.976" }
%"class.std::__1::__tree.976" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.977", %"class.std::__1::__compressed_pair.981" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1058" }
%"struct.std::__1::pair.1058" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.blink::HeapVector.989" = type { %"class.WTF::Vector.992" }
%"class.WTF::Vector.992" = type { %"class.WTF::VectorBuffer.993" }
%"class.WTF::VectorBuffer.993" = type { %"class.WTF::VectorBufferBase.994" }
%"class.WTF::VectorBufferBase.994" = type { %"class.blink::Member.995"*, i32, i32 }
%"class.blink::Member.995" = type { %"class.blink::MemberBase.996" }
%"class.blink::MemberBase.996" = type { %"class.blink::RTCRtpHeaderExtensionCapability"* }
%"class.blink::RTCRtpHeaderExtensionCapability" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::Vector.998" = type { %"class.WTF::VectorBuffer.999" }
%"class.WTF::VectorBuffer.999" = type { %"class.WTF::VectorBufferBase.1000" }
%"class.WTF::VectorBufferBase.1000" = type { %"struct.webrtc::RtpHeaderExtensionCapability"*, i32, i32 }
%"struct.webrtc::RtpHeaderExtensionCapability" = type { %"class.std::__1::basic_string", %"class.absl::optional.316", i8, i32 }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.1022, %"class.blink::Member.1023", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.1022 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.1025" }
%"class.blink::Persistent.1025" = type { %"class.blink::PersistentBase.1026" }
%"class.blink::PersistentBase.1026" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN5blink17RTCRtpTransceiverD2Ev = comdat any

$_ZN5blink17RTCRtpTransceiverD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink17RTCRtpTransceiver18GetWrapperTypeInfoEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16vectorIN6webrtc21RtpEncodingParametersENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN6webrtc18RtpCodecCapabilityELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN6webrtc18RtpCodecCapabilityEEEmm = comdat any

$_ZN6webrtc18RtpCodecCapabilityC2ERKS0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE30__emplace_hint_unique_key_argsIS7_JRKNS_4pairIKS7_S7_EEEEENSG_INS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEENS_21__tree_const_iteratorIS8_SP_lEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_SH_EElEERPNS_15__tree_end_nodeISJ_EESK_RKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN3WTF6VectorIN6webrtc18RtpCodecCapabilityELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN6webrtc28RtpHeaderExtensionCapabilityELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN6webrtc28RtpHeaderExtensionCapabilityEEEmm = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_31RTCRtpHeaderExtensionCapabilityEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_31RTCRtpHeaderExtensionCapabilityEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_31RTCRtpHeaderExtensionCapabilityEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_31RTCRtpHeaderExtensionCapabilityEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17RTCPeerConnectionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_12RTCRtpSenderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14RTCRtpReceiverEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink17RTCRtpTransceiverE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::RTCRtpTransceiver"*)* @_ZN5blink17RTCRtpTransceiverD2Ev to i8*), i8* bitcast (void (%"class.blink::RTCRtpTransceiver"*)* @_ZN5blink17RTCRtpTransceiverD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::RTCRtpTransceiver"*, %"class.blink::Visitor"*)* @_ZNK5blink17RTCRtpTransceiver5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::RTCRtpTransceiver"*)* @_ZNK5blink17RTCRtpTransceiver18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [36 x i8] c"Invalid RTCRtpTransceiverDirection.\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"The peer connection is closed.\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"The transceiver is stopped.\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"Invalid codec\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"video\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"audio\00", align 1
@.str.6 = private unnamed_addr constant [35 x i8] c"The extension URL cannot be empty.\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"sendrecv\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"sendonly\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"recvonly\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"inactive\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"stopped\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink17RTCRtpTransceiver18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.13 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.14 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.16 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.17 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.18 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.19 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN6webrtc18RtpCodecCapabilityEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = webrtc::RtpCodecCapability]\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN6webrtc28RtpHeaderExtensionCapabilityEEEPKcv = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = webrtc::RtpHeaderExtensionCapability]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.21 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.23 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_31RTCRtpHeaderExtensionCapabilityEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [203 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::RTCRtpHeaderExtensionCapability>, WTF::VectorTraits<blink::Member<blink::RTCRtpHeaderExtensionCapability> > >]\00", align 1

@_ZN5blink17RTCRtpTransceiverC1EPNS_17RTCPeerConnectionENSt3__110unique_ptrINS_25RTCRtpTransceiverPlatformENS3_14default_deleteIS5_EEEEPNS_12RTCRtpSenderEPNS_14RTCRtpReceiverE = hidden unnamed_addr alias void (%"class.blink::RTCRtpTransceiver"*, %"class.blink::RTCPeerConnection"*, %"class.blink::RTCRtpTransceiverPlatform"*, %"class.blink::RTCRtpSender"*, %"class.blink::RTCRtpReceiver"*), void (%"class.blink::RTCRtpTransceiver"*, %"class.blink::RTCPeerConnection"*, %"class.blink::RTCRtpTransceiverPlatform"*, %"class.blink::RTCRtpSender"*, %"class.blink::RTCRtpReceiver"*)* @_ZN5blink17RTCRtpTransceiverC2EPNS_17RTCPeerConnectionENSt3__110unique_ptrINS_25RTCRtpTransceiverPlatformENS3_14default_deleteIS5_EEEEPNS_12RTCRtpSenderEPNS_14RTCRtpReceiverE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ToRtpTransceiverInitEPNS_16ExecutionContextEPKNS_21RTCRtpTransceiverInitE(%"struct.webrtc::RtpTransceiverInit"* noalias sret, %"class.blink::ExecutionContext"*, %"class.blink::RTCRtpTransceiverInit"* nocapture readonly) local_unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.absl::optional.331"*
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"struct.webrtc::RtpEncodingParameters", align 8
  %9 = bitcast %"struct.webrtc::RtpTransceiverInit"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 56, i1 false)
  tail call void @_ZN6webrtc18RtpTransceiverInitC1Ev(%"struct.webrtc::RtpTransceiverInit"* %0) #14
  %10 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #14
  store i64 -6148914691236517376, i64* %4, align 8
  %11 = getelementptr inbounds %"class.blink::RTCRtpTransceiverInit", %"class.blink::RTCRtpTransceiverInit"* %2, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %24, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::RTCRtpTransceiverInit", %"class.blink::RTCRtpTransceiverInit"* %2, i64 0, i32 3
  %16 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_130TransceiverDirectionFromStringERKN3WTF6StringEPN4absl8optionalIN6webrtc23RtpTransceiverDirectionEEE(%"class.WTF::String"* dereferenceable(8) %15, %"class.absl::optional.331"* nonnull %5)
  %17 = load i8, i8* %10, align 8
  %18 = icmp ne i8 %17, 0
  %19 = and i1 %16, %18
  br i1 %19, label %20, label %24

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.absl::optional.331", %"class.absl::optional.331"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.webrtc::RtpTransceiverInit", %"struct.webrtc::RtpTransceiverInit"* %0, i64 0, i32 0
  store i32 %22, i32* %23, align 8
  br label %24

24:                                               ; preds = %3, %20, %14
  %25 = getelementptr inbounds %"class.blink::RTCRtpTransceiverInit", %"class.blink::RTCRtpTransceiverInit"* %2, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::Member.69"*, %"class.blink::Member.69"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::RTCRtpTransceiverInit", %"class.blink::RTCRtpTransceiverInit"* %2, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::Member.69", %"class.blink::Member.69"* %26, i64 %29
  %31 = icmp eq i32 %28, 0
  br i1 %31, label %43, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"struct.webrtc::RtpTransceiverInit", %"struct.webrtc::RtpTransceiverInit"* %0, i64 0, i32 1
  %34 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %35 = bitcast %"class.WTF::String"* %7 to i8*
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.webrtc::RtpTransceiverInit", %"struct.webrtc::RtpTransceiverInit"* %0, i64 0, i32 1, i32 0, i32 1
  %38 = getelementptr inbounds %"struct.webrtc::RtpTransceiverInit", %"struct.webrtc::RtpTransceiverInit"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"class.std::__1::basic_string"** %37 to i64*
  %40 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %57

43:                                               ; preds = %112, %24
  %44 = getelementptr inbounds %"class.blink::RTCRtpTransceiverInit", %"class.blink::RTCRtpTransceiverInit"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::Member.60"*, %"class.blink::Member.60"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::RTCRtpTransceiverInit", %"class.blink::RTCRtpTransceiverInit"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.blink::Member.60", %"class.blink::Member.60"* %45, i64 %48
  %50 = icmp eq i32 %47, 0
  br i1 %50, label %115, label %51

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"struct.webrtc::RtpEncodingParameters", %"struct.webrtc::RtpEncodingParameters"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.webrtc::RtpTransceiverInit", %"struct.webrtc::RtpTransceiverInit"* %0, i64 0, i32 2, i32 0, i32 1
  %54 = getelementptr inbounds %"struct.webrtc::RtpTransceiverInit", %"struct.webrtc::RtpTransceiverInit"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.webrtc::RtpTransceiverInit", %"struct.webrtc::RtpTransceiverInit"* %0, i64 0, i32 2
  %56 = bitcast %"struct.webrtc::RtpEncodingParameters"** %53 to i64*
  br label %116

57:                                               ; preds = %32, %112
  %58 = phi %"class.blink::Member.69"* [ %26, %32 ], [ %113, %112 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #14
  %59 = getelementptr inbounds %"class.blink::Member.69", %"class.blink::Member.69"* %58, i64 0, i32 0, i32 0
  %60 = load %"class.blink::MediaStream"*, %"class.blink::MediaStream"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::MediaStream", %"class.blink::MediaStream"* %60, i64 0, i32 6, i32 0, i32 0
  %62 = load %"class.blink::MediaStreamDescriptor"*, %"class.blink::MediaStreamDescriptor"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::MediaStreamDescriptor", %"class.blink::MediaStreamDescriptor"* %62, i64 0, i32 1, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #14
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !2

80:                                               ; preds = %71
  call void @llvm.trap() #14
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %57, %66, %81
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %36, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.WTF::String"* nonnull %7, i32 0) #14
  %84 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %37, align 8
  %85 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %38, align 8
  %86 = icmp ult %"class.std::__1::basic_string"* %84, %85
  br i1 %86, label %87, label %91

87:                                               ; preds = %83
  %88 = bitcast %"class.std::__1::basic_string"* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* nonnull align 8 %34, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 24, i1 false) #14
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %84, i64 1
  %90 = ptrtoint %"class.std::__1::basic_string"* %89 to i64
  store i64 %90, i64* %39, align 8
  br label %96

91:                                               ; preds = %83
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.302"* %33, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #14
  %92 = load i8, i8* %41, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %91
  %95 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %95) #15
  br label %96

96:                                               ; preds = %87, %91, %94
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #14
  br label %112

112:                                              ; preds = %96, %108, %111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #14
  %113 = getelementptr inbounds %"class.blink::Member.69", %"class.blink::Member.69"* %58, i64 1
  %114 = icmp eq %"class.blink::Member.69"* %113, %30
  br i1 %114, label %43, label %57

115:                                              ; preds = %127, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #14
  ret void

116:                                              ; preds = %51, %127
  %117 = phi %"class.blink::Member.60"* [ %45, %51 ], [ %128, %127 ]
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %52) #14
  %118 = getelementptr inbounds %"class.blink::Member.60", %"class.blink::Member.60"* %117, i64 0, i32 0, i32 0
  %119 = load %"class.blink::RTCRtpEncodingParameters"*, %"class.blink::RTCRtpEncodingParameters"** %118, align 8
  call void @_ZN5blink23ToRtpEncodingParametersEPNS_16ExecutionContextEPKNS_24RTCRtpEncodingParametersE(%"struct.webrtc::RtpEncodingParameters"* nonnull sret %8, %"class.blink::ExecutionContext"* %1, %"class.blink::RTCRtpEncodingParameters"* %119) #14
  %120 = load %"struct.webrtc::RtpEncodingParameters"*, %"struct.webrtc::RtpEncodingParameters"** %53, align 8
  %121 = load %"struct.webrtc::RtpEncodingParameters"*, %"struct.webrtc::RtpEncodingParameters"** %54, align 8
  %122 = icmp ult %"struct.webrtc::RtpEncodingParameters"* %120, %121
  br i1 %122, label %123, label %126

123:                                              ; preds = %116
  call void @_ZN6webrtc21RtpEncodingParametersC1ERKS0_(%"struct.webrtc::RtpEncodingParameters"* %120, %"struct.webrtc::RtpEncodingParameters"* nonnull dereferenceable(152) %8) #14
  %124 = getelementptr inbounds %"struct.webrtc::RtpEncodingParameters", %"struct.webrtc::RtpEncodingParameters"* %120, i64 1
  %125 = ptrtoint %"struct.webrtc::RtpEncodingParameters"* %124 to i64
  store i64 %125, i64* %56, align 8
  br label %127

126:                                              ; preds = %116
  call void @_ZNSt3__16vectorIN6webrtc21RtpEncodingParametersENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.309"* %55, %"struct.webrtc::RtpEncodingParameters"* nonnull dereferenceable(152) %8) #14
  br label %127

127:                                              ; preds = %123, %126
  call void @_ZN6webrtc21RtpEncodingParametersD1Ev(%"struct.webrtc::RtpEncodingParameters"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %52) #14
  %128 = getelementptr inbounds %"class.blink::Member.60", %"class.blink::Member.60"* %117, i64 1
  %129 = icmp eq %"class.blink::Member.60"* %128, %49
  br i1 %129, label %115, label %116
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN6webrtc18RtpTransceiverInitC1Ev(%"struct.webrtc::RtpTransceiverInit"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_130TransceiverDirectionFromStringERKN3WTF6StringEPN4absl8optionalIN6webrtc23RtpTransceiverDirectionEEE(%"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.absl::optional.331"* nocapture) unnamed_addr #0 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.absl::optional.331", %"class.absl::optional.331"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 4
  br label %114

16:                                               ; preds = %2
  %17 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %23 = bitcast i8** %22 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %20, i32* %24, align 8
  %25 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #14
  %26 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %27 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i8** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 8, i32* %29, align 8
  %30 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #14
  br i1 %30, label %31, label %33

31:                                               ; preds = %16
  %32 = bitcast %"class.absl::optional.331"* %1 to i64*
  store i64 1, i64* %32, align 4
  br label %114

33:                                               ; preds = %16
  %34 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #14
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %38, align 8
  %39 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %40 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %39, i64* %40, align 8
  br label %49

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 1
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %47 = bitcast i8** %46 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %47, align 8
  %48 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %49

49:                                               ; preds = %41, %37
  %50 = phi i64 [ %48, %41 ], [ %39, %37 ]
  %51 = phi i32 [ %44, %41 ], [ 0, %37 ]
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %51, i32* %52, align 8
  %53 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #14
  %54 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %50, i64* %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i8** %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 8, i32* %56, align 8
  %57 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #14
  br i1 %57, label %58, label %60

58:                                               ; preds = %49
  %59 = bitcast %"class.absl::optional.331"* %1 to i64*
  store i64 4294967297, i64* %59, align 4
  br label %114

60:                                               ; preds = %49
  %61 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #14
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %65, align 8
  %66 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %67 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %66, i64* %67, align 8
  br label %76

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %69, align 8
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 1
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %74 = bitcast i8** %73 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %74, align 8
  %75 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %76

76:                                               ; preds = %68, %64
  %77 = phi i64 [ %75, %68 ], [ %66, %64 ]
  %78 = phi i32 [ %71, %68 ], [ 0, %64 ]
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %78, i32* %79, align 8
  %80 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #14
  %81 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %77, i64* %81, align 8
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), i8** %82, align 8
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 8, i32* %83, align 8
  %84 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #14
  br i1 %84, label %85, label %87

85:                                               ; preds = %76
  %86 = bitcast %"class.absl::optional.331"* %1 to i64*
  store i64 8589934593, i64* %86, align 4
  br label %114

87:                                               ; preds = %76
  %88 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #14
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %95

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %92, align 8
  %93 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %94 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %93, i64* %94, align 8
  br label %103

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %89, %"class.WTF::StringImpl"** %96, align 8
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %100 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %101 = bitcast i8** %100 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %101, align 8
  %102 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

103:                                              ; preds = %95, %91
  %104 = phi i64 [ %102, %95 ], [ %93, %91 ]
  %105 = phi i32 [ %98, %95 ], [ 0, %91 ]
  %106 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %105, i32* %106, align 8
  %107 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #14
  %108 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %104, i64* %108, align 8
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i8** %109, align 8
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 8, i32* %110, align 8
  %111 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #14
  br i1 %111, label %112, label %114

112:                                              ; preds = %103
  %113 = bitcast %"class.absl::optional.331"* %1 to i64*
  store i64 12884901889, i64* %113, align 4
  br label %114

114:                                              ; preds = %103, %112, %85, %58, %31, %14
  %115 = phi i1 [ true, %31 ], [ true, %58 ], [ true, %85 ], [ true, %112 ], [ true, %14 ], [ false, %103 ]
  ret i1 %115
}

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink23ToRtpEncodingParametersEPNS_16ExecutionContextEPKNS_24RTCRtpEncodingParametersE(%"struct.webrtc::RtpEncodingParameters"* sret, %"class.blink::ExecutionContext"*, %"class.blink::RTCRtpEncodingParameters"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6webrtc21RtpEncodingParametersD1Ev(%"struct.webrtc::RtpEncodingParameters"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17RTCRtpTransceiverC2EPNS_17RTCPeerConnectionENSt3__110unique_ptrINS_25RTCRtpTransceiverPlatformENS3_14default_deleteIS5_EEEEPNS_12RTCRtpSenderEPNS_14RTCRtpReceiverE(%"class.blink::RTCRtpTransceiver"*, %"class.blink::RTCPeerConnection"*, %"class.blink::RTCRtpTransceiverPlatform"*, %"class.blink::RTCRtpSender"*, %"class.blink::RTCRtpReceiver"*) unnamed_addr #0 align 2 {
  %6 = ptrtoint %"class.blink::RTCRtpTransceiverPlatform"* %2 to i64
  %7 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink17RTCRtpTransceiverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::RTCPeerConnection"* %1, %"class.blink::RTCPeerConnection"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 2
  %11 = bitcast %"class.std::__1::unique_ptr.877"* %10 to i64*
  store i64 %6, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::RTCRtpSender"* %3, %"class.blink::RTCRtpSender"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::RTCRtpReceiver"* %4, %"class.blink::RTCRtpReceiver"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 6, i32 0, i32 0
  %15 = bitcast %"class.WTF::StringImpl"** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 17, i1 false)
  tail call void @_ZN5blink17RTCRtpTransceiver13UpdateMembersEv(%"class.blink::RTCRtpTransceiver"* %0)
  %16 = load %"class.blink::RTCRtpSender"*, %"class.blink::RTCRtpSender"** %12, align 8
  tail call void @_ZN5blink12RTCRtpSender15set_transceiverEPNS_17RTCRtpTransceiverE(%"class.blink::RTCRtpSender"* %16, %"class.blink::RTCRtpTransceiver"* %0) #14
  %17 = load %"class.blink::RTCRtpReceiver"*, %"class.blink::RTCRtpReceiver"** %13, align 8
  tail call void @_ZN5blink14RTCRtpReceiver15set_transceiverEPNS_17RTCRtpTransceiverE(%"class.blink::RTCRtpReceiver"* %17, %"class.blink::RTCRtpTransceiver"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17RTCRtpTransceiver13UpdateMembersEv(%"class.blink::RTCRtpTransceiver"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.absl::optional.331"*
  %5 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.blink::RTCRtpTransceiverPlatform"*, %"class.blink::RTCRtpTransceiverPlatform"** %5, align 8
  %7 = bitcast %"class.blink::RTCRtpTransceiverPlatform"* %6 to i1 (%"class.blink::RTCRtpTransceiverPlatform"*)***
  %8 = load i1 (%"class.blink::RTCRtpTransceiverPlatform"*)**, i1 (%"class.blink::RTCRtpTransceiverPlatform"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::RTCRtpTransceiverPlatform"*)*, i1 (%"class.blink::RTCRtpTransceiverPlatform"*)** %8, i64 8
  %10 = load i1 (%"class.blink::RTCRtpTransceiverPlatform"*)*, i1 (%"class.blink::RTCRtpTransceiverPlatform"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::RTCRtpTransceiverPlatform"* %6) #14
  %12 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 5
  %13 = zext i1 %11 to i8
  store i8 %13, i8* %12, align 8
  %14 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #14
  %15 = load %"class.blink::RTCRtpTransceiverPlatform"*, %"class.blink::RTCRtpTransceiverPlatform"** %5, align 8
  %16 = bitcast %"class.blink::RTCRtpTransceiverPlatform"* %15 to i32 (%"class.blink::RTCRtpTransceiverPlatform"*)***
  %17 = load i32 (%"class.blink::RTCRtpTransceiverPlatform"*)**, i32 (%"class.blink::RTCRtpTransceiverPlatform"*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%"class.blink::RTCRtpTransceiverPlatform"*)*, i32 (%"class.blink::RTCRtpTransceiverPlatform"*)** %17, i64 9
  %19 = load i32 (%"class.blink::RTCRtpTransceiverPlatform"*)*, i32 (%"class.blink::RTCRtpTransceiverPlatform"*)** %18, align 8
  %20 = tail call i32 %19(%"class.blink::RTCRtpTransceiverPlatform"* %15) #14
  store i32 %20, i32* %2, align 4
  %21 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_128TransceiverDirectionToStringERKN6webrtc23RtpTransceiverDirectionE(i32* nonnull dereferenceable(4) %2)
  %22 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %23 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 6
  %24 = bitcast %"class.WTF::String"* %23 to i64*
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  store i64 %22, i64* %24, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %1
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #14
  br label %41

41:                                               ; preds = %40, %37, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #14
  %42 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #14
  %43 = load %"class.blink::RTCRtpTransceiverPlatform"*, %"class.blink::RTCRtpTransceiverPlatform"** %5, align 8
  %44 = bitcast %"class.blink::RTCRtpTransceiverPlatform"* %43 to i64 (%"class.blink::RTCRtpTransceiverPlatform"*)***
  %45 = load i64 (%"class.blink::RTCRtpTransceiverPlatform"*)**, i64 (%"class.blink::RTCRtpTransceiverPlatform"*)*** %44, align 8
  %46 = getelementptr inbounds i64 (%"class.blink::RTCRtpTransceiverPlatform"*)*, i64 (%"class.blink::RTCRtpTransceiverPlatform"*)** %45, i64 11
  %47 = load i64 (%"class.blink::RTCRtpTransceiverPlatform"*)*, i64 (%"class.blink::RTCRtpTransceiverPlatform"*)** %46, align 8
  %48 = tail call i64 %47(%"class.blink::RTCRtpTransceiverPlatform"* %43) #14
  store i64 %48, i64* %3, align 8
  %49 = trunc i64 %48 to i8
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.absl::optional.331", %"class.absl::optional.331"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %53 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_128TransceiverDirectionToStringERKN6webrtc23RtpTransceiverDirectionE(i32* dereferenceable(4) %52) #14
  %54 = ptrtoint %"class.WTF::StringImpl"* %53 to i64
  br label %55

55:                                               ; preds = %41, %51
  %56 = phi i64 [ %54, %51 ], [ 0, %41 ]
  %57 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 7
  %58 = bitcast %"class.WTF::String"* %57 to i64*
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %57, i64 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  store i64 %56, i64* %58, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #14
  br label %75

75:                                               ; preds = %74, %71, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #14
  %76 = load %"class.blink::RTCRtpTransceiverPlatform"*, %"class.blink::RTCRtpTransceiverPlatform"** %5, align 8
  %77 = bitcast %"class.blink::RTCRtpTransceiverPlatform"* %76 to i64 (%"class.blink::RTCRtpTransceiverPlatform"*)***
  %78 = load i64 (%"class.blink::RTCRtpTransceiverPlatform"*)**, i64 (%"class.blink::RTCRtpTransceiverPlatform"*)*** %77, align 8
  %79 = getelementptr inbounds i64 (%"class.blink::RTCRtpTransceiverPlatform"*)*, i64 (%"class.blink::RTCRtpTransceiverPlatform"*)** %78, i64 12
  %80 = load i64 (%"class.blink::RTCRtpTransceiverPlatform"*)*, i64 (%"class.blink::RTCRtpTransceiverPlatform"*)** %79, align 8
  %81 = tail call i64 %80(%"class.blink::RTCRtpTransceiverPlatform"* %76) #14
  %82 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 8
  %83 = bitcast %"class.absl::optional.331"* %82 to i64*
  store i64 %81, i64* %83, align 8
  ret void
}

declare void @_ZN5blink12RTCRtpSender15set_transceiverEPNS_17RTCRtpTransceiverE(%"class.blink::RTCRtpSender"*, %"class.blink::RTCRtpTransceiver"*) local_unnamed_addr #2

declare void @_ZN5blink14RTCRtpReceiver15set_transceiverEPNS_17RTCRtpTransceiverE(%"class.blink::RTCRtpReceiver"*, %"class.blink::RTCRtpTransceiver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink17RTCRtpTransceiver3midEv(%"class.blink::RTCRtpTransceiver"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.blink::RTCRtpTransceiverPlatform"*, %"class.blink::RTCRtpTransceiverPlatform"** %2, align 8
  %4 = bitcast %"class.blink::RTCRtpTransceiverPlatform"* %3 to %"class.WTF::StringImpl"* (%"class.blink::RTCRtpTransceiverPlatform"*)***
  %5 = load %"class.WTF::StringImpl"* (%"class.blink::RTCRtpTransceiverPlatform"*)**, %"class.WTF::StringImpl"* (%"class.blink::RTCRtpTransceiverPlatform"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::RTCRtpTransceiverPlatform"*)*, %"class.WTF::StringImpl"* (%"class.blink::RTCRtpTransceiverPlatform"*)** %5, i64 4
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::RTCRtpTransceiverPlatform"*)*, %"class.WTF::StringImpl"* (%"class.blink::RTCRtpTransceiverPlatform"*)** %6, align 8
  %8 = tail call %"class.WTF::StringImpl"* %7(%"class.blink::RTCRtpTransceiverPlatform"* %3) #14
  ret %"class.WTF::StringImpl"* %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::RTCRtpSender"* @_ZNK5blink17RTCRtpTransceiver6senderEv(%"class.blink::RTCRtpTransceiver"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::RTCRtpSender"*, %"class.blink::RTCRtpSender"** %2, align 8
  ret %"class.blink::RTCRtpSender"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::RTCRtpReceiver"* @_ZNK5blink17RTCRtpTransceiver8receiverEv(%"class.blink::RTCRtpTransceiver"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::RTCRtpReceiver"*, %"class.blink::RTCRtpReceiver"** %2, align 8
  ret %"class.blink::RTCRtpReceiver"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17RTCRtpTransceiver7stoppedEv(%"class.blink::RTCRtpTransceiver"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink17RTCRtpTransceiver9directionEv(%"class.blink::RTCRtpTransceiver"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #14
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %10
  tail call void @llvm.trap() #14
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17RTCRtpTransceiver12setDirectionEN3WTF6StringERNS_14ExceptionStateE(%"class.blink::RTCRtpTransceiver"* nocapture, %"class.WTF::StringImpl"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.absl::optional.331"*
  %7 = alloca %"class.webrtc::RTCError", align 8
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %8, align 8
  %9 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  store i64 -6148914691236517376, i64* %5, align 8
  %10 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_130TransceiverDirectionFromStringERKN3WTF6StringEPN4absl8optionalIN6webrtc23RtpTransceiverDirectionEEE(%"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.absl::optional.331"* nonnull %6)
  %11 = load i8, i8* %9, align 8
  %12 = icmp ne i8 %11, 0
  %13 = and i1 %10, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0)) #14
  br label %52

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::RTCPeerConnection"*, %"class.blink::RTCPeerConnection"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::RTCPeerConnection", %"class.blink::RTCPeerConnection"* %17, i64 0, i32 29
  %19 = load i8, i8* %18, align 1, !range !3
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %15
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0)) #14
  br label %52

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 5
  %24 = load i8, i8* %23, align 8, !range !3
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0)) #14
  br label %52

27:                                               ; preds = %22
  %28 = bitcast %"class.webrtc::RTCError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %28) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 40, i1 false)
  %29 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %30 = load %"class.blink::RTCRtpTransceiverPlatform"*, %"class.blink::RTCRtpTransceiverPlatform"** %29, align 8
  %31 = getelementptr inbounds %"class.absl::optional.331", %"class.absl::optional.331"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = bitcast %"class.blink::RTCRtpTransceiverPlatform"* %30 to void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*, i32)***
  %34 = load void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*, i32)**, void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*, i32)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*, i32)*, void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*, i32)** %34, i64 10
  %36 = load void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*, i32)*, void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*, i32)** %35, align 8
  call void %36(%"class.webrtc::RTCError"* nonnull sret %7, %"class.blink::RTCRtpTransceiverPlatform"* %30, i32 %32) #14
  %37 = getelementptr inbounds %"class.webrtc::RTCError", %"class.webrtc::RTCError"* %7, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %27
  call void @_ZN5blink26ThrowExceptionFromRTCErrorERKN6webrtc8RTCErrorERNS_14ExceptionStateE(%"class.webrtc::RTCError"* nonnull dereferenceable(40) %7, %"class.blink::ExceptionState"* dereferenceable(72) %2) #14
  br label %42

41:                                               ; preds = %27
  call void @_ZN5blink17RTCRtpTransceiver13UpdateMembersEv(%"class.blink::RTCRtpTransceiver"* %0)
  br label %42

42:                                               ; preds = %41, %40
  %43 = getelementptr inbounds %"class.webrtc::RTCError", %"class.webrtc::RTCError"* %7, i64 0, i32 1
  %44 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #15
  br label %51

51:                                               ; preds = %42, %48
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28) #14
  br label %52

52:                                               ; preds = %51, %26, %21, %14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  %53 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #14
  br label %67

67:                                               ; preds = %52, %63, %66
  ret void
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #2

declare void @_ZN5blink26ThrowExceptionFromRTCErrorERKN6webrtc8RTCErrorERNS_14ExceptionStateE(%"class.webrtc::RTCError"* dereferenceable(40), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink17RTCRtpTransceiver16currentDirectionEv(%"class.blink::RTCRtpTransceiver"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #14
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %10
  tail call void @llvm.trap() #14
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_128TransceiverDirectionToStringERKN6webrtc23RtpTransceiverDirectionE(i32* nocapture readonly dereferenceable(4)) unnamed_addr #0 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = load i32, i32* %0, align 4
  switch i32 %3, label %9 [
    i32 0, label %4
    i32 1, label %5
    i32 2, label %6
    i32 3, label %7
    i32 4, label %8
  ]

4:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i64 8) #14
  br label %11

5:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i64 8) #14
  br label %11

6:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), i64 8) #14
  br label %11

7:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i64 8) #14
  br label %11

8:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i64 7) #14
  br label %11

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %10, align 8
  br label %11

11:                                               ; preds = %9, %8, %7, %6, %5, %4
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17RTCRtpTransceiver22OnPeerConnectionClosedEv(%"class.blink::RTCRtpTransceiver"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::RTCRtpReceiver"*, %"class.blink::RTCRtpReceiver"** %2, align 8
  %4 = tail call %"class.blink::MediaStreamTrack"* @_ZNK5blink14RTCRtpReceiver5trackEv(%"class.blink::RTCRtpReceiver"* %3) #14
  %5 = getelementptr inbounds %"class.blink::MediaStreamTrack", %"class.blink::MediaStreamTrack"* %4, i64 0, i32 8, i32 0, i32 0
  %6 = load %"class.blink::MediaStreamComponent"*, %"class.blink::MediaStreamComponent"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::MediaStreamComponent", %"class.blink::MediaStreamComponent"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::MediaStreamSource"*, %"class.blink::MediaStreamSource"** %7, align 8
  tail call void @_ZN5blink17MediaStreamSource13SetReadyStateENS0_10ReadyStateE(%"class.blink::MediaStreamSource"* %8, i32 1) #14
  %9 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 5
  store i8 1, i8* %9, align 8
  %10 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 7
  %11 = bitcast %"class.WTF::String"* %10 to i64*
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  store i64 0, i64* %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #14
  br label %28

28:                                               ; preds = %27, %24, %1
  ret void
}

declare %"class.blink::MediaStreamTrack"* @_ZNK5blink14RTCRtpReceiver5trackEv(%"class.blink::RTCRtpReceiver"*) local_unnamed_addr #2

declare void @_ZN5blink17MediaStreamSource13SetReadyStateENS0_10ReadyStateE(%"class.blink::MediaStreamSource"*, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::RTCRtpTransceiverPlatform"* @_ZNK5blink17RTCRtpTransceiver20platform_transceiverEv(%"class.blink::RTCRtpTransceiver"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.blink::RTCRtpTransceiverPlatform"*, %"class.blink::RTCRtpTransceiverPlatform"** %2, align 8
  ret %"class.blink::RTCRtpTransceiverPlatform"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink17RTCRtpTransceiver15fired_directionEv(%"class.blink::RTCRtpTransceiver"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 8
  %3 = bitcast %"class.absl::optional.331"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17RTCRtpTransceiver16DirectionHasSendEv(%"class.blink::RTCRtpTransceiver"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.blink::RTCRtpTransceiverPlatform"*, %"class.blink::RTCRtpTransceiverPlatform"** %2, align 8
  %4 = bitcast %"class.blink::RTCRtpTransceiverPlatform"* %3 to i32 (%"class.blink::RTCRtpTransceiverPlatform"*)***
  %5 = load i32 (%"class.blink::RTCRtpTransceiverPlatform"*)**, i32 (%"class.blink::RTCRtpTransceiverPlatform"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::RTCRtpTransceiverPlatform"*)*, i32 (%"class.blink::RTCRtpTransceiverPlatform"*)** %5, i64 9
  %7 = load i32 (%"class.blink::RTCRtpTransceiverPlatform"*)*, i32 (%"class.blink::RTCRtpTransceiverPlatform"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::RTCRtpTransceiverPlatform"* %3) #14
  %9 = icmp ult i32 %8, 2
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17RTCRtpTransceiver16DirectionHasRecvEv(%"class.blink::RTCRtpTransceiver"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.blink::RTCRtpTransceiverPlatform"*, %"class.blink::RTCRtpTransceiverPlatform"** %2, align 8
  %4 = bitcast %"class.blink::RTCRtpTransceiverPlatform"* %3 to i32 (%"class.blink::RTCRtpTransceiverPlatform"*)***
  %5 = load i32 (%"class.blink::RTCRtpTransceiverPlatform"*)**, i32 (%"class.blink::RTCRtpTransceiverPlatform"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::RTCRtpTransceiverPlatform"*)*, i32 (%"class.blink::RTCRtpTransceiverPlatform"*)** %5, i64 9
  %7 = load i32 (%"class.blink::RTCRtpTransceiverPlatform"*)*, i32 (%"class.blink::RTCRtpTransceiverPlatform"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::RTCRtpTransceiverPlatform"* %3) #14
  %9 = and i32 %8, -3
  %10 = icmp eq i32 %9, 0
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17RTCRtpTransceiver21FiredDirectionHasRecvEv(%"class.blink::RTCRtpTransceiver"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, -3
  %9 = icmp eq i32 %8, 0
  ret i1 %9

10:                                               ; preds = %1
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17RTCRtpTransceiver4stopERNS_14ExceptionStateE(%"class.blink::RTCRtpTransceiver"* nocapture, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.webrtc::RTCError", align 8
  %4 = bitcast %"class.webrtc::RTCError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 40, i1 false)
  %5 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.blink::RTCRtpTransceiverPlatform"*, %"class.blink::RTCRtpTransceiverPlatform"** %5, align 8
  %7 = bitcast %"class.blink::RTCRtpTransceiverPlatform"* %6 to void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*)***
  %8 = load void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*)**, void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*)*, void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*)** %8, i64 13
  %10 = load void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*)*, void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*)** %9, align 8
  call void %10(%"class.webrtc::RTCError"* nonnull sret %3, %"class.blink::RTCRtpTransceiverPlatform"* %6) #14
  %11 = getelementptr inbounds %"class.webrtc::RTCError", %"class.webrtc::RTCError"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %2
  call void @_ZN5blink26ThrowExceptionFromRTCErrorERKN6webrtc8RTCErrorERNS_14ExceptionStateE(%"class.webrtc::RTCError"* nonnull dereferenceable(40) %3, %"class.blink::ExceptionState"* dereferenceable(72) %1) #14
  br label %17

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 5
  store i8 1, i8* %16, align 8
  call void @_ZN5blink17RTCRtpTransceiver13UpdateMembersEv(%"class.blink::RTCRtpTransceiver"* %0)
  br label %17

17:                                               ; preds = %15, %14
  %18 = getelementptr inbounds %"class.webrtc::RTCError", %"class.webrtc::RTCError"* %3, i64 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #15
  br label %26

26:                                               ; preds = %17, %23
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17RTCRtpTransceiver19setCodecPreferencesERKNS_10HeapVectorINS_6MemberINS_21RTCRtpCodecCapabilityEEELj0EEERNS_14ExceptionStateE(%"class.blink::RTCRtpTransceiver"* nocapture readonly, %"class.blink::HeapVector.951"* nocapture readonly dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::Vector.960", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::Vector.227", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.webrtc::RTCError", align 8
  %18 = alloca %"class.WTF::Vector.960", align 8
  %19 = bitcast %"class.WTF::Vector.960"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #14
  %20 = getelementptr inbounds %"class.WTF::Vector.960", %"class.WTF::Vector.960"* %9, i64 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.WTF::Vector.960", %"class.WTF::Vector.960"* %9, i64 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::Vector.960", %"class.WTF::Vector.960"* %9, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 16, i1 false) #14
  %23 = getelementptr inbounds %"class.blink::HeapVector.951", %"class.blink::HeapVector.951"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %460, label %26, !prof !2

26:                                               ; preds = %3
  %27 = zext i32 %24 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN6webrtc18RtpCodecCapabilityEEEmm(i64 %27) #14
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN6webrtc18RtpCodecCapabilityEEEPKcv, i64 0, i64 0)) #14
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.960"* %9 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 160
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %21, align 8
  %34 = load i32, i32* %23, align 4
  %35 = getelementptr inbounds %"class.blink::HeapVector.951", %"class.blink::HeapVector.951"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Member.957"*, %"class.blink::Member.957"** %35, align 8
  %37 = zext i32 %34 to i64
  %38 = getelementptr inbounds %"class.blink::Member.957", %"class.blink::Member.957"* %36, i64 %37
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %460, label %40

40:                                               ; preds = %26
  %41 = bitcast %"class.WTF::Vector.960"* %9 to i64*
  %42 = bitcast %"class.WTF::StringView"* %7 to i8*
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %45 = bitcast i8** %44 to %"class.WTF::StringImpl"**
  %46 = bitcast %"class.WTF::StringView"* %7 to i64*
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %48 = bitcast %"class.WTF::StringView"* %8 to i8*
  %49 = bitcast %"class.WTF::StringView"* %8 to i64*
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  %52 = bitcast %"class.WTF::StringView"* %5 to i8*
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %55 = bitcast i8** %54 to %"class.WTF::StringImpl"**
  %56 = bitcast %"class.WTF::StringView"* %5 to i64*
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %58 = bitcast %"class.WTF::StringView"* %6 to i8*
  %59 = bitcast %"class.WTF::StringView"* %6 to i64*
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %62 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %63 = bitcast %"class.WTF::String"* %11 to i8*
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %65 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = bitcast %"class.WTF::Vector.227"* %12 to i8*
  %68 = getelementptr inbounds %"class.WTF::Vector.227", %"class.WTF::Vector.227"* %12, i64 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.WTF::Vector.227", %"class.WTF::Vector.227"* %12, i64 0, i32 0, i32 0, i32 2
  %70 = bitcast %"class.WTF::String"* %13 to i8*
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %72 = bitcast %"class.WTF::String"* %14 to i8*
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %74 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %75 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %76 = bitcast %"class.std::__1::__tree_end_node"** %4 to i8*
  %77 = bitcast %"class.std::__1::__tree_end_node"** %4 to i64*
  %78 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = bitcast %"class.WTF::Vector.227"* %12 to i8**
  br label %90

85:                                               ; preds = %455
  %86 = icmp eq %"class.blink::Member.957"* %457, %38
  br i1 %86, label %458, label %87

87:                                               ; preds = %85
  %88 = load i32, i32* %22, align 4
  %89 = load i32, i32* %21, align 8
  br label %90

90:                                               ; preds = %87, %40
  %91 = phi i32 [ %33, %40 ], [ %89, %87 ]
  %92 = phi i32 [ 0, %40 ], [ %88, %87 ]
  %93 = phi %"class.blink::Member.957"* [ %36, %40 ], [ %457, %87 ]
  %94 = add i32 %92, 1
  %95 = icmp ult i32 %91, %94
  br i1 %95, label %96, label %116

96:                                               ; preds = %90
  %97 = lshr i32 %91, 2
  %98 = add nuw i32 %91, 1
  %99 = add i32 %98, %97
  %100 = icmp ugt i32 %99, 4
  %101 = select i1 %100, i32 %99, i32 4
  %102 = icmp ugt i32 %101, %94
  %103 = select i1 %102, i32 %101, i32 %94
  %104 = icmp ult i32 %91, %103
  br i1 %104, label %105, label %116, !prof !4

105:                                              ; preds = %96
  %106 = load %"struct.webrtc::RtpCodecCapability"*, %"struct.webrtc::RtpCodecCapability"** %20, align 8
  %107 = icmp eq %"struct.webrtc::RtpCodecCapability"* %106, null
  br i1 %107, label %108, label %115

108:                                              ; preds = %105
  %109 = zext i32 %103 to i64
  %110 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN6webrtc18RtpCodecCapabilityEEEmm(i64 %109) #14
  %111 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %110, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN6webrtc18RtpCodecCapabilityEEEPKcv, i64 0, i64 0)) #14
  %112 = ptrtoint i8* %111 to i64
  store atomic i64 %112, i64* %41 monotonic, align 8
  %113 = udiv i64 %110, 160
  %114 = trunc i64 %113 to i32
  store i32 %114, i32* %21, align 8
  br label %116

115:                                              ; preds = %105
  call void @_ZN3WTF6VectorIN6webrtc18RtpCodecCapabilityELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.960"* nonnull %9, i32 %103) #14
  br label %116

116:                                              ; preds = %115, %108, %96, %90
  %117 = load %"struct.webrtc::RtpCodecCapability"*, %"struct.webrtc::RtpCodecCapability"** %20, align 8
  %118 = load i32, i32* %22, align 4
  %119 = zext i32 %94 to i64
  %120 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %117, i64 %119
  %121 = icmp eq i32 %118, %94
  br i1 %121, label %129, label %122

122:                                              ; preds = %116
  %123 = zext i32 %118 to i64
  %124 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %117, i64 %123
  br label %125

125:                                              ; preds = %125, %122
  %126 = phi %"struct.webrtc::RtpCodecCapability"* [ %127, %125 ], [ %124, %122 ]
  call void @_ZN6webrtc18RtpCodecCapabilityC1Ev(%"struct.webrtc::RtpCodecCapability"* %126) #14
  %127 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %126, i64 1
  %128 = icmp eq %"struct.webrtc::RtpCodecCapability"* %127, %120
  br i1 %128, label %129, label %125

129:                                              ; preds = %125, %116
  store i32 %94, i32* %22, align 4
  %130 = call dereferenceable(160) %"struct.webrtc::RtpCodecCapability"* @_ZN3WTF6VectorIN6webrtc18RtpCodecCapabilityELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.960"* nonnull %9, i32 %92) #14
  %131 = load i32, i32* %22, align 4
  %132 = add i32 %131, -1
  %133 = call dereferenceable(160) %"struct.webrtc::RtpCodecCapability"* @_ZN3WTF6VectorIN6webrtc18RtpCodecCapabilityELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.960"* nonnull %9, i32 %132) #14
  %134 = getelementptr inbounds %"class.blink::Member.957", %"class.blink::Member.957"* %93, i64 0, i32 0, i32 0
  %135 = load %"class.blink::RTCRtpCodecCapability"*, %"class.blink::RTCRtpCodecCapability"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::RTCRtpCodecCapability", %"class.blink::RTCRtpCodecCapability"* %135, i64 0, i32 6
  %137 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %136, i64 0, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %177, label %140

140:                                              ; preds = %129
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 1
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 1
  br i1 %144, label %158, label %146

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %177, label %150

150:                                              ; preds = %146
  %151 = bitcast %"class.WTF::StringImpl"* %145 to i8*
  %152 = zext i32 %148 to i64
  %153 = call i8* @memchr(i8* %151, i32 47, i64 %152) #16
  %154 = icmp eq i8* %153, null
  %155 = ptrtoint i8* %153 to i64
  %156 = ptrtoint %"class.WTF::StringImpl"* %145 to i64
  %157 = sub i64 %155, %156
  br i1 %154, label %177, label %173

158:                                              ; preds = %140
  %159 = bitcast %"class.WTF::StringImpl"* %145 to i16*
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 1
  %161 = load i32, i32* %160, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %177, label %163

163:                                              ; preds = %158
  %164 = zext i32 %161 to i64
  br label %165

165:                                              ; preds = %163, %170
  %166 = phi i64 [ %171, %170 ], [ 0, %163 ]
  %167 = getelementptr inbounds i16, i16* %159, i64 %166
  %168 = load i16, i16* %167, align 2
  %169 = icmp eq i16 %168, 47
  br i1 %169, label %173, label %170

170:                                              ; preds = %165
  %171 = add nuw nsw i64 %166, 1
  %172 = icmp eq i64 %171, %164
  br i1 %172, label %177, label %165

173:                                              ; preds = %165, %150
  %174 = phi i64 [ %157, %150 ], [ %166, %165 ]
  %175 = trunc i64 %174 to i32
  %176 = icmp eq i32 %175, -1
  br i1 %176, label %177, label %178

177:                                              ; preds = %158, %146, %173, %129, %150, %170
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0)) #14
  br label %530

178:                                              ; preds = %173
  %179 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %136, i32 0, i32 %175) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #14
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %181, label %183

181:                                              ; preds = %178
  store i8* null, i8** %44, align 8
  %182 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %182, i64* %46, align 8
  br label %188

183:                                              ; preds = %178
  store %"class.WTF::StringImpl"* %179, %"class.WTF::StringImpl"** %43, align 8
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 1
  %185 = load i32, i32* %184, align 4
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 1
  store %"class.WTF::StringImpl"* %186, %"class.WTF::StringImpl"** %45, align 8
  %187 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %188

188:                                              ; preds = %183, %181
  %189 = phi i64 [ %187, %183 ], [ %182, %181 ]
  %190 = phi i32 [ %185, %183 ], [ 0, %181 ]
  store i32 %190, i32* %47, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #14
  store i64 %189, i64* %49, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i8** %50, align 8
  store i32 5, i32* %51, align 8
  %191 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #14
  br i1 %191, label %205, label %192

192:                                              ; preds = %188
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #14
  br i1 %180, label %193, label %195

193:                                              ; preds = %192
  store i8* null, i8** %54, align 8
  %194 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %194, i64* %56, align 8
  br label %200

195:                                              ; preds = %192
  store %"class.WTF::StringImpl"* %179, %"class.WTF::StringImpl"** %53, align 8
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 1
  %197 = load i32, i32* %196, align 4
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 1
  store %"class.WTF::StringImpl"* %198, %"class.WTF::StringImpl"** %55, align 8
  %199 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %200

200:                                              ; preds = %195, %193
  %201 = phi i64 [ %199, %195 ], [ %194, %193 ]
  %202 = phi i32 [ %197, %195 ], [ 0, %193 ]
  store i32 %202, i32* %57, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #14
  store i64 %201, i64* %59, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8** %60, align 8
  store i32 5, i32* %61, align 8
  %203 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #14
  br i1 %203, label %205, label %204

204:                                              ; preds = %200
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0)) #14
  br label %440

205:                                              ; preds = %200, %188
  %206 = phi i32 [ 1, %188 ], [ 0, %200 ]
  %207 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %133, i64 0, i32 1
  store i32 %206, i32* %207, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #14
  %208 = load %"class.blink::RTCRtpCodecCapability"*, %"class.blink::RTCRtpCodecCapability"** %134, align 8
  %209 = getelementptr inbounds %"class.blink::RTCRtpCodecCapability", %"class.blink::RTCRtpCodecCapability"* %208, i64 0, i32 6
  %210 = add nuw i32 %175, 1
  %211 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %209, i32 %210, i32 -1) #14
  store %"class.WTF::StringImpl"* %211, %"class.WTF::StringImpl"** %64, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %10, %"class.WTF::String"* nonnull %11) #14
  %212 = bitcast %"struct.webrtc::RtpCodecCapability"* %133 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %213 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %212, i64 0, i32 1, i32 0
  %214 = load i8, i8* %213, align 1
  %215 = icmp slt i8 %214, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %205
  %217 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load i8*, i8** %217, align 8
  call void @_ZdlPv(i8* %218) #15
  br label %219

219:                                              ; preds = %216, %205
  %220 = bitcast %"struct.webrtc::RtpCodecCapability"* %133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %220, i8* nonnull align 8 %62, i64 24, i1 false) #14
  store i8 0, i8* %66, align 1
  store i8 0, i8* %62, align 8
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #14
  br label %236

236:                                              ; preds = %219, %232, %235
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #14
  %237 = load %"class.blink::RTCRtpCodecCapability"*, %"class.blink::RTCRtpCodecCapability"** %134, align 8
  %238 = getelementptr inbounds %"class.blink::RTCRtpCodecCapability", %"class.blink::RTCRtpCodecCapability"* %237, i64 0, i32 5
  %239 = load i32, i32* %238, align 8
  %240 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %241 = load i8, i8* %240, align 4, !range !3
  %242 = icmp eq i8 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %236
  store i8 1, i8* %240, align 4
  br label %244

244:                                              ; preds = %236, %243
  %245 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %239, i32* %245, align 4
  %246 = load %"class.blink::RTCRtpCodecCapability"*, %"class.blink::RTCRtpCodecCapability"** %134, align 8
  %247 = getelementptr inbounds %"class.blink::RTCRtpCodecCapability", %"class.blink::RTCRtpCodecCapability"* %246, i64 0, i32 1
  %248 = load i8, i8* %247, align 8, !range !3
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %261, label %250

250:                                              ; preds = %244
  %251 = getelementptr inbounds %"class.blink::RTCRtpCodecCapability", %"class.blink::RTCRtpCodecCapability"* %246, i64 0, i32 4
  %252 = load i16, i16* %251, align 4
  %253 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %133, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %254 = load i8, i8* %253, align 4, !range !3
  %255 = icmp eq i8 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %250
  store i8 1, i8* %253, align 4
  br label %257

257:                                              ; preds = %250, %256
  %258 = zext i16 %252 to i32
  %259 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %133, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %258, i32* %259, align 4
  %260 = load %"class.blink::RTCRtpCodecCapability"*, %"class.blink::RTCRtpCodecCapability"** %134, align 8
  br label %261

261:                                              ; preds = %244, %257
  %262 = phi %"class.blink::RTCRtpCodecCapability"* [ %246, %244 ], [ %260, %257 ]
  %263 = getelementptr inbounds %"class.blink::RTCRtpCodecCapability", %"class.blink::RTCRtpCodecCapability"* %262, i64 0, i32 8, i32 0, i32 0
  %264 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %263, align 8
  %265 = icmp eq %"class.WTF::StringImpl"* %264, null
  br i1 %265, label %439, label %266

266:                                              ; preds = %261
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 0, i64 16, i1 false) #14
  %267 = load %"class.blink::RTCRtpCodecCapability"*, %"class.blink::RTCRtpCodecCapability"** %134, align 8
  %268 = getelementptr inbounds %"class.blink::RTCRtpCodecCapability", %"class.blink::RTCRtpCodecCapability"* %267, i64 0, i32 8
  call void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* %268, i16 zeroext 59, i1 zeroext false, %"class.WTF::Vector.227"* nonnull dereferenceable(16) %12) #14
  %269 = load %"class.WTF::String"*, %"class.WTF::String"** %68, align 8
  %270 = load i32, i32* %69, align 4
  %271 = zext i32 %270 to i64
  %272 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %269, i64 %271
  %273 = icmp eq i32 %270, 0
  br i1 %273, label %401, label %274

274:                                              ; preds = %266
  %275 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %133, i64 0, i32 9
  %276 = getelementptr inbounds %"class.std::__1::map.975", %"class.std::__1::map.975"* %275, i64 0, i32 0
  %277 = getelementptr inbounds %"class.std::__1::map.975", %"class.std::__1::map.975"* %275, i64 0, i32 0, i32 0
  %278 = bitcast %"class.std::__1::map.975"* %275 to i64*
  %279 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %133, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %280 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %133, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  br label %281

281:                                              ; preds = %274, %394
  %282 = phi %"class.WTF::String"* [ %269, %274 ], [ %395, %394 ]
  %283 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %282, i64 0, i32 0, i32 0
  %284 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %283, align 8
  %285 = icmp eq %"class.WTF::StringImpl"* %284, null
  br i1 %285, label %397, label %286

286:                                              ; preds = %281
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = load atomic i32, i32* %287 monotonic, align 4
  %289 = and i32 %288, 1
  %290 = icmp eq i32 %289, 0
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 1
  br i1 %290, label %304, label %292

292:                                              ; preds = %286
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 1
  %294 = load i32, i32* %293, align 4
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %397, label %296

296:                                              ; preds = %292
  %297 = bitcast %"class.WTF::StringImpl"* %291 to i8*
  %298 = zext i32 %294 to i64
  %299 = call i8* @memchr(i8* %297, i32 61, i64 %298) #16
  %300 = icmp eq i8* %299, null
  %301 = ptrtoint i8* %299 to i64
  %302 = ptrtoint %"class.WTF::StringImpl"* %291 to i64
  %303 = sub i64 %301, %302
  br i1 %300, label %397, label %319

304:                                              ; preds = %286
  %305 = bitcast %"class.WTF::StringImpl"* %291 to i16*
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 1
  %307 = load i32, i32* %306, align 4
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %397, label %309

309:                                              ; preds = %304
  %310 = zext i32 %307 to i64
  br label %311

311:                                              ; preds = %309, %316
  %312 = phi i64 [ %317, %316 ], [ 0, %309 ]
  %313 = getelementptr inbounds i16, i16* %305, i64 %312
  %314 = load i16, i16* %313, align 2
  %315 = icmp eq i16 %314, 61
  br i1 %315, label %319, label %316

316:                                              ; preds = %311
  %317 = add nuw nsw i64 %312, 1
  %318 = icmp eq i64 %317, %310
  br i1 %318, label %397, label %311

319:                                              ; preds = %311, %296
  %320 = phi i64 [ %303, %296 ], [ %312, %311 ]
  %321 = trunc i64 %320 to i32
  %322 = icmp eq i32 %321, -1
  br i1 %322, label %397, label %323

323:                                              ; preds = %319
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #14
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %71, align 8
  %324 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %282, i32 0, i32 %321) #14
  store %"class.WTF::StringImpl"* %324, %"class.WTF::StringImpl"** %71, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #14
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %73, align 8
  %325 = add nuw i32 %321, 1
  %326 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %282, i32 %325, i32 -1) #14
  store %"class.WTF::StringImpl"* %326, %"class.WTF::StringImpl"** %73, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #14
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %15, %"class.WTF::String"* nonnull %13) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #14
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %16, %"class.WTF::String"* nonnull %14) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #14
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %4, align 8
  %327 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_(%"class.std::__1::__tree.976"* %276, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %15) #14
  %328 = bitcast %"class.std::__1::__tree_node_base"** %327 to %"class.std::__1::__tree_node"**
  %329 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %328, align 8
  %330 = icmp eq %"class.std::__1::__tree_node"* %329, null
  br i1 %330, label %331, label %352

331:                                              ; preds = %323
  %332 = call i8* @_Znwm(i64 80) #15, !noalias !5
  %333 = getelementptr inbounds i8, i8* %332, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %333, i8* nonnull align 8 %74, i64 24, i1 false) #14, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 24, i1 false) #14, !noalias !5
  %334 = getelementptr inbounds i8, i8* %332, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %334, i8* nonnull align 8 %75, i64 24, i1 false) #14, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 24, i1 false) #14, !noalias !5
  %335 = load i64, i64* %77, align 8
  %336 = bitcast i8* %332 to %"class.std::__1::__tree_node_base"*
  %337 = getelementptr inbounds i8, i8* %332, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %332, i8 0, i64 16, i1 false) #14
  %338 = bitcast i8* %337 to i64*
  store i64 %335, i64* %338, align 8
  %339 = bitcast %"class.std::__1::__tree_node_base"** %327 to i8**
  store i8* %332, i8** %339, align 8
  %340 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %277, align 8
  %341 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %340, i64 0, i32 0
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = icmp eq %"class.std::__1::__tree_node_base"* %342, null
  br i1 %343, label %347, label %344

344:                                              ; preds = %331
  %345 = ptrtoint %"class.std::__1::__tree_node_base"* %342 to i64
  store i64 %345, i64* %278, align 8
  %346 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %327, align 8
  br label %347

347:                                              ; preds = %344, %331
  %348 = phi %"class.std::__1::__tree_node_base"* [ %336, %331 ], [ %346, %344 ]
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %279, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"* %348) #14
  %350 = load i64, i64* %280, align 8
  %351 = add i64 %350, 1
  store i64 %351, i64* %280, align 8
  br label %352

352:                                              ; preds = %323, %347
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #14
  %353 = load i8, i8* %79, align 1
  %354 = icmp slt i8 %353, 0
  br i1 %354, label %355, label %357

355:                                              ; preds = %352
  %356 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %356) #15
  br label %357

357:                                              ; preds = %352, %355
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #14
  %358 = load i8, i8* %82, align 1
  %359 = icmp slt i8 %358, 0
  br i1 %359, label %360, label %362

360:                                              ; preds = %357
  %361 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %361) #15
  br label %362

362:                                              ; preds = %357, %360
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #14
  %363 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %364 = icmp eq %"class.WTF::StringImpl"* %363, null
  br i1 %364, label %378, label %365

365:                                              ; preds = %362
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %363, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %367 = load atomic i32, i32* %366 monotonic, align 4
  %368 = and i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %363, i64 0, i32 0
  %371 = load i32, i32* %370, align 4
  br i1 %369, label %372, label %374

372:                                              ; preds = %365
  %373 = add i32 %371, -1
  store i32 %373, i32* %370, align 4
  br label %374

374:                                              ; preds = %372, %365
  %375 = phi i32 [ %373, %372 ], [ %371, %365 ]
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %378

377:                                              ; preds = %374
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %363) #14
  br label %378

378:                                              ; preds = %362, %374, %377
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #14
  %379 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %380 = icmp eq %"class.WTF::StringImpl"* %379, null
  br i1 %380, label %394, label %381

381:                                              ; preds = %378
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %379, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %383 = load atomic i32, i32* %382 monotonic, align 4
  %384 = and i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %379, i64 0, i32 0
  %387 = load i32, i32* %386, align 4
  br i1 %385, label %388, label %390

388:                                              ; preds = %381
  %389 = add i32 %387, -1
  store i32 %389, i32* %386, align 4
  br label %390

390:                                              ; preds = %388, %381
  %391 = phi i32 [ %389, %388 ], [ %387, %381 ]
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %394

393:                                              ; preds = %390
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %379) #14
  br label %394

394:                                              ; preds = %393, %390, %378
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #14
  %395 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %282, i64 1
  %396 = icmp eq %"class.WTF::String"* %395, %272
  br i1 %396, label %398, label %281

397:                                              ; preds = %304, %292, %296, %281, %319, %316
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0)) #14
  br label %398

398:                                              ; preds = %394, %397
  %399 = phi i32 [ 1, %397 ], [ 0, %394 ]
  %400 = load %"class.WTF::String"*, %"class.WTF::String"** %68, align 8
  br label %401

401:                                              ; preds = %398, %266
  %402 = phi %"class.WTF::String"* [ %400, %398 ], [ %269, %266 ]
  %403 = phi i32 [ %399, %398 ], [ 0, %266 ]
  %404 = icmp eq %"class.WTF::String"* %402, null
  br i1 %404, label %437, label %405, !prof !4

405:                                              ; preds = %401
  %406 = bitcast %"class.WTF::String"* %402 to i8*
  %407 = load i32, i32* %69, align 4
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %435, label %409, !prof !2

409:                                              ; preds = %405
  %410 = zext i32 %407 to i64
  %411 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %402, i64 %410
  br label %412

412:                                              ; preds = %430, %409
  %413 = phi %"class.WTF::String"* [ %431, %430 ], [ %402, %409 ]
  %414 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %413, i64 0, i32 0, i32 0
  %415 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %414, align 8
  %416 = icmp eq %"class.WTF::StringImpl"* %415, null
  br i1 %416, label %430, label %417

417:                                              ; preds = %412
  %418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %415, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %419 = load atomic i32, i32* %418 monotonic, align 4
  %420 = and i32 %419, 2
  %421 = icmp eq i32 %420, 0
  %422 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %415, i64 0, i32 0
  %423 = load i32, i32* %422, align 4
  br i1 %421, label %424, label %426

424:                                              ; preds = %417
  %425 = add i32 %423, -1
  store i32 %425, i32* %422, align 4
  br label %426

426:                                              ; preds = %424, %417
  %427 = phi i32 [ %425, %424 ], [ %423, %417 ]
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %429, label %430

429:                                              ; preds = %426
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %415) #14
  br label %430

430:                                              ; preds = %429, %426, %412
  %431 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %413, i64 1
  %432 = icmp eq %"class.WTF::String"* %431, %411
  br i1 %432, label %433, label %412

433:                                              ; preds = %430
  store i32 0, i32* %69, align 4
  %434 = load i8*, i8** %84, align 8
  br label %435

435:                                              ; preds = %433, %405
  %436 = phi i8* [ %434, %433 ], [ %406, %405 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %436) #14
  store %"class.WTF::String"* null, %"class.WTF::String"** %68, align 8
  br label %437

437:                                              ; preds = %401, %435
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #14
  %438 = icmp eq i32 %403, 0
  br i1 %438, label %439, label %440

439:                                              ; preds = %261, %437
  br label %440

440:                                              ; preds = %437, %439, %204
  %441 = phi i32 [ 0, %439 ], [ %403, %437 ], [ 1, %204 ]
  br i1 %180, label %455, label %442

442:                                              ; preds = %440
  %443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %444 = load atomic i32, i32* %443 monotonic, align 4
  %445 = and i32 %444, 2
  %446 = icmp eq i32 %445, 0
  %447 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %448 = load i32, i32* %447, align 4
  br i1 %446, label %449, label %451

449:                                              ; preds = %442
  %450 = add i32 %448, -1
  store i32 %450, i32* %447, align 4
  br label %451

451:                                              ; preds = %449, %442
  %452 = phi i32 [ %450, %449 ], [ %448, %442 ]
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %454, label %455

454:                                              ; preds = %451
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #14
  br label %455

455:                                              ; preds = %454, %451, %440
  %456 = icmp eq i32 %441, 0
  %457 = getelementptr inbounds %"class.blink::Member.957", %"class.blink::Member.957"* %93, i64 1
  br i1 %456, label %85, label %530

458:                                              ; preds = %85
  %459 = load i32, i32* %21, align 8
  br label %460

460:                                              ; preds = %3, %458, %26
  %461 = phi i32 [ %459, %458 ], [ %33, %26 ], [ 0, %3 ]
  %462 = bitcast %"class.webrtc::RTCError"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %462) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %462, i8 -86, i64 40, i1 false)
  %463 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %464 = load %"class.blink::RTCRtpTransceiverPlatform"*, %"class.blink::RTCRtpTransceiverPlatform"** %463, align 8
  %465 = getelementptr inbounds %"class.WTF::Vector.960", %"class.WTF::Vector.960"* %18, i64 0, i32 0, i32 0, i32 0
  store %"struct.webrtc::RtpCodecCapability"* null, %"struct.webrtc::RtpCodecCapability"** %465, align 8
  %466 = getelementptr inbounds %"class.WTF::Vector.960", %"class.WTF::Vector.960"* %18, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %466, align 8
  %467 = icmp eq i32 %461, 0
  br i1 %467, label %477, label %468

468:                                              ; preds = %460
  %469 = zext i32 %461 to i64
  %470 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN6webrtc18RtpCodecCapabilityEEEmm(i64 %469) #14
  %471 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %470, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN6webrtc18RtpCodecCapabilityEEEPKcv, i64 0, i64 0)) #14
  %472 = ptrtoint i8* %471 to i64
  %473 = bitcast %"class.WTF::Vector.960"* %18 to i64*
  store atomic i64 %472, i64* %473 monotonic, align 8
  %474 = udiv i64 %470, 160
  %475 = trunc i64 %474 to i32
  store i32 %475, i32* %466, align 8
  %476 = bitcast i8* %471 to %"struct.webrtc::RtpCodecCapability"*
  br label %477

477:                                              ; preds = %468, %460
  %478 = phi %"struct.webrtc::RtpCodecCapability"* [ null, %460 ], [ %476, %468 ]
  %479 = load i32, i32* %22, align 4
  %480 = getelementptr inbounds %"class.WTF::Vector.960", %"class.WTF::Vector.960"* %18, i64 0, i32 0, i32 0, i32 2
  store i32 %479, i32* %480, align 4
  %481 = load %"struct.webrtc::RtpCodecCapability"*, %"struct.webrtc::RtpCodecCapability"** %20, align 8
  %482 = zext i32 %479 to i64
  %483 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %481, i64 %482
  %484 = icmp eq i32 %479, 0
  br i1 %484, label %491, label %485

485:                                              ; preds = %477, %485
  %486 = phi %"struct.webrtc::RtpCodecCapability"* [ %488, %485 ], [ %478, %477 ]
  %487 = phi %"struct.webrtc::RtpCodecCapability"* [ %489, %485 ], [ %481, %477 ]
  call void @_ZN6webrtc18RtpCodecCapabilityC2ERKS0_(%"struct.webrtc::RtpCodecCapability"* %486, %"struct.webrtc::RtpCodecCapability"* dereferenceable(160) %487) #14
  %488 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %486, i64 1
  %489 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %487, i64 1
  %490 = icmp eq %"struct.webrtc::RtpCodecCapability"* %489, %483
  br i1 %490, label %491, label %485

491:                                              ; preds = %485, %477
  %492 = bitcast %"class.blink::RTCRtpTransceiverPlatform"* %464 to void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*, %"class.WTF::Vector.960"*)***
  %493 = load void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*, %"class.WTF::Vector.960"*)**, void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*, %"class.WTF::Vector.960"*)*** %492, align 8
  %494 = getelementptr inbounds void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*, %"class.WTF::Vector.960"*)*, void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*, %"class.WTF::Vector.960"*)** %493, i64 14
  %495 = load void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*, %"class.WTF::Vector.960"*)*, void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*, %"class.WTF::Vector.960"*)** %494, align 8
  call void %495(%"class.webrtc::RTCError"* nonnull sret %17, %"class.blink::RTCRtpTransceiverPlatform"* %464, %"class.WTF::Vector.960"* nonnull %18) #14
  %496 = load %"struct.webrtc::RtpCodecCapability"*, %"struct.webrtc::RtpCodecCapability"** %465, align 8
  %497 = icmp eq %"struct.webrtc::RtpCodecCapability"* %496, null
  br i1 %497, label %514, label %498, !prof !4

498:                                              ; preds = %491
  %499 = bitcast %"struct.webrtc::RtpCodecCapability"* %496 to i8*
  %500 = load i32, i32* %480, align 4
  %501 = icmp eq i32 %500, 0
  br i1 %501, label %512, label %502, !prof !2

502:                                              ; preds = %498
  %503 = zext i32 %500 to i64
  %504 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %496, i64 %503
  br label %505

505:                                              ; preds = %505, %502
  %506 = phi %"struct.webrtc::RtpCodecCapability"* [ %507, %505 ], [ %496, %502 ]
  call void @_ZN6webrtc18RtpCodecCapabilityD1Ev(%"struct.webrtc::RtpCodecCapability"* %506) #14
  %507 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %506, i64 1
  %508 = icmp eq %"struct.webrtc::RtpCodecCapability"* %507, %504
  br i1 %508, label %509, label %505

509:                                              ; preds = %505
  store i32 0, i32* %480, align 4
  %510 = bitcast %"class.WTF::Vector.960"* %18 to i8**
  %511 = load i8*, i8** %510, align 8
  br label %512

512:                                              ; preds = %509, %498
  %513 = phi i8* [ %511, %509 ], [ %499, %498 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %513) #14
  store %"struct.webrtc::RtpCodecCapability"* null, %"struct.webrtc::RtpCodecCapability"** %465, align 8
  br label %514

514:                                              ; preds = %491, %512
  %515 = getelementptr inbounds %"class.webrtc::RTCError", %"class.webrtc::RTCError"* %17, i64 0, i32 0
  %516 = load i32, i32* %515, align 8
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %520, label %518

518:                                              ; preds = %514
  %519 = call i8* @_ZNK6webrtc8RTCError7messageEv(%"class.webrtc::RTCError"* nonnull %17) #14
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 13, i8* %519) #14
  br label %520

520:                                              ; preds = %518, %514
  %521 = getelementptr inbounds %"class.webrtc::RTCError", %"class.webrtc::RTCError"* %17, i64 0, i32 1
  %522 = bitcast %"class.std::__1::basic_string"* %521 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %523 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %522, i64 0, i32 1, i32 0
  %524 = load i8, i8* %523, align 1
  %525 = icmp slt i8 %524, 0
  br i1 %525, label %526, label %529

526:                                              ; preds = %520
  %527 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %521, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %528 = load i8*, i8** %527, align 8
  call void @_ZdlPv(i8* %528) #15
  br label %529

529:                                              ; preds = %520, %526
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %462) #14
  br label %530

530:                                              ; preds = %455, %177, %529
  %531 = load %"struct.webrtc::RtpCodecCapability"*, %"struct.webrtc::RtpCodecCapability"** %20, align 8
  %532 = icmp eq %"struct.webrtc::RtpCodecCapability"* %531, null
  br i1 %532, label %549, label %533, !prof !4

533:                                              ; preds = %530
  %534 = bitcast %"struct.webrtc::RtpCodecCapability"* %531 to i8*
  %535 = load i32, i32* %22, align 4
  %536 = icmp eq i32 %535, 0
  br i1 %536, label %547, label %537, !prof !2

537:                                              ; preds = %533
  %538 = zext i32 %535 to i64
  %539 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %531, i64 %538
  br label %540

540:                                              ; preds = %540, %537
  %541 = phi %"struct.webrtc::RtpCodecCapability"* [ %542, %540 ], [ %531, %537 ]
  call void @_ZN6webrtc18RtpCodecCapabilityD1Ev(%"struct.webrtc::RtpCodecCapability"* %541) #14
  %542 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %541, i64 1
  %543 = icmp eq %"struct.webrtc::RtpCodecCapability"* %542, %539
  br i1 %543, label %544, label %540

544:                                              ; preds = %540
  store i32 0, i32* %22, align 4
  %545 = bitcast %"class.WTF::Vector.960"* %9 to i8**
  %546 = load i8*, i8** %545, align 8
  br label %547

547:                                              ; preds = %544, %533
  %548 = phi i8* [ %546, %544 ], [ %534, %533 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %548) #14
  store %"struct.webrtc::RtpCodecCapability"* null, %"struct.webrtc::RtpCodecCapability"** %20, align 8
  br label %549

549:                                              ; preds = %530, %547
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #14
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #2

declare void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*) local_unnamed_addr #2

declare i8* @_ZNK6webrtc8RTCError7messageEv(%"class.webrtc::RTCError"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17RTCRtpTransceiver29setOfferedRtpHeaderExtensionsERKNS_10HeapVectorINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEELj0EEERNS_14ExceptionStateE(%"class.blink::RTCRtpTransceiver"* nocapture readonly, %"class.blink::HeapVector.989"* nocapture readonly dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.WTF::Vector.998", align 8
  %8 = alloca %"class.WTF::Vector.998", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.webrtc::RTCError", align 8
  %11 = alloca %"class.WTF::Vector.998", align 8
  %12 = bitcast %"class.WTF::Vector.998"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #14
  %13 = getelementptr inbounds %"class.WTF::Vector.998", %"class.WTF::Vector.998"* %7, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.WTF::Vector.998", %"class.WTF::Vector.998"* %7, i64 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.998", %"class.WTF::Vector.998"* %7, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false) #14
  %16 = bitcast %"class.WTF::Vector.998"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.WTF::Vector.998", %"class.WTF::Vector.998"* %8, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.WTF::Vector.998", %"class.WTF::Vector.998"* %8, i64 0, i32 0, i32 0, i32 2
  %19 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %20 = bitcast %"class.WTF::Vector.998"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load %"class.blink::RTCRtpTransceiverPlatform"*, %"class.blink::RTCRtpTransceiverPlatform"** %19, align 8
  %22 = bitcast %"class.blink::RTCRtpTransceiverPlatform"* %21 to void (%"class.WTF::Vector.998"*, %"class.blink::RTCRtpTransceiverPlatform"*)***
  %23 = load void (%"class.WTF::Vector.998"*, %"class.blink::RTCRtpTransceiverPlatform"*)**, void (%"class.WTF::Vector.998"*, %"class.blink::RTCRtpTransceiverPlatform"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.WTF::Vector.998"*, %"class.blink::RTCRtpTransceiverPlatform"*)*, void (%"class.WTF::Vector.998"*, %"class.blink::RTCRtpTransceiverPlatform"*)** %23, i64 17
  %25 = load void (%"class.WTF::Vector.998"*, %"class.blink::RTCRtpTransceiverPlatform"*)*, void (%"class.WTF::Vector.998"*, %"class.blink::RTCRtpTransceiverPlatform"*)** %24, align 8
  call void %25(%"class.WTF::Vector.998"* nonnull sret %8, %"class.blink::RTCRtpTransceiverPlatform"* %21) #14
  %26 = getelementptr inbounds %"class.blink::HeapVector.989", %"class.blink::HeapVector.989"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::Member.995"*, %"class.blink::Member.995"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::HeapVector.989", %"class.blink::HeapVector.989"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.blink::Member.995", %"class.blink::Member.995"* %27, i64 %30
  %32 = icmp eq i32 %29, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %3
  %34 = bitcast %"class.WTF::Vector.998"* %7 to i64*
  br label %154

35:                                               ; preds = %3
  %36 = bitcast i64* %6 to %"class.absl::optional.331"*
  %37 = bitcast %"class.WTF::StringView"* %4 to i8*
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %40 = bitcast i8** %39 to %"class.WTF::StringImpl"**
  %41 = bitcast %"class.WTF::StringView"* %4 to i64*
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %43 = bitcast %"class.WTF::StringView"* %5 to i8*
  %44 = bitcast %"class.WTF::StringView"* %5 to i64*
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %47 = bitcast i64* %6 to i8*
  %48 = getelementptr inbounds %"class.absl::optional.331", %"class.absl::optional.331"* %36, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %49 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %50 = bitcast %"class.WTF::Vector.998"* %7 to i64*
  %51 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = ptrtoint %"class.std::__1::basic_string"* %9 to i64
  %54 = bitcast %"class.std::__1::basic_string"* %9 to i64*
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %35, %147
  %58 = phi %"class.blink::Member.995"* [ %27, %35 ], [ %148, %147 ]
  %59 = phi i32 [ 1, %35 ], [ %96, %147 ]
  %60 = getelementptr inbounds %"class.blink::Member.995", %"class.blink::Member.995"* %58, i64 0, i32 0, i32 0
  %61 = load %"class.blink::RTCRtpHeaderExtensionCapability"*, %"class.blink::RTCRtpHeaderExtensionCapability"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::RTCRtpHeaderExtensionCapability", %"class.blink::RTCRtpHeaderExtensionCapability"* %61, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %65, %57
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i64 0, i64 0)) #14
  br label %204

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::RTCRtpHeaderExtensionCapability", %"class.blink::RTCRtpHeaderExtensionCapability"* %61, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #14
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %75, label %77

75:                                               ; preds = %70
  store i8* null, i8** %39, align 8
  %76 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %76, i64* %41, align 8
  br label %82

77:                                               ; preds = %70
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %38, align 8
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 1
  store %"class.WTF::StringImpl"* %80, %"class.WTF::StringImpl"** %40, align 8
  %81 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %82

82:                                               ; preds = %77, %75
  %83 = phi i64 [ %81, %77 ], [ %76, %75 ]
  %84 = phi i32 [ %79, %77 ], [ 0, %75 ]
  store i32 %84, i32* %42, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #14
  store i64 %83, i64* %44, align 8
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i8** %45, align 8
  store i32 7, i32* %46, align 8
  %85 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #14
  br i1 %85, label %94, label %86

86:                                               ; preds = %82
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #14
  store i64 -6148914691236517376, i64* %6, align 8
  %87 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_130TransceiverDirectionFromStringERKN3WTF6StringEPN4absl8optionalIN6webrtc23RtpTransceiverDirectionEEE(%"class.WTF::String"* dereferenceable(8) %71, %"class.absl::optional.331"* nonnull %36) #14
  %88 = load i8, i8* %47, align 8, !range !3
  %89 = icmp eq i8 %88, 0
  %90 = load i32, i32* %48, align 4
  %91 = select i1 %89, i32 -1431655766, i32 %90
  %92 = xor i1 %89, true
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #14
  %93 = and i1 %87, %92
  br i1 %93, label %94, label %146

94:                                               ; preds = %86, %82
  %95 = phi i32 [ 4, %82 ], [ %91, %86 ]
  %96 = add nuw nsw i32 %59, 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #14
  %97 = load %"class.blink::RTCRtpHeaderExtensionCapability"*, %"class.blink::RTCRtpHeaderExtensionCapability"** %60, align 8
  %98 = getelementptr inbounds %"class.blink::RTCRtpHeaderExtensionCapability", %"class.blink::RTCRtpHeaderExtensionCapability"* %97, i64 0, i32 2
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %9, %"class.WTF::String"* %98) #14
  %99 = load i32, i32* %15, align 4
  %100 = load i32, i32* %14, align 8
  %101 = icmp eq i32 %99, %100
  br i1 %101, label %102, label %122, !prof !2

102:                                              ; preds = %94
  %103 = add i32 %99, 1
  %104 = lshr i32 %99, 2
  %105 = add i32 %103, %104
  %106 = icmp ugt i32 %105, 4
  %107 = select i1 %106, i32 %105, i32 4
  %108 = icmp ugt i32 %107, %103
  %109 = select i1 %108, i32 %107, i32 %103
  %110 = icmp ult i32 %99, %109
  br i1 %110, label %111, label %122, !prof !4

111:                                              ; preds = %102
  %112 = load %"struct.webrtc::RtpHeaderExtensionCapability"*, %"struct.webrtc::RtpHeaderExtensionCapability"** %13, align 8
  %113 = icmp eq %"struct.webrtc::RtpHeaderExtensionCapability"* %112, null
  br i1 %113, label %114, label %121

114:                                              ; preds = %111
  %115 = zext i32 %109 to i64
  %116 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN6webrtc28RtpHeaderExtensionCapabilityEEEmm(i64 %115) #14
  %117 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %116, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN6webrtc28RtpHeaderExtensionCapabilityEEEPKcv, i64 0, i64 0)) #14
  %118 = ptrtoint i8* %117 to i64
  store atomic i64 %118, i64* %50 monotonic, align 8
  %119 = udiv i64 %116, 40
  %120 = trunc i64 %119 to i32
  store i32 %120, i32* %14, align 8
  br label %122

121:                                              ; preds = %111
  call void @_ZN3WTF6VectorIN6webrtc28RtpHeaderExtensionCapabilityELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.998"* nonnull %7, i32 %109) #14
  br label %122

122:                                              ; preds = %121, %114, %102, %94
  %123 = load %"struct.webrtc::RtpHeaderExtensionCapability"*, %"struct.webrtc::RtpHeaderExtensionCapability"** %13, align 8
  %124 = load i32, i32* %15, align 4
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %123, i64 %125
  %127 = load i8, i8* %52, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %131, label %129

129:                                              ; preds = %122
  %130 = zext i8 %127 to i64
  br label %136

131:                                              ; preds = %122
  %132 = load i64, i64* %54, align 8
  %133 = load i64, i64* %55, align 8
  %134 = icmp sgt i64 %133, -1
  br i1 %134, label %136, label %135, !prof !4

135:                                              ; preds = %131
  call void @llvm.trap() #14
  unreachable

136:                                              ; preds = %129, %131
  %137 = phi i64 [ %132, %131 ], [ %53, %129 ]
  %138 = phi i64 [ %133, %131 ], [ %130, %129 ]
  %139 = inttoptr i64 %137 to i8*
  call void @_ZN6webrtc28RtpHeaderExtensionCapabilityC1EN4absl11string_viewEiNS_23RtpTransceiverDirectionE(%"struct.webrtc::RtpHeaderExtensionCapability"* %126, i8* %139, i64 %138, i32 %59, i32 %95) #14
  %140 = load i32, i32* %15, align 4
  %141 = add i32 %140, 1
  store i32 %141, i32* %15, align 4
  %142 = load i8, i8* %52, align 1
  %143 = icmp slt i8 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %136
  %145 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %145) #15
  br label %147

146:                                              ; preds = %86
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0)) #14
  br label %204

147:                                              ; preds = %144, %136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #14
  %148 = getelementptr inbounds %"class.blink::Member.995", %"class.blink::Member.995"* %58, i64 1
  %149 = icmp eq %"class.blink::Member.995"* %148, %31
  br i1 %149, label %150, label %57

150:                                              ; preds = %147
  %151 = load i64, i64* %50, align 8
  %152 = load i32, i32* %14, align 8
  %153 = load i32, i32* %15, align 4
  br label %154

154:                                              ; preds = %33, %150
  %155 = phi i64* [ %34, %33 ], [ %50, %150 ]
  %156 = phi i32 [ 0, %33 ], [ %153, %150 ]
  %157 = phi i32 [ 0, %33 ], [ %152, %150 ]
  %158 = phi i64 [ 0, %33 ], [ %151, %150 ]
  %159 = bitcast %"class.webrtc::RTCError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %159) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %159, i8 -86, i64 40, i1 false)
  %160 = load %"class.blink::RTCRtpTransceiverPlatform"*, %"class.blink::RTCRtpTransceiverPlatform"** %19, align 8
  %161 = getelementptr inbounds %"class.WTF::Vector.998", %"class.WTF::Vector.998"* %11, i64 0, i32 0, i32 0, i32 1
  %162 = getelementptr inbounds %"class.WTF::Vector.998", %"class.WTF::Vector.998"* %11, i64 0, i32 0, i32 0, i32 2
  %163 = bitcast %"class.WTF::Vector.998"* %11 to i64*
  store i64 0, i64* %163, align 8
  %164 = bitcast %"class.WTF::Vector.998"* %11 to i64*
  store atomic i64 0, i64* %155 monotonic, align 8
  store atomic i64 %158, i64* %164 monotonic, align 8
  store i32 %157, i32* %161, align 8
  store i32 0, i32* %14, align 8
  store i32 %156, i32* %162, align 4
  store i32 0, i32* %15, align 4
  %165 = bitcast %"class.blink::RTCRtpTransceiverPlatform"* %160 to void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*, %"class.WTF::Vector.998"*)***
  %166 = load void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*, %"class.WTF::Vector.998"*)**, void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*, %"class.WTF::Vector.998"*)*** %165, align 8
  %167 = getelementptr inbounds void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*, %"class.WTF::Vector.998"*)*, void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*, %"class.WTF::Vector.998"*)** %166, i64 15
  %168 = load void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*, %"class.WTF::Vector.998"*)*, void (%"class.webrtc::RTCError"*, %"class.blink::RTCRtpTransceiverPlatform"*, %"class.WTF::Vector.998"*)** %167, align 8
  call void %168(%"class.webrtc::RTCError"* nonnull sret %10, %"class.blink::RTCRtpTransceiverPlatform"* %160, %"class.WTF::Vector.998"* nonnull %11) #14
  %169 = getelementptr inbounds %"class.WTF::Vector.998", %"class.WTF::Vector.998"* %11, i64 0, i32 0, i32 0, i32 0
  %170 = load %"struct.webrtc::RtpHeaderExtensionCapability"*, %"struct.webrtc::RtpHeaderExtensionCapability"** %169, align 8
  %171 = icmp eq %"struct.webrtc::RtpHeaderExtensionCapability"* %170, null
  br i1 %171, label %188, label %172, !prof !4

172:                                              ; preds = %154
  %173 = bitcast %"struct.webrtc::RtpHeaderExtensionCapability"* %170 to i8*
  %174 = load i32, i32* %162, align 4
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %186, label %176, !prof !2

176:                                              ; preds = %172
  %177 = zext i32 %174 to i64
  %178 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %170, i64 %177
  br label %179

179:                                              ; preds = %179, %176
  %180 = phi %"struct.webrtc::RtpHeaderExtensionCapability"* [ %181, %179 ], [ %170, %176 ]
  call void @_ZN6webrtc28RtpHeaderExtensionCapabilityD1Ev(%"struct.webrtc::RtpHeaderExtensionCapability"* %180) #14
  %181 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %180, i64 1
  %182 = icmp eq %"struct.webrtc::RtpHeaderExtensionCapability"* %181, %178
  br i1 %182, label %183, label %179

183:                                              ; preds = %179
  store i32 0, i32* %162, align 4
  %184 = bitcast %"class.WTF::Vector.998"* %11 to i8**
  %185 = load i8*, i8** %184, align 8
  br label %186

186:                                              ; preds = %183, %172
  %187 = phi i8* [ %185, %183 ], [ %173, %172 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %187) #14
  store %"struct.webrtc::RtpHeaderExtensionCapability"* null, %"struct.webrtc::RtpHeaderExtensionCapability"** %169, align 8
  br label %188

188:                                              ; preds = %154, %186
  %189 = getelementptr inbounds %"class.webrtc::RTCError", %"class.webrtc::RTCError"* %10, i64 0, i32 0
  %190 = load i32, i32* %189, align 8
  switch i32 %190, label %193 [
    i32 2, label %191
    i32 0, label %194
  ]

191:                                              ; preds = %188
  %192 = call i8* @_ZNK6webrtc8RTCError7messageEv(%"class.webrtc::RTCError"* nonnull %10) #14
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 9, i8* %192) #14
  br label %194

193:                                              ; preds = %188
  call void @_ZN5blink26ThrowExceptionFromRTCErrorERKN6webrtc8RTCErrorERNS_14ExceptionStateE(%"class.webrtc::RTCError"* nonnull dereferenceable(40) %10, %"class.blink::ExceptionState"* dereferenceable(72) %2) #14
  br label %194

194:                                              ; preds = %188, %193, %191
  %195 = getelementptr inbounds %"class.webrtc::RTCError", %"class.webrtc::RTCError"* %10, i64 0, i32 1
  %196 = bitcast %"class.std::__1::basic_string"* %195 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %196, i64 0, i32 1, i32 0
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %194
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %195, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %202) #15
  br label %203

203:                                              ; preds = %194, %200
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %159) #14
  br label %204

204:                                              ; preds = %69, %146, %203
  %205 = load %"struct.webrtc::RtpHeaderExtensionCapability"*, %"struct.webrtc::RtpHeaderExtensionCapability"** %17, align 8
  %206 = icmp eq %"struct.webrtc::RtpHeaderExtensionCapability"* %205, null
  br i1 %206, label %223, label %207, !prof !4

207:                                              ; preds = %204
  %208 = bitcast %"struct.webrtc::RtpHeaderExtensionCapability"* %205 to i8*
  %209 = load i32, i32* %18, align 4
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %221, label %211, !prof !2

211:                                              ; preds = %207
  %212 = zext i32 %209 to i64
  %213 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %205, i64 %212
  br label %214

214:                                              ; preds = %214, %211
  %215 = phi %"struct.webrtc::RtpHeaderExtensionCapability"* [ %216, %214 ], [ %205, %211 ]
  call void @_ZN6webrtc28RtpHeaderExtensionCapabilityD1Ev(%"struct.webrtc::RtpHeaderExtensionCapability"* %215) #14
  %216 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %215, i64 1
  %217 = icmp eq %"struct.webrtc::RtpHeaderExtensionCapability"* %216, %213
  br i1 %217, label %218, label %214

218:                                              ; preds = %214
  store i32 0, i32* %18, align 4
  %219 = bitcast %"class.WTF::Vector.998"* %8 to i8**
  %220 = load i8*, i8** %219, align 8
  br label %221

221:                                              ; preds = %218, %207
  %222 = phi i8* [ %220, %218 ], [ %208, %207 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %222) #14
  store %"struct.webrtc::RtpHeaderExtensionCapability"* null, %"struct.webrtc::RtpHeaderExtensionCapability"** %17, align 8
  br label %223

223:                                              ; preds = %204, %221
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #14
  %224 = load %"struct.webrtc::RtpHeaderExtensionCapability"*, %"struct.webrtc::RtpHeaderExtensionCapability"** %13, align 8
  %225 = icmp eq %"struct.webrtc::RtpHeaderExtensionCapability"* %224, null
  br i1 %225, label %242, label %226, !prof !4

226:                                              ; preds = %223
  %227 = bitcast %"struct.webrtc::RtpHeaderExtensionCapability"* %224 to i8*
  %228 = load i32, i32* %15, align 4
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %240, label %230, !prof !2

230:                                              ; preds = %226
  %231 = zext i32 %228 to i64
  %232 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %224, i64 %231
  br label %233

233:                                              ; preds = %233, %230
  %234 = phi %"struct.webrtc::RtpHeaderExtensionCapability"* [ %235, %233 ], [ %224, %230 ]
  call void @_ZN6webrtc28RtpHeaderExtensionCapabilityD1Ev(%"struct.webrtc::RtpHeaderExtensionCapability"* %234) #14
  %235 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %234, i64 1
  %236 = icmp eq %"struct.webrtc::RtpHeaderExtensionCapability"* %235, %232
  br i1 %236, label %237, label %233

237:                                              ; preds = %233
  store i32 0, i32* %15, align 4
  %238 = bitcast %"class.WTF::Vector.998"* %7 to i8**
  %239 = load i8*, i8** %238, align 8
  br label %240

240:                                              ; preds = %237, %226
  %241 = phi i8* [ %239, %237 ], [ %227, %226 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %241) #14
  store %"struct.webrtc::RtpHeaderExtensionCapability"* null, %"struct.webrtc::RtpHeaderExtensionCapability"** %13, align 8
  br label %242

242:                                              ; preds = %223, %240
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17RTCRtpTransceiver23headerExtensionsToOfferEv(%"class.blink::HeapVector.989"* noalias sret, %"class.blink::RTCRtpTransceiver"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.998", align 8
  %4 = alloca %"class.blink::RTCRtpHeaderExtensionCapability"*, align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::Vector.998"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.WTF::Vector.998", %"class.WTF::Vector.998"* %3, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::Vector.998", %"class.WTF::Vector.998"* %3, i64 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = bitcast %"class.WTF::Vector.998"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = load %"class.blink::RTCRtpTransceiverPlatform"*, %"class.blink::RTCRtpTransceiverPlatform"** %9, align 8
  %12 = bitcast %"class.blink::RTCRtpTransceiverPlatform"* %11 to void (%"class.WTF::Vector.998"*, %"class.blink::RTCRtpTransceiverPlatform"*)***
  %13 = load void (%"class.WTF::Vector.998"*, %"class.blink::RTCRtpTransceiverPlatform"*)**, void (%"class.WTF::Vector.998"*, %"class.blink::RTCRtpTransceiverPlatform"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.WTF::Vector.998"*, %"class.blink::RTCRtpTransceiverPlatform"*)*, void (%"class.WTF::Vector.998"*, %"class.blink::RTCRtpTransceiverPlatform"*)** %13, i64 17
  %15 = load void (%"class.WTF::Vector.998"*, %"class.blink::RTCRtpTransceiverPlatform"*)*, void (%"class.WTF::Vector.998"*, %"class.blink::RTCRtpTransceiverPlatform"*)** %14, align 8
  call void %15(%"class.WTF::Vector.998"* nonnull sret %3, %"class.blink::RTCRtpTransceiverPlatform"* %11) #14
  %16 = getelementptr inbounds %"class.blink::HeapVector.989", %"class.blink::HeapVector.989"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::HeapVector.989", %"class.blink::HeapVector.989"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.blink::HeapVector.989", %"class.blink::HeapVector.989"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %19 = bitcast %"class.blink::HeapVector.989"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #14
  %20 = load %"struct.webrtc::RtpHeaderExtensionCapability"*, %"struct.webrtc::RtpHeaderExtensionCapability"** %7, align 8
  %21 = load i32, i32* %8, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %20, i64 %22
  %24 = icmp eq i32 %21, 0
  br i1 %24, label %34, label %25

25:                                               ; preds = %2
  %26 = bitcast %"class.blink::RTCRtpHeaderExtensionCapability"** %4 to i8*
  %27 = bitcast %"class.blink::RTCRtpHeaderExtensionCapability"** %4 to i8**
  %28 = bitcast %"class.WTF::String"* %5 to i8*
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %30 = bitcast %"class.blink::RTCRtpHeaderExtensionCapability"** %4 to i64*
  %31 = getelementptr inbounds %"class.blink::HeapVector.989", %"class.blink::HeapVector.989"* %0, i64 0, i32 0
  br label %54

32:                                               ; preds = %208
  %33 = load %"struct.webrtc::RtpHeaderExtensionCapability"*, %"struct.webrtc::RtpHeaderExtensionCapability"** %7, align 8
  br label %34

34:                                               ; preds = %32, %2
  %35 = phi %"struct.webrtc::RtpHeaderExtensionCapability"* [ %33, %32 ], [ %20, %2 ]
  %36 = icmp eq %"struct.webrtc::RtpHeaderExtensionCapability"* %35, null
  br i1 %36, label %53, label %37, !prof !4

37:                                               ; preds = %34
  %38 = bitcast %"struct.webrtc::RtpHeaderExtensionCapability"* %35 to i8*
  %39 = load i32, i32* %8, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %51, label %41, !prof !2

41:                                               ; preds = %37
  %42 = zext i32 %39 to i64
  %43 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %35, i64 %42
  br label %44

44:                                               ; preds = %44, %41
  %45 = phi %"struct.webrtc::RtpHeaderExtensionCapability"* [ %46, %44 ], [ %35, %41 ]
  call void @_ZN6webrtc28RtpHeaderExtensionCapabilityD1Ev(%"struct.webrtc::RtpHeaderExtensionCapability"* %45) #14
  %46 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %45, i64 1
  %47 = icmp eq %"struct.webrtc::RtpHeaderExtensionCapability"* %46, %43
  br i1 %47, label %48, label %44

48:                                               ; preds = %44
  store i32 0, i32* %8, align 4
  %49 = bitcast %"class.WTF::Vector.998"* %3 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %48, %37
  %52 = phi i8* [ %50, %48 ], [ %38, %37 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %52) #14
  store %"struct.webrtc::RtpHeaderExtensionCapability"* null, %"struct.webrtc::RtpHeaderExtensionCapability"** %7, align 8
  br label %53

53:                                               ; preds = %34, %51
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret void

54:                                               ; preds = %25, %208
  %55 = phi %"struct.webrtc::RtpHeaderExtensionCapability"* [ %20, %25 ], [ %209, %208 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #14
  store %"class.blink::RTCRtpHeaderExtensionCapability"* inttoptr (i64 -6148914691236517206 to %"class.blink::RTCRtpHeaderExtensionCapability"*), %"class.blink::RTCRtpHeaderExtensionCapability"** %4, align 8
  %56 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 24) #14
  %57 = bitcast i8* %56 to %"class.blink::RTCRtpHeaderExtensionCapability"*
  call void @_ZN5blink31RTCRtpHeaderExtensionCapabilityC1Ev(%"class.blink::RTCRtpHeaderExtensionCapability"* %57) #14
  %58 = getelementptr inbounds i8, i8* %56, i64 -4
  %59 = bitcast i8* %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = or i16 %60, 1
  store atomic i16 %61, i16* %59 release, align 2
  store i8* %56, i8** %27, align 8
  %62 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %55, i64 0, i32 3
  %63 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_128TransceiverDirectionToStringERKN6webrtc23RtpTransceiverDirectionE(i32* dereferenceable(4) %62)
  %64 = getelementptr inbounds i8, i8* %56, i64 8
  %65 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %54
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #14
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !2

80:                                               ; preds = %71
  call void @llvm.trap() #14
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %81, %66, %54
  %84 = ptrtoint %"class.WTF::StringImpl"* %63 to i64
  %85 = bitcast i8* %64 to i64*
  %86 = bitcast i8* %64 to %"class.WTF::StringImpl"**
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  store i64 %84, i64* %85, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #14
  br label %102

102:                                              ; preds = %83, %98, %101
  br i1 %65, label %116, label %103

103:                                              ; preds = %102
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #14
  br label %116

116:                                              ; preds = %102, %112, %115
  %117 = load %"class.blink::RTCRtpHeaderExtensionCapability"*, %"class.blink::RTCRtpHeaderExtensionCapability"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  %118 = bitcast %"struct.webrtc::RtpHeaderExtensionCapability"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %118, i64 0, i32 1, i32 0
  %120 = load i8, i8* %119, align 1
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  br label %127

125:                                              ; preds = %116
  %126 = bitcast %"struct.webrtc::RtpHeaderExtensionCapability"* %55 to i8*
  br label %127

127:                                              ; preds = %122, %125
  %128 = phi i8* [ %124, %122 ], [ %126, %125 ]
  %129 = icmp eq i8* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %127
  %131 = call i64 @strlen(i8* nonnull %128) #16
  br label %132

132:                                              ; preds = %127, %130
  %133 = phi i64 [ %131, %130 ], [ 0, %127 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* %128, i64 %133) #14
  %134 = getelementptr inbounds %"class.blink::RTCRtpHeaderExtensionCapability", %"class.blink::RTCRtpHeaderExtensionCapability"* %117, i64 0, i32 2
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %154, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %154

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = zext i32 %144 to i33
  %146 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %145, i33 1) #14
  %147 = extractvalue { i33, i1 } %146, 1
  %148 = extractvalue { i33, i1 } %146, 0
  %149 = icmp slt i33 %148, 0
  %150 = or i1 %147, %149
  br i1 %150, label %151, label %152, !prof !2

151:                                              ; preds = %142
  call void @llvm.trap() #14
  unreachable

152:                                              ; preds = %142
  %153 = trunc i33 %148 to i32
  store i32 %153, i32* %143, align 4
  br label %154

154:                                              ; preds = %152, %137, %132
  %155 = ptrtoint %"class.WTF::StringImpl"* %135 to i64
  %156 = bitcast %"class.WTF::String"* %134 to i64*
  %157 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %134, i64 0, i32 0, i32 0
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  store i64 %155, i64* %156, align 8
  %159 = icmp eq %"class.WTF::StringImpl"* %158, null
  br i1 %159, label %173, label %160

160:                                              ; preds = %154
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  br i1 %164, label %167, label %169

167:                                              ; preds = %160
  %168 = add i32 %166, -1
  store i32 %168, i32* %165, align 4
  br label %169

169:                                              ; preds = %167, %160
  %170 = phi i32 [ %168, %167 ], [ %166, %160 ]
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #14
  br label %173

173:                                              ; preds = %154, %169, %172
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %174, null
  br i1 %175, label %189, label %176

176:                                              ; preds = %173
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = and i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 0
  %182 = load i32, i32* %181, align 4
  br i1 %180, label %183, label %185

183:                                              ; preds = %176
  %184 = add i32 %182, -1
  store i32 %184, i32* %181, align 4
  br label %185

185:                                              ; preds = %183, %176
  %186 = phi i32 [ %184, %183 ], [ %182, %176 ]
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %189

188:                                              ; preds = %185
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %174) #14
  br label %189

189:                                              ; preds = %173, %185, %188
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  %190 = load i32, i32* %18, align 4
  %191 = load i32, i32* %17, align 8
  %192 = icmp eq i32 %190, %191
  br i1 %192, label %207, label %193, !prof !2

193:                                              ; preds = %189
  %194 = load %"class.blink::Member.995"*, %"class.blink::Member.995"** %16, align 8
  %195 = zext i32 %190 to i64
  %196 = getelementptr inbounds %"class.blink::Member.995", %"class.blink::Member.995"* %194, i64 %195
  %197 = load i64, i64* %30, align 8
  %198 = bitcast %"class.blink::Member.995"* %196 to i64*
  store atomic i64 %197, i64* %198 monotonic, align 8
  %199 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %204, label %201

201:                                              ; preds = %193
  %202 = inttoptr i64 %197 to i8*
  %203 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %202) #14
  br label %204

204:                                              ; preds = %201, %193
  %205 = load i32, i32* %18, align 4
  %206 = add i32 %205, 1
  store i32 %206, i32* %18, align 4
  br label %208

207:                                              ; preds = %189
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_31RTCRtpHeaderExtensionCapabilityEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.992"* %31, %"class.blink::RTCRtpHeaderExtensionCapability"** nonnull dereferenceable(8) %4) #14
  br label %208

208:                                              ; preds = %204, %207
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #14
  %209 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %55, i64 1
  %210 = icmp eq %"struct.webrtc::RtpHeaderExtensionCapability"* %209, %23
  br i1 %210, label %32, label %54
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17RTCRtpTransceiver26headerExtensionsNegotiatedEv(%"class.blink::HeapVector.989"* noalias sret, %"class.blink::RTCRtpTransceiver"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.998", align 8
  %4 = alloca %"class.blink::RTCRtpHeaderExtensionCapability"*, align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::Vector.998"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.WTF::Vector.998", %"class.WTF::Vector.998"* %3, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::Vector.998", %"class.WTF::Vector.998"* %3, i64 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = bitcast %"class.WTF::Vector.998"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = load %"class.blink::RTCRtpTransceiverPlatform"*, %"class.blink::RTCRtpTransceiverPlatform"** %9, align 8
  %12 = bitcast %"class.blink::RTCRtpTransceiverPlatform"* %11 to void (%"class.WTF::Vector.998"*, %"class.blink::RTCRtpTransceiverPlatform"*)***
  %13 = load void (%"class.WTF::Vector.998"*, %"class.blink::RTCRtpTransceiverPlatform"*)**, void (%"class.WTF::Vector.998"*, %"class.blink::RTCRtpTransceiverPlatform"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.WTF::Vector.998"*, %"class.blink::RTCRtpTransceiverPlatform"*)*, void (%"class.WTF::Vector.998"*, %"class.blink::RTCRtpTransceiverPlatform"*)** %13, i64 16
  %15 = load void (%"class.WTF::Vector.998"*, %"class.blink::RTCRtpTransceiverPlatform"*)*, void (%"class.WTF::Vector.998"*, %"class.blink::RTCRtpTransceiverPlatform"*)** %14, align 8
  call void %15(%"class.WTF::Vector.998"* nonnull sret %3, %"class.blink::RTCRtpTransceiverPlatform"* %11) #14
  %16 = getelementptr inbounds %"class.blink::HeapVector.989", %"class.blink::HeapVector.989"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::HeapVector.989", %"class.blink::HeapVector.989"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.blink::HeapVector.989", %"class.blink::HeapVector.989"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %19 = bitcast %"class.blink::HeapVector.989"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #14
  %20 = load %"struct.webrtc::RtpHeaderExtensionCapability"*, %"struct.webrtc::RtpHeaderExtensionCapability"** %7, align 8
  %21 = load i32, i32* %8, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %20, i64 %22
  %24 = icmp eq i32 %21, 0
  br i1 %24, label %34, label %25

25:                                               ; preds = %2
  %26 = bitcast %"class.blink::RTCRtpHeaderExtensionCapability"** %4 to i8*
  %27 = bitcast %"class.blink::RTCRtpHeaderExtensionCapability"** %4 to i8**
  %28 = bitcast %"class.WTF::String"* %5 to i8*
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %30 = bitcast %"class.blink::RTCRtpHeaderExtensionCapability"** %4 to i64*
  %31 = getelementptr inbounds %"class.blink::HeapVector.989", %"class.blink::HeapVector.989"* %0, i64 0, i32 0
  br label %54

32:                                               ; preds = %208
  %33 = load %"struct.webrtc::RtpHeaderExtensionCapability"*, %"struct.webrtc::RtpHeaderExtensionCapability"** %7, align 8
  br label %34

34:                                               ; preds = %32, %2
  %35 = phi %"struct.webrtc::RtpHeaderExtensionCapability"* [ %33, %32 ], [ %20, %2 ]
  %36 = icmp eq %"struct.webrtc::RtpHeaderExtensionCapability"* %35, null
  br i1 %36, label %53, label %37, !prof !4

37:                                               ; preds = %34
  %38 = bitcast %"struct.webrtc::RtpHeaderExtensionCapability"* %35 to i8*
  %39 = load i32, i32* %8, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %51, label %41, !prof !2

41:                                               ; preds = %37
  %42 = zext i32 %39 to i64
  %43 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %35, i64 %42
  br label %44

44:                                               ; preds = %44, %41
  %45 = phi %"struct.webrtc::RtpHeaderExtensionCapability"* [ %46, %44 ], [ %35, %41 ]
  call void @_ZN6webrtc28RtpHeaderExtensionCapabilityD1Ev(%"struct.webrtc::RtpHeaderExtensionCapability"* %45) #14
  %46 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %45, i64 1
  %47 = icmp eq %"struct.webrtc::RtpHeaderExtensionCapability"* %46, %43
  br i1 %47, label %48, label %44

48:                                               ; preds = %44
  store i32 0, i32* %8, align 4
  %49 = bitcast %"class.WTF::Vector.998"* %3 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %48, %37
  %52 = phi i8* [ %50, %48 ], [ %38, %37 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %52) #14
  store %"struct.webrtc::RtpHeaderExtensionCapability"* null, %"struct.webrtc::RtpHeaderExtensionCapability"** %7, align 8
  br label %53

53:                                               ; preds = %34, %51
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret void

54:                                               ; preds = %25, %208
  %55 = phi %"struct.webrtc::RtpHeaderExtensionCapability"* [ %20, %25 ], [ %209, %208 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #14
  store %"class.blink::RTCRtpHeaderExtensionCapability"* inttoptr (i64 -6148914691236517206 to %"class.blink::RTCRtpHeaderExtensionCapability"*), %"class.blink::RTCRtpHeaderExtensionCapability"** %4, align 8
  %56 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 24) #14
  %57 = bitcast i8* %56 to %"class.blink::RTCRtpHeaderExtensionCapability"*
  call void @_ZN5blink31RTCRtpHeaderExtensionCapabilityC1Ev(%"class.blink::RTCRtpHeaderExtensionCapability"* %57) #14
  %58 = getelementptr inbounds i8, i8* %56, i64 -4
  %59 = bitcast i8* %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = or i16 %60, 1
  store atomic i16 %61, i16* %59 release, align 2
  store i8* %56, i8** %27, align 8
  %62 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %55, i64 0, i32 3
  %63 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_128TransceiverDirectionToStringERKN6webrtc23RtpTransceiverDirectionE(i32* dereferenceable(4) %62)
  %64 = getelementptr inbounds i8, i8* %56, i64 8
  %65 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %54
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #14
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !2

80:                                               ; preds = %71
  call void @llvm.trap() #14
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %81, %66, %54
  %84 = ptrtoint %"class.WTF::StringImpl"* %63 to i64
  %85 = bitcast i8* %64 to i64*
  %86 = bitcast i8* %64 to %"class.WTF::StringImpl"**
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  store i64 %84, i64* %85, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #14
  br label %102

102:                                              ; preds = %83, %98, %101
  br i1 %65, label %116, label %103

103:                                              ; preds = %102
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #14
  br label %116

116:                                              ; preds = %102, %112, %115
  %117 = load %"class.blink::RTCRtpHeaderExtensionCapability"*, %"class.blink::RTCRtpHeaderExtensionCapability"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  %118 = bitcast %"struct.webrtc::RtpHeaderExtensionCapability"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %118, i64 0, i32 1, i32 0
  %120 = load i8, i8* %119, align 1
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  br label %127

125:                                              ; preds = %116
  %126 = bitcast %"struct.webrtc::RtpHeaderExtensionCapability"* %55 to i8*
  br label %127

127:                                              ; preds = %122, %125
  %128 = phi i8* [ %124, %122 ], [ %126, %125 ]
  %129 = icmp eq i8* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %127
  %131 = call i64 @strlen(i8* nonnull %128) #16
  br label %132

132:                                              ; preds = %127, %130
  %133 = phi i64 [ %131, %130 ], [ 0, %127 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* %128, i64 %133) #14
  %134 = getelementptr inbounds %"class.blink::RTCRtpHeaderExtensionCapability", %"class.blink::RTCRtpHeaderExtensionCapability"* %117, i64 0, i32 2
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %154, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %154

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = zext i32 %144 to i33
  %146 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %145, i33 1) #14
  %147 = extractvalue { i33, i1 } %146, 1
  %148 = extractvalue { i33, i1 } %146, 0
  %149 = icmp slt i33 %148, 0
  %150 = or i1 %147, %149
  br i1 %150, label %151, label %152, !prof !2

151:                                              ; preds = %142
  call void @llvm.trap() #14
  unreachable

152:                                              ; preds = %142
  %153 = trunc i33 %148 to i32
  store i32 %153, i32* %143, align 4
  br label %154

154:                                              ; preds = %152, %137, %132
  %155 = ptrtoint %"class.WTF::StringImpl"* %135 to i64
  %156 = bitcast %"class.WTF::String"* %134 to i64*
  %157 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %134, i64 0, i32 0, i32 0
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  store i64 %155, i64* %156, align 8
  %159 = icmp eq %"class.WTF::StringImpl"* %158, null
  br i1 %159, label %173, label %160

160:                                              ; preds = %154
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  br i1 %164, label %167, label %169

167:                                              ; preds = %160
  %168 = add i32 %166, -1
  store i32 %168, i32* %165, align 4
  br label %169

169:                                              ; preds = %167, %160
  %170 = phi i32 [ %168, %167 ], [ %166, %160 ]
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #14
  br label %173

173:                                              ; preds = %154, %169, %172
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %174, null
  br i1 %175, label %189, label %176

176:                                              ; preds = %173
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = and i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 0
  %182 = load i32, i32* %181, align 4
  br i1 %180, label %183, label %185

183:                                              ; preds = %176
  %184 = add i32 %182, -1
  store i32 %184, i32* %181, align 4
  br label %185

185:                                              ; preds = %183, %176
  %186 = phi i32 [ %184, %183 ], [ %182, %176 ]
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %189

188:                                              ; preds = %185
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %174) #14
  br label %189

189:                                              ; preds = %173, %185, %188
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  %190 = load i32, i32* %18, align 4
  %191 = load i32, i32* %17, align 8
  %192 = icmp eq i32 %190, %191
  br i1 %192, label %207, label %193, !prof !2

193:                                              ; preds = %189
  %194 = load %"class.blink::Member.995"*, %"class.blink::Member.995"** %16, align 8
  %195 = zext i32 %190 to i64
  %196 = getelementptr inbounds %"class.blink::Member.995", %"class.blink::Member.995"* %194, i64 %195
  %197 = load i64, i64* %30, align 8
  %198 = bitcast %"class.blink::Member.995"* %196 to i64*
  store atomic i64 %197, i64* %198 monotonic, align 8
  %199 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %204, label %201

201:                                              ; preds = %193
  %202 = inttoptr i64 %197 to i8*
  %203 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %202) #14
  br label %204

204:                                              ; preds = %201, %193
  %205 = load i32, i32* %18, align 4
  %206 = add i32 %205, 1
  store i32 %206, i32* %18, align 4
  br label %208

207:                                              ; preds = %189
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_31RTCRtpHeaderExtensionCapabilityEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.992"* %31, %"class.blink::RTCRtpHeaderExtensionCapability"** nonnull dereferenceable(8) %4) #14
  br label %208

208:                                              ; preds = %204, %207
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #14
  %209 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %55, i64 1
  %210 = icmp eq %"struct.webrtc::RtpHeaderExtensionCapability"* %209, %23
  br i1 %210, label %32, label %54
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17RTCRtpTransceiver5TraceEPNS_7VisitorE(%"class.blink::RTCRtpTransceiver"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.336"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17RTCPeerConnectionEE5TraceEPNS_7VisitorEPKv) #14
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::Member.367"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12RTCRtpSenderEE5TraceEPNS_7VisitorEPKv) #14
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 4
  %26 = bitcast %"class.blink::Member.376"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14RTCRtpReceiverEE5TraceEPNS_7VisitorEPKv) #14
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %36, %"class.blink::Visitor"* %1) #14
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17RTCRtpTransceiverD2Ev(%"class.blink::RTCRtpTransceiver"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink17RTCRtpTransceiverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #14
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 6, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #14
  br label %36

36:                                               ; preds = %19, %32, %35
  %37 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.blink::RTCRtpTransceiverPlatform"*, %"class.blink::RTCRtpTransceiverPlatform"** %37, align 8
  store %"class.blink::RTCRtpTransceiverPlatform"* null, %"class.blink::RTCRtpTransceiverPlatform"** %37, align 8
  %39 = icmp eq %"class.blink::RTCRtpTransceiverPlatform"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.blink::RTCRtpTransceiverPlatform"* %38 to void (%"class.blink::RTCRtpTransceiverPlatform"*)***
  %42 = load void (%"class.blink::RTCRtpTransceiverPlatform"*)**, void (%"class.blink::RTCRtpTransceiverPlatform"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::RTCRtpTransceiverPlatform"*)*, void (%"class.blink::RTCRtpTransceiverPlatform"*)** %42, i64 1
  %44 = load void (%"class.blink::RTCRtpTransceiverPlatform"*)*, void (%"class.blink::RTCRtpTransceiverPlatform"*)** %43, align 8
  tail call void %44(%"class.blink::RTCRtpTransceiverPlatform"* nonnull %38) #14
  br label %45

45:                                               ; preds = %36, %40
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17RTCRtpTransceiverD0Ev(%"class.blink::RTCRtpTransceiver"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink17RTCRtpTransceiverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #14
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 6, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #14
  br label %36

36:                                               ; preds = %35, %32, %19
  %37 = getelementptr inbounds %"class.blink::RTCRtpTransceiver", %"class.blink::RTCRtpTransceiver"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.blink::RTCRtpTransceiverPlatform"*, %"class.blink::RTCRtpTransceiverPlatform"** %37, align 8
  store %"class.blink::RTCRtpTransceiverPlatform"* null, %"class.blink::RTCRtpTransceiverPlatform"** %37, align 8
  %39 = icmp eq %"class.blink::RTCRtpTransceiverPlatform"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.blink::RTCRtpTransceiverPlatform"* %38 to void (%"class.blink::RTCRtpTransceiverPlatform"*)***
  %42 = load void (%"class.blink::RTCRtpTransceiverPlatform"*)**, void (%"class.blink::RTCRtpTransceiverPlatform"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::RTCRtpTransceiverPlatform"*)*, void (%"class.blink::RTCRtpTransceiverPlatform"*)** %42, i64 1
  %44 = load void (%"class.blink::RTCRtpTransceiverPlatform"*)*, void (%"class.blink::RTCRtpTransceiverPlatform"*)** %43, align 8
  tail call void %44(%"class.blink::RTCRtpTransceiverPlatform"* nonnull %38) #14
  br label %45

45:                                               ; preds = %36, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink17RTCRtpTransceiver18GetWrapperTypeInfoEv(%"class.blink::RTCRtpTransceiver"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink17RTCRtpTransceiver18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #8

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"*, i16 zeroext, i1 zeroext, %"class.WTF::Vector.227"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6webrtc18RtpCodecCapabilityD1Ev(%"struct.webrtc::RtpCodecCapability"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6webrtc28RtpHeaderExtensionCapabilityD1Ev(%"struct.webrtc::RtpHeaderExtensionCapability"*) unnamed_addr #3

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZN5blink31RTCRtpHeaderExtensionCapabilityC1Ev(%"class.blink::RTCRtpHeaderExtensionCapability"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #14
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %21, i8* %22) #14
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #14
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #14
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #14
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.302"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.302", %"class.std::__1::vector.302"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.302"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.302"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.302", %"class.std::__1::vector.302"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #14
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector.302", %"class.std::__1::vector.302"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #14
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #15
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #15
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6webrtc21RtpEncodingParametersENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.309"*, %"struct.webrtc::RtpEncodingParameters"* dereferenceable(152)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.309", %"class.std::__1::vector.309"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.webrtc::RtpEncodingParameters"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.309"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 152
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 121360158379668102
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.309"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.309", %"class.std::__1::vector.309"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.webrtc::RtpEncodingParameters"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 152
  %20 = icmp ult i64 %19, 60680079189834051
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 121360158379668102, %14 ]
  %28 = mul i64 %27, 152
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %"struct.webrtc::RtpEncodingParameters"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.webrtc::RtpEncodingParameters"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.webrtc::RtpEncodingParameters", %"struct.webrtc::RtpEncodingParameters"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.webrtc::RtpEncodingParameters", %"struct.webrtc::RtpEncodingParameters"* %33, i64 %32
  %36 = ptrtoint %"struct.webrtc::RtpEncodingParameters"* %35 to i64
  tail call void @_ZN6webrtc21RtpEncodingParametersC1ERKS0_(%"struct.webrtc::RtpEncodingParameters"* %34, %"struct.webrtc::RtpEncodingParameters"* dereferenceable(152) %1) #14
  %37 = getelementptr inbounds %"struct.webrtc::RtpEncodingParameters", %"struct.webrtc::RtpEncodingParameters"* %34, i64 1
  %38 = ptrtoint %"struct.webrtc::RtpEncodingParameters"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.309", %"class.std::__1::vector.309"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.webrtc::RtpEncodingParameters"*, %"struct.webrtc::RtpEncodingParameters"** %39, align 8
  %41 = load %"struct.webrtc::RtpEncodingParameters"*, %"struct.webrtc::RtpEncodingParameters"** %3, align 8
  %42 = icmp eq %"struct.webrtc::RtpEncodingParameters"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.webrtc::RtpEncodingParameters"* %34 to i64
  store i64 %44, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  br label %60

45:                                               ; preds = %31, %45
  %46 = phi %"struct.webrtc::RtpEncodingParameters"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.webrtc::RtpEncodingParameters"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.webrtc::RtpEncodingParameters", %"struct.webrtc::RtpEncodingParameters"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.webrtc::RtpEncodingParameters", %"struct.webrtc::RtpEncodingParameters"* %47, i64 -1
  tail call void @_ZN6webrtc21RtpEncodingParametersC1ERKS0_(%"struct.webrtc::RtpEncodingParameters"* %48, %"struct.webrtc::RtpEncodingParameters"* dereferenceable(152) %49) #14
  %50 = icmp eq %"struct.webrtc::RtpEncodingParameters"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load %"struct.webrtc::RtpEncodingParameters"*, %"struct.webrtc::RtpEncodingParameters"** %39, align 8
  %53 = load %"struct.webrtc::RtpEncodingParameters"*, %"struct.webrtc::RtpEncodingParameters"** %3, align 8
  %54 = ptrtoint %"struct.webrtc::RtpEncodingParameters"* %48 to i64
  store i64 %54, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %55 = icmp eq %"struct.webrtc::RtpEncodingParameters"* %53, %52
  br i1 %55, label %60, label %56

56:                                               ; preds = %51, %56
  %57 = phi %"struct.webrtc::RtpEncodingParameters"* [ %58, %56 ], [ %53, %51 ]
  %58 = getelementptr inbounds %"struct.webrtc::RtpEncodingParameters", %"struct.webrtc::RtpEncodingParameters"* %57, i64 -1
  tail call void @_ZN6webrtc21RtpEncodingParametersD1Ev(%"struct.webrtc::RtpEncodingParameters"* %58) #14
  %59 = icmp eq %"struct.webrtc::RtpEncodingParameters"* %58, %52
  br i1 %59, label %60, label %56

60:                                               ; preds = %56, %43, %51
  %61 = phi %"struct.webrtc::RtpEncodingParameters"* [ %40, %43 ], [ %52, %51 ], [ %52, %56 ]
  %62 = icmp eq %"struct.webrtc::RtpEncodingParameters"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"struct.webrtc::RtpEncodingParameters", %"struct.webrtc::RtpEncodingParameters"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %64) #15
  br label %65

65:                                               ; preds = %60, %63
  ret void
}

declare void @_ZN6webrtc21RtpEncodingParametersC1ERKS0_(%"struct.webrtc::RtpEncodingParameters"*, %"struct.webrtc::RtpEncodingParameters"* dereferenceable(152)) unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN6webrtc18RtpCodecCapabilityELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.960"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %22

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.960", %"class.WTF::Vector.960"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.webrtc::RtpCodecCapability"*, %"struct.webrtc::RtpCodecCapability"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.960", %"class.WTF::Vector.960"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.960"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.960", %"class.WTF::Vector.960"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"struct.webrtc::RtpCodecCapability"* [ %18, %14 ], [ %6, %4 ]
  %16 = phi %"struct.webrtc::RtpCodecCapability"* [ %17, %14 ], [ null, %4 ]
  tail call void @_ZN6webrtc18RtpCodecCapabilityC2ERKS0_(%"struct.webrtc::RtpCodecCapability"* %16, %"struct.webrtc::RtpCodecCapability"* dereferenceable(160) %15) #14
  tail call void @_ZN6webrtc18RtpCodecCapabilityD1Ev(%"struct.webrtc::RtpCodecCapability"* %15) #14
  %17 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %16, i64 1
  %18 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %15, i64 1
  %19 = icmp eq %"struct.webrtc::RtpCodecCapability"* %18, %10
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %4
  %21 = bitcast %"struct.webrtc::RtpCodecCapability"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %21) #14
  br label %53

22:                                               ; preds = %2
  %23 = zext i32 %1 to i64
  %24 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN6webrtc18RtpCodecCapabilityEEEmm(i64 %23) #14
  %25 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %24, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN6webrtc18RtpCodecCapabilityEEEPKcv, i64 0, i64 0)) #14
  %26 = udiv i64 %24, 160
  %27 = ptrtoint i8* %25 to i64
  %28 = getelementptr inbounds %"class.WTF::Vector.960", %"class.WTF::Vector.960"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = load %"struct.webrtc::RtpCodecCapability"*, %"struct.webrtc::RtpCodecCapability"** %28, align 8
  %30 = getelementptr inbounds %"class.WTF::Vector.960", %"class.WTF::Vector.960"* %0, i64 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %29, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %22
  %36 = bitcast %"struct.webrtc::RtpCodecCapability"* %29 to i8*
  br label %48

37:                                               ; preds = %22
  %38 = bitcast i8* %25 to %"struct.webrtc::RtpCodecCapability"*
  br label %39

39:                                               ; preds = %37, %39
  %40 = phi %"struct.webrtc::RtpCodecCapability"* [ %43, %39 ], [ %29, %37 ]
  %41 = phi %"struct.webrtc::RtpCodecCapability"* [ %42, %39 ], [ %38, %37 ]
  tail call void @_ZN6webrtc18RtpCodecCapabilityC2ERKS0_(%"struct.webrtc::RtpCodecCapability"* %41, %"struct.webrtc::RtpCodecCapability"* dereferenceable(160) %40) #14
  tail call void @_ZN6webrtc18RtpCodecCapabilityD1Ev(%"struct.webrtc::RtpCodecCapability"* %40) #14
  %42 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %41, i64 1
  %43 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %40, i64 1
  %44 = icmp eq %"struct.webrtc::RtpCodecCapability"* %43, %33
  br i1 %44, label %45, label %39

45:                                               ; preds = %39
  %46 = bitcast %"class.WTF::Vector.960"* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %35, %45
  %49 = phi i8* [ %47, %45 ], [ %36, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #14
  %50 = bitcast %"class.WTF::Vector.960"* %0 to i64*
  store atomic i64 %27, i64* %50 monotonic, align 8
  %51 = trunc i64 %26 to i32
  %52 = getelementptr inbounds %"class.WTF::Vector.960", %"class.WTF::Vector.960"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %51, i32* %52, align 8
  br label %53

53:                                               ; preds = %48, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN6webrtc18RtpCodecCapabilityEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 13408665
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 13408665) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.19, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = mul i64 %0, 160
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc18RtpCodecCapabilityC2ERKS0_(%"struct.webrtc::RtpCodecCapability"*, %"struct.webrtc::RtpCodecCapability"* dereferenceable(160)) unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"struct.webrtc::RtpCodecCapability"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.webrtc::RtpCodecCapability"* %0 to i8*
  %9 = bitcast %"struct.webrtc::RtpCodecCapability"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #14
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #14
  br label %16

16:                                               ; preds = %7, %10
  %17 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %1, i64 0, i32 1
  %19 = bitcast i32* %17 to i8*
  %20 = bitcast i32* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 44, i1 false)
  %21 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %0, i64 0, i32 8
  %22 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %1, i64 0, i32 8
  %23 = bitcast %"class.std::__1::vector.963"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #14
  %24 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %1, i64 0, i32 8, i32 0, i32 1
  %25 = bitcast %"struct.webrtc::RtcpFeedback"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::vector.963"* %22 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = sdiv exact i64 %29, 12
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %60, label %32

32:                                               ; preds = %16
  %33 = icmp ugt i64 %30, 1537228672809129301
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::vector.963"* %21 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #17
  unreachable

36:                                               ; preds = %32
  %37 = tail call i8* @_Znwm(i64 %29) #15
  %38 = bitcast i8* %37 to %"struct.webrtc::RtcpFeedback"*
  %39 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %0, i64 0, i32 8, i32 0, i32 1
  %40 = bitcast %"struct.webrtc::RtcpFeedback"** %39 to i8**
  store i8* %37, i8** %40, align 8
  %41 = bitcast %"class.std::__1::vector.963"* %21 to i8**
  store i8* %37, i8** %41, align 8
  %42 = getelementptr inbounds %"struct.webrtc::RtcpFeedback", %"struct.webrtc::RtcpFeedback"* %38, i64 %30
  %43 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  store %"struct.webrtc::RtcpFeedback"* %42, %"struct.webrtc::RtcpFeedback"** %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.963", %"class.std::__1::vector.963"* %22, i64 0, i32 0, i32 0
  %45 = load %"struct.webrtc::RtcpFeedback"*, %"struct.webrtc::RtcpFeedback"** %44, align 8
  %46 = load %"struct.webrtc::RtcpFeedback"*, %"struct.webrtc::RtcpFeedback"** %24, align 8
  %47 = bitcast %"struct.webrtc::RtcpFeedback"** %39 to i64*
  %48 = ptrtoint i8* %37 to i64
  %49 = icmp eq %"struct.webrtc::RtcpFeedback"* %45, %46
  br i1 %49, label %58, label %50

50:                                               ; preds = %36, %50
  %51 = phi %"struct.webrtc::RtcpFeedback"* [ %54, %50 ], [ %38, %36 ]
  %52 = phi %"struct.webrtc::RtcpFeedback"* [ %53, %50 ], [ %45, %36 ]
  tail call void @_ZN6webrtc12RtcpFeedbackC1ERKS0_(%"struct.webrtc::RtcpFeedback"* %51, %"struct.webrtc::RtcpFeedback"* dereferenceable(12) %52) #14
  %53 = getelementptr inbounds %"struct.webrtc::RtcpFeedback", %"struct.webrtc::RtcpFeedback"* %52, i64 1
  %54 = getelementptr inbounds %"struct.webrtc::RtcpFeedback", %"struct.webrtc::RtcpFeedback"* %51, i64 1
  %55 = icmp eq %"struct.webrtc::RtcpFeedback"* %53, %46
  br i1 %55, label %56, label %50

56:                                               ; preds = %50
  %57 = ptrtoint %"struct.webrtc::RtcpFeedback"* %54 to i64
  br label %58

58:                                               ; preds = %56, %36
  %59 = phi i64 [ %48, %36 ], [ %57, %56 ]
  store i64 %59, i64* %47, align 8
  br label %60

60:                                               ; preds = %16, %58
  %61 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %0, i64 0, i32 9
  %62 = getelementptr inbounds %"class.std::__1::map.975", %"class.std::__1::map.975"* %61, i64 0, i32 0
  %63 = getelementptr inbounds %"class.std::__1::map.975", %"class.std::__1::map.975"* %61, i64 0, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %0, i64 0, i32 9, i32 0, i32 1
  %66 = bitcast %"class.std::__1::__compressed_pair.977"* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %64, %"class.std::__1::__tree_end_node"** %63, align 8
  %67 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %1, i64 0, i32 9, i32 0, i32 0
  %68 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %69 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %1, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %70 = icmp eq %"class.std::__1::__tree_end_node"* %68, %69
  br i1 %70, label %107, label %71

71:                                               ; preds = %60, %104
  %72 = phi %"class.std::__1::__tree_end_node"* [ %105, %104 ], [ %68, %60 ]
  %73 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 4
  %74 = bitcast %"class.std::__1::__tree_end_node"* %73 to %"struct.std::__1::pair.1058"*
  %75 = bitcast %"class.std::__1::__tree_end_node"* %73 to %"class.std::__1::basic_string"*
  %76 = tail call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE30__emplace_hint_unique_key_argsIS7_JRKNS_4pairIKS7_S7_EEEEENSG_INS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEENS_21__tree_const_iteratorIS8_SP_lEERKT_DpOT0_(%"class.std::__1::__tree.976"* %62, %"class.std::__1::__tree_end_node"* %64, %"class.std::__1::basic_string"* dereferenceable(24) %75, %"struct.std::__1::pair.1058"* dereferenceable(48) %74) #14
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 1, i32 0
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node_base"* %78, null
  br i1 %79, label %80, label %88

80:                                               ; preds = %71
  %81 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"class.std::__1::__tree_node_base"*
  %82 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 2
  %83 = bitcast %"class.std::__1::__tree_end_node"* %82 to %"class.std::__1::__tree_end_node"**
  %84 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %83, align 8
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 0, i32 0
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  %87 = icmp eq %"class.std::__1::__tree_node_base"* %86, %81
  br i1 %87, label %104, label %95

88:                                               ; preds = %71, %88
  %89 = phi %"class.std::__1::__tree_node_base"* [ %91, %88 ], [ %78, %71 ]
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %89, i64 0, i32 0, i32 0
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %90, align 8
  %92 = icmp eq %"class.std::__1::__tree_node_base"* %91, null
  br i1 %92, label %93, label %88

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %89, i64 0, i32 0
  br label %104

95:                                               ; preds = %80, %95
  %96 = phi %"class.std::__1::__tree_end_node"** [ %99, %95 ], [ %83, %80 ]
  %97 = bitcast %"class.std::__1::__tree_end_node"** %96 to %"class.std::__1::__tree_node_base"**
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  %99 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 2
  %100 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %99, align 8
  %101 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %100, i64 0, i32 0
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  %103 = icmp eq %"class.std::__1::__tree_node_base"* %102, %98
  br i1 %103, label %104, label %95

104:                                              ; preds = %95, %93, %80
  %105 = phi %"class.std::__1::__tree_end_node"* [ %94, %93 ], [ %84, %80 ], [ %100, %95 ]
  %106 = icmp eq %"class.std::__1::__tree_end_node"* %105, %69
  br i1 %106, label %107, label %71

107:                                              ; preds = %104, %60
  %108 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %0, i64 0, i32 10
  %109 = getelementptr inbounds %"class.std::__1::map.975", %"class.std::__1::map.975"* %108, i64 0, i32 0
  %110 = getelementptr inbounds %"class.std::__1::map.975", %"class.std::__1::map.975"* %108, i64 0, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %112 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %0, i64 0, i32 10, i32 0, i32 1
  %113 = bitcast %"class.std::__1::__compressed_pair.977"* %112 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %111, %"class.std::__1::__tree_end_node"** %110, align 8
  %114 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %1, i64 0, i32 10, i32 0, i32 0
  %115 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %114, align 8
  %116 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %1, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %117 = icmp eq %"class.std::__1::__tree_end_node"* %115, %116
  br i1 %117, label %154, label %118

118:                                              ; preds = %107, %151
  %119 = phi %"class.std::__1::__tree_end_node"* [ %152, %151 ], [ %115, %107 ]
  %120 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %119, i64 4
  %121 = bitcast %"class.std::__1::__tree_end_node"* %120 to %"struct.std::__1::pair.1058"*
  %122 = bitcast %"class.std::__1::__tree_end_node"* %120 to %"class.std::__1::basic_string"*
  %123 = tail call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE30__emplace_hint_unique_key_argsIS7_JRKNS_4pairIKS7_S7_EEEEENSG_INS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEENS_21__tree_const_iteratorIS8_SP_lEERKT_DpOT0_(%"class.std::__1::__tree.976"* %109, %"class.std::__1::__tree_end_node"* %111, %"class.std::__1::basic_string"* dereferenceable(24) %122, %"struct.std::__1::pair.1058"* dereferenceable(48) %121) #14
  %124 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %119, i64 1, i32 0
  %125 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %124, align 8
  %126 = icmp eq %"class.std::__1::__tree_node_base"* %125, null
  br i1 %126, label %127, label %135

127:                                              ; preds = %118
  %128 = bitcast %"class.std::__1::__tree_end_node"* %119 to %"class.std::__1::__tree_node_base"*
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %119, i64 2
  %130 = bitcast %"class.std::__1::__tree_end_node"* %129 to %"class.std::__1::__tree_end_node"**
  %131 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %130, align 8
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %131, i64 0, i32 0
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %132, align 8
  %134 = icmp eq %"class.std::__1::__tree_node_base"* %133, %128
  br i1 %134, label %151, label %142

135:                                              ; preds = %118, %135
  %136 = phi %"class.std::__1::__tree_node_base"* [ %138, %135 ], [ %125, %118 ]
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 0, i32 0
  %138 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %137, align 8
  %139 = icmp eq %"class.std::__1::__tree_node_base"* %138, null
  br i1 %139, label %140, label %135

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 0
  br label %151

142:                                              ; preds = %127, %142
  %143 = phi %"class.std::__1::__tree_end_node"** [ %146, %142 ], [ %130, %127 ]
  %144 = bitcast %"class.std::__1::__tree_end_node"** %143 to %"class.std::__1::__tree_node_base"**
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 2
  %147 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %146, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %147, i64 0, i32 0
  %149 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %148, align 8
  %150 = icmp eq %"class.std::__1::__tree_node_base"* %149, %145
  br i1 %150, label %151, label %142

151:                                              ; preds = %142, %140, %127
  %152 = phi %"class.std::__1::__tree_end_node"* [ %141, %140 ], [ %131, %127 ], [ %147, %142 ]
  %153 = icmp eq %"class.std::__1::__tree_end_node"* %152, %116
  br i1 %153, label %154, label %118

154:                                              ; preds = %151, %107
  %155 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %0, i64 0, i32 11
  %156 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %1, i64 0, i32 11
  %157 = bitcast i32* %155 to i8*
  %158 = bitcast i32* %156 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* align 8 %158, i64 9, i1 false)
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN6webrtc12RtcpFeedbackC1ERKS0_(%"struct.webrtc::RtcpFeedback"*, %"struct.webrtc::RtcpFeedback"* dereferenceable(12)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE30__emplace_hint_unique_key_argsIS7_JRKNS_4pairIKS7_S7_EEEEENSG_INS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEENS_21__tree_const_iteratorIS8_SP_lEERKT_DpOT0_(%"class.std::__1::__tree.976"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::pair.1058"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %6 = alloca %"class.std::__1::__tree_node_base"*, align 8
  %7 = bitcast %"class.std::__1::__tree_end_node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %5, align 8
  %8 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  store %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*), %"class.std::__1::__tree_node_base"** %6, align 8
  %9 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_SH_EElEERPNS_15__tree_end_nodeISJ_EESK_RKT_(%"class.std::__1::__tree.976"* %0, %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %5, %"class.std::__1::__tree_node_base"** nonnull dereferenceable(8) %6, %"class.std::__1::basic_string"* dereferenceable(24) %2)
  %10 = bitcast %"class.std::__1::__tree_node_base"** %9 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %12 = icmp eq %"class.std::__1::__tree_node"* %11, null
  br i1 %12, label %13, label %67

13:                                               ; preds = %4
  %14 = call i8* @_Znwm(i64 80) #15, !noalias !8
  %15 = getelementptr inbounds i8, i8* %14, i64 32
  %16 = bitcast %"struct.std::__1::pair.1058"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1, !noalias !8
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %13
  %21 = bitcast %"struct.std::__1::pair.1058"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %21, i64 24, i1 false) #14, !noalias !8
  br label %28

22:                                               ; preds = %13
  %23 = bitcast i8* %15 to %"class.std::__1::basic_string"*
  %24 = getelementptr inbounds %"struct.std::__1::pair.1058", %"struct.std::__1::pair.1058"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8, !noalias !8
  %26 = getelementptr inbounds %"struct.std::__1::pair.1058", %"struct.std::__1::pair.1058"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8, !noalias !8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %23, i8* %25, i64 %27) #14, !noalias !8
  br label %28

28:                                               ; preds = %22, %20
  %29 = getelementptr inbounds i8, i8* %14, i64 56
  %30 = getelementptr inbounds %"struct.std::__1::pair.1058", %"struct.std::__1::pair.1058"* %3, i64 0, i32 1
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1, !noalias !8
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %28
  %36 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %36, i64 24, i1 false) #14, !noalias !8
  br label %43

37:                                               ; preds = %28
  %38 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8, !noalias !8
  %41 = getelementptr inbounds %"struct.std::__1::pair.1058", %"struct.std::__1::pair.1058"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8, !noalias !8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %38, i8* %40, i64 %42) #14, !noalias !8
  br label %43

43:                                               ; preds = %35, %37
  %44 = bitcast %"class.std::__1::__tree_end_node"** %5 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast i8* %14 to %"class.std::__1::__tree_node"*
  %47 = bitcast i8* %14 to %"class.std::__1::__tree_node_base"*
  %48 = getelementptr inbounds i8, i8* %14, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #14
  %49 = bitcast i8* %48 to i64*
  store i64 %45, i64* %49, align 8
  %50 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8**
  store i8* %14, i8** %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree.976", %"class.std::__1::__tree.976"* %0, i64 0, i32 0
  %52 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 0, i32 0
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %43
  %57 = ptrtoint %"class.std::__1::__tree_node_base"* %54 to i64
  %58 = bitcast %"class.std::__1::__tree.976"* %0 to i64*
  store i64 %57, i64* %58, align 8
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  br label %60

60:                                               ; preds = %56, %43
  %61 = phi %"class.std::__1::__tree_node_base"* [ %47, %43 ], [ %59, %56 ]
  %62 = getelementptr inbounds %"class.std::__1::__tree.976", %"class.std::__1::__tree.976"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %63, %"class.std::__1::__tree_node_base"* %61) #14
  %64 = getelementptr inbounds %"class.std::__1::__tree.976", %"class.std::__1::__tree.976"* %0, i64 0, i32 2, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %64, align 8
  br label %67

67:                                               ; preds = %60, %4
  %68 = phi i8 [ 1, %60 ], [ 0, %4 ]
  %69 = phi %"class.std::__1::__tree_node"* [ %46, %60 ], [ %11, %4 ]
  %70 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %69, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  %71 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %70, 0
  %72 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %71, i8 %68, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_SH_EElEERPNS_15__tree_end_nodeISJ_EESK_RKT_(%"class.std::__1::__tree.976"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %6 = ptrtoint %"class.std::__1::__tree_end_node"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::__tree.976", %"class.std::__1::__tree.976"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %7, %1
  br i1 %8, label %46, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %13 to i64
  %19 = select i1 %14, i64 %17, i64 %18
  %20 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %22 to i64
  %27 = select i1 %23, i64 %25, i64 %26
  %28 = icmp ult i64 %19, %27
  %29 = select i1 %28, i64 %19, i64 %27
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %42, label %31

31:                                               ; preds = %9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %35 = select i1 %23, i8* %33, i8* %34
  %36 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8*
  %39 = select i1 %14, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %35, i8* %39, i64 %29) #14
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %31, %9
  %43 = icmp ult i64 %27, %19
  br i1 %43, label %46, label %120

44:                                               ; preds = %31
  %45 = icmp slt i32 %40, 0
  br i1 %45, label %46, label %130

46:                                               ; preds = %42, %5, %44
  %47 = getelementptr inbounds %"class.std::__1::__tree.976", %"class.std::__1::__tree.976"* %0, i64 0, i32 0
  %48 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_end_node"* %48, %1
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  br i1 %49, label %109, label %52

52:                                               ; preds = %46
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %52, %54
  %55 = phi %"class.std::__1::__tree_node_base"* [ %57, %54 ], [ %51, %52 ]
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %55, i64 0, i32 1
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, null
  br i1 %58, label %70, label %54

59:                                               ; preds = %52, %59
  %60 = phi %"class.std::__1::__tree_end_node"* [ %64, %59 ], [ %1, %52 ]
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"class.std::__1::__tree_node_base"*
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 2
  %63 = bitcast %"class.std::__1::__tree_end_node"* %62 to %"class.std::__1::__tree_end_node"**
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, %61
  br i1 %67, label %59, label %68

68:                                               ; preds = %59
  %69 = bitcast %"class.std::__1::__tree_end_node"* %64 to %"class.std::__1::__tree_node_base"*
  br label %70

70:                                               ; preds = %54, %68
  %71 = phi %"class.std::__1::__tree_node_base"* [ %69, %68 ], [ %55, %54 ]
  %72 = ptrtoint %"class.std::__1::__tree_node_base"* %71 to i64
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 1
  %74 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %76 to i64
  %81 = select i1 %77, i64 %79, i64 %80
  %82 = bitcast %"class.std::__1::__tree_node_base"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 1, i32 1
  %87 = bitcast %"class.std::__1::__tree_node_base"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = zext i8 %84 to i64
  %90 = select i1 %85, i64 %88, i64 %89
  %91 = icmp ult i64 %81, %90
  %92 = select i1 %91, i64 %81, i64 %90
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %105, label %94

94:                                               ; preds = %70
  %95 = bitcast %"class.std::__1::__tree_node_base"* %73 to i8**
  %96 = load i8*, i8** %95, align 8
  %97 = bitcast %"class.std::__1::__tree_node_base"* %73 to i8*
  %98 = select i1 %85, i8* %96, i8* %97
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %102 = select i1 %77, i8* %100, i8* %101
  %103 = tail call i32 @memcmp(i8* %98, i8* %102, i64 %92) #14
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %94, %70
  %106 = icmp ult i64 %90, %81
  br i1 %106, label %109, label %118

107:                                              ; preds = %94
  %108 = icmp slt i32 %103, 0
  br i1 %108, label %109, label %118

109:                                              ; preds = %46, %105, %107
  %110 = phi i64 [ %72, %107 ], [ %72, %105 ], [ %6, %46 ]
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %111, label %112, label %114

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %208

114:                                              ; preds = %109
  %115 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %110, i64* %115, align 8
  %116 = inttoptr i64 %110 to %"class.std::__1::__tree_node_base"*
  %117 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %116, i64 0, i32 1
  br label %208

118:                                              ; preds = %105, %107
  %119 = tail call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_(%"class.std::__1::__tree.976"* %0, %"class.std::__1::__tree_end_node"** dereferenceable(8) %2, %"class.std::__1::basic_string"* dereferenceable(24) %4)
  br label %208

120:                                              ; preds = %42
  br i1 %30, label %135, label %121

121:                                              ; preds = %120
  %122 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8**
  %123 = load i8*, i8** %122, align 8
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  %126 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8*
  %127 = select i1 %14, i8* %123, i8* %126
  %128 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %129 = select i1 %23, i8* %125, i8* %128
  br label %130

130:                                              ; preds = %121, %44
  %131 = phi i8* [ %129, %121 ], [ %35, %44 ]
  %132 = phi i8* [ %127, %121 ], [ %39, %44 ]
  %133 = tail call i32 @memcmp(i8* %132, i8* %131, i64 %29) #14
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %130, %120
  br i1 %28, label %138, label %205

136:                                              ; preds = %130
  %137 = icmp slt i32 %133, 0
  br i1 %137, label %138, label %205

138:                                              ; preds = %135, %136
  %139 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  %141 = icmp eq %"class.std::__1::__tree_node_base"* %140, null
  br i1 %141, label %142, label %150

142:                                              ; preds = %138
  %143 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %144 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %145 = bitcast %"class.std::__1::__tree_end_node"* %144 to %"class.std::__1::__tree_end_node"**
  %146 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %145, align 8
  %147 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 0, i32 0
  %148 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %147, align 8
  %149 = icmp eq %"class.std::__1::__tree_node_base"* %148, %143
  br i1 %149, label %166, label %157

150:                                              ; preds = %138, %150
  %151 = phi %"class.std::__1::__tree_node_base"* [ %153, %150 ], [ %140, %138 ]
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %151, i64 0, i32 0, i32 0
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %155, label %150

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %151, i64 0, i32 0
  br label %166

157:                                              ; preds = %142, %157
  %158 = phi %"class.std::__1::__tree_end_node"** [ %161, %157 ], [ %145, %142 ]
  %159 = bitcast %"class.std::__1::__tree_end_node"** %158 to %"class.std::__1::__tree_node_base"**
  %160 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %159, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %160, i64 0, i32 2
  %162 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %161, align 8
  %163 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %162, i64 0, i32 0
  %164 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %163, align 8
  %165 = icmp eq %"class.std::__1::__tree_node_base"* %164, %160
  br i1 %165, label %166, label %157

166:                                              ; preds = %157, %155, %142
  %167 = phi %"class.std::__1::__tree_end_node"* [ %156, %155 ], [ %146, %142 ], [ %162, %157 ]
  %168 = icmp eq %"class.std::__1::__tree_end_node"* %167, %7
  br i1 %168, label %198, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 4
  %171 = bitcast %"class.std::__1::__tree_end_node"* %170 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  %173 = load i8, i8* %172, align 1
  %174 = icmp slt i8 %173, 0
  %175 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 5
  %176 = bitcast %"class.std::__1::__tree_end_node"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = zext i8 %173 to i64
  %179 = select i1 %174, i64 %177, i64 %178
  %180 = icmp ult i64 %179, %27
  %181 = select i1 %180, i64 %179, i64 %27
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %194, label %183

183:                                              ; preds = %169
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load i8*, i8** %184, align 8
  %186 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %187 = select i1 %23, i8* %185, i8* %186
  %188 = bitcast %"class.std::__1::__tree_end_node"* %170 to i8**
  %189 = load i8*, i8** %188, align 8
  %190 = bitcast %"class.std::__1::__tree_end_node"* %170 to i8*
  %191 = select i1 %174, i8* %189, i8* %190
  %192 = tail call i32 @memcmp(i8* %187, i8* %191, i64 %181) #14
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %183, %169
  %195 = icmp ult i64 %27, %179
  br i1 %195, label %198, label %203

196:                                              ; preds = %183
  %197 = icmp slt i32 %192, 0
  br i1 %197, label %198, label %203

198:                                              ; preds = %194, %166, %196
  br i1 %141, label %199, label %201

199:                                              ; preds = %198
  %200 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %200, align 8
  br label %208

201:                                              ; preds = %198
  store %"class.std::__1::__tree_end_node"* %167, %"class.std::__1::__tree_end_node"** %2, align 8
  %202 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 0, i32 0
  br label %208

203:                                              ; preds = %194, %196
  %204 = tail call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_(%"class.std::__1::__tree.976"* %0, %"class.std::__1::__tree_end_node"** dereferenceable(8) %2, %"class.std::__1::basic_string"* dereferenceable(24) %4)
  br label %208

205:                                              ; preds = %135, %136
  %206 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %206, align 8
  %207 = bitcast %"class.std::__1::__tree_node_base"** %3 to i64*
  store i64 %6, i64* %207, align 8
  br label %208

208:                                              ; preds = %199, %201, %203, %112, %114, %118, %205
  %209 = phi %"class.std::__1::__tree_node_base"** [ %3, %205 ], [ %113, %112 ], [ %117, %114 ], [ %119, %118 ], [ %139, %199 ], [ %202, %201 ], [ %204, %203 ]
  ret %"class.std::__1::__tree_node_base"** %209
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_(%"class.std::__1::__tree.976"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.976", %"class.std::__1::__tree.976"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.976", %"class.std::__1::__tree.976"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__value_type"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #14
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #14
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !3
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare void @_ZN6webrtc18RtpCodecCapabilityC1Ev(%"struct.webrtc::RtpCodecCapability"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"struct.webrtc::RtpCodecCapability"* @_ZN3WTF6VectorIN6webrtc18RtpCodecCapabilityELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.960"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.960", %"class.WTF::Vector.960"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.16, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.960", %"class.WTF::Vector.960"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.webrtc::RtpCodecCapability"*, %"struct.webrtc::RtpCodecCapability"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.webrtc::RtpCodecCapability", %"struct.webrtc::RtpCodecCapability"* %24, i64 %25
  ret %"struct.webrtc::RtpCodecCapability"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN6webrtc28RtpHeaderExtensionCapabilityELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.998"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %38

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.998", %"class.WTF::Vector.998"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.webrtc::RtpHeaderExtensionCapability"*, %"struct.webrtc::RtpHeaderExtensionCapability"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.998", %"class.WTF::Vector.998"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.998"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.998", %"class.WTF::Vector.998"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %36, label %14

14:                                               ; preds = %4, %30
  %15 = phi %"struct.webrtc::RtpHeaderExtensionCapability"* [ %34, %30 ], [ %6, %4 ]
  %16 = phi %"struct.webrtc::RtpHeaderExtensionCapability"* [ %33, %30 ], [ null, %4 ]
  %17 = bitcast %"struct.webrtc::RtpHeaderExtensionCapability"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"struct.webrtc::RtpHeaderExtensionCapability"* %16 to i8*
  %23 = bitcast %"struct.webrtc::RtpHeaderExtensionCapability"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false) #14
  br label %30

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %16, i64 0, i32 0
  %26 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %25, i8* %27, i64 %29) #14
  br label %30

30:                                               ; preds = %24, %21
  %31 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 16, i1 false) #14
  tail call void @_ZN6webrtc28RtpHeaderExtensionCapabilityD1Ev(%"struct.webrtc::RtpHeaderExtensionCapability"* %15) #14
  %33 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %16, i64 1
  %34 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %15, i64 1
  %35 = icmp eq %"struct.webrtc::RtpHeaderExtensionCapability"* %34, %10
  br i1 %35, label %36, label %14

36:                                               ; preds = %30, %4
  %37 = bitcast %"struct.webrtc::RtpHeaderExtensionCapability"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %37) #14
  br label %85

38:                                               ; preds = %2
  %39 = zext i32 %1 to i64
  %40 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN6webrtc28RtpHeaderExtensionCapabilityEEEmm(i64 %39) #14
  %41 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %40, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN6webrtc28RtpHeaderExtensionCapabilityEEEPKcv, i64 0, i64 0)) #14
  %42 = udiv i64 %40, 40
  %43 = ptrtoint i8* %41 to i64
  %44 = getelementptr inbounds %"class.WTF::Vector.998", %"class.WTF::Vector.998"* %0, i64 0, i32 0, i32 0, i32 0
  %45 = load %"struct.webrtc::RtpHeaderExtensionCapability"*, %"struct.webrtc::RtpHeaderExtensionCapability"** %44, align 8
  %46 = getelementptr inbounds %"class.WTF::Vector.998", %"class.WTF::Vector.998"* %0, i64 0, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %45, i64 %48
  %50 = icmp eq i32 %47, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %38
  %52 = bitcast %"struct.webrtc::RtpHeaderExtensionCapability"* %45 to i8*
  br label %80

53:                                               ; preds = %38
  %54 = bitcast i8* %41 to %"struct.webrtc::RtpHeaderExtensionCapability"*
  br label %55

55:                                               ; preds = %53, %71
  %56 = phi %"struct.webrtc::RtpHeaderExtensionCapability"* [ %75, %71 ], [ %45, %53 ]
  %57 = phi %"struct.webrtc::RtpHeaderExtensionCapability"* [ %74, %71 ], [ %54, %53 ]
  %58 = bitcast %"struct.webrtc::RtpHeaderExtensionCapability"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %55
  %63 = bitcast %"struct.webrtc::RtpHeaderExtensionCapability"* %57 to i8*
  %64 = bitcast %"struct.webrtc::RtpHeaderExtensionCapability"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #14
  br label %71

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %57, i64 0, i32 0
  %67 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %66, i8* %68, i64 %70) #14
  br label %71

71:                                               ; preds = %65, %62
  %72 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %57, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %56, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 16, i1 false) #14
  tail call void @_ZN6webrtc28RtpHeaderExtensionCapabilityD1Ev(%"struct.webrtc::RtpHeaderExtensionCapability"* %56) #14
  %74 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %57, i64 1
  %75 = getelementptr inbounds %"struct.webrtc::RtpHeaderExtensionCapability", %"struct.webrtc::RtpHeaderExtensionCapability"* %56, i64 1
  %76 = icmp eq %"struct.webrtc::RtpHeaderExtensionCapability"* %75, %49
  br i1 %76, label %77, label %55

77:                                               ; preds = %71
  %78 = bitcast %"class.WTF::Vector.998"* %0 to i8**
  %79 = load i8*, i8** %78, align 8
  br label %80

80:                                               ; preds = %51, %77
  %81 = phi i8* [ %79, %77 ], [ %52, %51 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %81) #14
  %82 = bitcast %"class.WTF::Vector.998"* %0 to i64*
  store atomic i64 %43, i64* %82 monotonic, align 8
  %83 = trunc i64 %42 to i32
  %84 = getelementptr inbounds %"class.WTF::Vector.998", %"class.WTF::Vector.998"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %83, i32* %84, align 8
  br label %85

85:                                               ; preds = %80, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN6webrtc28RtpHeaderExtensionCapabilityEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 53634662
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 53634662) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.19, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = mul i64 %0, 40
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

declare void @_ZN6webrtc28RtpHeaderExtensionCapabilityC1EN4absl11string_viewEiNS_23RtpTransceiverDirectionE(%"struct.webrtc::RtpHeaderExtensionCapability"*, i8*, i64, i32, i32) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_31RTCRtpHeaderExtensionCapabilityEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.992"*, %"class.blink::RTCRtpHeaderExtensionCapability"** dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.992", %"class.WTF::Vector.992"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.992", %"class.WTF::Vector.992"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_31RTCRtpHeaderExtensionCapabilityEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.992"* %0, i32 %14) #14
  %15 = getelementptr inbounds %"class.WTF::Vector.992", %"class.WTF::Vector.992"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.995"*, %"class.blink::Member.995"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.995", %"class.blink::Member.995"* %16, i64 %18
  %20 = bitcast %"class.blink::RTCRtpHeaderExtensionCapability"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.995"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #14
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_31RTCRtpHeaderExtensionCapabilityEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.992"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.992", %"class.WTF::Vector.992"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.992", %"class.WTF::Vector.992"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.995"*, %"class.blink::Member.995"** %8, align 8
  %10 = icmp eq %"class.blink::Member.995"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEEEmm(i64 %11) #14
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #14
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.992"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #14
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.995"*, %"class.blink::Member.995"** %8, align 8
  %26 = icmp eq %"class.blink::Member.995"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.995"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #14
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #14
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #14
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.16, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0)) #14
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #14
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_31RTCRtpHeaderExtensionCapabilityEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.992"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_31RTCRtpHeaderExtensionCapabilityEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.992"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.992"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.992", %"class.WTF::Vector.992"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.992"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.992", %"class.WTF::Vector.992"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #14
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #14
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEEEmm(i64 %14) #14
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #14
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.992", %"class.WTF::Vector.992"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.995"*, %"class.blink::Member.995"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.992", %"class.WTF::Vector.992"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.995"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.995"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.992"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #14
  %33 = bitcast %"class.WTF::Vector.992"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #14
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #14
  %42 = bitcast %"class.WTF::Vector.992"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.992", %"class.WTF::Vector.992"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #14
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.21, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.23, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([203 x i8], [203 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_31RTCRtpHeaderExtensionCapabilityEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.995"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.995", %"class.blink::Member.995"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.995"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_31RTCRtpHeaderExtensionCapabilityEE5TraceEPNS_7VisitorEPKv) #14
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_31RTCRtpHeaderExtensionCapabilityEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_31RTCRtpHeaderExtensionCapabilityEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::RTCRtpHeaderExtensionCapability"*
  %4 = bitcast i8* %1 to void (%"class.blink::RTCRtpHeaderExtensionCapability"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::RTCRtpHeaderExtensionCapability"*, %"class.blink::Visitor"*)**, void (%"class.blink::RTCRtpHeaderExtensionCapability"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::RTCRtpHeaderExtensionCapability"*, %"class.blink::Visitor"*)*, void (%"class.blink::RTCRtpHeaderExtensionCapability"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::RTCRtpHeaderExtensionCapability"*, %"class.blink::Visitor"*)*, void (%"class.blink::RTCRtpHeaderExtensionCapability"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::RTCRtpHeaderExtensionCapability"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17RTCPeerConnectionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::RTCPeerConnection"*
  tail call void @_ZNK5blink17RTCPeerConnection5TraceEPNS_7VisitorE(%"class.blink::RTCPeerConnection"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

declare void @_ZNK5blink17RTCPeerConnection5TraceEPNS_7VisitorE(%"class.blink::RTCPeerConnection"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12RTCRtpSenderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::RTCRtpSender"*
  tail call void @_ZNK5blink12RTCRtpSender5TraceEPNS_7VisitorE(%"class.blink::RTCRtpSender"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

declare void @_ZNK5blink12RTCRtpSender5TraceEPNS_7VisitorE(%"class.blink::RTCRtpSender"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14RTCRtpReceiverEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::RTCRtpReceiver"*
  tail call void @_ZNK5blink14RTCRtpReceiver5TraceEPNS_7VisitorE(%"class.blink::RTCRtpReceiver"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

declare void @_ZNK5blink14RTCRtpReceiver5TraceEPNS_7VisitorE(%"class.blink::RTCRtpReceiver"*, %"class.blink::Visitor"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { nounwind readonly }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE16__construct_nodeIJS7_S7_EEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISJ_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE16__construct_nodeIJS7_S7_EEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISJ_EEEEEEDpOT_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE16__construct_nodeIJRKNS_4pairIKS7_S7_EEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISO_EEEEEEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE16__construct_nodeIJRKNS_4pairIKS7_S7_EEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISO_EEEEEEDpOT_"}
