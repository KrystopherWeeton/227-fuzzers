; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/strength_reduction_pass.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/strength_reduction_pass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.spv_position_t = type { i64, i64, i64 }
%"class.spvtools::opt::StrengthReductionPass" = type { %"class.spvtools::opt::Pass.base", i32, i32, [33 x i32] }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.spvtools::opt::InstructionList::iterator" = type { %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" }
%"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.spvtools::opt::analysis::Integer" = type <{ %"class.spvtools::opt::analysis::Type.base", i32, i8, [7 x i8] }>
%"class.spvtools::opt::analysis::Type.base" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32 }>
%"struct.std::__1::default_delete.120" = type { i8 }
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.913" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::pair.913" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::analysis::Void" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Bool" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Float" = type { %"class.spvtools::opt::analysis::Type.base", i32 }
%"class.spvtools::opt::analysis::Vector" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Matrix" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Image" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, i32, i32, i8, i8, i32, i32, i32 }
%"class.spvtools::opt::analysis::Sampler" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::SampledImage" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Array" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, %"struct.spvtools::opt::analysis::Array::LengthInfo" }
%"struct.spvtools::opt::analysis::Array::LengthInfo" = type { i32, %"class.std::__1::vector.3" }
%"class.spvtools::opt::analysis::RuntimeArray" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Struct" = type { %"class.spvtools::opt::analysis::Type.base", %"class.std::__1::vector.922", %"class.std::__1::map.929" }
%"class.std::__1::vector.922" = type { %"class.std::__1::__vector_base.923" }
%"class.std::__1::__vector_base.923" = type { %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"**, %"class.std::__1::__compressed_pair.924" }
%"class.std::__1::__compressed_pair.924" = type { %"struct.std::__1::__compressed_pair_elem.925" }
%"struct.std::__1::__compressed_pair_elem.925" = type { %"class.spvtools::opt::analysis::Type"** }
%"class.std::__1::map.929" = type { %"class.std::__1::__tree.930" }
%"class.std::__1::__tree.930" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.931", %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::analysis::Opaque" = type { %"class.spvtools::opt::analysis::Type.base", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.917" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.918" }
%"struct.std::__1::__compressed_pair_elem.918" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.spvtools::opt::analysis::Pointer" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Function" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.922" }
%"class.spvtools::opt::analysis::Event" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::DeviceEvent" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::ReserveId" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Queue" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Pipe" = type { %"class.spvtools::opt::analysis::Type.base", i32 }
%"class.spvtools::opt::analysis::ForwardPointer" = type { %"class.spvtools::opt::analysis::Type.base", i32, i32, %"class.spvtools::opt::analysis::Pointer"* }
%"class.spvtools::opt::analysis::PipeStorage" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::NamedBarrier" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::AccelerationStructureNV" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::CooperativeMatrixNV" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, i32, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::RayQueryKHR" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools3opt8analysis4TypeD2Ev = comdat any

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt21StrengthReductionPassD0Ev = comdat any

$_ZNK8spvtools3opt21StrengthReductionPass4nameEv = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZN8spvtools3opt8analysis4TypeD0Ev = comdat any

$_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsVoidEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsVoidEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsBoolEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsBoolEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsIntegerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsIntegerEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsFloatEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsFloatEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsVectorEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsVectorEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsMatrixEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsMatrixEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsImageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsImageEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsSamplerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsSamplerEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsSampledImageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsArrayEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsArrayEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsStructEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsStructEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsOpaqueEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsPointerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsPointerEv = comdat any

$_ZN8spvtools3opt8analysis4Type10AsFunctionEv = comdat any

$_ZNK8spvtools3opt8analysis4Type10AsFunctionEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsEventEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsEventEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv = comdat any

$_ZN8spvtools3opt8analysis4Type11AsReserveIdEv = comdat any

$_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsQueueEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsQueueEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsPipeEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsPipeEv = comdat any

$_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv = comdat any

$_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv = comdat any

$_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv = comdat any

$_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv = comdat any

$_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv = comdat any

$_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv = comdat any

$_ZN8spvtools3opt8analysis11TypeManagerD2Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZTVN8spvtools3opt8analysis4TypeE = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

@_ZTVN8spvtools3opt21StrengthReductionPassE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::StrengthReductionPass"*)* @_ZN8spvtools3opt21StrengthReductionPassD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::StrengthReductionPass"*)* @_ZNK8spvtools3opt21StrengthReductionPass4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::StrengthReductionPass"*)* @_ZN8spvtools3opt21StrengthReductionPass7ProcessEv to i8*)] }, align 8
@.str = private unnamed_addr constant [38 x i8] c"ID overflow. Try running compact-ids.\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.ref.tmp = private constant %struct.spv_position_t zeroinitializer, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt8analysis7IntegerE = external unnamed_addr constant { [61 x i8*] }, align 8
@_ZTVN8spvtools3opt8analysis4TypeE = linkonce_odr hidden unnamed_addr constant { [61 x i8*] } { [61 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.3 = private unnamed_addr constant [19 x i8] c"strength-reduction\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt21StrengthReductionPass7ProcessEv(%"class.spvtools::opt::StrengthReductionPass"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::StrengthReductionPass", %"class.spvtools::opt::StrengthReductionPass"* %0, i64 0, i32 1
  %4 = bitcast i32* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 140, i1 false)
  tail call void @_ZN8spvtools3opt21StrengthReductionPass24FindIntTypesAndConstantsEv(%"class.spvtools::opt::StrengthReductionPass"* %0)
  %5 = getelementptr inbounds %"class.spvtools::opt::StrengthReductionPass", %"class.spvtools::opt::StrengthReductionPass"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %8, i64 0, i32 15, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %8, i64 0, i32 15, i32 0, i32 1
  %12 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %11, align 8
  %13 = icmp eq %"class.std::__1::unique_ptr.28"* %10, %12
  br i1 %13, label %67, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %2 to i8*
  %16 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %2 to i64*
  %17 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %2 to %"class.spvtools::utils::IntrusiveNodeBase"**
  br label %18

18:                                               ; preds = %28, %14
  %19 = phi i8 [ 0, %14 ], [ %29, %28 ]
  %20 = phi %"class.std::__1::unique_ptr.28"* [ %10, %14 ], [ %30, %28 ]
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %21, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %22, i64 0, i32 3, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %23, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %22, i64 0, i32 3, i32 0, i32 1
  %26 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %25, align 8
  %27 = icmp eq %"class.std::__1::unique_ptr.40"* %24, %26
  br i1 %27, label %28, label %32

28:                                               ; preds = %43, %18
  %29 = phi i8 [ %19, %18 ], [ %44, %43 ]
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %20, i64 1
  %31 = icmp eq %"class.std::__1::unique_ptr.28"* %30, %12
  br i1 %31, label %67, label %18

32:                                               ; preds = %18, %43
  %33 = phi i8 [ %44, %43 ], [ %19, %18 ]
  %34 = phi %"class.std::__1::unique_ptr.40"* [ %45, %43 ], [ %24, %18 ]
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  %37 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %36, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %38 = bitcast %"class.spvtools::opt::Instruction"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %16, align 8
  %40 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %36, i64 0, i32 2, i32 0, i32 1
  %41 = inttoptr i64 %39 to %"class.spvtools::opt::Instruction"*
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %40, %41
  br i1 %42, label %43, label %47

43:                                               ; preds = %59, %32
  %44 = phi i8 [ %33, %32 ], [ %61, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %34, i64 1
  %46 = icmp eq %"class.std::__1::unique_ptr.40"* %45, %26
  br i1 %46, label %28, label %32

47:                                               ; preds = %32, %59
  %48 = phi i64 [ %64, %59 ], [ %39, %32 ]
  %49 = phi %"class.spvtools::opt::Instruction"* [ %65, %59 ], [ %41, %32 ]
  %50 = phi i8 [ %61, %59 ], [ %33, %32 ]
  %51 = inttoptr i64 %48 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %49, i64 0, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 132
  br i1 %54, label %55, label %59

55:                                               ; preds = %47
  %56 = call zeroext i1 @_ZN8spvtools3opt21StrengthReductionPass25ReplaceMultiplyByPowerOf2EPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::StrengthReductionPass"* %0, %"class.spvtools::opt::InstructionList::iterator"* nonnull %2) #9
  %57 = select i1 %56, i8 1, i8 %50
  %58 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %17, align 8
  br label %59

59:                                               ; preds = %55, %47
  %60 = phi %"class.spvtools::utils::IntrusiveNodeBase"* [ %51, %47 ], [ %58, %55 ]
  %61 = phi i8 [ %50, %47 ], [ %57, %55 ]
  %62 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %60, i64 0, i32 1
  %63 = bitcast %"class.spvtools::opt::Instruction"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  store i64 %64, i64* %16, align 8
  %65 = inttoptr i64 %64 to %"class.spvtools::opt::Instruction"*
  %66 = icmp eq %"class.spvtools::opt::Instruction"* %40, %65
  br i1 %66, label %43, label %47

67:                                               ; preds = %28, %1
  %68 = phi i8 [ 0, %1 ], [ %29, %28 ]
  %69 = and i8 %68, 1
  %70 = icmp eq i8 %69, 0
  %71 = select i1 %70, i32 17, i32 16
  ret i32 %71
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt21StrengthReductionPass24FindIntTypesAndConstantsEv(%"class.spvtools::opt::StrengthReductionPass"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.spvtools::opt::analysis::Integer", align 8
  %3 = alloca %"class.spvtools::opt::analysis::Integer", align 8
  %4 = bitcast %"class.spvtools::opt::analysis::Integer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 48, i1 false)
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::vector.463"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #9
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 0, i32 2
  store i32 2, i32* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis7IntegerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 1
  store i32 32, i32* %9, align 4
  %10 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 2
  store i8 1, i8* %10, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::StrengthReductionPass", %"class.spvtools::opt::StrengthReductionPass"* %0, i64 0, i32 0, i32 2
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = trunc i32 %14 to i16
  %16 = icmp slt i16 %15, 0
  br i1 %16, label %32, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 5
  %19 = tail call i8* @_Znwm(i64 240) #10
  %20 = bitcast i8* %19 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %20, %"class.std::__1::function"* dereferenceable(32) %18, %"class.spvtools::opt::IRContext"* %12) #9
  %21 = ptrtoint i8* %19 to i64
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 20
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %23, align 8
  %25 = bitcast %"class.std::__1::unique_ptr.480"* %22 to i64*
  store i64 %21, i64* %25, align 8
  %26 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %24, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %17
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %24) #9
  %28 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %24 to i8*
  tail call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %27, %17
  %30 = load i32, i32* %13, align 8
  %31 = or i32 %30, 32768
  store i32 %31, i32* %13, align 8
  br label %32

32:                                               ; preds = %1, %29
  %33 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 20, i32 0, i32 0, i32 0
  %34 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %33, align 8
  %35 = bitcast %"class.spvtools::opt::analysis::Integer"* %2 to %"class.spvtools::opt::analysis::Type"*
  %36 = call i32 @_ZNK8spvtools3opt8analysis11TypeManager5GetIdEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %34, %"class.spvtools::opt::analysis::Type"* nonnull %35) #9
  %37 = getelementptr inbounds %"class.spvtools::opt::StrengthReductionPass", %"class.spvtools::opt::StrengthReductionPass"* %0, i64 0, i32 1
  store i32 %36, i32* %37, align 4
  %38 = bitcast %"class.spvtools::opt::analysis::Integer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %38) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 48, i1 false)
  %39 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 0, i32 1
  %41 = bitcast %"class.std::__1::vector.463"* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #9
  %42 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 0, i32 2
  store i32 2, i32* %42, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis7IntegerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %43 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 1
  store i32 32, i32* %43, align 4
  %44 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 2
  store i8 0, i8* %44, align 8
  %45 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 11
  %47 = load i32, i32* %46, align 8
  %48 = trunc i32 %47 to i16
  %49 = icmp slt i16 %48, 0
  br i1 %49, label %65, label %50

50:                                               ; preds = %32
  %51 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 5
  %52 = call i8* @_Znwm(i64 240) #10
  %53 = bitcast i8* %52 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %53, %"class.std::__1::function"* dereferenceable(32) %51, %"class.spvtools::opt::IRContext"* %45) #9
  %54 = ptrtoint i8* %52 to i64
  %55 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 20
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %56, align 8
  %58 = bitcast %"class.std::__1::unique_ptr.480"* %55 to i64*
  store i64 %54, i64* %58, align 8
  %59 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %57, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %50
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %57) #9
  %61 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %57 to i8*
  call void @_ZdlPv(i8* %61) #10
  br label %62

62:                                               ; preds = %60, %50
  %63 = load i32, i32* %46, align 8
  %64 = or i32 %63, 32768
  store i32 %64, i32* %46, align 8
  br label %65

65:                                               ; preds = %32, %62
  %66 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 20, i32 0, i32 0, i32 0
  %67 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %66, align 8
  %68 = bitcast %"class.spvtools::opt::analysis::Integer"* %3 to %"class.spvtools::opt::analysis::Type"*
  %69 = call i32 @_ZNK8spvtools3opt8analysis11TypeManager5GetIdEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %67, %"class.spvtools::opt::analysis::Type"* nonnull %68) #9
  %70 = getelementptr inbounds %"class.spvtools::opt::StrengthReductionPass", %"class.spvtools::opt::StrengthReductionPass"* %0, i64 0, i32 2
  store i32 %69, i32* %70, align 8
  %71 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %72 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %71, i64 0, i32 4, i32 0, i32 0, i32 0
  %73 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %72, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %73, i64 0, i32 14, i32 0, i32 1, i32 0, i32 1
  %75 = bitcast %"class.spvtools::opt::Instruction"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %73, i64 0, i32 14, i32 0, i32 1
  %78 = inttoptr i64 %76 to %"class.spvtools::opt::Instruction"*
  %79 = icmp eq %"class.spvtools::opt::Instruction"* %77, %78
  br i1 %79, label %80, label %135

80:                                               ; preds = %166, %65
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %81 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %40, i64 0, i32 0, i32 0
  %82 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %81, align 8
  %83 = icmp eq %"class.std::__1::vector.3"* %82, null
  br i1 %83, label %107, label %84

84:                                               ; preds = %80
  %85 = bitcast %"class.std::__1::vector.3"* %82 to i8*
  %86 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %87 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %86, align 8
  %88 = icmp eq %"class.std::__1::vector.3"* %87, %82
  br i1 %88, label %105, label %89

89:                                               ; preds = %84, %100
  %90 = phi %"class.std::__1::vector.3"* [ %91, %100 ], [ %87, %84 ]
  %91 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %90, i64 -1
  %92 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %91, i64 0, i32 0, i32 0
  %93 = load i32*, i32** %92, align 8
  %94 = icmp eq i32* %93, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %89
  %96 = ptrtoint i32* %93 to i64
  %97 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %90, i64 -1, i32 0, i32 1
  %98 = bitcast i32** %97 to i64*
  store i64 %96, i64* %98, align 8
  %99 = bitcast i32* %93 to i8*
  call void @_ZdlPv(i8* %99) #10
  br label %100

100:                                              ; preds = %95, %89
  %101 = icmp eq %"class.std::__1::vector.3"* %91, %82
  br i1 %101, label %102, label %89

102:                                              ; preds = %100
  %103 = bitcast %"class.std::__1::vector.463"* %40 to i8**
  %104 = load i8*, i8** %103, align 8
  br label %105

105:                                              ; preds = %102, %84
  %106 = phi i8* [ %104, %102 ], [ %85, %84 ]
  store %"class.std::__1::vector.3"* %82, %"class.std::__1::vector.3"** %86, align 8
  call void @_ZdlPv(i8* %106) #10
  br label %107

107:                                              ; preds = %80, %105
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %38) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %108 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %6, i64 0, i32 0, i32 0
  %109 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %108, align 8
  %110 = icmp eq %"class.std::__1::vector.3"* %109, null
  br i1 %110, label %134, label %111

111:                                              ; preds = %107
  %112 = bitcast %"class.std::__1::vector.3"* %109 to i8*
  %113 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %2, i64 0, i32 0, i32 1, i32 0, i32 1
  %114 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %113, align 8
  %115 = icmp eq %"class.std::__1::vector.3"* %114, %109
  br i1 %115, label %132, label %116

116:                                              ; preds = %111, %127
  %117 = phi %"class.std::__1::vector.3"* [ %118, %127 ], [ %114, %111 ]
  %118 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %117, i64 -1
  %119 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %118, i64 0, i32 0, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %127, label %122

122:                                              ; preds = %116
  %123 = ptrtoint i32* %120 to i64
  %124 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %117, i64 -1, i32 0, i32 1
  %125 = bitcast i32** %124 to i64*
  store i64 %123, i64* %125, align 8
  %126 = bitcast i32* %120 to i8*
  call void @_ZdlPv(i8* %126) #10
  br label %127

127:                                              ; preds = %122, %116
  %128 = icmp eq %"class.std::__1::vector.3"* %118, %109
  br i1 %128, label %129, label %116

129:                                              ; preds = %127
  %130 = bitcast %"class.std::__1::vector.463"* %6 to i8**
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %129, %111
  %133 = phi i8* [ %131, %129 ], [ %112, %111 ]
  store %"class.std::__1::vector.3"* %109, %"class.std::__1::vector.3"** %113, align 8
  call void @_ZdlPv(i8* %133) #10
  br label %134

134:                                              ; preds = %107, %132
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #9
  ret void

135:                                              ; preds = %65, %166
  %136 = phi %"class.spvtools::opt::Instruction"* [ %175, %166 ], [ %78, %65 ]
  %137 = phi i64 [ %170, %166 ], [ %76, %65 ]
  %138 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %136, i64 0, i32 2
  %139 = load i32, i32* %138, align 8
  %140 = icmp eq i32 %139, 43
  br i1 %140, label %141, label %166

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %136, i64 0, i32 3
  %143 = load i8, i8* %142, align 4, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %147, label %145

145:                                              ; preds = %141
  %146 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %136, i32 0) #9
  br label %147

147:                                              ; preds = %141, %145
  %148 = phi i32 [ %146, %145 ], [ 0, %141 ]
  %149 = load i32, i32* %70, align 8
  %150 = icmp eq i32 %148, %149
  br i1 %150, label %151, label %166

151:                                              ; preds = %147
  %152 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %136, i32 2) #9
  %153 = icmp ult i32 %152, 33
  br i1 %153, label %154, label %166

154:                                              ; preds = %151
  %155 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %136, i64 0, i32 4
  %156 = load i8, i8* %155, align 1, !range !2
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %162, label %158

158:                                              ; preds = %154
  %159 = load i8, i8* %142, align 4, !range !2
  %160 = zext i8 %159 to i32
  %161 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %136, i32 %160) #9
  br label %162

162:                                              ; preds = %154, %158
  %163 = phi i32 [ %161, %158 ], [ 0, %154 ]
  %164 = zext i32 %152 to i64
  %165 = getelementptr inbounds %"class.spvtools::opt::StrengthReductionPass", %"class.spvtools::opt::StrengthReductionPass"* %0, i64 0, i32 3, i64 %164
  store i32 %163, i32* %165, align 4
  br label %166

166:                                              ; preds = %151, %162, %147, %135
  %167 = inttoptr i64 %137 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %168 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %167, i64 0, i32 1
  %169 = bitcast %"class.spvtools::opt::Instruction"** %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %172 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %171, i64 0, i32 4, i32 0, i32 0, i32 0
  %173 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %172, align 8
  %174 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %173, i64 0, i32 14, i32 0, i32 1
  %175 = inttoptr i64 %170 to %"class.spvtools::opt::Instruction"*
  %176 = icmp eq %"class.spvtools::opt::Instruction"* %174, %175
  br i1 %176, label %80, label %135
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt21StrengthReductionPass13ScanFunctionsEv(%"class.spvtools::opt::StrengthReductionPass"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::StrengthReductionPass", %"class.spvtools::opt::StrengthReductionPass"* %0, i64 0, i32 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %6 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %6, i64 0, i32 15, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %6, i64 0, i32 15, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.28"* %8, %10
  br i1 %11, label %16, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %2 to i8*
  %14 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %2 to i64*
  %15 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %2 to %"class.spvtools::utils::IntrusiveNodeBase"**
  br label %20

16:                                               ; preds = %30, %1
  %17 = phi i8 [ 0, %1 ], [ %31, %30 ]
  %18 = and i8 %17, 1
  %19 = icmp ne i8 %18, 0
  ret i1 %19

20:                                               ; preds = %12, %30
  %21 = phi i8 [ 0, %12 ], [ %31, %30 ]
  %22 = phi %"class.std::__1::unique_ptr.28"* [ %8, %12 ], [ %32, %30 ]
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %23, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %24, i64 0, i32 3, i32 0, i32 0
  %26 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %24, i64 0, i32 3, i32 0, i32 1
  %28 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %27, align 8
  %29 = icmp eq %"class.std::__1::unique_ptr.40"* %26, %28
  br i1 %29, label %30, label %34

30:                                               ; preds = %45, %20
  %31 = phi i8 [ %21, %20 ], [ %46, %45 ]
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %22, i64 1
  %33 = icmp eq %"class.std::__1::unique_ptr.28"* %32, %10
  br i1 %33, label %16, label %20

34:                                               ; preds = %20, %45
  %35 = phi i8 [ %46, %45 ], [ %21, %20 ]
  %36 = phi %"class.std::__1::unique_ptr.40"* [ %47, %45 ], [ %26, %20 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %37, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %39 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %38, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %40 = bitcast %"class.spvtools::opt::Instruction"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* %14, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %38, i64 0, i32 2, i32 0, i32 1
  %43 = inttoptr i64 %41 to %"class.spvtools::opt::Instruction"*
  %44 = icmp eq %"class.spvtools::opt::Instruction"* %42, %43
  br i1 %44, label %45, label %49

45:                                               ; preds = %61, %34
  %46 = phi i8 [ %35, %34 ], [ %63, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %36, i64 1
  %48 = icmp eq %"class.std::__1::unique_ptr.40"* %47, %28
  br i1 %48, label %30, label %34

49:                                               ; preds = %34, %61
  %50 = phi i64 [ %66, %61 ], [ %41, %34 ]
  %51 = phi %"class.spvtools::opt::Instruction"* [ %67, %61 ], [ %43, %34 ]
  %52 = phi i8 [ %63, %61 ], [ %35, %34 ]
  %53 = inttoptr i64 %50 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %51, i64 0, i32 2
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 132
  br i1 %56, label %57, label %61

57:                                               ; preds = %49
  %58 = call zeroext i1 @_ZN8spvtools3opt21StrengthReductionPass25ReplaceMultiplyByPowerOf2EPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::StrengthReductionPass"* %0, %"class.spvtools::opt::InstructionList::iterator"* nonnull %2)
  %59 = select i1 %58, i8 1, i8 %52
  %60 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %15, align 8
  br label %61

61:                                               ; preds = %57, %49
  %62 = phi %"class.spvtools::utils::IntrusiveNodeBase"* [ %53, %49 ], [ %60, %57 ]
  %63 = phi i8 [ %52, %49 ], [ %59, %57 ]
  %64 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %62, i64 0, i32 1
  %65 = bitcast %"class.spvtools::opt::Instruction"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %14, align 8
  %67 = inttoptr i64 %66 to %"class.spvtools::opt::Instruction"*
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %42, %67
  br i1 %68, label %45, label %49
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt21StrengthReductionPass25ReplaceMultiplyByPowerOf2EPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::StrengthReductionPass"* nocapture, %"class.spvtools::opt::InstructionList::iterator"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"struct.spvtools::opt::Operand", align 8
  %5 = alloca %"class.spvtools::utils::SmallVector", align 8
  %6 = alloca %"class.std::__1::unique_ptr.21", align 8
  %7 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 3
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %9, i32 0) #9
  br label %15

15:                                               ; preds = %2, %13
  %16 = phi i32 [ %14, %13 ], [ 0, %2 ]
  %17 = getelementptr inbounds %"class.spvtools::opt::StrengthReductionPass", %"class.spvtools::opt::StrengthReductionPass"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %32, label %20

20:                                               ; preds = %15
  %21 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %21, i64 0, i32 3
  %23 = load i8, i8* %22, align 4, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %21, i32 0) #9
  br label %27

27:                                               ; preds = %20, %25
  %28 = phi i32 [ %26, %25 ], [ 0, %20 ]
  %29 = getelementptr inbounds %"class.spvtools::opt::StrengthReductionPass", %"class.spvtools::opt::StrengthReductionPass"* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %346

32:                                               ; preds = %27, %15
  %33 = getelementptr inbounds %"class.spvtools::opt::StrengthReductionPass", %"class.spvtools::opt::StrengthReductionPass"* %0, i64 0, i32 0, i32 2
  %34 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 3
  %36 = load i8, i8* %35, align 4, !range !2
  %37 = icmp eq i8 %36, 0
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 4
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = icmp eq i8 %39, 0
  %41 = select i1 %40, i32 1, i32 2
  %42 = xor i1 %40, true
  %43 = zext i1 %42 to i32
  %44 = select i1 %37, i32 %43, i32 %41
  %45 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %34, i32 %44) #9
  %46 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %46, i64 0, i32 11
  %48 = load i32, i32* %47, align 8
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %75

51:                                               ; preds = %32
  %52 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %46, i64 0, i32 4, i32 0, i32 0, i32 0
  %53 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %52, align 8
  %54 = tail call i8* @_Znwm(i64 104) #10
  %55 = bitcast i8* %54 to %"class.spvtools::opt::analysis::DefUseManager"*
  %56 = getelementptr inbounds i8, i8* %54, i64 32
  %57 = bitcast i8* %56 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 32, i1 false) #9
  store i32 1065353216, i32* %57, align 4
  %58 = getelementptr inbounds i8, i8* %54, i64 48
  %59 = getelementptr inbounds i8, i8* %54, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false) #9
  %60 = bitcast i8* %59 to i8**
  store i8* %58, i8** %60, align 8
  %61 = getelementptr inbounds i8, i8* %54, i64 64
  %62 = getelementptr inbounds i8, i8* %54, i64 96
  %63 = bitcast i8* %62 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 32, i1 false) #9
  store i32 1065353216, i32* %63, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %55, %"class.spvtools::opt::Module"* %53) #9
  %64 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %46, i64 0, i32 6
  %65 = ptrtoint i8* %54 to i64
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %64, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %66, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.62"* %64 to i64*
  store i64 %65, i64* %68, align 8
  %69 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %67, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %51
  %71 = bitcast %"class.std::__1::unique_ptr.62"* %64 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %71, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %67) #9
  br label %72

72:                                               ; preds = %70, %51
  %73 = load i32, i32* %47, align 8
  %74 = or i32 %73, 1
  store i32 %74, i32* %47, align 8
  br label %75

75:                                               ; preds = %32, %72
  %76 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %46, i64 0, i32 6, i32 0, i32 0, i32 0
  %77 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %76, align 8
  %78 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %77, i32 %45) #9
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %78, i64 0, i32 2
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %80, 43
  br i1 %81, label %82, label %327

82:                                               ; preds = %75
  %83 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %78, i32 2) #9
  %84 = tail call i32 @llvm.ctpop.i32(i32 %83) #9, !range !3
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %327

86:                                               ; preds = %379, %82
  %87 = phi i64 [ 1, %82 ], [ 0, %379 ]
  %88 = phi i32 [ %83, %82 ], [ %380, %379 ]
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %86, %91
  %92 = phi i32 [ %94, %91 ], [ 0, %86 ]
  %93 = phi i32 [ %95, %91 ], [ %88, %86 ]
  %94 = add i32 %92, 1
  %95 = lshr i32 %93, 1
  %96 = and i32 %93, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %91, label %98

98:                                               ; preds = %91, %86
  %99 = phi i32 [ 0, %86 ], [ %94, %91 ]
  %100 = tail call i32 @_ZN8spvtools3opt21StrengthReductionPass13GetConstantIdEj(%"class.spvtools::opt::StrengthReductionPass"* %0, i32 %99)
  %101 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %102 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %101, i64 0, i32 4, i32 0, i32 0, i32 0
  %103 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %102, align 8
  %104 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %103) #9
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %118

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %101, i64 0, i32 5, i32 0, i32 2
  %108 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %107, align 8
  %109 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %108, i64 0, i32 2
  %110 = load i8, i8* %109, align 8, !range !2
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %112, label %118

112:                                              ; preds = %106
  %113 = tail call i8* @_Znwm(i64 48) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %113, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i64 37, i1 false) #9
  %114 = getelementptr inbounds i8, i8* %113, i64 37
  store i8 0, i8* %114, align 1
  %115 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %101, i64 0, i32 5, i32 0, i32 1, i32 0
  %116 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %115, align 8
  %117 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %101, i64 0, i32 5, i32 0, i32 0
  tail call void %116(%"union.std::__1::__function::__policy_storage"* %117, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp, i8* nonnull %113) #9
  tail call void @_ZdlPv(i8* nonnull %113) #10
  br label %118

118:                                              ; preds = %98, %106, %112
  %119 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #9
  %120 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %122 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 0, i64 24, i1 false) #9
  %123 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  %124 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %123, i64 0, i32 4
  %125 = load i8, i8* %124, align 1, !range !2
  %126 = icmp eq i8 %125, 0
  %127 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %123, i64 0, i32 6, i32 0, i32 0
  %128 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %127, align 8
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %123, i64 0, i32 3
  %130 = load i8, i8* %129, align 4, !range !2
  %131 = icmp eq i8 %130, 0
  %132 = xor i1 %126, true
  %133 = zext i1 %132 to i64
  %134 = select i1 %126, i64 1, i64 2
  %135 = select i1 %131, i64 %133, i64 %134
  %136 = add nuw nsw i64 %87, %135
  %137 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %128, i64 %136
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* nonnull %3, %"struct.spvtools::opt::Operand"* dereferenceable(48) %137) #9
  %138 = bitcast %"struct.spvtools::opt::Operand"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %138) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %138, i8 -86, i64 40, i1 false)
  %139 = bitcast %"class.spvtools::utils::SmallVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %139) #9
  %140 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %140, align 8
  %141 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 1
  %142 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 2
  %143 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 3, i64 0
  %144 = bitcast i32** %142 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %143, %"struct.std::__1::aligned_storage<4, 4>::type"** %144, align 8
  %145 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4
  %146 = bitcast %"class.std::__1::unique_ptr.0"* %145 to i64*
  store i64 0, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %143 to i32*
  store i64 1, i64* %141, align 8
  store i32 %100, i32* %147, align 8
  %148 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 0
  store i32 1, i32* %148, align 8
  %149 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 1
  %150 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %149, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %150, align 8
  %151 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 1, i32 1
  store i64 0, i64* %151, align 8
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 1, i32 2
  %153 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 1, i32 3, i64 0
  %154 = bitcast i32** %152 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %153, %"struct.std::__1::aligned_storage<4, 4>::type"** %154, align 8
  %155 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 1, i32 4
  %156 = bitcast %"class.std::__1::unique_ptr.0"* %155 to i64*
  store i64 0, i64* %156, align 8
  %157 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %149, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %5) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %140, align 8
  %158 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %159 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %158, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %158, align 8
  %160 = icmp eq %"class.std::__1::vector.3"* %159, null
  br i1 %160, label %172, label %161

161:                                              ; preds = %118
  %162 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %159, i64 0, i32 0, i32 0
  %163 = load i32*, i32** %162, align 8
  %164 = icmp eq i32* %163, null
  br i1 %164, label %170, label %165

165:                                              ; preds = %161
  %166 = ptrtoint i32* %163 to i64
  %167 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %159, i64 0, i32 0, i32 1
  %168 = bitcast i32** %167 to i64*
  store i64 %166, i64* %168, align 8
  %169 = bitcast i32* %163 to i8*
  call void @_ZdlPv(i8* %169) #10
  br label %170

170:                                              ; preds = %165, %161
  %171 = bitcast %"class.std::__1::vector.3"* %159 to i8*
  call void @_ZdlPv(i8* %171) #10
  br label %172

172:                                              ; preds = %118, %170
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %139) #9
  %173 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %121, align 8
  %174 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %122, align 8
  %175 = icmp eq %"struct.spvtools::opt::Operand"* %173, %174
  br i1 %175, label %191, label %176

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %173, i64 0, i32 0
  %178 = load i32, i32* %148, align 8
  store i32 %178, i32* %177, align 8
  %179 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %173, i64 0, i32 1
  %180 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %179, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %180, align 8
  %181 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %173, i64 0, i32 1, i32 1
  store i64 0, i64* %181, align 8
  %182 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %173, i64 0, i32 1, i32 2
  %183 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %173, i64 0, i32 1, i32 3, i64 0
  %184 = bitcast i32** %182 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %183, %"struct.std::__1::aligned_storage<4, 4>::type"** %184, align 8
  %185 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %173, i64 0, i32 1, i32 4
  %186 = bitcast %"class.std::__1::unique_ptr.0"* %185 to i64*
  store i64 0, i64* %186, align 8
  %187 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %179, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %149) #9
  %188 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %173, i64 1
  %189 = ptrtoint %"struct.spvtools::opt::Operand"* %188 to i64
  %190 = bitcast %"struct.spvtools::opt::Operand"** %121 to i64*
  store i64 %189, i64* %190, align 8
  br label %192

191:                                              ; preds = %172
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* nonnull %3, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %4) #9
  br label %192

192:                                              ; preds = %176, %191
  %193 = bitcast %"class.std::__1::unique_ptr.21"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #9
  %194 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %194, align 8
  %195 = call i8* @_Znwm(i64 112) #10
  %196 = bitcast i8* %195 to %"class.spvtools::opt::Instruction"*
  %197 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %198 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  %199 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %198, i64 0, i32 3
  %200 = load i8, i8* %199, align 4, !range !2
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %204, label %202

202:                                              ; preds = %192
  %203 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %198, i32 0) #9
  br label %204

204:                                              ; preds = %192, %202
  %205 = phi i32 [ %203, %202 ], [ 0, %192 ]
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %196, %"class.spvtools::opt::IRContext"* %197, i32 196, i32 %205, i32 %104, %"class.std::__1::vector"* nonnull dereferenceable(24) %3) #9
  %206 = ptrtoint i8* %195 to i64
  %207 = bitcast %"class.std::__1::unique_ptr.21"* %6 to i64*
  store i64 %206, i64* %207, align 8
  %208 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #9
  call void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* nonnull sret %7, %"class.spvtools::opt::InstructionList::iterator"* %1, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %6) #9
  %209 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %7 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %1 to i64*
  store i64 %210, i64* %211, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #9
  %212 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %213 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %212, i64 0, i32 11
  %214 = load i32, i32* %213, align 8
  %215 = and i32 %214, 1
  %216 = icmp eq i32 %215, 0
  %217 = inttoptr i64 %210 to %"class.spvtools::opt::Instruction"*
  br i1 %216, label %218, label %243

218:                                              ; preds = %204
  %219 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %212, i64 0, i32 4, i32 0, i32 0, i32 0
  %220 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %219, align 8
  %221 = call i8* @_Znwm(i64 104) #10
  %222 = bitcast i8* %221 to %"class.spvtools::opt::analysis::DefUseManager"*
  %223 = getelementptr inbounds i8, i8* %221, i64 32
  %224 = bitcast i8* %223 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %221, i8 0, i64 32, i1 false) #9
  store i32 1065353216, i32* %224, align 4
  %225 = getelementptr inbounds i8, i8* %221, i64 48
  %226 = getelementptr inbounds i8, i8* %221, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %225, i8 0, i64 16, i1 false) #9
  %227 = bitcast i8* %226 to i8**
  store i8* %225, i8** %227, align 8
  %228 = getelementptr inbounds i8, i8* %221, i64 64
  %229 = getelementptr inbounds i8, i8* %221, i64 96
  %230 = bitcast i8* %229 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %228, i8 0, i64 32, i1 false) #9
  store i32 1065353216, i32* %230, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %222, %"class.spvtools::opt::Module"* %220) #9
  %231 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %212, i64 0, i32 6
  %232 = ptrtoint i8* %221 to i64
  %233 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %231, i64 0, i32 0, i32 0, i32 0
  %234 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %233, align 8
  %235 = bitcast %"class.std::__1::unique_ptr.62"* %231 to i64*
  store i64 %232, i64* %235, align 8
  %236 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %234, null
  br i1 %236, label %239, label %237

237:                                              ; preds = %218
  %238 = bitcast %"class.std::__1::unique_ptr.62"* %231 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %238, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %234) #9
  br label %239

239:                                              ; preds = %237, %218
  %240 = load i32, i32* %213, align 8
  %241 = or i32 %240, 1
  store i32 %241, i32* %213, align 8
  %242 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  br label %243

243:                                              ; preds = %204, %239
  %244 = phi %"class.spvtools::opt::Instruction"* [ %217, %204 ], [ %242, %239 ]
  %245 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %212, i64 0, i32 6, i32 0, i32 0, i32 0
  %246 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %245, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %246, %"class.spvtools::opt::Instruction"* %244) #9
  %247 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %1 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %248 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %247, align 8
  %249 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %248, i64 0, i32 1
  %250 = bitcast %"class.spvtools::opt::Instruction"** %249 to i64*
  %251 = load i64, i64* %250, align 8
  store i64 %251, i64* %211, align 8
  %252 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %253 = inttoptr i64 %251 to %"class.spvtools::opt::Instruction"*
  %254 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %253, i64 0, i32 4
  %255 = load i8, i8* %254, align 1, !range !2
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %262, label %257

257:                                              ; preds = %243
  %258 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %253, i64 0, i32 3
  %259 = load i8, i8* %258, align 4, !range !2
  %260 = zext i8 %259 to i32
  %261 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %253, i32 %260) #9
  br label %262

262:                                              ; preds = %243, %257
  %263 = phi i32 [ %261, %257 ], [ 0, %243 ]
  %264 = call zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"* %252, i32 %263, i32 %104) #9
  %265 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  %266 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %265, i64 0, i32 0, i32 2
  %267 = bitcast %"class.spvtools::opt::Instruction"** %266 to i64*
  %268 = load i64, i64* %267, align 8
  store i64 %268, i64* %211, align 8
  %269 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %270 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %269, %"class.spvtools::opt::Instruction"* %265) #9
  %271 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %194, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %194, align 8
  %272 = icmp eq %"class.spvtools::opt::Instruction"* %271, null
  br i1 %272, label %278, label %273

273:                                              ; preds = %262
  %274 = bitcast %"class.spvtools::opt::Instruction"* %271 to void (%"class.spvtools::opt::Instruction"*)***
  %275 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %274, align 8
  %276 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %275, i64 1
  %277 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %276, align 8
  call void %277(%"class.spvtools::opt::Instruction"* nonnull %271) #9
  br label %278

278:                                              ; preds = %262, %273
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #9
  %279 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %279, align 8
  %280 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %281 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %280, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %280, align 8
  %282 = icmp eq %"class.std::__1::vector.3"* %281, null
  br i1 %282, label %294, label %283

283:                                              ; preds = %278
  %284 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %281, i64 0, i32 0, i32 0
  %285 = load i32*, i32** %284, align 8
  %286 = icmp eq i32* %285, null
  br i1 %286, label %292, label %287

287:                                              ; preds = %283
  %288 = ptrtoint i32* %285 to i64
  %289 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %281, i64 0, i32 0, i32 1
  %290 = bitcast i32** %289 to i64*
  store i64 %288, i64* %290, align 8
  %291 = bitcast i32* %285 to i8*
  call void @_ZdlPv(i8* %291) #10
  br label %292

292:                                              ; preds = %287, %283
  %293 = bitcast %"class.std::__1::vector.3"* %281 to i8*
  call void @_ZdlPv(i8* %293) #10
  br label %294

294:                                              ; preds = %278, %292
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %138) #9
  %295 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %120, align 8
  %296 = icmp eq %"struct.spvtools::opt::Operand"* %295, null
  br i1 %296, label %326, label %297

297:                                              ; preds = %294
  %298 = bitcast %"struct.spvtools::opt::Operand"* %295 to i8*
  %299 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %121, align 8
  %300 = icmp eq %"struct.spvtools::opt::Operand"* %299, %295
  br i1 %300, label %324, label %301

301:                                              ; preds = %297, %319
  %302 = phi %"struct.spvtools::opt::Operand"* [ %303, %319 ], [ %299, %297 ]
  %303 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %302, i64 -1
  %304 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %302, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %304, align 8
  %305 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %302, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %306 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %305, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %305, align 8
  %307 = icmp eq %"class.std::__1::vector.3"* %306, null
  br i1 %307, label %319, label %308

308:                                              ; preds = %301
  %309 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %306, i64 0, i32 0, i32 0
  %310 = load i32*, i32** %309, align 8
  %311 = icmp eq i32* %310, null
  br i1 %311, label %317, label %312

312:                                              ; preds = %308
  %313 = ptrtoint i32* %310 to i64
  %314 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %306, i64 0, i32 0, i32 1
  %315 = bitcast i32** %314 to i64*
  store i64 %313, i64* %315, align 8
  %316 = bitcast i32* %310 to i8*
  call void @_ZdlPv(i8* %316) #10
  br label %317

317:                                              ; preds = %312, %308
  %318 = bitcast %"class.std::__1::vector.3"* %306 to i8*
  call void @_ZdlPv(i8* %318) #10
  br label %319

319:                                              ; preds = %317, %301
  %320 = icmp eq %"struct.spvtools::opt::Operand"* %303, %295
  br i1 %320, label %321, label %301

321:                                              ; preds = %319
  %322 = bitcast %"class.std::__1::vector"* %3 to i8**
  %323 = load i8*, i8** %322, align 8
  br label %324

324:                                              ; preds = %321, %297
  %325 = phi i8* [ %323, %321 ], [ %298, %297 ]
  store %"struct.spvtools::opt::Operand"* %295, %"struct.spvtools::opt::Operand"** %121, align 8
  call void @_ZdlPv(i8* %325) #10
  br label %326

326:                                              ; preds = %294, %324
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #9
  br label %346

327:                                              ; preds = %82, %75
  %328 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  %329 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %328, i64 0, i32 3
  %330 = load i8, i8* %329, align 4, !range !2
  %331 = icmp eq i8 %330, 0
  %332 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %328, i64 0, i32 4
  %333 = load i8, i8* %332, align 1, !range !2
  %334 = icmp eq i8 %333, 0
  %335 = select i1 %334, i32 1, i32 2
  %336 = xor i1 %334, true
  %337 = zext i1 %336 to i32
  %338 = select i1 %331, i32 %337, i32 %335
  %339 = add nuw nsw i32 %338, 1
  %340 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %328, i32 %339) #9
  %341 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %342 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %341, i64 0, i32 11
  %343 = load i32, i32* %342, align 8
  %344 = and i32 %343, 1
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %348, label %372

346:                                              ; preds = %372, %379, %326, %27
  %347 = phi i1 [ false, %27 ], [ true, %326 ], [ false, %379 ], [ false, %372 ]
  ret i1 %347

348:                                              ; preds = %327
  %349 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %341, i64 0, i32 4, i32 0, i32 0, i32 0
  %350 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %349, align 8
  %351 = tail call i8* @_Znwm(i64 104) #10
  %352 = bitcast i8* %351 to %"class.spvtools::opt::analysis::DefUseManager"*
  %353 = getelementptr inbounds i8, i8* %351, i64 32
  %354 = bitcast i8* %353 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %351, i8 0, i64 32, i1 false) #9
  store i32 1065353216, i32* %354, align 4
  %355 = getelementptr inbounds i8, i8* %351, i64 48
  %356 = getelementptr inbounds i8, i8* %351, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %355, i8 0, i64 16, i1 false) #9
  %357 = bitcast i8* %356 to i8**
  store i8* %355, i8** %357, align 8
  %358 = getelementptr inbounds i8, i8* %351, i64 64
  %359 = getelementptr inbounds i8, i8* %351, i64 96
  %360 = bitcast i8* %359 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %358, i8 0, i64 32, i1 false) #9
  store i32 1065353216, i32* %360, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %352, %"class.spvtools::opt::Module"* %350) #9
  %361 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %341, i64 0, i32 6
  %362 = ptrtoint i8* %351 to i64
  %363 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %361, i64 0, i32 0, i32 0, i32 0
  %364 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %363, align 8
  %365 = bitcast %"class.std::__1::unique_ptr.62"* %361 to i64*
  store i64 %362, i64* %365, align 8
  %366 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %364, null
  br i1 %366, label %369, label %367

367:                                              ; preds = %348
  %368 = bitcast %"class.std::__1::unique_ptr.62"* %361 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %368, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %364) #9
  br label %369

369:                                              ; preds = %367, %348
  %370 = load i32, i32* %342, align 8
  %371 = or i32 %370, 1
  store i32 %371, i32* %342, align 8
  br label %372

372:                                              ; preds = %369, %327
  %373 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %341, i64 0, i32 6, i32 0, i32 0, i32 0
  %374 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %373, align 8
  %375 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %374, i32 %340) #9
  %376 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %375, i64 0, i32 2
  %377 = load i32, i32* %376, align 8
  %378 = icmp eq i32 %377, 43
  br i1 %378, label %379, label %346

379:                                              ; preds = %372
  %380 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %375, i32 2) #9
  %381 = tail call i32 @llvm.ctpop.i32(i32 %380) #9, !range !3
  %382 = icmp eq i32 %381, 1
  br i1 %382, label %86, label %346
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #2

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt21StrengthReductionPass13GetConstantIdEj(%"class.spvtools::opt::StrengthReductionPass"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::opt::analysis::Integer", align 8
  %4 = alloca %"struct.spvtools::opt::Operand", align 8
  %5 = alloca %"class.spvtools::utils::SmallVector", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.spvtools::opt::StrengthReductionPass", %"class.spvtools::opt::StrengthReductionPass"* %0, i64 0, i32 3, i64 %8
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %304

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.spvtools::opt::StrengthReductionPass", %"class.spvtools::opt::StrengthReductionPass"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %77

16:                                               ; preds = %12
  %17 = bitcast %"class.spvtools::opt::analysis::Integer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 48, i1 false)
  %18 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::vector.463"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #9
  %21 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 0, i32 2
  store i32 2, i32* %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis7IntegerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 1
  store i32 32, i32* %22, align 4
  %23 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 2
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.spvtools::opt::StrengthReductionPass", %"class.spvtools::opt::StrengthReductionPass"* %0, i64 0, i32 0, i32 2
  %25 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %24, align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %25, i64 0, i32 11
  %27 = load i32, i32* %26, align 8
  %28 = trunc i32 %27 to i16
  %29 = icmp slt i16 %28, 0
  br i1 %29, label %45, label %30

30:                                               ; preds = %16
  %31 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %25, i64 0, i32 5
  %32 = tail call i8* @_Znwm(i64 240) #10
  %33 = bitcast i8* %32 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %33, %"class.std::__1::function"* dereferenceable(32) %31, %"class.spvtools::opt::IRContext"* %25) #9
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %25, i64 0, i32 20
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %36, align 8
  %38 = bitcast %"class.std::__1::unique_ptr.480"* %35 to i64*
  store i64 %34, i64* %38, align 8
  %39 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %37, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %30
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %37) #9
  %41 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %37 to i8*
  tail call void @_ZdlPv(i8* %41) #10
  br label %42

42:                                               ; preds = %40, %30
  %43 = load i32, i32* %26, align 8
  %44 = or i32 %43, 32768
  store i32 %44, i32* %26, align 8
  br label %45

45:                                               ; preds = %16, %42
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %25, i64 0, i32 20, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %46, align 8
  %48 = bitcast %"class.spvtools::opt::analysis::Integer"* %3 to %"class.spvtools::opt::analysis::Type"*
  %49 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %47, %"class.spvtools::opt::analysis::Type"* nonnull %48) #9
  store i32 %49, i32* %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %50 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %19, i64 0, i32 0, i32 0
  %51 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %50, align 8
  %52 = icmp eq %"class.std::__1::vector.3"* %51, null
  br i1 %52, label %76, label %53

53:                                               ; preds = %45
  %54 = bitcast %"class.std::__1::vector.3"* %51 to i8*
  %55 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %56 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %55, align 8
  %57 = icmp eq %"class.std::__1::vector.3"* %56, %51
  br i1 %57, label %74, label %58

58:                                               ; preds = %53, %69
  %59 = phi %"class.std::__1::vector.3"* [ %60, %69 ], [ %56, %53 ]
  %60 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %59, i64 -1
  %61 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %60, i64 0, i32 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = icmp eq i32* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %58
  %65 = ptrtoint i32* %62 to i64
  %66 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %59, i64 -1, i32 0, i32 1
  %67 = bitcast i32** %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = bitcast i32* %62 to i8*
  call void @_ZdlPv(i8* %68) #10
  br label %69

69:                                               ; preds = %64, %58
  %70 = icmp eq %"class.std::__1::vector.3"* %60, %51
  br i1 %70, label %71, label %58

71:                                               ; preds = %69
  %72 = bitcast %"class.std::__1::vector.463"* %19 to i8**
  %73 = load i8*, i8** %72, align 8
  br label %74

74:                                               ; preds = %71, %53
  %75 = phi i8* [ %73, %71 ], [ %54, %53 ]
  store %"class.std::__1::vector.3"* %51, %"class.std::__1::vector.3"** %55, align 8
  call void @_ZdlPv(i8* %75) #10
  br label %76

76:                                               ; preds = %45, %74
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #9
  br label %77

77:                                               ; preds = %76, %12
  %78 = getelementptr inbounds %"class.spvtools::opt::StrengthReductionPass", %"class.spvtools::opt::StrengthReductionPass"* %0, i64 0, i32 0, i32 2
  %79 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %78, align 8
  %80 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %79, i64 0, i32 4, i32 0, i32 0, i32 0
  %81 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %80, align 8
  %82 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %81) #9
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %96

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %79, i64 0, i32 5, i32 0, i32 2
  %86 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %85, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %86, i64 0, i32 2
  %88 = load i8, i8* %87, align 8, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %96

90:                                               ; preds = %84
  %91 = call i8* @_Znwm(i64 48) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %91, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i64 37, i1 false) #9
  %92 = getelementptr inbounds i8, i8* %91, i64 37
  store i8 0, i8* %92, align 1
  %93 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %79, i64 0, i32 5, i32 0, i32 1, i32 0
  %94 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %93, align 8
  %95 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %79, i64 0, i32 5, i32 0, i32 0
  call void %94(%"union.std::__1::__function::__policy_storage"* %95, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp, i8* nonnull %91) #9
  call void @_ZdlPv(i8* nonnull %91) #10
  br label %96

96:                                               ; preds = %77, %84, %90
  %97 = bitcast %"struct.spvtools::opt::Operand"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %97) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 -86, i64 40, i1 false)
  %98 = bitcast %"class.spvtools::utils::SmallVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %98) #9
  %99 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %99, align 8
  %100 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 1
  %101 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 2
  %102 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 3, i64 0
  %103 = bitcast i32** %101 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %102, %"struct.std::__1::aligned_storage<4, 4>::type"** %103, align 8
  %104 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4
  %105 = bitcast %"class.std::__1::unique_ptr.0"* %104 to i64*
  store i64 0, i64* %105, align 8
  %106 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %102 to i32*
  store i64 1, i64* %100, align 8
  store i32 %1, i32* %106, align 8
  %107 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 0
  store i32 6, i32* %107, align 8
  %108 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 1
  %109 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %108, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %109, align 8
  %110 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 1, i32 1
  store i64 0, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 1, i32 2
  %112 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 1, i32 3, i64 0
  %113 = bitcast i32** %111 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %112, %"struct.std::__1::aligned_storage<4, 4>::type"** %113, align 8
  %114 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 1, i32 4
  %115 = bitcast %"class.std::__1::unique_ptr.0"* %114 to i64*
  store i64 0, i64* %115, align 8
  %116 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %108, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %5) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %99, align 8
  %117 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %118 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %117, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %117, align 8
  %119 = icmp eq %"class.std::__1::vector.3"* %118, null
  br i1 %119, label %131, label %120

120:                                              ; preds = %96
  %121 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %118, i64 0, i32 0, i32 0
  %122 = load i32*, i32** %121, align 8
  %123 = icmp eq i32* %122, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %120
  %125 = ptrtoint i32* %122 to i64
  %126 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %118, i64 0, i32 0, i32 1
  %127 = bitcast i32** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = bitcast i32* %122 to i8*
  call void @_ZdlPv(i8* %128) #10
  br label %129

129:                                              ; preds = %124, %120
  %130 = bitcast %"class.std::__1::vector.3"* %118 to i8*
  call void @_ZdlPv(i8* %130) #10
  br label %131

131:                                              ; preds = %96, %129
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %98) #9
  %132 = call i8* @_Znwm(i64 112) #10
  %133 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %78, align 8
  %134 = load i32, i32* %13, align 8
  %135 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #9
  %136 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %136) #9
  %137 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  %138 = load i32, i32* %107, align 8
  store i32 %138, i32* %137, align 8
  %139 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %140 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %139, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %140, align 8
  %141 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %141, align 8
  %142 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 2
  %143 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 3, i64 0
  %144 = bitcast i32** %142 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %143, %"struct.std::__1::aligned_storage<4, 4>::type"** %144, align 8
  %145 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4
  %146 = bitcast %"class.std::__1::unique_ptr.0"* %145 to i64*
  store i64 0, i64* %146, align 8
  %147 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %139, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %108) #9
  %148 = call i8* @_Znwm(i64 48) #10
  %149 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %150 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %148, i8** %150, align 8
  %151 = getelementptr inbounds i8, i8* %148, i64 48
  %152 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %153 = bitcast %"struct.spvtools::opt::Operand"** %152 to i8**
  store i8* %151, i8** %153, align 8
  %154 = bitcast i8* %148 to i32*
  %155 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  %156 = load i32, i32* %155, align 8
  store i32 %156, i32* %154, align 8
  %157 = getelementptr inbounds i8, i8* %148, i64 8
  %158 = bitcast i8* %157 to %"class.spvtools::utils::SmallVector"*
  %159 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %160 = bitcast i8* %157 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %160, align 8
  %161 = getelementptr inbounds i8, i8* %148, i64 16
  %162 = bitcast i8* %161 to i64*
  store i64 0, i64* %162, align 8
  %163 = getelementptr inbounds i8, i8* %148, i64 24
  %164 = getelementptr inbounds i8, i8* %148, i64 32
  %165 = bitcast i8* %163 to i8**
  store i8* %164, i8** %165, align 8
  %166 = getelementptr inbounds i8, i8* %148, i64 40
  %167 = bitcast i8* %166 to i64*
  store i64 0, i64* %167, align 8
  %168 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %158, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %159) #9
  %169 = getelementptr inbounds i8, i8* %148, i64 48
  %170 = bitcast i8* %132 to %"class.spvtools::opt::Instruction"*
  %171 = bitcast %"struct.spvtools::opt::Operand"** %149 to i64*
  %172 = ptrtoint i8* %169 to i64
  store i64 %172, i64* %171, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %170, %"class.spvtools::opt::IRContext"* %133, i32 43, i32 %134, i32 %82, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #9
  %173 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %174 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %173, align 8
  %175 = icmp eq %"struct.spvtools::opt::Operand"* %174, null
  br i1 %175, label %204, label %176

176:                                              ; preds = %131
  %177 = bitcast %"struct.spvtools::opt::Operand"* %174 to i8*
  %178 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %149, align 8
  %179 = icmp eq %"struct.spvtools::opt::Operand"* %178, %174
  br i1 %179, label %202, label %180

180:                                              ; preds = %176, %198
  %181 = phi %"struct.spvtools::opt::Operand"* [ %182, %198 ], [ %178, %176 ]
  %182 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %181, i64 -1
  %183 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %181, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %183, align 8
  %184 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %181, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %185 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %184, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %184, align 8
  %186 = icmp eq %"class.std::__1::vector.3"* %185, null
  br i1 %186, label %198, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %185, i64 0, i32 0, i32 0
  %189 = load i32*, i32** %188, align 8
  %190 = icmp eq i32* %189, null
  br i1 %190, label %196, label %191

191:                                              ; preds = %187
  %192 = ptrtoint i32* %189 to i64
  %193 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %185, i64 0, i32 0, i32 1
  %194 = bitcast i32** %193 to i64*
  store i64 %192, i64* %194, align 8
  %195 = bitcast i32* %189 to i8*
  call void @_ZdlPv(i8* %195) #10
  br label %196

196:                                              ; preds = %191, %187
  %197 = bitcast %"class.std::__1::vector.3"* %185 to i8*
  call void @_ZdlPv(i8* %197) #10
  br label %198

198:                                              ; preds = %196, %180
  %199 = icmp eq %"struct.spvtools::opt::Operand"* %182, %174
  br i1 %199, label %200, label %180

200:                                              ; preds = %198
  %201 = load i8*, i8** %150, align 8
  br label %202

202:                                              ; preds = %200, %176
  %203 = phi i8* [ %201, %200 ], [ %177, %176 ]
  store %"struct.spvtools::opt::Operand"* %174, %"struct.spvtools::opt::Operand"** %149, align 8
  call void @_ZdlPv(i8* %203) #10
  br label %204

204:                                              ; preds = %131, %202
  %205 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %205, align 8
  %206 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %207 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %206, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %206, align 8
  %208 = icmp eq %"class.std::__1::vector.3"* %207, null
  br i1 %208, label %220, label %209

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %207, i64 0, i32 0, i32 0
  %211 = load i32*, i32** %210, align 8
  %212 = icmp eq i32* %211, null
  br i1 %212, label %218, label %213

213:                                              ; preds = %209
  %214 = ptrtoint i32* %211 to i64
  %215 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %207, i64 0, i32 0, i32 1
  %216 = bitcast i32** %215 to i64*
  store i64 %214, i64* %216, align 8
  %217 = bitcast i32* %211 to i8*
  call void @_ZdlPv(i8* %217) #10
  br label %218

218:                                              ; preds = %213, %209
  %219 = bitcast %"class.std::__1::vector.3"* %207 to i8*
  call void @_ZdlPv(i8* %219) #10
  br label %220

220:                                              ; preds = %204, %218
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %136) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #9
  %221 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %78, align 8
  %222 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %221, i64 0, i32 4, i32 0, i32 0, i32 0
  %223 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %222, align 8
  %224 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %223, i64 0, i32 14, i32 0, i32 1
  %225 = getelementptr inbounds i8, i8* %132, i64 8
  %226 = bitcast i8* %225 to %"class.spvtools::opt::Instruction"**
  %227 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %226, align 8
  %228 = icmp eq %"class.spvtools::opt::Instruction"* %227, null
  br i1 %228, label %241, label %229

229:                                              ; preds = %220
  %230 = getelementptr inbounds i8, i8* %132, i64 16
  %231 = bitcast i8* %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %227, i64 0, i32 0, i32 2
  %234 = bitcast %"class.spvtools::opt::Instruction"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = bitcast i8* %225 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast i8* %230 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %238 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %237, align 8
  %239 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %238, i64 0, i32 1
  %240 = bitcast %"class.spvtools::opt::Instruction"** %239 to i64*
  store i64 %236, i64* %240, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %225, i8 0, i64 16, i1 false) #9
  br label %241

241:                                              ; preds = %220, %229
  store %"class.spvtools::opt::Instruction"* %224, %"class.spvtools::opt::Instruction"** %226, align 8
  %242 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %223, i64 0, i32 14, i32 0, i32 1, i32 0, i32 2
  %243 = bitcast %"class.spvtools::opt::Instruction"** %242 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = getelementptr inbounds i8, i8* %132, i64 16
  %246 = bitcast i8* %245 to i64*
  store i64 %244, i64* %246, align 8
  %247 = bitcast %"class.spvtools::opt::Instruction"** %242 to i8**
  store i8* %132, i8** %247, align 8
  %248 = bitcast i8* %245 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %249 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %248, align 8
  %250 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %249, i64 0, i32 1
  %251 = bitcast %"class.spvtools::opt::Instruction"** %250 to i8**
  store i8* %132, i8** %251, align 8
  %252 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %78, align 8
  %253 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %252, i64 0, i32 4, i32 0, i32 0, i32 0
  %254 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %253, align 8
  %255 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %254, i64 0, i32 14, i32 0, i32 1, i32 0, i32 2
  %256 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %255, align 8
  %257 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %252, i64 0, i32 11
  %258 = load i32, i32* %257, align 8
  %259 = and i32 %258, 1
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %283

261:                                              ; preds = %241
  %262 = call i8* @_Znwm(i64 104) #10
  %263 = bitcast i8* %262 to %"class.spvtools::opt::analysis::DefUseManager"*
  %264 = getelementptr inbounds i8, i8* %262, i64 32
  %265 = bitcast i8* %264 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %262, i8 0, i64 32, i1 false) #9
  store i32 1065353216, i32* %265, align 4
  %266 = getelementptr inbounds i8, i8* %262, i64 48
  %267 = getelementptr inbounds i8, i8* %262, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %266, i8 0, i64 16, i1 false) #9
  %268 = bitcast i8* %267 to i8**
  store i8* %266, i8** %268, align 8
  %269 = getelementptr inbounds i8, i8* %262, i64 64
  %270 = getelementptr inbounds i8, i8* %262, i64 96
  %271 = bitcast i8* %270 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %269, i8 0, i64 32, i1 false) #9
  store i32 1065353216, i32* %271, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %263, %"class.spvtools::opt::Module"* %254) #9
  %272 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %252, i64 0, i32 6
  %273 = ptrtoint i8* %262 to i64
  %274 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %272, i64 0, i32 0, i32 0, i32 0
  %275 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %274, align 8
  %276 = bitcast %"class.std::__1::unique_ptr.62"* %272 to i64*
  store i64 %273, i64* %276, align 8
  %277 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %275, null
  br i1 %277, label %280, label %278

278:                                              ; preds = %261
  %279 = bitcast %"class.std::__1::unique_ptr.62"* %272 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %279, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %275) #9
  br label %280

280:                                              ; preds = %278, %261
  %281 = load i32, i32* %257, align 8
  %282 = or i32 %281, 1
  store i32 %282, i32* %257, align 8
  br label %283

283:                                              ; preds = %280, %241
  %284 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %252, i64 0, i32 6, i32 0, i32 0, i32 0
  %285 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %284, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstDefEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %285, %"class.spvtools::opt::Instruction"* %256) #9
  store i32 %82, i32* %9, align 4
  %286 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %286, align 8
  %287 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %288 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %287, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %287, align 8
  %289 = icmp eq %"class.std::__1::vector.3"* %288, null
  br i1 %289, label %302, label %290

290:                                              ; preds = %283
  %291 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %288, i64 0, i32 0, i32 0
  %292 = load i32*, i32** %291, align 8
  %293 = icmp eq i32* %292, null
  br i1 %293, label %299, label %294

294:                                              ; preds = %290
  %295 = ptrtoint i32* %292 to i64
  %296 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %288, i64 0, i32 0, i32 1
  %297 = bitcast i32** %296 to i64*
  store i64 %295, i64* %297, align 8
  %298 = bitcast i32* %292 to i8*
  call void @_ZdlPv(i8* %298) #10
  br label %299

299:                                              ; preds = %294, %290
  %300 = bitcast %"class.std::__1::vector.3"* %288 to i8*
  call void @_ZdlPv(i8* %300) #10
  %301 = load i32, i32* %9, align 4
  br label %302

302:                                              ; preds = %283, %299
  %303 = phi i32 [ %82, %283 ], [ %301, %299 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %97) #9
  br label %304

304:                                              ; preds = %302, %2
  %305 = phi i32 [ %303, %302 ], [ %10, %2 ]
  ret i32 %305
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, i32, i32, i32, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #2

declare void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* sret, %"class.spvtools::opt::InstructionList::iterator"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"*, i32, i32) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare i32 @_ZNK8spvtools3opt8analysis11TypeManager5GetIdEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4TypeD2Ev(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %9, align 8
  %11 = icmp eq %"class.std::__1::vector.3"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::vector.3"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %14, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint i32* %16 to i64
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast i32* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #10
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::vector.3"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.463"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::vector.3"* %5, %"class.std::__1::vector.3"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %1, %28
  ret void
}

declare i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstDefEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt21StrengthReductionPassD0Ev(%"class.spvtools::opt::StrengthReductionPass"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::StrengthReductionPass", %"class.spvtools::opt::StrengthReductionPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::StrengthReductionPass", %"class.spvtools::opt::StrengthReductionPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::StrengthReductionPass", %"class.spvtools::opt::StrengthReductionPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.spvtools::opt::StrengthReductionPass"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt21StrengthReductionPass4nameEv(%"class.spvtools::opt::StrengthReductionPass"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #10
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node"* %34) #9
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #10
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #9
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void

11:                                               ; preds = %2
  ret void
}

declare i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #10
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #10
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #10
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4TypeD0Ev(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Void"* @_ZN8spvtools3opt8analysis4Type6AsVoidEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Void"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Void"* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Void"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZN8spvtools3opt8analysis4Type6AsBoolEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZNK8spvtools3opt8analysis4Type6AsBoolEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Integer"* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Integer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Integer"* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Integer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Float"* @_ZN8spvtools3opt8analysis4Type7AsFloatEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Float"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Float"* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Float"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Vector"* @_ZN8spvtools3opt8analysis4Type8AsVectorEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Vector"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Vector"* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Vector"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Matrix"* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Matrix"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Matrix"* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Matrix"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Image"* @_ZN8spvtools3opt8analysis4Type7AsImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Image"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Image"* @_ZNK8spvtools3opt8analysis4Type7AsImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Image"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Sampler"* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Sampler"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Sampler"* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Sampler"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::SampledImage"* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::SampledImage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::SampledImage"* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::SampledImage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Array"* @_ZN8spvtools3opt8analysis4Type7AsArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Array"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Array"* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Array"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RuntimeArray"* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RuntimeArray"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RuntimeArray"* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RuntimeArray"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Struct"* @_ZN8spvtools3opt8analysis4Type8AsStructEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Struct"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Struct"* @_ZNK8spvtools3opt8analysis4Type8AsStructEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Struct"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Opaque"* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Opaque"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Opaque"* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Opaque"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pointer"* @_ZN8spvtools3opt8analysis4Type9AsPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pointer"* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Function"* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Function"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Function"* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Function"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Event"* @_ZN8spvtools3opt8analysis4Type7AsEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Event"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Event"* @_ZNK8spvtools3opt8analysis4Type7AsEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Event"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::DeviceEvent"* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::DeviceEvent"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::DeviceEvent"* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::DeviceEvent"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ReserveId"* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ReserveId"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ReserveId"* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ReserveId"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Queue"* @_ZN8spvtools3opt8analysis4Type7AsQueueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Queue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Queue"* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Queue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pipe"* @_ZN8spvtools3opt8analysis4Type6AsPipeEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pipe"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pipe"* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pipe"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ForwardPointer"* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ForwardPointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ForwardPointer"* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ForwardPointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::PipeStorage"* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::PipeStorage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::PipeStorage"* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::PipeStorage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::NamedBarrier"* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::NamedBarrier"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::NamedBarrier"* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::NamedBarrier"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::AccelerationStructureNV"* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::AccelerationStructureNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::AccelerationStructureNV"* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::AccelerationStructureNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::CooperativeMatrixNV"* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::CooperativeMatrixNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::CooperativeMatrixNV"* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::CooperativeMatrixNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RayQueryKHR"* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RayQueryKHR"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RayQueryKHR"* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RayQueryKHR"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, %3
  br i1 %6, label %20, label %7

7:                                                ; preds = %1, %18
  %8 = phi %"class.std::__1::vector.3"* [ %9, %18 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 -1
  %10 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = ptrtoint i32* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 -1, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i32* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #10
  br label %18

18:                                               ; preds = %13, %7
  %19 = icmp eq %"class.std::__1::vector.3"* %9, %3
  br i1 %19, label %20, label %7

20:                                               ; preds = %18, %1
  store %"class.std::__1::vector.3"* %3, %"class.std::__1::vector.3"** %4, align 8
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.std::__1::function"* dereferenceable(32), %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.571"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.571"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.571", %"struct.std::__1::__hash_node_base.571"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.571"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #10
  %10 = icmp eq %"struct.std::__1::__hash_node_base.571"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.571"**, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.571"** null, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.571"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.571"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.488"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17, %21
  %22 = phi %"struct.std::__1::__hash_node_base.488"* [ %24, %21 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base.488"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #10
  %26 = icmp eq %"struct.std::__1::__hash_node_base.488"* %24, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %17
  %28 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.488"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.std::__1::__hash_node_base.488"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #10
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %35, align 8
  %37 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36 to i8*
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5, i32 0, i32 1
  %41 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  %42 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %41, %36
  br i1 %42, label %59, label %43

43:                                               ; preds = %38, %54
  %44 = phi %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* [ %45, %54 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %46, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %46, align 8
  %48 = icmp eq %"class.spvtools::opt::analysis::Type"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.spvtools::opt::analysis::Type"* %47 to void (%"class.spvtools::opt::analysis::Type"*)***
  %51 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %51, i64 1
  %53 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %52, align 8
  tail call void %53(%"class.spvtools::opt::analysis::Type"* nonnull %47) #9
  br label %54

54:                                               ; preds = %49, %43
  %55 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %45, %36
  br i1 %55, label %56, label %43

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.553"* %34 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %38
  %60 = phi i8* [ %58, %56 ], [ %39, %38 ]
  store %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  tail call void @_ZdlPv(i8* %60) #10
  br label %61

61:                                               ; preds = %33, %59
  %62 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.536"* %63, null
  br i1 %64, label %81, label %65

65:                                               ; preds = %61, %78
  %66 = phi %"struct.std::__1::__hash_node_base.536"* [ %68, %78 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.536"* %69 to %"class.spvtools::opt::analysis::Type"**
  %71 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %70, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %70, align 8
  %72 = icmp eq %"class.spvtools::opt::analysis::Type"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.spvtools::opt::analysis::Type"* %71 to void (%"class.spvtools::opt::analysis::Type"*)***
  %75 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %75, i64 1
  %77 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %76, align 8
  tail call void %77(%"class.spvtools::opt::analysis::Type"* nonnull %71) #9
  br label %78

78:                                               ; preds = %73, %65
  %79 = bitcast %"struct.std::__1::__hash_node_base.536"* %66 to i8*
  tail call void @_ZdlPv(i8* %79) #10
  %80 = icmp eq %"struct.std::__1::__hash_node_base.536"* %68, null
  br i1 %80, label %81, label %65

81:                                               ; preds = %78, %61
  %82 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.536"**, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  store %"struct.std::__1::__hash_node_base.536"** null, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.536"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast %"struct.std::__1::__hash_node_base.536"** %83 to i8*
  tail call void @_ZdlPv(i8* %86) #10
  br label %87

87:                                               ; preds = %81, %85
  %88 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %88, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node_base.512"* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::__hash_node_base.512"* [ %94, %91 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.512", %"struct.std::__1::__hash_node_base.512"* %92, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %93, align 8
  %95 = bitcast %"struct.std::__1::__hash_node_base.512"* %92 to i8*
  tail call void @_ZdlPv(i8* %95) #10
  %96 = icmp eq %"struct.std::__1::__hash_node_base.512"* %94, null
  br i1 %96, label %97, label %91

97:                                               ; preds = %91, %87
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.512"**, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.512"** null, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.512"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.512"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #10
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.488"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base.488"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base.488"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #10
  %112 = icmp eq %"struct.std::__1::__hash_node_base.488"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.488"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base.488"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #10
  br label %119

119:                                              ; preds = %113, %117
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %7, align 8
  br i1 %5, label %54, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp eq %"class.std::__1::vector.3"* %8, %4
  br i1 %12, label %107, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"* nonnull %8, i32* %15, i32* %17) #9
  br label %107

18:                                               ; preds = %9
  %19 = tail call i8* @_Znwm(i64 24) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #9
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %26, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast i8* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #11
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #10
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %19 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %26
  %39 = getelementptr inbounds i8, i8* %19, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %25, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = lshr exact i64 %25, 2
  %46 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %46, i64 %25, i1 false) #9
  %47 = getelementptr inbounds i32, i32* %34, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i64 [ %48, %44 ], [ %42, %32 ]
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %18, %49
  %52 = ptrtoint i8* %19 to i64
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %107

54:                                               ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %7, align 8
  %55 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #10
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.3"* %8 to i8*
  tail call void @_ZdlPv(i8* %66) #10
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %75

75:                                               ; preds = %72, %79
  %76 = phi i64 [ 0, %72 ], [ %85, %79 ]
  %77 = load i64, i64* %68, align 8
  %78 = icmp ult i64 %76, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = load i32*, i32** %73, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %76
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %76
  store i32 %82, i32* %84, align 4
  %85 = add nuw i64 %76, 1
  %86 = load i64, i64* %69, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %75, label %88

88:                                               ; preds = %75, %79, %67
  %89 = phi i64 [ 0, %67 ], [ %85, %79 ], [ %76, %75 ]
  %90 = load i64, i64* %68, align 8
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %89, %92 ], [ %102, %95 ]
  %97 = load i32*, i32** %93, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %96
  %99 = load i32*, i32** %94, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %98, align 4
  %102 = add nuw i64 %96, 1
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88
  %106 = phi i64 [ %90, %88 ], [ %103, %95 ]
  store i64 %106, i64* %69, align 8
  br label %107

107:                                              ; preds = %13, %11, %51, %105
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #9
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #9
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #10
  %55 = bitcast %"class.std::__1::vector.3"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #9
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #11
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #11
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #10
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.3"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #9
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #9
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #9
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #10
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #10
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #10
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctpop.i32(i32) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i32 0, i32 33}
