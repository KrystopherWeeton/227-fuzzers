; ModuleID = '../../ui/base/models/menu_model.cc'
source_filename = "../../ui/base/models/menu_model.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::MenuModel" = type { i32 (...)**, %"class.base::SupportsWeakPtr", %"class.ui::MenuModelDelegate"* }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.ui::MenuModelDelegate" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.ui::ImageModel" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"class.ui::VectorIconModel" }
%"class.ui::VectorIconModel" = type { %"struct.gfx::VectorIcon"*, i32, %"class.absl::variant.7", %"struct.gfx::VectorIcon"* }
%"class.absl::variant.7" = type { %"class.absl::variant_internal::VariantStateBase.8" }
%"class.absl::variant_internal::VariantStateBase.8" = type { %"union.absl::variant_internal::Union", i64 }
%"union.absl::variant_internal::Union" = type { i32 }
%"struct.gfx::VectorIcon" = type opaque
%"class.gfx::FontList" = type opaque

$_ZN2ui9MenuModel12MenuWillShowEv = comdat any

$_ZN2ui9MenuModel13MenuWillCloseEv = comdat any

@_ZTVN2ui9MenuModelE = hidden unnamed_addr constant { [31 x i8*] } { [31 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::MenuModel"*)* @_ZN2ui9MenuModelD2Ev to i8*), i8* bitcast (void (%"class.ui::MenuModel"*)* @_ZN2ui9MenuModelD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::MenuModel"*, i32)* @_ZNK2ui9MenuModel19GetSecondaryLabelAtEi to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::MenuModel"*, i32)* @_ZNK2ui9MenuModel14GetMinorTextAtEi to i8*), i8* bitcast (void (%"class.ui::ImageModel"*, %"class.ui::MenuModel"*, i32)* @_ZNK2ui9MenuModel14GetMinorIconAtEi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.ui::MenuModel"*, i32)* @_ZNK2ui9MenuModel18MayHaveMnemonicsAtEi to i8*), i8* bitcast (%"class.gfx::FontList"* (%"class.ui::MenuModel"*, i32)* @_ZNK2ui9MenuModel18GetLabelFontListAtEi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.ui::MenuModel"*, i32)* @_ZNK2ui9MenuModel11IsVisibleAtEi to i8*), i8* bitcast (i1 (%"class.ui::MenuModel"*, i32)* @_ZNK2ui9MenuModel11IsAlertedAtEi to i8*), i8* bitcast (i1 (%"class.ui::MenuModel"*, i32)* @_ZNK2ui9MenuModel14IsNewFeatureAtEi to i8*), i8* bitcast (i8* (%"class.ui::MenuModel"*, i32)* @_ZNK2ui9MenuModel22GetElementIdentifierAtEi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.ui::MenuModel"*, i32, i32)* @_ZN2ui9MenuModel11ActivatedAtEii to i8*), i8* bitcast (void (%"class.ui::MenuModel"*)* @_ZN2ui9MenuModel12MenuWillShowEv to i8*), i8* bitcast (void (%"class.ui::MenuModel"*)* @_ZN2ui9MenuModel13MenuWillCloseEv to i8*)] }, align 8

@_ZN2ui9MenuModelD1Ev = hidden unnamed_addr alias void (%"class.ui::MenuModel"*), void (%"class.ui::MenuModel"*)* @_ZN2ui9MenuModelD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9MenuModelC2Ev(%"class.ui::MenuModel"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::MenuModel", %"class.ui::MenuModel"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"* %2) #7
  %3 = getelementptr inbounds %"class.ui::MenuModel", %"class.ui::MenuModel"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*] }, { [31 x i8*] }* @_ZTVN2ui9MenuModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.ui::MenuModel", %"class.ui::MenuModel"* %0, i64 0, i32 2
  store %"class.ui::MenuModelDelegate"* null, %"class.ui::MenuModelDelegate"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9MenuModelD2Ev(%"class.ui::MenuModel"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::MenuModel", %"class.ui::MenuModel"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*] }, { [31 x i8*] }* @_ZTVN2ui9MenuModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::MenuModel", %"class.ui::MenuModel"* %0, i64 0, i32 2
  %4 = load %"class.ui::MenuModelDelegate"*, %"class.ui::MenuModelDelegate"** %3, align 8
  %5 = icmp eq %"class.ui::MenuModelDelegate"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.ui::MenuModelDelegate"* %4 to void (%"class.ui::MenuModelDelegate"*)***
  %8 = load void (%"class.ui::MenuModelDelegate"*)**, void (%"class.ui::MenuModelDelegate"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::MenuModelDelegate"*)*, void (%"class.ui::MenuModelDelegate"*)** %8, i64 2
  %10 = load void (%"class.ui::MenuModelDelegate"*)*, void (%"class.ui::MenuModelDelegate"*)** %9, align 8
  tail call void %10(%"class.ui::MenuModelDelegate"* nonnull %4) #7
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.ui::MenuModel", %"class.ui::MenuModel"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"* %12) #7
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2ui9MenuModelD0Ev(%"class.ui::MenuModel"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2ui9MenuModel11IsVisibleAtEi(%"class.ui::MenuModel"* nocapture readnone, i32) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2ui9MenuModel11IsAlertedAtEi(%"class.ui::MenuModel"* nocapture readnone, i32) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2ui9MenuModel14IsNewFeatureAtEi(%"class.ui::MenuModel"* nocapture readnone, i32) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK2ui9MenuModel22GetElementIdentifierAtEi(%"class.ui::MenuModel"* nocapture readnone, i32) unnamed_addr #3 align 2 {
  ret i8* null
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui9MenuModel28GetModelAndIndexForCommandIdEiPPS0_Pi(i32, %"class.ui::MenuModel"** nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.ui::MenuModel"*, align 8
  %5 = load %"class.ui::MenuModel"*, %"class.ui::MenuModel"** %1, align 8
  %6 = bitcast %"class.ui::MenuModel"* %5 to i32 (%"class.ui::MenuModel"*)***
  %7 = load i32 (%"class.ui::MenuModel"*)**, i32 (%"class.ui::MenuModel"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.ui::MenuModel"*)*, i32 (%"class.ui::MenuModel"*)** %7, i64 3
  %9 = load i32 (%"class.ui::MenuModel"*)*, i32 (%"class.ui::MenuModel"*)** %8, align 8
  %10 = tail call i32 %9(%"class.ui::MenuModel"* %5) #7
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %73

12:                                               ; preds = %3
  %13 = bitcast %"class.ui::MenuModel"** %4 to i8*
  br label %14

14:                                               ; preds = %70, %12
  %15 = phi i32 [ 0, %12 ], [ %71, %70 ]
  %16 = load %"class.ui::MenuModel"*, %"class.ui::MenuModel"** %1, align 8
  %17 = bitcast %"class.ui::MenuModel"* %16 to i32 (%"class.ui::MenuModel"*, i32)***
  %18 = load i32 (%"class.ui::MenuModel"*, i32)**, i32 (%"class.ui::MenuModel"*, i32)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.ui::MenuModel"*, i32)*, i32 (%"class.ui::MenuModel"*, i32)** %18, i64 4
  %20 = load i32 (%"class.ui::MenuModel"*, i32)*, i32 (%"class.ui::MenuModel"*, i32)** %19, align 8
  %21 = tail call i32 %20(%"class.ui::MenuModel"* %16, i32 %15) #7
  %22 = icmp eq i32 %21, 6
  br i1 %22, label %23, label %32

23:                                               ; preds = %14
  %24 = load %"class.ui::MenuModel"*, %"class.ui::MenuModel"** %1, align 8
  %25 = bitcast %"class.ui::MenuModel"* %24 to i32 (%"class.ui::MenuModel"*, i32)***
  %26 = load i32 (%"class.ui::MenuModel"*, i32)**, i32 (%"class.ui::MenuModel"*, i32)*** %25, align 8
  %27 = getelementptr inbounds i32 (%"class.ui::MenuModel"*, i32)*, i32 (%"class.ui::MenuModel"*, i32)** %26, i64 6
  %28 = load i32 (%"class.ui::MenuModel"*, i32)*, i32 (%"class.ui::MenuModel"*, i32)** %27, align 8
  %29 = tail call i32 %28(%"class.ui::MenuModel"* %24, i32 %15) #7
  %30 = icmp eq i32 %29, %0
  br i1 %30, label %31, label %32

31:                                               ; preds = %23
  store i32 %15, i32* %2, align 4
  br label %73

32:                                               ; preds = %23, %14
  %33 = load %"class.ui::MenuModel"*, %"class.ui::MenuModel"** %1, align 8
  %34 = bitcast %"class.ui::MenuModel"* %33 to i32 (%"class.ui::MenuModel"*, i32)***
  %35 = load i32 (%"class.ui::MenuModel"*, i32)**, i32 (%"class.ui::MenuModel"*, i32)*** %34, align 8
  %36 = getelementptr inbounds i32 (%"class.ui::MenuModel"*, i32)*, i32 (%"class.ui::MenuModel"*, i32)** %35, i64 4
  %37 = load i32 (%"class.ui::MenuModel"*, i32)*, i32 (%"class.ui::MenuModel"*, i32)** %36, align 8
  %38 = tail call i32 %37(%"class.ui::MenuModel"* %33, i32 %15) #7
  %39 = icmp eq i32 %38, 5
  br i1 %39, label %48, label %40

40:                                               ; preds = %32
  %41 = load %"class.ui::MenuModel"*, %"class.ui::MenuModel"** %1, align 8
  %42 = bitcast %"class.ui::MenuModel"* %41 to i32 (%"class.ui::MenuModel"*, i32)***
  %43 = load i32 (%"class.ui::MenuModel"*, i32)**, i32 (%"class.ui::MenuModel"*, i32)*** %42, align 8
  %44 = getelementptr inbounds i32 (%"class.ui::MenuModel"*, i32)*, i32 (%"class.ui::MenuModel"*, i32)** %43, i64 4
  %45 = load i32 (%"class.ui::MenuModel"*, i32)*, i32 (%"class.ui::MenuModel"*, i32)** %44, align 8
  %46 = tail call i32 %45(%"class.ui::MenuModel"* %41, i32 %15) #7
  %47 = icmp eq i32 %46, 6
  br i1 %47, label %48, label %61

48:                                               ; preds = %40, %32
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7
  %49 = load %"class.ui::MenuModel"*, %"class.ui::MenuModel"** %1, align 8
  %50 = bitcast %"class.ui::MenuModel"* %49 to %"class.ui::MenuModel"* (%"class.ui::MenuModel"*, i32)***
  %51 = load %"class.ui::MenuModel"* (%"class.ui::MenuModel"*, i32)**, %"class.ui::MenuModel"* (%"class.ui::MenuModel"*, i32)*** %50, align 8
  %52 = getelementptr inbounds %"class.ui::MenuModel"* (%"class.ui::MenuModel"*, i32)*, %"class.ui::MenuModel"* (%"class.ui::MenuModel"*, i32)** %51, i64 24
  %53 = load %"class.ui::MenuModel"* (%"class.ui::MenuModel"*, i32)*, %"class.ui::MenuModel"* (%"class.ui::MenuModel"*, i32)** %52, align 8
  %54 = tail call %"class.ui::MenuModel"* %53(%"class.ui::MenuModel"* %49, i32 %15) #7
  store %"class.ui::MenuModel"* %54, %"class.ui::MenuModel"** %4, align 8
  %55 = call zeroext i1 @_ZN2ui9MenuModel28GetModelAndIndexForCommandIdEiPPS0_Pi(i32 %0, %"class.ui::MenuModel"** nonnull %4, i32* %2)
  br i1 %55, label %57, label %56

56:                                               ; preds = %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  br label %61

57:                                               ; preds = %48
  %58 = bitcast %"class.ui::MenuModel"** %4 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.ui::MenuModel"** %1 to i64*
  store i64 %59, i64* %60, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  br label %73

61:                                               ; preds = %56, %40
  %62 = load %"class.ui::MenuModel"*, %"class.ui::MenuModel"** %1, align 8
  %63 = bitcast %"class.ui::MenuModel"* %62 to i32 (%"class.ui::MenuModel"*, i32)***
  %64 = load i32 (%"class.ui::MenuModel"*, i32)**, i32 (%"class.ui::MenuModel"*, i32)*** %63, align 8
  %65 = getelementptr inbounds i32 (%"class.ui::MenuModel"*, i32)*, i32 (%"class.ui::MenuModel"*, i32)** %64, i64 6
  %66 = load i32 (%"class.ui::MenuModel"*, i32)*, i32 (%"class.ui::MenuModel"*, i32)** %65, align 8
  %67 = tail call i32 %66(%"class.ui::MenuModel"* %62, i32 %15) #7
  %68 = icmp eq i32 %67, %0
  br i1 %68, label %69, label %70

69:                                               ; preds = %61
  store i32 %15, i32* %2, align 4
  br label %73

70:                                               ; preds = %61
  %71 = add nuw nsw i32 %15, 1
  %72 = icmp eq i32 %71, %10
  br i1 %72, label %73, label %14

73:                                               ; preds = %70, %3, %57, %69, %31
  %74 = phi i1 [ true, %31 ], [ true, %69 ], [ true, %57 ], [ false, %3 ], [ false, %70 ]
  ret i1 %74
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui9MenuModel14GetMinorTextAtEi(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.ui::MenuModel"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui9MenuModel19GetSecondaryLabelAtEi(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.ui::MenuModel"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui9MenuModel14GetMinorIconAtEi(%"class.ui::ImageModel"* noalias sret, %"class.ui::MenuModel"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  tail call void @_ZN2ui10ImageModelC1Ev(%"class.ui::ImageModel"* %0) #7
  ret void
}

declare void @_ZN2ui10ImageModelC1Ev(%"class.ui::ImageModel"*) unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2ui9MenuModel18MayHaveMnemonicsAtEi(%"class.ui::MenuModel"* nocapture readnone, i32) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.gfx::FontList"* @_ZNK2ui9MenuModel18GetLabelFontListAtEi(%"class.ui::MenuModel"* nocapture readnone, i32) unnamed_addr #3 align 2 {
  ret %"class.gfx::FontList"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9MenuModel11ActivatedAtEii(%"class.ui::MenuModel"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.ui::MenuModel"* %0 to void (%"class.ui::MenuModel"*, i32)***
  %5 = load void (%"class.ui::MenuModel"*, i32)**, void (%"class.ui::MenuModel"*, i32)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.ui::MenuModel"*, i32)*, void (%"class.ui::MenuModel"*, i32)** %5, i64 25
  %7 = load void (%"class.ui::MenuModel"*, i32)*, void (%"class.ui::MenuModel"*, i32)** %6, align 8
  tail call void %7(%"class.ui::MenuModel"* %0, i32 %1) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui9MenuModel20SetMenuModelDelegateEPNS_17MenuModelDelegateE(%"class.ui::MenuModel"* nocapture, %"class.ui::MenuModelDelegate"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::MenuModel", %"class.ui::MenuModel"* %0, i64 0, i32 2
  %4 = load %"class.ui::MenuModelDelegate"*, %"class.ui::MenuModelDelegate"** %3, align 8
  %5 = icmp eq %"class.ui::MenuModelDelegate"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.ui::MenuModelDelegate"* %4 to void (%"class.ui::MenuModelDelegate"*)***
  %8 = load void (%"class.ui::MenuModelDelegate"*)**, void (%"class.ui::MenuModelDelegate"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::MenuModelDelegate"*)*, void (%"class.ui::MenuModelDelegate"*)** %8, i64 2
  %10 = load void (%"class.ui::MenuModelDelegate"*)*, void (%"class.ui::MenuModelDelegate"*)** %9, align 8
  tail call void %10(%"class.ui::MenuModelDelegate"* nonnull %4) #7
  br label %11

11:                                               ; preds = %2, %6
  store %"class.ui::MenuModelDelegate"* %1, %"class.ui::MenuModelDelegate"** %3, align 8
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui9MenuModel12MenuWillShowEv(%"class.ui::MenuModel"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui9MenuModel13MenuWillCloseEv(%"class.ui::MenuModel"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
