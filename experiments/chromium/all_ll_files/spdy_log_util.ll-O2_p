; ModuleID = '../../net/spdy/spdy_log_util.cc'
source_filename = "../../net/spdy/spdy_log_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.0" }
%"union.absl::variant_internal::DestructibleUnionImpl.0" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.spdy::Http2HeaderBlock" = type { %"class.quiche::QuicheLinkedHashMap", %"class.spdy::SpdyHeaderStorage", i64, i64 }
%"class.quiche::QuicheLinkedHashMap" = type { %"class.absl::node_hash_map", %"class.std::__1::list" }
%"class.absl::node_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"struct.std::__1::pair.28"**, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"struct.std::__1::pair.28" = type { %"class.absl::string_view", %"class.std::__1::__list_iterator" }
%"class.absl::string_view" = type { i8*, i64 }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { i64 }
%"class.spdy::SpdyHeaderStorage" = type { %"class.spdy::SpdySimpleArena" }
%"class.spdy::SpdySimpleArena" = type { i64, %"class.std::__1::vector.40", %"class.spdy::SpdySimpleArena::Status" }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.spdy::SpdySimpleArena::Block"*, %"struct.spdy::SpdySimpleArena::Block"*, %"class.std::__1::__compressed_pair.45" }
%"struct.spdy::SpdySimpleArena::Block" = type { %"class.std::__1::unique_ptr", i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { i8* }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.spdy::SpdySimpleArena::Block"* }
%"class.spdy::SpdySimpleArena::Status" = type { i64 }
%"class.spdy::Http2HeaderBlock::iterator" = type { %"class.std::__1::__list_const_iterator" }
%"class.std::__1::__list_const_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.std::__1::pair.51" }
%"struct.std::__1::pair.51" = type { %"class.absl::string_view", %"class.spdy::Http2HeaderBlock::HeaderValue" }
%"class.spdy::Http2HeaderBlock::HeaderValue" = type { %"class.spdy::SpdyHeaderStorage"*, %"class.std::__1::vector.52", %"struct.std::__1::pair.50", i64, i64 }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"class.absl::string_view"*, %"class.absl::string_view"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.absl::string_view"* }
%"struct.std::__1::pair.50" = type { %"class.absl::string_view", %"class.absl::string_view" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::DictionaryValue" = type { %"class.base::Value" }

@.str = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c" bytes were stripped]\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"headers\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net29ElideGoAwayDebugDataForNetLogENS_17NetLogCaptureModeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* noalias sret, i32, i8*, i64) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca [3 x %"class.base::BasicStringPiece"], align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = tail call zeroext i1 @_ZN3net30NetLogCaptureIncludesSensitiveENS_17NetLogCaptureModeE(i32 %1) #7
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  tail call void @_ZN3net17NetLogStringValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* sret %0, i8* %2, i64 %3) #7
  br label %53

10:                                               ; preds = %4
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #7
  %12 = bitcast [3 x %"class.base::BasicStringPiece"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #7
  %13 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 0
  %14 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i8** %14, align 8
  %15 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 0, i32 1
  store i64 1, i64* %15, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #7
  call void @_ZN4base14NumberToStringEm(%"class.std::__1::basic_string"* nonnull sret %7, i64 %3) #7
  %17 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 1, i32 0
  %18 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = select i1 %21, i8* %23, i8* %16
  store i8* %24, i8** %17, align 8
  %25 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 1, i32 1
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = zext i8 %20 to i64
  %29 = select i1 %21, i64 %27, i64 %28
  store i64 %29, i64* %25, align 8
  %30 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 2, i32 0
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i8** %30, align 8
  %31 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %6, i64 0, i64 2, i32 1
  store i64 21, i64* %31, align 8
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull sret %5, i64 3, %"class.base::BasicStringPiece"* nonnull %13) #7
  %32 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = select i1 %35, i8* %37, i8* %11
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = zext i8 %34 to i64
  %42 = select i1 %35, i64 %40, i64 %41
  call void @_ZN3net17NetLogStringValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* sret %0, i8* %38, i64 %42) #7
  %43 = load i8, i8* %33, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %10
  %46 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %46) #8
  br label %47

47:                                               ; preds = %10, %45
  %48 = load i8, i8* %19, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %51) #8
  br label %52

52:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #7
  br label %53

53:                                               ; preds = %52, %9
  ret void
}

declare zeroext i1 @_ZN3net30NetLogCaptureIncludesSensitiveENS_17NetLogCaptureModeE(i32) local_unnamed_addr #1

declare void @_ZN3net17NetLogStringValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* sret, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base14NumberToStringEm(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net30ElideHttp2HeaderBlockForNetLogERKN4spdy16Http2HeaderBlockENS_17NetLogCaptureModeE(%"class.base::ListValue"* noalias sret, %"class.spdy::Http2HeaderBlock"* dereferenceable(120), i32) local_unnamed_addr #0 {
  %4 = alloca %"class.spdy::Http2HeaderBlock::iterator", align 8
  %5 = alloca %"class.spdy::Http2HeaderBlock::iterator", align 8
  %6 = alloca %"class.base::Value", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca [3 x %"class.base::BasicStringPiece"], align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = bitcast %"class.base::ListValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 -86, i64 32, i1 false)
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* %0) #7
  %13 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7
  %14 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::iterator", %"class.spdy::Http2HeaderBlock::iterator"* %4, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__list_node_base"*), %"struct.std::__1::__list_node_base"** %14, align 8
  %15 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %16 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8, !noalias !2
  call void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %4, %"struct.std::__1::__list_node_base"* %16) #7
  %17 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  %18 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::iterator", %"class.spdy::Http2HeaderBlock::iterator"* %5, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__list_node_base"*), %"struct.std::__1::__list_node_base"** %18, align 8
  %19 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %5, %"struct.std::__1::__list_node_base"* %19) #7
  %20 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %14, align 8
  %21 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %18, align 8
  %22 = icmp eq %"struct.std::__1::__list_node_base"* %20, %21
  br i1 %22, label %58, label %23

23:                                               ; preds = %3
  %24 = bitcast %"struct.std::__1::__list_node_base"* %20 to %"struct.std::__1::__list_node"*
  %25 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %0, i64 0, i32 0
  %26 = bitcast %"class.base::Value"* %6 to i8*
  %27 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %28 = bitcast [3 x %"class.base::BasicStringPiece"]* %8 to i8*
  %29 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %8, i64 0, i64 0
  %30 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %8, i64 0, i64 0, i32 0
  %31 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %8, i64 0, i64 0, i32 1
  %32 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %8, i64 0, i64 1, i32 0
  %33 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %8, i64 0, i64 1, i32 1
  %34 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %35 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %8, i64 0, i64 2, i32 0
  %48 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %8, i64 0, i64 2, i32 1
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %4 to i64*
  br label %59

58:                                               ; preds = %140, %3
  call void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  ret void

59:                                               ; preds = %23, %140
  %60 = phi %"struct.std::__1::__list_node"* [ %24, %23 ], [ %148, %140 ]
  %61 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %60, i64 0, i32 1, i32 1
  %62 = call dereferenceable(32) %"struct.std::__1::pair.50"* @_ZNK4spdy16Http2HeaderBlock11HeaderValue7as_pairEv(%"class.spdy::Http2HeaderBlock::HeaderValue"* %61) #7
  %63 = getelementptr inbounds %"struct.std::__1::pair.50", %"struct.std::__1::pair.50"* %62, i64 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.50", %"struct.std::__1::pair.50"* %62, i64 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"struct.std::__1::pair.50", %"struct.std::__1::pair.50"* %62, i64 0, i32 1, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair.50", %"struct.std::__1::pair.50"* %62, i64 0, i32 1, i32 1
  %70 = load i64, i64* %69, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #7
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #7
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %28) #7
  store i8* %64, i8** %30, align 8
  store i64 %66, i64* %31, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8** %32, align 8
  store i64 2, i64* %33, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #7
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #7
  %71 = icmp ugt i64 %66, -17
  br i1 %71, label %72, label %74

72:                                               ; preds = %59
  %73 = bitcast %"class.std::__1::basic_string"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %73) #9
  unreachable

74:                                               ; preds = %59
  %75 = icmp ult i64 %66, 23
  br i1 %75, label %81, label %76

76:                                               ; preds = %74
  %77 = add nuw i64 %66, 16
  %78 = and i64 %77, -16
  %79 = call i8* @_Znwm(i64 %78) #8
  store i8* %79, i8** %36, align 8, !alias.scope !5
  %80 = or i64 %78, -9223372036854775808
  store i64 %80, i64* %37, align 8, !alias.scope !5
  store i64 %66, i64* %38, align 8, !alias.scope !5
  br label %84

81:                                               ; preds = %74
  %82 = trunc i64 %66 to i8
  store i8 %82, i8* %40, align 1, !alias.scope !5
  %83 = icmp eq i64 %66, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %81, %76
  %85 = phi i8* [ %79, %76 ], [ %35, %81 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %85, i8* align 1 %64, i64 %66, i1 false) #7
  br label %86

86:                                               ; preds = %81, %84
  %87 = phi i8* [ %35, %81 ], [ %85, %84 ]
  %88 = getelementptr inbounds i8, i8* %87, i64 %66
  store i8 0, i8* %88, align 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #7
  %89 = icmp ugt i64 %70, -17
  br i1 %89, label %90, label %92

90:                                               ; preds = %86
  %91 = bitcast %"class.std::__1::basic_string"* %11 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %91) #9
  unreachable

92:                                               ; preds = %86
  %93 = icmp ult i64 %70, 23
  br i1 %93, label %99, label %94

94:                                               ; preds = %92
  %95 = add nuw i64 %70, 16
  %96 = and i64 %95, -16
  %97 = call i8* @_Znwm(i64 %96) #8
  store i8* %97, i8** %42, align 8, !alias.scope !8
  %98 = or i64 %96, -9223372036854775808
  store i64 %98, i64* %43, align 8, !alias.scope !8
  store i64 %70, i64* %44, align 8, !alias.scope !8
  br label %102

99:                                               ; preds = %92
  %100 = trunc i64 %70 to i8
  store i8 %100, i8* %46, align 1, !alias.scope !8
  %101 = icmp eq i64 %70, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %99, %94
  %103 = phi i8* [ %97, %94 ], [ %41, %99 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %103, i8* align 1 %68, i64 %70, i1 false) #7
  br label %104

104:                                              ; preds = %99, %102
  %105 = phi i8* [ %41, %99 ], [ %103, %102 ]
  %106 = getelementptr inbounds i8, i8* %105, i64 %70
  store i8 0, i8* %106, align 1
  call void @_ZN3net25ElideHeaderValueForNetLogENS_17NetLogCaptureModeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.std::__1::basic_string"* nonnull sret %9, i32 %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11) #7
  %107 = load i8, i8* %49, align 1
  %108 = icmp slt i8 %107, 0
  %109 = load i8*, i8** %50, align 8
  %110 = select i1 %108, i8* %109, i8* %34
  store i8* %110, i8** %47, align 8
  %111 = load i64, i64* %52, align 8
  %112 = zext i8 %107 to i64
  %113 = select i1 %108, i64 %111, i64 %112
  store i64 %113, i64* %51, align 8
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull sret %7, i64 3, %"class.base::BasicStringPiece"* nonnull %29) #7
  %114 = load i8, i8* %54, align 1
  %115 = icmp slt i8 %114, 0
  %116 = load i8*, i8** %55, align 8
  %117 = select i1 %115, i8* %116, i8* %27
  %118 = load i64, i64* %56, align 8
  %119 = zext i8 %114 to i64
  %120 = select i1 %115, i64 %118, i64 %119
  call void @_ZN3net17NetLogStringValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull sret %6, i8* %117, i64 %120) #7
  call void @_ZN4base5Value6AppendEOS0_(%"class.base::Value"* %25, %"class.base::Value"* nonnull dereferenceable(32) %6) #7
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %6) #7
  %121 = load i8, i8* %54, align 1
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %123, label %125

123:                                              ; preds = %104
  %124 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %124) #8
  br label %125

125:                                              ; preds = %104, %123
  %126 = load i8, i8* %49, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %130

128:                                              ; preds = %125
  %129 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %129) #8
  br label %130

130:                                              ; preds = %125, %128
  %131 = load i8, i8* %46, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %135

133:                                              ; preds = %130
  %134 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %134) #8
  br label %135

135:                                              ; preds = %130, %133
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #7
  %136 = load i8, i8* %40, align 1
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %135
  %139 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %139) #8
  br label %140

140:                                              ; preds = %135, %138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %28) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #7
  %141 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %14, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %141, i64 0, i32 1
  %143 = bitcast %"struct.std::__1::__list_node_base"** %142 to i64*
  %144 = load i64, i64* %143, align 8
  store i64 %144, i64* %57, align 8
  %145 = inttoptr i64 %144 to %"struct.std::__1::__list_node_base"*
  %146 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %18, align 8
  %147 = icmp eq %"struct.std::__1::__list_node_base"* %146, %145
  %148 = inttoptr i64 %144 to %"struct.std::__1::__list_node"*
  br i1 %147, label %58, label %59
}

declare void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"*) unnamed_addr #1

declare void @_ZN4base5Value6AppendEOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN3net25ElideHeaderValueForNetLogENS_17NetLogCaptureModeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.std::__1::basic_string"* sret, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net28Http2HeaderBlockNetLogParamsEPKN4spdy16Http2HeaderBlockENS_17NetLogCaptureModeE(%"class.base::Value"* noalias sret, %"class.spdy::Http2HeaderBlock"*, i32) local_unnamed_addr #0 {
  %4 = alloca %"class.base::DictionaryValue", align 8
  %5 = alloca %"class.base::ListValue", align 8
  %6 = bitcast %"class.base::DictionaryValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #7
  %7 = bitcast %"class.base::DictionaryValue"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %4) #7
  %8 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %4, i64 0, i32 0
  %9 = bitcast %"class.base::ListValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #7
  call void @_ZN3net30ElideHttp2HeaderBlockForNetLogERKN4spdy16Http2HeaderBlockENS_17NetLogCaptureModeE(%"class.base::ListValue"* nonnull sret %5, %"class.spdy::Http2HeaderBlock"* dereferenceable(120) %1, i32 %2)
  %10 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %5, i64 0, i32 0
  %11 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %10) #7
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #7
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %0, %"class.base::Value"* nonnull dereferenceable(32) %8) #7
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #7
  ret void
}

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"*, i8*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #3

declare void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #1

declare void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"*, %"struct.std::__1::__list_node_base"*) unnamed_addr #1

declare dereferenceable(32) %"struct.std::__1::pair.50"* @_ZNK4spdy16Http2HeaderBlock11HeaderValue7as_pairEv(%"class.spdy::Http2HeaderBlock::HeaderValue"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4spdy16Http2HeaderBlock5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4spdy16Http2HeaderBlock5beginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!10 = distinct !{!10, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
