; ModuleID = '../../storage/common/quota/padding_key.cc'
source_filename = "../../storage/common/quota/padding_key.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [8 x i8] }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.crypto::HMAC" = type { i32, i8, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.crypto::SymmetricKey" = type { i32 (...)**, %"class.std::__1::basic_string" }

@.str = private unnamed_addr constant [17 x i8] c"%s-%ld-%s-%s-%ld\00", align 1
@.str.1 = private unnamed_addr constant [42 x i8] c"../../storage/common/quota/padding_key.cc\00", align 1
@.str.2 = private unnamed_addr constant [42 x i8] c"hmac.Init(GetPaddingKeyInternal()->get())\00", align 1
@.str.3 = private unnamed_addr constant [80 x i8] c"hmac.Sign(key, reinterpret_cast<uint8_t*>(&digest_start), sizeof(digest_start))\00", align 1
@_ZZN7storage12_GLOBAL__N_121GetPaddingKeyInternalEvE13s_padding_key = internal unnamed_addr global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN7storage12_GLOBAL__N_121GetPaddingKeyInternalEvE13s_padding_key = internal global i64 0, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN7storage21ShouldPadResponseTypeEN7network5mojom17FetchResponseTypeE(i32) local_unnamed_addr #0 {
  %2 = or i32 %0, 1
  %3 = icmp eq i32 %2, 5
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7storage28ComputeRandomResponsePaddingEv() local_unnamed_addr #1 {
  %1 = alloca i64, align 8
  %2 = bitcast i64* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7
  store i64 0, i64* %1, align 8
  call void @_ZN6crypto9RandBytesEPvm(i8* nonnull %2, i64 8) #7
  %3 = load i64, i64* %1, align 8
  %4 = urem i64 %3, 14777344
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7
  ret i64 %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN6crypto9RandBytesEPvm(i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7storage28ComputeStableResponsePaddingERKN3url6OriginERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERKN4base4TimeESC_l(%"class.url::Origin"* dereferenceable(80), %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Time"* nocapture readonly dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #1 {
  %6 = alloca %"class.net::SchemefulSite", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.crypto::HMAC", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca i64, align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = bitcast %"class.net::SchemefulSite"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %13) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 80, i1 false)
  call void @_ZN3net13SchemefulSiteC1ERKN3url6OriginE(%"class.net::SchemefulSite"* nonnull %6, %"class.url::Origin"* dereferenceable(80) %0) #7
  %14 = call i64 @_ZN4base4Time9UnixEpochEv() #7
  %15 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = sub nsw i64 %16, %14
  %18 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #7
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  %24 = load i8, i8* %22, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %29 = select i1 %25, i8* %27, i8* %28
  %30 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #7
  call void @_ZNK3net13SchemefulSite9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %8, %"class.net::SchemefulSite"* nonnull %6) #7
  %31 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = select i1 %34, i8* %36, i8* %30
  %38 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %45 = select i1 %41, i8* %43, i8* %44
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* %29, i64 %17, i8* %37, i8* %45, i64 %4) #7
  %46 = load i8, i8* %32, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %5
  %49 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %49) #8
  br label %50

50:                                               ; preds = %5, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #7
  %51 = bitcast %"class.crypto::HMAC"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 32, i1 false)
  call void @_ZN6crypto4HMACC1ENS0_13HashAlgorithmE(%"class.crypto::HMAC"* nonnull %9, i32 1) #7
  %52 = load atomic i8, i8* bitcast (i64* @_ZGVZN7storage12_GLOBAL__N_121GetPaddingKeyInternalEvE13s_padding_key to i8*) acquire, align 8
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %60, !prof !2

54:                                               ; preds = %50
  %55 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN7storage12_GLOBAL__N_121GetPaddingKeyInternalEvE13s_padding_key) #7
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = call %"class.crypto::SymmetricKey"* @_ZN6crypto12SymmetricKey17GenerateRandomKeyENS0_9AlgorithmEm(i32 0, i64 128) #7
  %59 = ptrtoint %"class.crypto::SymmetricKey"* %58 to i64
  store i64 %59, i64* bitcast (%"class.base::NoDestructor"* @_ZZN7storage12_GLOBAL__N_121GetPaddingKeyInternalEvE13s_padding_key to i64*), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN7storage12_GLOBAL__N_121GetPaddingKeyInternalEvE13s_padding_key) #7
  br label %60

60:                                               ; preds = %50, %54, %57
  %61 = load %"class.crypto::SymmetricKey"*, %"class.crypto::SymmetricKey"** bitcast (%"class.base::NoDestructor"* @_ZZN7storage12_GLOBAL__N_121GetPaddingKeyInternalEvE13s_padding_key to %"class.crypto::SymmetricKey"**), align 8
  %62 = call zeroext i1 @_ZN6crypto4HMAC4InitEPKNS_12SymmetricKeyE(%"class.crypto::HMAC"* nonnull %9, %"class.crypto::SymmetricKey"* %61) #7
  br i1 %62, label %66, label %63

63:                                               ; preds = %60
  %64 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 76, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0)) #7
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #7
  br label %66

66:                                               ; preds = %60, %63
  %67 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #7
  store i64 0, i64* %11, align 8
  %68 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  %72 = load i8*, i8** %19, align 8
  %73 = select i1 %71, i8* %72, i8* %18
  %74 = load i64, i64* %20, align 8
  %75 = zext i8 %70 to i64
  %76 = select i1 %71, i64 %74, i64 %75
  %77 = call zeroext i1 @_ZNK6crypto4HMAC4SignEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPhm(%"class.crypto::HMAC"* nonnull %9, i8* %73, i64 %76, i8* nonnull %67, i64 8) #7
  br i1 %77, label %81, label %78

78:                                               ; preds = %66
  %79 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 80, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.3, i64 0, i64 0)) #7
  %80 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #7
  br label %81

81:                                               ; preds = %66, %78
  %82 = load i64, i64* %11, align 8
  %83 = urem i64 %82, 14777344
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #7
  call void @_ZN6crypto4HMACD1Ev(%"class.crypto::HMAC"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #7
  %84 = load i8, i8* %69, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %81
  %87 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %87) #8
  br label %88

88:                                               ; preds = %81, %86
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #7
  %89 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %6, i64 0, i32 0
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %89) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %13) #7
  ret i64 %83
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN3net13SchemefulSiteC1ERKN3url6OriginE(%"class.net::SchemefulSite"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #3

declare i64 @_ZN4base4Time9UnixEpochEv() local_unnamed_addr #3

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #3

declare void @_ZNK3net13SchemefulSite9SerializeEv(%"class.std::__1::basic_string"* sret, %"class.net::SchemefulSite"*) local_unnamed_addr #3

declare void @_ZN6crypto4HMACC1ENS0_13HashAlgorithmE(%"class.crypto::HMAC"*, i32) unnamed_addr #3

declare zeroext i1 @_ZN6crypto4HMAC4InitEPKNS_12SymmetricKeyE(%"class.crypto::HMAC"*, %"class.crypto::SymmetricKey"*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare zeroext i1 @_ZNK6crypto4HMAC4SignEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPhm(%"class.crypto::HMAC"*, i8*, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6crypto4HMACD1Ev(%"class.crypto::HMAC"*) unnamed_addr #4

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

declare %"class.crypto::SymmetricKey"* @_ZN6crypto12SymmetricKey17GenerateRandomKeyENS0_9AlgorithmEm(i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
