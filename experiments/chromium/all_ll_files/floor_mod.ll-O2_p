; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/floor_mod.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/floor_mod.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, {}*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"struct.tflite::ops::builtin::floor_mod::(anonymous namespace)::OpData" = type { i8 }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"struct.tflite::NdArrayDesc" = type { [4 x i32], [4 x i32] }

$_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIiiiEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E = comdat any

$_ZN6tflite13reference_ops8FloorModIiEET_S2_S2_ = comdat any

$_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_ = comdat any

$_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIlllEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E = comdat any

$_ZN6tflite13reference_ops8FloorModIlEET_S2_S2_ = comdat any

$_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIfffEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E = comdat any

$_ZN6tflite13reference_ops8FloorModIfEET_S2_S2_ = comdat any

@_ZZN6tflite3ops7builtin18Register_FLOOR_MODEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin9floor_mod12_GLOBAL__N_14InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin9floor_mod12_GLOBAL__N_14FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin9floor_mod12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin9floor_mod12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.4 = private unnamed_addr constant [66 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/floor_mod.cc\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"input1->type\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"input2->type\00", align 1
@.str.12 = private unnamed_addr constant [41 x i8] c"Type '%s' is not supported by floor_mod.\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"Division by 0\00", align 1
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin18Register_FLOOR_MODEv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin18Register_FLOOR_MODEvE1r
}

; Function Attrs: nofree nounwind ssp uwtable
define internal noalias nonnull i8* @_ZN6tflite3ops7builtin9floor_mod12_GLOBAL__N_14InitEP13TfLiteContextPKcm(%struct.TfLiteContext* nocapture readnone, i8* nocapture readnone, i64) #1 {
  %4 = tail call i8* @_Znwm(i64 1) #10
  store i8 0, i8* %4, align 1
  ret i8* %4
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6tflite3ops7builtin9floor_mod12_GLOBAL__N_14FreeEP13TfLiteContextPv(%struct.TfLiteContext* nocapture readnone, i8*) #2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @_ZdlPv(i8* nonnull %1) #10
  br label %5

5:                                                ; preds = %4, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin9floor_mod12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #2 {
  %3 = alloca %struct.TfLiteIntArray*, align 8
  %4 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %5 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %11 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %10, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %11(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.4, i64 0, i64 0), i32 55, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i32 %7, i32 2) #11
  br label %96

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %14 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %13, align 8
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %20 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %19, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %20(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.4, i64 0, i64 0), i32 56, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 %16, i32 1) #11
  br label %96

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %23 = bitcast i8** %22 to %"struct.tflite::ops::builtin::floor_mod::(anonymous namespace)::OpData"**
  %24 = load %"struct.tflite::ops::builtin::floor_mod::(anonymous namespace)::OpData"*, %"struct.tflite::ops::builtin::floor_mod::(anonymous namespace)::OpData"** %23, align 8
  %25 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %30 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %29, align 8
  %31 = sext i32 %26 to i64
  %32 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 %31
  br label %33

33:                                               ; preds = %21, %28
  %34 = phi %struct.TfLiteTensor* [ %32, %28 ], [ null, %21 ]
  %35 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %40 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %39, align 8
  %41 = sext i32 %36 to i64
  %42 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 %41
  br label %43

43:                                               ; preds = %33, %38
  %44 = phi %struct.TfLiteTensor* [ %42, %38 ], [ null, %33 ]
  %45 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %50 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %49, align 8
  %51 = sext i32 %46 to i64
  %52 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %50, i64 %51
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi %struct.TfLiteTensor* [ %52, %48 ], [ null, %43 ]
  %55 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %34, i64 0, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %56, %58
  br i1 %59, label %66, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %62 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %61, align 8
  %63 = tail call i8* @TfLiteTypeGetName(i32 %56) #11
  %64 = load i32, i32* %57, align 8
  %65 = tail call i8* @TfLiteTypeGetName(i32 %64) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %62(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.4, i64 0, i64 0), i32 65, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8* %63, i8* %65) #11
  br label %96

66:                                               ; preds = %53
  switch i32 %56, label %67 [
    i32 4, label %71
    i32 2, label %71
    i32 1, label %71
  ]

67:                                               ; preds = %66
  %68 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %69 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %68, align 8
  %70 = tail call i8* @TfLiteTypeGetName(i32 %56) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %69(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i64 0, i64 0), i8* %70) #11
  br label %96

71:                                               ; preds = %66, %66, %66
  %72 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 0, i32 0
  store i32 %56, i32* %72, align 8
  %73 = tail call zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor* %34, %struct.TfLiteTensor* %44) #11
  %74 = xor i1 %73, true
  %75 = getelementptr inbounds %"struct.tflite::ops::builtin::floor_mod::(anonymous namespace)::OpData", %"struct.tflite::ops::builtin::floor_mod::(anonymous namespace)::OpData"* %24, i64 0, i32 0
  %76 = zext i1 %74 to i8
  store i8 %76, i8* %75, align 1
  %77 = bitcast %struct.TfLiteIntArray** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #11
  store %struct.TfLiteIntArray* null, %struct.TfLiteIntArray** %3, align 8
  %78 = load i8, i8* %75, align 1, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %85, label %80

80:                                               ; preds = %71
  %81 = call i32 @_ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %34, %struct.TfLiteTensor* %44, %struct.TfLiteIntArray** nonnull %3) #11
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %94

83:                                               ; preds = %80
  %84 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  br label %89

85:                                               ; preds = %71
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %34, i64 0, i32 2
  %87 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %86, align 8
  %88 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %87) #11
  store %struct.TfLiteIntArray* %88, %struct.TfLiteIntArray** %3, align 8
  br label %89

89:                                               ; preds = %83, %85
  %90 = phi %struct.TfLiteIntArray* [ %84, %83 ], [ %88, %85 ]
  %91 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %92 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %91, align 8
  %93 = call i32 %92(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %54, %struct.TfLiteIntArray* %90) #11
  br label %94

94:                                               ; preds = %80, %89
  %95 = phi i32 [ %93, %89 ], [ %81, %80 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #11
  br label %96

96:                                               ; preds = %60, %94, %67, %18, %9
  %97 = phi i32 [ 1, %9 ], [ 1, %18 ], [ 1, %60 ], [ 1, %67 ], [ %95, %94 ]
  ret i32 %97
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin9floor_mod12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #2 {
  %3 = alloca %"class.tflite::RuntimeShape", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"class.tflite::RuntimeShape", align 8
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %22 = bitcast i8** %21 to %"struct.tflite::ops::builtin::floor_mod::(anonymous namespace)::OpData"**
  %23 = load %"struct.tflite::ops::builtin::floor_mod::(anonymous namespace)::OpData"*, %"struct.tflite::ops::builtin::floor_mod::(anonymous namespace)::OpData"** %22, align 8
  %24 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %25 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %24, align 8
  %26 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %25, i64 0, i32 1, i64 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %2
  %30 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %31 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %30, align 8
  %32 = sext i32 %27 to i64
  %33 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 %32
  br label %34

34:                                               ; preds = %2, %29
  %35 = phi %struct.TfLiteTensor* [ %33, %29 ], [ null, %2 ]
  %36 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %25, i64 0, i32 1, i64 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp slt i32 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %41 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %40, align 8
  %42 = sext i32 %37 to i64
  %43 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 %42
  br label %44

44:                                               ; preds = %34, %39
  %45 = phi %struct.TfLiteTensor* [ %43, %39 ], [ null, %34 ]
  %46 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %47 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %46, align 8
  %48 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 1, i64 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %53 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %52, align 8
  %54 = sext i32 %49 to i64
  %55 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %53, i64 %54
  br label %56

56:                                               ; preds = %44, %51
  %57 = phi %struct.TfLiteTensor* [ %55, %51 ], [ null, %44 ]
  %58 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %35, i64 0, i32 0
  %59 = load i32, i32* %58, align 8
  switch i32 %59, label %1546 [
    i32 2, label %60
    i32 4, label %550
    i32 1, label %1049
  ]

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.tflite::ops::builtin::floor_mod::(anonymous namespace)::OpData", %"struct.tflite::ops::builtin::floor_mod::(anonymous namespace)::OpData"* %23, i64 0, i32 0
  %62 = load i8, i8* %61, align 1, !range !2
  %63 = icmp eq i8 %62, 0
  %64 = icmp eq %struct.TfLiteTensor* %45, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1, i32 0
  %67 = load i32*, i32** %66, align 8
  br label %68

68:                                               ; preds = %65, %60
  %69 = phi i32* [ %67, %65 ], [ null, %60 ]
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 0
  %71 = load i32, i32* %70, align 8
  switch i32 %71, label %165 [
    i32 2, label %72
    i32 4, label %72
  ]

72:                                               ; preds = %68, %68
  %73 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %74 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %73, align 8
  %75 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %74, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp sgt i32 %76, 0
  br i1 %77, label %78, label %151

78:                                               ; preds = %72
  %79 = sext i32 %76 to i64
  %80 = add nsw i64 %79, -1
  %81 = and i64 %79, 7
  %82 = icmp ult i64 %80, 7
  br i1 %82, label %131, label %83

83:                                               ; preds = %78
  %84 = sub nsw i64 %79, %81
  br label %85

85:                                               ; preds = %85, %83
  %86 = phi i64 [ 0, %83 ], [ %128, %85 ]
  %87 = phi i64 [ 1, %83 ], [ %127, %85 ]
  %88 = phi i64 [ %84, %83 ], [ %129, %85 ]
  %89 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %74, i64 0, i32 1, i64 %86
  %90 = load i32, i32* %89, align 4
  %91 = sext i32 %90 to i64
  %92 = mul nsw i64 %87, %91
  %93 = or i64 %86, 1
  %94 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %74, i64 0, i32 1, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = sext i32 %95 to i64
  %97 = mul nsw i64 %92, %96
  %98 = or i64 %86, 2
  %99 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %74, i64 0, i32 1, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = sext i32 %100 to i64
  %102 = mul nsw i64 %97, %101
  %103 = or i64 %86, 3
  %104 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %74, i64 0, i32 1, i64 %103
  %105 = load i32, i32* %104, align 4
  %106 = sext i32 %105 to i64
  %107 = mul nsw i64 %102, %106
  %108 = or i64 %86, 4
  %109 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %74, i64 0, i32 1, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = sext i32 %110 to i64
  %112 = mul nsw i64 %107, %111
  %113 = or i64 %86, 5
  %114 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %74, i64 0, i32 1, i64 %113
  %115 = load i32, i32* %114, align 4
  %116 = sext i32 %115 to i64
  %117 = mul nsw i64 %112, %116
  %118 = or i64 %86, 6
  %119 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %74, i64 0, i32 1, i64 %118
  %120 = load i32, i32* %119, align 4
  %121 = sext i32 %120 to i64
  %122 = mul nsw i64 %117, %121
  %123 = or i64 %86, 7
  %124 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %74, i64 0, i32 1, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = sext i32 %125 to i64
  %127 = mul nsw i64 %122, %126
  %128 = add nuw nsw i64 %86, 8
  %129 = add i64 %88, -8
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %85

131:                                              ; preds = %85, %78
  %132 = phi i64 [ undef, %78 ], [ %127, %85 ]
  %133 = phi i64 [ 0, %78 ], [ %128, %85 ]
  %134 = phi i64 [ 1, %78 ], [ %127, %85 ]
  %135 = icmp eq i64 %81, 0
  br i1 %135, label %147, label %136

136:                                              ; preds = %131, %136
  %137 = phi i64 [ %144, %136 ], [ %133, %131 ]
  %138 = phi i64 [ %143, %136 ], [ %134, %131 ]
  %139 = phi i64 [ %145, %136 ], [ %81, %131 ]
  %140 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %74, i64 0, i32 1, i64 %137
  %141 = load i32, i32* %140, align 4
  %142 = sext i32 %141 to i64
  %143 = mul nsw i64 %138, %142
  %144 = add nuw nsw i64 %137, 1
  %145 = add i64 %139, -1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %136, !llvm.loop !3

147:                                              ; preds = %136, %131
  %148 = phi i64 [ %132, %131 ], [ %143, %136 ]
  %149 = trunc i64 %148 to i32
  %150 = icmp sgt i32 %149, 0
  br i1 %150, label %151, label %165

151:                                              ; preds = %147, %72
  %152 = phi i64 [ %148, %147 ], [ 1, %72 ]
  %153 = and i64 %152, 4294967295
  br label %156

154:                                              ; preds = %156
  %155 = icmp eq i64 %161, %153
  br i1 %155, label %165, label %156

156:                                              ; preds = %154, %151
  %157 = phi i64 [ 0, %151 ], [ %161, %154 ]
  %158 = getelementptr inbounds i32, i32* %69, i64 %157
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i32 %159, 0
  %161 = add nuw nsw i64 %157, 1
  br i1 %160, label %162, label %154

162:                                              ; preds = %156
  %163 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %164 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %163, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %164(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0)) #11
  br label %1550

165:                                              ; preds = %154, %147, %68
  br i1 %63, label %292, label %166

166:                                              ; preds = %165
  %167 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %167) #11
  %168 = icmp eq %struct.TfLiteTensor* %35, null
  br i1 %168, label %169, label %171

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %170, align 8, !alias.scope !5
  br label %198

171:                                              ; preds = %166
  %172 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %35, i64 0, i32 2
  %173 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %172, align 8, !noalias !5
  %174 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %173, i64 0, i32 0
  %175 = load i32, i32* %174, align 4, !noalias !5
  %176 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %173, i64 0, i32 1, i64 0
  %177 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %175, i32* %177, align 8, !alias.scope !5
  %178 = icmp sgt i32 %175, 5
  br i1 %178, label %179, label %186

179:                                              ; preds = %171
  %180 = sext i32 %175 to i64
  %181 = shl nsw i64 %180, 2
  %182 = tail call i8* @_Znam(i64 %181) #10, !noalias !5
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %184 = bitcast i32** %183 to i8**
  store i8* %182, i8** %184, align 8, !alias.scope !5
  %185 = bitcast i8* %182 to i32*
  br label %191

186:                                              ; preds = %171
  %187 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %188 = bitcast %union.anon* %187 to i32*
  %189 = sext i32 %175 to i64
  %190 = shl nsw i64 %189, 2
  br label %191

191:                                              ; preds = %186, %179
  %192 = phi i64 [ %181, %179 ], [ %190, %186 ]
  %193 = phi i32* [ %185, %179 ], [ %188, %186 ]
  %194 = bitcast i32* %193 to i8*
  %195 = bitcast i32* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %194, i8* align 4 %195, i64 %192, i1 false) #11
  %196 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %35, i64 0, i32 1, i32 0
  %197 = load i32*, i32** %196, align 8
  br label %198

198:                                              ; preds = %191, %169
  %199 = phi i32* [ %197, %191 ], [ null, %169 ]
  %200 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %200) #11
  br i1 %64, label %201, label %203

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %202, align 8, !alias.scope !8
  br label %228

203:                                              ; preds = %198
  %204 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %205 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %204, align 8, !noalias !8
  %206 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %205, i64 0, i32 0
  %207 = load i32, i32* %206, align 4, !noalias !8
  %208 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %205, i64 0, i32 1, i64 0
  %209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %207, i32* %209, align 8, !alias.scope !8
  %210 = icmp sgt i32 %207, 5
  br i1 %210, label %211, label %218

211:                                              ; preds = %203
  %212 = sext i32 %207 to i64
  %213 = shl nsw i64 %212, 2
  %214 = tail call i8* @_Znam(i64 %213) #10, !noalias !8
  %215 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %216 = bitcast i32** %215 to i8**
  store i8* %214, i8** %216, align 8, !alias.scope !8
  %217 = bitcast i8* %214 to i32*
  br label %223

218:                                              ; preds = %203
  %219 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %220 = bitcast %union.anon* %219 to i32*
  %221 = sext i32 %207 to i64
  %222 = shl nsw i64 %221, 2
  br label %223

223:                                              ; preds = %218, %211
  %224 = phi i64 [ %213, %211 ], [ %222, %218 ]
  %225 = phi i32* [ %217, %211 ], [ %220, %218 ]
  %226 = bitcast i32* %225 to i8*
  %227 = bitcast i32* %208 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %226, i8* align 4 %227, i64 %224, i1 false) #11
  br label %228

228:                                              ; preds = %223, %201
  %229 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %229) #11
  %230 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %230, label %231, label %233

231:                                              ; preds = %228
  %232 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %232, align 8, !alias.scope !11
  br label %260

233:                                              ; preds = %228
  %234 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %235 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %234, align 8, !noalias !11
  %236 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %235, i64 0, i32 0
  %237 = load i32, i32* %236, align 4, !noalias !11
  %238 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %235, i64 0, i32 1, i64 0
  %239 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %237, i32* %239, align 8, !alias.scope !11
  %240 = icmp sgt i32 %237, 5
  br i1 %240, label %241, label %248

241:                                              ; preds = %233
  %242 = sext i32 %237 to i64
  %243 = shl nsw i64 %242, 2
  %244 = tail call i8* @_Znam(i64 %243) #10, !noalias !11
  %245 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %246 = bitcast i32** %245 to i8**
  store i8* %244, i8** %246, align 8, !alias.scope !11
  %247 = bitcast i8* %244 to i32*
  br label %253

248:                                              ; preds = %233
  %249 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %250 = bitcast %union.anon* %249 to i32*
  %251 = sext i32 %237 to i64
  %252 = shl nsw i64 %251, 2
  br label %253

253:                                              ; preds = %248, %241
  %254 = phi i64 [ %243, %241 ], [ %252, %248 ]
  %255 = phi i32* [ %247, %241 ], [ %250, %248 ]
  %256 = bitcast i32* %255 to i8*
  %257 = bitcast i32* %238 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %256, i8* align 4 %257, i64 %254, i1 false) #11
  %258 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1, i32 0
  %259 = load i32*, i32** %258, align 8
  br label %260

260:                                              ; preds = %253, %231
  %261 = phi i32* [ %259, %253 ], [ null, %231 ]
  call void @_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIiiiEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i32* %199, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i32* %69, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i32* %261, i32 (i32, i32)* nonnull @_ZN6tflite13reference_ops8FloorModIiEET_S2_S2_) #11
  %262 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %263 = load i32, i32* %262, align 8
  %264 = icmp sgt i32 %263, 5
  br i1 %264, label %265, label %271

265:                                              ; preds = %260
  %266 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %267 = load i32*, i32** %266, align 8
  %268 = icmp eq i32* %267, null
  br i1 %268, label %271, label %269

269:                                              ; preds = %265
  %270 = bitcast i32* %267 to i8*
  call void @_ZdaPv(i8* %270) #10
  br label %271

271:                                              ; preds = %269, %265, %260
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %229) #11
  %272 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %273 = load i32, i32* %272, align 8
  %274 = icmp sgt i32 %273, 5
  br i1 %274, label %275, label %281

275:                                              ; preds = %271
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %277 = load i32*, i32** %276, align 8
  %278 = icmp eq i32* %277, null
  br i1 %278, label %281, label %279

279:                                              ; preds = %275
  %280 = bitcast i32* %277 to i8*
  call void @_ZdaPv(i8* %280) #10
  br label %281

281:                                              ; preds = %279, %275, %271
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %200) #11
  %282 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %283 = load i32, i32* %282, align 8
  %284 = icmp sgt i32 %283, 5
  br i1 %284, label %285, label %291

285:                                              ; preds = %281
  %286 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %287 = load i32*, i32** %286, align 8
  %288 = icmp eq i32* %287, null
  br i1 %288, label %291, label %289

289:                                              ; preds = %285
  %290 = bitcast i32* %287 to i8*
  call void @_ZdaPv(i8* %290) #10
  br label %291

291:                                              ; preds = %289, %285, %281
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %167) #11
  br label %1550

292:                                              ; preds = %165
  %293 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %293) #11
  %294 = icmp eq %struct.TfLiteTensor* %35, null
  br i1 %294, label %295, label %297

295:                                              ; preds = %292
  %296 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %296, align 8, !alias.scope !14
  br label %324

297:                                              ; preds = %292
  %298 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %35, i64 0, i32 2
  %299 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %298, align 8, !noalias !14
  %300 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %299, i64 0, i32 0
  %301 = load i32, i32* %300, align 4, !noalias !14
  %302 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %299, i64 0, i32 1, i64 0
  %303 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %301, i32* %303, align 8, !alias.scope !14
  %304 = icmp sgt i32 %301, 5
  br i1 %304, label %305, label %312

305:                                              ; preds = %297
  %306 = sext i32 %301 to i64
  %307 = shl nsw i64 %306, 2
  %308 = tail call i8* @_Znam(i64 %307) #10, !noalias !14
  %309 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %310 = bitcast i32** %309 to i8**
  store i8* %308, i8** %310, align 8, !alias.scope !14
  %311 = bitcast i8* %308 to i32*
  br label %317

312:                                              ; preds = %297
  %313 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %314 = bitcast %union.anon* %313 to i32*
  %315 = sext i32 %301 to i64
  %316 = shl nsw i64 %315, 2
  br label %317

317:                                              ; preds = %312, %305
  %318 = phi i64 [ %307, %305 ], [ %316, %312 ]
  %319 = phi i32* [ %311, %305 ], [ %314, %312 ]
  %320 = bitcast i32* %319 to i8*
  %321 = bitcast i32* %302 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %320, i8* align 4 %321, i64 %318, i1 false) #11
  %322 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %35, i64 0, i32 1, i32 0
  %323 = load i32*, i32** %322, align 8
  br label %324

324:                                              ; preds = %317, %295
  %325 = phi i32 [ %301, %317 ], [ 0, %295 ]
  %326 = phi i32* [ %323, %317 ], [ null, %295 ]
  %327 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %327) #11
  br i1 %64, label %328, label %330

328:                                              ; preds = %324
  %329 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %329, align 8, !alias.scope !17
  br label %357

330:                                              ; preds = %324
  %331 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %332 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %331, align 8, !noalias !17
  %333 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %332, i64 0, i32 0
  %334 = load i32, i32* %333, align 4, !noalias !17
  %335 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %332, i64 0, i32 1, i64 0
  %336 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %334, i32* %336, align 8, !alias.scope !17
  %337 = icmp sgt i32 %334, 5
  br i1 %337, label %338, label %345

338:                                              ; preds = %330
  %339 = sext i32 %334 to i64
  %340 = shl nsw i64 %339, 2
  %341 = tail call i8* @_Znam(i64 %340) #10, !noalias !17
  %342 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %343 = bitcast i32** %342 to i8**
  store i8* %341, i8** %343, align 8, !alias.scope !17
  %344 = bitcast i8* %341 to i32*
  br label %350

345:                                              ; preds = %330
  %346 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %347 = bitcast %union.anon* %346 to i32*
  %348 = sext i32 %334 to i64
  %349 = shl nsw i64 %348, 2
  br label %350

350:                                              ; preds = %345, %338
  %351 = phi i64 [ %340, %338 ], [ %349, %345 ]
  %352 = phi i32* [ %344, %338 ], [ %347, %345 ]
  %353 = bitcast i32* %352 to i8*
  %354 = bitcast i32* %335 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %353, i8* align 4 %354, i64 %351, i1 false) #11
  %355 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1, i32 0
  %356 = load i32*, i32** %355, align 8
  br label %357

357:                                              ; preds = %350, %328
  %358 = phi i32 [ %334, %350 ], [ 0, %328 ]
  %359 = phi i32* [ %356, %350 ], [ null, %328 ]
  %360 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %360) #11
  %361 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %361, label %362, label %364

362:                                              ; preds = %357
  %363 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %363, align 8, !alias.scope !20
  br label %391

364:                                              ; preds = %357
  %365 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %366 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %365, align 8, !noalias !20
  %367 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %366, i64 0, i32 0
  %368 = load i32, i32* %367, align 4, !noalias !20
  %369 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %366, i64 0, i32 1, i64 0
  %370 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %368, i32* %370, align 8, !alias.scope !20
  %371 = icmp sgt i32 %368, 5
  br i1 %371, label %372, label %379

372:                                              ; preds = %364
  %373 = sext i32 %368 to i64
  %374 = shl nsw i64 %373, 2
  %375 = tail call i8* @_Znam(i64 %374) #10, !noalias !20
  %376 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %377 = bitcast i32** %376 to i8**
  store i8* %375, i8** %377, align 8, !alias.scope !20
  %378 = bitcast i8* %375 to i32*
  br label %384

379:                                              ; preds = %364
  %380 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %381 = bitcast %union.anon* %380 to i32*
  %382 = sext i32 %368 to i64
  %383 = shl nsw i64 %382, 2
  br label %384

384:                                              ; preds = %379, %372
  %385 = phi i64 [ %374, %372 ], [ %383, %379 ]
  %386 = phi i32* [ %378, %372 ], [ %381, %379 ]
  %387 = bitcast i32* %386 to i8*
  %388 = bitcast i32* %369 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %387, i8* align 4 %388, i64 %385, i1 false) #11
  %389 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1, i32 0
  %390 = load i32*, i32** %389, align 8
  br label %391

391:                                              ; preds = %384, %362
  %392 = phi i32 [ %368, %384 ], [ 0, %362 ]
  %393 = phi i32* [ %390, %384 ], [ null, %362 ]
  %394 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %395 = icmp sgt i32 %325, 5
  br i1 %395, label %396, label %399

396:                                              ; preds = %391
  %397 = getelementptr inbounds %union.anon, %union.anon* %394, i64 0, i32 0
  %398 = load i32*, i32** %397, align 8
  br label %402

399:                                              ; preds = %391
  %400 = bitcast %union.anon* %394 to i32*
  %401 = icmp sgt i32 %325, 0
  br i1 %401, label %402, label %505

402:                                              ; preds = %399, %396
  %403 = phi i32* [ %398, %396 ], [ %400, %399 ]
  %404 = zext i32 %325 to i64
  %405 = icmp ult i32 %325, 8
  br i1 %405, label %491, label %406

406:                                              ; preds = %402
  %407 = and i64 %404, 4294967288
  %408 = add nsw i64 %407, -8
  %409 = lshr exact i64 %408, 3
  %410 = add nuw nsw i64 %409, 1
  %411 = and i64 %410, 3
  %412 = icmp ult i64 %408, 24
  br i1 %412, label %458, label %413

413:                                              ; preds = %406
  %414 = sub nsw i64 %410, %411
  br label %415

415:                                              ; preds = %415, %413
  %416 = phi i64 [ 0, %413 ], [ %455, %415 ]
  %417 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %413 ], [ %453, %415 ]
  %418 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %413 ], [ %454, %415 ]
  %419 = phi i64 [ %414, %413 ], [ %456, %415 ]
  %420 = getelementptr inbounds i32, i32* %403, i64 %416
  %421 = bitcast i32* %420 to <4 x i32>*
  %422 = load <4 x i32>, <4 x i32>* %421, align 4
  %423 = getelementptr inbounds i32, i32* %420, i64 4
  %424 = bitcast i32* %423 to <4 x i32>*
  %425 = load <4 x i32>, <4 x i32>* %424, align 4
  %426 = mul nsw <4 x i32> %422, %417
  %427 = mul nsw <4 x i32> %425, %418
  %428 = or i64 %416, 8
  %429 = getelementptr inbounds i32, i32* %403, i64 %428
  %430 = bitcast i32* %429 to <4 x i32>*
  %431 = load <4 x i32>, <4 x i32>* %430, align 4
  %432 = getelementptr inbounds i32, i32* %429, i64 4
  %433 = bitcast i32* %432 to <4 x i32>*
  %434 = load <4 x i32>, <4 x i32>* %433, align 4
  %435 = mul nsw <4 x i32> %431, %426
  %436 = mul nsw <4 x i32> %434, %427
  %437 = or i64 %416, 16
  %438 = getelementptr inbounds i32, i32* %403, i64 %437
  %439 = bitcast i32* %438 to <4 x i32>*
  %440 = load <4 x i32>, <4 x i32>* %439, align 4
  %441 = getelementptr inbounds i32, i32* %438, i64 4
  %442 = bitcast i32* %441 to <4 x i32>*
  %443 = load <4 x i32>, <4 x i32>* %442, align 4
  %444 = mul nsw <4 x i32> %440, %435
  %445 = mul nsw <4 x i32> %443, %436
  %446 = or i64 %416, 24
  %447 = getelementptr inbounds i32, i32* %403, i64 %446
  %448 = bitcast i32* %447 to <4 x i32>*
  %449 = load <4 x i32>, <4 x i32>* %448, align 4
  %450 = getelementptr inbounds i32, i32* %447, i64 4
  %451 = bitcast i32* %450 to <4 x i32>*
  %452 = load <4 x i32>, <4 x i32>* %451, align 4
  %453 = mul nsw <4 x i32> %449, %444
  %454 = mul nsw <4 x i32> %452, %445
  %455 = add i64 %416, 32
  %456 = add i64 %419, -4
  %457 = icmp eq i64 %456, 0
  br i1 %457, label %458, label %415, !llvm.loop !23

458:                                              ; preds = %415, %406
  %459 = phi <4 x i32> [ undef, %406 ], [ %453, %415 ]
  %460 = phi <4 x i32> [ undef, %406 ], [ %454, %415 ]
  %461 = phi i64 [ 0, %406 ], [ %455, %415 ]
  %462 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %406 ], [ %453, %415 ]
  %463 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %406 ], [ %454, %415 ]
  %464 = icmp eq i64 %411, 0
  br i1 %464, label %481, label %465

465:                                              ; preds = %458, %465
  %466 = phi i64 [ %478, %465 ], [ %461, %458 ]
  %467 = phi <4 x i32> [ %476, %465 ], [ %462, %458 ]
  %468 = phi <4 x i32> [ %477, %465 ], [ %463, %458 ]
  %469 = phi i64 [ %479, %465 ], [ %411, %458 ]
  %470 = getelementptr inbounds i32, i32* %403, i64 %466
  %471 = bitcast i32* %470 to <4 x i32>*
  %472 = load <4 x i32>, <4 x i32>* %471, align 4
  %473 = getelementptr inbounds i32, i32* %470, i64 4
  %474 = bitcast i32* %473 to <4 x i32>*
  %475 = load <4 x i32>, <4 x i32>* %474, align 4
  %476 = mul nsw <4 x i32> %472, %467
  %477 = mul nsw <4 x i32> %475, %468
  %478 = add i64 %466, 8
  %479 = add i64 %469, -1
  %480 = icmp eq i64 %479, 0
  br i1 %480, label %481, label %465, !llvm.loop !25

481:                                              ; preds = %465, %458
  %482 = phi <4 x i32> [ %459, %458 ], [ %476, %465 ]
  %483 = phi <4 x i32> [ %460, %458 ], [ %477, %465 ]
  %484 = mul <4 x i32> %483, %482
  %485 = shufflevector <4 x i32> %484, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %486 = mul <4 x i32> %484, %485
  %487 = shufflevector <4 x i32> %486, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %488 = mul <4 x i32> %486, %487
  %489 = extractelement <4 x i32> %488, i32 0
  %490 = icmp eq i64 %407, %404
  br i1 %490, label %502, label %491

491:                                              ; preds = %481, %402
  %492 = phi i64 [ 0, %402 ], [ %407, %481 ]
  %493 = phi i32 [ 1, %402 ], [ %489, %481 ]
  br label %494

494:                                              ; preds = %491, %494
  %495 = phi i64 [ %500, %494 ], [ %492, %491 ]
  %496 = phi i32 [ %499, %494 ], [ %493, %491 ]
  %497 = getelementptr inbounds i32, i32* %403, i64 %495
  %498 = load i32, i32* %497, align 4
  %499 = mul nsw i32 %498, %496
  %500 = add nuw nsw i64 %495, 1
  %501 = icmp eq i64 %500, %404
  br i1 %501, label %502, label %494, !llvm.loop !26

502:                                              ; preds = %494, %481
  %503 = phi i32 [ %489, %481 ], [ %499, %494 ]
  %504 = icmp sgt i32 %503, 0
  br i1 %504, label %505, label %526

505:                                              ; preds = %502, %399
  %506 = phi i32 [ %503, %502 ], [ 1, %399 ]
  %507 = zext i32 %506 to i64
  br label %508

508:                                              ; preds = %521, %505
  %509 = phi i64 [ 0, %505 ], [ %524, %521 ]
  %510 = getelementptr inbounds i32, i32* %326, i64 %509
  %511 = load i32, i32* %510, align 4
  %512 = getelementptr inbounds i32, i32* %359, i64 %509
  %513 = load i32, i32* %512, align 4
  %514 = srem i32 %511, %513
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %521, label %516

516:                                              ; preds = %508
  %517 = xor i32 %514, %513
  %518 = icmp slt i32 %517, 0
  %519 = select i1 %518, i32 %513, i32 0
  %520 = add nsw i32 %519, %514
  br label %521

521:                                              ; preds = %516, %508
  %522 = phi i32 [ 0, %508 ], [ %520, %516 ]
  %523 = getelementptr inbounds i32, i32* %393, i64 %509
  store i32 %522, i32* %523, align 4
  %524 = add nuw nsw i64 %509, 1
  %525 = icmp eq i64 %524, %507
  br i1 %525, label %526, label %508

526:                                              ; preds = %521, %502
  %527 = icmp sgt i32 %392, 5
  br i1 %527, label %528, label %534

528:                                              ; preds = %526
  %529 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %530 = load i32*, i32** %529, align 8
  %531 = icmp eq i32* %530, null
  br i1 %531, label %534, label %532

532:                                              ; preds = %528
  %533 = bitcast i32* %530 to i8*
  tail call void @_ZdaPv(i8* %533) #10
  br label %534

534:                                              ; preds = %532, %528, %526
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %360) #11
  %535 = icmp sgt i32 %358, 5
  br i1 %535, label %536, label %542

536:                                              ; preds = %534
  %537 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %538 = load i32*, i32** %537, align 8
  %539 = icmp eq i32* %538, null
  br i1 %539, label %542, label %540

540:                                              ; preds = %536
  %541 = bitcast i32* %538 to i8*
  tail call void @_ZdaPv(i8* %541) #10
  br label %542

542:                                              ; preds = %540, %536, %534
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %327) #11
  br i1 %395, label %543, label %549

543:                                              ; preds = %542
  %544 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %545 = load i32*, i32** %544, align 8
  %546 = icmp eq i32* %545, null
  br i1 %546, label %549, label %547

547:                                              ; preds = %543
  %548 = bitcast i32* %545 to i8*
  tail call void @_ZdaPv(i8* %548) #10
  br label %549

549:                                              ; preds = %547, %543, %542
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %293) #11
  br label %1550

550:                                              ; preds = %56
  %551 = getelementptr inbounds %"struct.tflite::ops::builtin::floor_mod::(anonymous namespace)::OpData", %"struct.tflite::ops::builtin::floor_mod::(anonymous namespace)::OpData"* %23, i64 0, i32 0
  %552 = load i8, i8* %551, align 1, !range !2
  %553 = icmp eq i8 %552, 0
  %554 = icmp eq %struct.TfLiteTensor* %45, null
  br i1 %554, label %559, label %555

555:                                              ; preds = %550
  %556 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1
  %557 = bitcast %union.TfLitePtrUnion* %556 to i64**
  %558 = load i64*, i64** %557, align 8
  br label %559

559:                                              ; preds = %555, %550
  %560 = phi i64* [ %558, %555 ], [ null, %550 ]
  %561 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 0
  %562 = load i32, i32* %561, align 8
  switch i32 %562, label %656 [
    i32 2, label %563
    i32 4, label %563
  ]

563:                                              ; preds = %559, %559
  %564 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %565 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %564, align 8
  %566 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %565, i64 0, i32 0
  %567 = load i32, i32* %566, align 4
  %568 = icmp sgt i32 %567, 0
  br i1 %568, label %569, label %642

569:                                              ; preds = %563
  %570 = sext i32 %567 to i64
  %571 = add nsw i64 %570, -1
  %572 = and i64 %570, 7
  %573 = icmp ult i64 %571, 7
  br i1 %573, label %622, label %574

574:                                              ; preds = %569
  %575 = sub nsw i64 %570, %572
  br label %576

576:                                              ; preds = %576, %574
  %577 = phi i64 [ 0, %574 ], [ %619, %576 ]
  %578 = phi i64 [ 1, %574 ], [ %618, %576 ]
  %579 = phi i64 [ %575, %574 ], [ %620, %576 ]
  %580 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %565, i64 0, i32 1, i64 %577
  %581 = load i32, i32* %580, align 4
  %582 = sext i32 %581 to i64
  %583 = mul nsw i64 %578, %582
  %584 = or i64 %577, 1
  %585 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %565, i64 0, i32 1, i64 %584
  %586 = load i32, i32* %585, align 4
  %587 = sext i32 %586 to i64
  %588 = mul nsw i64 %583, %587
  %589 = or i64 %577, 2
  %590 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %565, i64 0, i32 1, i64 %589
  %591 = load i32, i32* %590, align 4
  %592 = sext i32 %591 to i64
  %593 = mul nsw i64 %588, %592
  %594 = or i64 %577, 3
  %595 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %565, i64 0, i32 1, i64 %594
  %596 = load i32, i32* %595, align 4
  %597 = sext i32 %596 to i64
  %598 = mul nsw i64 %593, %597
  %599 = or i64 %577, 4
  %600 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %565, i64 0, i32 1, i64 %599
  %601 = load i32, i32* %600, align 4
  %602 = sext i32 %601 to i64
  %603 = mul nsw i64 %598, %602
  %604 = or i64 %577, 5
  %605 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %565, i64 0, i32 1, i64 %604
  %606 = load i32, i32* %605, align 4
  %607 = sext i32 %606 to i64
  %608 = mul nsw i64 %603, %607
  %609 = or i64 %577, 6
  %610 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %565, i64 0, i32 1, i64 %609
  %611 = load i32, i32* %610, align 4
  %612 = sext i32 %611 to i64
  %613 = mul nsw i64 %608, %612
  %614 = or i64 %577, 7
  %615 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %565, i64 0, i32 1, i64 %614
  %616 = load i32, i32* %615, align 4
  %617 = sext i32 %616 to i64
  %618 = mul nsw i64 %613, %617
  %619 = add nuw nsw i64 %577, 8
  %620 = add i64 %579, -8
  %621 = icmp eq i64 %620, 0
  br i1 %621, label %622, label %576

622:                                              ; preds = %576, %569
  %623 = phi i64 [ undef, %569 ], [ %618, %576 ]
  %624 = phi i64 [ 0, %569 ], [ %619, %576 ]
  %625 = phi i64 [ 1, %569 ], [ %618, %576 ]
  %626 = icmp eq i64 %572, 0
  br i1 %626, label %638, label %627

627:                                              ; preds = %622, %627
  %628 = phi i64 [ %635, %627 ], [ %624, %622 ]
  %629 = phi i64 [ %634, %627 ], [ %625, %622 ]
  %630 = phi i64 [ %636, %627 ], [ %572, %622 ]
  %631 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %565, i64 0, i32 1, i64 %628
  %632 = load i32, i32* %631, align 4
  %633 = sext i32 %632 to i64
  %634 = mul nsw i64 %629, %633
  %635 = add nuw nsw i64 %628, 1
  %636 = add i64 %630, -1
  %637 = icmp eq i64 %636, 0
  br i1 %637, label %638, label %627, !llvm.loop !28

638:                                              ; preds = %627, %622
  %639 = phi i64 [ %623, %622 ], [ %634, %627 ]
  %640 = trunc i64 %639 to i32
  %641 = icmp sgt i32 %640, 0
  br i1 %641, label %642, label %656

642:                                              ; preds = %638, %563
  %643 = phi i64 [ %639, %638 ], [ 1, %563 ]
  %644 = and i64 %643, 4294967295
  br label %647

645:                                              ; preds = %647
  %646 = icmp eq i64 %652, %644
  br i1 %646, label %656, label %647

647:                                              ; preds = %645, %642
  %648 = phi i64 [ 0, %642 ], [ %652, %645 ]
  %649 = getelementptr inbounds i64, i64* %560, i64 %648
  %650 = load i64, i64* %649, align 8
  %651 = icmp eq i64 %650, 0
  %652 = add nuw nsw i64 %648, 1
  br i1 %651, label %653, label %645

653:                                              ; preds = %647
  %654 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %655 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %654, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %655(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0)) #11
  br label %1550

656:                                              ; preds = %645, %638, %559
  br i1 %553, label %785, label %657

657:                                              ; preds = %656
  %658 = bitcast %"class.tflite::RuntimeShape"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %658) #11
  %659 = icmp eq %struct.TfLiteTensor* %35, null
  br i1 %659, label %660, label %662

660:                                              ; preds = %657
  %661 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  store i32 0, i32* %661, align 8, !alias.scope !29
  br label %690

662:                                              ; preds = %657
  %663 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %35, i64 0, i32 2
  %664 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %663, align 8, !noalias !29
  %665 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %664, i64 0, i32 0
  %666 = load i32, i32* %665, align 4, !noalias !29
  %667 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %664, i64 0, i32 1, i64 0
  %668 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  store i32 %666, i32* %668, align 8, !alias.scope !29
  %669 = icmp sgt i32 %666, 5
  br i1 %669, label %670, label %677

670:                                              ; preds = %662
  %671 = sext i32 %666 to i64
  %672 = shl nsw i64 %671, 2
  %673 = tail call i8* @_Znam(i64 %672) #10, !noalias !29
  %674 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 0
  %675 = bitcast i32** %674 to i8**
  store i8* %673, i8** %675, align 8, !alias.scope !29
  %676 = bitcast i8* %673 to i32*
  br label %682

677:                                              ; preds = %662
  %678 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %679 = bitcast %union.anon* %678 to i32*
  %680 = sext i32 %666 to i64
  %681 = shl nsw i64 %680, 2
  br label %682

682:                                              ; preds = %677, %670
  %683 = phi i64 [ %672, %670 ], [ %681, %677 ]
  %684 = phi i32* [ %676, %670 ], [ %679, %677 ]
  %685 = bitcast i32* %684 to i8*
  %686 = bitcast i32* %667 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %685, i8* align 4 %686, i64 %683, i1 false) #11
  %687 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %35, i64 0, i32 1
  %688 = bitcast %union.TfLitePtrUnion* %687 to i64**
  %689 = load i64*, i64** %688, align 8
  br label %690

690:                                              ; preds = %682, %660
  %691 = phi i64* [ %689, %682 ], [ null, %660 ]
  %692 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %692) #11
  br i1 %554, label %693, label %695

693:                                              ; preds = %690
  %694 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %694, align 8, !alias.scope !32
  br label %720

695:                                              ; preds = %690
  %696 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %697 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %696, align 8, !noalias !32
  %698 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %697, i64 0, i32 0
  %699 = load i32, i32* %698, align 4, !noalias !32
  %700 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %697, i64 0, i32 1, i64 0
  %701 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %699, i32* %701, align 8, !alias.scope !32
  %702 = icmp sgt i32 %699, 5
  br i1 %702, label %703, label %710

703:                                              ; preds = %695
  %704 = sext i32 %699 to i64
  %705 = shl nsw i64 %704, 2
  %706 = tail call i8* @_Znam(i64 %705) #10, !noalias !32
  %707 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %708 = bitcast i32** %707 to i8**
  store i8* %706, i8** %708, align 8, !alias.scope !32
  %709 = bitcast i8* %706 to i32*
  br label %715

710:                                              ; preds = %695
  %711 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %712 = bitcast %union.anon* %711 to i32*
  %713 = sext i32 %699 to i64
  %714 = shl nsw i64 %713, 2
  br label %715

715:                                              ; preds = %710, %703
  %716 = phi i64 [ %705, %703 ], [ %714, %710 ]
  %717 = phi i32* [ %709, %703 ], [ %712, %710 ]
  %718 = bitcast i32* %717 to i8*
  %719 = bitcast i32* %700 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %718, i8* align 4 %719, i64 %716, i1 false) #11
  br label %720

720:                                              ; preds = %715, %693
  %721 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %721) #11
  %722 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %722, label %723, label %725

723:                                              ; preds = %720
  %724 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %724, align 8, !alias.scope !35
  br label %753

725:                                              ; preds = %720
  %726 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %727 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %726, align 8, !noalias !35
  %728 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %727, i64 0, i32 0
  %729 = load i32, i32* %728, align 4, !noalias !35
  %730 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %727, i64 0, i32 1, i64 0
  %731 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %729, i32* %731, align 8, !alias.scope !35
  %732 = icmp sgt i32 %729, 5
  br i1 %732, label %733, label %740

733:                                              ; preds = %725
  %734 = sext i32 %729 to i64
  %735 = shl nsw i64 %734, 2
  %736 = tail call i8* @_Znam(i64 %735) #10, !noalias !35
  %737 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %738 = bitcast i32** %737 to i8**
  store i8* %736, i8** %738, align 8, !alias.scope !35
  %739 = bitcast i8* %736 to i32*
  br label %745

740:                                              ; preds = %725
  %741 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %742 = bitcast %union.anon* %741 to i32*
  %743 = sext i32 %729 to i64
  %744 = shl nsw i64 %743, 2
  br label %745

745:                                              ; preds = %740, %733
  %746 = phi i64 [ %735, %733 ], [ %744, %740 ]
  %747 = phi i32* [ %739, %733 ], [ %742, %740 ]
  %748 = bitcast i32* %747 to i8*
  %749 = bitcast i32* %730 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %748, i8* align 4 %749, i64 %746, i1 false) #11
  %750 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %751 = bitcast %union.TfLitePtrUnion* %750 to i64**
  %752 = load i64*, i64** %751, align 8
  br label %753

753:                                              ; preds = %745, %723
  %754 = phi i64* [ %752, %745 ], [ null, %723 ]
  call void @_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIlllEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %3, i64* %691, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i64* %560, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i64* %754, i64 (i64, i64)* nonnull @_ZN6tflite13reference_ops8FloorModIlEET_S2_S2_) #11
  %755 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %756 = load i32, i32* %755, align 8
  %757 = icmp sgt i32 %756, 5
  br i1 %757, label %758, label %764

758:                                              ; preds = %753
  %759 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %760 = load i32*, i32** %759, align 8
  %761 = icmp eq i32* %760, null
  br i1 %761, label %764, label %762

762:                                              ; preds = %758
  %763 = bitcast i32* %760 to i8*
  call void @_ZdaPv(i8* %763) #10
  br label %764

764:                                              ; preds = %762, %758, %753
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %721) #11
  %765 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %766 = load i32, i32* %765, align 8
  %767 = icmp sgt i32 %766, 5
  br i1 %767, label %768, label %774

768:                                              ; preds = %764
  %769 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %770 = load i32*, i32** %769, align 8
  %771 = icmp eq i32* %770, null
  br i1 %771, label %774, label %772

772:                                              ; preds = %768
  %773 = bitcast i32* %770 to i8*
  call void @_ZdaPv(i8* %773) #10
  br label %774

774:                                              ; preds = %772, %768, %764
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %692) #11
  %775 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %776 = load i32, i32* %775, align 8
  %777 = icmp sgt i32 %776, 5
  br i1 %777, label %778, label %784

778:                                              ; preds = %774
  %779 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 0
  %780 = load i32*, i32** %779, align 8
  %781 = icmp eq i32* %780, null
  br i1 %781, label %784, label %782

782:                                              ; preds = %778
  %783 = bitcast i32* %780 to i8*
  call void @_ZdaPv(i8* %783) #10
  br label %784

784:                                              ; preds = %782, %778, %774
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %658) #11
  br label %1550

785:                                              ; preds = %656
  %786 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %786) #11
  %787 = icmp eq %struct.TfLiteTensor* %35, null
  br i1 %787, label %788, label %790

788:                                              ; preds = %785
  %789 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %789, align 8, !alias.scope !38
  br label %818

790:                                              ; preds = %785
  %791 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %35, i64 0, i32 2
  %792 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %791, align 8, !noalias !38
  %793 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %792, i64 0, i32 0
  %794 = load i32, i32* %793, align 4, !noalias !38
  %795 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %792, i64 0, i32 1, i64 0
  %796 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %794, i32* %796, align 8, !alias.scope !38
  %797 = icmp sgt i32 %794, 5
  br i1 %797, label %798, label %805

798:                                              ; preds = %790
  %799 = sext i32 %794 to i64
  %800 = shl nsw i64 %799, 2
  %801 = tail call i8* @_Znam(i64 %800) #10, !noalias !38
  %802 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %803 = bitcast i32** %802 to i8**
  store i8* %801, i8** %803, align 8, !alias.scope !38
  %804 = bitcast i8* %801 to i32*
  br label %810

805:                                              ; preds = %790
  %806 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %807 = bitcast %union.anon* %806 to i32*
  %808 = sext i32 %794 to i64
  %809 = shl nsw i64 %808, 2
  br label %810

810:                                              ; preds = %805, %798
  %811 = phi i64 [ %800, %798 ], [ %809, %805 ]
  %812 = phi i32* [ %804, %798 ], [ %807, %805 ]
  %813 = bitcast i32* %812 to i8*
  %814 = bitcast i32* %795 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %813, i8* align 4 %814, i64 %811, i1 false) #11
  %815 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %35, i64 0, i32 1
  %816 = bitcast %union.TfLitePtrUnion* %815 to i64**
  %817 = load i64*, i64** %816, align 8
  br label %818

818:                                              ; preds = %810, %788
  %819 = phi i32 [ %794, %810 ], [ 0, %788 ]
  %820 = phi i64* [ %817, %810 ], [ null, %788 ]
  %821 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %821) #11
  br i1 %554, label %822, label %824

822:                                              ; preds = %818
  %823 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %823, align 8, !alias.scope !41
  br label %852

824:                                              ; preds = %818
  %825 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %826 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %825, align 8, !noalias !41
  %827 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %826, i64 0, i32 0
  %828 = load i32, i32* %827, align 4, !noalias !41
  %829 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %826, i64 0, i32 1, i64 0
  %830 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %828, i32* %830, align 8, !alias.scope !41
  %831 = icmp sgt i32 %828, 5
  br i1 %831, label %832, label %839

832:                                              ; preds = %824
  %833 = sext i32 %828 to i64
  %834 = shl nsw i64 %833, 2
  %835 = tail call i8* @_Znam(i64 %834) #10, !noalias !41
  %836 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %837 = bitcast i32** %836 to i8**
  store i8* %835, i8** %837, align 8, !alias.scope !41
  %838 = bitcast i8* %835 to i32*
  br label %844

839:                                              ; preds = %824
  %840 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %841 = bitcast %union.anon* %840 to i32*
  %842 = sext i32 %828 to i64
  %843 = shl nsw i64 %842, 2
  br label %844

844:                                              ; preds = %839, %832
  %845 = phi i64 [ %834, %832 ], [ %843, %839 ]
  %846 = phi i32* [ %838, %832 ], [ %841, %839 ]
  %847 = bitcast i32* %846 to i8*
  %848 = bitcast i32* %829 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %847, i8* align 4 %848, i64 %845, i1 false) #11
  %849 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1
  %850 = bitcast %union.TfLitePtrUnion* %849 to i64**
  %851 = load i64*, i64** %850, align 8
  br label %852

852:                                              ; preds = %844, %822
  %853 = phi i32 [ %828, %844 ], [ 0, %822 ]
  %854 = phi i64* [ %851, %844 ], [ null, %822 ]
  %855 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %855) #11
  %856 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %856, label %857, label %859

857:                                              ; preds = %852
  %858 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %858, align 8, !alias.scope !44
  br label %887

859:                                              ; preds = %852
  %860 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %861 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %860, align 8, !noalias !44
  %862 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %861, i64 0, i32 0
  %863 = load i32, i32* %862, align 4, !noalias !44
  %864 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %861, i64 0, i32 1, i64 0
  %865 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %863, i32* %865, align 8, !alias.scope !44
  %866 = icmp sgt i32 %863, 5
  br i1 %866, label %867, label %874

867:                                              ; preds = %859
  %868 = sext i32 %863 to i64
  %869 = shl nsw i64 %868, 2
  %870 = tail call i8* @_Znam(i64 %869) #10, !noalias !44
  %871 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %872 = bitcast i32** %871 to i8**
  store i8* %870, i8** %872, align 8, !alias.scope !44
  %873 = bitcast i8* %870 to i32*
  br label %879

874:                                              ; preds = %859
  %875 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %876 = bitcast %union.anon* %875 to i32*
  %877 = sext i32 %863 to i64
  %878 = shl nsw i64 %877, 2
  br label %879

879:                                              ; preds = %874, %867
  %880 = phi i64 [ %869, %867 ], [ %878, %874 ]
  %881 = phi i32* [ %873, %867 ], [ %876, %874 ]
  %882 = bitcast i32* %881 to i8*
  %883 = bitcast i32* %864 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %882, i8* align 4 %883, i64 %880, i1 false) #11
  %884 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %885 = bitcast %union.TfLitePtrUnion* %884 to i64**
  %886 = load i64*, i64** %885, align 8
  br label %887

887:                                              ; preds = %879, %857
  %888 = phi i32 [ %863, %879 ], [ 0, %857 ]
  %889 = phi i64* [ %886, %879 ], [ null, %857 ]
  %890 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %891 = icmp sgt i32 %819, 5
  br i1 %891, label %892, label %895

892:                                              ; preds = %887
  %893 = getelementptr inbounds %union.anon, %union.anon* %890, i64 0, i32 0
  %894 = load i32*, i32** %893, align 8
  br label %898

895:                                              ; preds = %887
  %896 = bitcast %union.anon* %890 to i32*
  %897 = icmp sgt i32 %819, 0
  br i1 %897, label %898, label %1001

898:                                              ; preds = %895, %892
  %899 = phi i32* [ %894, %892 ], [ %896, %895 ]
  %900 = zext i32 %819 to i64
  %901 = icmp ult i32 %819, 8
  br i1 %901, label %987, label %902

902:                                              ; preds = %898
  %903 = and i64 %900, 4294967288
  %904 = add nsw i64 %903, -8
  %905 = lshr exact i64 %904, 3
  %906 = add nuw nsw i64 %905, 1
  %907 = and i64 %906, 3
  %908 = icmp ult i64 %904, 24
  br i1 %908, label %954, label %909

909:                                              ; preds = %902
  %910 = sub nsw i64 %906, %907
  br label %911

911:                                              ; preds = %911, %909
  %912 = phi i64 [ 0, %909 ], [ %951, %911 ]
  %913 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %909 ], [ %949, %911 ]
  %914 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %909 ], [ %950, %911 ]
  %915 = phi i64 [ %910, %909 ], [ %952, %911 ]
  %916 = getelementptr inbounds i32, i32* %899, i64 %912
  %917 = bitcast i32* %916 to <4 x i32>*
  %918 = load <4 x i32>, <4 x i32>* %917, align 4
  %919 = getelementptr inbounds i32, i32* %916, i64 4
  %920 = bitcast i32* %919 to <4 x i32>*
  %921 = load <4 x i32>, <4 x i32>* %920, align 4
  %922 = mul nsw <4 x i32> %918, %913
  %923 = mul nsw <4 x i32> %921, %914
  %924 = or i64 %912, 8
  %925 = getelementptr inbounds i32, i32* %899, i64 %924
  %926 = bitcast i32* %925 to <4 x i32>*
  %927 = load <4 x i32>, <4 x i32>* %926, align 4
  %928 = getelementptr inbounds i32, i32* %925, i64 4
  %929 = bitcast i32* %928 to <4 x i32>*
  %930 = load <4 x i32>, <4 x i32>* %929, align 4
  %931 = mul nsw <4 x i32> %927, %922
  %932 = mul nsw <4 x i32> %930, %923
  %933 = or i64 %912, 16
  %934 = getelementptr inbounds i32, i32* %899, i64 %933
  %935 = bitcast i32* %934 to <4 x i32>*
  %936 = load <4 x i32>, <4 x i32>* %935, align 4
  %937 = getelementptr inbounds i32, i32* %934, i64 4
  %938 = bitcast i32* %937 to <4 x i32>*
  %939 = load <4 x i32>, <4 x i32>* %938, align 4
  %940 = mul nsw <4 x i32> %936, %931
  %941 = mul nsw <4 x i32> %939, %932
  %942 = or i64 %912, 24
  %943 = getelementptr inbounds i32, i32* %899, i64 %942
  %944 = bitcast i32* %943 to <4 x i32>*
  %945 = load <4 x i32>, <4 x i32>* %944, align 4
  %946 = getelementptr inbounds i32, i32* %943, i64 4
  %947 = bitcast i32* %946 to <4 x i32>*
  %948 = load <4 x i32>, <4 x i32>* %947, align 4
  %949 = mul nsw <4 x i32> %945, %940
  %950 = mul nsw <4 x i32> %948, %941
  %951 = add i64 %912, 32
  %952 = add i64 %915, -4
  %953 = icmp eq i64 %952, 0
  br i1 %953, label %954, label %911, !llvm.loop !47

954:                                              ; preds = %911, %902
  %955 = phi <4 x i32> [ undef, %902 ], [ %949, %911 ]
  %956 = phi <4 x i32> [ undef, %902 ], [ %950, %911 ]
  %957 = phi i64 [ 0, %902 ], [ %951, %911 ]
  %958 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %902 ], [ %949, %911 ]
  %959 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %902 ], [ %950, %911 ]
  %960 = icmp eq i64 %907, 0
  br i1 %960, label %977, label %961

961:                                              ; preds = %954, %961
  %962 = phi i64 [ %974, %961 ], [ %957, %954 ]
  %963 = phi <4 x i32> [ %972, %961 ], [ %958, %954 ]
  %964 = phi <4 x i32> [ %973, %961 ], [ %959, %954 ]
  %965 = phi i64 [ %975, %961 ], [ %907, %954 ]
  %966 = getelementptr inbounds i32, i32* %899, i64 %962
  %967 = bitcast i32* %966 to <4 x i32>*
  %968 = load <4 x i32>, <4 x i32>* %967, align 4
  %969 = getelementptr inbounds i32, i32* %966, i64 4
  %970 = bitcast i32* %969 to <4 x i32>*
  %971 = load <4 x i32>, <4 x i32>* %970, align 4
  %972 = mul nsw <4 x i32> %968, %963
  %973 = mul nsw <4 x i32> %971, %964
  %974 = add i64 %962, 8
  %975 = add i64 %965, -1
  %976 = icmp eq i64 %975, 0
  br i1 %976, label %977, label %961, !llvm.loop !48

977:                                              ; preds = %961, %954
  %978 = phi <4 x i32> [ %955, %954 ], [ %972, %961 ]
  %979 = phi <4 x i32> [ %956, %954 ], [ %973, %961 ]
  %980 = mul <4 x i32> %979, %978
  %981 = shufflevector <4 x i32> %980, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %982 = mul <4 x i32> %980, %981
  %983 = shufflevector <4 x i32> %982, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %984 = mul <4 x i32> %982, %983
  %985 = extractelement <4 x i32> %984, i32 0
  %986 = icmp eq i64 %903, %900
  br i1 %986, label %998, label %987

987:                                              ; preds = %977, %898
  %988 = phi i64 [ 0, %898 ], [ %903, %977 ]
  %989 = phi i32 [ 1, %898 ], [ %985, %977 ]
  br label %990

990:                                              ; preds = %987, %990
  %991 = phi i64 [ %996, %990 ], [ %988, %987 ]
  %992 = phi i32 [ %995, %990 ], [ %989, %987 ]
  %993 = getelementptr inbounds i32, i32* %899, i64 %991
  %994 = load i32, i32* %993, align 4
  %995 = mul nsw i32 %994, %992
  %996 = add nuw nsw i64 %991, 1
  %997 = icmp eq i64 %996, %900
  br i1 %997, label %998, label %990, !llvm.loop !49

998:                                              ; preds = %990, %977
  %999 = phi i32 [ %985, %977 ], [ %995, %990 ]
  %1000 = icmp sgt i32 %999, 0
  br i1 %1000, label %1001, label %1025

1001:                                             ; preds = %998, %895
  %1002 = phi i32 [ %999, %998 ], [ 1, %895 ]
  %1003 = zext i32 %1002 to i64
  br label %1004

1004:                                             ; preds = %1020, %1001
  %1005 = phi i64 [ 0, %1001 ], [ %1023, %1020 ]
  %1006 = getelementptr inbounds i64, i64* %820, i64 %1005
  %1007 = load i64, i64* %1006, align 8
  %1008 = getelementptr inbounds i64, i64* %854, i64 %1005
  %1009 = load i64, i64* %1008, align 8
  %1010 = srem i64 %1007, %1009
  %1011 = icmp eq i64 %1010, 0
  br i1 %1011, label %1020, label %1012

1012:                                             ; preds = %1004
  %1013 = lshr i64 %1009, 63
  %1014 = trunc i64 %1013 to i32
  %1015 = lshr i64 %1010, 63
  %1016 = trunc i64 %1015 to i32
  %1017 = icmp eq i32 %1014, %1016
  %1018 = select i1 %1017, i64 0, i64 %1009
  %1019 = add nsw i64 %1018, %1010
  br label %1020

1020:                                             ; preds = %1012, %1004
  %1021 = phi i64 [ 0, %1004 ], [ %1019, %1012 ]
  %1022 = getelementptr inbounds i64, i64* %889, i64 %1005
  store i64 %1021, i64* %1022, align 8
  %1023 = add nuw nsw i64 %1005, 1
  %1024 = icmp eq i64 %1023, %1003
  br i1 %1024, label %1025, label %1004

1025:                                             ; preds = %1020, %998
  %1026 = icmp sgt i32 %888, 5
  br i1 %1026, label %1027, label %1033

1027:                                             ; preds = %1025
  %1028 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %1029 = load i32*, i32** %1028, align 8
  %1030 = icmp eq i32* %1029, null
  br i1 %1030, label %1033, label %1031

1031:                                             ; preds = %1027
  %1032 = bitcast i32* %1029 to i8*
  tail call void @_ZdaPv(i8* %1032) #10
  br label %1033

1033:                                             ; preds = %1031, %1027, %1025
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %855) #11
  %1034 = icmp sgt i32 %853, 5
  br i1 %1034, label %1035, label %1041

1035:                                             ; preds = %1033
  %1036 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %1037 = load i32*, i32** %1036, align 8
  %1038 = icmp eq i32* %1037, null
  br i1 %1038, label %1041, label %1039

1039:                                             ; preds = %1035
  %1040 = bitcast i32* %1037 to i8*
  tail call void @_ZdaPv(i8* %1040) #10
  br label %1041

1041:                                             ; preds = %1039, %1035, %1033
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %821) #11
  br i1 %891, label %1042, label %1048

1042:                                             ; preds = %1041
  %1043 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %1044 = load i32*, i32** %1043, align 8
  %1045 = icmp eq i32* %1044, null
  br i1 %1045, label %1048, label %1046

1046:                                             ; preds = %1042
  %1047 = bitcast i32* %1044 to i8*
  tail call void @_ZdaPv(i8* %1047) #10
  br label %1048

1048:                                             ; preds = %1046, %1042, %1041
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %786) #11
  br label %1550

1049:                                             ; preds = %56
  %1050 = getelementptr inbounds %"struct.tflite::ops::builtin::floor_mod::(anonymous namespace)::OpData", %"struct.tflite::ops::builtin::floor_mod::(anonymous namespace)::OpData"* %23, i64 0, i32 0
  %1051 = load i8, i8* %1050, align 1, !range !2
  %1052 = icmp eq i8 %1051, 0
  %1053 = icmp eq %struct.TfLiteTensor* %45, null
  br i1 %1053, label %1058, label %1054

1054:                                             ; preds = %1049
  %1055 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1
  %1056 = bitcast %union.TfLitePtrUnion* %1055 to float**
  %1057 = load float*, float** %1056, align 8
  br label %1058

1058:                                             ; preds = %1054, %1049
  %1059 = phi float* [ %1057, %1054 ], [ null, %1049 ]
  %1060 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 0
  %1061 = load i32, i32* %1060, align 8
  switch i32 %1061, label %1155 [
    i32 2, label %1062
    i32 4, label %1062
  ]

1062:                                             ; preds = %1058, %1058
  %1063 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %1064 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1063, align 8
  %1065 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1064, i64 0, i32 0
  %1066 = load i32, i32* %1065, align 4
  %1067 = icmp sgt i32 %1066, 0
  br i1 %1067, label %1068, label %1141

1068:                                             ; preds = %1062
  %1069 = sext i32 %1066 to i64
  %1070 = add nsw i64 %1069, -1
  %1071 = and i64 %1069, 7
  %1072 = icmp ult i64 %1070, 7
  br i1 %1072, label %1121, label %1073

1073:                                             ; preds = %1068
  %1074 = sub nsw i64 %1069, %1071
  br label %1075

1075:                                             ; preds = %1075, %1073
  %1076 = phi i64 [ 0, %1073 ], [ %1118, %1075 ]
  %1077 = phi i64 [ 1, %1073 ], [ %1117, %1075 ]
  %1078 = phi i64 [ %1074, %1073 ], [ %1119, %1075 ]
  %1079 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1064, i64 0, i32 1, i64 %1076
  %1080 = load i32, i32* %1079, align 4
  %1081 = sext i32 %1080 to i64
  %1082 = mul nsw i64 %1077, %1081
  %1083 = or i64 %1076, 1
  %1084 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1064, i64 0, i32 1, i64 %1083
  %1085 = load i32, i32* %1084, align 4
  %1086 = sext i32 %1085 to i64
  %1087 = mul nsw i64 %1082, %1086
  %1088 = or i64 %1076, 2
  %1089 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1064, i64 0, i32 1, i64 %1088
  %1090 = load i32, i32* %1089, align 4
  %1091 = sext i32 %1090 to i64
  %1092 = mul nsw i64 %1087, %1091
  %1093 = or i64 %1076, 3
  %1094 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1064, i64 0, i32 1, i64 %1093
  %1095 = load i32, i32* %1094, align 4
  %1096 = sext i32 %1095 to i64
  %1097 = mul nsw i64 %1092, %1096
  %1098 = or i64 %1076, 4
  %1099 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1064, i64 0, i32 1, i64 %1098
  %1100 = load i32, i32* %1099, align 4
  %1101 = sext i32 %1100 to i64
  %1102 = mul nsw i64 %1097, %1101
  %1103 = or i64 %1076, 5
  %1104 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1064, i64 0, i32 1, i64 %1103
  %1105 = load i32, i32* %1104, align 4
  %1106 = sext i32 %1105 to i64
  %1107 = mul nsw i64 %1102, %1106
  %1108 = or i64 %1076, 6
  %1109 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1064, i64 0, i32 1, i64 %1108
  %1110 = load i32, i32* %1109, align 4
  %1111 = sext i32 %1110 to i64
  %1112 = mul nsw i64 %1107, %1111
  %1113 = or i64 %1076, 7
  %1114 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1064, i64 0, i32 1, i64 %1113
  %1115 = load i32, i32* %1114, align 4
  %1116 = sext i32 %1115 to i64
  %1117 = mul nsw i64 %1112, %1116
  %1118 = add nuw nsw i64 %1076, 8
  %1119 = add i64 %1078, -8
  %1120 = icmp eq i64 %1119, 0
  br i1 %1120, label %1121, label %1075

1121:                                             ; preds = %1075, %1068
  %1122 = phi i64 [ undef, %1068 ], [ %1117, %1075 ]
  %1123 = phi i64 [ 0, %1068 ], [ %1118, %1075 ]
  %1124 = phi i64 [ 1, %1068 ], [ %1117, %1075 ]
  %1125 = icmp eq i64 %1071, 0
  br i1 %1125, label %1137, label %1126

1126:                                             ; preds = %1121, %1126
  %1127 = phi i64 [ %1134, %1126 ], [ %1123, %1121 ]
  %1128 = phi i64 [ %1133, %1126 ], [ %1124, %1121 ]
  %1129 = phi i64 [ %1135, %1126 ], [ %1071, %1121 ]
  %1130 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1064, i64 0, i32 1, i64 %1127
  %1131 = load i32, i32* %1130, align 4
  %1132 = sext i32 %1131 to i64
  %1133 = mul nsw i64 %1128, %1132
  %1134 = add nuw nsw i64 %1127, 1
  %1135 = add i64 %1129, -1
  %1136 = icmp eq i64 %1135, 0
  br i1 %1136, label %1137, label %1126, !llvm.loop !50

1137:                                             ; preds = %1126, %1121
  %1138 = phi i64 [ %1122, %1121 ], [ %1133, %1126 ]
  %1139 = trunc i64 %1138 to i32
  %1140 = icmp sgt i32 %1139, 0
  br i1 %1140, label %1141, label %1155

1141:                                             ; preds = %1137, %1062
  %1142 = phi i64 [ %1138, %1137 ], [ 1, %1062 ]
  %1143 = and i64 %1142, 4294967295
  br label %1146

1144:                                             ; preds = %1146
  %1145 = icmp eq i64 %1151, %1143
  br i1 %1145, label %1155, label %1146

1146:                                             ; preds = %1144, %1141
  %1147 = phi i64 [ 0, %1141 ], [ %1151, %1144 ]
  %1148 = getelementptr inbounds float, float* %1059, i64 %1147
  %1149 = load float, float* %1148, align 4
  %1150 = fcmp oeq float %1149, 0.000000e+00
  %1151 = add nuw nsw i64 %1147, 1
  br i1 %1150, label %1152, label %1144

1152:                                             ; preds = %1146
  %1153 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1154 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1153, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %1154(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0)) #11
  br label %1550

1155:                                             ; preds = %1144, %1137, %1058
  br i1 %1052, label %1284, label %1156

1156:                                             ; preds = %1155
  %1157 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1157) #11
  %1158 = icmp eq %struct.TfLiteTensor* %35, null
  br i1 %1158, label %1159, label %1161

1159:                                             ; preds = %1156
  %1160 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %1160, align 8, !alias.scope !51
  br label %1189

1161:                                             ; preds = %1156
  %1162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %35, i64 0, i32 2
  %1163 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1162, align 8, !noalias !51
  %1164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1163, i64 0, i32 0
  %1165 = load i32, i32* %1164, align 4, !noalias !51
  %1166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1163, i64 0, i32 1, i64 0
  %1167 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %1165, i32* %1167, align 8, !alias.scope !51
  %1168 = icmp sgt i32 %1165, 5
  br i1 %1168, label %1169, label %1176

1169:                                             ; preds = %1161
  %1170 = sext i32 %1165 to i64
  %1171 = shl nsw i64 %1170, 2
  %1172 = tail call i8* @_Znam(i64 %1171) #10, !noalias !51
  %1173 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %1174 = bitcast i32** %1173 to i8**
  store i8* %1172, i8** %1174, align 8, !alias.scope !51
  %1175 = bitcast i8* %1172 to i32*
  br label %1181

1176:                                             ; preds = %1161
  %1177 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %1178 = bitcast %union.anon* %1177 to i32*
  %1179 = sext i32 %1165 to i64
  %1180 = shl nsw i64 %1179, 2
  br label %1181

1181:                                             ; preds = %1176, %1169
  %1182 = phi i64 [ %1171, %1169 ], [ %1180, %1176 ]
  %1183 = phi i32* [ %1175, %1169 ], [ %1178, %1176 ]
  %1184 = bitcast i32* %1183 to i8*
  %1185 = bitcast i32* %1166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1184, i8* align 4 %1185, i64 %1182, i1 false) #11
  %1186 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %35, i64 0, i32 1
  %1187 = bitcast %union.TfLitePtrUnion* %1186 to float**
  %1188 = load float*, float** %1187, align 8
  br label %1189

1189:                                             ; preds = %1181, %1159
  %1190 = phi float* [ %1188, %1181 ], [ null, %1159 ]
  %1191 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1191) #11
  br i1 %1053, label %1192, label %1194

1192:                                             ; preds = %1189
  %1193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %1193, align 8, !alias.scope !54
  br label %1219

1194:                                             ; preds = %1189
  %1195 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %1196 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1195, align 8, !noalias !54
  %1197 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1196, i64 0, i32 0
  %1198 = load i32, i32* %1197, align 4, !noalias !54
  %1199 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1196, i64 0, i32 1, i64 0
  %1200 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %1198, i32* %1200, align 8, !alias.scope !54
  %1201 = icmp sgt i32 %1198, 5
  br i1 %1201, label %1202, label %1209

1202:                                             ; preds = %1194
  %1203 = sext i32 %1198 to i64
  %1204 = shl nsw i64 %1203, 2
  %1205 = tail call i8* @_Znam(i64 %1204) #10, !noalias !54
  %1206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %1207 = bitcast i32** %1206 to i8**
  store i8* %1205, i8** %1207, align 8, !alias.scope !54
  %1208 = bitcast i8* %1205 to i32*
  br label %1214

1209:                                             ; preds = %1194
  %1210 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %1211 = bitcast %union.anon* %1210 to i32*
  %1212 = sext i32 %1198 to i64
  %1213 = shl nsw i64 %1212, 2
  br label %1214

1214:                                             ; preds = %1209, %1202
  %1215 = phi i64 [ %1204, %1202 ], [ %1213, %1209 ]
  %1216 = phi i32* [ %1208, %1202 ], [ %1211, %1209 ]
  %1217 = bitcast i32* %1216 to i8*
  %1218 = bitcast i32* %1199 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1217, i8* align 4 %1218, i64 %1215, i1 false) #11
  br label %1219

1219:                                             ; preds = %1214, %1192
  %1220 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1220) #11
  %1221 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %1221, label %1222, label %1224

1222:                                             ; preds = %1219
  %1223 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %1223, align 8, !alias.scope !57
  br label %1252

1224:                                             ; preds = %1219
  %1225 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %1226 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1225, align 8, !noalias !57
  %1227 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1226, i64 0, i32 0
  %1228 = load i32, i32* %1227, align 4, !noalias !57
  %1229 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1226, i64 0, i32 1, i64 0
  %1230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %1228, i32* %1230, align 8, !alias.scope !57
  %1231 = icmp sgt i32 %1228, 5
  br i1 %1231, label %1232, label %1239

1232:                                             ; preds = %1224
  %1233 = sext i32 %1228 to i64
  %1234 = shl nsw i64 %1233, 2
  %1235 = tail call i8* @_Znam(i64 %1234) #10, !noalias !57
  %1236 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %1237 = bitcast i32** %1236 to i8**
  store i8* %1235, i8** %1237, align 8, !alias.scope !57
  %1238 = bitcast i8* %1235 to i32*
  br label %1244

1239:                                             ; preds = %1224
  %1240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %1241 = bitcast %union.anon* %1240 to i32*
  %1242 = sext i32 %1228 to i64
  %1243 = shl nsw i64 %1242, 2
  br label %1244

1244:                                             ; preds = %1239, %1232
  %1245 = phi i64 [ %1234, %1232 ], [ %1243, %1239 ]
  %1246 = phi i32* [ %1238, %1232 ], [ %1241, %1239 ]
  %1247 = bitcast i32* %1246 to i8*
  %1248 = bitcast i32* %1229 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1247, i8* align 4 %1248, i64 %1245, i1 false) #11
  %1249 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %1250 = bitcast %union.TfLitePtrUnion* %1249 to float**
  %1251 = load float*, float** %1250, align 8
  br label %1252

1252:                                             ; preds = %1244, %1222
  %1253 = phi float* [ %1251, %1244 ], [ null, %1222 ]
  call void @_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIfffEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %15, float* %1190, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, float* %1059, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, float* %1253, float (float, float)* nonnull @_ZN6tflite13reference_ops8FloorModIfEET_S2_S2_) #11
  %1254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %1255 = load i32, i32* %1254, align 8
  %1256 = icmp sgt i32 %1255, 5
  br i1 %1256, label %1257, label %1263

1257:                                             ; preds = %1252
  %1258 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %1259 = load i32*, i32** %1258, align 8
  %1260 = icmp eq i32* %1259, null
  br i1 %1260, label %1263, label %1261

1261:                                             ; preds = %1257
  %1262 = bitcast i32* %1259 to i8*
  call void @_ZdaPv(i8* %1262) #10
  br label %1263

1263:                                             ; preds = %1261, %1257, %1252
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1220) #11
  %1264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %1265 = load i32, i32* %1264, align 8
  %1266 = icmp sgt i32 %1265, 5
  br i1 %1266, label %1267, label %1273

1267:                                             ; preds = %1263
  %1268 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %1269 = load i32*, i32** %1268, align 8
  %1270 = icmp eq i32* %1269, null
  br i1 %1270, label %1273, label %1271

1271:                                             ; preds = %1267
  %1272 = bitcast i32* %1269 to i8*
  call void @_ZdaPv(i8* %1272) #10
  br label %1273

1273:                                             ; preds = %1271, %1267, %1263
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1191) #11
  %1274 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  %1275 = load i32, i32* %1274, align 8
  %1276 = icmp sgt i32 %1275, 5
  br i1 %1276, label %1277, label %1283

1277:                                             ; preds = %1273
  %1278 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %1279 = load i32*, i32** %1278, align 8
  %1280 = icmp eq i32* %1279, null
  br i1 %1280, label %1283, label %1281

1281:                                             ; preds = %1277
  %1282 = bitcast i32* %1279 to i8*
  call void @_ZdaPv(i8* %1282) #10
  br label %1283

1283:                                             ; preds = %1281, %1277, %1273
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1157) #11
  br label %1550

1284:                                             ; preds = %1155
  %1285 = bitcast %"class.tflite::RuntimeShape"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1285) #11
  %1286 = icmp eq %struct.TfLiteTensor* %35, null
  br i1 %1286, label %1287, label %1289

1287:                                             ; preds = %1284
  %1288 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 0, i32* %1288, align 8, !alias.scope !60
  br label %1317

1289:                                             ; preds = %1284
  %1290 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %35, i64 0, i32 2
  %1291 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1290, align 8, !noalias !60
  %1292 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1291, i64 0, i32 0
  %1293 = load i32, i32* %1292, align 4, !noalias !60
  %1294 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1291, i64 0, i32 1, i64 0
  %1295 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 %1293, i32* %1295, align 8, !alias.scope !60
  %1296 = icmp sgt i32 %1293, 5
  br i1 %1296, label %1297, label %1304

1297:                                             ; preds = %1289
  %1298 = sext i32 %1293 to i64
  %1299 = shl nsw i64 %1298, 2
  %1300 = tail call i8* @_Znam(i64 %1299) #10, !noalias !60
  %1301 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %1302 = bitcast i32** %1301 to i8**
  store i8* %1300, i8** %1302, align 8, !alias.scope !60
  %1303 = bitcast i8* %1300 to i32*
  br label %1309

1304:                                             ; preds = %1289
  %1305 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %1306 = bitcast %union.anon* %1305 to i32*
  %1307 = sext i32 %1293 to i64
  %1308 = shl nsw i64 %1307, 2
  br label %1309

1309:                                             ; preds = %1304, %1297
  %1310 = phi i64 [ %1299, %1297 ], [ %1308, %1304 ]
  %1311 = phi i32* [ %1303, %1297 ], [ %1306, %1304 ]
  %1312 = bitcast i32* %1311 to i8*
  %1313 = bitcast i32* %1294 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1312, i8* align 4 %1313, i64 %1310, i1 false) #11
  %1314 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %35, i64 0, i32 1
  %1315 = bitcast %union.TfLitePtrUnion* %1314 to float**
  %1316 = load float*, float** %1315, align 8
  br label %1317

1317:                                             ; preds = %1309, %1287
  %1318 = phi i32 [ %1293, %1309 ], [ 0, %1287 ]
  %1319 = phi float* [ %1316, %1309 ], [ null, %1287 ]
  %1320 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1320) #11
  br i1 %1053, label %1321, label %1323

1321:                                             ; preds = %1317
  %1322 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %1322, align 8, !alias.scope !63
  br label %1351

1323:                                             ; preds = %1317
  %1324 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 2
  %1325 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1324, align 8, !noalias !63
  %1326 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1325, i64 0, i32 0
  %1327 = load i32, i32* %1326, align 4, !noalias !63
  %1328 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1325, i64 0, i32 1, i64 0
  %1329 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %1327, i32* %1329, align 8, !alias.scope !63
  %1330 = icmp sgt i32 %1327, 5
  br i1 %1330, label %1331, label %1338

1331:                                             ; preds = %1323
  %1332 = sext i32 %1327 to i64
  %1333 = shl nsw i64 %1332, 2
  %1334 = tail call i8* @_Znam(i64 %1333) #10, !noalias !63
  %1335 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %1336 = bitcast i32** %1335 to i8**
  store i8* %1334, i8** %1336, align 8, !alias.scope !63
  %1337 = bitcast i8* %1334 to i32*
  br label %1343

1338:                                             ; preds = %1323
  %1339 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %1340 = bitcast %union.anon* %1339 to i32*
  %1341 = sext i32 %1327 to i64
  %1342 = shl nsw i64 %1341, 2
  br label %1343

1343:                                             ; preds = %1338, %1331
  %1344 = phi i64 [ %1333, %1331 ], [ %1342, %1338 ]
  %1345 = phi i32* [ %1337, %1331 ], [ %1340, %1338 ]
  %1346 = bitcast i32* %1345 to i8*
  %1347 = bitcast i32* %1328 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1346, i8* align 4 %1347, i64 %1344, i1 false) #11
  %1348 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %45, i64 0, i32 1
  %1349 = bitcast %union.TfLitePtrUnion* %1348 to float**
  %1350 = load float*, float** %1349, align 8
  br label %1351

1351:                                             ; preds = %1343, %1321
  %1352 = phi i32 [ %1327, %1343 ], [ 0, %1321 ]
  %1353 = phi float* [ %1350, %1343 ], [ null, %1321 ]
  %1354 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1354) #11
  %1355 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %1355, label %1356, label %1358

1356:                                             ; preds = %1351
  %1357 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %1357, align 8, !alias.scope !66
  br label %1386

1358:                                             ; preds = %1351
  %1359 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %1360 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1359, align 8, !noalias !66
  %1361 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1360, i64 0, i32 0
  %1362 = load i32, i32* %1361, align 4, !noalias !66
  %1363 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1360, i64 0, i32 1, i64 0
  %1364 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %1362, i32* %1364, align 8, !alias.scope !66
  %1365 = icmp sgt i32 %1362, 5
  br i1 %1365, label %1366, label %1373

1366:                                             ; preds = %1358
  %1367 = sext i32 %1362 to i64
  %1368 = shl nsw i64 %1367, 2
  %1369 = tail call i8* @_Znam(i64 %1368) #10, !noalias !66
  %1370 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1371 = bitcast i32** %1370 to i8**
  store i8* %1369, i8** %1371, align 8, !alias.scope !66
  %1372 = bitcast i8* %1369 to i32*
  br label %1378

1373:                                             ; preds = %1358
  %1374 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %1375 = bitcast %union.anon* %1374 to i32*
  %1376 = sext i32 %1362 to i64
  %1377 = shl nsw i64 %1376, 2
  br label %1378

1378:                                             ; preds = %1373, %1366
  %1379 = phi i64 [ %1368, %1366 ], [ %1377, %1373 ]
  %1380 = phi i32* [ %1372, %1366 ], [ %1375, %1373 ]
  %1381 = bitcast i32* %1380 to i8*
  %1382 = bitcast i32* %1363 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1381, i8* align 4 %1382, i64 %1379, i1 false) #11
  %1383 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %1384 = bitcast %union.TfLitePtrUnion* %1383 to float**
  %1385 = load float*, float** %1384, align 8
  br label %1386

1386:                                             ; preds = %1378, %1356
  %1387 = phi i32 [ %1362, %1378 ], [ 0, %1356 ]
  %1388 = phi float* [ %1385, %1378 ], [ null, %1356 ]
  %1389 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %1390 = icmp sgt i32 %1318, 5
  br i1 %1390, label %1391, label %1394

1391:                                             ; preds = %1386
  %1392 = getelementptr inbounds %union.anon, %union.anon* %1389, i64 0, i32 0
  %1393 = load i32*, i32** %1392, align 8
  br label %1397

1394:                                             ; preds = %1386
  %1395 = bitcast %union.anon* %1389 to i32*
  %1396 = icmp sgt i32 %1318, 0
  br i1 %1396, label %1397, label %1500

1397:                                             ; preds = %1394, %1391
  %1398 = phi i32* [ %1393, %1391 ], [ %1395, %1394 ]
  %1399 = zext i32 %1318 to i64
  %1400 = icmp ult i32 %1318, 8
  br i1 %1400, label %1486, label %1401

1401:                                             ; preds = %1397
  %1402 = and i64 %1399, 4294967288
  %1403 = add nsw i64 %1402, -8
  %1404 = lshr exact i64 %1403, 3
  %1405 = add nuw nsw i64 %1404, 1
  %1406 = and i64 %1405, 3
  %1407 = icmp ult i64 %1403, 24
  br i1 %1407, label %1453, label %1408

1408:                                             ; preds = %1401
  %1409 = sub nsw i64 %1405, %1406
  br label %1410

1410:                                             ; preds = %1410, %1408
  %1411 = phi i64 [ 0, %1408 ], [ %1450, %1410 ]
  %1412 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1408 ], [ %1448, %1410 ]
  %1413 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1408 ], [ %1449, %1410 ]
  %1414 = phi i64 [ %1409, %1408 ], [ %1451, %1410 ]
  %1415 = getelementptr inbounds i32, i32* %1398, i64 %1411
  %1416 = bitcast i32* %1415 to <4 x i32>*
  %1417 = load <4 x i32>, <4 x i32>* %1416, align 4
  %1418 = getelementptr inbounds i32, i32* %1415, i64 4
  %1419 = bitcast i32* %1418 to <4 x i32>*
  %1420 = load <4 x i32>, <4 x i32>* %1419, align 4
  %1421 = mul nsw <4 x i32> %1417, %1412
  %1422 = mul nsw <4 x i32> %1420, %1413
  %1423 = or i64 %1411, 8
  %1424 = getelementptr inbounds i32, i32* %1398, i64 %1423
  %1425 = bitcast i32* %1424 to <4 x i32>*
  %1426 = load <4 x i32>, <4 x i32>* %1425, align 4
  %1427 = getelementptr inbounds i32, i32* %1424, i64 4
  %1428 = bitcast i32* %1427 to <4 x i32>*
  %1429 = load <4 x i32>, <4 x i32>* %1428, align 4
  %1430 = mul nsw <4 x i32> %1426, %1421
  %1431 = mul nsw <4 x i32> %1429, %1422
  %1432 = or i64 %1411, 16
  %1433 = getelementptr inbounds i32, i32* %1398, i64 %1432
  %1434 = bitcast i32* %1433 to <4 x i32>*
  %1435 = load <4 x i32>, <4 x i32>* %1434, align 4
  %1436 = getelementptr inbounds i32, i32* %1433, i64 4
  %1437 = bitcast i32* %1436 to <4 x i32>*
  %1438 = load <4 x i32>, <4 x i32>* %1437, align 4
  %1439 = mul nsw <4 x i32> %1435, %1430
  %1440 = mul nsw <4 x i32> %1438, %1431
  %1441 = or i64 %1411, 24
  %1442 = getelementptr inbounds i32, i32* %1398, i64 %1441
  %1443 = bitcast i32* %1442 to <4 x i32>*
  %1444 = load <4 x i32>, <4 x i32>* %1443, align 4
  %1445 = getelementptr inbounds i32, i32* %1442, i64 4
  %1446 = bitcast i32* %1445 to <4 x i32>*
  %1447 = load <4 x i32>, <4 x i32>* %1446, align 4
  %1448 = mul nsw <4 x i32> %1444, %1439
  %1449 = mul nsw <4 x i32> %1447, %1440
  %1450 = add i64 %1411, 32
  %1451 = add i64 %1414, -4
  %1452 = icmp eq i64 %1451, 0
  br i1 %1452, label %1453, label %1410, !llvm.loop !69

1453:                                             ; preds = %1410, %1401
  %1454 = phi <4 x i32> [ undef, %1401 ], [ %1448, %1410 ]
  %1455 = phi <4 x i32> [ undef, %1401 ], [ %1449, %1410 ]
  %1456 = phi i64 [ 0, %1401 ], [ %1450, %1410 ]
  %1457 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1401 ], [ %1448, %1410 ]
  %1458 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1401 ], [ %1449, %1410 ]
  %1459 = icmp eq i64 %1406, 0
  br i1 %1459, label %1476, label %1460

1460:                                             ; preds = %1453, %1460
  %1461 = phi i64 [ %1473, %1460 ], [ %1456, %1453 ]
  %1462 = phi <4 x i32> [ %1471, %1460 ], [ %1457, %1453 ]
  %1463 = phi <4 x i32> [ %1472, %1460 ], [ %1458, %1453 ]
  %1464 = phi i64 [ %1474, %1460 ], [ %1406, %1453 ]
  %1465 = getelementptr inbounds i32, i32* %1398, i64 %1461
  %1466 = bitcast i32* %1465 to <4 x i32>*
  %1467 = load <4 x i32>, <4 x i32>* %1466, align 4
  %1468 = getelementptr inbounds i32, i32* %1465, i64 4
  %1469 = bitcast i32* %1468 to <4 x i32>*
  %1470 = load <4 x i32>, <4 x i32>* %1469, align 4
  %1471 = mul nsw <4 x i32> %1467, %1462
  %1472 = mul nsw <4 x i32> %1470, %1463
  %1473 = add i64 %1461, 8
  %1474 = add i64 %1464, -1
  %1475 = icmp eq i64 %1474, 0
  br i1 %1475, label %1476, label %1460, !llvm.loop !70

1476:                                             ; preds = %1460, %1453
  %1477 = phi <4 x i32> [ %1454, %1453 ], [ %1471, %1460 ]
  %1478 = phi <4 x i32> [ %1455, %1453 ], [ %1472, %1460 ]
  %1479 = mul <4 x i32> %1478, %1477
  %1480 = shufflevector <4 x i32> %1479, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1481 = mul <4 x i32> %1479, %1480
  %1482 = shufflevector <4 x i32> %1481, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1483 = mul <4 x i32> %1481, %1482
  %1484 = extractelement <4 x i32> %1483, i32 0
  %1485 = icmp eq i64 %1402, %1399
  br i1 %1485, label %1497, label %1486

1486:                                             ; preds = %1476, %1397
  %1487 = phi i64 [ 0, %1397 ], [ %1402, %1476 ]
  %1488 = phi i32 [ 1, %1397 ], [ %1484, %1476 ]
  br label %1489

1489:                                             ; preds = %1486, %1489
  %1490 = phi i64 [ %1495, %1489 ], [ %1487, %1486 ]
  %1491 = phi i32 [ %1494, %1489 ], [ %1488, %1486 ]
  %1492 = getelementptr inbounds i32, i32* %1398, i64 %1490
  %1493 = load i32, i32* %1492, align 4
  %1494 = mul nsw i32 %1493, %1491
  %1495 = add nuw nsw i64 %1490, 1
  %1496 = icmp eq i64 %1495, %1399
  br i1 %1496, label %1497, label %1489, !llvm.loop !71

1497:                                             ; preds = %1489, %1476
  %1498 = phi i32 [ %1484, %1476 ], [ %1494, %1489 ]
  %1499 = icmp sgt i32 %1498, 0
  br i1 %1499, label %1500, label %1522

1500:                                             ; preds = %1497, %1394
  %1501 = phi i32 [ %1498, %1497 ], [ 1, %1394 ]
  %1502 = zext i32 %1501 to i64
  br label %1503

1503:                                             ; preds = %1517, %1500
  %1504 = phi i64 [ 0, %1500 ], [ %1520, %1517 ]
  %1505 = getelementptr inbounds float, float* %1319, i64 %1504
  %1506 = load float, float* %1505, align 4
  %1507 = getelementptr inbounds float, float* %1353, i64 %1504
  %1508 = load float, float* %1507, align 4
  %1509 = tail call float @fmodf(float %1506, float %1508) #11
  %1510 = fcmp une float %1509, 0.000000e+00
  br i1 %1510, label %1511, label %1517

1511:                                             ; preds = %1503
  %1512 = fcmp olt float %1508, 0.000000e+00
  %1513 = fcmp olt float %1509, 0.000000e+00
  %1514 = xor i1 %1512, %1513
  %1515 = fadd float %1508, %1509
  %1516 = select i1 %1514, float %1515, float %1509
  br label %1517

1517:                                             ; preds = %1511, %1503
  %1518 = phi float [ %1509, %1503 ], [ %1516, %1511 ]
  %1519 = getelementptr inbounds float, float* %1388, i64 %1504
  store float %1518, float* %1519, align 4
  %1520 = add nuw nsw i64 %1504, 1
  %1521 = icmp eq i64 %1520, %1502
  br i1 %1521, label %1522, label %1503

1522:                                             ; preds = %1517, %1497
  %1523 = icmp sgt i32 %1387, 5
  br i1 %1523, label %1524, label %1530

1524:                                             ; preds = %1522
  %1525 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1526 = load i32*, i32** %1525, align 8
  %1527 = icmp eq i32* %1526, null
  br i1 %1527, label %1530, label %1528

1528:                                             ; preds = %1524
  %1529 = bitcast i32* %1526 to i8*
  tail call void @_ZdaPv(i8* %1529) #10
  br label %1530

1530:                                             ; preds = %1528, %1524, %1522
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1354) #11
  %1531 = icmp sgt i32 %1352, 5
  br i1 %1531, label %1532, label %1538

1532:                                             ; preds = %1530
  %1533 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %1534 = load i32*, i32** %1533, align 8
  %1535 = icmp eq i32* %1534, null
  br i1 %1535, label %1538, label %1536

1536:                                             ; preds = %1532
  %1537 = bitcast i32* %1534 to i8*
  tail call void @_ZdaPv(i8* %1537) #10
  br label %1538

1538:                                             ; preds = %1536, %1532, %1530
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1320) #11
  br i1 %1390, label %1539, label %1545

1539:                                             ; preds = %1538
  %1540 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %1541 = load i32*, i32** %1540, align 8
  %1542 = icmp eq i32* %1541, null
  br i1 %1542, label %1545, label %1543

1543:                                             ; preds = %1539
  %1544 = bitcast i32* %1541 to i8*
  tail call void @_ZdaPv(i8* %1544) #10
  br label %1545

1545:                                             ; preds = %1543, %1539, %1538
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1285) #11
  br label %1550

1546:                                             ; preds = %56
  %1547 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1548 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1547, align 8
  %1549 = tail call i8* @TfLiteTypeGetName(i32 %59) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %1548(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i64 0, i64 0), i8* %1549) #11
  br label %1550

1550:                                             ; preds = %1545, %1283, %1152, %1048, %784, %653, %549, %291, %162, %1546
  %1551 = phi i32 [ 1, %1546 ], [ 1, %162 ], [ 0, %549 ], [ 0, %291 ], [ 1, %653 ], [ 0, %1048 ], [ 0, %784 ], [ 1, %1152 ], [ 0, %1545 ], [ 0, %1283 ]
  ret i32 %1551
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #6

declare zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #6

declare i32 @_ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray(%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteIntArray**) local_unnamed_addr #6

declare %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray*) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIiiiEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E(%"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, i32 (i32, i32)*) local_unnamed_addr #7 comdat {
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::NdArrayDesc", align 4
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %12 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %13, align 8, !alias.scope !72
  %14 = load i32, i32* %11, align 8, !noalias !72
  %15 = icmp sgt i32 %14, 4
  br i1 %15, label %16, label %17

16:                                               ; preds = %7
  tail call void @abort() #12, !noalias !72
  unreachable

17:                                               ; preds = %7
  store i32 4, i32* %13, align 8, !alias.scope !72
  %18 = sub i32 4, %14
  %19 = icmp sgt i32 %18, 0
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %19, label %21, label %101

21:                                               ; preds = %17
  %22 = bitcast %union.anon* %20 to [5 x i32]*
  %23 = zext i32 %18 to i64
  %24 = icmp ult i32 %18, 8
  br i1 %24, label %94, label %25

25:                                               ; preds = %21
  %26 = and i64 %23, 4294967288
  %27 = add nsw i64 %26, -8
  %28 = lshr exact i64 %27, 3
  %29 = add nuw nsw i64 %28, 1
  %30 = and i64 %29, 7
  %31 = icmp ult i64 %27, 56
  br i1 %31, label %79, label %32

32:                                               ; preds = %25
  %33 = sub nsw i64 %29, %30
  br label %34

34:                                               ; preds = %34, %32
  %35 = phi i64 [ 0, %32 ], [ %76, %34 ]
  %36 = phi i64 [ %33, %32 ], [ %77, %34 ]
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %35
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !72
  %39 = getelementptr inbounds i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !72
  %41 = or i64 %35, 8
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !72
  %44 = getelementptr inbounds i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !72
  %46 = or i64 %35, 16
  %47 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !72
  %49 = getelementptr inbounds i32, i32* %47, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !72
  %51 = or i64 %35, 24
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %51
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !72
  %54 = getelementptr inbounds i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !72
  %56 = or i64 %35, 32
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !72
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !72
  %61 = or i64 %35, 40
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !72
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !72
  %66 = or i64 %35, 48
  %67 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %66
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !72
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !72
  %71 = or i64 %35, 56
  %72 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %71
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !72
  %74 = getelementptr inbounds i32, i32* %72, i64 4
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !72
  %76 = add i64 %35, 64
  %77 = add i64 %36, -8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %34, !llvm.loop !75

79:                                               ; preds = %34, %25
  %80 = phi i64 [ 0, %25 ], [ %76, %34 ]
  %81 = icmp eq i64 %30, 0
  br i1 %81, label %92, label %82

82:                                               ; preds = %79, %82
  %83 = phi i64 [ %89, %82 ], [ %80, %79 ]
  %84 = phi i64 [ %90, %82 ], [ %30, %79 ]
  %85 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %83
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !72
  %87 = getelementptr inbounds i32, i32* %85, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !72
  %89 = add i64 %83, 8
  %90 = add i64 %84, -1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %82, !llvm.loop !76

92:                                               ; preds = %82, %79
  %93 = icmp eq i64 %26, %23
  br i1 %93, label %101, label %94

94:                                               ; preds = %92, %21
  %95 = phi i64 [ 0, %21 ], [ %26, %92 ]
  br label %96

96:                                               ; preds = %94, %96
  %97 = phi i64 [ %99, %96 ], [ %95, %94 ]
  %98 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %97
  store i32 1, i32* %98, align 4, !alias.scope !72
  %99 = add nuw nsw i64 %97, 1
  %100 = icmp eq i64 %99, %23
  br i1 %100, label %101, label %96, !llvm.loop !77

101:                                              ; preds = %96, %92, %17
  %102 = getelementptr inbounds %union.anon, %union.anon* %20, i64 0, i32 0
  %103 = bitcast %union.anon* %20 to i32*
  %104 = sext i32 %18 to i64
  %105 = getelementptr inbounds i32, i32* %103, i64 %104
  %106 = bitcast i32* %105 to i8*
  %107 = icmp sgt i32 %14, 5
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %109 = getelementptr inbounds %union.anon, %union.anon* %108, i64 0, i32 0
  %110 = load i32*, i32** %109, align 8, !noalias !72
  %111 = bitcast %union.anon* %108 to i32*
  %112 = select i1 %107, i32* %110, i32* %111
  %113 = bitcast i32* %112 to i8*
  %114 = sext i32 %14 to i64
  %115 = shl nsw i64 %114, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %113, i64 %115, i1 false) #11
  %116 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %116) #11
  %117 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 0
  %118 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 1
  %119 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 2
  %120 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 3
  %121 = bitcast %"struct.tflite::NdArrayDesc"* %10 to i8*
  %122 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %122, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %121) #11
  %123 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 0
  %124 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 1
  %125 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 2
  %126 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 3
  %127 = bitcast %"struct.tflite::NdArrayDesc"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %127, i8 -86, i64 32, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %2, %"struct.tflite::NdArrayDesc"* nonnull %9, %"struct.tflite::NdArrayDesc"* nonnull %10)
  %128 = load i32, i32* %13, align 8
  %129 = icmp sgt i32 %128, 5
  %130 = load i32*, i32** %102, align 8
  %131 = select i1 %129, i32* %130, i32* %103
  %132 = load i32, i32* %131, align 4
  %133 = icmp sgt i32 %132, 0
  br i1 %133, label %134, label %153

134:                                              ; preds = %101
  %135 = bitcast %union.anon* %20 to [5 x i32]*
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %135, i64 0, i64 1
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %138 = bitcast [16 x i8]* %137 to i32*
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %140 = bitcast i8* %139 to i32*
  %141 = getelementptr inbounds i32, i32* %103, i64 1
  %142 = getelementptr inbounds i32, i32* %130, i64 1
  %143 = select i1 %129, i32* %142, i32* %136
  %144 = getelementptr inbounds i32, i32* %130, i64 2
  %145 = select i1 %129, i32* %144, i32* %138
  %146 = getelementptr inbounds i32, i32* %130, i64 3
  %147 = select i1 %129, i32* %146, i32* %140
  br label %148

148:                                              ; preds = %134, %172
  %149 = phi i32 [ %132, %134 ], [ %173, %172 ]
  %150 = phi i32 [ 0, %134 ], [ %174, %172 ]
  %151 = load i32, i32* %143, align 4
  %152 = icmp sgt i32 %151, 0
  br i1 %152, label %160, label %172

153:                                              ; preds = %172, %101
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %121) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %116) #11
  %154 = xor i1 %129, true
  %155 = icmp eq i32* %130, null
  %156 = or i1 %155, %154
  br i1 %156, label %159, label %157

157:                                              ; preds = %153
  %158 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %158) #10
  br label %159

159:                                              ; preds = %153, %157
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #11
  ret void

160:                                              ; preds = %148, %189
  %161 = phi i32 [ %190, %189 ], [ %151, %148 ]
  %162 = phi i32 [ %191, %189 ], [ 0, %148 ]
  %163 = load i32, i32* %145, align 4
  %164 = icmp sgt i32 %163, 0
  br i1 %164, label %165, label %189

165:                                              ; preds = %160
  %166 = load i32, i32* %141, align 4
  %167 = mul nsw i32 %166, %150
  %168 = add nsw i32 %167, %162
  %169 = load i32, i32* %147, align 4
  br label %176

170:                                              ; preds = %189
  %171 = load i32, i32* %131, align 4
  br label %172

172:                                              ; preds = %170, %148
  %173 = phi i32 [ %171, %170 ], [ %149, %148 ]
  %174 = add nuw nsw i32 %150, 1
  %175 = icmp slt i32 %174, %173
  br i1 %175, label %148, label %153

176:                                              ; preds = %165, %195
  %177 = phi i32 [ %163, %165 ], [ %196, %195 ]
  %178 = phi i32 [ %169, %165 ], [ %197, %195 ]
  %179 = phi i32 [ 0, %165 ], [ %198, %195 ]
  %180 = icmp sgt i32 %178, 0
  br i1 %180, label %181, label %195

181:                                              ; preds = %176
  %182 = load i32, i32* %138, align 8
  %183 = mul nsw i32 %168, %182
  %184 = add nsw i32 %183, %179
  %185 = load i32, i32* %140, align 4
  %186 = mul nsw i32 %184, %185
  br label %200

187:                                              ; preds = %195
  %188 = load i32, i32* %143, align 4
  br label %189

189:                                              ; preds = %187, %160
  %190 = phi i32 [ %188, %187 ], [ %161, %160 ]
  %191 = add nuw nsw i32 %162, 1
  %192 = icmp slt i32 %191, %190
  br i1 %192, label %160, label %170

193:                                              ; preds = %200
  %194 = load i32, i32* %145, align 4
  br label %195

195:                                              ; preds = %193, %176
  %196 = phi i32 [ %194, %193 ], [ %177, %176 ]
  %197 = phi i32 [ %235, %193 ], [ %178, %176 ]
  %198 = add nuw nsw i32 %179, 1
  %199 = icmp slt i32 %198, %196
  br i1 %199, label %176, label %187

200:                                              ; preds = %181, %200
  %201 = phi i32 [ 0, %181 ], [ %234, %200 ]
  %202 = add nsw i32 %186, %201
  %203 = load i32, i32* %117, align 4
  %204 = mul nsw i32 %203, %150
  %205 = load i32, i32* %118, align 4
  %206 = mul nsw i32 %205, %162
  %207 = add nsw i32 %206, %204
  %208 = load i32, i32* %119, align 4
  %209 = mul nsw i32 %208, %179
  %210 = add nsw i32 %207, %209
  %211 = load i32, i32* %120, align 4
  %212 = mul nsw i32 %211, %201
  %213 = add nsw i32 %210, %212
  %214 = load i32, i32* %123, align 4
  %215 = mul nsw i32 %214, %150
  %216 = load i32, i32* %124, align 4
  %217 = mul nsw i32 %216, %162
  %218 = add nsw i32 %217, %215
  %219 = load i32, i32* %125, align 4
  %220 = mul nsw i32 %219, %179
  %221 = add nsw i32 %218, %220
  %222 = load i32, i32* %126, align 4
  %223 = mul nsw i32 %222, %201
  %224 = add nsw i32 %221, %223
  %225 = sext i32 %213 to i64
  %226 = getelementptr inbounds i32, i32* %1, i64 %225
  %227 = load i32, i32* %226, align 4
  %228 = sext i32 %224 to i64
  %229 = getelementptr inbounds i32, i32* %3, i64 %228
  %230 = load i32, i32* %229, align 4
  %231 = call i32 %6(i32 %227, i32 %230) #11
  %232 = sext i32 %202 to i64
  %233 = getelementptr inbounds i32, i32* %5, i64 %232
  store i32 %231, i32* %233, align 4
  %234 = add nuw nsw i32 %201, 1
  %235 = load i32, i32* %147, align 4
  %236 = icmp slt i32 %234, %235
  br i1 %236, label %200, label %193
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite13reference_ops8FloorModIiEET_S2_S2_(i32, i32) #2 comdat {
  %3 = srem i32 %0, %1
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = xor i32 %3, %1
  %7 = icmp slt i32 %6, 0
  %8 = select i1 %7, i32 %1, i32 0
  %9 = add nsw i32 %8, %3
  br label %10

10:                                               ; preds = %5, %2
  %11 = phi i32 [ 0, %2 ], [ %9, %5 ]
  ret i32 %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"*) local_unnamed_addr #7 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %8, align 8, !alias.scope !78
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8, !noalias !78
  %11 = icmp sgt i32 %10, 4
  br i1 %11, label %12, label %13

12:                                               ; preds = %4
  tail call void @abort() #12, !noalias !78
  unreachable

13:                                               ; preds = %4
  store i32 4, i32* %8, align 8, !alias.scope !78
  %14 = sub i32 4, %10
  %15 = icmp sgt i32 %14, 0
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %15, label %17, label %97

17:                                               ; preds = %13
  %18 = bitcast %union.anon* %16 to [5 x i32]*
  %19 = zext i32 %14 to i64
  %20 = icmp ult i32 %14, 8
  br i1 %20, label %90, label %21

21:                                               ; preds = %17
  %22 = and i64 %19, 4294967288
  %23 = add nsw i64 %22, -8
  %24 = lshr exact i64 %23, 3
  %25 = add nuw nsw i64 %24, 1
  %26 = and i64 %25, 7
  %27 = icmp ult i64 %23, 56
  br i1 %27, label %75, label %28

28:                                               ; preds = %21
  %29 = sub nsw i64 %25, %26
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %72, %30 ]
  %32 = phi i64 [ %29, %28 ], [ %73, %30 ]
  %33 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %31
  %34 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %34, align 8, !alias.scope !78
  %35 = getelementptr inbounds i32, i32* %33, i64 4
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !78
  %37 = or i64 %31, 8
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %37
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %39, align 8, !alias.scope !78
  %40 = getelementptr inbounds i32, i32* %38, i64 4
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !78
  %42 = or i64 %31, 16
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !78
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !78
  %47 = or i64 %31, 24
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !78
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !78
  %52 = or i64 %31, 32
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !78
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !78
  %57 = or i64 %31, 40
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !78
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !78
  %62 = or i64 %31, 48
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !78
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !78
  %67 = or i64 %31, 56
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !78
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !78
  %72 = add i64 %31, 64
  %73 = add i64 %32, -8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %30, !llvm.loop !81

75:                                               ; preds = %30, %21
  %76 = phi i64 [ 0, %21 ], [ %72, %30 ]
  %77 = icmp eq i64 %26, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %75, %78
  %79 = phi i64 [ %85, %78 ], [ %76, %75 ]
  %80 = phi i64 [ %86, %78 ], [ %26, %75 ]
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %79
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !78
  %83 = getelementptr inbounds i32, i32* %81, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !78
  %85 = add i64 %79, 8
  %86 = add i64 %80, -1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %78, !llvm.loop !82

88:                                               ; preds = %78, %75
  %89 = icmp eq i64 %22, %19
  br i1 %89, label %97, label %90

90:                                               ; preds = %88, %17
  %91 = phi i64 [ 0, %17 ], [ %22, %88 ]
  br label %92

92:                                               ; preds = %90, %92
  %93 = phi i64 [ %95, %92 ], [ %91, %90 ]
  %94 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %93
  store i32 1, i32* %94, align 4, !alias.scope !78
  %95 = add nuw nsw i64 %93, 1
  %96 = icmp eq i64 %95, %19
  br i1 %96, label %97, label %92, !llvm.loop !83

97:                                               ; preds = %92, %88, %13
  %98 = getelementptr inbounds %union.anon, %union.anon* %16, i64 0, i32 0
  %99 = bitcast %union.anon* %16 to i32*
  %100 = sext i32 %14 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = bitcast i32* %101 to i8*
  %103 = icmp sgt i32 %10, 5
  %104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %105 = getelementptr inbounds %union.anon, %union.anon* %104, i64 0, i32 0
  %106 = load i32*, i32** %105, align 8, !noalias !78
  %107 = bitcast %union.anon* %104 to i32*
  %108 = select i1 %103, i32* %106, i32* %107
  %109 = bitcast i32* %108 to i8*
  %110 = sext i32 %10 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %109, i64 %111, i1 false) #11
  %112 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %112) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 32, i1 false)
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %113, align 8, !alias.scope !84
  %114 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %115 = load i32, i32* %114, align 8, !noalias !84
  %116 = icmp sgt i32 %115, 4
  br i1 %116, label %117, label %118

117:                                              ; preds = %97
  tail call void @abort() #12, !noalias !84
  unreachable

118:                                              ; preds = %97
  store i32 4, i32* %113, align 8, !alias.scope !84
  %119 = sub i32 4, %115
  %120 = icmp sgt i32 %119, 0
  %121 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %122 = bitcast %union.anon* %121 to [5 x i32]*
  br i1 %120, label %123, label %202

123:                                              ; preds = %118
  %124 = zext i32 %119 to i64
  %125 = icmp ult i32 %119, 8
  br i1 %125, label %195, label %126

126:                                              ; preds = %123
  %127 = and i64 %124, 4294967288
  %128 = add nsw i64 %127, -8
  %129 = lshr exact i64 %128, 3
  %130 = add nuw nsw i64 %129, 1
  %131 = and i64 %130, 7
  %132 = icmp ult i64 %128, 56
  br i1 %132, label %180, label %133

133:                                              ; preds = %126
  %134 = sub nsw i64 %130, %131
  br label %135

135:                                              ; preds = %135, %133
  %136 = phi i64 [ 0, %133 ], [ %177, %135 ]
  %137 = phi i64 [ %134, %133 ], [ %178, %135 ]
  %138 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %136
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %139, align 8, !alias.scope !84
  %140 = getelementptr inbounds i32, i32* %138, i64 4
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %141, align 8, !alias.scope !84
  %142 = or i64 %136, 8
  %143 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %142
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %144, align 8, !alias.scope !84
  %145 = getelementptr inbounds i32, i32* %143, i64 4
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !84
  %147 = or i64 %136, 16
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %147
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %149, align 8, !alias.scope !84
  %150 = getelementptr inbounds i32, i32* %148, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !84
  %152 = or i64 %136, 24
  %153 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %152
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %154, align 8, !alias.scope !84
  %155 = getelementptr inbounds i32, i32* %153, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !84
  %157 = or i64 %136, 32
  %158 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %157
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %159, align 8, !alias.scope !84
  %160 = getelementptr inbounds i32, i32* %158, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !84
  %162 = or i64 %136, 40
  %163 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %164, align 8, !alias.scope !84
  %165 = getelementptr inbounds i32, i32* %163, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !84
  %167 = or i64 %136, 48
  %168 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %167
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %169, align 8, !alias.scope !84
  %170 = getelementptr inbounds i32, i32* %168, i64 4
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !84
  %172 = or i64 %136, 56
  %173 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %172
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %174, align 8, !alias.scope !84
  %175 = getelementptr inbounds i32, i32* %173, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %176, align 8, !alias.scope !84
  %177 = add i64 %136, 64
  %178 = add i64 %137, -8
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %135, !llvm.loop !87

180:                                              ; preds = %135, %126
  %181 = phi i64 [ 0, %126 ], [ %177, %135 ]
  %182 = icmp eq i64 %131, 0
  br i1 %182, label %193, label %183

183:                                              ; preds = %180, %183
  %184 = phi i64 [ %190, %183 ], [ %181, %180 ]
  %185 = phi i64 [ %191, %183 ], [ %131, %180 ]
  %186 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %184
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %187, align 8, !alias.scope !84
  %188 = getelementptr inbounds i32, i32* %186, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %189, align 8, !alias.scope !84
  %190 = add i64 %184, 8
  %191 = add i64 %185, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %183, !llvm.loop !88

193:                                              ; preds = %183, %180
  %194 = icmp eq i64 %127, %124
  br i1 %194, label %202, label %195

195:                                              ; preds = %193, %123
  %196 = phi i64 [ 0, %123 ], [ %127, %193 ]
  br label %197

197:                                              ; preds = %195, %197
  %198 = phi i64 [ %200, %197 ], [ %196, %195 ]
  %199 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %198
  store i32 1, i32* %199, align 4, !alias.scope !84
  %200 = add nuw nsw i64 %198, 1
  %201 = icmp eq i64 %200, %124
  br i1 %201, label %202, label %197, !llvm.loop !89

202:                                              ; preds = %197, %193, %118
  %203 = getelementptr inbounds %union.anon, %union.anon* %121, i64 0, i32 0
  %204 = bitcast %union.anon* %121 to i32*
  %205 = sext i32 %119 to i64
  %206 = getelementptr inbounds i32, i32* %204, i64 %205
  %207 = bitcast i32* %206 to i8*
  %208 = icmp sgt i32 %115, 5
  %209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %210 = getelementptr inbounds %union.anon, %union.anon* %209, i64 0, i32 0
  %211 = load i32*, i32** %210, align 8, !noalias !84
  %212 = bitcast %union.anon* %209 to i32*
  %213 = select i1 %208, i32* %211, i32* %212
  %214 = bitcast i32* %213 to i8*
  %215 = sext i32 %115 to i64
  %216 = shl nsw i64 %215, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %207, i8* align 4 %214, i64 %216, i1 false) #11
  %217 = bitcast %union.anon* %16 to [5 x i32]*
  %218 = load i32, i32* %8, align 8
  %219 = icmp sgt i32 %218, 5
  %220 = load i32*, i32** %98, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 3
  %222 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %223 = bitcast i8* %222 to i32*
  %224 = select i1 %219, i32* %221, i32* %223
  %225 = load i32, i32* %224, align 4
  %226 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 3
  store i32 %225, i32* %226, align 4
  %227 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 3
  store i32 1, i32* %227, align 4
  %228 = load i32, i32* %224, align 4
  %229 = getelementptr inbounds i32, i32* %220, i64 2
  %230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %231 = bitcast [16 x i8]* %230 to i32*
  %232 = select i1 %219, i32* %229, i32* %231
  %233 = load i32, i32* %232, align 4
  %234 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 2
  store i32 %233, i32* %234, align 4
  %235 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 2
  store i32 %228, i32* %235, align 4
  %236 = load i32, i32* %232, align 4
  %237 = mul nsw i32 %236, %228
  %238 = getelementptr inbounds i32, i32* %220, i64 1
  %239 = getelementptr inbounds [5 x i32], [5 x i32]* %217, i64 0, i64 1
  %240 = select i1 %219, i32* %238, i32* %239
  %241 = load i32, i32* %240, align 4
  %242 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 1
  store i32 %241, i32* %242, align 4
  %243 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 1
  store i32 %237, i32* %243, align 4
  %244 = load i32, i32* %240, align 4
  %245 = mul nsw i32 %244, %237
  %246 = select i1 %219, i32* %220, i32* %99
  %247 = load i32, i32* %246, align 4
  %248 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 0
  store i32 %247, i32* %248, align 4
  %249 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 0
  store i32 %245, i32* %249, align 4
  %250 = load i32, i32* %113, align 8
  %251 = icmp sgt i32 %250, 5
  %252 = load i32*, i32** %203, align 8
  %253 = getelementptr inbounds i32, i32* %252, i64 3
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %255 = bitcast i8* %254 to i32*
  %256 = select i1 %251, i32* %253, i32* %255
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 3
  store i32 %257, i32* %258, align 4
  %259 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 3
  store i32 1, i32* %259, align 4
  %260 = load i32, i32* %256, align 4
  %261 = getelementptr inbounds i32, i32* %252, i64 2
  %262 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %263 = bitcast [16 x i8]* %262 to i32*
  %264 = select i1 %251, i32* %261, i32* %263
  %265 = load i32, i32* %264, align 4
  %266 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 2
  store i32 %265, i32* %266, align 4
  %267 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 2
  store i32 %260, i32* %267, align 4
  %268 = load i32, i32* %264, align 4
  %269 = mul nsw i32 %268, %260
  %270 = getelementptr inbounds i32, i32* %252, i64 1
  %271 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 1
  %272 = select i1 %251, i32* %270, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 1
  store i32 %273, i32* %274, align 4
  %275 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 1
  store i32 %269, i32* %275, align 4
  %276 = load i32, i32* %272, align 4
  %277 = mul nsw i32 %276, %269
  %278 = select i1 %251, i32* %252, i32* %204
  %279 = load i32, i32* %278, align 4
  %280 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 0
  store i32 %279, i32* %280, align 4
  %281 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 0
  store i32 %277, i32* %281, align 4
  %282 = bitcast %union.anon* %16 to i32*
  %283 = select i1 %219, i32* %220, i32* %282
  %284 = load i32, i32* %283, align 4
  %285 = bitcast %union.anon* %121 to i32*
  %286 = select i1 %251, i32* %252, i32* %285
  %287 = load i32, i32* %286, align 4
  %288 = icmp eq i32 %284, %287
  br i1 %288, label %302, label %298

289:                                              ; preds = %338
  %290 = bitcast i32* %252 to i8*
  tail call void @_ZdaPv(i8* %290) #10
  br label %291

291:                                              ; preds = %338, %289
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %112) #11
  %292 = xor i1 %219, true
  %293 = icmp eq i32* %220, null
  %294 = or i1 %293, %292
  br i1 %294, label %297, label %295

295:                                              ; preds = %291
  %296 = bitcast i32* %220 to i8*
  tail call void @_ZdaPv(i8* %296) #10
  br label %297

297:                                              ; preds = %291, %295
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #11
  ret void

298:                                              ; preds = %202
  %299 = icmp eq i32 %284, 1
  br i1 %299, label %300, label %301

300:                                              ; preds = %298
  store i32 0, i32* %249, align 4
  store i32 %287, i32* %248, align 4
  br label %302

301:                                              ; preds = %298
  store i32 0, i32* %281, align 4
  store i32 %284, i32* %280, align 4
  br label %302

302:                                              ; preds = %202, %300, %301
  %303 = load i32, i32* %240, align 4
  %304 = load i32, i32* %272, align 4
  %305 = icmp eq i32 %303, %304
  br i1 %305, label %310, label %306

306:                                              ; preds = %302
  %307 = icmp eq i32 %303, 1
  br i1 %307, label %309, label %308

308:                                              ; preds = %306
  store i32 0, i32* %275, align 4
  store i32 %303, i32* %274, align 4
  br label %310

309:                                              ; preds = %306
  store i32 0, i32* %243, align 4
  store i32 %304, i32* %242, align 4
  br label %310

310:                                              ; preds = %309, %308, %302
  %311 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %312 = bitcast [16 x i8]* %311 to i32*
  %313 = select i1 %219, i32* %229, i32* %312
  %314 = load i32, i32* %313, align 4
  %315 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %316 = bitcast [16 x i8]* %315 to i32*
  %317 = select i1 %251, i32* %261, i32* %316
  %318 = load i32, i32* %317, align 4
  %319 = icmp eq i32 %314, %318
  br i1 %319, label %324, label %320

320:                                              ; preds = %310
  %321 = icmp eq i32 %314, 1
  br i1 %321, label %323, label %322

322:                                              ; preds = %320
  store i32 0, i32* %267, align 4
  store i32 %314, i32* %266, align 4
  br label %324

323:                                              ; preds = %320
  store i32 0, i32* %235, align 4
  store i32 %318, i32* %234, align 4
  br label %324

324:                                              ; preds = %323, %322, %310
  %325 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %326 = bitcast i8* %325 to i32*
  %327 = select i1 %219, i32* %221, i32* %326
  %328 = load i32, i32* %327, align 4
  %329 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %330 = bitcast i8* %329 to i32*
  %331 = select i1 %251, i32* %253, i32* %330
  %332 = load i32, i32* %331, align 4
  %333 = icmp eq i32 %328, %332
  br i1 %333, label %338, label %334

334:                                              ; preds = %324
  %335 = icmp eq i32 %328, 1
  br i1 %335, label %337, label %336

336:                                              ; preds = %334
  store i32 0, i32* %259, align 4
  store i32 %328, i32* %258, align 4
  br label %338

337:                                              ; preds = %334
  store i32 0, i32* %227, align 4
  store i32 %332, i32* %226, align 4
  br label %338

338:                                              ; preds = %337, %336, %324
  %339 = xor i1 %251, true
  %340 = icmp eq i32* %252, null
  %341 = or i1 %340, %339
  br i1 %341, label %291, label %289
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIlllEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E(%"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, i64 (i64, i64)*) local_unnamed_addr #7 comdat {
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::NdArrayDesc", align 4
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %12 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %13, align 8, !alias.scope !90
  %14 = load i32, i32* %11, align 8, !noalias !90
  %15 = icmp sgt i32 %14, 4
  br i1 %15, label %16, label %17

16:                                               ; preds = %7
  tail call void @abort() #12, !noalias !90
  unreachable

17:                                               ; preds = %7
  store i32 4, i32* %13, align 8, !alias.scope !90
  %18 = sub i32 4, %14
  %19 = icmp sgt i32 %18, 0
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %19, label %21, label %101

21:                                               ; preds = %17
  %22 = bitcast %union.anon* %20 to [5 x i32]*
  %23 = zext i32 %18 to i64
  %24 = icmp ult i32 %18, 8
  br i1 %24, label %94, label %25

25:                                               ; preds = %21
  %26 = and i64 %23, 4294967288
  %27 = add nsw i64 %26, -8
  %28 = lshr exact i64 %27, 3
  %29 = add nuw nsw i64 %28, 1
  %30 = and i64 %29, 7
  %31 = icmp ult i64 %27, 56
  br i1 %31, label %79, label %32

32:                                               ; preds = %25
  %33 = sub nsw i64 %29, %30
  br label %34

34:                                               ; preds = %34, %32
  %35 = phi i64 [ 0, %32 ], [ %76, %34 ]
  %36 = phi i64 [ %33, %32 ], [ %77, %34 ]
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %35
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !90
  %39 = getelementptr inbounds i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !90
  %41 = or i64 %35, 8
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !90
  %44 = getelementptr inbounds i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !90
  %46 = or i64 %35, 16
  %47 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !90
  %49 = getelementptr inbounds i32, i32* %47, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !90
  %51 = or i64 %35, 24
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %51
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !90
  %54 = getelementptr inbounds i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !90
  %56 = or i64 %35, 32
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !90
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !90
  %61 = or i64 %35, 40
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !90
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !90
  %66 = or i64 %35, 48
  %67 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %66
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !90
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !90
  %71 = or i64 %35, 56
  %72 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %71
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !90
  %74 = getelementptr inbounds i32, i32* %72, i64 4
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !90
  %76 = add i64 %35, 64
  %77 = add i64 %36, -8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %34, !llvm.loop !93

79:                                               ; preds = %34, %25
  %80 = phi i64 [ 0, %25 ], [ %76, %34 ]
  %81 = icmp eq i64 %30, 0
  br i1 %81, label %92, label %82

82:                                               ; preds = %79, %82
  %83 = phi i64 [ %89, %82 ], [ %80, %79 ]
  %84 = phi i64 [ %90, %82 ], [ %30, %79 ]
  %85 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %83
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !90
  %87 = getelementptr inbounds i32, i32* %85, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !90
  %89 = add i64 %83, 8
  %90 = add i64 %84, -1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %82, !llvm.loop !94

92:                                               ; preds = %82, %79
  %93 = icmp eq i64 %26, %23
  br i1 %93, label %101, label %94

94:                                               ; preds = %92, %21
  %95 = phi i64 [ 0, %21 ], [ %26, %92 ]
  br label %96

96:                                               ; preds = %94, %96
  %97 = phi i64 [ %99, %96 ], [ %95, %94 ]
  %98 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %97
  store i32 1, i32* %98, align 4, !alias.scope !90
  %99 = add nuw nsw i64 %97, 1
  %100 = icmp eq i64 %99, %23
  br i1 %100, label %101, label %96, !llvm.loop !95

101:                                              ; preds = %96, %92, %17
  %102 = getelementptr inbounds %union.anon, %union.anon* %20, i64 0, i32 0
  %103 = bitcast %union.anon* %20 to i32*
  %104 = sext i32 %18 to i64
  %105 = getelementptr inbounds i32, i32* %103, i64 %104
  %106 = bitcast i32* %105 to i8*
  %107 = icmp sgt i32 %14, 5
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %109 = getelementptr inbounds %union.anon, %union.anon* %108, i64 0, i32 0
  %110 = load i32*, i32** %109, align 8, !noalias !90
  %111 = bitcast %union.anon* %108 to i32*
  %112 = select i1 %107, i32* %110, i32* %111
  %113 = bitcast i32* %112 to i8*
  %114 = sext i32 %14 to i64
  %115 = shl nsw i64 %114, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %113, i64 %115, i1 false) #11
  %116 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %116) #11
  %117 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 0
  %118 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 1
  %119 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 2
  %120 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 3
  %121 = bitcast %"struct.tflite::NdArrayDesc"* %10 to i8*
  %122 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %122, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %121) #11
  %123 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 0
  %124 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 1
  %125 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 2
  %126 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 3
  %127 = bitcast %"struct.tflite::NdArrayDesc"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %127, i8 -86, i64 32, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %2, %"struct.tflite::NdArrayDesc"* nonnull %9, %"struct.tflite::NdArrayDesc"* nonnull %10)
  %128 = load i32, i32* %13, align 8
  %129 = icmp sgt i32 %128, 5
  %130 = load i32*, i32** %102, align 8
  %131 = select i1 %129, i32* %130, i32* %103
  %132 = load i32, i32* %131, align 4
  %133 = icmp sgt i32 %132, 0
  br i1 %133, label %134, label %153

134:                                              ; preds = %101
  %135 = bitcast %union.anon* %20 to [5 x i32]*
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %135, i64 0, i64 1
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %138 = bitcast [16 x i8]* %137 to i32*
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %140 = bitcast i8* %139 to i32*
  %141 = getelementptr inbounds i32, i32* %103, i64 1
  %142 = getelementptr inbounds i32, i32* %130, i64 1
  %143 = select i1 %129, i32* %142, i32* %136
  %144 = getelementptr inbounds i32, i32* %130, i64 2
  %145 = select i1 %129, i32* %144, i32* %138
  %146 = getelementptr inbounds i32, i32* %130, i64 3
  %147 = select i1 %129, i32* %146, i32* %140
  br label %148

148:                                              ; preds = %134, %172
  %149 = phi i32 [ %132, %134 ], [ %173, %172 ]
  %150 = phi i32 [ 0, %134 ], [ %174, %172 ]
  %151 = load i32, i32* %143, align 4
  %152 = icmp sgt i32 %151, 0
  br i1 %152, label %160, label %172

153:                                              ; preds = %172, %101
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %121) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %116) #11
  %154 = xor i1 %129, true
  %155 = icmp eq i32* %130, null
  %156 = or i1 %155, %154
  br i1 %156, label %159, label %157

157:                                              ; preds = %153
  %158 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %158) #10
  br label %159

159:                                              ; preds = %153, %157
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #11
  ret void

160:                                              ; preds = %148, %189
  %161 = phi i32 [ %190, %189 ], [ %151, %148 ]
  %162 = phi i32 [ %191, %189 ], [ 0, %148 ]
  %163 = load i32, i32* %145, align 4
  %164 = icmp sgt i32 %163, 0
  br i1 %164, label %165, label %189

165:                                              ; preds = %160
  %166 = load i32, i32* %141, align 4
  %167 = mul nsw i32 %166, %150
  %168 = add nsw i32 %167, %162
  %169 = load i32, i32* %147, align 4
  br label %176

170:                                              ; preds = %189
  %171 = load i32, i32* %131, align 4
  br label %172

172:                                              ; preds = %170, %148
  %173 = phi i32 [ %171, %170 ], [ %149, %148 ]
  %174 = add nuw nsw i32 %150, 1
  %175 = icmp slt i32 %174, %173
  br i1 %175, label %148, label %153

176:                                              ; preds = %165, %195
  %177 = phi i32 [ %163, %165 ], [ %196, %195 ]
  %178 = phi i32 [ %169, %165 ], [ %197, %195 ]
  %179 = phi i32 [ 0, %165 ], [ %198, %195 ]
  %180 = icmp sgt i32 %178, 0
  br i1 %180, label %181, label %195

181:                                              ; preds = %176
  %182 = load i32, i32* %138, align 8
  %183 = mul nsw i32 %168, %182
  %184 = add nsw i32 %183, %179
  %185 = load i32, i32* %140, align 4
  %186 = mul nsw i32 %184, %185
  br label %200

187:                                              ; preds = %195
  %188 = load i32, i32* %143, align 4
  br label %189

189:                                              ; preds = %187, %160
  %190 = phi i32 [ %188, %187 ], [ %161, %160 ]
  %191 = add nuw nsw i32 %162, 1
  %192 = icmp slt i32 %191, %190
  br i1 %192, label %160, label %170

193:                                              ; preds = %200
  %194 = load i32, i32* %145, align 4
  br label %195

195:                                              ; preds = %193, %176
  %196 = phi i32 [ %194, %193 ], [ %177, %176 ]
  %197 = phi i32 [ %235, %193 ], [ %178, %176 ]
  %198 = add nuw nsw i32 %179, 1
  %199 = icmp slt i32 %198, %196
  br i1 %199, label %176, label %187

200:                                              ; preds = %181, %200
  %201 = phi i32 [ 0, %181 ], [ %234, %200 ]
  %202 = add nsw i32 %186, %201
  %203 = load i32, i32* %117, align 4
  %204 = mul nsw i32 %203, %150
  %205 = load i32, i32* %118, align 4
  %206 = mul nsw i32 %205, %162
  %207 = add nsw i32 %206, %204
  %208 = load i32, i32* %119, align 4
  %209 = mul nsw i32 %208, %179
  %210 = add nsw i32 %207, %209
  %211 = load i32, i32* %120, align 4
  %212 = mul nsw i32 %211, %201
  %213 = add nsw i32 %210, %212
  %214 = load i32, i32* %123, align 4
  %215 = mul nsw i32 %214, %150
  %216 = load i32, i32* %124, align 4
  %217 = mul nsw i32 %216, %162
  %218 = add nsw i32 %217, %215
  %219 = load i32, i32* %125, align 4
  %220 = mul nsw i32 %219, %179
  %221 = add nsw i32 %218, %220
  %222 = load i32, i32* %126, align 4
  %223 = mul nsw i32 %222, %201
  %224 = add nsw i32 %221, %223
  %225 = sext i32 %213 to i64
  %226 = getelementptr inbounds i64, i64* %1, i64 %225
  %227 = load i64, i64* %226, align 8
  %228 = sext i32 %224 to i64
  %229 = getelementptr inbounds i64, i64* %3, i64 %228
  %230 = load i64, i64* %229, align 8
  %231 = call i64 %6(i64 %227, i64 %230) #11
  %232 = sext i32 %202 to i64
  %233 = getelementptr inbounds i64, i64* %5, i64 %232
  store i64 %231, i64* %233, align 8
  %234 = add nuw nsw i32 %201, 1
  %235 = load i32, i32* %147, align 4
  %236 = icmp slt i32 %234, %235
  br i1 %236, label %200, label %193
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN6tflite13reference_ops8FloorModIlEET_S2_S2_(i64, i64) #2 comdat {
  %3 = srem i64 %0, %1
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = lshr i64 %1, 63
  %7 = trunc i64 %6 to i32
  %8 = lshr i64 %3, 63
  %9 = trunc i64 %8 to i32
  %10 = icmp eq i32 %7, %9
  %11 = select i1 %10, i64 0, i64 %1
  %12 = add nsw i64 %11, %3
  br label %13

13:                                               ; preds = %5, %2
  %14 = phi i64 [ 0, %2 ], [ %12, %5 ]
  ret i64 %14
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIfffEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E(%"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, float (float, float)*) local_unnamed_addr #7 comdat {
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::NdArrayDesc", align 4
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %12 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %13, align 8, !alias.scope !96
  %14 = load i32, i32* %11, align 8, !noalias !96
  %15 = icmp sgt i32 %14, 4
  br i1 %15, label %16, label %17

16:                                               ; preds = %7
  tail call void @abort() #12, !noalias !96
  unreachable

17:                                               ; preds = %7
  store i32 4, i32* %13, align 8, !alias.scope !96
  %18 = sub i32 4, %14
  %19 = icmp sgt i32 %18, 0
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %19, label %21, label %101

21:                                               ; preds = %17
  %22 = bitcast %union.anon* %20 to [5 x i32]*
  %23 = zext i32 %18 to i64
  %24 = icmp ult i32 %18, 8
  br i1 %24, label %94, label %25

25:                                               ; preds = %21
  %26 = and i64 %23, 4294967288
  %27 = add nsw i64 %26, -8
  %28 = lshr exact i64 %27, 3
  %29 = add nuw nsw i64 %28, 1
  %30 = and i64 %29, 7
  %31 = icmp ult i64 %27, 56
  br i1 %31, label %79, label %32

32:                                               ; preds = %25
  %33 = sub nsw i64 %29, %30
  br label %34

34:                                               ; preds = %34, %32
  %35 = phi i64 [ 0, %32 ], [ %76, %34 ]
  %36 = phi i64 [ %33, %32 ], [ %77, %34 ]
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %35
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !96
  %39 = getelementptr inbounds i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !96
  %41 = or i64 %35, 8
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !96
  %44 = getelementptr inbounds i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !96
  %46 = or i64 %35, 16
  %47 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !96
  %49 = getelementptr inbounds i32, i32* %47, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !96
  %51 = or i64 %35, 24
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %51
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !96
  %54 = getelementptr inbounds i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !96
  %56 = or i64 %35, 32
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !96
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !96
  %61 = or i64 %35, 40
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !96
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !96
  %66 = or i64 %35, 48
  %67 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %66
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !96
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !96
  %71 = or i64 %35, 56
  %72 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %71
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !96
  %74 = getelementptr inbounds i32, i32* %72, i64 4
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !96
  %76 = add i64 %35, 64
  %77 = add i64 %36, -8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %34, !llvm.loop !99

79:                                               ; preds = %34, %25
  %80 = phi i64 [ 0, %25 ], [ %76, %34 ]
  %81 = icmp eq i64 %30, 0
  br i1 %81, label %92, label %82

82:                                               ; preds = %79, %82
  %83 = phi i64 [ %89, %82 ], [ %80, %79 ]
  %84 = phi i64 [ %90, %82 ], [ %30, %79 ]
  %85 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %83
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !96
  %87 = getelementptr inbounds i32, i32* %85, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !96
  %89 = add i64 %83, 8
  %90 = add i64 %84, -1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %82, !llvm.loop !100

92:                                               ; preds = %82, %79
  %93 = icmp eq i64 %26, %23
  br i1 %93, label %101, label %94

94:                                               ; preds = %92, %21
  %95 = phi i64 [ 0, %21 ], [ %26, %92 ]
  br label %96

96:                                               ; preds = %94, %96
  %97 = phi i64 [ %99, %96 ], [ %95, %94 ]
  %98 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %97
  store i32 1, i32* %98, align 4, !alias.scope !96
  %99 = add nuw nsw i64 %97, 1
  %100 = icmp eq i64 %99, %23
  br i1 %100, label %101, label %96, !llvm.loop !101

101:                                              ; preds = %96, %92, %17
  %102 = getelementptr inbounds %union.anon, %union.anon* %20, i64 0, i32 0
  %103 = bitcast %union.anon* %20 to i32*
  %104 = sext i32 %18 to i64
  %105 = getelementptr inbounds i32, i32* %103, i64 %104
  %106 = bitcast i32* %105 to i8*
  %107 = icmp sgt i32 %14, 5
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %109 = getelementptr inbounds %union.anon, %union.anon* %108, i64 0, i32 0
  %110 = load i32*, i32** %109, align 8, !noalias !96
  %111 = bitcast %union.anon* %108 to i32*
  %112 = select i1 %107, i32* %110, i32* %111
  %113 = bitcast i32* %112 to i8*
  %114 = sext i32 %14 to i64
  %115 = shl nsw i64 %114, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %113, i64 %115, i1 false) #11
  %116 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %116) #11
  %117 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 0
  %118 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 1
  %119 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 2
  %120 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 3
  %121 = bitcast %"struct.tflite::NdArrayDesc"* %10 to i8*
  %122 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %122, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %121) #11
  %123 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 0
  %124 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 1
  %125 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 2
  %126 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 3
  %127 = bitcast %"struct.tflite::NdArrayDesc"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %127, i8 -86, i64 32, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %2, %"struct.tflite::NdArrayDesc"* nonnull %9, %"struct.tflite::NdArrayDesc"* nonnull %10)
  %128 = load i32, i32* %13, align 8
  %129 = icmp sgt i32 %128, 5
  %130 = load i32*, i32** %102, align 8
  %131 = select i1 %129, i32* %130, i32* %103
  %132 = load i32, i32* %131, align 4
  %133 = icmp sgt i32 %132, 0
  br i1 %133, label %134, label %153

134:                                              ; preds = %101
  %135 = bitcast %union.anon* %20 to [5 x i32]*
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %135, i64 0, i64 1
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %138 = bitcast [16 x i8]* %137 to i32*
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %140 = bitcast i8* %139 to i32*
  %141 = getelementptr inbounds i32, i32* %103, i64 1
  %142 = getelementptr inbounds i32, i32* %130, i64 1
  %143 = select i1 %129, i32* %142, i32* %136
  %144 = getelementptr inbounds i32, i32* %130, i64 2
  %145 = select i1 %129, i32* %144, i32* %138
  %146 = getelementptr inbounds i32, i32* %130, i64 3
  %147 = select i1 %129, i32* %146, i32* %140
  br label %148

148:                                              ; preds = %134, %172
  %149 = phi i32 [ %132, %134 ], [ %173, %172 ]
  %150 = phi i32 [ 0, %134 ], [ %174, %172 ]
  %151 = load i32, i32* %143, align 4
  %152 = icmp sgt i32 %151, 0
  br i1 %152, label %160, label %172

153:                                              ; preds = %172, %101
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %121) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %116) #11
  %154 = xor i1 %129, true
  %155 = icmp eq i32* %130, null
  %156 = or i1 %155, %154
  br i1 %156, label %159, label %157

157:                                              ; preds = %153
  %158 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %158) #10
  br label %159

159:                                              ; preds = %153, %157
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #11
  ret void

160:                                              ; preds = %148, %189
  %161 = phi i32 [ %190, %189 ], [ %151, %148 ]
  %162 = phi i32 [ %191, %189 ], [ 0, %148 ]
  %163 = load i32, i32* %145, align 4
  %164 = icmp sgt i32 %163, 0
  br i1 %164, label %165, label %189

165:                                              ; preds = %160
  %166 = load i32, i32* %141, align 4
  %167 = mul nsw i32 %166, %150
  %168 = add nsw i32 %167, %162
  %169 = load i32, i32* %147, align 4
  br label %176

170:                                              ; preds = %189
  %171 = load i32, i32* %131, align 4
  br label %172

172:                                              ; preds = %170, %148
  %173 = phi i32 [ %171, %170 ], [ %149, %148 ]
  %174 = add nuw nsw i32 %150, 1
  %175 = icmp slt i32 %174, %173
  br i1 %175, label %148, label %153

176:                                              ; preds = %165, %195
  %177 = phi i32 [ %163, %165 ], [ %196, %195 ]
  %178 = phi i32 [ %169, %165 ], [ %197, %195 ]
  %179 = phi i32 [ 0, %165 ], [ %198, %195 ]
  %180 = icmp sgt i32 %178, 0
  br i1 %180, label %181, label %195

181:                                              ; preds = %176
  %182 = load i32, i32* %138, align 8
  %183 = mul nsw i32 %168, %182
  %184 = add nsw i32 %183, %179
  %185 = load i32, i32* %140, align 4
  %186 = mul nsw i32 %184, %185
  br label %200

187:                                              ; preds = %195
  %188 = load i32, i32* %143, align 4
  br label %189

189:                                              ; preds = %187, %160
  %190 = phi i32 [ %188, %187 ], [ %161, %160 ]
  %191 = add nuw nsw i32 %162, 1
  %192 = icmp slt i32 %191, %190
  br i1 %192, label %160, label %170

193:                                              ; preds = %200
  %194 = load i32, i32* %145, align 4
  br label %195

195:                                              ; preds = %193, %176
  %196 = phi i32 [ %194, %193 ], [ %177, %176 ]
  %197 = phi i32 [ %235, %193 ], [ %178, %176 ]
  %198 = add nuw nsw i32 %179, 1
  %199 = icmp slt i32 %198, %196
  br i1 %199, label %176, label %187

200:                                              ; preds = %181, %200
  %201 = phi i32 [ 0, %181 ], [ %234, %200 ]
  %202 = add nsw i32 %186, %201
  %203 = load i32, i32* %117, align 4
  %204 = mul nsw i32 %203, %150
  %205 = load i32, i32* %118, align 4
  %206 = mul nsw i32 %205, %162
  %207 = add nsw i32 %206, %204
  %208 = load i32, i32* %119, align 4
  %209 = mul nsw i32 %208, %179
  %210 = add nsw i32 %207, %209
  %211 = load i32, i32* %120, align 4
  %212 = mul nsw i32 %211, %201
  %213 = add nsw i32 %210, %212
  %214 = load i32, i32* %123, align 4
  %215 = mul nsw i32 %214, %150
  %216 = load i32, i32* %124, align 4
  %217 = mul nsw i32 %216, %162
  %218 = add nsw i32 %217, %215
  %219 = load i32, i32* %125, align 4
  %220 = mul nsw i32 %219, %179
  %221 = add nsw i32 %218, %220
  %222 = load i32, i32* %126, align 4
  %223 = mul nsw i32 %222, %201
  %224 = add nsw i32 %221, %223
  %225 = sext i32 %213 to i64
  %226 = getelementptr inbounds float, float* %1, i64 %225
  %227 = load float, float* %226, align 4
  %228 = sext i32 %224 to i64
  %229 = getelementptr inbounds float, float* %3, i64 %228
  %230 = load float, float* %229, align 4
  %231 = call float %6(float %227, float %230) #11
  %232 = sext i32 %202 to i64
  %233 = getelementptr inbounds float, float* %5, i64 %232
  store float %231, float* %233, align 4
  %234 = add nuw nsw i32 %201, 1
  %235 = load i32, i32* %147, align 4
  %236 = icmp slt i32 %234, %235
  br i1 %236, label %200, label %193
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZN6tflite13reference_ops8FloorModIfEET_S2_S2_(float, float) #2 comdat {
  %3 = tail call float @fmodf(float %0, float %1) #11
  %4 = fcmp une float %3, 0.000000e+00
  br i1 %4, label %5, label %11

5:                                                ; preds = %2
  %6 = fcmp olt float %1, 0.000000e+00
  %7 = fcmp olt float %3, 0.000000e+00
  %8 = xor i1 %6, %7
  %9 = fadd float %3, %1
  %10 = select i1 %8, float %9, float %3
  br label %11

11:                                               ; preds = %5, %2
  %12 = phi float [ %3, %2 ], [ %10, %5 ]
  ret float %12
}

; Function Attrs: nofree nounwind
declare float @fmodf(float, float) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!7 = distinct !{!7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!10 = distinct !{!10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!13 = distinct !{!13, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!16 = distinct !{!16, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!19 = distinct !{!19, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!22 = distinct !{!22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.isvectorized", i32 1}
!25 = distinct !{!25, !4}
!26 = distinct !{!26, !27, !24}
!27 = !{!"llvm.loop.unroll.runtime.disable"}
!28 = distinct !{!28, !4}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!31 = distinct !{!31, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!34 = distinct !{!34, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!37 = distinct !{!37, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!40 = distinct !{!40, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!43 = distinct !{!43, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!46 = distinct !{!46, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!47 = distinct !{!47, !24}
!48 = distinct !{!48, !4}
!49 = distinct !{!49, !27, !24}
!50 = distinct !{!50, !4}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!53 = distinct !{!53, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!56 = distinct !{!56, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!59 = distinct !{!59, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!62 = distinct !{!62, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!65 = distinct !{!65, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!68 = distinct !{!68, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!69 = distinct !{!69, !24}
!70 = distinct !{!70, !4}
!71 = distinct !{!71, !27, !24}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!74 = distinct !{!74, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!75 = distinct !{!75, !24}
!76 = distinct !{!76, !4}
!77 = distinct !{!77, !27, !24}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!80 = distinct !{!80, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!81 = distinct !{!81, !24}
!82 = distinct !{!82, !4}
!83 = distinct !{!83, !27, !24}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!86 = distinct !{!86, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!87 = distinct !{!87, !24}
!88 = distinct !{!88, !4}
!89 = distinct !{!89, !27, !24}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!92 = distinct !{!92, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!93 = distinct !{!93, !24}
!94 = distinct !{!94, !4}
!95 = distinct !{!95, !27, !24}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!98 = distinct !{!98, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!99 = distinct !{!99, !24}
!100 = distinct !{!100, !4}
!101 = distinct !{!101, !27, !24}
