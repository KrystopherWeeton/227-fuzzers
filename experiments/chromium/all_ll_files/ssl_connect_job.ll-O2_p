; ModuleID = '../../net/socket/ssl_connect_job.cc'
source_filename = "../../net/socket/ssl_connect_job.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.net::SSLSocketParams" = type { %"class.base::RefCounted", %class.scoped_refptr, %class.scoped_refptr.10, %class.scoped_refptr.12, %"class.net::HostPortPair", %"struct.net::SSLConfig", i32, %"class.net::NetworkIsolationKey" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr = type { %"class.net::TransportSocketParams"* }
%class.scoped_refptr.10 = type { %"class.net::SOCKSSocketParams"* }
%class.scoped_refptr.12 = type { %"class.net::HttpProxySocketParams"* }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.net::SSLConfig" = type <{ %"class.absl::optional.15", %"class.absl::optional.15", i8, i8, i8, [5 x i8], %"class.std::__1::vector", i8, i8, [6 x i8], %"class.std::__1::vector.44", i8, [7 x i8], %"class.std::__1::vector.44", %"class.base::flat_map", %"class.net::NetworkIsolationKey", i32, i8, [3 x i8] }>
%"class.absl::optional.15" = type { %"class.absl::optional_internal::optional_data.16" }
%"class.absl::optional_internal::optional_data.16" = type { %"class.absl::optional_internal::optional_data_base.17" }
%"class.absl::optional_internal::optional_data_base.17" = type { %"class.absl::optional_internal::optional_data_dtor_base.18" }
%"class.absl::optional_internal::optional_data_dtor_base.18" = type { i8, %union.anon.19 }
%union.anon.19 = type { i16 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::SSLConfig::CertAndStatus"*, %"struct.net::SSLConfig::CertAndStatus"*, %"class.std::__1::__compressed_pair.39" }
%"struct.net::SSLConfig::CertAndStatus" = type <{ %class.scoped_refptr.20, i32, [4 x i8] }>
%class.scoped_refptr.20 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.21", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr", %"class.std::__1::vector.32" }
%"class.base::RefCountedThreadSafe.21" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.22", %"class.std::__1::vector.22", %"class.std::__1::vector.22", %"class.std::__1::vector.22" }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::basic_string"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.net::SSLConfig::CertAndStatus"* }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { i32*, i32*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { i32* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.51" }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.53" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.std::__1::pair"* }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.2 }
%union.anon.2 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.3" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.3" = type { %"class.absl::optional_internal::optional_data.4" }
%"class.absl::optional_internal::optional_data.4" = type { %"class.absl::optional_internal::optional_data_base.5" }
%"class.absl::optional_internal::optional_data_base.5" = type { %"class.absl::optional_internal::optional_data_dtor_base.6" }
%"class.absl::optional_internal::optional_data_dtor_base.6" = type { i8, %union.anon.7 }
%union.anon.7 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.net::TransportSocketParams" = type { %"class.base::RefCounted.0", [4 x i8], %"class.net::HostPortPair", %"class.net::NetworkIsolationKey", i32, %"class.base::RepeatingCallback" }
%"class.base::RefCounted.0" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::SOCKSSocketParams" = type <{ %"class.base::RefCounted.11", [4 x i8], %class.scoped_refptr, %"class.net::HostPortPair", i8, [7 x i8], %"class.net::NetworkIsolationKey", %"struct.net::NetworkTrafficAnnotationTag", [4 x i8] }>
%"class.base::RefCounted.11" = type { %"class.base::subtle::RefCountedBase" }
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%"class.net::HttpProxySocketParams" = type <{ %"class.base::RefCounted.13", [4 x i8], %class.scoped_refptr, %class.scoped_refptr.14, i8, [7 x i8], %"class.net::HostPortPair", i8, [7 x i8], %"class.net::NetworkIsolationKey", %"struct.net::NetworkTrafficAnnotationTag", [4 x i8] }>
%"class.base::RefCounted.13" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.14 = type { %"class.net::SSLSocketParams"* }
%"class.net::SSLConnectJob" = type { %"class.net::ConnectJob.base", %"class.net::ConnectJob::Delegate", %class.scoped_refptr.14, i32, %"class.base::RepeatingCallback.127", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.134", i8, i8, %class.scoped_refptr.140, %"class.std::__1::vector.149", %"struct.net::ResolveErrorInfo", %"class.net::IPEndPoint", %"class.std::__1::vector.22" }
%"class.net::ConnectJob.base" = type <{ i32 (...)**, %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeDelta", i32, %"class.net::SocketTag", [3 x i8], %"struct.net::CommonConnectJobParams"*, %"class.base::OneShotTimer", %"class.net::ConnectJob::Delegate"*, %"class.std::__1::unique_ptr.123", i8, [7 x i8], %"class.net::NetLogWithSource", i32 }>
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.58" }
%"class.base::time_internal::TimeBase.58" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::SocketTag" = type { i8 }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.120, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.120 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.121" }>
%"class.base::RefCountedThreadSafe.121" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.122 }
%class.scoped_refptr.122 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.92", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.92" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.93" }
%"struct.std::__1::atomic.93" = type { %"struct.std::__1::__atomic_base.94" }
%"struct.std::__1::__atomic_base.94" = type { %"struct.std::__1::__atomic_base.95" }
%"struct.std::__1::__atomic_base.95" = type { %"struct.std::__1::__cxx_atomic_impl.96" }
%"struct.std::__1::__cxx_atomic_impl.96" = type { %"struct.std::__1::__cxx_atomic_base_impl.97" }
%"struct.std::__1::__cxx_atomic_base_impl.97" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.106", %"class.std::__1::vector.113" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.108" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.113" = type { %"class.std::__1::__vector_base.114" }
%"class.std::__1::__vector_base.114" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.115" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.net::ConnectJob::Delegate" = type { i32 (...)** }
%"class.base::RepeatingCallback.127" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.net::ConnectJob"* }
%"class.net::ConnectJob" = type <{ i32 (...)**, %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeDelta", i32, %"class.net::SocketTag", [3 x i8], %"struct.net::CommonConnectJobParams"*, %"class.base::OneShotTimer", %"class.net::ConnectJob::Delegate"*, %"class.std::__1::unique_ptr.123", i8, [7 x i8], %"class.net::NetLogWithSource", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.net::StreamSocket"* }
%"class.net::StreamSocket" = type { %"class.net::Socket" }
%"class.net::Socket" = type { i32 (...)**, %"class.std::__1::vector.22" }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.net::SSLClientSocket"* }
%"class.net::SSLClientSocket" = type <{ %"class.net::SSLSocket", i8, i8, [6 x i8] }>
%"class.net::SSLSocket" = type { %"class.net::StreamSocket" }
%class.scoped_refptr.140 = type { %"class.net::SSLCertRequestInfo"* }
%"class.net::SSLCertRequestInfo" = type { %"class.base::RefCountedThreadSafe.141", [4 x i8], %"class.net::HostPortPair", i8, %"class.std::__1::vector.22", %"class.std::__1::vector.142" }
%"class.base::RefCountedThreadSafe.141" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { i32*, i32*, %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { i32* }
%"class.std::__1::vector.149" = type { %"class.std::__1::__vector_base.150" }
%"class.std::__1::__vector_base.150" = type { %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"*, %"class.std::__1::__compressed_pair.151" }
%"struct.net::ConnectionAttempt" = type { %"class.net::IPEndPoint", i32 }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"struct.net::ConnectionAttempt"* }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"struct.net::CommonConnectJobParams" = type { %"class.net::ClientSocketFactory"*, %"class.net::HostResolver"*, %"class.net::HttpAuthCache"*, %"class.net::HttpAuthHandlerFactory"*, %"class.net::SpdySessionPool"*, %"class.std::__1::vector.59"*, %"class.net::QuicStreamFactory"*, %"class.net::ProxyDelegate"*, %"class.net::HttpUserAgentSettings"*, %"class.net::SSLClientContext"*, %"class.net::SocketPerformanceWatcherFactory"*, %"class.net::NetworkQualityEstimator"*, %"class.net::NetLog"*, %"class.net::WebSocketEndpointLockManager"* }
%"class.net::ClientSocketFactory" = type { i32 (...)** }
%"class.net::HostResolver" = type { i32 (...)** }
%"class.net::HttpAuthCache" = type opaque
%"class.net::HttpAuthHandlerFactory" = type opaque
%"class.net::SpdySessionPool" = type opaque
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.61" }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.net::QuicStreamFactory" = type opaque
%"class.net::ProxyDelegate" = type opaque
%"class.net::HttpUserAgentSettings" = type opaque
%"class.net::SSLClientContext" = type { %"class.net::SSLConfigService::Observer", %"class.net::CertDatabase::Observer", %"struct.net::SSLContextConfig", %"class.net::SSLConfigService"*, %"class.net::CertVerifier"*, %"class.net::TransportSecurityState"*, %"class.net::CTPolicyEnforcer"*, %"class.net::SSLClientSessionCache"*, %"class.net::SCTAuditingDelegate"*, %"class.net::SSLClientAuthCache", %"class.base::ObserverList.88" }
%"class.net::SSLConfigService::Observer" = type { i32 (...)** }
%"class.net::CertDatabase::Observer" = type { i32 (...)** }
%"struct.net::SSLContextConfig" = type <{ i16, i16, i16, [2 x i8], %"class.std::__1::vector.66", i8, i8, [6 x i8] }>
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { i16*, i16*, %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { i16* }
%"class.net::SSLConfigService" = type { i32 (...)**, %"class.base::ObserverList" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.73", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.75" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.net::CertVerifier" = type opaque
%"class.net::TransportSecurityState" = type opaque
%"class.net::CTPolicyEnforcer" = type opaque
%"class.net::SSLClientSessionCache" = type opaque
%"class.net::SCTAuditingDelegate" = type opaque
%"class.net::SSLClientAuthCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { i64 }
%"class.base::ObserverList.88" = type <{ %"class.std::__1::vector.89", %"class.base::LinkedList.103", i64, i32, [4 x i8] }>
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.98" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.91 }
%class.scoped_refptr.91 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.103" = type { %"class.base::LinkNode.104" }
%"class.base::LinkNode.104" = type { %"class.base::internal::LinkNodeBase" }
%"class.net::SocketPerformanceWatcherFactory" = type opaque
%"class.net::NetworkQualityEstimator" = type opaque
%"class.net::WebSocketEndpointLockManager" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.net::HttpResponseInfo" = type { i8, i32, i8, i8, i8, i8, i8, %"class.net::ProxyServer", i8, i8, i8, i8, %"class.base::Time", %"class.net::IPEndPoint", %"class.std::__1::basic_string", i32, %"class.base::Time", %"class.base::Time", %"struct.net::ResolveErrorInfo", %"class.absl::optional.156", %class.scoped_refptr.140, %"class.net::SSLInfo", %class.scoped_refptr.178, %"class.net::HttpVaryData", %"class.std::__1::vector.22" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.absl::optional.156" = type { %"class.absl::optional_internal::optional_data.157" }
%"class.absl::optional_internal::optional_data.157" = type { %"class.absl::optional_internal::optional_data_base.158" }
%"class.absl::optional_internal::optional_data_base.158" = type { %"class.absl::optional_internal::optional_data_dtor_base.159" }
%"class.absl::optional_internal::optional_data_dtor_base.159" = type { i8, %union.anon.160 }
%union.anon.160 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.20, %class.scoped_refptr.20, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.161", %"class.std::__1::basic_string", %"class.std::__1::vector.169", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%"class.std::__1::vector.161" = type { %"class.std::__1::__vector_base.162" }
%"class.std::__1::__vector_base.162" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.164" }
%"class.net::HashValue" = type { i32, %union.anon.163 }
%union.anon.163 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.169" = type { %"class.std::__1::__vector_base.170" }
%"class.std::__1::__vector_base.170" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.173" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.171, i32, [4 x i8] }>
%class.scoped_refptr.171 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.172", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.172" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%class.scoped_refptr.178 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type opaque
%"class.net::HttpVaryData" = type { %"struct.base::MD5Digest", i8 }
%"struct.base::MD5Digest" = type { [16 x i8] }
%"class.net::HttpAuthController" = type { %"class.base::RefCounted.179", i32, %class.GURL, %class.GURL, %"class.std::__1::basic_string", %"class.net::NetworkIsolationKey", %"class.std::__1::unique_ptr.186", %"struct.net::HttpAuth::Identity", %"class.std::__1::basic_string", %"class.absl::optional.156", i8, i8, %"class.net::HttpAuthCache"*, %"class.net::HttpAuthHandlerFactory"*, %"class.net::HostResolver"*, %"class.std::__1::set", %"class.base::OnceCallback.210", %"class.net::NetLogWithSource" }
%"class.base::RefCounted.179" = type { %"class.base::subtle::RefCountedBase" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.180" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %class.GURL* }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.net::HttpAuthHandler"* }
%"class.net::HttpAuthHandler" = type opaque
%"struct.net::HttpAuth::Identity" = type { i32, i8, %"class.net::AuthCredentials" }
%"class.net::AuthCredentials" = type { %"class.std::__1::basic_string.192", %"class.std::__1::basic_string.192" }
%"class.std::__1::basic_string.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.195 }
%union.anon.195 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.201" }
%"class.std::__1::__tree.201" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.202", %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.base::OnceCallback.210" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.net::SOCKSConnectJob" = type { %"class.net::ConnectJob.base", %"class.net::ConnectJob::Delegate", %class.scoped_refptr.10, i32, %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.123", %"class.net::SOCKSClientSocket"*, %"struct.net::ResolveErrorInfo" }
%"class.net::SOCKSClientSocket" = type <{ %"class.net::StreamSocket", %"class.std::__1::unique_ptr.123", i32, [4 x i8], %"class.base::OnceCallback.210", %class.scoped_refptr.215, %"class.std::__1::basic_string", i8, [7 x i8], i64, i64, i8, [7 x i8], %"class.net::HostResolver"*, i32, [4 x i8], %"class.std::__1::unique_ptr.217", %"class.net::HostPortPair", %"class.net::NetworkIsolationKey", i32, %"struct.net::ResolveErrorInfo", [4 x i8], %"class.net::NetLogWithSource", %"struct.net::NetworkTrafficAnnotationTag", [4 x i8] }>
%class.scoped_refptr.215 = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.216", i8* }
%"class.base::RefCountedThreadSafe.216" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.net::HostResolver::ResolveHostRequest"* }
%"class.net::HostResolver::ResolveHostRequest" = type { i32 (...)** }
%"class.net::HttpProxyConnectJob" = type { %"class.net::ConnectJob.base", %"class.net::ConnectJob::Delegate", %class.scoped_refptr.12, %class.scoped_refptr.140, i32, i8, i8, i32, i8, [3 x i8], %"struct.net::ResolveErrorInfo", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.247", %class.scoped_refptr.977, %"struct.net::NetErrorDetails", %"class.base::TimeTicks", %"class.base::WeakPtrFactory.978" }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.net::ProxyClientSocket"* }
%"class.net::ProxyClientSocket" = type { %"class.net::StreamSocket" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.net::SpdyStreamRequest"* }
%"class.net::SpdyStreamRequest" = type opaque
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.net::QuicStreamRequest"* }
%"class.net::QuicStreamRequest" = type opaque
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.net::QuicChromiumClientSession::Handle"* }
%"class.net::QuicChromiumClientSession::Handle" = type <{ %"class.net::MultiplexedSessionHandle.base", [7 x i8], %"class.quic::QuicClientPushPromiseIndex::Delegate", %"class.base::WeakPtr.251", %"class.net::HostPortPair", %"class.std::__1::unique_ptr.252", %"class.net::NetLogWithSource", i8, [3 x i8], i32, i32, i8, [3 x i8], %"class.quic::QuicServerId", %"struct.quic::ParsedQuicVersion", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.quic::QuicClientPushPromiseIndex"*, %"class.quic::QuicClientPushPromiseIndex::TryHandle"*, %"class.base::OnceCallback.210", %"class.std::__1::unique_ptr.255", i8, [7 x i8] }>
%"class.net::MultiplexedSessionHandle.base" = type <{ i32 (...)**, %"class.base::WeakPtr.250", %"class.net::SSLInfo", i8 }>
%"class.base::WeakPtr.250" = type { %"class.base::internal::WeakPtrBase" }
%"class.quic::QuicClientPushPromiseIndex::Delegate" = type { i32 (...)** }
%"class.base::WeakPtr.251" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.net::QuicChromiumClientSession::StreamRequest"* }
%"class.net::QuicChromiumClientSession::StreamRequest" = type { %"class.net::QuicChromiumClientSession::Handle"*, i8, %"class.base::OnceCallback.210", %"class.std::__1::unique_ptr.255", %"class.base::TimeTicks", i32, %"struct.net::NetworkTrafficAnnotationTag", %"class.base::WeakPtrFactory.970" }
%"class.base::WeakPtrFactory.970" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.quic::QuicServerId" = type <{ %"class.std::__1::basic_string", i16, i8, [5 x i8] }>
%"class.quic::QuicClientPushPromiseIndex" = type { i32 (...)**, %"class.absl::flat_hash_map.947" }
%"class.absl::flat_hash_map.947" = type { %"class.absl::container_internal::raw_hash_map.948" }
%"class.absl::container_internal::raw_hash_map.948" = type { %"class.absl::container_internal::raw_hash_set.949" }
%"class.absl::container_internal::raw_hash_set.949" = type { i8*, %"union.absl::container_internal::map_slot_type.950"*, i64, i64, %"class.absl::container_internal::CompressedTuple.951" }
%"union.absl::container_internal::map_slot_type.950" = type opaque
%"class.absl::container_internal::CompressedTuple.951" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.952" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.952" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.270" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.270" = type { i64 }
%"class.quic::QuicClientPushPromiseIndex::TryHandle" = type { i32 (...)** }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.net::QuicChromiumClientStream::Handle"* }
%"class.net::QuicChromiumClientStream::Handle" = type { %"class.net::QuicChromiumClientStream"*, i8, %"class.base::OnceCallback.210", %"class.spdy::Http2HeaderBlock"*, %"class.base::OnceCallback.210", %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.210", i32, i32, i32, i8, i8, i64, i64, i8, i8, i64, i32, i32, %"class.net::NetLogWithSource", %"class.base::TimeTicks", %"class.base::WeakPtrFactory.966" }
%"class.net::QuicChromiumClientStream" = type { %"class.quic::QuicSpdyStream", %"class.net::NetLogWithSource", %"class.net::QuicChromiumClientStream::Handle"*, i8, %"class.quic::QuicSpdyClientSessionBase"*, i32, i8, i8, i8, %"class.spdy::Http2HeaderBlock", i64, i64, %"class.base::circular_deque", %"class.base::WeakPtrFactory.965" }
%"class.quic::QuicSpdyStream" = type { %"class.quic::QuicStream.base", %"class.quic::QpackDecodedHeadersAccumulator::Visitor", %"class.quic::QuicSpdySession"*, i8, %"class.quic::QuicSpdyStream::Visitor"*, i8, i8, i8, %"class.quic::QuicHeaderList", i64, i8, i8, %"class.spdy::Http2HeaderBlock", %"class.std::__1::unique_ptr.902", %"class.std::__1::unique_ptr.920", %"class.quic::HttpDecoder", %"class.quic::QuicSpdyStreamBodyManager", i64, i8, %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicIntervalSet", i32, %"class.std::__1::unique_ptr.929", %"class.std::__1::unique_ptr.935" }
%"class.quic::QuicStream.base" = type <{ %"class.quic::QuicStreamSequencer::StreamInterface", %"class.quic::QuicStreamSequencer", i32, [4 x i8], %"class.quic::QuicSession"*, %"class.quic::StreamDelegateInterface"*, %"class.spdy::StreamPrecedence", i64, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.absl::optional.670", %"class.quic::QuicFlowController"*, i8, [7 x i8], i64, i8, [7 x i8], %"class.quic::QuicStreamSendBuffer", i64, i8, [7 x i8], %"class.quic::QuicTime", i8, [3 x i8], i32, %"class.quic::QuicTime", i8 }>
%"class.quic::QuicStreamSequencer::StreamInterface" = type { i32 (...)** }
%"class.quic::QuicStreamSequencer" = type <{ i32 (...)**, %"class.quic::QuicStreamSequencer::StreamInterface"*, %"class.quic::QuicStreamSequencerBuffer", i64, i64, i8, [3 x i8], i32, i32, i8, i8, [2 x i8] }>
%"class.quic::QuicStreamSequencerBuffer" = type { i64, i64, i64, i64, i8, %"class.std::__1::unique_ptr.258", i64, %"class.quic::QuicIntervalSet" }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.quic::QuicStreamSequencerBuffer::BufferBlock"** }
%"struct.quic::QuicStreamSequencerBuffer::BufferBlock" = type { [8192 x i8] }
%"class.quic::QuicSession" = type <{ %"class.quic::QuicConnectionVisitorInterface", %"class.quic::SessionNotifierInterface", %"class.quic::QuicStreamFrameDataProducer", %"class.quic::QuicStreamIdManager::DelegateInterface", %"class.quic::HandshakerDelegateInterface", %"class.quic::StreamDelegateInterface", %"class.quic::QuicControlFrameManager::DelegateInterface", %"class.absl::flat_hash_map", %"class.quic::QuicConnection"*, i8, [7 x i8], %"class.quic::QuicSession::Visitor"*, %"class.quic::QuicWriteBlockedList", %"class.std::__1::vector.562", %"class.quic::QuicConfig", %"class.absl::flat_hash_map.608", %"class.absl::flat_hash_map.617", %"class.quic::LegacyQuicStreamIdManager", %"class.quic::UberQuicStreamIdManager", i64, i64, i64, i64, %"struct.quic::QuicConnectionCloseFrame", %"class.quic::QuicFlowController", i32, i8, i8, [2 x i8], %"class.quic::QuicControlFrameManager", i32, [4 x i8], %"class.quic::QuicDatagramQueue", %"class.quiche::QuicheLinkedHashMap", %"class.std::__1::unique_ptr.435", %"class.std::__1::vector.59", %"class.absl::optional.664", i8, i8, i8, i8, [4 x i8] }>
%"class.quic::QuicConnectionVisitorInterface" = type { i32 (...)** }
%"class.quic::SessionNotifierInterface" = type { i32 (...)** }
%"class.quic::QuicStreamFrameDataProducer" = type { i32 (...)** }
%"class.quic::QuicStreamIdManager::DelegateInterface" = type { i32 (...)** }
%"class.quic::HandshakerDelegateInterface" = type { i32 (...)** }
%"class.quic::StreamDelegateInterface" = type { i32 (...)** }
%"class.quic::QuicControlFrameManager::DelegateInterface" = type { i32 (...)** }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple.268" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple.268" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.269" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.269" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.270" }
%"class.quic::QuicConnection" = type <{ %"class.quic::QuicFramerVisitorInterface", %"class.quic::QuicBlockedWriterInterface", %"class.quic::QuicPacketCreator::DelegateInterface", %"class.quic::QuicSentPacketManager::NetworkChangeVisitor", %"class.quic::QuicNetworkBlackholeDetector::Delegate", %"class.quic::QuicIdleNetworkDetector::Delegate", %"class.quic::QuicPathValidator::SendDelegate", %"class.quic::QuicConnectionIdManagerVisitorInterface", %"class.quic::QuicFramer", i8, i8, i8, i8, [4 x i8], %"class.quic::QuicConnectionHelperInterface"*, %"class.quic::QuicAlarmFactory"*, %"struct.quic::PerPacketOptions"*, %"class.quic::QuicPacketWriter"*, i8, i8, [6 x i8], %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", i8, i8, [2 x i8], %"class.quic::QuicSocketAddress", [4 x i8], %"struct.quic::QuicConnection::PathState", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], i64, i8*, i8, [7 x i8], %"struct.quic::QuicPacketHeader", i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.std::__1::deque", %"class.quiche::QuicheCircularDeque", i64, i64, %"class.std::__1::unique_ptr.329", i32, [4 x i8], i64, %"struct.quic::QuicConnectionStats", %"class.quic::UberReceivedPacketManager", i32, i8, i8, [2 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i32, i32, %"class.quic::QuicOneBlockArena", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicConnectionVisitorInterface"*, %"class.quic::QuicConnectionDebugVisitor"*, %"class.quic::QuicPacketCreator", %"class.quic::QuicTime", %"class.quic::QuicSentPacketManager", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", [4 x i8], %"class.quic::QuicConnectionId", i8, [7 x i8], %"class.std::__1::vector.59", i64, i16, [6 x i8], i64, i64, i64, i8, i8, [6 x i8], i64, i64, i8, i8, i8, i8, %"struct.std::__1::array.296", i32, i8, i8, i8, [5 x i8], %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.452", %"class.quic::QuicTime::Delta", %"class.std::__1::unique_ptr.474", %"class.quiche::QuicheCircularDeque.480", %"class.quiche::QuicheCircularDeque.483", %"class.std::__1::vector.486", %"class.absl::optional.493", %"class.quic::QuicConnectionId", %"class.absl::optional.493", %"class.std::__1::list", %"class.quic::QuicCoalescedPacket", %"class.quic::QuicConnectionMtuDiscoverer", %"class.quic::QuicNetworkBlackholeDetector", %"class.quic::QuicIdleNetworkDetector", i8, i8, i8, i8, [4 x i8], %"class.std::__1::basic_string", i8, [7 x i8], i64, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPathValidator", %"struct.quic::QuicConnection::PathState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%"class.quic::QuicFramerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicBlockedWriterInterface" = type { i32 (...)** }
%"class.quic::QuicPacketCreator::DelegateInterface" = type { i32 (...)** }
%"class.quic::QuicSentPacketManager::NetworkChangeVisitor" = type { i32 (...)** }
%"class.quic::QuicNetworkBlackholeDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicIdleNetworkDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicPathValidator::SendDelegate" = type { i32 (...)** }
%"class.quic::QuicConnectionIdManagerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicFramer" = type { i32 (...)**, %"class.std::__1::basic_string", %"class.quic::QuicFramerVisitorInterface"*, i32, %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::ParsedQuicVersion", %"class.std::__1::vector.59", [4 x %"class.std::__1::unique_ptr.281"], i8, i8, i8, [4 x %"class.std::__1::unique_ptr.287"], i8, i8, %"struct.std::__1::array.293", i8, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", i8, i8, i8, %"class.quic::QuicPacketNumber", i64, %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.281", %"class.quic::QuicPacketNumber", %"class.quic::QuicStreamFrameDataProducer"*, i8, i8, i8, i8, i8, i8, i64, i32, i32, i64 }
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.quic::QuicEncrypter"* }
%"class.quic::QuicEncrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicCrypter" = type { i32 (...)** }
%"struct.std::__1::array.293" = type { [32 x i8] }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.quic::QuicDecrypter"* }
%"class.quic::QuicDecrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"class.quic::QuicAlarmFactory" = type { i32 (...)** }
%"struct.quic::PerPacketOptions" = type <{ i32 (...)**, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicPacketWriter" = type { i32 (...)** }
%"class.quic::QuicClock" = type { i32 (...)**, i8, %"class.quic::QuicTime::Delta" }
%"class.quic::QuicRandom" = type { i32 (...)** }
%"struct.quic::QuicPacketHeader" = type { %"class.quic::QuicConnectionId", i8, %"class.quic::QuicConnectionId", i8, i8, i8, i8, i8, i8, %"struct.quic::ParsedQuicVersion", %"struct.std::__1::array.293"*, %"class.quic::QuicPacketNumber", i8, i8, %"struct.std::__1::array.296", i8, %"class.absl::string_view", i8, i64 }
%"class.absl::string_view" = type { i8*, i64 }
%"class.quic::QuicPacketNumber" = type { i64 }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.323" }
%"struct.std::__1::__split_buffer" = type { %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"class.std::__1::__compressed_pair.318" }
%"struct.quic::QuicConnection::UndecryptablePacket" = type <{ %"class.std::__1::unique_ptr.312", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.quic::QuicEncryptedPacket"* }
%"class.quic::QuicEncryptedPacket" = type { %"class.quic::QuicData.base", [7 x i8] }
%"class.quic::QuicData.base" = type <{ i32 (...)**, i8*, i64, i8 }>
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"struct.quic::QuicConnection::UndecryptablePacket"** }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.quiche::QuicheCircularDeque" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" = type { %"class.std::__1::unique_ptr.312"*, i64 }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.std::__1::vector.332"* }
%"class.std::__1::vector.332" = type opaque
%"struct.quic::QuicConnectionStats" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, float, i32, i32, i64, i64, i64, i64, %"class.quic::QuicTimeAccumulator", i32, i32, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.quic::QuicBandwidth", i64, i64, i64, i64, i64, i32, %"class.quic::QuicTime", %"class.quic::QuicTime", i64, i64, i64, i8, i64, i64, i64, i8, i8, %"class.quic::QuicPacketNumber", i64, i64, i64, i32, i64, i64, i8, i8, i64, i64, i64, i64, i64, i64, i64, i64, %"class.absl::optional.336", %"class.absl::optional.336", %"class.absl::optional.336" }
%"class.quic::QuicTimeAccumulator" = type { %"class.quic::QuicTime::Delta", %"class.quic::QuicTime" }
%"class.quic::QuicBandwidth" = type { i64 }
%"class.absl::optional.336" = type { %"class.absl::optional_internal::optional_data.337" }
%"class.absl::optional_internal::optional_data.337" = type { %"class.absl::optional_internal::optional_data_base.338" }
%"class.absl::optional_internal::optional_data_base.338" = type { %"class.absl::optional_internal::optional_data_dtor_base.339" }
%"class.absl::optional_internal::optional_data_dtor_base.339" = type { i8, %union.anon.340 }
%union.anon.340 = type { %"struct.quic::QuicConnectionStats::TlsServerOperationStats" }
%"struct.quic::QuicConnectionStats::TlsServerOperationStats" = type { i8, %"class.quic::QuicTime::Delta" }
%"class.quic::UberReceivedPacketManager" = type <{ i32 (...)**, [3 x %"class.quic::QuicReceivedPacketManager"], i8, [7 x i8] }>
%"class.quic::QuicReceivedPacketManager" = type { i32 (...)**, %"class.quic::QuicPacketNumber", %"struct.quic::QuicAckFrame", i8, i64, %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", %"struct.quic::QuicConnectionStats"*, i64, i64, i64, float, i8, i8, i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", i64 }
%"struct.quic::QuicAckFrame" = type { %"class.quic::QuicPacketNumber", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.341", %"class.quic::PacketNumberQueue", i8, i64, i64, i64 }
%"class.std::__1::vector.341" = type { %"class.std::__1::__vector_base.342" }
%"class.std::__1::__vector_base.342" = type { %"struct.std::__1::pair.343"*, %"struct.std::__1::pair.343"*, %"class.std::__1::__compressed_pair.344" }
%"struct.std::__1::pair.343" = type opaque
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"struct.std::__1::pair.343"* }
%"class.quic::PacketNumberQueue" = type { %"class.quic::QuicIntervalSet.349" }
%"class.quic::QuicIntervalSet.349" = type { %"class.absl::btree_set.350" }
%"class.absl::btree_set.350" = type { %"class.absl::container_internal::btree_set_container.351" }
%"class.absl::container_internal::btree_set_container.351" = type { %"class.absl::container_internal::btree_container.352" }
%"class.absl::container_internal::btree_container.352" = type { %"class.absl::container_internal::btree.353" }
%"class.absl::container_internal::btree.353" = type { %"class.absl::container_internal::CompressedTuple.354", %"class.absl::container_internal::btree_node.361"*, i64 }
%"class.absl::container_internal::CompressedTuple.354" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.355" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.355" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.360" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.360" = type { %"class.absl::container_internal::btree_node.361"* }
%"class.absl::container_internal::btree_node.361" = type { i8 }
%"class.quic::QuicOneBlockArena" = type { [1056 x i8], i32, [4 x i8] }
%"class.quic::QuicArenaScopedPtr" = type { i8* }
%"class.quic::QuicConnectionDebugVisitor" = type { %"class.quic::QuicSentPacketManager::DebugDelegate" }
%"class.quic::QuicSentPacketManager::DebugDelegate" = type { i32 (...)** }
%"class.quic::QuicPacketCreator" = type <{ %"class.quic::QuicPacketCreator::DelegateInterface"*, %"class.quic::QuicPacketCreator::DebugDelegate"*, %"class.quic::QuicFramer"*, %"class.quic::QuicRandom"*, i8, i8, %"struct.std::__1::array.293", [6 x i8], i64, i64, i8, [7 x i8], %"class.std::__1::vector.363", i64, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::SerializedPacket", %"class.std::__1::basic_string", i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPacketNumber", i64, i64, i8, [7 x i8] }>
%"class.quic::QuicPacketCreator::DebugDelegate" = type { i32 (...)** }
%"class.std::__1::vector.363" = type { %"class.std::__1::__vector_base.364" }
%"class.std::__1::__vector_base.364" = type { %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"*, %"class.std::__1::__compressed_pair.390" }
%"struct.quic::QuicFrame" = type { %union.anon.365 }
%union.anon.365 = type { %"struct.quic::QuicStreamFrame" }
%"struct.quic::QuicStreamFrame" = type { i8, i8, i16, i32, i8*, i64 }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"struct.quic::QuicFrame"* }
%"struct.quic::SerializedPacket" = type <{ i8*, i16, [6 x i8], %"class.std::__1::function", %"class.std::__1::vector.363", %"class.std::__1::vector.363", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, i8, [3 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i8*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.quic::QuicSentPacketManager" = type <{ i32 (...)**, %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"struct.quic::QuicConnectionStats"*, %"class.quic::QuicSentPacketManager::DebugDelegate"*, %"class.quic::QuicSentPacketManager::NetworkChangeVisitor"*, i64, %"class.quic::RttStats", %"class.std::__1::unique_ptr.297", %"class.quic::LossDetectionInterface"*, %"class.quic::UberLossAlgorithm", %"class.quic::QuicPacketNumber", i64, i64, i64, i64, i64, i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.414", %"class.std::__1::vector.421", %"class.quic::QuicPacketNumber", i16, [6 x i8], %"class.quic::PacingSender", i8, [7 x i8], %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i8, [7 x i8], %"class.quiche::QuicheCircularDeque.428", %"struct.quic::QuicAckFrame", i8, [7 x i8], %"class.std::__1::reverse_iterator", i8, [7 x i8], i64, i64, i8, i8, i8, [5 x i8], i64, i32, [4 x i8], i64, i8, i8, i8, i8, float, i8, [3 x i8], float, i32, i8, [3 x i8] }>
%"class.quic::QuicUnackedPacketMap" = type <{ i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quiche::QuicheCircularDeque.395", %"class.quic::QuicPacketNumber", i64, [3 x i64], i64, %"class.quic::QuicTime", [3 x %"class.quic::QuicTime"], %"class.quic::QuicTime", %"struct.quic::QuicStreamFrame", %"class.quic::SessionNotifierInterface"*, i8, i8, [6 x i8] }>
%"class.quiche::QuicheCircularDeque.395" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" = type { %"struct.quic::QuicTransmissionInfo"*, i64 }
%"struct.quic::QuicTransmissionInfo" = type { %"class.std::__1::vector.363", %"class.quic::QuicTime", i16, i8, i8, i8, i8, i8, i8, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber" }
%"class.quic::RttStats" = type <{ %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"struct.quic::RttStats::StandardDeviationCaculator", i8, [7 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", i8, [7 x i8] }>
%"struct.quic::RttStats::StandardDeviationCaculator" = type { i8, double }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.quic::SendAlgorithmInterface"* }
%"class.quic::SendAlgorithmInterface" = type { i32 (...)** }
%"class.quic::LossDetectionInterface" = type { i32 (...)** }
%"class.quic::UberLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", [3 x %"class.quic::GeneralLossAlgorithm"], %"class.std::__1::unique_ptr.398", %"struct.quic::LossDetectionParameters", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.quic::GeneralLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", %"class.quic::LossDetectionInterface"*, %"class.quic::QuicTime", i32, [4 x i8], i64, i8, i8, i8, [5 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.quic::LossDetectionTunerInterface"* }
%"class.quic::LossDetectionTunerInterface" = type { i32 (...)** }
%"struct.quic::LossDetectionParameters" = type { %"class.absl::optional.404", %"class.absl::optional.409" }
%"class.absl::optional.404" = type { %"class.absl::optional_internal::optional_data.405" }
%"class.absl::optional_internal::optional_data.405" = type { %"class.absl::optional_internal::optional_data_base.406" }
%"class.absl::optional_internal::optional_data_base.406" = type { %"class.absl::optional_internal::optional_data_dtor_base.407" }
%"class.absl::optional_internal::optional_data_dtor_base.407" = type { i8, %union.anon.408 }
%union.anon.408 = type { i32 }
%"class.absl::optional.409" = type { %"class.absl::optional_internal::optional_data.410" }
%"class.absl::optional_internal::optional_data.410" = type { %"class.absl::optional_internal::optional_data_base.411" }
%"class.absl::optional_internal::optional_data_base.411" = type { %"class.absl::optional_internal::optional_data_dtor_base.412" }
%"class.absl::optional_internal::optional_data_dtor_base.412" = type { i8, %union.anon.413 }
%union.anon.413 = type { i64 }
%"class.std::__1::vector.414" = type { %"class.std::__1::__vector_base.415" }
%"class.std::__1::__vector_base.415" = type { %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"*, %"class.std::__1::__compressed_pair.416" }
%"struct.quic::AckedPacket" = type { %"class.quic::QuicPacketNumber", i16, %"class.quic::QuicTime" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"struct.quic::AckedPacket"* }
%"class.std::__1::vector.421" = type { %"class.std::__1::__vector_base.422" }
%"class.std::__1::__vector_base.422" = type { %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"*, %"class.std::__1::__compressed_pair.423" }
%"struct.quic::LostPacket" = type <{ %"class.quic::QuicPacketNumber", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"struct.quic::LostPacket"* }
%"class.quic::PacingSender" = type <{ %"class.quic::SendAlgorithmInterface"*, %"class.quic::QuicBandwidth", i32, [4 x i8], %"class.quic::QuicTime", i32, i32, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicSustainedBandwidthRecorder" = type { i8, i8, i8, %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth", i64, %"class.quic::QuicTime" }
%"class.quiche::QuicheCircularDeque.428" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" = type { %"struct.std::__1::pair.431"*, i64 }
%"struct.std::__1::pair.431" = type opaque
%"class.std::__1::reverse_iterator" = type { %"struct.absl::container_internal::btree_iterator", %"struct.absl::container_internal::btree_iterator" }
%"struct.absl::container_internal::btree_iterator" = type <{ %"class.absl::container_internal::btree_node.361"*, i32, [4 x i8] }>
%"class.quic::QuicSocketAddress" = type <{ %"class.quic::QuicIpAddress", i16, [2 x i8] }>
%"class.quic::QuicIpAddress" = type { %union.anon.294, i32 }
%union.anon.294 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.295 }
%union.anon.295 = type { [4 x i32] }
%"struct.std::__1::array.296" = type { [16 x i8] }
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.quic::QuicPeerIssuedConnectionIdManager"* }
%"class.quic::QuicPeerIssuedConnectionIdManager" = type { i64, %"class.quic::QuicClock"*, %"class.std::__1::unique_ptr.435", %"class.std::__1::vector.442", %"class.std::__1::vector.442", %"class.std::__1::vector.442", %"class.quic::QuicIntervalSet", i64 }
%"class.std::__1::vector.442" = type { %"class.std::__1::__vector_base.443" }
%"class.std::__1::__vector_base.443" = type { %"struct.quic::QuicConnectionIdData"*, %"struct.quic::QuicConnectionIdData"*, %"class.std::__1::__compressed_pair.444" }
%"struct.quic::QuicConnectionIdData" = type { %"class.quic::QuicConnectionId", i64, %"struct.std::__1::array.296" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"struct.quic::QuicConnectionIdData"* }
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.quic::QuicSelfIssuedConnectionIdManager"* }
%"class.quic::QuicSelfIssuedConnectionIdManager" = type { i32 (...)**, i64, %"class.quic::QuicClock"*, %"class.quic::QuicConnectionIdManagerVisitorInterface"*, %"class.std::__1::vector.455", %"class.std::__1::vector.463", %"class.std::__1::unique_ptr.435", %"class.quic::QuicConnectionId", i64, i64 }
%"class.std::__1::vector.455" = type { %"class.std::__1::__vector_base.456" }
%"class.std::__1::__vector_base.456" = type { %"struct.std::__1::pair.457"*, %"struct.std::__1::pair.457"*, %"class.std::__1::__compressed_pair.458" }
%"struct.std::__1::pair.457" = type opaque
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"struct.std::__1::pair.457"* }
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"struct.std::__1::pair.465"*, %"struct.std::__1::pair.465"*, %"class.std::__1::__compressed_pair.466" }
%"struct.std::__1::pair.465" = type opaque
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.std::__1::pair.465"* }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"struct.std::__1::array.382"* }
%"struct.std::__1::array.382" = type { [8 x i8] }
%"class.quiche::QuicheCircularDeque.480" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" = type { %"struct.std::__1::array.382"*, i64 }
%"class.quiche::QuicheCircularDeque.483" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" = type { %"struct.quic::QuicConnection::PendingPathChallenge"*, i64 }
%"struct.quic::QuicConnection::PendingPathChallenge" = type { %"struct.std::__1::array.382", %"class.quic::QuicSocketAddress" }
%"class.std::__1::vector.486" = type { %"class.std::__1::__vector_base.487" }
%"class.std::__1::__vector_base.487" = type { %"class.quic::QuicConnectionId"*, %"class.quic::QuicConnectionId"*, %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.quic::QuicConnectionId"* }
%"class.quic::QuicConnectionId" = type { %union.anon.278 }
%union.anon.278 = type { %struct.anon.280 }
%struct.anon.280 = type { i8, i8* }
%"class.absl::optional.493" = type { %"class.absl::optional_internal::optional_data.494" }
%"class.absl::optional_internal::optional_data.494" = type { %"class.absl::optional_internal::optional_data_base.495" }
%"class.absl::optional_internal::optional_data_base.495" = type { %"class.absl::optional_internal::optional_data_dtor_base.496" }
%"class.absl::optional_internal::optional_data_dtor_base.496" = type { i8, %union.anon.497 }
%union.anon.497 = type { %"class.quic::QuicConnectionId" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.498" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.quic::QuicCoalescedPacket" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", i16, i16, [4 x %"class.std::__1::basic_string"], [4 x i8], %"class.std::__1::unique_ptr.502" }
%"class.std::__1::unique_ptr.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"struct.quic::SerializedPacket"* }
%"class.quic::QuicConnectionMtuDiscoverer" = type { i16, i16, i16, i16, i64, %"class.quic::QuicPacketNumber" }
%"class.quic::QuicNetworkBlackholeDetector" = type { %"class.quic::QuicNetworkBlackholeDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicArenaScopedPtr" }
%"class.quic::QuicIdleNetworkDetector" = type <{ %"class.quic::QuicIdleNetworkDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicArenaScopedPtr", i8, [7 x i8] }>
%"class.quic::QuicPathValidator" = type { %"class.std::__1::vector.508", %"class.quic::QuicPathValidator::SendDelegate"*, %"class.quic::QuicRandom"*, %"class.std::__1::unique_ptr.512", %"class.std::__1::unique_ptr.518", %"class.quic::QuicArenaScopedPtr", i64 }
%"class.std::__1::vector.508" = type { %"class.std::__1::__vector_base.509" }
%"class.std::__1::__vector_base.509" = type { %"struct.std::__1::array.382"*, %"struct.std::__1::array.382"*, %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"class.std::__1::unique_ptr.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"class.quic::QuicPathValidationContext"* }
%"class.quic::QuicPathValidationContext" = type { i32 (...)**, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.std::__1::unique_ptr.518" = type { %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"class.quic::QuicPathValidator::ResultDelegate"* }
%"class.quic::QuicPathValidator::ResultDelegate" = type { i32 (...)** }
%"struct.quic::QuicConnection::PathState" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.std::__1::array.296", i8, i8, i64, i64, %"class.std::__1::unique_ptr.297", %"class.absl::optional.303" }
%"class.absl::optional.303" = type { %"class.absl::optional_internal::optional_data.304" }
%"class.absl::optional_internal::optional_data.304" = type { %"class.absl::optional_internal::optional_data_base.305" }
%"class.absl::optional_internal::optional_data_base.305" = type { %"class.absl::optional_internal::optional_data_dtor_base.306" }
%"class.absl::optional_internal::optional_data_dtor_base.306" = type { i8, [7 x i8], %union.anon.307 }
%union.anon.307 = type { %"class.quic::RttStats" }
%"class.quic::QuicSession::Visitor" = type { i32 (...)** }
%"class.quic::QuicWriteBlockedList" = type { %"class.http2::PriorityWriteScheduler", [8 x i32], [8 x i64], i8, %"class.quic::QuicWriteBlockedList::StaticStreamCollection" }
%"class.http2::PriorityWriteScheduler" = type <{ %"class.http2::WriteScheduler", i64, [8 x %"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo"], %"class.std::__1::unordered_map", i32, [4 x i8] }>
%"class.http2::WriteScheduler" = type { i32 (...)** }
%"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo" = type { %"class.std::__1::deque.524", i64 }
%"class.std::__1::deque.524" = type { %"class.std::__1::__deque_base.525" }
%"class.std::__1::__deque_base.525" = type { %"struct.std::__1::__split_buffer.526", i64, %"class.std::__1::__compressed_pair.532" }
%"struct.std::__1::__split_buffer.526" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"class.std::__1::__compressed_pair.527" }
%"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo" = type { i8, i32, i8 }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"*** }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.536", %"class.std::__1::__compressed_pair.544", %"class.std::__1::__compressed_pair.549", %"class.std::__1::__compressed_pair.552", [4 x i8] }>
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538", %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { float }
%"class.quic::QuicWriteBlockedList::StaticStreamCollection" = type { i64, %"class.std::__1::vector.555" }
%"class.std::__1::vector.555" = type { %"class.std::__1::__vector_base.556" }
%"class.std::__1::__vector_base.556" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"class.std::__1::__compressed_pair.557" }
%"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair" = type { i32, i8 }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"* }
%"class.std::__1::vector.562" = type { %"class.std::__1::__vector_base.563" }
%"class.std::__1::__vector_base.563" = type { %"class.std::__1::unique_ptr.564"*, %"class.std::__1::unique_ptr.564"*, %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.quic::QuicStream"* }
%"class.quic::QuicStream" = type <{ %"class.quic::QuicStreamSequencer::StreamInterface", %"class.quic::QuicStreamSequencer", i32, [4 x i8], %"class.quic::QuicSession"*, %"class.quic::StreamDelegateInterface"*, %"class.spdy::StreamPrecedence", i64, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.absl::optional.670", %"class.quic::QuicFlowController"*, i8, [7 x i8], i64, i8, [7 x i8], %"class.quic::QuicStreamSendBuffer", i64, i8, [7 x i8], %"class.quic::QuicTime", i8, [3 x i8], i32, %"class.quic::QuicTime", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"class.std::__1::unique_ptr.564"* }
%"class.quic::QuicConfig" = type { i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, %"class.quic::QuicFixedTagVector", %"class.quic::QuicFixedTagVector", %"class.quic::QuicTime::Delta", %"class.absl::optional.582", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint32", i8, i8, [6 x i8], %"class.quic::QuicFixedSocketAddress", %"class.quic::QuicFixedSocketAddress", %"class.absl::optional.587", %"class.quic::QuicFixedStatelessResetToken", %"class.std::__1::vector.575", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.absl::optional.493", %"class.absl::optional.493", %"class.absl::optional.493", %"class.absl::optional.493", %"class.absl::optional.493", %"class.absl::optional.493", %"class.absl::flat_hash_map.593", %"class.absl::flat_hash_map.593" }
%"class.quic::QuicFixedTagVector" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"class.std::__1::vector.575", %"class.std::__1::vector.575" }
%"class.quic::QuicConfigValue.base" = type <{ i32 (...)**, i32, i8 }>
%"class.absl::optional.582" = type { %"class.absl::optional_internal::optional_data.583" }
%"class.absl::optional_internal::optional_data.583" = type { %"class.absl::optional_internal::optional_data_base.584" }
%"class.absl::optional_internal::optional_data_base.584" = type { %"class.absl::optional_internal::optional_data_dtor_base.585" }
%"class.absl::optional_internal::optional_data_dtor_base.585" = type { i8, %union.anon.586 }
%union.anon.586 = type { %"class.quic::QuicTime::Delta" }
%"class.quic::QuicFixedSocketAddress" = type { %"class.quic::QuicConfigValue.base", i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.absl::optional.587" = type { %"class.absl::optional_internal::optional_data.588" }
%"class.absl::optional_internal::optional_data.588" = type { %"class.absl::optional_internal::optional_data_base.589" }
%"class.absl::optional_internal::optional_data_base.589" = type { %"class.absl::optional_internal::optional_data_dtor_base.590" }
%"class.absl::optional_internal::optional_data_dtor_base.590" = type { i8, %union.anon.591 }
%union.anon.591 = type { %"struct.std::__1::pair.592" }
%"struct.std::__1::pair.592" = type { %"class.quic::QuicConnectionId", %"struct.std::__1::array.296" }
%"class.quic::QuicFixedStatelessResetToken" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"struct.std::__1::array.296", %"struct.std::__1::array.296", i8 }
%"class.std::__1::vector.575" = type { %"class.std::__1::__vector_base.576" }
%"class.std::__1::__vector_base.576" = type { i32*, i32*, %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { i32* }
%"class.quic::QuicFixedUint32" = type { %"class.quic::QuicConfigValue.base", i8, i8, i32, i32 }
%"class.quic::QuicFixedUint62" = type { %"class.quic::QuicConfigValue.base", i8, i8, i64, i64 }
%"class.absl::flat_hash_map.593" = type { %"class.absl::container_internal::raw_hash_map.594" }
%"class.absl::container_internal::raw_hash_map.594" = type { %"class.absl::container_internal::raw_hash_set.595" }
%"class.absl::container_internal::raw_hash_set.595" = type { i8*, %"union.absl::container_internal::map_slot_type.596"*, i64, i64, %"class.absl::container_internal::CompressedTuple.597" }
%"union.absl::container_internal::map_slot_type.596" = type opaque
%"class.absl::container_internal::CompressedTuple.597" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.598" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.598" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.270" }
%"class.absl::flat_hash_map.608" = type { %"class.absl::container_internal::raw_hash_map.609" }
%"class.absl::container_internal::raw_hash_map.609" = type { %"class.absl::container_internal::raw_hash_set.610" }
%"class.absl::container_internal::raw_hash_set.610" = type { i8*, %"union.absl::container_internal::map_slot_type.611"*, i64, i64, %"class.absl::container_internal::CompressedTuple.612" }
%"union.absl::container_internal::map_slot_type.611" = type opaque
%"class.absl::container_internal::CompressedTuple.612" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.613" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.613" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.270" }
%"class.absl::flat_hash_map.617" = type { %"class.absl::container_internal::raw_hash_map.618" }
%"class.absl::container_internal::raw_hash_map.618" = type { %"class.absl::container_internal::raw_hash_set.619" }
%"class.absl::container_internal::raw_hash_set.619" = type { i8*, %"union.absl::container_internal::map_slot_type.620"*, i64, i64, %"class.absl::container_internal::CompressedTuple.621" }
%"union.absl::container_internal::map_slot_type.620" = type opaque
%"class.absl::container_internal::CompressedTuple.621" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.622" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.622" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.270" }
%"class.quic::LegacyQuicStreamIdManager" = type { i8, i32, i64, i64, i32, %"class.absl::flat_hash_set", i32, i64, i64 }
%"class.absl::flat_hash_set" = type { %"class.absl::container_internal::raw_hash_set.626" }
%"class.absl::container_internal::raw_hash_set.626" = type { i8*, i32*, i64, i64, %"class.absl::container_internal::CompressedTuple.627" }
%"class.absl::container_internal::CompressedTuple.627" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.628" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.628" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.270" }
%"class.quic::UberQuicStreamIdManager" = type { %"struct.quic::ParsedQuicVersion", %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager" }
%"class.quic::QuicStreamIdManager" = type <{ %"class.quic::QuicStreamIdManager::DelegateInterface"*, i8, i8, [2 x i8], %"struct.quic::ParsedQuicVersion", i32, i32, i32, i32, i32, i32, i32, %"class.absl::flat_hash_set", i32, [4 x i8] }>
%"struct.quic::QuicConnectionCloseFrame" = type { i32, i64, i32, %"class.std::__1::basic_string", i64 }
%"class.quic::QuicFlowController" = type { %"class.quic::QuicFlowControllerInterface", %"class.quic::QuicSession"*, %"class.quic::QuicConnection"*, i32, i8, i8, i64, i64, i64, i64, i64, i64, i64, i8, %"class.quic::QuicFlowControllerInterface"*, i64, %"class.quic::QuicTime" }
%"class.quic::QuicFlowControllerInterface" = type { i32 (...)** }
%"class.quic::QuicControlFrameManager" = type { %"class.quiche::QuicheCircularDeque.630", i32, i32, i32, %"class.quiche::QuicheLinkedHashMap", %"class.quic::QuicControlFrameManager::DelegateInterface"*, %"class.absl::flat_hash_map.646" }
%"class.quiche::QuicheCircularDeque.630" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" = type { %"struct.quic::QuicFrame"*, i64 }
%"class.absl::flat_hash_map.646" = type { %"class.absl::container_internal::raw_hash_map.647" }
%"class.absl::container_internal::raw_hash_map.647" = type { %"class.absl::container_internal::raw_hash_set.648" }
%"class.absl::container_internal::raw_hash_set.648" = type { i8*, %"union.absl::container_internal::map_slot_type.649"*, i64, i64, %"class.absl::container_internal::CompressedTuple.650" }
%"union.absl::container_internal::map_slot_type.649" = type opaque
%"class.absl::container_internal::CompressedTuple.650" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.651" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.651" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.270" }
%"class.quic::QuicDatagramQueue" = type { %"class.quic::QuicSession"*, %"class.quic::QuicClock"*, %"class.quic::QuicTime::Delta", %"class.quiche::QuicheCircularDeque.655", %"class.std::__1::unique_ptr.658" }
%"class.quiche::QuicheCircularDeque.655" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" = type { %"struct.quic::QuicDatagramQueue::Datagram"*, i64 }
%"struct.quic::QuicDatagramQueue::Datagram" = type { %"class.quic::QuicMemSlice", %"class.quic::QuicTime" }
%"class.quic::QuicMemSlice" = type { %"class.quic::QuicMemSliceImpl" }
%"class.quic::QuicMemSliceImpl" = type { %class.scoped_refptr.215, i64 }
%"class.std::__1::unique_ptr.658" = type { %"class.std::__1::__compressed_pair.659" }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.660" }
%"struct.std::__1::__compressed_pair_elem.660" = type { %"class.quic::QuicDatagramQueue::Observer"* }
%"class.quic::QuicDatagramQueue::Observer" = type { i32 (...)** }
%"class.quiche::QuicheLinkedHashMap" = type { %"class.absl::node_hash_map", %"class.std::__1::list.639" }
%"class.absl::node_hash_map" = type { %"class.absl::container_internal::raw_hash_map.631" }
%"class.absl::container_internal::raw_hash_map.631" = type { %"class.absl::container_internal::raw_hash_set.632" }
%"class.absl::container_internal::raw_hash_set.632" = type { i8*, %"struct.std::__1::pair.633"**, i64, i64, %"class.absl::container_internal::CompressedTuple.634" }
%"struct.std::__1::pair.633" = type opaque
%"class.absl::container_internal::CompressedTuple.634" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.635" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.635" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.270" }
%"class.std::__1::list.639" = type { %"class.std::__1::__list_imp.640" }
%"class.std::__1::__list_imp.640" = type { %"struct.std::__1::__list_node_base.641", %"class.std::__1::__compressed_pair.642" }
%"struct.std::__1::__list_node_base.641" = type { %"struct.std::__1::__list_node_base.641"*, %"struct.std::__1::__list_node_base.641"* }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.quic::QuicAlarm"* }
%"class.quic::QuicAlarm" = type { i32 (...)**, %"class.quic::QuicArenaScopedPtr.438", %"class.quic::QuicTime" }
%"class.quic::QuicArenaScopedPtr.438" = type { i8* }
%"class.absl::optional.664" = type { %"class.absl::optional_internal::optional_data.665" }
%"class.absl::optional_internal::optional_data.665" = type { %"class.absl::optional_internal::optional_data_base.666" }
%"class.absl::optional_internal::optional_data_base.666" = type { %"class.absl::optional_internal::optional_data_dtor_base.667" }
%"class.absl::optional_internal::optional_data_dtor_base.667" = type { i8, %union.anon.668 }
%union.anon.668 = type { %"class.std::__1::basic_string" }
%"class.spdy::StreamPrecedence" = type { i8, %union.anon.669 }
%union.anon.669 = type { %"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" }
%"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" = type { i32, i32, i8 }
%"class.absl::optional.670" = type { %"class.absl::optional_internal::optional_data.671" }
%"class.absl::optional_internal::optional_data.671" = type { %"class.absl::optional_internal::optional_data_base.672" }
%"class.absl::optional_internal::optional_data_base.672" = type { %"class.absl::optional_internal::optional_data_dtor_base.673" }
%"class.absl::optional_internal::optional_data_dtor_base.673" = type { i8, %union.anon.674 }
%union.anon.674 = type { %"class.quic::QuicFlowController" }
%"class.quic::QuicStreamSendBuffer" = type <{ i64, %"class.quic::QuicIntervalDeque", i64, %"class.quic::QuicBufferAllocator"*, i64, i64, %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet", i32, [4 x i8] }>
%"class.quic::QuicIntervalDeque" = type { %"class.quiche::QuicheCircularDeque.677", %"class.absl::optional.409" }
%"class.quiche::QuicheCircularDeque.677" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" = type { %"struct.quic::BufferedSlice"*, i64 }
%"struct.quic::BufferedSlice" = type { %"class.quic::QuicMemSlice", i64 }
%"class.quic::QuicBufferAllocator" = type { i32 (...)** }
%"class.quic::QuicTime" = type { i64 }
%"class.quic::QpackDecodedHeadersAccumulator::Visitor" = type { i32 (...)** }
%"class.quic::QuicSpdySession" = type { %"class.quic::QuicSession.base", %"class.quic::QpackEncoder::DecoderStreamErrorDelegate", %"class.quic::QpackDecoder::EncoderStreamErrorDelegate", %"class.std::__1::unique_ptr.680", %"class.std::__1::unique_ptr.753", %"class.quic::QuicHeadersStream"*, %"class.quic::QuicSendControlStream"*, %"class.quic::QuicReceiveControlStream"*, %"class.quic::QpackReceiveStream"*, %"class.quic::QpackReceiveStream"*, %"class.quic::QpackSendStream"*, %"class.quic::QpackSendStream"*, %"struct.quic::SettingsFrame", i64, i64, i64, i64, i32, i32, i64, i8, [7 x i8], %"class.spdy::SpdyFramer", %"class.http2::Http2DecoderAdapter", %"class.std::__1::unique_ptr.867", %"class.absl::optional.409", %"class.quic::Http3DebugVisitor"*, %"class.absl::flat_hash_map.873", i32, %"class.absl::optional.409", %"class.absl::optional.409", i64, i8, i8, %"class.absl::flat_hash_map.882", i8, %"class.absl::flat_hash_set", %"class.std::__1::list.891" }
%"class.quic::QuicSession.base" = type <{ %"class.quic::QuicConnectionVisitorInterface", %"class.quic::SessionNotifierInterface", %"class.quic::QuicStreamFrameDataProducer", %"class.quic::QuicStreamIdManager::DelegateInterface", %"class.quic::HandshakerDelegateInterface", %"class.quic::StreamDelegateInterface", %"class.quic::QuicControlFrameManager::DelegateInterface", %"class.absl::flat_hash_map", %"class.quic::QuicConnection"*, i8, [7 x i8], %"class.quic::QuicSession::Visitor"*, %"class.quic::QuicWriteBlockedList", %"class.std::__1::vector.562", %"class.quic::QuicConfig", %"class.absl::flat_hash_map.608", %"class.absl::flat_hash_map.617", %"class.quic::LegacyQuicStreamIdManager", %"class.quic::UberQuicStreamIdManager", i64, i64, i64, i64, %"struct.quic::QuicConnectionCloseFrame", %"class.quic::QuicFlowController", i32, i8, i8, [2 x i8], %"class.quic::QuicControlFrameManager", i32, [4 x i8], %"class.quic::QuicDatagramQueue", %"class.quiche::QuicheLinkedHashMap", %"class.std::__1::unique_ptr.435", %"class.std::__1::vector.59", %"class.absl::optional.664", i8, i8, i8, i8 }>
%"class.quic::QpackEncoder::DecoderStreamErrorDelegate" = type { i32 (...)** }
%"class.quic::QpackDecoder::EncoderStreamErrorDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.680" = type { %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.quic::QpackEncoder"* }
%"class.quic::QpackEncoder" = type <{ %"class.quic::QpackDecoderStreamReceiver::Delegate", %"class.quic::QpackEncoder::DecoderStreamErrorDelegate"*, %"class.quic::QpackDecoderStreamReceiver", %"class.quic::QpackEncoderStreamSender", %"class.quic::QpackEncoderHeaderTable", i64, %"class.quic::QpackBlockingManager", i32, [4 x i8] }>
%"class.quic::QpackDecoderStreamReceiver::Delegate" = type { i32 (...)** }
%"class.quic::QpackDecoderStreamReceiver" = type <{ %"class.quic::QpackInstructionDecoder::Delegate", %"class.quic::QpackStreamReceiver", %"class.quic::QpackInstructionDecoder", %"class.quic::QpackDecoderStreamReceiver::Delegate"*, i8, [7 x i8] }>
%"class.quic::QpackInstructionDecoder::Delegate" = type { i32 (...)** }
%"class.quic::QpackStreamReceiver" = type { i32 (...)** }
%"class.quic::QpackInstructionDecoder" = type { %"class.std::__1::vector.683"*, %"class.quic::QpackInstructionDecoder::Delegate"*, i8, i64, i64, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i64, %"class.http2::HpackVarintDecoder", %"class.http2::HpackHuffmanDecoder", i8, i32, %"struct.quic::QpackInstruction"*, %"class.std::__1::__wrap_iter.691" }
%"class.std::__1::vector.683" = type opaque
%"class.http2::HpackVarintDecoder" = type <{ i64, i8, [7 x i8] }>
%"class.http2::HpackHuffmanDecoder" = type { %"class.http2::HuffmanBitBuffer" }
%"class.http2::HuffmanBitBuffer" = type { i64, i64 }
%"struct.quic::QpackInstruction" = type { %"struct.quic::QpackInstructionOpcode", %"class.std::__1::vector.684" }
%"struct.quic::QpackInstructionOpcode" = type { i8, i8 }
%"class.std::__1::vector.684" = type { %"class.std::__1::__vector_base.685" }
%"class.std::__1::__vector_base.685" = type { %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"*, %"class.std::__1::__compressed_pair.686" }
%"struct.quic::QpackInstructionField" = type { i32, i8 }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.687" }
%"struct.std::__1::__compressed_pair_elem.687" = type { %"struct.quic::QpackInstructionField"* }
%"class.std::__1::__wrap_iter.691" = type { %"struct.quic::QpackInstructionField"* }
%"class.quic::QpackEncoderStreamSender" = type { %"class.quic::QpackStreamSenderDelegate"*, %"class.quic::QpackInstructionEncoder", %"class.std::__1::basic_string" }
%"class.quic::QpackStreamSenderDelegate" = type { i32 (...)** }
%"class.quic::QpackInstructionEncoder" = type { i8, i64, i8, i32, %"struct.quic::QpackInstruction"*, %"class.std::__1::__wrap_iter.691" }
%"class.quic::QpackEncoderHeaderTable" = type { %"class.quic::QpackHeaderTableBase.base", %"class.absl::flat_hash_map.704"*, %"class.absl::flat_hash_map.719"*, %"class.absl::flat_hash_map.704", %"class.absl::flat_hash_map.719" }
%"class.quic::QpackHeaderTableBase.base" = type <{ i32 (...)**, %"class.std::__1::deque.692", i64, i64, i64, i64, i64, i8 }>
%"class.std::__1::deque.692" = type { %"class.std::__1::__deque_base.693" }
%"class.std::__1::__deque_base.693" = type { %"struct.std::__1::__split_buffer.694", i64, %"class.std::__1::__compressed_pair.700" }
%"struct.std::__1::__split_buffer.694" = type { %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"**, %"class.std::__1::__compressed_pair.695" }
%"class.spdy::HpackEntry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spdy::HpackEntry"** }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.absl::flat_hash_map.704" = type { %"class.absl::container_internal::raw_hash_map.705" }
%"class.absl::container_internal::raw_hash_map.705" = type { %"class.absl::container_internal::raw_hash_set.706" }
%"class.absl::container_internal::raw_hash_set.706" = type { i8*, %"union.absl::container_internal::map_slot_type.707"*, i64, i64, %"class.absl::container_internal::CompressedTuple.708" }
%"union.absl::container_internal::map_slot_type.707" = type opaque
%"class.absl::container_internal::CompressedTuple.708" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.709" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.709" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.270" }
%"class.absl::flat_hash_map.719" = type { %"class.absl::container_internal::raw_hash_map.720" }
%"class.absl::container_internal::raw_hash_map.720" = type { %"class.absl::container_internal::raw_hash_set.721" }
%"class.absl::container_internal::raw_hash_set.721" = type { i8*, %"union.absl::container_internal::map_slot_type.722"*, i64, i64, %"class.absl::container_internal::CompressedTuple.723" }
%"union.absl::container_internal::map_slot_type.722" = type opaque
%"class.absl::container_internal::CompressedTuple.723" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.724" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.724" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.270" }
%"class.quic::QpackBlockingManager" = type { %"class.absl::flat_hash_map.730", %"class.std::__1::map.739", i64 }
%"class.absl::flat_hash_map.730" = type { %"class.absl::container_internal::raw_hash_map.731" }
%"class.absl::container_internal::raw_hash_map.731" = type { %"class.absl::container_internal::raw_hash_set.732" }
%"class.absl::container_internal::raw_hash_set.732" = type { i8*, %"union.absl::container_internal::map_slot_type.733"*, i64, i64, %"class.absl::container_internal::CompressedTuple.734" }
%"union.absl::container_internal::map_slot_type.733" = type opaque
%"class.absl::container_internal::CompressedTuple.734" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.735" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.735" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.270" }
%"class.std::__1::map.739" = type { %"class.std::__1::__tree.740" }
%"class.std::__1::__tree.740" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.741", %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.quic::QpackDecoder"* }
%"class.quic::QpackDecoder" = type { %"class.quic::QpackEncoderStreamReceiver::Delegate", %"class.quic::QpackProgressiveDecoder::BlockedStreamLimitEnforcer", %"class.quic::QpackProgressiveDecoder::DecodingCompletedVisitor", %"class.quic::QpackDecoder::EncoderStreamErrorDelegate"*, %"class.quic::QpackEncoderStreamReceiver", %"class.quic::QpackDecoderStreamSender", %"class.quic::QpackDecoderHeaderTable", %"class.std::__1::set.768", i64, i64 }
%"class.quic::QpackEncoderStreamReceiver::Delegate" = type { i32 (...)** }
%"class.quic::QpackProgressiveDecoder::BlockedStreamLimitEnforcer" = type { i32 (...)** }
%"class.quic::QpackProgressiveDecoder::DecodingCompletedVisitor" = type { i32 (...)** }
%"class.quic::QpackEncoderStreamReceiver" = type <{ %"class.quic::QpackInstructionDecoder::Delegate", %"class.quic::QpackStreamReceiver", %"class.quic::QpackInstructionDecoder", %"class.quic::QpackEncoderStreamReceiver::Delegate"*, i8, [7 x i8] }>
%"class.quic::QpackDecoderStreamSender" = type { %"class.quic::QpackStreamSenderDelegate"*, %"class.quic::QpackInstructionEncoder", %"class.std::__1::basic_string" }
%"class.quic::QpackDecoderHeaderTable" = type { %"class.quic::QpackHeaderTableBase.base.758", %"class.std::__1::vector.759"*, %"class.std::__1::multimap" }
%"class.quic::QpackHeaderTableBase.base.758" = type <{ i32 (...)**, %"class.quiche::QuicheCircularDeque.757", i64, i64, i64, i64, i64, i8 }>
%"class.quiche::QuicheCircularDeque.757" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<spdy::HpackEntry, 3, std::__1::allocator<spdy::HpackEntry> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<spdy::HpackEntry, 3, std::__1::allocator<spdy::HpackEntry> >::AllocatorAndData" = type { %"class.spdy::HpackEntry"*, i64 }
%"class.std::__1::vector.759" = type opaque
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.760" }
%"class.std::__1::__tree.760" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.761", %"class.std::__1::__compressed_pair.765" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::set.768" = type { %"class.std::__1::__tree.769" }
%"class.std::__1::__tree.769" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.770", %"class.std::__1::__compressed_pair.774" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.quic::QuicHeadersStream" = type { %"class.quic::QuicStream.base", %"class.quic::QuicSpdySession"*, %"class.quiche::QuicheCircularDeque.780" }
%"class.quiche::QuicheCircularDeque.780" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicHeadersStream::CompressedHeaderInfo, 3, std::__1::allocator<quic::QuicHeadersStream::CompressedHeaderInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicHeadersStream::CompressedHeaderInfo, 3, std::__1::allocator<quic::QuicHeadersStream::CompressedHeaderInfo> >::AllocatorAndData" = type { %"struct.quic::QuicHeadersStream::CompressedHeaderInfo"*, i64 }
%"struct.quic::QuicHeadersStream::CompressedHeaderInfo" = type { i64, i64, i64, %"class.quic::QuicReferenceCountedPointer" }
%"class.quic::QuicSendControlStream" = type { %"class.quic::QuicStream.base", i8, %"struct.quic::SettingsFrame", %"class.quic::QuicSpdySession"* }
%"class.quic::QuicReceiveControlStream" = type { %"class.quic::QuicStream.base", %"class.quic::HttpDecoder::Visitor", i8, [7 x i8], %"class.quic::HttpDecoder", %"class.quic::QuicSpdySession"* }
%"class.quic::HttpDecoder::Visitor" = type { i32 (...)** }
%"class.quic::QpackReceiveStream" = type { %"class.quic::QuicStream.base", %"class.quic::QpackStreamReceiver"* }
%"class.quic::QpackSendStream" = type <{ %"class.quic::QuicStream.base", [7 x i8], %"class.quic::QpackStreamSenderDelegate", i64, i8, [7 x i8] }>
%"struct.quic::SettingsFrame" = type { %"class.absl::flat_hash_map.785" }
%"class.absl::flat_hash_map.785" = type { %"class.absl::container_internal::raw_hash_map.786" }
%"class.absl::container_internal::raw_hash_map.786" = type { %"class.absl::container_internal::raw_hash_set.787" }
%"class.absl::container_internal::raw_hash_set.787" = type { i8*, %"union.absl::container_internal::map_slot_type.788"*, i64, i64, %"class.absl::container_internal::CompressedTuple.789" }
%"union.absl::container_internal::map_slot_type.788" = type { %"struct.std::__1::pair.998" }
%"struct.std::__1::pair.998" = type { i64, i64 }
%"class.absl::container_internal::CompressedTuple.789" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.790" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.790" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.270" }
%"class.spdy::SpdyFramer" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.800", %"class.spdy::SpdyFramerDebugVisitorInterface"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.800" = type { %"class.std::__1::__compressed_pair.801" }
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.802" }
%"struct.std::__1::__compressed_pair_elem.802" = type { %"class.spdy::HpackEncoder"* }
%"class.spdy::HpackEncoder" = type <{ %"class.spdy::HpackHeaderTable", %"class.spdy::HpackOutputStream", i64, %"class.std::__1::function.803", %"class.std::__1::function.809", i8, i8, [6 x i8] }>
%"class.spdy::HpackHeaderTable" = type { %"class.std::__1::vector.759"*, %"class.std::__1::deque.692", %"class.absl::flat_hash_map.704"*, %"class.absl::flat_hash_map.719"*, %"class.absl::flat_hash_map.704", %"class.absl::flat_hash_map.719", i64, i64, i64, i64 }
%"class.spdy::HpackOutputStream" = type { %"class.std::__1::basic_string", i64 }
%"class.std::__1::function.803" = type { %"class.std::__1::__function::__policy_func.807" }
%"class.std::__1::__function::__policy_func.807" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.808", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.808" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.absl::string_view"*, %"class.absl::string_view"*)* }
%"class.std::__1::function.809" = type { %"class.std::__1::__function::__policy_func.813" }
%"class.std::__1::__function::__policy_func.813" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.814", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.814" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.absl::string_view"*, %"class.absl::string_view"*)* }
%"class.spdy::SpdyFramerDebugVisitorInterface" = type { i32 (...)** }
%"class.http2::Http2DecoderAdapter" = type { %"class.http2::Http2FrameDecoderListener", %"struct.http2::Http2FrameHeader", %"struct.http2::Http2FrameHeader", %"class.absl::optional.409", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.http2::Http2FrameDecoderNoOpListener", %"class.spdy::SpdyFramerVisitorInterface"*, %"class.spdy::SpdyFramerDebugVisitorInterface"*, %"class.spdy::ExtensionVisitorInterface"*, %"class.std::__1::unique_ptr.818", %"class.std::__1::unique_ptr.860", i8, i32, i32, i64, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.http2::Http2FrameDecoderListener" = type { i32 (...)** }
%"struct.http2::Http2FrameHeader" = type { i32, i32, i8, i32 }
%"class.http2::Http2FrameDecoderNoOpListener" = type { %"class.http2::Http2FrameDecoderListener" }
%"class.spdy::SpdyFramerVisitorInterface" = type { i32 (...)** }
%"class.spdy::ExtensionVisitorInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.818" = type { %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"class.spdy::HpackDecoderAdapter"* }
%"class.spdy::HpackDecoderAdapter" = type { %"class.spdy::HpackDecoderAdapter::ListenerAdapter", %"class.http2::HpackDecoder", i64, i64, i8, i32, %"class.std::__1::basic_string" }
%"class.spdy::HpackDecoderAdapter::ListenerAdapter" = type { %"class.http2::HpackDecoderListener", %"class.spdy::Http2HeaderBlock", %"class.spdy::SpdyHeadersHandlerInterface"*, i64, i64 }
%"class.http2::HpackDecoderListener" = type { i32 (...)** }
%"class.spdy::SpdyHeadersHandlerInterface" = type { i32 (...)** }
%"class.http2::HpackDecoder" = type { i32 (...)**, %"class.http2::HpackDecoderState", %"class.http2::HpackWholeEntryBuffer", %"class.http2::HpackBlockDecoder", i32, %"class.std::__1::basic_string" }
%"class.http2::HpackDecoderState" = type { %"class.http2::HpackWholeEntryListener", %"class.http2::HpackDecoderTables", %"class.http2::HpackDecoderListener"*, i32, i32, i8, i8, i8, i32, %"class.std::__1::basic_string" }
%"class.http2::HpackWholeEntryListener" = type { i32 (...)** }
%"class.http2::HpackDecoderTables" = type { %"class.http2::HpackDecoderStaticTable", %"class.http2::HpackDecoderDynamicTable" }
%"class.http2::HpackDecoderStaticTable" = type { %"class.std::__1::vector.853"* }
%"class.std::__1::vector.853" = type opaque
%"class.http2::HpackDecoderDynamicTable" = type { %"class.quiche::QuicheCircularDeque.854", i64, i64, i64 }
%"class.quiche::QuicheCircularDeque.854" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<http2::HpackStringPair, 3, std::__1::allocator<http2::HpackStringPair> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<http2::HpackStringPair, 3, std::__1::allocator<http2::HpackStringPair> >::AllocatorAndData" = type { %"struct.http2::HpackStringPair"*, i64 }
%"struct.http2::HpackStringPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.http2::HpackWholeEntryBuffer" = type <{ %"class.http2::HpackEntryDecoderListener", %"class.http2::HpackWholeEntryListener"*, %"class.http2::HpackDecoderStringBuffer", %"class.http2::HpackDecoderStringBuffer", i64, i64, i32, i8, [3 x i8] }>
%"class.http2::HpackEntryDecoderListener" = type { i32 (...)** }
%"class.http2::HpackDecoderStringBuffer" = type <{ %"class.std::__1::basic_string", %"class.absl::string_view", %"class.http2::HpackHuffmanDecoder", i64, i8, i8, i8, [5 x i8] }>
%"class.http2::HpackBlockDecoder" = type <{ %"class.http2::HpackEntryDecoder", %"class.http2::HpackEntryDecoderListener"*, i8, [7 x i8] }>
%"class.http2::HpackEntryDecoder" = type { %"class.http2::HpackEntryTypeDecoder", %"class.http2::HpackStringDecoder", i32, i32 }
%"class.http2::HpackEntryTypeDecoder" = type { %"class.http2::HpackVarintDecoder", i32, [4 x i8] }
%"class.http2::HpackStringDecoder" = type <{ %"class.http2::HpackVarintDecoder", i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.http2::Http2FrameDecoder"* }
%"class.http2::Http2FrameDecoder" = type { %"class.http2::FrameDecoderState", %union.anon.863, i32, i64, %"class.http2::Http2FrameDecoderNoOpListener" }
%"class.http2::FrameDecoderState" = type { %"class.http2::Http2FrameDecoderListener"*, %"struct.http2::Http2FrameHeader", i32, i32, %"class.http2::Http2StructureDecoder" }
%"class.http2::Http2StructureDecoder" = type <{ i32, [9 x i8], [3 x i8] }>
%union.anon.863 = type { %"class.http2::HeadersPayloadDecoder" }
%"class.http2::HeadersPayloadDecoder" = type { i32, %"struct.http2::Http2PriorityFields" }
%"struct.http2::Http2PriorityFields" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.867" = type { %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"class.quic::QuicSpdySession::SpdyFramerVisitor"* }
%"class.quic::QuicSpdySession::SpdyFramerVisitor" = type opaque
%"class.quic::Http3DebugVisitor" = type { i32 (...)** }
%"class.absl::flat_hash_map.873" = type { %"class.absl::container_internal::raw_hash_map.874" }
%"class.absl::container_internal::raw_hash_map.874" = type { %"class.absl::container_internal::raw_hash_set.875" }
%"class.absl::container_internal::raw_hash_set.875" = type { i8*, %"union.absl::container_internal::map_slot_type.876"*, i64, i64, %"class.absl::container_internal::CompressedTuple.877" }
%"union.absl::container_internal::map_slot_type.876" = type opaque
%"class.absl::container_internal::CompressedTuple.877" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.878" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.878" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.270" }
%"class.absl::flat_hash_map.882" = type { %"class.absl::container_internal::raw_hash_map.883" }
%"class.absl::container_internal::raw_hash_map.883" = type { %"class.absl::container_internal::raw_hash_set.884" }
%"class.absl::container_internal::raw_hash_set.884" = type { i8*, %"union.absl::container_internal::map_slot_type.885"*, i64, i64, %"class.absl::container_internal::CompressedTuple.886" }
%"union.absl::container_internal::map_slot_type.885" = type opaque
%"class.absl::container_internal::CompressedTuple.886" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.887" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.887" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.270" }
%"class.std::__1::list.891" = type { %"class.std::__1::__list_imp.892" }
%"class.std::__1::__list_imp.892" = type { %"struct.std::__1::__list_node_base.893", %"class.std::__1::__compressed_pair.894" }
%"struct.std::__1::__list_node_base.893" = type { %"struct.std::__1::__list_node_base.893"*, %"struct.std::__1::__list_node_base.893"* }
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.quic::QuicSpdyStream::Visitor" = type { i32 (...)** }
%"class.quic::QuicHeaderList" = type { %"class.spdy::SpdyHeadersHandlerInterface", %"class.quiche::QuicheCircularDeque.898", i64, i64, i64, i64 }
%"class.quiche::QuicheCircularDeque.898" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, 3, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, 3, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::AllocatorAndData" = type { %"struct.std::__1::pair.901"*, i64 }
%"struct.std::__1::pair.901" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.902" = type { %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"class.quic::QpackDecodedHeadersAccumulator"* }
%"class.quic::QpackDecodedHeadersAccumulator" = type <{ %"class.quic::QpackProgressiveDecoder::HeadersHandlerInterface", %"class.std::__1::unique_ptr.905", %"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, i64, i64, %"class.quic::QuicHeaderList", i64, i64, i8, i8, i8, [5 x i8] }>
%"class.quic::QpackProgressiveDecoder::HeadersHandlerInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.905" = type { %"class.std::__1::__compressed_pair.906" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"class.quic::QpackProgressiveDecoder"* }
%"class.quic::QpackProgressiveDecoder" = type <{ %"class.quic::QpackInstructionDecoder::Delegate", %"class.quic::QpackDecoderHeaderTable::Observer", i32, [4 x i8], %"class.std::__1::unique_ptr.908", %"class.quic::QpackInstructionDecoder", %"class.quic::QpackProgressiveDecoder::BlockedStreamLimitEnforcer"*, %"class.quic::QpackProgressiveDecoder::DecodingCompletedVisitor"*, %"class.quic::QpackDecoderHeaderTable"*, %"class.quic::QpackProgressiveDecoder::HeadersHandlerInterface"*, i64, i64, i64, i8, i8, [6 x i8], %"class.std::__1::basic_string", i8, i8, i8, [5 x i8] }>
%"class.quic::QpackDecoderHeaderTable::Observer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.908" = type { %"class.std::__1::__compressed_pair.909" }
%"class.std::__1::__compressed_pair.909" = type { %"struct.std::__1::__compressed_pair_elem.910" }
%"struct.std::__1::__compressed_pair_elem.910" = type { %"class.quic::QpackInstructionDecoder"* }
%"class.std::__1::unique_ptr.920" = type { %"class.std::__1::__compressed_pair.921" }
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.922" }
%"struct.std::__1::__compressed_pair_elem.922" = type { %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* }
%"class.quic::QuicSpdyStream::HttpDecoderVisitor" = type opaque
%"class.quic::HttpDecoder" = type <{ %"class.quic::HttpDecoder::Visitor"*, i8, [3 x i8], i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"struct.std::__1::array.799", %"struct.std::__1::array.799", %"struct.std::__1::array.799", i8, i8, [6 x i8] }>
%"struct.std::__1::array.799" = type { [8 x i8] }
%"class.quic::QuicSpdyStreamBodyManager" = type { %"class.quiche::QuicheCircularDeque.926", i64 }
%"class.quiche::QuicheCircularDeque.926" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicSpdyStreamBodyManager::Fragment, 3, std::__1::allocator<quic::QuicSpdyStreamBodyManager::Fragment> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicSpdyStreamBodyManager::Fragment, 3, std::__1::allocator<quic::QuicSpdyStreamBodyManager::Fragment> >::AllocatorAndData" = type { %"struct.quic::QuicSpdyStreamBodyManager::Fragment"*, i64 }
%"struct.quic::QuicSpdyStreamBodyManager::Fragment" = type { %"class.absl::string_view", i64 }
%"class.quic::QuicReferenceCountedPointer" = type { %"class.quic::QuicReferenceCountedPointerImpl" }
%"class.quic::QuicReferenceCountedPointerImpl" = type { %class.scoped_refptr.783 }
%class.scoped_refptr.783 = type { %"class.quic::QuicAckListenerInterface"* }
%"class.quic::QuicAckListenerInterface" = type { %"class.quic::QuicReferenceCounted.base", [4 x i8] }
%"class.quic::QuicReferenceCounted.base" = type { %"class.quic::QuicReferenceCountedImpl.base" }
%"class.quic::QuicReferenceCountedImpl.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.784" }>
%"class.base::RefCountedThreadSafe.784" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.quic::QuicIntervalSet" = type { %"class.absl::btree_set" }
%"class.absl::btree_set" = type { %"class.absl::container_internal::btree_set_container" }
%"class.absl::container_internal::btree_set_container" = type { %"class.absl::container_internal::btree_container" }
%"class.absl::container_internal::btree_container" = type { %"class.absl::container_internal::btree" }
%"class.absl::container_internal::btree" = type { %"class.absl::container_internal::CompressedTuple", %"class.absl::container_internal::btree_node"*, i64 }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.267" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.267" = type { %"class.absl::container_internal::btree_node"* }
%"class.absl::container_internal::btree_node" = type { i8 }
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"class.quic::WebTransportHttp3"* }
%"class.quic::WebTransportHttp3" = type opaque
%"class.std::__1::unique_ptr.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.937" }
%"struct.std::__1::__compressed_pair_elem.937" = type { %"struct.quic::QuicSpdyStream::WebTransportDataStream"* }
%"struct.quic::QuicSpdyStream::WebTransportDataStream" = type { i64, %"class.quic::WebTransportStreamAdapter" }
%"class.quic::WebTransportStreamAdapter" = type <{ %"class.quic::WebTransportStream", %"class.quic::QuicSession"*, %"class.quic::QuicStream"*, %"class.quic::QuicStreamSequencer"*, %"class.std::__1::unique_ptr.938", i8, [7 x i8] }>
%"class.quic::WebTransportStream" = type { i32 (...)** }
%"class.std::__1::unique_ptr.938" = type { %"class.std::__1::__compressed_pair.939" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"class.quic::WebTransportStreamVisitor"* }
%"class.quic::WebTransportStreamVisitor" = type { i32 (...)** }
%"class.quic::QuicSpdyClientSessionBase" = type <{ %"class.quic::QuicSpdySession", %"class.quic::QuicCryptoClientStream::ProofHandler", %"class.quic::QuicClientPushPromiseIndex"*, %"class.absl::flat_hash_map.956", i32, [4 x i8] }>
%"class.quic::QuicCryptoClientStream::ProofHandler" = type { i32 (...)** }
%"class.absl::flat_hash_map.956" = type { %"class.absl::container_internal::raw_hash_map.957" }
%"class.absl::container_internal::raw_hash_map.957" = type { %"class.absl::container_internal::raw_hash_set.958" }
%"class.absl::container_internal::raw_hash_set.958" = type { i8*, %"union.absl::container_internal::map_slot_type.959"*, i64, i64, %"class.absl::container_internal::CompressedTuple.960" }
%"union.absl::container_internal::map_slot_type.959" = type opaque
%"class.absl::container_internal::CompressedTuple.960" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.961" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.961" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.270" }
%"class.spdy::Http2HeaderBlock" = type { %"class.quiche::QuicheLinkedHashMap.821", %"class.spdy::SpdyHeaderStorage", i64, i64 }
%"class.quiche::QuicheLinkedHashMap.821" = type { %"class.absl::node_hash_map.822", %"class.std::__1::list.833" }
%"class.absl::node_hash_map.822" = type { %"class.absl::container_internal::raw_hash_map.823" }
%"class.absl::container_internal::raw_hash_map.823" = type { %"class.absl::container_internal::raw_hash_set.824" }
%"class.absl::container_internal::raw_hash_set.824" = type { i8*, %"struct.std::__1::pair.825"**, i64, i64, %"class.absl::container_internal::CompressedTuple.826" }
%"struct.std::__1::pair.825" = type { %"class.absl::string_view", %"class.std::__1::__list_iterator" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base.835"* }
%"struct.std::__1::__list_node_base.835" = type { %"struct.std::__1::__list_node_base.835"*, %"struct.std::__1::__list_node_base.835"* }
%"class.absl::container_internal::CompressedTuple.826" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.827" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.827" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.270" }
%"class.std::__1::list.833" = type { %"class.std::__1::__list_imp.834" }
%"class.std::__1::__list_imp.834" = type { %"struct.std::__1::__list_node_base.835", %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.spdy::SpdyHeaderStorage" = type { %"class.spdy::SpdySimpleArena" }
%"class.spdy::SpdySimpleArena" = type { i64, %"class.std::__1::vector.840", %"class.spdy::SpdySimpleArena::Status" }
%"class.std::__1::vector.840" = type { %"class.std::__1::__vector_base.841" }
%"class.std::__1::__vector_base.841" = type { %"struct.spdy::SpdySimpleArena::Block"*, %"struct.spdy::SpdySimpleArena::Block"*, %"class.std::__1::__compressed_pair.848" }
%"struct.spdy::SpdySimpleArena::Block" = type { %"class.std::__1::unique_ptr.842", i64, i64 }
%"class.std::__1::unique_ptr.842" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { i8* }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.849" }
%"struct.std::__1::__compressed_pair_elem.849" = type { %"struct.spdy::SpdySimpleArena::Block"* }
%"class.spdy::SpdySimpleArena::Status" = type { i64 }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.net::QuicChromiumClientStream::EarlyHints"*, i64 }
%"struct.net::QuicChromiumClientStream::EarlyHints" = type { %"class.spdy::Http2HeaderBlock", i64 }
%"class.base::WeakPtrFactory.965" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.966" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.977 = type { %"class.net::HttpAuthController"* }
%"struct.net::NetErrorDetails" = type <{ i8, [3 x i8], i32, i32, i8, [3 x i8] }>
%"class.base::WeakPtrFactory.978" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.993" = type { %"class.absl::optional_internal::optional_data.994" }
%"class.absl::optional_internal::optional_data.994" = type { %"class.absl::optional_internal::optional_data_base.995" }
%"class.absl::optional_internal::optional_data_base.995" = type { %"class.absl::optional_internal::optional_data_dtor_base.996" }
%"class.absl::optional_internal::optional_data_dtor_base.996" = type { i8, %union.anon.997 }
%union.anon.997 = type { %"class.std::__1::vector.22" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.987", [4 x i8] }>
%"struct.std::__1::atomic.987" = type { %"struct.std::__1::__atomic_base.988" }
%"struct.std::__1::__atomic_base.988" = type { %"struct.std::__1::__atomic_base.989" }
%"struct.std::__1::__atomic_base.989" = type { %"struct.std::__1::__cxx_atomic_impl.990" }
%"struct.std::__1::__cxx_atomic_impl.990" = type { %"struct.std::__1::__cxx_atomic_base_impl.991" }
%"struct.std::__1::__cxx_atomic_base_impl.991" = type { i32 }

$_ZNSt3__16vectorIN3net17ConnectionAttemptENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueES9_E4typeENS7_IPKS2_EESB_SB_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net13SSLConnectJobEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE3RunEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal9BindStateIMN3net13SSLConnectJobEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__16vectorIN3net17ConnectionAttemptENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@_ZTVN3net13SSLConnectJobE = hidden unnamed_addr constant { [15 x i8*], [6 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::SSLConnectJob"*)* @_ZN3net13SSLConnectJobD2Ev to i8*), i8* bitcast (void (%"class.net::SSLConnectJob"*)* @_ZN3net13SSLConnectJobD0Ev to i8*), i8* bitcast (i32 (%"class.net::SSLConnectJob"*)* @_ZNK3net13SSLConnectJob12GetLoadStateEv to i8*), i8* bitcast (i1 (%"class.net::SSLConnectJob"*)* @_ZNK3net13SSLConnectJob24HasEstablishedConnectionEv to i8*), i8* bitcast (void (%"class.std::__1::vector.149"*, %"class.net::SSLConnectJob"*)* @_ZNK3net13SSLConnectJob21GetConnectionAttemptsEv to i8*), i8* bitcast (void (%"struct.net::ResolveErrorInfo"*, %"class.net::SSLConnectJob"*)* @_ZNK3net13SSLConnectJob19GetResolveErrorInfoEv to i8*), i8* bitcast (i1 (%"class.net::SSLConnectJob"*)* @_ZNK3net13SSLConnectJob10IsSSLErrorEv to i8*), i8* bitcast (%"class.net::SSLCertRequestInfo"* (%"class.net::SSLConnectJob"*)* @_ZN3net13SSLConnectJob18GetCertRequestInfoEv to i8*), i8* bitcast (i32 (%"class.net::SSLConnectJob"*)* @_ZN3net13SSLConnectJob15ConnectInternalEv to i8*), i8* bitcast (void (%"class.net::SSLConnectJob"*, i32)* @_ZN3net13SSLConnectJob22ChangePriorityInternalENS_15RequestPriorityE to i8*), i8* bitcast (void (%"class.net::ConnectJob"*)* @_ZN3net10ConnectJob18OnTimedOutInternalEv to i8*), i8* bitcast (void (%"class.net::SSLConnectJob"*, i32, %"class.net::ConnectJob"*)* @_ZN3net13SSLConnectJob20OnConnectJobCompleteEiPNS_10ConnectJobE to i8*), i8* bitcast (void (%"class.net::SSLConnectJob"*, %"class.net::HttpResponseInfo"*, %"class.net::HttpAuthController"*, %"class.base::OnceCallback"*, %"class.net::ConnectJob"*)* @_ZN3net13SSLConnectJob16OnNeedsProxyAuthERKNS_16HttpResponseInfoEPNS_18HttpAuthControllerEN4base12OnceCallbackIFvvEEEPNS_10ConnectJobE to i8*)], [6 x i8*] [i8* inttoptr (i64 -264 to i8*), i8* null, i8* bitcast (void (%"class.net::SSLConnectJob"*)* @_ZThn264_N3net13SSLConnectJobD1Ev to i8*), i8* bitcast (void (%"class.net::SSLConnectJob"*)* @_ZThn264_N3net13SSLConnectJobD0Ev to i8*), i8* bitcast (void (%"class.net::SSLConnectJob"*, i32, %"class.net::ConnectJob"*)* @_ZThn264_N3net13SSLConnectJob20OnConnectJobCompleteEiPNS_10ConnectJobE to i8*), i8* bitcast (void (%"class.net::SSLConnectJob"*, %"class.net::HttpResponseInfo"*, %"class.net::HttpAuthController"*, %"class.base::OnceCallback"*, %"class.net::ConnectJob"*)* @_ZThn264_N3net13SSLConnectJob16OnNeedsProxyAuthERKNS_16HttpResponseInfoEPNS_18HttpAuthControllerEN4base12OnceCallbackIFvvEEEPNS_10ConnectJobE to i8*)] }, align 8
@_ZN3net8features34kTLSLegacyCryptoFallbackForMetricsE = external global %"struct.base::Feature", align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [22 x i8] c"SSLConnectJob::DoLoop\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"SSLConnectJob::DoSSLConnect\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"Net.SSL_Connection_Latency_2\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"Net.SSLVersion\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"Net.SSLVersionGoogle\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"Net.SSL_CipherSuite\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"Net.SSL_KeyExchange.ECDHE\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"Net.SSLLegacyCryptoFallback\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"Net.SSL_Connection_Error\00", align 1
@_ZZN3net13SSLConnectJob20DoSSLConnectCompleteEiE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net13SSLConnectJob20DoSSLConnectCompleteEiE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net13SSLConnectJob20DoSSLConnectCompleteEiE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net13SSLConnectJob20DoSSLConnectCompleteEiE24atomic_histogram_pointer_2.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN3net15SSLSocketParamsC1E13scoped_refptrINS_21TransportSocketParamsEES1_INS_17SOCKSSocketParamsEES1_INS_21HttpProxySocketParamsEERKNS_12HostPortPairERKNS_9SSLConfigENS_11PrivacyModeENS_19NetworkIsolationKeyE = hidden unnamed_addr alias void (%"class.net::SSLSocketParams"*, %"class.net::TransportSocketParams"*, %"class.net::SOCKSSocketParams"*, %"class.net::HttpProxySocketParams"*, %"class.net::HostPortPair"*, %"struct.net::SSLConfig"*, i32, %"class.net::NetworkIsolationKey"*), void (%"class.net::SSLSocketParams"*, %"class.net::TransportSocketParams"*, %"class.net::SOCKSSocketParams"*, %"class.net::HttpProxySocketParams"*, %"class.net::HostPortPair"*, %"struct.net::SSLConfig"*, i32, %"class.net::NetworkIsolationKey"*)* @_ZN3net15SSLSocketParamsC2E13scoped_refptrINS_21TransportSocketParamsEES1_INS_17SOCKSSocketParamsEES1_INS_21HttpProxySocketParamsEERKNS_12HostPortPairERKNS_9SSLConfigENS_11PrivacyModeENS_19NetworkIsolationKeyE
@_ZN3net15SSLSocketParamsD1Ev = hidden unnamed_addr alias void (%"class.net::SSLSocketParams"*), void (%"class.net::SSLSocketParams"*)* @_ZN3net15SSLSocketParamsD2Ev
@_ZN3net13SSLConnectJobC1ENS_15RequestPriorityERKNS_9SocketTagEPKNS_22CommonConnectJobParamsE13scoped_refptrINS_15SSLSocketParamsEEPNS_10ConnectJob8DelegateEPKNS_16NetLogWithSourceE = hidden unnamed_addr alias void (%"class.net::SSLConnectJob"*, i32, %"class.net::SocketTag"*, %"struct.net::CommonConnectJobParams"*, %"class.net::SSLSocketParams"*, %"class.net::ConnectJob::Delegate"*, %"class.net::NetLogWithSource"*), void (%"class.net::SSLConnectJob"*, i32, %"class.net::SocketTag"*, %"struct.net::CommonConnectJobParams"*, %"class.net::SSLSocketParams"*, %"class.net::ConnectJob::Delegate"*, %"class.net::NetLogWithSource"*)* @_ZN3net13SSLConnectJobC2ENS_15RequestPriorityERKNS_9SocketTagEPKNS_22CommonConnectJobParamsE13scoped_refptrINS_15SSLSocketParamsEEPNS_10ConnectJob8DelegateEPKNS_16NetLogWithSourceE
@_ZN3net13SSLConnectJobD1Ev = hidden unnamed_addr alias void (%"class.net::SSLConnectJob"*), void (%"class.net::SSLConnectJob"*)* @_ZN3net13SSLConnectJobD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15SSLSocketParamsC2E13scoped_refptrINS_21TransportSocketParamsEES1_INS_17SOCKSSocketParamsEES1_INS_21HttpProxySocketParamsEERKNS_12HostPortPairERKNS_9SSLConfigENS_11PrivacyModeENS_19NetworkIsolationKeyE(%"class.net::SSLSocketParams"*, %"class.net::TransportSocketParams"*, %"class.net::SOCKSSocketParams"*, %"class.net::HttpProxySocketParams"*, %"class.net::HostPortPair"* nocapture readonly dereferenceable(32), %"struct.net::SSLConfig"* dereferenceable(320), i32, %"class.net::NetworkIsolationKey"*) unnamed_addr #0 align 2 {
  %9 = ptrtoint %"class.net::TransportSocketParams"* %1 to i64
  %10 = ptrtoint %"class.net::SOCKSSocketParams"* %2 to i64
  %11 = ptrtoint %"class.net::HttpProxySocketParams"* %3 to i64
  %12 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %0, i64 0, i32 1
  %14 = bitcast %class.scoped_refptr* %13 to i64*
  store i64 %9, i64* %14, align 8
  %15 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %0, i64 0, i32 2
  %16 = bitcast %class.scoped_refptr.10* %15 to i64*
  store i64 %10, i64* %16, align 8
  %17 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %0, i64 0, i32 3
  %18 = bitcast %class.scoped_refptr.12* %17 to i64*
  store i64 %11, i64* %18, align 8
  %19 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %0, i64 0, i32 4
  %20 = bitcast %"class.net::HostPortPair"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %8
  %25 = bitcast %"class.net::HostPortPair"* %19 to i8*
  %26 = bitcast %"class.net::HostPortPair"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #11
  br label %33

27:                                               ; preds = %8
  %28 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %19, i64 0, i32 0
  %29 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %28, i8* %30, i64 %32) #11
  br label %33

33:                                               ; preds = %27, %24
  %34 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %0, i64 0, i32 4, i32 1
  %35 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 1
  %36 = load i16, i16* %35, align 8
  store i16 %36, i16* %34, align 8
  %37 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %0, i64 0, i32 5
  tail call void @_ZN3net9SSLConfigC1ERKS0_(%"struct.net::SSLConfig"* %37, %"struct.net::SSLConfig"* dereferenceable(320) %5) #11
  %38 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %0, i64 0, i32 6
  store i32 %6, i32* %38, align 8
  %39 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %0, i64 0, i32 7
  tail call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %39, %"class.net::NetworkIsolationKey"* dereferenceable(184) %7) #11
  ret void
}

declare void @_ZN3net9SSLConfigC1ERKS0_(%"struct.net::SSLConfig"*, %"struct.net::SSLConfig"* dereferenceable(320)) unnamed_addr #1

declare void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"* dereferenceable(184)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15SSLSocketParamsD2Ev(%"class.net::SSLSocketParams"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %0, i64 0, i32 7
  tail call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %2) #11
  %3 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %0, i64 0, i32 5
  tail call void @_ZN3net9SSLConfigD1Ev(%"struct.net::SSLConfig"* %3) #11
  %4 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %0, i64 0, i32 4
  %5 = bitcast %"class.net::HostPortPair"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #12
  br label %12

12:                                               ; preds = %1, %9
  %13 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %0, i64 0, i32 3, i32 0
  %14 = load %"class.net::HttpProxySocketParams"*, %"class.net::HttpProxySocketParams"** %13, align 8
  %15 = icmp eq %"class.net::HttpProxySocketParams"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.net::HttpProxySocketParams", %"class.net::HttpProxySocketParams"* %14, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #11
  %18 = getelementptr inbounds %"class.net::HttpProxySocketParams", %"class.net::HttpProxySocketParams"* %14, i64 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  tail call void @_ZN3net21HttpProxySocketParamsD1Ev(%"class.net::HttpProxySocketParams"* nonnull %14) #11
  %22 = bitcast %"class.net::HttpProxySocketParams"* %14 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %12, %16, %21
  %24 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %0, i64 0, i32 2, i32 0
  %25 = load %"class.net::SOCKSSocketParams"*, %"class.net::SOCKSSocketParams"** %24, align 8
  %26 = icmp eq %"class.net::SOCKSSocketParams"* %25, null
  br i1 %26, label %34, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.net::SOCKSSocketParams", %"class.net::SOCKSSocketParams"* %25, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %28) #11
  %29 = getelementptr inbounds %"class.net::SOCKSSocketParams", %"class.net::SOCKSSocketParams"* %25, i64 0, i32 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %27
  tail call void @_ZN3net17SOCKSSocketParamsD1Ev(%"class.net::SOCKSSocketParams"* nonnull %25) #11
  %33 = bitcast %"class.net::SOCKSSocketParams"* %25 to i8*
  tail call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %23, %27, %32
  %35 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %0, i64 0, i32 1, i32 0
  %36 = load %"class.net::TransportSocketParams"*, %"class.net::TransportSocketParams"** %35, align 8
  %37 = icmp eq %"class.net::TransportSocketParams"* %36, null
  br i1 %37, label %45, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.net::TransportSocketParams", %"class.net::TransportSocketParams"* %36, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #11
  %40 = getelementptr inbounds %"class.net::TransportSocketParams", %"class.net::TransportSocketParams"* %36, i64 0, i32 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %38
  tail call void @_ZN3net21TransportSocketParamsD1Ev(%"class.net::TransportSocketParams"* nonnull %36) #11
  %44 = bitcast %"class.net::TransportSocketParams"* %36 to i8*
  tail call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %34, %38, %43
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net9SSLConfigD1Ev(%"struct.net::SSLConfig"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3net15SSLSocketParams17GetConnectionTypeEv(%"class.net::SSLSocketParams"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.net::TransportSocketParams"*, %"class.net::TransportSocketParams"** %2, align 8
  %4 = icmp eq %"class.net::TransportSocketParams"* %3, null
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %0, i64 0, i32 2, i32 0
  %7 = load %"class.net::SOCKSSocketParams"*, %"class.net::SOCKSSocketParams"** %6, align 8
  %8 = icmp eq %"class.net::SOCKSSocketParams"* %7, null
  %9 = select i1 %8, i32 2, i32 1
  br label %10

10:                                               ; preds = %5, %1
  %11 = phi i32 [ 0, %1 ], [ %9, %5 ]
  ret i32 %11
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %class.scoped_refptr* @_ZNK3net15SSLSocketParams25GetDirectConnectionParamsEv(%"class.net::SSLSocketParams"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %0, i64 0, i32 1
  ret %class.scoped_refptr* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %class.scoped_refptr.10* @_ZNK3net15SSLSocketParams29GetSocksProxyConnectionParamsEv(%"class.net::SSLSocketParams"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %0, i64 0, i32 2
  ret %class.scoped_refptr.10* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %class.scoped_refptr.12* @_ZNK3net15SSLSocketParams28GetHttpProxyConnectionParamsEv(%"class.net::SSLSocketParams"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %0, i64 0, i32 3
  ret %class.scoped_refptr.12* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13SSLConnectJobC2ENS_15RequestPriorityERKNS_9SocketTagEPKNS_22CommonConnectJobParamsE13scoped_refptrINS_15SSLSocketParamsEEPNS_10ConnectJob8DelegateEPKNS_16NetLogWithSourceE(%"class.net::SSLConnectJob"*, i32, %"class.net::SocketTag"* dereferenceable(1), %"struct.net::CommonConnectJobParams"*, %"class.net::SSLSocketParams"*, %"class.net::ConnectJob::Delegate"*, %"class.net::NetLogWithSource"*) unnamed_addr #0 align 2 {
  %8 = ptrtoint %"class.net::SSLSocketParams"* %4 to i64
  %9 = bitcast %"class.net::SSLConnectJob"* %0 to %"class.net::ConnectJob"*
  tail call void @_ZN3net10ConnectJobC2ENS_15RequestPriorityERKNS_9SocketTagEN4base9TimeDeltaEPKNS_22CommonConnectJobParamsEPNS0_8DelegateEPKNS_16NetLogWithSourceENS_16NetLogSourceTypeENS_15NetLogEventTypeE(%"class.net::ConnectJob"* %9, i32 %1, %"class.net::SocketTag"* dereferenceable(1) %2, i64 0, %"struct.net::CommonConnectJobParams"* %3, %"class.net::ConnectJob::Delegate"* %5, %"class.net::NetLogWithSource"* %6, i32 5, i32 85) #11
  %10 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [6 x i8*] }, { [15 x i8*], [6 x i8*] }* @_ZTVN3net13SSLConnectJobE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [6 x i8*] }, { [15 x i8*], [6 x i8*] }* @_ZTVN3net13SSLConnectJobE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %12 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 2
  %13 = bitcast %class.scoped_refptr.14* %12 to i64*
  store i64 %8, i64* %13, align 8
  %14 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 4
  %15 = ptrtoint %"class.net::SSLConnectJob"* %0 to i64
  %16 = tail call i8* @_Znwm(i64 56) #12, !noalias !2
  %17 = bitcast i8* %16 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %17, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13SSLConnectJobEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE3RunEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net13SSLConnectJobEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !2
  %18 = getelementptr inbounds i8, i8* %16, i64 32
  %19 = bitcast i8* %18 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::SSLConnectJob"*, i32)* @_ZN3net13SSLConnectJob12OnIOCompleteEi to i64), i64 0>, <2 x i64>* %19, align 8, !noalias !2
  %20 = getelementptr inbounds i8, i8* %16, i64 48
  %21 = bitcast i8* %20 to i64*
  store i64 %15, i64* %21, align 8, !noalias !2
  %22 = bitcast %"class.base::RepeatingCallback.127"* %14 to i8**
  store i8* %16, i8** %22, align 8, !alias.scope !2
  %23 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 5
  %24 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 9
  %25 = bitcast %"class.std::__1::unique_ptr.128"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 25, i1 false)
  %26 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features34kTLSLegacyCryptoFallbackForMetricsE) #11
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %24, align 1
  %28 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 10, i32 0
  %29 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 12
  %30 = bitcast %"class.net::SSLCertRequestInfo"** %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false)
  tail call void @_ZN3net16ResolveErrorInfoC1Ev(%"struct.net::ResolveErrorInfo"* %29) #11
  %31 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 13
  tail call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* %31) #11
  %32 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 14
  %33 = bitcast %"class.std::__1::vector.22"* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN3net10ConnectJobC2ENS_15RequestPriorityERKNS_9SocketTagEN4base9TimeDeltaEPKNS_22CommonConnectJobParamsEPNS0_8DelegateEPKNS_16NetLogWithSourceENS_16NetLogSourceTypeENS_15NetLogEventTypeE(%"class.net::ConnectJob"*, i32, %"class.net::SocketTag"* dereferenceable(1), i64, %"struct.net::CommonConnectJobParams"*, %"class.net::ConnectJob::Delegate"*, %"class.net::NetLogWithSource"*, i32, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13SSLConnectJob12OnIOCompleteEi(%"class.net::SSLConnectJob"*, i32) #0 align 2 {
  %3 = tail call i32 @_ZN3net13SSLConnectJob6DoLoopEi(%"class.net::SSLConnectJob"* %0, i32 %1)
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %7, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.net::SSLConnectJob"* %0 to %"class.net::ConnectJob"*
  tail call void @_ZN3net10ConnectJob26NotifyDelegateOfCompletionEi(%"class.net::ConnectJob"* %6, i32 %3) #11
  br label %7

7:                                                ; preds = %2, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3net16ResolveErrorInfoC1Ev(%"struct.net::ResolveErrorInfo"*) unnamed_addr #1

declare void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13SSLConnectJobD2Ev(%"class.net::SSLConnectJob"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [6 x i8*] }, { [15 x i8*], [6 x i8*] }* @_ZTVN3net13SSLConnectJobE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [6 x i8*] }, { [15 x i8*], [6 x i8*] }* @_ZTVN3net13SSLConnectJobE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %4, align 8
  store %"class.net::ConnectJob"* null, %"class.net::ConnectJob"** %4, align 8
  %6 = icmp eq %"class.net::ConnectJob"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.net::ConnectJob"* %5 to void (%"class.net::ConnectJob"*)***
  %9 = load void (%"class.net::ConnectJob"*)**, void (%"class.net::ConnectJob"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.net::ConnectJob"*)*, void (%"class.net::ConnectJob"*)** %9, i64 1
  %11 = load void (%"class.net::ConnectJob"*)*, void (%"class.net::ConnectJob"*)** %10, align 8
  tail call void %11(%"class.net::ConnectJob"* nonnull %5) #11
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 14
  %14 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 8
  %16 = icmp eq %"class.std::__1::basic_string"* %15, null
  br i1 %16, label %39, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %19 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 14, i32 0, i32 1
  %20 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %19, align 8
  %21 = icmp eq %"class.std::__1::basic_string"* %20, %15
  br i1 %21, label %37, label %22

22:                                               ; preds = %17, %32
  %23 = phi %"class.std::__1::basic_string"* [ %24, %32 ], [ %20, %17 ]
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 -1
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  tail call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %29, %22
  %33 = icmp eq %"class.std::__1::basic_string"* %24, %15
  br i1 %33, label %34, label %22

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::vector.22"* %13 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %17
  %38 = phi i8* [ %36, %34 ], [ %18, %17 ]
  store %"class.std::__1::basic_string"* %15, %"class.std::__1::basic_string"** %19, align 8
  tail call void @_ZdlPv(i8* %38) #12
  br label %39

39:                                               ; preds = %12, %37
  %40 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 13
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %40) #11
  %41 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 11, i32 0, i32 0
  %42 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %41, align 8
  %43 = icmp eq %"struct.net::ConnectionAttempt"* %42, null
  br i1 %43, label %58, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 11, i32 0, i32 1
  %46 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %45, align 8
  %47 = icmp eq %"struct.net::ConnectionAttempt"* %46, %42
  br i1 %47, label %55, label %48

48:                                               ; preds = %44, %48
  %49 = phi %"struct.net::ConnectionAttempt"* [ %50, %48 ], [ %46, %44 ]
  %50 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %49, i64 -1
  %51 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %50, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %51) #11
  %52 = icmp eq %"struct.net::ConnectionAttempt"* %50, %42
  br i1 %52, label %53, label %48

53:                                               ; preds = %48
  %54 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %41, align 8
  br label %55

55:                                               ; preds = %53, %44
  %56 = phi %"struct.net::ConnectionAttempt"* [ %54, %53 ], [ %42, %44 ]
  store %"struct.net::ConnectionAttempt"* %42, %"struct.net::ConnectionAttempt"** %45, align 8
  %57 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %57) #12
  br label %58

58:                                               ; preds = %39, %55
  %59 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 10, i32 0
  %60 = load %"class.net::SSLCertRequestInfo"*, %"class.net::SSLCertRequestInfo"** %59, align 8
  %61 = icmp eq %"class.net::SSLCertRequestInfo"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.net::SSLCertRequestInfo", %"class.net::SSLCertRequestInfo"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw sub i32* %63, i32 1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  tail call void @_ZN3net18SSLCertRequestInfoD1Ev(%"class.net::SSLCertRequestInfo"* nonnull %60) #11
  %67 = bitcast %"class.net::SSLCertRequestInfo"* %60 to i8*
  tail call void @_ZdlPv(i8* %67) #12
  br label %68

68:                                               ; preds = %58, %62, %66
  %69 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %70 = load %"class.net::SSLClientSocket"*, %"class.net::SSLClientSocket"** %69, align 8
  store %"class.net::SSLClientSocket"* null, %"class.net::SSLClientSocket"** %69, align 8
  %71 = icmp eq %"class.net::SSLClientSocket"* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %68
  %73 = bitcast %"class.net::SSLClientSocket"* %70 to void (%"class.net::SSLClientSocket"*)***
  %74 = load void (%"class.net::SSLClientSocket"*)**, void (%"class.net::SSLClientSocket"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.net::SSLClientSocket"*)*, void (%"class.net::SSLClientSocket"*)** %74, i64 1
  %76 = load void (%"class.net::SSLClientSocket"*)*, void (%"class.net::SSLClientSocket"*)** %75, align 8
  tail call void %76(%"class.net::SSLClientSocket"* nonnull %70) #11
  br label %77

77:                                               ; preds = %68, %72
  %78 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %79 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %78, align 8
  store %"class.net::StreamSocket"* null, %"class.net::StreamSocket"** %78, align 8
  %80 = icmp eq %"class.net::StreamSocket"* %79, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %77
  %82 = bitcast %"class.net::StreamSocket"* %79 to void (%"class.net::StreamSocket"*)***
  %83 = load void (%"class.net::StreamSocket"*)**, void (%"class.net::StreamSocket"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %83, i64 1
  %85 = load void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %84, align 8
  tail call void %85(%"class.net::StreamSocket"* nonnull %79) #11
  br label %86

86:                                               ; preds = %77, %81
  %87 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %4, align 8
  store %"class.net::ConnectJob"* null, %"class.net::ConnectJob"** %4, align 8
  %88 = icmp eq %"class.net::ConnectJob"* %87, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %86
  %90 = bitcast %"class.net::ConnectJob"* %87 to void (%"class.net::ConnectJob"*)***
  %91 = load void (%"class.net::ConnectJob"*)**, void (%"class.net::ConnectJob"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.net::ConnectJob"*)*, void (%"class.net::ConnectJob"*)** %91, i64 1
  %93 = load void (%"class.net::ConnectJob"*)*, void (%"class.net::ConnectJob"*)** %92, align 8
  tail call void %93(%"class.net::ConnectJob"* nonnull %87) #11
  br label %94

94:                                               ; preds = %86, %89
  %95 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %95) #11
  %96 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 2, i32 0
  %97 = load %"class.net::SSLSocketParams"*, %"class.net::SSLSocketParams"** %96, align 8
  %98 = icmp eq %"class.net::SSLSocketParams"* %97, null
  br i1 %98, label %106, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %97, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %100) #11
  %101 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %97, i64 0, i32 0, i32 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %99
  tail call void @_ZN3net15SSLSocketParamsD2Ev(%"class.net::SSLSocketParams"* nonnull %97) #11
  %105 = bitcast %"class.net::SSLSocketParams"* %97 to i8*
  tail call void @_ZdlPv(i8* %105) #12
  br label %106

106:                                              ; preds = %94, %99, %104
  %107 = bitcast %"class.net::SSLConnectJob"* %0 to %"class.net::ConnectJob"*
  tail call void @_ZN3net10ConnectJobD2Ev(%"class.net::ConnectJob"* %107) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net10ConnectJobD2Ev(%"class.net::ConnectJob"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn264_N3net13SSLConnectJobD1Ev(%"class.net::SSLConnectJob"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 -1, i32 0, i32 7, i32 0, i32 6
  %3 = bitcast %"class.base::TimeTicks"* %2 to %"class.net::SSLConnectJob"*
  tail call void @_ZN3net13SSLConnectJobD2Ev(%"class.net::SSLConnectJob"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13SSLConnectJobD0Ev(%"class.net::SSLConnectJob"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net13SSLConnectJobD2Ev(%"class.net::SSLConnectJob"* %0) #11
  %2 = bitcast %"class.net::SSLConnectJob"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn264_N3net13SSLConnectJobD0Ev(%"class.net::SSLConnectJob"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 -1, i32 0, i32 7, i32 0, i32 6
  %3 = bitcast %"class.base::TimeTicks"* %2 to %"class.net::SSLConnectJob"*
  tail call void @_ZN3net13SSLConnectJobD2Ev(%"class.net::SSLConnectJob"* %3) #11
  %4 = bitcast %"class.base::TimeTicks"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net13SSLConnectJob12GetLoadStateEv(%"class.net::SSLConnectJob"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %25 [
    i32 7, label %24
    i32 6, label %24
    i32 5, label %12
    i32 1, label %4
    i32 3, label %4
  ]

4:                                                ; preds = %1, %1
  %5 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %5, align 8
  %7 = bitcast %"class.net::ConnectJob"* %6 to i32 (%"class.net::ConnectJob"*)***
  %8 = load i32 (%"class.net::ConnectJob"*)**, i32 (%"class.net::ConnectJob"*)*** %7, align 8
  %9 = getelementptr inbounds i32 (%"class.net::ConnectJob"*)*, i32 (%"class.net::ConnectJob"*)** %8, i64 2
  %10 = load i32 (%"class.net::ConnectJob"*)*, i32 (%"class.net::ConnectJob"*)** %9, align 8
  %11 = tail call i32 %10(%"class.net::ConnectJob"* %6) #11
  br label %25

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %14 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %13, align 8
  %15 = icmp eq %"class.net::StreamSocket"* %14, null
  br i1 %15, label %16, label %25

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %18 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %17, align 8
  %19 = bitcast %"class.net::ConnectJob"* %18 to i32 (%"class.net::ConnectJob"*)***
  %20 = load i32 (%"class.net::ConnectJob"*)**, i32 (%"class.net::ConnectJob"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.net::ConnectJob"*)*, i32 (%"class.net::ConnectJob"*)** %20, i64 2
  %22 = load i32 (%"class.net::ConnectJob"*)*, i32 (%"class.net::ConnectJob"*)** %21, align 8
  %23 = tail call i32 %22(%"class.net::ConnectJob"* %18) #11
  br label %25

24:                                               ; preds = %1, %1
  br label %25

25:                                               ; preds = %12, %1, %24, %16, %4
  %26 = phi i32 [ 12, %24 ], [ %23, %16 ], [ %11, %4 ], [ 9, %12 ], [ 0, %1 ]
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net13SSLConnectJob24HasEstablishedConnectionEv(%"class.net::SSLConnectJob"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %2, align 8
  %4 = icmp eq %"class.net::ConnectJob"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.net::ConnectJob"* %3 to i1 (%"class.net::ConnectJob"*)***
  %7 = load i1 (%"class.net::ConnectJob"*)**, i1 (%"class.net::ConnectJob"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.net::ConnectJob"*)*, i1 (%"class.net::ConnectJob"*)** %7, i64 3
  %9 = load i1 (%"class.net::ConnectJob"*)*, i1 (%"class.net::ConnectJob"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.net::ConnectJob"* nonnull %3) #11
  br label %19

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %12, align 8
  %14 = icmp eq %"class.net::StreamSocket"* %13, null
  br i1 %14, label %15, label %19

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %17 = load %"class.net::SSLClientSocket"*, %"class.net::SSLClientSocket"** %16, align 8
  %18 = icmp ne %"class.net::SSLClientSocket"* %17, null
  br label %19

19:                                               ; preds = %11, %15, %5
  %20 = phi i1 [ %10, %5 ], [ true, %11 ], [ %18, %15 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13SSLConnectJob20OnConnectJobCompleteEiPNS_10ConnectJobE(%"class.net::SSLConnectJob"*, i32, %"class.net::ConnectJob"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZN3net13SSLConnectJob6DoLoopEi(%"class.net::SSLConnectJob"* %0, i32 %1) #11
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = bitcast %"class.net::SSLConnectJob"* %0 to %"class.net::ConnectJob"*
  tail call void @_ZN3net10ConnectJob26NotifyDelegateOfCompletionEi(%"class.net::ConnectJob"* %7, i32 %4) #11
  br label %8

8:                                                ; preds = %3, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn264_N3net13SSLConnectJob20OnConnectJobCompleteEiPNS_10ConnectJobE(%"class.net::SSLConnectJob"*, i32, %"class.net::ConnectJob"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 -1, i32 0, i32 7, i32 0, i32 6
  %5 = bitcast %"class.base::TimeTicks"* %4 to %"class.net::SSLConnectJob"*
  %6 = tail call i32 @_ZN3net13SSLConnectJob6DoLoopEi(%"class.net::SSLConnectJob"* %5, i32 %1) #11
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.base::TimeTicks"* %4 to %"class.net::ConnectJob"*
  tail call void @_ZN3net10ConnectJob26NotifyDelegateOfCompletionEi(%"class.net::ConnectJob"* %9, i32 %6) #11
  br label %10

10:                                               ; preds = %3, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13SSLConnectJob16OnNeedsProxyAuthERKNS_16HttpResponseInfoEPNS_18HttpAuthControllerEN4base12OnceCallbackIFvvEEEPNS_10ConnectJobE(%"class.net::SSLConnectJob"*, %"class.net::HttpResponseInfo"* dereferenceable(536), %"class.net::HttpAuthController"*, %"class.base::OnceCallback"* nocapture, %"class.net::ConnectJob"* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = bitcast %"class.net::SSLConnectJob"* %0 to %"class.net::ConnectJob"*
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  call void @_ZN3net10ConnectJob25NotifyDelegateOfProxyAuthERKNS_16HttpResponseInfoEPNS_18HttpAuthControllerEN4base12OnceCallbackIFvvEEE(%"class.net::ConnectJob"* %7, %"class.net::HttpResponseInfo"* dereferenceable(536) %1, %"class.net::HttpAuthController"* %2, %"class.base::OnceCallback"* nonnull %6) #11
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #11
  ret void
}

declare void @_ZN3net10ConnectJob25NotifyDelegateOfProxyAuthERKNS_16HttpResponseInfoEPNS_18HttpAuthControllerEN4base12OnceCallbackIFvvEEE(%"class.net::ConnectJob"*, %"class.net::HttpResponseInfo"* dereferenceable(536), %"class.net::HttpAuthController"*, %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn264_N3net13SSLConnectJob16OnNeedsProxyAuthERKNS_16HttpResponseInfoEPNS_18HttpAuthControllerEN4base12OnceCallbackIFvvEEEPNS_10ConnectJobE(%"class.net::SSLConnectJob"*, %"class.net::HttpResponseInfo"* dereferenceable(536), %"class.net::HttpAuthController"*, %"class.base::OnceCallback"* nocapture, %"class.net::ConnectJob"* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 -1, i32 0, i32 7, i32 0, i32 6
  %8 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  %9 = bitcast %"class.base::TimeTicks"* %7 to %"class.net::ConnectJob"*
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  call void @_ZN3net10ConnectJob25NotifyDelegateOfProxyAuthERKNS_16HttpResponseInfoEPNS_18HttpAuthControllerEN4base12OnceCallbackIFvvEEE(%"class.net::ConnectJob"* %9, %"class.net::HttpResponseInfo"* dereferenceable(536) %1, %"class.net::HttpAuthController"* %2, %"class.base::OnceCallback"* nonnull %6) #11
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net13SSLConnectJob21GetConnectionAttemptsEv(%"class.std::__1::vector.149"* noalias sret, %"class.net::SSLConnectJob"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %1, i64 0, i32 11
  %4 = bitcast %"class.std::__1::vector.149"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #11
  %5 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %1, i64 0, i32 11, i32 0, i32 1
  %6 = bitcast %"struct.net::ConnectionAttempt"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.149"* %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 24
  %12 = icmp eq i64 %10, 0
  %13 = inttoptr i64 %9 to %"struct.net::ConnectionAttempt"*
  %14 = inttoptr i64 %7 to %"struct.net::ConnectionAttempt"*
  br i1 %12, label %45, label %15

15:                                               ; preds = %2
  %16 = icmp ugt i64 %11, 768614336404564650
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast %"class.std::__1::vector.149"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %18) #13
  unreachable

19:                                               ; preds = %15
  %20 = tail call i8* @_Znwm(i64 %10) #12
  %21 = bitcast i8* %20 to %"struct.net::ConnectionAttempt"*
  %22 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %0, i64 0, i32 0, i32 1
  %23 = bitcast %"struct.net::ConnectionAttempt"** %22 to i8**
  store i8* %20, i8** %23, align 8
  %24 = bitcast %"class.std::__1::vector.149"* %0 to i8**
  store i8* %20, i8** %24, align 8
  %25 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %21, i64 %11
  %26 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.net::ConnectionAttempt"* %25, %"struct.net::ConnectionAttempt"** %26, align 8
  %27 = bitcast %"struct.net::ConnectionAttempt"** %22 to i64*
  %28 = ptrtoint i8* %20 to i64
  %29 = icmp eq %"struct.net::ConnectionAttempt"* %13, %14
  br i1 %29, label %43, label %30

30:                                               ; preds = %19, %30
  %31 = phi %"struct.net::ConnectionAttempt"* [ %39, %30 ], [ %21, %19 ]
  %32 = phi %"struct.net::ConnectionAttempt"* [ %38, %30 ], [ %13, %19 ]
  %33 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %31, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %32, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %33, %"class.net::IPEndPoint"* dereferenceable(20) %34) #11
  %35 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %31, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %32, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %35, align 4
  %38 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %32, i64 1
  %39 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %31, i64 1
  %40 = icmp eq %"struct.net::ConnectionAttempt"* %38, %14
  br i1 %40, label %41, label %30

41:                                               ; preds = %30
  %42 = ptrtoint %"struct.net::ConnectionAttempt"* %39 to i64
  br label %43

43:                                               ; preds = %41, %19
  %44 = phi i64 [ %28, %19 ], [ %42, %41 ]
  store i64 %44, i64* %27, align 8
  br label %45

45:                                               ; preds = %2, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net13SSLConnectJob19GetResolveErrorInfoEv(%"struct.net::ResolveErrorInfo"* noalias sret, %"class.net::SSLConnectJob"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %1, i64 0, i32 12
  tail call void @_ZN3net16ResolveErrorInfoC1ERKS0_(%"struct.net::ResolveErrorInfo"* %0, %"struct.net::ResolveErrorInfo"* dereferenceable(8) %3) #11
  ret void
}

declare void @_ZN3net16ResolveErrorInfoC1ERKS0_(%"struct.net::ResolveErrorInfo"*, %"struct.net::ResolveErrorInfo"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net13SSLConnectJob10IsSSLErrorEv(%"class.net::SSLConnectJob"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 8, !range !7
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.net::SSLCertRequestInfo"* @_ZN3net13SSLConnectJob18GetCertRequestInfoEv(%"class.net::SSLConnectJob"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 10, i32 0
  %3 = load %"class.net::SSLCertRequestInfo"*, %"class.net::SSLCertRequestInfo"** %2, align 8
  %4 = icmp eq %"class.net::SSLCertRequestInfo"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::SSLCertRequestInfo", %"class.net::SSLCertRequestInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 1 monotonic
  br label %8

8:                                                ; preds = %1, %5
  ret %"class.net::SSLCertRequestInfo"* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN3net13SSLConnectJob26HandshakeTimeoutForTestingEv() local_unnamed_addr #4 align 2 {
  ret i64 30000000
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net13SSLConnectJob6DoLoopEi(%"class.net::SSLConnectJob"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.net::ResolveErrorInfo", align 4
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 193, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8, !prof !8

8:                                                ; preds = %2
  %9 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %10 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %12 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %12, i64* %11, align 8
  %13 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 193, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %9, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i64 [ -6148914691236517206, %2 ], [ %13, %8 ]
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), %8 ]
  %17 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 193, i32 0), %8 ]
  %18 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 3
  %19 = bitcast %"struct.net::ResolveErrorInfo"* %3 to i8*
  %20 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 12
  %22 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 6
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.123"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::unique_ptr.123"* %22 to i64*
  %25 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 2, i32 0
  %26 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 3
  %27 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 4
  %28 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 6
  %29 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 1
  %30 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 12
  %31 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 5
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.128"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.std::__1::unique_ptr.128"* %31 to i64*
  %34 = load i32, i32* %18, align 8
  br label %35

35:                                               ; preds = %95, %14
  %36 = phi i32 [ %34, %14 ], [ %97, %95 ]
  %37 = phi i32 [ %1, %14 ], [ %96, %95 ]
  store i32 8, i32* %18, align 8
  switch i32 %36, label %99 [
    i32 0, label %38
    i32 1, label %61
    i32 2, label %63
    i32 3, label %65
    i32 4, label %84
    i32 5, label %86
    i32 6, label %88
    i32 7, label %90
  ]

38:                                               ; preds = %35
  store i32 1, i32* %18, align 8
  %39 = load %"class.net::SSLSocketParams"*, %"class.net::SSLSocketParams"** %25, align 8
  %40 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %39, i64 0, i32 1, i32 0
  %41 = load %"class.net::TransportSocketParams"*, %"class.net::TransportSocketParams"** %40, align 8
  %42 = icmp eq %"class.net::TransportSocketParams"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.net::TransportSocketParams", %"class.net::TransportSocketParams"* %41, i64 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %44) #11
  br label %45

45:                                               ; preds = %43, %38
  %46 = load i32, i32* %26, align 8
  %47 = load %"struct.net::CommonConnectJobParams"*, %"struct.net::CommonConnectJobParams"** %28, align 8
  %48 = call %"class.net::ConnectJob"* @_ZN3net19TransportConnectJob25CreateTransportConnectJobE13scoped_refptrINS_21TransportSocketParamsEENS_15RequestPriorityERKNS_9SocketTagEPKNS_22CommonConnectJobParamsEPNS_10ConnectJob8DelegateEPKNS_16NetLogWithSourceE(%"class.net::TransportSocketParams"* %41, i32 %46, %"class.net::SocketTag"* dereferenceable(1) %27, %"struct.net::CommonConnectJobParams"* %47, %"class.net::ConnectJob::Delegate"* %29, %"class.net::NetLogWithSource"* %30) #11
  %49 = ptrtoint %"class.net::ConnectJob"* %48 to i64
  %50 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %32, align 8
  store i64 %49, i64* %33, align 8
  %51 = icmp eq %"class.net::ConnectJob"* %50, null
  br i1 %51, label %58, label %52

52:                                               ; preds = %45
  %53 = bitcast %"class.net::ConnectJob"* %50 to void (%"class.net::ConnectJob"*)***
  %54 = load void (%"class.net::ConnectJob"*)**, void (%"class.net::ConnectJob"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.net::ConnectJob"*)*, void (%"class.net::ConnectJob"*)** %54, i64 1
  %56 = load void (%"class.net::ConnectJob"*)*, void (%"class.net::ConnectJob"*)** %55, align 8
  call void %56(%"class.net::ConnectJob"* nonnull %50) #11
  %57 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %32, align 8
  br label %58

58:                                               ; preds = %45, %52
  %59 = phi %"class.net::ConnectJob"* [ %57, %52 ], [ %48, %45 ]
  %60 = call i32 @_ZN3net10ConnectJob7ConnectEv(%"class.net::ConnectJob"* %59) #11
  br label %92

61:                                               ; preds = %35
  %62 = call i32 @_ZN3net13SSLConnectJob26DoTransportConnectCompleteEi(%"class.net::SSLConnectJob"* %0, i32 %37)
  br label %92

63:                                               ; preds = %35
  %64 = call i32 @_ZN3net13SSLConnectJob14DoSOCKSConnectEv(%"class.net::SSLConnectJob"* %0)
  br label %92

65:                                               ; preds = %35
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  %66 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %20, align 8
  %67 = bitcast %"class.net::ConnectJob"* %66 to void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)***
  %68 = load void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)**, void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)*, void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)** %68, i64 5
  %70 = load void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)*, void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)** %69, align 8
  call void %70(%"struct.net::ResolveErrorInfo"* nonnull sret %3, %"class.net::ConnectJob"* %66) #11
  %71 = call dereferenceable(8) %"struct.net::ResolveErrorInfo"* @_ZN3net16ResolveErrorInfoaSEOS0_(%"struct.net::ResolveErrorInfo"* %21, %"struct.net::ResolveErrorInfo"* nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  %72 = icmp eq i32 %37, 0
  br i1 %72, label %73, label %92

73:                                               ; preds = %65
  store i32 6, i32* %18, align 8
  %74 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %20, align 8
  %75 = call %"class.net::StreamSocket"* @_ZN3net10ConnectJob10PassSocketEv(%"class.net::ConnectJob"* %74) #11
  %76 = ptrtoint %"class.net::StreamSocket"* %75 to i64
  %77 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %23, align 8
  store i64 %76, i64* %24, align 8
  %78 = icmp eq %"class.net::StreamSocket"* %77, null
  br i1 %78, label %95, label %79

79:                                               ; preds = %73
  %80 = bitcast %"class.net::StreamSocket"* %77 to void (%"class.net::StreamSocket"*)***
  %81 = load void (%"class.net::StreamSocket"*)**, void (%"class.net::StreamSocket"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %81, i64 1
  %83 = load void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %82, align 8
  call void %83(%"class.net::StreamSocket"* nonnull %77) #11
  br label %95

84:                                               ; preds = %35
  %85 = call i32 @_ZN3net13SSLConnectJob15DoTunnelConnectEv(%"class.net::SSLConnectJob"* %0)
  br label %92

86:                                               ; preds = %35
  %87 = call i32 @_ZN3net13SSLConnectJob23DoTunnelConnectCompleteEi(%"class.net::SSLConnectJob"* %0, i32 %37)
  br label %92

88:                                               ; preds = %35
  %89 = call i32 @_ZN3net13SSLConnectJob12DoSSLConnectEv(%"class.net::SSLConnectJob"* %0)
  br label %92

90:                                               ; preds = %35
  %91 = call i32 @_ZN3net13SSLConnectJob20DoSSLConnectCompleteEi(%"class.net::SSLConnectJob"* %0, i32 %37)
  br label %92

92:                                               ; preds = %65, %90, %88, %86, %84, %63, %61, %58
  %93 = phi i32 [ %91, %90 ], [ %89, %88 ], [ %37, %86 ], [ %85, %84 ], [ %64, %63 ], [ %37, %61 ], [ %60, %58 ], [ %37, %65 ]
  %94 = icmp eq i32 %93, -1
  br i1 %94, label %99, label %95

95:                                               ; preds = %79, %73, %92
  %96 = phi i32 [ 0, %73 ], [ 0, %79 ], [ %93, %92 ]
  %97 = load i32, i32* %18, align 8
  %98 = icmp eq i32 %97, 8
  br i1 %98, label %99, label %35

99:                                               ; preds = %35, %95, %92
  %100 = phi i32 [ %96, %95 ], [ -1, %92 ], [ -2, %35 ]
  %101 = icmp eq i8* %17, null
  br i1 %101, label %106, label %102

102:                                              ; preds = %99
  %103 = load i8, i8* %17, align 1
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %106, label %105

105:                                              ; preds = %102
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %16, i64 %15) #11
  br label %106

106:                                              ; preds = %99, %102, %105
  ret i32 %100
}

declare void @_ZN3net10ConnectJob26NotifyDelegateOfCompletionEi(%"class.net::ConnectJob"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net13SSLConnectJob18DoTransportConnectEv(%"class.net::SSLConnectJob"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 3
  store i32 1, i32* %2, align 8
  %3 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.net::SSLSocketParams"*, %"class.net::SSLSocketParams"** %3, align 8
  %5 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %4, i64 0, i32 1, i32 0
  %6 = load %"class.net::TransportSocketParams"*, %"class.net::TransportSocketParams"** %5, align 8
  %7 = icmp eq %"class.net::TransportSocketParams"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.net::TransportSocketParams", %"class.net::TransportSocketParams"* %6, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %9) #11
  br label %10

10:                                               ; preds = %1, %8
  %11 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 4
  %14 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 6
  %15 = load %"struct.net::CommonConnectJobParams"*, %"struct.net::CommonConnectJobParams"** %14, align 8
  %16 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 12
  %18 = tail call %"class.net::ConnectJob"* @_ZN3net19TransportConnectJob25CreateTransportConnectJobE13scoped_refptrINS_21TransportSocketParamsEENS_15RequestPriorityERKNS_9SocketTagEPKNS_22CommonConnectJobParamsEPNS_10ConnectJob8DelegateEPKNS_16NetLogWithSourceE(%"class.net::TransportSocketParams"* %6, i32 %12, %"class.net::SocketTag"* dereferenceable(1) %13, %"struct.net::CommonConnectJobParams"* %15, %"class.net::ConnectJob::Delegate"* %16, %"class.net::NetLogWithSource"* %17) #11
  %19 = ptrtoint %"class.net::ConnectJob"* %18 to i64
  %20 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 5
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.128"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %21, align 8
  %23 = bitcast %"class.std::__1::unique_ptr.128"* %20 to i64*
  store i64 %19, i64* %23, align 8
  %24 = icmp eq %"class.net::ConnectJob"* %22, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %10
  %26 = bitcast %"class.net::ConnectJob"* %22 to void (%"class.net::ConnectJob"*)***
  %27 = load void (%"class.net::ConnectJob"*)**, void (%"class.net::ConnectJob"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.net::ConnectJob"*)*, void (%"class.net::ConnectJob"*)** %27, i64 1
  %29 = load void (%"class.net::ConnectJob"*)*, void (%"class.net::ConnectJob"*)** %28, align 8
  tail call void %29(%"class.net::ConnectJob"* nonnull %22) #11
  %30 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %21, align 8
  br label %31

31:                                               ; preds = %25, %10
  %32 = phi %"class.net::ConnectJob"* [ %30, %25 ], [ %18, %10 ]
  %33 = tail call i32 @_ZN3net10ConnectJob7ConnectEv(%"class.net::ConnectJob"* %32) #11
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net13SSLConnectJob26DoTransportConnectCompleteEi(%"class.net::SSLConnectJob"*, i32 returned) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.net::ResolveErrorInfo", align 4
  %4 = alloca %"class.std::__1::vector.149", align 8
  %5 = bitcast %"struct.net::ResolveErrorInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %7 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %6, align 8
  %8 = bitcast %"class.net::ConnectJob"* %7 to void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)***
  %9 = load void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)**, void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)*, void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)** %9, i64 5
  %11 = load void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)*, void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)** %10, align 8
  call void %11(%"struct.net::ResolveErrorInfo"* nonnull sret %3, %"class.net::ConnectJob"* %7) #11
  %12 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 12
  %13 = call dereferenceable(8) %"struct.net::ResolveErrorInfo"* @_ZN3net16ResolveErrorInfoaSEOS0_(%"struct.net::ResolveErrorInfo"* %12, %"struct.net::ResolveErrorInfo"* nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %14 = bitcast %"class.std::__1::vector.149"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %4, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %4, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::vector.149"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  %18 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %6, align 8
  %19 = bitcast %"class.net::ConnectJob"* %18 to void (%"class.std::__1::vector.149"*, %"class.net::ConnectJob"*)***
  %20 = load void (%"class.std::__1::vector.149"*, %"class.net::ConnectJob"*)**, void (%"class.std::__1::vector.149"*, %"class.net::ConnectJob"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.std::__1::vector.149"*, %"class.net::ConnectJob"*)*, void (%"class.std::__1::vector.149"*, %"class.net::ConnectJob"*)** %20, i64 4
  %22 = load void (%"class.std::__1::vector.149"*, %"class.net::ConnectJob"*)*, void (%"class.std::__1::vector.149"*, %"class.net::ConnectJob"*)** %21, align 8
  call void %22(%"class.std::__1::vector.149"* nonnull sret %4, %"class.net::ConnectJob"* %18) #11
  %23 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 11
  %24 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 11, i32 0, i32 1
  %25 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %24, align 8
  %26 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %15, align 8
  %27 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %16, align 8
  %28 = call %"struct.net::ConnectionAttempt"* @_ZNSt3__16vectorIN3net17ConnectionAttemptENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueES9_E4typeENS7_IPKS2_EESB_SB_(%"class.std::__1::vector.149"* %23, %"struct.net::ConnectionAttempt"* %25, %"struct.net::ConnectionAttempt"* %26, %"struct.net::ConnectionAttempt"* %27)
  %29 = icmp eq i32 %1, 0
  br i1 %29, label %30, label %68

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 3
  store i32 6, i32* %31, align 8
  %32 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %6, align 8
  %33 = call %"class.net::StreamSocket"* @_ZN3net10ConnectJob10PassSocketEv(%"class.net::ConnectJob"* %32) #11
  %34 = ptrtoint %"class.net::StreamSocket"* %33 to i64
  %35 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 6
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.123"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %36, align 8
  %38 = bitcast %"class.std::__1::unique_ptr.123"* %35 to i64*
  store i64 %34, i64* %38, align 8
  %39 = icmp eq %"class.net::StreamSocket"* %37, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %30
  %41 = bitcast %"class.net::StreamSocket"* %37 to void (%"class.net::StreamSocket"*)***
  %42 = load void (%"class.net::StreamSocket"*)**, void (%"class.net::StreamSocket"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %42, i64 1
  %44 = load void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %43, align 8
  call void %44(%"class.net::StreamSocket"* nonnull %37) #11
  %45 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %36, align 8
  br label %46

46:                                               ; preds = %40, %30
  %47 = phi %"class.net::StreamSocket"* [ %45, %40 ], [ %33, %30 ]
  %48 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 13
  %49 = bitcast %"class.net::StreamSocket"* %47 to i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)***
  %50 = load i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)**, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*** %49, align 8
  %51 = getelementptr inbounds i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)** %50, i64 16
  %52 = load i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)** %51, align 8
  %53 = call i32 %52(%"class.net::StreamSocket"* %47, %"class.net::IPEndPoint"* %48) #11
  %54 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %36, align 8
  %55 = getelementptr inbounds %"class.net::StreamSocket", %"class.net::StreamSocket"* %54, i64 0, i32 0
  %56 = bitcast %"class.net::StreamSocket"* %54 to %"class.std::__1::vector.22"* (%"class.net::Socket"*)***
  %57 = load %"class.std::__1::vector.22"* (%"class.net::Socket"*)**, %"class.std::__1::vector.22"* (%"class.net::Socket"*)*** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::vector.22"* (%"class.net::Socket"*)*, %"class.std::__1::vector.22"* (%"class.net::Socket"*)** %57, i64 9
  %59 = load %"class.std::__1::vector.22"* (%"class.net::Socket"*)*, %"class.std::__1::vector.22"* (%"class.net::Socket"*)** %58, align 8
  %60 = call dereferenceable(24) %"class.std::__1::vector.22"* %59(%"class.net::Socket"* %55) #11
  %61 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 14
  %62 = icmp eq %"class.std::__1::vector.22"* %61, %60
  br i1 %62, label %68, label %63

63:                                               ; preds = %46
  %64 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %60, i64 0, i32 0, i32 0
  %65 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %64, align 8
  %66 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %60, i64 0, i32 0, i32 1
  %67 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %66, align 8
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.22"* %61, %"class.std::__1::basic_string"* %65, %"class.std::__1::basic_string"* %67) #11
  br label %68

68:                                               ; preds = %63, %46, %2
  %69 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %15, align 8
  %70 = icmp eq %"struct.net::ConnectionAttempt"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %68
  %72 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %16, align 8
  %73 = icmp eq %"struct.net::ConnectionAttempt"* %72, %69
  br i1 %73, label %81, label %74

74:                                               ; preds = %71, %74
  %75 = phi %"struct.net::ConnectionAttempt"* [ %76, %74 ], [ %72, %71 ]
  %76 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %75, i64 -1
  %77 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %76, i64 0, i32 0
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %77) #11
  %78 = icmp eq %"struct.net::ConnectionAttempt"* %76, %69
  br i1 %78, label %79, label %74

79:                                               ; preds = %74
  %80 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %15, align 8
  br label %81

81:                                               ; preds = %79, %71
  %82 = phi %"struct.net::ConnectionAttempt"* [ %80, %79 ], [ %69, %71 ]
  store %"struct.net::ConnectionAttempt"* %69, %"struct.net::ConnectionAttempt"** %16, align 8
  %83 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %68, %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net13SSLConnectJob14DoSOCKSConnectEv(%"class.net::SSLConnectJob"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 3
  store i32 3, i32* %2, align 8
  %3 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 4
  %6 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 6
  %7 = load %"struct.net::CommonConnectJobParams"*, %"struct.net::CommonConnectJobParams"** %6, align 8
  %8 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 2, i32 0
  %9 = load %"class.net::SSLSocketParams"*, %"class.net::SSLSocketParams"** %8, align 8
  %10 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 12
  %11 = tail call i8* @_Znwm(i64 320) #12
  %12 = bitcast i8* %11 to %"class.net::SOCKSConnectJob"*
  %13 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %9, i64 0, i32 2, i32 0
  %14 = load %"class.net::SOCKSSocketParams"*, %"class.net::SOCKSSocketParams"** %13, align 8
  %15 = icmp eq %"class.net::SOCKSSocketParams"* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.net::SOCKSSocketParams", %"class.net::SOCKSSocketParams"* %14, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %17) #11
  br label %18

18:                                               ; preds = %1, %16
  %19 = icmp eq %"class.net::SSLConnectJob"* %0, null
  %20 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 1
  %21 = select i1 %19, %"class.net::ConnectJob::Delegate"* null, %"class.net::ConnectJob::Delegate"* %20
  tail call void @_ZN3net15SOCKSConnectJobC1ENS_15RequestPriorityERKNS_9SocketTagEPKNS_22CommonConnectJobParamsE13scoped_refptrINS_17SOCKSSocketParamsEEPNS_10ConnectJob8DelegateEPKNS_16NetLogWithSourceE(%"class.net::SOCKSConnectJob"* nonnull %12, i32 %4, %"class.net::SocketTag"* dereferenceable(1) %5, %"struct.net::CommonConnectJobParams"* %7, %"class.net::SOCKSSocketParams"* %14, %"class.net::ConnectJob::Delegate"* %21, %"class.net::NetLogWithSource"* %10) #11
  %22 = ptrtoint i8* %11 to i64
  %23 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 5
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.128"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %24, align 8
  %26 = bitcast %"class.std::__1::unique_ptr.128"* %23 to i64*
  store i64 %22, i64* %26, align 8
  %27 = icmp eq %"class.net::ConnectJob"* %25, null
  %28 = bitcast i8* %11 to %"class.net::ConnectJob"*
  br i1 %27, label %35, label %29

29:                                               ; preds = %18
  %30 = bitcast %"class.net::ConnectJob"* %25 to void (%"class.net::ConnectJob"*)***
  %31 = load void (%"class.net::ConnectJob"*)**, void (%"class.net::ConnectJob"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.net::ConnectJob"*)*, void (%"class.net::ConnectJob"*)** %31, i64 1
  %33 = load void (%"class.net::ConnectJob"*)*, void (%"class.net::ConnectJob"*)** %32, align 8
  tail call void %33(%"class.net::ConnectJob"* nonnull %25) #11
  %34 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %24, align 8
  br label %35

35:                                               ; preds = %29, %18
  %36 = phi %"class.net::ConnectJob"* [ %34, %29 ], [ %28, %18 ]
  %37 = tail call i32 @_ZN3net10ConnectJob7ConnectEv(%"class.net::ConnectJob"* %36) #11
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net13SSLConnectJob22DoSOCKSConnectCompleteEi(%"class.net::SSLConnectJob"*, i32 returned) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.net::ResolveErrorInfo", align 4
  %4 = bitcast %"struct.net::ResolveErrorInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %5, align 8
  %7 = bitcast %"class.net::ConnectJob"* %6 to void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)***
  %8 = load void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)**, void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)*, void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)** %8, i64 5
  %10 = load void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)*, void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)** %9, align 8
  call void %10(%"struct.net::ResolveErrorInfo"* nonnull sret %3, %"class.net::ConnectJob"* %6) #11
  %11 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 12
  %12 = call dereferenceable(8) %"struct.net::ResolveErrorInfo"* @_ZN3net16ResolveErrorInfoaSEOS0_(%"struct.net::ResolveErrorInfo"* %11, %"struct.net::ResolveErrorInfo"* nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  %13 = icmp eq i32 %1, 0
  br i1 %13, label %14, label %29

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 3
  store i32 6, i32* %15, align 8
  %16 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %5, align 8
  %17 = call %"class.net::StreamSocket"* @_ZN3net10ConnectJob10PassSocketEv(%"class.net::ConnectJob"* %16) #11
  %18 = ptrtoint %"class.net::StreamSocket"* %17 to i64
  %19 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 6
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.123"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %20, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.123"* %19 to i64*
  store i64 %18, i64* %22, align 8
  %23 = icmp eq %"class.net::StreamSocket"* %21, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %14
  %25 = bitcast %"class.net::StreamSocket"* %21 to void (%"class.net::StreamSocket"*)***
  %26 = load void (%"class.net::StreamSocket"*)**, void (%"class.net::StreamSocket"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %26, i64 1
  %28 = load void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %27, align 8
  call void %28(%"class.net::StreamSocket"* nonnull %21) #11
  br label %29

29:                                               ; preds = %14, %24, %2
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net13SSLConnectJob15DoTunnelConnectEv(%"class.net::SSLConnectJob"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 3
  store i32 5, i32* %2, align 8
  %3 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.net::SSLSocketParams"*, %"class.net::SSLSocketParams"** %3, align 8
  %5 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %4, i64 0, i32 3, i32 0
  %6 = load %"class.net::HttpProxySocketParams"*, %"class.net::HttpProxySocketParams"** %5, align 8
  %7 = icmp eq %"class.net::HttpProxySocketParams"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.net::HttpProxySocketParams", %"class.net::HttpProxySocketParams"* %6, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %9) #11
  %10 = load %"class.net::SSLSocketParams"*, %"class.net::SSLSocketParams"** %3, align 8
  br label %11

11:                                               ; preds = %1, %8
  %12 = phi %"class.net::SSLSocketParams"* [ %4, %1 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 4
  %16 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 6
  %17 = load %"struct.net::CommonConnectJobParams"*, %"struct.net::CommonConnectJobParams"** %16, align 8
  %18 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 12
  %19 = tail call i8* @_Znwm(i64 400) #12
  %20 = bitcast i8* %19 to %"class.net::HttpProxyConnectJob"*
  %21 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %12, i64 0, i32 3, i32 0
  %22 = load %"class.net::HttpProxySocketParams"*, %"class.net::HttpProxySocketParams"** %21, align 8
  %23 = icmp eq %"class.net::HttpProxySocketParams"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %11
  %25 = getelementptr inbounds %"class.net::HttpProxySocketParams", %"class.net::HttpProxySocketParams"* %22, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %25) #11
  br label %26

26:                                               ; preds = %11, %24
  %27 = icmp eq %"class.net::SSLConnectJob"* %0, null
  %28 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 1
  %29 = select i1 %27, %"class.net::ConnectJob::Delegate"* null, %"class.net::ConnectJob::Delegate"* %28
  tail call void @_ZN3net19HttpProxyConnectJobC1ENS_15RequestPriorityERKNS_9SocketTagEPKNS_22CommonConnectJobParamsE13scoped_refptrINS_21HttpProxySocketParamsEEPNS_10ConnectJob8DelegateEPKNS_16NetLogWithSourceE(%"class.net::HttpProxyConnectJob"* nonnull %20, i32 %14, %"class.net::SocketTag"* dereferenceable(1) %15, %"struct.net::CommonConnectJobParams"* %17, %"class.net::HttpProxySocketParams"* %22, %"class.net::ConnectJob::Delegate"* %29, %"class.net::NetLogWithSource"* %18) #11
  %30 = ptrtoint i8* %19 to i64
  %31 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 5
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.128"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %32, align 8
  %34 = bitcast %"class.std::__1::unique_ptr.128"* %31 to i64*
  store i64 %30, i64* %34, align 8
  %35 = icmp eq %"class.net::ConnectJob"* %33, null
  %36 = bitcast i8* %19 to %"class.net::ConnectJob"*
  br i1 %35, label %43, label %37

37:                                               ; preds = %26
  %38 = bitcast %"class.net::ConnectJob"* %33 to void (%"class.net::ConnectJob"*)***
  %39 = load void (%"class.net::ConnectJob"*)**, void (%"class.net::ConnectJob"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.net::ConnectJob"*)*, void (%"class.net::ConnectJob"*)** %39, i64 1
  %41 = load void (%"class.net::ConnectJob"*)*, void (%"class.net::ConnectJob"*)** %40, align 8
  tail call void %41(%"class.net::ConnectJob"* nonnull %33) #11
  %42 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %32, align 8
  br label %43

43:                                               ; preds = %37, %26
  %44 = phi %"class.net::ConnectJob"* [ %42, %37 ], [ %36, %26 ]
  %45 = tail call i32 @_ZN3net10ConnectJob7ConnectEv(%"class.net::ConnectJob"* %44) #11
  br i1 %7, label %53, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.net::HttpProxySocketParams", %"class.net::HttpProxySocketParams"* %6, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %47) #11
  %48 = getelementptr inbounds %"class.net::HttpProxySocketParams", %"class.net::HttpProxySocketParams"* %6, i64 0, i32 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %46
  tail call void @_ZN3net21HttpProxySocketParamsD1Ev(%"class.net::HttpProxySocketParams"* nonnull %6) #11
  %52 = bitcast %"class.net::HttpProxySocketParams"* %6 to i8*
  tail call void @_ZdlPv(i8* %52) #12
  br label %53

53:                                               ; preds = %43, %46, %51
  ret i32 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net13SSLConnectJob23DoTunnelConnectCompleteEi(%"class.net::SSLConnectJob"*, i32 returned) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.net::ResolveErrorInfo", align 4
  %4 = bitcast %"struct.net::ResolveErrorInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %5, align 8
  %7 = bitcast %"class.net::ConnectJob"* %6 to void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)***
  %8 = load void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)**, void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)*, void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)** %8, i64 5
  %10 = load void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)*, void (%"struct.net::ResolveErrorInfo"*, %"class.net::ConnectJob"*)** %9, align 8
  call void %10(%"struct.net::ResolveErrorInfo"* nonnull sret %3, %"class.net::ConnectJob"* %6) #11
  %11 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 12
  %12 = call dereferenceable(8) %"struct.net::ResolveErrorInfo"* @_ZN3net16ResolveErrorInfoaSEOS0_(%"struct.net::ResolveErrorInfo"* %11, %"struct.net::ResolveErrorInfo"* nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  %13 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %5, align 8
  %14 = call %"class.net::StreamSocket"* @_ZN3net10ConnectJob10PassSocketEv(%"class.net::ConnectJob"* %13) #11
  %15 = ptrtoint %"class.net::StreamSocket"* %14 to i64
  %16 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 6
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.123"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %17, align 8
  %19 = bitcast %"class.std::__1::unique_ptr.123"* %16 to i64*
  store i64 %15, i64* %19, align 8
  %20 = icmp eq %"class.net::StreamSocket"* %18, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.net::StreamSocket"* %18 to void (%"class.net::StreamSocket"*)***
  %23 = load void (%"class.net::StreamSocket"*)**, void (%"class.net::StreamSocket"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %23, i64 1
  %25 = load void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %24, align 8
  call void %25(%"class.net::StreamSocket"* nonnull %18) #11
  br label %26

26:                                               ; preds = %21, %2
  %27 = icmp slt i32 %1, 0
  br i1 %27, label %28, label %49

28:                                               ; preds = %26
  %29 = icmp eq i32 %1, -110
  br i1 %29, label %30, label %51

30:                                               ; preds = %28
  %31 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %5, align 8
  %32 = bitcast %"class.net::ConnectJob"* %31 to %"class.net::SSLCertRequestInfo"* (%"class.net::ConnectJob"*)***
  %33 = load %"class.net::SSLCertRequestInfo"* (%"class.net::ConnectJob"*)**, %"class.net::SSLCertRequestInfo"* (%"class.net::ConnectJob"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.net::SSLCertRequestInfo"* (%"class.net::ConnectJob"*)*, %"class.net::SSLCertRequestInfo"* (%"class.net::ConnectJob"*)** %33, i64 7
  %35 = load %"class.net::SSLCertRequestInfo"* (%"class.net::ConnectJob"*)*, %"class.net::SSLCertRequestInfo"* (%"class.net::ConnectJob"*)** %34, align 8
  %36 = call %"class.net::SSLCertRequestInfo"* %35(%"class.net::ConnectJob"* %31) #11
  %37 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 10
  %38 = ptrtoint %"class.net::SSLCertRequestInfo"* %36 to i64
  %39 = bitcast %class.scoped_refptr.140* %37 to i64*
  %40 = getelementptr inbounds %class.scoped_refptr.140, %class.scoped_refptr.140* %37, i64 0, i32 0
  %41 = load %"class.net::SSLCertRequestInfo"*, %"class.net::SSLCertRequestInfo"** %40, align 8
  store i64 %38, i64* %39, align 8
  %42 = icmp eq %"class.net::SSLCertRequestInfo"* %41, null
  br i1 %42, label %51, label %43

43:                                               ; preds = %30
  %44 = getelementptr inbounds %"class.net::SSLCertRequestInfo", %"class.net::SSLCertRequestInfo"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %51

47:                                               ; preds = %43
  call void @_ZN3net18SSLCertRequestInfoD1Ev(%"class.net::SSLCertRequestInfo"* nonnull %41) #11
  %48 = bitcast %"class.net::SSLCertRequestInfo"* %41 to i8*
  call void @_ZdlPv(i8* %48) #12
  br label %51

49:                                               ; preds = %26
  %50 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 3
  store i32 6, i32* %50, align 8
  br label %51

51:                                               ; preds = %47, %43, %30, %28, %49
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net13SSLConnectJob12DoSSLConnectEv(%"class.net::SSLConnectJob"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"struct.net::SSLConfig", align 8
  %4 = alloca %"class.base::OnceCallback.210", align 8
  %5 = alloca %"class.base::RepeatingCallback.127", align 8
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 193, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9, !prof !8

9:                                                ; preds = %1
  %10 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %11 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %13 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %13, i64* %12, align 8
  %14 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 193, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %10, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  br label %15

15:                                               ; preds = %1, %9
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), %9 ]
  %17 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 193, i32 0), %9 ]
  %18 = phi i64 [ -6148914691236517206, %1 ], [ %14, %9 ]
  %19 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 3
  store i32 7, i32* %19, align 8
  %20 = bitcast %"class.net::SSLConnectJob"* %0 to %"class.net::ConnectJob"*
  call void @_ZN3net10ConnectJob10ResetTimerEN4base9TimeDeltaE(%"class.net::ConnectJob"* %20, i64 30000000) #11
  %21 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %22 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %21, align 8
  %23 = getelementptr inbounds %"class.net::ConnectJob", %"class.net::ConnectJob"* %22, i64 0, i32 1, i32 2, i32 0, i32 0
  %24 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %25 = load i64, i64* %23, align 8
  store i64 %25, i64* %24, align 8
  %26 = getelementptr inbounds %"class.net::ConnectJob", %"class.net::ConnectJob"* %22, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = load i64, i64* %26, align 8
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds %"class.net::ConnectJob", %"class.net::ConnectJob"* %22, i64 0, i32 1, i32 1, i32 0, i32 0
  %30 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %31 = load i64, i64* %29, align 8
  store i64 %31, i64* %30, align 8
  %32 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 8
  store i8 1, i8* %32, align 8
  %33 = call i64 @_ZN4base9TimeTicks3NowEv() #11
  %34 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 1, i32 4, i32 0, i32 0
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"struct.net::SSLConfig", %"struct.net::SSLConfig"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 320, i8* nonnull %35) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 320, i1 false)
  %36 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 2, i32 0
  %37 = load %"class.net::SSLSocketParams"*, %"class.net::SSLSocketParams"** %36, align 8
  %38 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %37, i64 0, i32 5
  call void @_ZN3net9SSLConfigC1ERKS0_(%"struct.net::SSLConfig"* nonnull %3, %"struct.net::SSLConfig"* dereferenceable(320) %38) #11
  %39 = load %"class.net::SSLSocketParams"*, %"class.net::SSLSocketParams"** %36, align 8
  %40 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %39, i64 0, i32 7
  %41 = getelementptr inbounds %"struct.net::SSLConfig", %"struct.net::SSLConfig"* %3, i64 0, i32 15
  %42 = call dereferenceable(184) %"class.net::NetworkIsolationKey"* @_ZN3net19NetworkIsolationKeyaSERKS0_(%"class.net::NetworkIsolationKey"* %41, %"class.net::NetworkIsolationKey"* dereferenceable(184) %40) #11
  %43 = load %"class.net::SSLSocketParams"*, %"class.net::SSLSocketParams"** %36, align 8
  %44 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %43, i64 0, i32 6
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %"struct.net::SSLConfig", %"struct.net::SSLConfig"* %3, i64 0, i32 16
  store i32 %45, i32* %46, align 8
  %47 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 9
  %48 = load i8, i8* %47, align 1, !range !7
  %49 = getelementptr inbounds %"struct.net::SSLConfig", %"struct.net::SSLConfig"* %3, i64 0, i32 4
  store i8 %48, i8* %49, align 2
  %50 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 6
  %51 = load %"struct.net::CommonConnectJobParams"*, %"struct.net::CommonConnectJobParams"** %50, align 8
  %52 = getelementptr inbounds %"struct.net::CommonConnectJobParams", %"struct.net::CommonConnectJobParams"* %51, i64 0, i32 0
  %53 = load %"class.net::ClientSocketFactory"*, %"class.net::ClientSocketFactory"** %52, align 8
  %54 = getelementptr inbounds %"struct.net::CommonConnectJobParams", %"struct.net::CommonConnectJobParams"* %51, i64 0, i32 9
  %55 = load %"class.net::SSLClientContext"*, %"class.net::SSLClientContext"** %54, align 8
  %56 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %57 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %56, align 8
  store %"class.net::StreamSocket"* null, %"class.net::StreamSocket"** %56, align 8
  %58 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %43, i64 0, i32 4
  %59 = bitcast %"class.net::ClientSocketFactory"* %53 to %"class.net::SSLClientSocket"* (%"class.net::ClientSocketFactory"*, %"class.net::SSLClientContext"*, %"class.net::StreamSocket"*, %"class.net::HostPortPair"*, %"struct.net::SSLConfig"*)***
  %60 = load %"class.net::SSLClientSocket"* (%"class.net::ClientSocketFactory"*, %"class.net::SSLClientContext"*, %"class.net::StreamSocket"*, %"class.net::HostPortPair"*, %"struct.net::SSLConfig"*)**, %"class.net::SSLClientSocket"* (%"class.net::ClientSocketFactory"*, %"class.net::SSLClientContext"*, %"class.net::StreamSocket"*, %"class.net::HostPortPair"*, %"struct.net::SSLConfig"*)*** %59, align 8
  %61 = getelementptr inbounds %"class.net::SSLClientSocket"* (%"class.net::ClientSocketFactory"*, %"class.net::SSLClientContext"*, %"class.net::StreamSocket"*, %"class.net::HostPortPair"*, %"struct.net::SSLConfig"*)*, %"class.net::SSLClientSocket"* (%"class.net::ClientSocketFactory"*, %"class.net::SSLClientContext"*, %"class.net::StreamSocket"*, %"class.net::HostPortPair"*, %"struct.net::SSLConfig"*)** %60, i64 4
  %62 = load %"class.net::SSLClientSocket"* (%"class.net::ClientSocketFactory"*, %"class.net::SSLClientContext"*, %"class.net::StreamSocket"*, %"class.net::HostPortPair"*, %"struct.net::SSLConfig"*)*, %"class.net::SSLClientSocket"* (%"class.net::ClientSocketFactory"*, %"class.net::SSLClientContext"*, %"class.net::StreamSocket"*, %"class.net::HostPortPair"*, %"struct.net::SSLConfig"*)** %61, align 8
  %63 = call %"class.net::SSLClientSocket"* %62(%"class.net::ClientSocketFactory"* %53, %"class.net::SSLClientContext"* %55, %"class.net::StreamSocket"* %57, %"class.net::HostPortPair"* dereferenceable(32) %58, %"struct.net::SSLConfig"* nonnull dereferenceable(320) %3) #11
  %64 = ptrtoint %"class.net::SSLClientSocket"* %63 to i64
  %65 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 7
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.134"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.net::SSLClientSocket"*, %"class.net::SSLClientSocket"** %66, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.134"* %65 to i64*
  store i64 %64, i64* %68, align 8
  %69 = icmp eq %"class.net::SSLClientSocket"* %67, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %15
  %71 = bitcast %"class.net::SSLClientSocket"* %67 to void (%"class.net::SSLClientSocket"*)***
  %72 = load void (%"class.net::SSLClientSocket"*)**, void (%"class.net::SSLClientSocket"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.net::SSLClientSocket"*)*, void (%"class.net::SSLClientSocket"*)** %72, i64 1
  %74 = load void (%"class.net::SSLClientSocket"*)*, void (%"class.net::SSLClientSocket"*)** %73, align 8
  call void %74(%"class.net::SSLClientSocket"* nonnull %67) #11
  br label %75

75:                                               ; preds = %70, %15
  %76 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %21, align 8
  store %"class.net::ConnectJob"* null, %"class.net::ConnectJob"** %21, align 8
  %77 = icmp eq %"class.net::ConnectJob"* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.net::ConnectJob"* %76 to void (%"class.net::ConnectJob"*)***
  %80 = load void (%"class.net::ConnectJob"*)**, void (%"class.net::ConnectJob"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.net::ConnectJob"*)*, void (%"class.net::ConnectJob"*)** %80, i64 1
  %82 = load void (%"class.net::ConnectJob"*)*, void (%"class.net::ConnectJob"*)** %81, align 8
  call void %82(%"class.net::ConnectJob"* nonnull %76) #11
  br label %83

83:                                               ; preds = %75, %78
  %84 = load %"class.net::SSLClientSocket"*, %"class.net::SSLClientSocket"** %66, align 8
  %85 = getelementptr inbounds %"class.net::SSLClientSocket", %"class.net::SSLClientSocket"* %84, i64 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.base::RepeatingCallback.127", %"class.base::RepeatingCallback.127"* %5, i64 0, i32 0
  %87 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 4, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %86, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %87) #11
  %88 = getelementptr inbounds %"class.base::OnceCallback.210", %"class.base::OnceCallback.210"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %88, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %86) #11
  %89 = bitcast %"class.net::SSLClientSocket"* %84 to i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback.210"*)***
  %90 = load i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback.210"*)**, i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback.210"*)*** %89, align 8
  %91 = getelementptr inbounds i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback.210"*)*, i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback.210"*)** %90, i64 11
  %92 = load i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback.210"*)*, i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback.210"*)** %91, align 8
  %93 = call i32 %92(%"class.net::StreamSocket"* %85, %"class.base::OnceCallback.210"* nonnull %4) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %88) #11
  %94 = getelementptr inbounds %"class.base::RepeatingCallback.127", %"class.base::RepeatingCallback.127"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %94) #11
  call void @_ZN3net9SSLConfigD1Ev(%"struct.net::SSLConfig"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 320, i8* nonnull %35) #11
  %95 = icmp eq i8* %17, null
  br i1 %95, label %100, label %96

96:                                               ; preds = %83
  %97 = load i8, i8* %17, align 1
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %100, label %99

99:                                               ; preds = %96
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %16, i64 %18) #11
  br label %100

100:                                              ; preds = %83, %96, %99
  ret i32 %93
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net13SSLConnectJob20DoSSLConnectCompleteEi(%"class.net::SSLConnectJob"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.net::ConnectionAttempt", align 4
  %4 = alloca %"class.net::IPEndPoint", align 2
  %5 = alloca %"class.net::IPEndPoint", align 2
  %6 = alloca %"class.base::TimeDelta", align 8
  %7 = alloca %"class.net::SSLInfo", align 8
  %8 = alloca %"class.absl::optional.993", align 8
  %9 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  %10 = bitcast %"class.net::SSLConnectJob"* %0 to %"class.net::ConnectJob"*
  %11 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 1, i32 5, i32 0, i32 0
  store i64 %9, i64* %11, align 8
  %12 = icmp eq i32 %1, 0
  br i1 %12, label %39, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 13
  %15 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %39, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %4, %"class.net::IPEndPoint"* dereferenceable(20) %14) #11
  %20 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %3, i64 0, i32 0
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %20, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %4) #11
  %21 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %3, i64 0, i32 1
  store i32 %1, i32* %21, align 4
  %22 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 11, i32 0, i32 1
  %23 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %22, align 8
  %24 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %25 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %24, align 8
  %26 = icmp ult %"struct.net::ConnectionAttempt"* %23, %25
  br i1 %26, label %27, label %34

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %23, i64 0, i32 0
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %28, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %20) #11
  %29 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %23, i64 0, i32 1
  %30 = load i32, i32* %21, align 4
  store i32 %30, i32* %29, align 4
  %31 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %23, i64 1
  %32 = ptrtoint %"struct.net::ConnectionAttempt"* %31 to i64
  %33 = bitcast %"struct.net::ConnectionAttempt"** %22 to i64*
  store i64 %32, i64* %33, align 8
  br label %36

34:                                               ; preds = %18
  %35 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 11
  call void @_ZNSt3__16vectorIN3net17ConnectionAttemptENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.149"* %35, %"struct.net::ConnectionAttempt"* nonnull dereferenceable(24) %3) #11
  br label %36

36:                                               ; preds = %27, %34
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %20) #11
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  %37 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %37) #11
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %5) #11
  %38 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* nonnull align 2 %37, i64 20, i1 false)
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %37) #11
  br label %39

39:                                               ; preds = %2, %36, %13
  %40 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 9
  %41 = load i8, i8* %40, align 1, !range !7
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %58, label %43

43:                                               ; preds = %39
  switch i32 %1, label %58 [
    i32 -100, label %44
    i32 -101, label %44
    i32 -107, label %44
    i32 -113, label %44
  ]

44:                                               ; preds = %43, %43, %43, %43
  call void @_ZN3net13SSLConnectJob20ResetStateForRestartEv(%"class.net::SSLConnectJob"* %0)
  store i8 0, i8* %40, align 1
  %45 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 2, i32 0
  %46 = load %"class.net::SSLSocketParams"*, %"class.net::SSLSocketParams"** %45, align 8
  %47 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %46, i64 0, i32 1, i32 0
  %48 = load %"class.net::TransportSocketParams"*, %"class.net::TransportSocketParams"** %47, align 8
  %49 = icmp eq %"class.net::TransportSocketParams"* %48, null
  br i1 %49, label %50, label %55

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %46, i64 0, i32 2, i32 0
  %52 = load %"class.net::SOCKSSocketParams"*, %"class.net::SOCKSSocketParams"** %51, align 8
  %53 = icmp eq %"class.net::SOCKSSocketParams"* %52, null
  %54 = select i1 %53, i32 4, i32 2
  br label %55

55:                                               ; preds = %50, %44
  %56 = phi i32 [ 0, %44 ], [ %54, %50 ]
  %57 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 3
  store i32 %56, i32* %57, align 8
  br label %280

58:                                               ; preds = %43, %39
  %59 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 2, i32 0
  %60 = load %"class.net::SSLSocketParams"*, %"class.net::SSLSocketParams"** %59, align 8
  %61 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %60, i64 0, i32 4, i32 0
  br i1 %12, label %62, label %201

62:                                               ; preds = %58
  %63 = bitcast %"class.base::TimeDelta"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #11
  %64 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %6, i64 0, i32 0
  %65 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 0, i32 1, i32 4, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = load i64, i64* %11, align 8
  %68 = sub nsw i64 %67, %66
  store i64 %68, i64* %64, align 8
  %69 = load atomic i64, i64* @_ZZN3net13SSLConnectJob20DoSSLConnectCompleteEiE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %70 = inttoptr i64 %69 to %"class.base::HistogramBase"*
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %62
  %73 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i64 1000, i64 60000000, i32 100, i32 1) #11
  %74 = ptrtoint %"class.base::HistogramBase"* %73 to i64
  store atomic i64 %74, i64* @_ZZN3net13SSLConnectJob20DoSSLConnectCompleteEiE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %75

75:                                               ; preds = %62, %72
  %76 = phi %"class.base::HistogramBase"* [ %70, %62 ], [ %73, %72 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %76, %"class.base::TimeDelta"* nonnull dereferenceable(8) %6) #11
  %77 = bitcast %"class.net::SSLInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %77) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 128, i1 false)
  call void @_ZN3net7SSLInfoC1Ev(%"class.net::SSLInfo"* nonnull %7) #11
  %78 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %79 = load %"class.net::SSLClientSocket"*, %"class.net::SSLClientSocket"** %78, align 8
  %80 = getelementptr inbounds %"class.net::SSLClientSocket", %"class.net::SSLClientSocket"* %79, i64 0, i32 0, i32 0
  %81 = bitcast %"class.net::SSLClientSocket"* %79 to i1 (%"class.net::StreamSocket"*, %"class.net::SSLInfo"*)***
  %82 = load i1 (%"class.net::StreamSocket"*, %"class.net::SSLInfo"*)**, i1 (%"class.net::StreamSocket"*, %"class.net::SSLInfo"*)*** %81, align 8
  %83 = getelementptr inbounds i1 (%"class.net::StreamSocket"*, %"class.net::SSLInfo"*)*, i1 (%"class.net::StreamSocket"*, %"class.net::SSLInfo"*)** %82, i64 23
  %84 = load i1 (%"class.net::StreamSocket"*, %"class.net::SSLInfo"*)*, i1 (%"class.net::StreamSocket"*, %"class.net::SSLInfo"*)** %83, align 8
  %85 = call zeroext i1 %84(%"class.net::StreamSocket"* %80, %"class.net::SSLInfo"* nonnull %7) #11
  %86 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %7, i64 0, i32 5
  %87 = load i32, i32* %86, align 8
  %88 = lshr i32 %87, 20
  %89 = and i32 %88, 7
  %90 = load atomic i64, i64* @_ZZN3net13SSLConnectJob20DoSSLConnectCompleteEiE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %91 = inttoptr i64 %90 to %"class.base::HistogramBase"*
  %92 = icmp eq i64 %90, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %75
  %94 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 8, i32 9, i32 1) #11
  %95 = ptrtoint %"class.base::HistogramBase"* %94 to i64
  store atomic i64 %95, i64* @_ZZN3net13SSLConnectJob20DoSSLConnectCompleteEiE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %96

96:                                               ; preds = %75, %93
  %97 = phi %"class.base::HistogramBase"* [ %91, %75 ], [ %94, %93 ]
  %98 = bitcast %"class.base::HistogramBase"* %97 to void (%"class.base::HistogramBase"*, i32)***
  %99 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %99, i64 6
  %101 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %100, align 8
  call void %101(%"class.base::HistogramBase"* %97, i32 %89) #11
  %102 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %109 = select i1 %105, i8* %107, i8* %108
  %110 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %60, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %111 = load i64, i64* %110, align 8
  %112 = zext i8 %104 to i64
  %113 = select i1 %105, i64 %111, i64 %112
  %114 = call zeroext i1 @_ZN3net12IsGoogleHostEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %109, i64 %113) #11
  br i1 %114, label %115, label %128

115:                                              ; preds = %96
  %116 = load atomic i64, i64* @_ZZN3net13SSLConnectJob20DoSSLConnectCompleteEiE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %117 = inttoptr i64 %116 to %"class.base::HistogramBase"*
  %118 = icmp eq i64 %116, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %115
  %120 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i32 1, i32 8, i32 9, i32 1) #11
  %121 = ptrtoint %"class.base::HistogramBase"* %120 to i64
  store atomic i64 %121, i64* @_ZZN3net13SSLConnectJob20DoSSLConnectCompleteEiE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %122

122:                                              ; preds = %115, %119
  %123 = phi %"class.base::HistogramBase"* [ %117, %115 ], [ %120, %119 ]
  %124 = bitcast %"class.base::HistogramBase"* %123 to void (%"class.base::HistogramBase"*, i32)***
  %125 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %125, i64 6
  %127 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %126, align 8
  call void %127(%"class.base::HistogramBase"* %123, i32 %89) #11
  br label %128

128:                                              ; preds = %122, %96
  %129 = load i32, i32* %86, align 8
  %130 = trunc i32 %129 to i16
  %131 = and i32 %129, 65535
  call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0), i32 %131) #11
  %132 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %7, i64 0, i32 3
  %133 = load i16, i16* %132, align 4
  %134 = icmp eq i16 %133, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %128
  %136 = zext i16 %133 to i32
  call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i32 %136) #11
  br label %137

137:                                              ; preds = %128, %135
  %138 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features34kTLSLegacyCryptoFallbackForMetricsE) #11
  br i1 %138, label %139, label %200

139:                                              ; preds = %137
  %140 = load i8, i8* %40, align 1, !range !7
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %142, label %186

142:                                              ; preds = %139
  %143 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %7, i64 0, i32 1, i32 0
  %144 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %143, align 8
  %145 = icmp eq %"class.net::X509Certificate"* %144, null
  br i1 %145, label %171, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %144, i64 0, i32 6, i32 0, i32 0, i32 0
  %148 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %147, align 8
  %149 = call zeroext i1 @_ZN3net9x509_util16HasSHA1SignatureEPK16crypto_buffer_st(%struct.crypto_buffer_st* %148) #11
  br i1 %149, label %171, label %150

150:                                              ; preds = %146
  %151 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %143, align 8
  %152 = icmp eq %"class.net::X509Certificate"* %151, null
  br i1 %152, label %171, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %151, i64 0, i32 7, i32 0, i32 0
  %155 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %154, align 8
  %156 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %151, i64 0, i32 7, i32 0, i32 1
  %157 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %156, align 8
  %158 = icmp eq %"class.std::__1::unique_ptr"* %155, %157
  br i1 %158, label %171, label %159

159:                                              ; preds = %153, %159
  %160 = phi i8 [ %165, %159 ], [ 0, %153 ]
  %161 = phi %"class.std::__1::unique_ptr"* [ %166, %159 ], [ %155, %153 ]
  %162 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %161, i64 0, i32 0, i32 0, i32 0
  %163 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %162, align 8
  %164 = call zeroext i1 @_ZN3net9x509_util16HasSHA1SignatureEPK16crypto_buffer_st(%struct.crypto_buffer_st* %163) #11
  %165 = select i1 %164, i8 1, i8 %160
  %166 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %161, i64 1
  %167 = icmp eq %"class.std::__1::unique_ptr"* %166, %157
  %168 = or i1 %164, %167
  br i1 %168, label %169, label %159

169:                                              ; preds = %159
  %170 = and i8 %165, 1
  br label %171

171:                                              ; preds = %169, %153, %150, %142, %146
  %172 = phi i8 [ 1, %146 ], [ 0, %150 ], [ 0, %142 ], [ 0, %153 ], [ %170, %169 ]
  %173 = icmp eq i16 %130, 10
  br i1 %173, label %174, label %177

174:                                              ; preds = %171
  %175 = icmp eq i8 %172, 0
  %176 = select i1 %175, i32 1, i32 4
  br label %186

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.net::SSLInfo", %"class.net::SSLInfo"* %7, i64 0, i32 4
  %179 = load i16, i16* %178, align 2
  %180 = icmp eq i16 %179, 513
  %181 = icmp ne i8 %172, 0
  br i1 %180, label %182, label %184

182:                                              ; preds = %177
  %183 = select i1 %181, i32 5, i32 2
  br label %186

184:                                              ; preds = %177
  %185 = select i1 %181, i32 3, i32 6
  br label %186

186:                                              ; preds = %174, %184, %182, %139
  %187 = phi i32 [ 0, %139 ], [ %176, %174 ], [ %183, %182 ], [ %185, %184 ]
  %188 = load atomic i64, i64* @_ZZN3net13SSLConnectJob20DoSSLConnectCompleteEiE24atomic_histogram_pointer_2.0.0.0.0.0 acquire, align 8
  %189 = inttoptr i64 %188 to %"class.base::HistogramBase"*
  %190 = icmp eq i64 %188, 0
  br i1 %190, label %191, label %194

191:                                              ; preds = %186
  %192 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i32 1, i32 7, i32 8, i32 1) #11
  %193 = ptrtoint %"class.base::HistogramBase"* %192 to i64
  store atomic i64 %193, i64* @_ZZN3net13SSLConnectJob20DoSSLConnectCompleteEiE24atomic_histogram_pointer_2.0.0.0.0.0 release, align 8
  br label %194

194:                                              ; preds = %186, %191
  %195 = phi %"class.base::HistogramBase"* [ %189, %186 ], [ %192, %191 ]
  %196 = bitcast %"class.base::HistogramBase"* %195 to void (%"class.base::HistogramBase"*, i32)***
  %197 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %196, align 8
  %198 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %197, i64 6
  %199 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %198, align 8
  call void %199(%"class.base::HistogramBase"* %195, i32 %187) #11
  br label %200

200:                                              ; preds = %194, %137
  call void @_ZN3net7SSLInfoD1Ev(%"class.net::SSLInfo"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %77) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #11
  call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0), i32 0) #11
  br label %206

201:                                              ; preds = %58
  %202 = icmp slt i32 %1, 0
  %203 = sub nsw i32 0, %1
  %204 = select i1 %202, i32 %203, i32 %1
  call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0), i32 %204) #11
  %205 = call zeroext i1 @_ZN3net18IsCertificateErrorEi(i32 %1) #11
  br i1 %205, label %206, label %252

206:                                              ; preds = %200, %201
  %207 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 7
  %208 = getelementptr inbounds %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.134"* %207, i64 0, i32 0, i32 0, i32 0
  %209 = bitcast %"class.std::__1::unique_ptr.134"* %207 to %"class.net::StreamSocket"**
  %210 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %209, align 8
  store %"class.net::SSLClientSocket"* null, %"class.net::SSLClientSocket"** %208, align 8
  %211 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 14
  %212 = getelementptr inbounds %"class.absl::optional.993", %"class.absl::optional.993"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %212, align 8
  %213 = getelementptr inbounds %"class.absl::optional.993", %"class.absl::optional.993"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %214 = bitcast %"class.std::__1::vector.22"* %211 to <2 x i64>*
  %215 = load <2 x i64>, <2 x i64>* %214, align 8
  %216 = getelementptr inbounds %"class.absl::optional.993", %"class.absl::optional.993"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %217 = bitcast %"class.std::__1::vector.22"* %213 to <2 x i64>*
  store <2 x i64> %215, <2 x i64>* %217, align 8
  %218 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %219 = bitcast %"class.std::__1::basic_string"** %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = getelementptr inbounds %"class.absl::optional.993", %"class.absl::optional.993"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %222 = bitcast %"class.std::__1::basic_string"** %221 to i64*
  store i64 %220, i64* %222, align 8
  %223 = bitcast %"class.std::__1::vector.22"* %211 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %223, i8 0, i64 24, i1 false) #11
  call void @_ZN3net10ConnectJob9SetSocketENSt3__110unique_ptrINS_12StreamSocketENS1_14default_deleteIS3_EEEEN4absl8optionalINS1_6vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENSD_ISF_EEEEEE(%"class.net::ConnectJob"* %10, %"class.net::StreamSocket"* %210, %"class.absl::optional.993"* nonnull %8) #11
  %224 = load i8, i8* %212, align 8, !range !7
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %280, label %226

226:                                              ; preds = %206
  %227 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %213, i64 0, i32 0, i32 0
  %228 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %227, align 8
  %229 = icmp eq %"class.std::__1::basic_string"* %228, null
  br i1 %229, label %251, label %230

230:                                              ; preds = %226
  %231 = bitcast %"class.std::__1::basic_string"* %228 to i8*
  %232 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %216, align 8
  %233 = icmp eq %"class.std::__1::basic_string"* %232, %228
  br i1 %233, label %249, label %234

234:                                              ; preds = %230, %244
  %235 = phi %"class.std::__1::basic_string"* [ %236, %244 ], [ %232, %230 ]
  %236 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %235, i64 -1
  %237 = bitcast %"class.std::__1::basic_string"* %236 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %238 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %237, i64 0, i32 1, i32 0
  %239 = load i8, i8* %238, align 1
  %240 = icmp slt i8 %239, 0
  br i1 %240, label %241, label %244

241:                                              ; preds = %234
  %242 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %236, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load i8*, i8** %242, align 8
  call void @_ZdlPv(i8* %243) #12
  br label %244

244:                                              ; preds = %241, %234
  %245 = icmp eq %"class.std::__1::basic_string"* %236, %228
  br i1 %245, label %246, label %234

246:                                              ; preds = %244
  %247 = bitcast %"class.std::__1::vector.22"* %213 to i8**
  %248 = load i8*, i8** %247, align 8
  br label %249

249:                                              ; preds = %246, %230
  %250 = phi i8* [ %248, %246 ], [ %231, %230 ]
  store %"class.std::__1::basic_string"* %228, %"class.std::__1::basic_string"** %216, align 8
  call void @_ZdlPv(i8* %250) #12
  br label %251

251:                                              ; preds = %249, %226
  store i8 0, i8* %212, align 8
  br label %280

252:                                              ; preds = %201
  %253 = icmp eq i32 %1, -110
  br i1 %253, label %254, label %280

254:                                              ; preds = %252
  %255 = call i8* @_Znwm(i64 96) #12
  %256 = bitcast i8* %255 to %"class.net::SSLCertRequestInfo"*
  call void @_ZN3net18SSLCertRequestInfoC1Ev(%"class.net::SSLCertRequestInfo"* nonnull %256) #11
  %257 = bitcast i8* %255 to i32*
  %258 = atomicrmw add i32* %257, i32 1 monotonic
  %259 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 10
  %260 = ptrtoint i8* %255 to i64
  %261 = bitcast %class.scoped_refptr.140* %259 to i64*
  %262 = getelementptr inbounds %class.scoped_refptr.140, %class.scoped_refptr.140* %259, i64 0, i32 0
  %263 = load %"class.net::SSLCertRequestInfo"*, %"class.net::SSLCertRequestInfo"** %262, align 8
  store i64 %260, i64* %261, align 8
  %264 = icmp eq %"class.net::SSLCertRequestInfo"* %263, null
  br i1 %264, label %271, label %265

265:                                              ; preds = %254
  %266 = getelementptr inbounds %"class.net::SSLCertRequestInfo", %"class.net::SSLCertRequestInfo"* %263, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = atomicrmw sub i32* %266, i32 1 acq_rel
  %268 = icmp eq i32 %267, 1
  br i1 %268, label %269, label %271

269:                                              ; preds = %265
  call void @_ZN3net18SSLCertRequestInfoD1Ev(%"class.net::SSLCertRequestInfo"* nonnull %263) #11
  %270 = bitcast %"class.net::SSLCertRequestInfo"* %263 to i8*
  call void @_ZdlPv(i8* %270) #12
  br label %271

271:                                              ; preds = %254, %265, %269
  %272 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %273 = load %"class.net::SSLClientSocket"*, %"class.net::SSLClientSocket"** %272, align 8
  %274 = getelementptr inbounds %"class.net::SSLClientSocket", %"class.net::SSLClientSocket"* %273, i64 0, i32 0, i32 0
  %275 = load %"class.net::SSLCertRequestInfo"*, %"class.net::SSLCertRequestInfo"** %262, align 8
  %276 = bitcast %"class.net::SSLClientSocket"* %273 to void (%"class.net::StreamSocket"*, %"class.net::SSLCertRequestInfo"*)***
  %277 = load void (%"class.net::StreamSocket"*, %"class.net::SSLCertRequestInfo"*)**, void (%"class.net::StreamSocket"*, %"class.net::SSLCertRequestInfo"*)*** %276, align 8
  %278 = getelementptr inbounds void (%"class.net::StreamSocket"*, %"class.net::SSLCertRequestInfo"*)*, void (%"class.net::StreamSocket"*, %"class.net::SSLCertRequestInfo"*)** %277, i64 24
  %279 = load void (%"class.net::StreamSocket"*, %"class.net::SSLCertRequestInfo"*)*, void (%"class.net::StreamSocket"*, %"class.net::SSLCertRequestInfo"*)** %278, align 8
  call void %279(%"class.net::StreamSocket"* %274, %"class.net::SSLCertRequestInfo"* %275) #11
  br label %280

280:                                              ; preds = %251, %206, %271, %252, %55
  %281 = phi i32 [ 0, %55 ], [ %1, %252 ], [ -110, %271 ], [ %1, %206 ], [ %1, %251 ]
  ret i32 %281
}

declare %"class.net::ConnectJob"* @_ZN3net19TransportConnectJob25CreateTransportConnectJobE13scoped_refptrINS_21TransportSocketParamsEENS_15RequestPriorityERKNS_9SocketTagEPKNS_22CommonConnectJobParamsEPNS_10ConnectJob8DelegateEPKNS_16NetLogWithSourceE(%"class.net::TransportSocketParams"*, i32, %"class.net::SocketTag"* dereferenceable(1), %"struct.net::CommonConnectJobParams"*, %"class.net::ConnectJob::Delegate"*, %"class.net::NetLogWithSource"*) local_unnamed_addr #1

declare i32 @_ZN3net10ConnectJob7ConnectEv(%"class.net::ConnectJob"*) local_unnamed_addr #1

declare dereferenceable(8) %"struct.net::ResolveErrorInfo"* @_ZN3net16ResolveErrorInfoaSEOS0_(%"struct.net::ResolveErrorInfo"*, %"struct.net::ResolveErrorInfo"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.net::ConnectionAttempt"* @_ZNSt3__16vectorIN3net17ConnectionAttemptENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueES9_E4typeENS7_IPKS2_EESB_SB_(%"class.std::__1::vector.149"*, %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.net::ConnectionAttempt"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %"struct.net::ConnectionAttempt"* %2 to i64
  %8 = ptrtoint %"struct.net::ConnectionAttempt"* %3 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 24
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %180

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"struct.net::ConnectionAttempt"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %0, i64 0, i32 0, i32 1
  %17 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %16, align 8
  %18 = ptrtoint %"struct.net::ConnectionAttempt"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = sdiv exact i64 %19, 24
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"struct.net::ConnectionAttempt"** %16 to i64*
  br i1 %21, label %85, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = sdiv exact i64 %24, 24
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %48

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %2, i64 %25
  %29 = icmp eq %"struct.net::ConnectionAttempt"* %28, %3
  br i1 %29, label %43, label %30

30:                                               ; preds = %27, %30
  %31 = phi %"struct.net::ConnectionAttempt"* [ %39, %30 ], [ %17, %27 ]
  %32 = phi %"struct.net::ConnectionAttempt"* [ %38, %30 ], [ %28, %27 ]
  %33 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %31, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %32, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %33, %"class.net::IPEndPoint"* dereferenceable(20) %34) #11
  %35 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %31, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %32, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %35, align 4
  %38 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %32, i64 1
  %39 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %31, i64 1
  %40 = icmp eq %"struct.net::ConnectionAttempt"* %38, %3
  br i1 %40, label %41, label %30

41:                                               ; preds = %30
  %42 = ptrtoint %"struct.net::ConnectionAttempt"* %39 to i64
  br label %43

43:                                               ; preds = %41, %27
  %44 = phi i64 [ %18, %27 ], [ %42, %41 ]
  store i64 %44, i64* %22, align 8
  %45 = icmp sgt i64 %24, 0
  br i1 %45, label %46, label %180

46:                                               ; preds = %43
  %47 = inttoptr i64 %44 to %"struct.net::ConnectionAttempt"*
  br label %48

48:                                               ; preds = %46, %23
  %49 = phi i64 [ %44, %46 ], [ %18, %23 ]
  %50 = phi %"struct.net::ConnectionAttempt"* [ %47, %46 ], [ %17, %23 ]
  %51 = phi %"struct.net::ConnectionAttempt"* [ %28, %46 ], [ %3, %23 ]
  %52 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %1, i64 %10
  %53 = ptrtoint %"struct.net::ConnectionAttempt"* %52 to i64
  %54 = sub i64 %49, %53
  %55 = sdiv exact i64 %54, 24
  %56 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %1, i64 %55
  %57 = icmp ult %"struct.net::ConnectionAttempt"* %56, %17
  br i1 %57, label %67, label %60

58:                                               ; preds = %67
  %59 = ptrtoint %"struct.net::ConnectionAttempt"* %76 to i64
  br label %60

60:                                               ; preds = %58, %48
  %61 = phi i64 [ %59, %58 ], [ %49, %48 ]
  store i64 %61, i64* %22, align 8
  %62 = icmp eq i64 %54, 0
  br i1 %62, label %78, label %63

63:                                               ; preds = %60
  %64 = sdiv exact i64 %54, -24
  %65 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %50, i64 %64, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %66 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %66, i64 %54, i1 false) #11
  br label %78

67:                                               ; preds = %48, %67
  %68 = phi %"struct.net::ConnectionAttempt"* [ %76, %67 ], [ %50, %48 ]
  %69 = phi %"struct.net::ConnectionAttempt"* [ %75, %67 ], [ %56, %48 ]
  %70 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %68, i64 0, i32 0
  %71 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %69, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %70, %"class.net::IPEndPoint"* dereferenceable(20) %71) #11
  %72 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %68, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %69, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  store i32 %74, i32* %72, align 4
  %75 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %69, i64 1
  %76 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %68, i64 1
  %77 = icmp ult %"struct.net::ConnectionAttempt"* %75, %17
  br i1 %77, label %67, label %58

78:                                               ; preds = %60, %63
  %79 = ptrtoint %"struct.net::ConnectionAttempt"* %51 to i64
  %80 = sub i64 %79, %7
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %180, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %84 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %83, i8* align 4 %84, i64 %80, i1 false) #11
  br label %180

85:                                               ; preds = %12
  %86 = bitcast %"class.std::__1::vector.149"* %0 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = sub i64 %18, %87
  %89 = sdiv exact i64 %88, 24
  %90 = add nsw i64 %89, %10
  %91 = icmp ugt i64 %90, 768614336404564650
  br i1 %91, label %92, label %94

92:                                               ; preds = %85
  %93 = bitcast %"class.std::__1::vector.149"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %93) #13
  unreachable

94:                                               ; preds = %85
  %95 = sub i64 %15, %87
  %96 = sdiv exact i64 %95, 24
  %97 = icmp ult i64 %96, 384307168202282325
  br i1 %97, label %101, label %98

98:                                               ; preds = %94
  %99 = sub i64 %5, %87
  %100 = sdiv exact i64 %99, 24
  br label %108

101:                                              ; preds = %94
  %102 = shl nsw i64 %96, 1
  %103 = icmp ult i64 %102, %90
  %104 = select i1 %103, i64 %90, i64 %102
  %105 = sub i64 %5, %87
  %106 = sdiv exact i64 %105, 24
  %107 = icmp eq i64 %104, 0
  br i1 %107, label %114, label %108

108:                                              ; preds = %101, %98
  %109 = phi i64 [ %100, %98 ], [ %106, %101 ]
  %110 = phi i64 [ 768614336404564650, %98 ], [ %104, %101 ]
  %111 = mul i64 %110, 24
  %112 = tail call i8* @_Znwm(i64 %111) #12
  %113 = bitcast i8* %112 to %"struct.net::ConnectionAttempt"*
  br label %114

114:                                              ; preds = %108, %101
  %115 = phi i64 [ %109, %108 ], [ %106, %101 ]
  %116 = phi i64 [ %110, %108 ], [ 0, %101 ]
  %117 = phi %"struct.net::ConnectionAttempt"* [ %113, %108 ], [ null, %101 ]
  %118 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %117, i64 %115
  %119 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %117, i64 %116
  %120 = ptrtoint %"struct.net::ConnectionAttempt"* %119 to i64
  %121 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %118, i64 %10
  br label %122

122:                                              ; preds = %114, %122
  %123 = phi %"struct.net::ConnectionAttempt"* [ %130, %122 ], [ %118, %114 ]
  %124 = phi %"struct.net::ConnectionAttempt"* [ %131, %122 ], [ %2, %114 ]
  %125 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %123, i64 0, i32 0
  %126 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %124, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %125, %"class.net::IPEndPoint"* dereferenceable(20) %126) #11
  %127 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %123, i64 0, i32 1
  %128 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %124, i64 0, i32 1
  %129 = load i32, i32* %128, align 4
  store i32 %129, i32* %127, align 4
  %130 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %123, i64 1
  %131 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %124, i64 1
  %132 = icmp eq %"struct.net::ConnectionAttempt"* %121, %130
  br i1 %132, label %133, label %122

133:                                              ; preds = %122
  %134 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %6, align 8
  %135 = icmp eq %"struct.net::ConnectionAttempt"* %134, %1
  br i1 %135, label %147, label %136

136:                                              ; preds = %133, %136
  %137 = phi %"struct.net::ConnectionAttempt"* [ %145, %136 ], [ %118, %133 ]
  %138 = phi %"struct.net::ConnectionAttempt"* [ %139, %136 ], [ %1, %133 ]
  %139 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %138, i64 -1
  %140 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %137, i64 -1, i32 0
  %141 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %139, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %140, %"class.net::IPEndPoint"* dereferenceable(20) %141) #11
  %142 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %137, i64 -1, i32 1
  %143 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %138, i64 -1, i32 1
  %144 = load i32, i32* %143, align 4
  store i32 %144, i32* %142, align 4
  %145 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %137, i64 -1
  %146 = icmp eq %"struct.net::ConnectionAttempt"* %139, %134
  br i1 %146, label %147, label %136

147:                                              ; preds = %136, %133
  %148 = phi %"struct.net::ConnectionAttempt"* [ %118, %133 ], [ %145, %136 ]
  %149 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %16, align 8
  %150 = icmp eq %"struct.net::ConnectionAttempt"* %149, %1
  br i1 %150, label %164, label %151

151:                                              ; preds = %147, %151
  %152 = phi %"struct.net::ConnectionAttempt"* [ %160, %151 ], [ %121, %147 ]
  %153 = phi %"struct.net::ConnectionAttempt"* [ %159, %151 ], [ %1, %147 ]
  %154 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %152, i64 0, i32 0
  %155 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %153, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %154, %"class.net::IPEndPoint"* dereferenceable(20) %155) #11
  %156 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %152, i64 0, i32 1
  %157 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %153, i64 0, i32 1
  %158 = load i32, i32* %157, align 4
  store i32 %158, i32* %156, align 4
  %159 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %153, i64 1
  %160 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %152, i64 1
  %161 = icmp eq %"struct.net::ConnectionAttempt"* %159, %149
  br i1 %161, label %162, label %151

162:                                              ; preds = %151
  %163 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %16, align 8
  br label %164

164:                                              ; preds = %147, %162
  %165 = phi %"struct.net::ConnectionAttempt"* [ %163, %162 ], [ %1, %147 ]
  %166 = phi %"struct.net::ConnectionAttempt"* [ %160, %162 ], [ %121, %147 ]
  %167 = ptrtoint %"struct.net::ConnectionAttempt"* %148 to i64
  %168 = ptrtoint %"struct.net::ConnectionAttempt"* %166 to i64
  %169 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %6, align 8
  store i64 %167, i64* %86, align 8
  store i64 %168, i64* %22, align 8
  store i64 %120, i64* %14, align 8
  %170 = icmp eq %"struct.net::ConnectionAttempt"* %165, %169
  br i1 %170, label %176, label %171

171:                                              ; preds = %164, %171
  %172 = phi %"struct.net::ConnectionAttempt"* [ %173, %171 ], [ %165, %164 ]
  %173 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %172, i64 -1
  %174 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %173, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %174) #11
  %175 = icmp eq %"struct.net::ConnectionAttempt"* %173, %169
  br i1 %175, label %176, label %171

176:                                              ; preds = %171, %164
  %177 = icmp eq %"struct.net::ConnectionAttempt"* %169, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %176
  %179 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %169, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %179) #12
  br label %180

180:                                              ; preds = %178, %176, %43, %78, %82, %4
  %181 = phi %"struct.net::ConnectionAttempt"* [ %1, %4 ], [ %1, %82 ], [ %1, %78 ], [ %1, %43 ], [ %118, %176 ], [ %118, %178 ]
  ret %"struct.net::ConnectionAttempt"* %181
}

declare %"class.net::StreamSocket"* @_ZN3net10ConnectJob10PassSocketEv(%"class.net::ConnectJob"*) local_unnamed_addr #1

declare void @_ZN3net10ConnectJob10ResetTimerEN4base9TimeDeltaE(%"class.net::ConnectJob"*, i64) local_unnamed_addr #1

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

declare dereferenceable(184) %"class.net::NetworkIsolationKey"* @_ZN3net19NetworkIsolationKeyaSERKS0_(%"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"* dereferenceable(184)) local_unnamed_addr #1

declare void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13SSLConnectJob20ResetStateForRestartEv(%"class.net::SSLConnectJob"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.net::ResolveErrorInfo", align 4
  %3 = alloca %"class.net::IPEndPoint", align 2
  %4 = bitcast %"class.net::SSLConnectJob"* %0 to %"class.net::ConnectJob"*
  tail call void @_ZN3net10ConnectJob10ResetTimerEN4base9TimeDeltaE(%"class.net::ConnectJob"* %4, i64 0) #11
  %5 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %5, align 8
  store %"class.net::ConnectJob"* null, %"class.net::ConnectJob"** %5, align 8
  %7 = icmp eq %"class.net::ConnectJob"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.net::ConnectJob"* %6 to void (%"class.net::ConnectJob"*)***
  %10 = load void (%"class.net::ConnectJob"*)**, void (%"class.net::ConnectJob"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.net::ConnectJob"*)*, void (%"class.net::ConnectJob"*)** %10, i64 1
  %12 = load void (%"class.net::ConnectJob"*)*, void (%"class.net::ConnectJob"*)** %11, align 8
  tail call void %12(%"class.net::ConnectJob"* nonnull %6) #11
  br label %13

13:                                               ; preds = %1, %8
  %14 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %15 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %14, align 8
  store %"class.net::StreamSocket"* null, %"class.net::StreamSocket"** %14, align 8
  %16 = icmp eq %"class.net::StreamSocket"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.net::StreamSocket"* %15 to void (%"class.net::StreamSocket"*)***
  %19 = load void (%"class.net::StreamSocket"*)**, void (%"class.net::StreamSocket"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %19, i64 1
  %21 = load void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %20, align 8
  tail call void %21(%"class.net::StreamSocket"* nonnull %15) #11
  br label %22

22:                                               ; preds = %13, %17
  %23 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %24 = load %"class.net::SSLClientSocket"*, %"class.net::SSLClientSocket"** %23, align 8
  store %"class.net::SSLClientSocket"* null, %"class.net::SSLClientSocket"** %23, align 8
  %25 = icmp eq %"class.net::SSLClientSocket"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.net::SSLClientSocket"* %24 to void (%"class.net::SSLClientSocket"*)***
  %28 = load void (%"class.net::SSLClientSocket"*)**, void (%"class.net::SSLClientSocket"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.net::SSLClientSocket"*)*, void (%"class.net::SSLClientSocket"*)** %28, i64 1
  %30 = load void (%"class.net::SSLClientSocket"*)*, void (%"class.net::SSLClientSocket"*)** %29, align 8
  tail call void %30(%"class.net::SSLClientSocket"* nonnull %24) #11
  br label %31

31:                                               ; preds = %22, %26
  %32 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 10
  %33 = bitcast %class.scoped_refptr.140* %32 to i64*
  %34 = getelementptr inbounds %class.scoped_refptr.140, %class.scoped_refptr.140* %32, i64 0, i32 0
  %35 = load %"class.net::SSLCertRequestInfo"*, %"class.net::SSLCertRequestInfo"** %34, align 8
  store i64 0, i64* %33, align 8
  %36 = icmp eq %"class.net::SSLCertRequestInfo"* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.net::SSLCertRequestInfo", %"class.net::SSLCertRequestInfo"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw sub i32* %38, i32 1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  tail call void @_ZN3net18SSLCertRequestInfoD1Ev(%"class.net::SSLCertRequestInfo"* nonnull %35) #11
  %42 = bitcast %"class.net::SSLCertRequestInfo"* %35 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %31, %37, %41
  %44 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 8
  store i8 0, i8* %44, align 8
  %45 = bitcast %"struct.net::ResolveErrorInfo"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #11
  call void @_ZN3net16ResolveErrorInfoC1Ev(%"struct.net::ResolveErrorInfo"* nonnull %2) #11
  %46 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 12
  %47 = call dereferenceable(8) %"struct.net::ResolveErrorInfo"* @_ZN3net16ResolveErrorInfoaSEOS0_(%"struct.net::ResolveErrorInfo"* %46, %"struct.net::ResolveErrorInfo"* nonnull dereferenceable(8) %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #11
  %48 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %48) #11
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %3) #11
  %49 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 2 %48, i64 20, i1 false)
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %48) #11
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN3net13SSLConnectJob15GetInitialStateENS_15SSLSocketParams14ConnectionTypeE(i32) local_unnamed_addr #4 align 2 {
  %2 = icmp ult i32 %0, 3
  br i1 %2, label %3, label %5

3:                                                ; preds = %1
  %4 = shl i32 %0, 1
  ret i32 %4

5:                                                ; preds = %1
  ret i32 8
}

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3net7SSLInfoC1Ev(%"class.net::SSLInfo"*) unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN3net12IsGoogleHostEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

declare void @_ZN4base18UmaHistogramSparseEPKci(i8*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN3net9x509_util16HasSHA1SignatureEPK16crypto_buffer_st(%struct.crypto_buffer_st*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net7SSLInfoD1Ev(%"class.net::SSLInfo"*) unnamed_addr #2

declare zeroext i1 @_ZN3net18IsCertificateErrorEi(i32) local_unnamed_addr #1

declare void @_ZN3net10ConnectJob9SetSocketENSt3__110unique_ptrINS_12StreamSocketENS1_14default_deleteIS3_EEEEN4absl8optionalINS1_6vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENSD_ISF_EEEEEE(%"class.net::ConnectJob"*, %"class.net::StreamSocket"*, %"class.absl::optional.993"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net13SSLConnectJob15ConnectInternalEv(%"class.net::SSLConnectJob"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.net::SSLSocketParams"*, %"class.net::SSLSocketParams"** %2, align 8
  %4 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %3, i64 0, i32 1, i32 0
  %5 = load %"class.net::TransportSocketParams"*, %"class.net::TransportSocketParams"** %4, align 8
  %6 = icmp eq %"class.net::TransportSocketParams"* %5, null
  br i1 %6, label %7, label %12

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.net::SSLSocketParams", %"class.net::SSLSocketParams"* %3, i64 0, i32 2, i32 0
  %9 = load %"class.net::SOCKSSocketParams"*, %"class.net::SOCKSSocketParams"** %8, align 8
  %10 = icmp eq %"class.net::SOCKSSocketParams"* %9, null
  %11 = select i1 %10, i32 4, i32 2
  br label %12

12:                                               ; preds = %7, %1
  %13 = phi i32 [ 0, %1 ], [ %11, %7 ]
  %14 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 3
  store i32 %13, i32* %14, align 8
  %15 = tail call i32 @_ZN3net13SSLConnectJob6DoLoopEi(%"class.net::SSLConnectJob"* %0, i32 0)
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13SSLConnectJob22ChangePriorityInternalENS_15RequestPriorityE(%"class.net::SSLConnectJob"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SSLConnectJob", %"class.net::SSLConnectJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.net::ConnectJob"*, %"class.net::ConnectJob"** %3, align 8
  %5 = icmp eq %"class.net::ConnectJob"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN3net10ConnectJob14ChangePriorityENS_15RequestPriorityE(%"class.net::ConnectJob"* nonnull %4, i32 %1) #11
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

declare void @_ZN3net10ConnectJob14ChangePriorityENS_15RequestPriorityE(%"class.net::ConnectJob"*, i32) local_unnamed_addr #1

declare void @_ZN3net10ConnectJob18OnTimedOutInternalEv(%"class.net::ConnectJob"*) unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net18SSLCertRequestInfoD1Ev(%"class.net::SSLCertRequestInfo"*) unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net21TransportSocketParamsD1Ev(%"class.net::TransportSocketParams"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net17SOCKSSocketParamsD1Ev(%"class.net::SOCKSSocketParams"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net21HttpProxySocketParamsD1Ev(%"class.net::HttpProxySocketParams"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net13SSLConnectJobEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE3RunEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.net::SSLConnectJob"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.net::SSLConnectJob"*, i32)**
  %22 = load void (%"class.net::SSLConnectJob"*, i32)*, void (%"class.net::SSLConnectJob"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.net::SSLConnectJob"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.net::SSLConnectJob"*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.net::SSLConnectJob"* %13, i32 %1) #11
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net13SSLConnectJobEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.22"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.22"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %15, label %110, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* %2
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %26, label %64, label %27

27:                                               ; preds = %17, %60
  %28 = phi %"class.std::__1::basic_string"* [ %62, %60 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string"* [ %61, %60 ], [ %1, %17 ]
  %30 = icmp eq %"class.std::__1::basic_string"* %28, %29
  br i1 %30, label %60, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %35, label %50, label %40

40:                                               ; preds = %31
  br i1 %39, label %44, label %41

41:                                               ; preds = %40
  %42 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #11
  br label %60

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %46, i64 %48) #11
  br label %60

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %56 = zext i8 %38 to i64
  %57 = select i1 %39, i8* %52, i8* %55
  %58 = select i1 %39, i64 %54, i64 %56
  %59 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %57, i64 %58) #11
  br label %60

60:                                               ; preds = %50, %44, %41, %27
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 1
  %63 = icmp eq %"class.std::__1::basic_string"* %61, %25
  br i1 %63, label %64, label %27

64:                                               ; preds = %60, %17
  %65 = phi %"class.std::__1::basic_string"* [ %16, %17 ], [ %62, %60 ]
  br i1 %23, label %66, label %94

66:                                               ; preds = %64
  %67 = load i64, i64* %19, align 8
  %68 = icmp eq %"class.std::__1::basic_string"* %25, %2
  br i1 %68, label %92, label %69

69:                                               ; preds = %66
  %70 = inttoptr i64 %67 to %"class.std::__1::basic_string"*
  br label %71

71:                                               ; preds = %86, %69
  %72 = phi %"class.std::__1::basic_string"* [ %88, %86 ], [ %70, %69 ]
  %73 = phi %"class.std::__1::basic_string"* [ %87, %86 ], [ %24, %69 ]
  %74 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  %80 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #11
  br label %86

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %72, i8* %83, i64 %85) #11
  br label %86

86:                                               ; preds = %81, %78
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 1
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 1
  %89 = icmp eq %"class.std::__1::basic_string"* %87, %2
  br i1 %89, label %90, label %71

90:                                               ; preds = %86
  %91 = ptrtoint %"class.std::__1::basic_string"* %88 to i64
  br label %92

92:                                               ; preds = %66, %90
  %93 = phi i64 [ %67, %66 ], [ %91, %90 ]
  store i64 %93, i64* %19, align 8
  br label %182

94:                                               ; preds = %64
  %95 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %96 = icmp eq %"class.std::__1::basic_string"* %95, %65
  br i1 %96, label %109, label %97

97:                                               ; preds = %94, %107
  %98 = phi %"class.std::__1::basic_string"* [ %99, %107 ], [ %95, %94 ]
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 -1
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  tail call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %104, %97
  %108 = icmp eq %"class.std::__1::basic_string"* %99, %65
  br i1 %108, label %109, label %97

109:                                              ; preds = %107, %94
  store %"class.std::__1::basic_string"* %65, %"class.std::__1::basic_string"** %18, align 8
  br label %182

110:                                              ; preds = %3
  %111 = icmp eq i64 %12, 0
  br i1 %111, label %135, label %112

112:                                              ; preds = %110
  %113 = inttoptr i64 %12 to i8*
  %114 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 1
  %115 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %114, align 8
  %116 = icmp eq %"class.std::__1::basic_string"* %115, %16
  br i1 %116, label %132, label %117

117:                                              ; preds = %112, %127
  %118 = phi %"class.std::__1::basic_string"* [ %119, %127 ], [ %115, %112 ]
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 -1
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  tail call void @_ZdlPv(i8* %126) #12
  br label %127

127:                                              ; preds = %124, %117
  %128 = icmp eq %"class.std::__1::basic_string"* %119, %16
  br i1 %128, label %129, label %117

129:                                              ; preds = %127
  %130 = bitcast %"class.std::__1::vector.22"* %0 to i8**
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %129, %112
  %133 = phi i8* [ %131, %129 ], [ %113, %112 ]
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %114, align 8
  tail call void @_ZdlPv(i8* %133) #12
  %134 = bitcast %"class.std::__1::vector.22"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 24, i1 false) #11
  br label %135

135:                                              ; preds = %110, %132
  %136 = phi i64 [ %10, %110 ], [ 0, %132 ]
  %137 = icmp ugt i64 %7, 768614336404564650
  br i1 %137, label %138, label %140

138:                                              ; preds = %135
  %139 = bitcast %"class.std::__1::vector.22"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %139) #13
  unreachable

140:                                              ; preds = %135
  %141 = sdiv exact i64 %136, 24
  %142 = icmp ult i64 %141, 384307168202282325
  br i1 %142, label %143, label %147

143:                                              ; preds = %140
  %144 = shl nsw i64 %141, 1
  %145 = icmp ult i64 %144, %7
  %146 = select i1 %145, i64 %7, i64 %144
  br label %147

147:                                              ; preds = %143, %140
  %148 = phi i64 [ %146, %143 ], [ 768614336404564650, %140 ]
  %149 = mul i64 %148, 24
  %150 = tail call i8* @_Znwm(i64 %149) #12
  %151 = bitcast i8* %150 to %"class.std::__1::basic_string"*
  %152 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 1
  %153 = bitcast %"class.std::__1::basic_string"** %152 to i8**
  store i8* %150, i8** %153, align 8
  %154 = bitcast %"class.std::__1::vector.22"* %0 to i8**
  store i8* %150, i8** %154, align 8
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %151, i64 %148
  store %"class.std::__1::basic_string"* %155, %"class.std::__1::basic_string"** %8, align 8
  %156 = bitcast %"class.std::__1::basic_string"** %152 to i64*
  %157 = ptrtoint i8* %150 to i64
  %158 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %158, label %180, label %159

159:                                              ; preds = %147, %174
  %160 = phi %"class.std::__1::basic_string"* [ %176, %174 ], [ %151, %147 ]
  %161 = phi %"class.std::__1::basic_string"* [ %175, %174 ], [ %1, %147 ]
  %162 = bitcast %"class.std::__1::basic_string"* %161 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %159
  %167 = bitcast %"class.std::__1::basic_string"* %160 to i8*
  %168 = bitcast %"class.std::__1::basic_string"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 24, i1 false) #11
  br label %174

169:                                              ; preds = %159
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %160, i8* %171, i64 %173) #11
  br label %174

174:                                              ; preds = %169, %166
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 1
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %160, i64 1
  %177 = icmp eq %"class.std::__1::basic_string"* %175, %2
  br i1 %177, label %178, label %159

178:                                              ; preds = %174
  %179 = ptrtoint %"class.std::__1::basic_string"* %176 to i64
  br label %180

180:                                              ; preds = %147, %178
  %181 = phi i64 [ %157, %147 ], [ %179, %178 ]
  store i64 %181, i64* %156, align 8
  br label %182

182:                                              ; preds = %92, %109, %180
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3net15SOCKSConnectJobC1ENS_15RequestPriorityERKNS_9SocketTagEPKNS_22CommonConnectJobParamsE13scoped_refptrINS_17SOCKSSocketParamsEEPNS_10ConnectJob8DelegateEPKNS_16NetLogWithSourceE(%"class.net::SOCKSConnectJob"*, i32, %"class.net::SocketTag"* dereferenceable(1), %"struct.net::CommonConnectJobParams"*, %"class.net::SOCKSSocketParams"*, %"class.net::ConnectJob::Delegate"*, %"class.net::NetLogWithSource"*) unnamed_addr #1

declare void @_ZN3net19HttpProxyConnectJobC1ENS_15RequestPriorityERKNS_9SocketTagEPKNS_22CommonConnectJobParamsE13scoped_refptrINS_21HttpProxySocketParamsEEPNS_10ConnectJob8DelegateEPKNS_16NetLogWithSourceE(%"class.net::HttpProxyConnectJob"*, i32, %"class.net::SocketTag"* dereferenceable(1), %"struct.net::CommonConnectJobParams"*, %"class.net::HttpProxySocketParams"*, %"class.net::ConnectJob::Delegate"*, %"class.net::NetLogWithSource"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net17ConnectionAttemptENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.149"*, %"struct.net::ConnectionAttempt"* dereferenceable(24)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.net::ConnectionAttempt"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.149"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.149"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.net::ConnectionAttempt"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.net::ConnectionAttempt"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.net::ConnectionAttempt"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %33, i64 %32
  %36 = ptrtoint %"struct.net::ConnectionAttempt"* %35 to i64
  %37 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %1, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %37, %"class.net::IPEndPoint"* dereferenceable(20) %38) #11
  %39 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %33, i64 %9, i32 1
  %40 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %1, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  store i32 %41, i32* %39, align 4
  %42 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %34, i64 1
  %43 = ptrtoint %"struct.net::ConnectionAttempt"* %42 to i64
  %44 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %0, i64 0, i32 0, i32 0
  %45 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %44, align 8
  %46 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %3, align 8
  %47 = icmp eq %"struct.net::ConnectionAttempt"* %46, %45
  br i1 %47, label %48, label %50

48:                                               ; preds = %31
  %49 = ptrtoint %"struct.net::ConnectionAttempt"* %34 to i64
  store i64 %49, i64* %6, align 8
  store i64 %43, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  br label %71

50:                                               ; preds = %31, %50
  %51 = phi %"struct.net::ConnectionAttempt"* [ %59, %50 ], [ %34, %31 ]
  %52 = phi %"struct.net::ConnectionAttempt"* [ %53, %50 ], [ %46, %31 ]
  %53 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %52, i64 -1
  %54 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %51, i64 -1, i32 0
  %55 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %53, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %54, %"class.net::IPEndPoint"* dereferenceable(20) %55) #11
  %56 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %51, i64 -1, i32 1
  %57 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %52, i64 -1, i32 1
  %58 = load i32, i32* %57, align 4
  store i32 %58, i32* %56, align 4
  %59 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %51, i64 -1
  %60 = icmp eq %"struct.net::ConnectionAttempt"* %53, %45
  br i1 %60, label %61, label %50

61:                                               ; preds = %50
  %62 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %44, align 8
  %63 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %3, align 8
  %64 = ptrtoint %"struct.net::ConnectionAttempt"* %59 to i64
  store i64 %64, i64* %6, align 8
  store i64 %43, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %65 = icmp eq %"struct.net::ConnectionAttempt"* %63, %62
  br i1 %65, label %71, label %66

66:                                               ; preds = %61, %66
  %67 = phi %"struct.net::ConnectionAttempt"* [ %68, %66 ], [ %63, %61 ]
  %68 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %67, i64 -1
  %69 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %68, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %69) #11
  %70 = icmp eq %"struct.net::ConnectionAttempt"* %68, %62
  br i1 %70, label %71, label %66

71:                                               ; preds = %66, %48, %61
  %72 = phi %"struct.net::ConnectionAttempt"* [ %45, %48 ], [ %62, %61 ], [ %62, %66 ]
  %73 = icmp eq %"struct.net::ConnectionAttempt"* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %75) #12
  br label %76

76:                                               ; preds = %71, %74
  ret void
}

declare void @_ZN3net18SSLCertRequestInfoC1Ev(%"class.net::SSLCertRequestInfo"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN3net13SSLConnectJobEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN3net13SSLConnectJobEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base13BindRepeatingIMN3net13SSLConnectJobEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!6 = distinct !{!6, !"_ZN4base13BindRepeatingIMN3net13SSLConnectJobEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!7 = !{i8 0, i8 2}
!8 = !{!"branch_weights", i32 2000, i32 1}
