; ModuleID = '../../third_party/icu/source/common/rbbi.cpp'
source_filename = "../../third_party/icu/source/common/rbbi.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UText = type { i32, i32, i32, i32, i64, i32, i32, i64, i32, i32, i16*, %struct.UTextFuncs*, i8*, i8*, i8*, i8*, i8*, i8*, i64, i32, i32, i64, i32, i32 }
%struct.UTextFuncs = type { i32, i32, i32, i32, %struct.UText* (%struct.UText*, %struct.UText*, i8, i32*)*, i64 (%struct.UText*)*, i8 (%struct.UText*, i64, i8)*, i32 (%struct.UText*, i64, i64, i16*, i32, i32*)*, i32 (%struct.UText*, i64, i64, i16*, i32, i32*)*, void (%struct.UText*, i64, i64, i64, i8, i32*)*, i64 (%struct.UText*)*, i32 (%struct.UText*, i64)*, void (%struct.UText*)*, void (%struct.UText*)*, void (%struct.UText*)*, void (%struct.UText*)* }
%"class.icu_69::UStack" = type { %"class.icu_69::UVector" }
%"class.icu_69::UVector" = type { %"class.icu_69::UObject", i32, i32, %union.UElement*, void (i8*)*, i8 (i8*, i8*)* }
%"class.icu_69::UObject" = type { i32 (...)** }
%union.UElement = type { i8* }
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.1, [32 x i8] }
%struct.anon.1 = type { i16, i32, i32, i16* }
%"class.icu_69::RuleBasedBreakIterator" = type { %"class.icu_69::BreakIterator.base", %struct.UText, %"class.icu_69::RBBIDataWrapper"*, i32, i32, %"class.icu_69::RuleBasedBreakIterator::BreakCache"*, %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*, %"class.icu_69::UStack"*, %"class.icu_69::UnhandledEngine"*, i32, %"class.icu_69::CharacterIterator"*, %"class.icu_69::StringCharacterIterator", i8, i32* }
%"class.icu_69::BreakIterator.base" = type <{ %"class.icu_69::UObject", [157 x i8], [157 x i8] }>
%"class.icu_69::RBBIDataWrapper" = type <{ %"struct.icu_69::RBBIDataHeader"*, %"struct.icu_69::RBBIStateTable"*, %"struct.icu_69::RBBIStateTable"*, i8*, i32*, i32, [4 x i8], %struct.UCPTrie*, %"struct.std::__1::atomic", [4 x i8], %struct.UDataMemory*, %"class.icu_69::UnicodeString", i8, [7 x i8] }>
%"struct.icu_69::RBBIStateTable" = type { i32, i32, i32, i32, i32, [1 x i8] }
%struct.UCPTrie = type { i16*, %union.UCPTrieData, i32, i32, i32, i16, i8, i8, i32, i16, i16, i32, i32 }
%union.UCPTrieData = type { i8* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.UDataMemory = type opaque
%"class.icu_69::RuleBasedBreakIterator::BreakCache" = type { i32 (...)**, %"class.icu_69::RuleBasedBreakIterator"*, i32, i32, i32, i32, [128 x i32], [128 x i16], %"class.icu_69::UVector32" }
%"class.icu_69::UVector32" = type { %"class.icu_69::UObject", i32, i32, i32, i32* }
%"class.icu_69::RuleBasedBreakIterator::DictionaryCache" = type <{ %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::UVector32", i32, i32, i32, i32, i32, [4 x i8] }>
%"class.icu_69::UnhandledEngine" = type { %"class.icu_69::LanguageBreakEngine", %"class.icu_69::UnicodeSet"* }
%"class.icu_69::LanguageBreakEngine" = type { i32 (...)** }
%"class.icu_69::UnicodeSet" = type <{ %"class.icu_69::UnicodeFilter", i32*, i32, i32, i8, [7 x i8], %"class.icu_69::BMPSet"*, i32*, i32, [4 x i8], i16*, i32, [4 x i8], %"class.icu_69::UVector"*, %"class.icu_69::UnicodeSetStringSpan"*, [25 x i32], [4 x i8] }>
%"class.icu_69::UnicodeFilter" = type { %"class.icu_69::UnicodeFunctor", %"class.icu_69::UnicodeMatcher" }
%"class.icu_69::UnicodeFunctor" = type { %"class.icu_69::UObject" }
%"class.icu_69::UnicodeMatcher" = type { i32 (...)** }
%"class.icu_69::BMPSet" = type opaque
%"class.icu_69::UnicodeSetStringSpan" = type opaque
%"class.icu_69::CharacterIterator" = type { %"class.icu_69::ForwardCharacterIterator", i32, i32, i32, i32 }
%"class.icu_69::ForwardCharacterIterator" = type { %"class.icu_69::UObject" }
%"class.icu_69::StringCharacterIterator" = type { %"class.icu_69::UCharCharacterIterator", %"class.icu_69::UnicodeString" }
%"class.icu_69::UCharCharacterIterator" = type { %"class.icu_69::CharacterIterator", i16* }
%"struct.icu_69::RBBIDataHeader" = type { i32, [4 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x i32] }
%struct.UParseError = type { i32, i32, [16 x i16], [16 x i16] }
%"class.icu_69::BreakIterator" = type <{ %"class.icu_69::UObject", [157 x i8], [157 x i8], [6 x i8] }>
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.icu_69::RBBIStateTableRowT" = type { i8, i8, i8, [1 x i8] }
%"struct.icu_69::RBBIStateTableRowT.2" = type { i16, i16, i16, [1 x i16] }
%"struct.icu_69::UInitOnce" = type { %"struct.std::__1::atomic", i32 }
%"class.icu_69::ICULanguageBreakFactory" = type { %"class.icu_69::LanguageBreakFactory", %"class.icu_69::UStack"* }
%"class.icu_69::LanguageBreakFactory" = type { i32 (...)** }

@_ZZN6icu_6922RuleBasedBreakIterator16getStaticClassIDEvE7classID = internal global i8 0, align 1
@_ZTVN6icu_6922RuleBasedBreakIteratorE = hidden unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6922RuleBasedBreakIteratorE to i8*), i8* bitcast (void (%"class.icu_69::RuleBasedBreakIterator"*)* @_ZN6icu_6922RuleBasedBreakIteratorD2Ev to i8*), i8* bitcast (void (%"class.icu_69::RuleBasedBreakIterator"*)* @_ZN6icu_6922RuleBasedBreakIteratorD0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::RuleBasedBreakIterator"*)* @_ZNK6icu_6922RuleBasedBreakIterator17getDynamicClassIDEv to i8*), i8* bitcast (i8 (%"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::BreakIterator"*)* @_ZNK6icu_6922RuleBasedBreakIteratoreqERKNS_13BreakIteratorE to i8*), i8* bitcast (%"class.icu_69::RuleBasedBreakIterator"* (%"class.icu_69::RuleBasedBreakIterator"*)* @_ZNK6icu_6922RuleBasedBreakIterator5cloneEv to i8*), i8* bitcast (%"class.icu_69::CharacterIterator"* (%"class.icu_69::RuleBasedBreakIterator"*)* @_ZNK6icu_6922RuleBasedBreakIterator7getTextEv to i8*), i8* bitcast (%struct.UText* (%"class.icu_69::RuleBasedBreakIterator"*, %struct.UText*, i32*)* @_ZNK6icu_6922RuleBasedBreakIterator8getUTextEP5UTextR10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::UnicodeString"*)* @_ZN6icu_6922RuleBasedBreakIterator7setTextERKNS_13UnicodeStringE to i8*), i8* bitcast (void (%"class.icu_69::RuleBasedBreakIterator"*, %struct.UText*, i32*)* @_ZN6icu_6922RuleBasedBreakIterator7setTextEP5UTextR10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::CharacterIterator"*)* @_ZN6icu_6922RuleBasedBreakIterator9adoptTextEPNS_17CharacterIteratorE to i8*), i8* bitcast (i32 (%"class.icu_69::RuleBasedBreakIterator"*)* @_ZN6icu_6922RuleBasedBreakIterator5firstEv to i8*), i8* bitcast (i32 (%"class.icu_69::RuleBasedBreakIterator"*)* @_ZN6icu_6922RuleBasedBreakIterator4lastEv to i8*), i8* bitcast (i32 (%"class.icu_69::RuleBasedBreakIterator"*)* @_ZN6icu_6922RuleBasedBreakIterator8previousEv to i8*), i8* bitcast (i32 (%"class.icu_69::RuleBasedBreakIterator"*)* @_ZN6icu_6922RuleBasedBreakIterator4nextEv to i8*), i8* bitcast (i32 (%"class.icu_69::RuleBasedBreakIterator"*)* @_ZNK6icu_6922RuleBasedBreakIterator7currentEv to i8*), i8* bitcast (i32 (%"class.icu_69::RuleBasedBreakIterator"*, i32)* @_ZN6icu_6922RuleBasedBreakIterator9followingEi to i8*), i8* bitcast (i32 (%"class.icu_69::RuleBasedBreakIterator"*, i32)* @_ZN6icu_6922RuleBasedBreakIterator9precedingEi to i8*), i8* bitcast (i8 (%"class.icu_69::RuleBasedBreakIterator"*, i32)* @_ZN6icu_6922RuleBasedBreakIterator10isBoundaryEi to i8*), i8* bitcast (i32 (%"class.icu_69::RuleBasedBreakIterator"*, i32)* @_ZN6icu_6922RuleBasedBreakIterator4nextEi to i8*), i8* bitcast (i32 (%"class.icu_69::RuleBasedBreakIterator"*)* @_ZNK6icu_6922RuleBasedBreakIterator13getRuleStatusEv to i8*), i8* bitcast (i32 (%"class.icu_69::RuleBasedBreakIterator"*, i32*, i32, i32*)* @_ZN6icu_6922RuleBasedBreakIterator16getRuleStatusVecEPiiR10UErrorCode to i8*), i8* bitcast (%"class.icu_69::RuleBasedBreakIterator"* (%"class.icu_69::RuleBasedBreakIterator"*, i8*, i32*, i32*)* @_ZN6icu_6922RuleBasedBreakIterator17createBufferCloneEPvRiR10UErrorCode to i8*), i8* bitcast (%"class.icu_69::RuleBasedBreakIterator"* (%"class.icu_69::RuleBasedBreakIterator"*, %struct.UText*, i32*)* @_ZN6icu_6922RuleBasedBreakIterator16refreshInputTextEP5UTextR10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::RuleBasedBreakIterator"*)* @_ZNK6icu_6922RuleBasedBreakIterator8hashCodeEv to i8*), i8* bitcast (%"class.icu_69::UnicodeString"* (%"class.icu_69::RuleBasedBreakIterator"*)* @_ZNK6icu_6922RuleBasedBreakIterator8getRulesEv to i8*), i8* bitcast (i8* (%"class.icu_69::RuleBasedBreakIterator"*, i32*)* @_ZN6icu_6922RuleBasedBreakIterator14getBinaryRulesERj to i8*)] }, align 8
@_ZZN6icu_6922RuleBasedBreakIterator4initER10UErrorCodeE16initializedUText = internal unnamed_addr constant %struct.UText { i32 878368812, i32 0, i32 0, i32 144, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0, i16* null, %struct.UTextFuncs* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i64 0, i32 0, i32 0, i64 0, i32 0, i32 0 }, align 8
@_ZL23gLanguageBreakFactories = internal unnamed_addr global %"class.icu_69::UStack"* null, align 8
@_ZL12gEmptyString = internal unnamed_addr global %"class.icu_69::UnicodeString"* null, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN6icu_6922RuleBasedBreakIteratorE = hidden constant [34 x i8] c"N6icu_6922RuleBasedBreakIteratorE\00", align 1
@_ZTIN6icu_6913BreakIteratorE = external constant i8*
@_ZTIN6icu_6922RuleBasedBreakIteratorE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @_ZTSN6icu_6922RuleBasedBreakIteratorE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN6icu_6913BreakIteratorE to i8*) }, align 8
@_ZTVN6icu_6913UnicodeStringE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZL31gLanguageBreakFactoriesInitOnce = internal global { { { i32 } }, i32 } zeroinitializer, align 4
@_ZL13gRBBIInitOnce = internal global { { { i32 } }, i32 } zeroinitializer, align 4

@_ZN6icu_6922RuleBasedBreakIteratorC1EPNS_14RBBIDataHeaderER10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::RuleBasedBreakIterator"*, %"struct.icu_69::RBBIDataHeader"*, i32*), void (%"class.icu_69::RuleBasedBreakIterator"*, %"struct.icu_69::RBBIDataHeader"*, i32*)* @_ZN6icu_6922RuleBasedBreakIteratorC2EPNS_14RBBIDataHeaderER10UErrorCode
@_ZN6icu_6922RuleBasedBreakIteratorC1EPKhjR10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::RuleBasedBreakIterator"*, i8*, i32, i32*), void (%"class.icu_69::RuleBasedBreakIterator"*, i8*, i32, i32*)* @_ZN6icu_6922RuleBasedBreakIteratorC2EPKhjR10UErrorCode
@_ZN6icu_6922RuleBasedBreakIteratorC1EP11UDataMemoryR10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::RuleBasedBreakIterator"*, %struct.UDataMemory*, i32*), void (%"class.icu_69::RuleBasedBreakIterator"*, %struct.UDataMemory*, i32*)* @_ZN6icu_6922RuleBasedBreakIteratorC2EP11UDataMemoryR10UErrorCode
@_ZN6icu_6922RuleBasedBreakIteratorC1ERKNS_13UnicodeStringER11UParseErrorR10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::UnicodeString"*, %struct.UParseError*, i32*), void (%"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::UnicodeString"*, %struct.UParseError*, i32*)* @_ZN6icu_6922RuleBasedBreakIteratorC2ERKNS_13UnicodeStringER11UParseErrorR10UErrorCode
@_ZN6icu_6922RuleBasedBreakIteratorC1Ev = hidden unnamed_addr alias void (%"class.icu_69::RuleBasedBreakIterator"*), void (%"class.icu_69::RuleBasedBreakIterator"*)* @_ZN6icu_6922RuleBasedBreakIteratorC2Ev
@_ZN6icu_6922RuleBasedBreakIteratorC1ERKS0_ = hidden unnamed_addr alias void (%"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"*), void (%"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"*)* @_ZN6icu_6922RuleBasedBreakIteratorC2ERKS0_
@_ZN6icu_6922RuleBasedBreakIteratorD1Ev = hidden unnamed_addr alias void (%"class.icu_69::RuleBasedBreakIterator"*), void (%"class.icu_69::RuleBasedBreakIterator"*)* @_ZN6icu_6922RuleBasedBreakIteratorD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i8* @_ZN6icu_6922RuleBasedBreakIterator16getStaticClassIDEv() local_unnamed_addr #0 align 2 {
  ret i8* @_ZZN6icu_6922RuleBasedBreakIterator16getStaticClassIDEvE7classID
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i8* @_ZNK6icu_6922RuleBasedBreakIterator17getDynamicClassIDEv(%"class.icu_69::RuleBasedBreakIterator"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i8* @_ZZN6icu_6922RuleBasedBreakIterator16getStaticClassIDEvE7classID
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIteratorC2EPNS_14RBBIDataHeaderER10UErrorCode(%"class.icu_69::RuleBasedBreakIterator"*, %"struct.icu_69::RBBIDataHeader"*, i32* dereferenceable(4)) unnamed_addr #1 align 2 {
  %4 = alloca %"class.icu_69::UnicodeString", align 8
  %5 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to %"class.icu_69::BreakIterator"*
  tail call void @_ZN6icu_6913BreakIteratorC2Ev(%"class.icu_69::BreakIterator"* %5) #8
  %6 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN6icu_6922RuleBasedBreakIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 11
  %8 = bitcast %"class.icu_69::UnicodeString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %10, align 8
  call void @_ZN6icu_6923StringCharacterIteratorC1ERKNS_13UnicodeStringE(%"class.icu_69::StringCharacterIterator"* %7, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %4) #8
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #8
  call void @_ZN6icu_6922RuleBasedBreakIterator4initER10UErrorCode(%"class.icu_69::RuleBasedBreakIterator"* %0, i32* dereferenceable(4) %2)
  %11 = call i8* @_ZN6icu_697UMemorynwEm(i64 144) #8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %3
  %14 = bitcast i8* %11 to %"class.icu_69::RBBIDataWrapper"*
  call void @_ZN6icu_6915RBBIDataWrapperC1EPKNS_14RBBIDataHeaderER10UErrorCode(%"class.icu_69::RBBIDataWrapper"* nonnull %14, %"struct.icu_69::RBBIDataHeader"* %1, i32* dereferenceable(4) %2) #8
  br label %15

15:                                               ; preds = %13, %3
  %16 = phi %"class.icu_69::RBBIDataWrapper"* [ %14, %13 ], [ null, %3 ]
  %17 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 2
  store %"class.icu_69::RBBIDataWrapper"* %16, %"class.icu_69::RBBIDataWrapper"** %17, align 8
  %18 = load i32, i32* %2, align 4
  %19 = icmp slt i32 %18, 1
  br i1 %19, label %20, label %37

20:                                               ; preds = %15
  %21 = icmp eq %"class.icu_69::RBBIDataWrapper"* %16, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %20
  store i32 7, i32* %2, align 4
  br label %37

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %16, i64 0, i32 1
  %25 = load %"struct.icu_69::RBBIStateTable"*, %"struct.icu_69::RBBIStateTable"** %24, align 8
  %26 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %25, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %23
  %30 = zext i32 %27 to i64
  %31 = shl nuw nsw i64 %30, 2
  %32 = call noalias i8* @uprv_malloc_69(i64 %31) #9
  %33 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 13
  %34 = bitcast i32** %33 to i8**
  store i8* %32, i8** %34, align 8
  %35 = icmp eq i8* %32, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %29
  store i32 7, i32* %2, align 4
  br label %37

37:                                               ; preds = %23, %15, %29, %22, %36
  ret void
}

declare void @_ZN6icu_6913BreakIteratorC2Ev(%"class.icu_69::BreakIterator"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN6icu_6923StringCharacterIteratorC1ERKNS_13UnicodeStringE(%"class.icu_69::StringCharacterIterator"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIterator4initER10UErrorCode(%"class.icu_69::RuleBasedBreakIterator"*, i32* dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 10
  store %"class.icu_69::CharacterIterator"* null, %"class.icu_69::CharacterIterator"** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 12
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 5
  %7 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 6
  %8 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 13
  store i32* null, i32** %8, align 8
  %9 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1
  %10 = bitcast %struct.UText* %9 to i8*
  %11 = bitcast %"class.icu_69::RBBIDataWrapper"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 52, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 bitcast (%struct.UText* @_ZZN6icu_6922RuleBasedBreakIterator4initER10UErrorCodeE16initializedUText to i8*), i64 144, i1 false)
  %12 = load i32, i32* %1, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %36

14:                                               ; preds = %2
  %15 = tail call %struct.UText* @utext_openUChars_69(%struct.UText* %9, i16* null, i64 0, i32* %1) #8
  %16 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 64) #8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast i8* %16 to %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*
  tail call void @_ZN6icu_6922RuleBasedBreakIterator15DictionaryCacheC1EPS0_R10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* nonnull %19, %"class.icu_69::RuleBasedBreakIterator"* %0, i32* dereferenceable(4) %1) #8
  br label %20

20:                                               ; preds = %18, %14
  %21 = phi %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* [ %19, %18 ], [ null, %14 ]
  store %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %21, %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"** %7, align 8
  %22 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 832) #8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = bitcast i8* %22 to %"class.icu_69::RuleBasedBreakIterator::BreakCache"*
  tail call void @_ZN6icu_6922RuleBasedBreakIterator10BreakCacheC1EPS0_R10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* nonnull %25, %"class.icu_69::RuleBasedBreakIterator"* %0, i32* dereferenceable(4) %1) #8
  br label %26

26:                                               ; preds = %24, %20
  %27 = phi %"class.icu_69::RuleBasedBreakIterator::BreakCache"* [ %25, %24 ], [ null, %20 ]
  store %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %27, %"class.icu_69::RuleBasedBreakIterator::BreakCache"** %6, align 8
  %28 = load i32, i32* %1, align 4
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %26
  %31 = load %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*, %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"** %7, align 8
  %32 = icmp eq %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %31, null
  %33 = icmp eq %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %27, null
  %34 = or i1 %33, %32
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  store i32 7, i32* %1, align 4
  br label %36

36:                                               ; preds = %30, %26, %2, %35
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZN6icu_697UMemorynwEm(i64) local_unnamed_addr #4

declare void @_ZN6icu_6915RBBIDataWrapperC1EPKNS_14RBBIDataHeaderER10UErrorCode(%"class.icu_69::RBBIDataWrapper"*, %"struct.icu_69::RBBIDataHeader"*, i32* dereferenceable(4)) unnamed_addr #2

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIteratorC2EPKhjR10UErrorCode(%"class.icu_69::RuleBasedBreakIterator"*, i8*, i32, i32* dereferenceable(4)) unnamed_addr #1 align 2 {
  %5 = alloca %"class.icu_69::UnicodeString", align 8
  %6 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to %"class.icu_69::BreakIterator"*
  tail call void @_ZN6icu_6913BreakIteratorC2Ev(%"class.icu_69::BreakIterator"* %6) #8
  %7 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN6icu_6922RuleBasedBreakIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 11
  %9 = bitcast %"class.icu_69::UnicodeString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %5, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %11, align 8
  call void @_ZN6icu_6923StringCharacterIteratorC1ERKNS_13UnicodeStringE(%"class.icu_69::StringCharacterIterator"* %8, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %5) #8
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #8
  call void @_ZN6icu_6922RuleBasedBreakIterator4initER10UErrorCode(%"class.icu_69::RuleBasedBreakIterator"* %0, i32* dereferenceable(4) %3)
  %12 = load i32, i32* %3, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %53

14:                                               ; preds = %4
  %15 = icmp eq i8* %1, null
  %16 = icmp ult i32 %2, 80
  %17 = or i1 %15, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  store i32 1, i32* %3, align 4
  br label %53

19:                                               ; preds = %14
  %20 = bitcast i8* %1 to %"struct.icu_69::RBBIDataHeader"*
  %21 = getelementptr inbounds i8, i8* %1, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = icmp ugt i32 %23, %2
  br i1 %24, label %25, label %26

25:                                               ; preds = %19
  store i32 1, i32* %3, align 4
  br label %53

26:                                               ; preds = %19
  %27 = call i8* @_ZN6icu_697UMemorynwEm(i64 144) #8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %26
  %30 = bitcast i8* %27 to %"class.icu_69::RBBIDataWrapper"*
  call void @_ZN6icu_6915RBBIDataWrapperC1EPKNS_14RBBIDataHeaderENS0_10EDontAdoptER10UErrorCode(%"class.icu_69::RBBIDataWrapper"* nonnull %30, %"struct.icu_69::RBBIDataHeader"* nonnull %20, i32 0, i32* dereferenceable(4) %3) #8
  br label %31

31:                                               ; preds = %29, %26
  %32 = phi %"class.icu_69::RBBIDataWrapper"* [ %30, %29 ], [ null, %26 ]
  %33 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 2
  store %"class.icu_69::RBBIDataWrapper"* %32, %"class.icu_69::RBBIDataWrapper"** %33, align 8
  %34 = load i32, i32* %3, align 4
  %35 = icmp slt i32 %34, 1
  br i1 %35, label %36, label %53

36:                                               ; preds = %31
  %37 = icmp eq %"class.icu_69::RBBIDataWrapper"* %32, null
  br i1 %37, label %38, label %39

38:                                               ; preds = %36
  store i32 7, i32* %3, align 4
  br label %53

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %32, i64 0, i32 1
  %41 = load %"struct.icu_69::RBBIStateTable"*, %"struct.icu_69::RBBIStateTable"** %40, align 8
  %42 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %41, i64 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %39
  %46 = zext i32 %43 to i64
  %47 = shl nuw nsw i64 %46, 2
  %48 = call noalias i8* @uprv_malloc_69(i64 %47) #9
  %49 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 13
  %50 = bitcast i32** %49 to i8**
  store i8* %48, i8** %50, align 8
  %51 = icmp eq i8* %48, null
  br i1 %51, label %52, label %53

52:                                               ; preds = %45
  store i32 7, i32* %3, align 4
  br label %53

53:                                               ; preds = %25, %38, %52, %31, %39, %45, %4, %18
  ret void
}

declare void @_ZN6icu_6915RBBIDataWrapperC1EPKNS_14RBBIDataHeaderENS0_10EDontAdoptER10UErrorCode(%"class.icu_69::RBBIDataWrapper"*, %"struct.icu_69::RBBIDataHeader"*, i32, i32* dereferenceable(4)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIteratorC2EP11UDataMemoryR10UErrorCode(%"class.icu_69::RuleBasedBreakIterator"*, %struct.UDataMemory*, i32* dereferenceable(4)) unnamed_addr #1 align 2 {
  %4 = alloca %"class.icu_69::UnicodeString", align 8
  %5 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to %"class.icu_69::BreakIterator"*
  tail call void @_ZN6icu_6913BreakIteratorC2Ev(%"class.icu_69::BreakIterator"* %5) #8
  %6 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN6icu_6922RuleBasedBreakIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 11
  %8 = bitcast %"class.icu_69::UnicodeString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %10, align 8
  call void @_ZN6icu_6923StringCharacterIteratorC1ERKNS_13UnicodeStringE(%"class.icu_69::StringCharacterIterator"* %7, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %4) #8
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #8
  call void @_ZN6icu_6922RuleBasedBreakIterator4initER10UErrorCode(%"class.icu_69::RuleBasedBreakIterator"* %0, i32* dereferenceable(4) %2)
  %11 = call i8* @_ZN6icu_697UMemorynwEm(i64 144) #8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %3
  %14 = bitcast i8* %11 to %"class.icu_69::RBBIDataWrapper"*
  call void @_ZN6icu_6915RBBIDataWrapperC1EP11UDataMemoryR10UErrorCode(%"class.icu_69::RBBIDataWrapper"* nonnull %14, %struct.UDataMemory* %1, i32* dereferenceable(4) %2) #8
  br label %15

15:                                               ; preds = %13, %3
  %16 = phi %"class.icu_69::RBBIDataWrapper"* [ %14, %13 ], [ null, %3 ]
  %17 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 2
  store %"class.icu_69::RBBIDataWrapper"* %16, %"class.icu_69::RBBIDataWrapper"** %17, align 8
  %18 = load i32, i32* %2, align 4
  %19 = icmp slt i32 %18, 1
  br i1 %19, label %20, label %37

20:                                               ; preds = %15
  %21 = icmp eq %"class.icu_69::RBBIDataWrapper"* %16, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %20
  store i32 7, i32* %2, align 4
  br label %37

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %16, i64 0, i32 1
  %25 = load %"struct.icu_69::RBBIStateTable"*, %"struct.icu_69::RBBIStateTable"** %24, align 8
  %26 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %25, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %23
  %30 = zext i32 %27 to i64
  %31 = shl nuw nsw i64 %30, 2
  %32 = call noalias i8* @uprv_malloc_69(i64 %31) #9
  %33 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 13
  %34 = bitcast i32** %33 to i8**
  store i8* %32, i8** %34, align 8
  %35 = icmp eq i8* %32, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %29
  store i32 7, i32* %2, align 4
  br label %37

37:                                               ; preds = %23, %15, %29, %22, %36
  ret void
}

declare void @_ZN6icu_6915RBBIDataWrapperC1EP11UDataMemoryR10UErrorCode(%"class.icu_69::RBBIDataWrapper"*, %struct.UDataMemory*, i32* dereferenceable(4)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIteratorC2ERKNS_13UnicodeStringER11UParseErrorR10UErrorCode(%"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::UnicodeString"* dereferenceable(64), %struct.UParseError* dereferenceable(72), i32* dereferenceable(4)) unnamed_addr #1 align 2 {
  %5 = alloca %"class.icu_69::UnicodeString", align 8
  %6 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to %"class.icu_69::BreakIterator"*
  tail call void @_ZN6icu_6913BreakIteratorC2Ev(%"class.icu_69::BreakIterator"* %6) #8
  %7 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN6icu_6922RuleBasedBreakIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 11
  %9 = bitcast %"class.icu_69::UnicodeString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %5, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %11, align 8
  call void @_ZN6icu_6923StringCharacterIteratorC1ERKNS_13UnicodeStringE(%"class.icu_69::StringCharacterIterator"* %8, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %5) #8
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #8
  call void @_ZN6icu_6922RuleBasedBreakIterator4initER10UErrorCode(%"class.icu_69::RuleBasedBreakIterator"* %0, i32* dereferenceable(4) %3)
  %12 = load i32, i32* %3, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %27

14:                                               ; preds = %4
  %15 = call %"class.icu_69::BreakIterator"* @_ZN6icu_6915RBBIRuleBuilder28createRuleBasedBreakIteratorERKNS_13UnicodeStringEP11UParseErrorR10UErrorCode(%"class.icu_69::UnicodeString"* dereferenceable(64) %1, %struct.UParseError* %2, i32* dereferenceable(4) %3) #8
  %16 = bitcast %"class.icu_69::BreakIterator"* %15 to %"class.icu_69::RuleBasedBreakIterator"*
  %17 = load i32, i32* %3, align 4
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %27, label %19

19:                                               ; preds = %14
  %20 = call dereferenceable(648) %"class.icu_69::RuleBasedBreakIterator"* @_ZN6icu_6922RuleBasedBreakIteratoraSERKS0_(%"class.icu_69::RuleBasedBreakIterator"* %0, %"class.icu_69::RuleBasedBreakIterator"* dereferenceable(648) %16)
  %21 = icmp eq %"class.icu_69::BreakIterator"* %15, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = bitcast %"class.icu_69::BreakIterator"* %15 to void (%"class.icu_69::RuleBasedBreakIterator"*)***
  %24 = load void (%"class.icu_69::RuleBasedBreakIterator"*)**, void (%"class.icu_69::RuleBasedBreakIterator"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.icu_69::RuleBasedBreakIterator"*)*, void (%"class.icu_69::RuleBasedBreakIterator"*)** %24, i64 1
  %26 = load void (%"class.icu_69::RuleBasedBreakIterator"*)*, void (%"class.icu_69::RuleBasedBreakIterator"*)** %25, align 8
  call void %26(%"class.icu_69::RuleBasedBreakIterator"* nonnull %16) #8
  br label %27

27:                                               ; preds = %22, %19, %14, %4
  ret void
}

declare %"class.icu_69::BreakIterator"* @_ZN6icu_6915RBBIRuleBuilder28createRuleBasedBreakIteratorERKNS_13UnicodeStringEP11UParseErrorR10UErrorCode(%"class.icu_69::UnicodeString"* dereferenceable(64), %struct.UParseError*, i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(648) %"class.icu_69::RuleBasedBreakIterator"* @_ZN6icu_6922RuleBasedBreakIteratoraSERKS0_(%"class.icu_69::RuleBasedBreakIterator"* returned, %"class.icu_69::RuleBasedBreakIterator"* dereferenceable(648)) local_unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = icmp eq %"class.icu_69::RuleBasedBreakIterator"* %0, %1
  br i1 %4, label %94, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to %"class.icu_69::BreakIterator"*
  %7 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %1 to %"class.icu_69::BreakIterator"*
  %8 = tail call dereferenceable(328) %"class.icu_69::BreakIterator"* @_ZN6icu_6913BreakIteratoraSERKS0_(%"class.icu_69::BreakIterator"* %6, %"class.icu_69::BreakIterator"* dereferenceable(328) %7) #8
  %9 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 7
  %10 = load %"class.icu_69::UStack"*, %"class.icu_69::UStack"** %9, align 8
  %11 = icmp eq %"class.icu_69::UStack"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.icu_69::UStack"* %10 to void (%"class.icu_69::UStack"*)***
  %14 = load void (%"class.icu_69::UStack"*)**, void (%"class.icu_69::UStack"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.icu_69::UStack"*)*, void (%"class.icu_69::UStack"*)** %14, i64 1
  %16 = load void (%"class.icu_69::UStack"*)*, void (%"class.icu_69::UStack"*)** %15, align 8
  tail call void %16(%"class.icu_69::UStack"* nonnull %10) #8
  store %"class.icu_69::UStack"* null, %"class.icu_69::UStack"** %9, align 8
  br label %17

17:                                               ; preds = %5, %12
  %18 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #8
  store i32 0, i32* %3, align 4
  %19 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %1, i64 0, i32 1
  %21 = call %struct.UText* @utext_clone_69(%struct.UText* %19, %struct.UText* %20, i8 signext 0, i8 signext 1, i32* nonnull %3) #8
  %22 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 10
  %23 = load %"class.icu_69::CharacterIterator"*, %"class.icu_69::CharacterIterator"** %22, align 8
  %24 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 11
  %25 = getelementptr inbounds %"class.icu_69::StringCharacterIterator", %"class.icu_69::StringCharacterIterator"* %24, i64 0, i32 0, i32 0
  %26 = icmp eq %"class.icu_69::CharacterIterator"* %23, %25
  %27 = icmp eq %"class.icu_69::CharacterIterator"* %23, null
  %28 = or i1 %26, %27
  br i1 %28, label %34, label %29

29:                                               ; preds = %17
  %30 = bitcast %"class.icu_69::CharacterIterator"* %23 to void (%"class.icu_69::CharacterIterator"*)***
  %31 = load void (%"class.icu_69::CharacterIterator"*)**, void (%"class.icu_69::CharacterIterator"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.icu_69::CharacterIterator"*)*, void (%"class.icu_69::CharacterIterator"*)** %31, i64 1
  %33 = load void (%"class.icu_69::CharacterIterator"*)*, void (%"class.icu_69::CharacterIterator"*)** %32, align 8
  call void %33(%"class.icu_69::CharacterIterator"* nonnull %23) #8
  br label %34

34:                                               ; preds = %17, %29
  store %"class.icu_69::CharacterIterator"* %25, %"class.icu_69::CharacterIterator"** %22, align 8
  %35 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %1, i64 0, i32 10
  %36 = load %"class.icu_69::CharacterIterator"*, %"class.icu_69::CharacterIterator"** %35, align 8
  %37 = icmp eq %"class.icu_69::CharacterIterator"* %36, null
  %38 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %1, i64 0, i32 11, i32 0, i32 0
  %39 = icmp eq %"class.icu_69::CharacterIterator"* %36, %38
  %40 = or i1 %37, %39
  br i1 %40, label %47, label %41

41:                                               ; preds = %34
  %42 = bitcast %"class.icu_69::CharacterIterator"* %36 to %"class.icu_69::CharacterIterator"* (%"class.icu_69::CharacterIterator"*)***
  %43 = load %"class.icu_69::CharacterIterator"* (%"class.icu_69::CharacterIterator"*)**, %"class.icu_69::CharacterIterator"* (%"class.icu_69::CharacterIterator"*)*** %42, align 8
  %44 = getelementptr inbounds %"class.icu_69::CharacterIterator"* (%"class.icu_69::CharacterIterator"*)*, %"class.icu_69::CharacterIterator"* (%"class.icu_69::CharacterIterator"*)** %43, i64 8
  %45 = load %"class.icu_69::CharacterIterator"* (%"class.icu_69::CharacterIterator"*)*, %"class.icu_69::CharacterIterator"* (%"class.icu_69::CharacterIterator"*)** %44, align 8
  %46 = call %"class.icu_69::CharacterIterator"* %45(%"class.icu_69::CharacterIterator"* nonnull %36) #8
  store %"class.icu_69::CharacterIterator"* %46, %"class.icu_69::CharacterIterator"** %22, align 8
  br label %47

47:                                               ; preds = %34, %41
  %48 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %1, i64 0, i32 11
  %49 = call dereferenceable(96) %"class.icu_69::StringCharacterIterator"* @_ZN6icu_6923StringCharacterIteratoraSERKS0_(%"class.icu_69::StringCharacterIterator"* %24, %"class.icu_69::StringCharacterIterator"* dereferenceable(96) %48) #8
  %50 = load %"class.icu_69::CharacterIterator"*, %"class.icu_69::CharacterIterator"** %22, align 8
  %51 = icmp eq %"class.icu_69::CharacterIterator"* %50, null
  br i1 %51, label %52, label %53

52:                                               ; preds = %47
  store %"class.icu_69::CharacterIterator"* %25, %"class.icu_69::CharacterIterator"** %22, align 8
  br label %53

53:                                               ; preds = %52, %47
  %54 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 2
  %55 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %54, align 8
  %56 = icmp eq %"class.icu_69::RBBIDataWrapper"* %55, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %53
  call void @_ZN6icu_6915RBBIDataWrapper15removeReferenceEv(%"class.icu_69::RBBIDataWrapper"* nonnull %55) #8
  store %"class.icu_69::RBBIDataWrapper"* null, %"class.icu_69::RBBIDataWrapper"** %54, align 8
  br label %58

58:                                               ; preds = %53, %57
  %59 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %1, i64 0, i32 2
  %60 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %59, align 8
  %61 = icmp eq %"class.icu_69::RBBIDataWrapper"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = call %"class.icu_69::RBBIDataWrapper"* @_ZN6icu_6915RBBIDataWrapper12addReferenceEv(%"class.icu_69::RBBIDataWrapper"* nonnull %60) #8
  store %"class.icu_69::RBBIDataWrapper"* %63, %"class.icu_69::RBBIDataWrapper"** %54, align 8
  br label %64

64:                                               ; preds = %58, %62
  %65 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 13
  %66 = bitcast i32** %65 to i8**
  %67 = load i8*, i8** %66, align 8
  call void @uprv_free_69(i8* %67) #8
  store i32* null, i32** %65, align 8
  %68 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %54, align 8
  %69 = icmp eq %"class.icu_69::RBBIDataWrapper"* %68, null
  br i1 %69, label %80, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %68, i64 0, i32 1
  %72 = load %"struct.icu_69::RBBIStateTable"*, %"struct.icu_69::RBBIStateTable"** %71, align 8
  %73 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %72, i64 0, i32 3
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %70
  %77 = zext i32 %74 to i64
  %78 = shl nuw nsw i64 %77, 2
  %79 = call noalias i8* @uprv_malloc_69(i64 %78) #9
  store i8* %79, i8** %66, align 8
  br label %80

80:                                               ; preds = %70, %64, %76
  %81 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %1, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 3
  store i32 %82, i32* %83, align 8
  %84 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %1, i64 0, i32 4
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 4
  store i32 %85, i32* %86, align 4
  %87 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %1, i64 0, i32 12
  %88 = load i8, i8* %87, align 8
  %89 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 12
  store i8 %88, i8* %89, align 8
  %90 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 5
  %91 = load %"class.icu_69::RuleBasedBreakIterator::BreakCache"*, %"class.icu_69::RuleBasedBreakIterator::BreakCache"** %90, align 8
  call void @_ZN6icu_6922RuleBasedBreakIterator10BreakCache5resetEii(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %91, i32 %82, i32 %85) #8
  %92 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 6
  %93 = load %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*, %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"** %92, align 8
  call void @_ZN6icu_6922RuleBasedBreakIterator15DictionaryCache5resetEv(%"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %93) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #8
  br label %94

94:                                               ; preds = %2, %80
  ret %"class.icu_69::RuleBasedBreakIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIteratorC2Ev(%"class.icu_69::RuleBasedBreakIterator"*) unnamed_addr #1 align 2 {
  %2 = alloca %"class.icu_69::UnicodeString", align 8
  %3 = alloca i32, align 4
  %4 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to %"class.icu_69::BreakIterator"*
  tail call void @_ZN6icu_6913BreakIteratorC2Ev(%"class.icu_69::BreakIterator"* %4) #8
  %5 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN6icu_6922RuleBasedBreakIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 11
  %7 = bitcast %"class.icu_69::UnicodeString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %9, align 8
  call void @_ZN6icu_6923StringCharacterIteratorC1ERKNS_13UnicodeStringE(%"class.icu_69::StringCharacterIterator"* %6, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %2) #8
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7) #8
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #8
  store i32 0, i32* %3, align 4
  call void @_ZN6icu_6922RuleBasedBreakIterator4initER10UErrorCode(%"class.icu_69::RuleBasedBreakIterator"* %0, i32* nonnull dereferenceable(4) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIteratorC2ERKS0_(%"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"* dereferenceable(648)) unnamed_addr #1 align 2 {
  %3 = alloca %"class.icu_69::UnicodeString", align 8
  %4 = alloca i32, align 4
  %5 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to %"class.icu_69::BreakIterator"*
  %6 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %1 to %"class.icu_69::BreakIterator"*
  tail call void @_ZN6icu_6913BreakIteratorC2ERKS0_(%"class.icu_69::BreakIterator"* %5, %"class.icu_69::BreakIterator"* dereferenceable(328) %6) #8
  %7 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN6icu_6922RuleBasedBreakIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 11
  %9 = bitcast %"class.icu_69::UnicodeString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %11, align 8
  call void @_ZN6icu_6923StringCharacterIteratorC1ERKNS_13UnicodeStringE(%"class.icu_69::StringCharacterIterator"* %8, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %3) #8
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #8
  %12 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #8
  store i32 0, i32* %4, align 4
  call void @_ZN6icu_6922RuleBasedBreakIterator4initER10UErrorCode(%"class.icu_69::RuleBasedBreakIterator"* %0, i32* nonnull dereferenceable(4) %4)
  %13 = call dereferenceable(648) %"class.icu_69::RuleBasedBreakIterator"* @_ZN6icu_6922RuleBasedBreakIteratoraSERKS0_(%"class.icu_69::RuleBasedBreakIterator"* %0, %"class.icu_69::RuleBasedBreakIterator"* dereferenceable(648) %1)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #8
  ret void
}

declare void @_ZN6icu_6913BreakIteratorC2ERKS0_(%"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"* dereferenceable(328)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIteratorD2Ev(%"class.icu_69::RuleBasedBreakIterator"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN6icu_6922RuleBasedBreakIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 10
  %4 = load %"class.icu_69::CharacterIterator"*, %"class.icu_69::CharacterIterator"** %3, align 8
  %5 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 11
  %6 = getelementptr inbounds %"class.icu_69::StringCharacterIterator", %"class.icu_69::StringCharacterIterator"* %5, i64 0, i32 0, i32 0
  %7 = icmp eq %"class.icu_69::CharacterIterator"* %4, %6
  %8 = icmp eq %"class.icu_69::CharacterIterator"* %4, null
  %9 = or i1 %7, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.icu_69::CharacterIterator"* %4 to void (%"class.icu_69::CharacterIterator"*)***
  %12 = load void (%"class.icu_69::CharacterIterator"*)**, void (%"class.icu_69::CharacterIterator"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.icu_69::CharacterIterator"*)*, void (%"class.icu_69::CharacterIterator"*)** %12, i64 1
  %14 = load void (%"class.icu_69::CharacterIterator"*)*, void (%"class.icu_69::CharacterIterator"*)** %13, align 8
  tail call void %14(%"class.icu_69::CharacterIterator"* nonnull %4) #8
  br label %15

15:                                               ; preds = %1, %10
  store %"class.icu_69::CharacterIterator"* null, %"class.icu_69::CharacterIterator"** %3, align 8
  %16 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1
  %17 = tail call %struct.UText* @utext_close_69(%struct.UText* %16) #8
  %18 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 2
  %19 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %18, align 8
  %20 = icmp eq %"class.icu_69::RBBIDataWrapper"* %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %15
  tail call void @_ZN6icu_6915RBBIDataWrapper15removeReferenceEv(%"class.icu_69::RBBIDataWrapper"* nonnull %19) #8
  store %"class.icu_69::RBBIDataWrapper"* null, %"class.icu_69::RBBIDataWrapper"** %18, align 8
  br label %22

22:                                               ; preds = %15, %21
  %23 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 5
  %24 = load %"class.icu_69::RuleBasedBreakIterator::BreakCache"*, %"class.icu_69::RuleBasedBreakIterator::BreakCache"** %23, align 8
  %25 = icmp eq %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %24 to void (%"class.icu_69::RuleBasedBreakIterator::BreakCache"*)***
  %28 = load void (%"class.icu_69::RuleBasedBreakIterator::BreakCache"*)**, void (%"class.icu_69::RuleBasedBreakIterator::BreakCache"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.icu_69::RuleBasedBreakIterator::BreakCache"*)*, void (%"class.icu_69::RuleBasedBreakIterator::BreakCache"*)** %28, i64 1
  %30 = load void (%"class.icu_69::RuleBasedBreakIterator::BreakCache"*)*, void (%"class.icu_69::RuleBasedBreakIterator::BreakCache"*)** %29, align 8
  tail call void %30(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* nonnull %24) #8
  br label %31

31:                                               ; preds = %26, %22
  store %"class.icu_69::RuleBasedBreakIterator::BreakCache"* null, %"class.icu_69::RuleBasedBreakIterator::BreakCache"** %23, align 8
  %32 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 6
  %33 = load %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*, %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"** %32, align 8
  %34 = icmp eq %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  tail call void @_ZN6icu_6922RuleBasedBreakIterator15DictionaryCacheD1Ev(%"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* nonnull %33) #8
  %36 = bitcast %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %33 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* nonnull %36) #8
  br label %37

37:                                               ; preds = %35, %31
  store %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* null, %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"** %32, align 8
  %38 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 7
  %39 = load %"class.icu_69::UStack"*, %"class.icu_69::UStack"** %38, align 8
  %40 = icmp eq %"class.icu_69::UStack"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.icu_69::UStack"* %39 to void (%"class.icu_69::UStack"*)***
  %43 = load void (%"class.icu_69::UStack"*)**, void (%"class.icu_69::UStack"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.icu_69::UStack"*)*, void (%"class.icu_69::UStack"*)** %43, i64 1
  %45 = load void (%"class.icu_69::UStack"*)*, void (%"class.icu_69::UStack"*)** %44, align 8
  tail call void %45(%"class.icu_69::UStack"* nonnull %39) #8
  br label %46

46:                                               ; preds = %41, %37
  store %"class.icu_69::UStack"* null, %"class.icu_69::UStack"** %38, align 8
  %47 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 8
  %48 = load %"class.icu_69::UnhandledEngine"*, %"class.icu_69::UnhandledEngine"** %47, align 8
  %49 = icmp eq %"class.icu_69::UnhandledEngine"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.icu_69::UnhandledEngine"* %48 to void (%"class.icu_69::UnhandledEngine"*)***
  %52 = load void (%"class.icu_69::UnhandledEngine"*)**, void (%"class.icu_69::UnhandledEngine"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.icu_69::UnhandledEngine"*)*, void (%"class.icu_69::UnhandledEngine"*)** %52, i64 1
  %54 = load void (%"class.icu_69::UnhandledEngine"*)*, void (%"class.icu_69::UnhandledEngine"*)** %53, align 8
  tail call void %54(%"class.icu_69::UnhandledEngine"* nonnull %48) #8
  br label %55

55:                                               ; preds = %50, %46
  store %"class.icu_69::UnhandledEngine"* null, %"class.icu_69::UnhandledEngine"** %47, align 8
  %56 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 13
  %57 = bitcast i32** %56 to i8**
  %58 = load i8*, i8** %57, align 8
  tail call void @uprv_free_69(i8* %58) #8
  store i32* null, i32** %56, align 8
  tail call void @_ZN6icu_6923StringCharacterIteratorD1Ev(%"class.icu_69::StringCharacterIterator"* %5) #8
  %59 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to %"class.icu_69::BreakIterator"*
  tail call void @_ZN6icu_6913BreakIteratorD2Ev(%"class.icu_69::BreakIterator"* %59) #8
  ret void
}

declare %struct.UText* @utext_close_69(%struct.UText*) local_unnamed_addr #2

declare void @_ZN6icu_6915RBBIDataWrapper15removeReferenceEv(%"class.icu_69::RBBIDataWrapper"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6icu_6922RuleBasedBreakIterator15DictionaryCacheD1Ev(%"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydlEPv(i8*) local_unnamed_addr #4

declare void @uprv_free_69(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6icu_6923StringCharacterIteratorD1Ev(%"class.icu_69::StringCharacterIterator"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_6913BreakIteratorD2Ev(%"class.icu_69::BreakIterator"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIteratorD0Ev(%"class.icu_69::RuleBasedBreakIterator"*) unnamed_addr #1 align 2 {
  tail call void @_ZN6icu_6922RuleBasedBreakIteratorD2Ev(%"class.icu_69::RuleBasedBreakIterator"* %0) #8
  %2 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %2) #8
  ret void
}

declare dereferenceable(328) %"class.icu_69::BreakIterator"* @_ZN6icu_6913BreakIteratoraSERKS0_(%"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"* dereferenceable(328)) local_unnamed_addr #2

declare %struct.UText* @utext_clone_69(%struct.UText*, %struct.UText*, i8 signext, i8 signext, i32*) local_unnamed_addr #2

declare dereferenceable(96) %"class.icu_69::StringCharacterIterator"* @_ZN6icu_6923StringCharacterIteratoraSERKS0_(%"class.icu_69::StringCharacterIterator"*, %"class.icu_69::StringCharacterIterator"* dereferenceable(96)) local_unnamed_addr #2

declare %"class.icu_69::RBBIDataWrapper"* @_ZN6icu_6915RBBIDataWrapper12addReferenceEv(%"class.icu_69::RBBIDataWrapper"*) local_unnamed_addr #2

declare void @_ZN6icu_6922RuleBasedBreakIterator10BreakCache5resetEii(%"class.icu_69::RuleBasedBreakIterator::BreakCache"*, i32, i32) local_unnamed_addr #2

declare void @_ZN6icu_6922RuleBasedBreakIterator15DictionaryCache5resetEv(%"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare %struct.UText* @utext_openUChars_69(%struct.UText*, i16*, i64, i32*) local_unnamed_addr #2

declare void @_ZN6icu_6922RuleBasedBreakIterator15DictionaryCacheC1EPS0_R10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*, %"class.icu_69::RuleBasedBreakIterator"*, i32* dereferenceable(4)) unnamed_addr #2

declare void @_ZN6icu_6922RuleBasedBreakIterator10BreakCacheC1EPS0_R10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"*, %"class.icu_69::RuleBasedBreakIterator"*, i32* dereferenceable(4)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::RuleBasedBreakIterator"* @_ZNK6icu_6922RuleBasedBreakIterator5cloneEv(%"class.icu_69::RuleBasedBreakIterator"*) unnamed_addr #1 align 2 {
  %2 = alloca %"class.icu_69::UnicodeString", align 8
  %3 = alloca i32, align 4
  %4 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 648) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = bitcast i8* %4 to %"class.icu_69::RuleBasedBreakIterator"*
  %8 = bitcast i8* %4 to %"class.icu_69::BreakIterator"*
  %9 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to %"class.icu_69::BreakIterator"*
  tail call void @_ZN6icu_6913BreakIteratorC2ERKS0_(%"class.icu_69::BreakIterator"* nonnull %8, %"class.icu_69::BreakIterator"* dereferenceable(328) %9) #8
  %10 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN6icu_6922RuleBasedBreakIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %4, i64 536
  %12 = bitcast i8* %11 to %"class.icu_69::StringCharacterIterator"*
  %13 = bitcast %"class.icu_69::UnicodeString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %13) #8
  %14 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %15, align 8
  call void @_ZN6icu_6923StringCharacterIteratorC1ERKNS_13UnicodeStringE(%"class.icu_69::StringCharacterIterator"* %12, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %2) #8
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %13) #8
  %16 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #8
  store i32 0, i32* %3, align 4
  call void @_ZN6icu_6922RuleBasedBreakIterator4initER10UErrorCode(%"class.icu_69::RuleBasedBreakIterator"* nonnull %7, i32* nonnull dereferenceable(4) %3) #8
  %17 = call dereferenceable(648) %"class.icu_69::RuleBasedBreakIterator"* @_ZN6icu_6922RuleBasedBreakIteratoraSERKS0_(%"class.icu_69::RuleBasedBreakIterator"* nonnull %7, %"class.icu_69::RuleBasedBreakIterator"* dereferenceable(648) %0) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #8
  br label %18

18:                                               ; preds = %6, %1
  %19 = phi %"class.icu_69::RuleBasedBreakIterator"* [ %7, %6 ], [ null, %1 ]
  ret %"class.icu_69::RuleBasedBreakIterator"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6922RuleBasedBreakIteratoreqERKNS_13BreakIteratorE(%"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::BreakIterator"* dereferenceable(328)) unnamed_addr #1 align 2 {
  %3 = icmp eq %"class.icu_69::RuleBasedBreakIterator"* %0, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @__cxa_bad_typeid() #10
  unreachable

5:                                                ; preds = %2
  %6 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to %"class.std::type_info"***
  %7 = load %"class.std::type_info"**, %"class.std::type_info"*** %6, align 8
  %8 = getelementptr inbounds %"class.std::type_info"*, %"class.std::type_info"** %7, i64 -1
  %9 = load %"class.std::type_info"*, %"class.std::type_info"** %8, align 8
  %10 = bitcast %"class.icu_69::BreakIterator"* %1 to %"class.std::type_info"***
  %11 = load %"class.std::type_info"**, %"class.std::type_info"*** %10, align 8
  %12 = getelementptr inbounds %"class.std::type_info"*, %"class.std::type_info"** %11, i64 -1
  %13 = load %"class.std::type_info"*, %"class.std::type_info"** %12, align 8
  %14 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %9, i64 0, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %13, i64 0, i32 1
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %15, %17
  br i1 %18, label %19, label %63

19:                                               ; preds = %5
  %20 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to %"class.icu_69::BreakIterator"*
  %21 = icmp eq %"class.icu_69::BreakIterator"* %20, %1
  br i1 %21, label %63, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"class.icu_69::BreakIterator", %"class.icu_69::BreakIterator"* %1, i64 1
  %25 = bitcast %"class.icu_69::BreakIterator"* %24 to %struct.UText*
  %26 = tail call signext i8 @utext_equals_69(%struct.UText* %23, %struct.UText* %25) #8
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %63, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 3
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.icu_69::BreakIterator", %"class.icu_69::BreakIterator"* %1, i64 1, i32 1, i64 144
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %30, %33
  br i1 %34, label %35, label %63

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 4
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.icu_69::BreakIterator", %"class.icu_69::BreakIterator"* %1, i64 1, i32 1, i64 148
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %37, %40
  br i1 %41, label %42, label %63

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 12
  %44 = load i8, i8* %43, align 8
  %45 = getelementptr inbounds %"class.icu_69::BreakIterator", %"class.icu_69::BreakIterator"* %1, i64 1, i32 2, i64 139
  %46 = load i8, i8* %45, align 8
  %47 = icmp eq i8 %44, %46
  br i1 %47, label %48, label %63

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.icu_69::BreakIterator", %"class.icu_69::BreakIterator"* %1, i64 1, i32 1, i64 136
  %50 = bitcast i8* %49 to %"class.icu_69::RBBIDataWrapper"**
  %51 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %50, align 8
  %52 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 2
  %53 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %52, align 8
  %54 = icmp eq %"class.icu_69::RBBIDataWrapper"* %51, %53
  br i1 %54, label %63, label %55

55:                                               ; preds = %48
  %56 = icmp eq %"class.icu_69::RBBIDataWrapper"* %53, null
  %57 = icmp eq %"class.icu_69::RBBIDataWrapper"* %51, null
  %58 = or i1 %57, %56
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = tail call signext i8 @_ZNK6icu_6915RBBIDataWrappereqERKS0_(%"class.icu_69::RBBIDataWrapper"* nonnull %51, %"class.icu_69::RBBIDataWrapper"* nonnull dereferenceable(144) %53) #8
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59, %55
  br label %63

63:                                               ; preds = %5, %62, %22, %42, %35, %28, %59, %48, %19
  %64 = phi i8 [ 0, %5 ], [ 1, %19 ], [ 0, %62 ], [ 0, %22 ], [ 0, %42 ], [ 0, %35 ], [ 0, %28 ], [ 1, %59 ], [ 1, %48 ]
  ret i8 %64
}

declare void @__cxa_bad_typeid() local_unnamed_addr

declare signext i8 @utext_equals_69(%struct.UText*, %struct.UText*) local_unnamed_addr #2

declare signext i8 @_ZNK6icu_6915RBBIDataWrappereqERKS0_(%"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"* dereferenceable(144)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6922RuleBasedBreakIterator8hashCodeEv(%"class.icu_69::RuleBasedBreakIterator"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 2
  %3 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %2, align 8
  %4 = icmp eq %"class.icu_69::RBBIDataWrapper"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @_ZN6icu_6915RBBIDataWrapper8hashCodeEv(%"class.icu_69::RBBIDataWrapper"* nonnull %3) #8
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i32 [ %6, %5 ], [ 0, %1 ]
  ret i32 %8
}

declare i32 @_ZN6icu_6915RBBIDataWrapper8hashCodeEv(%"class.icu_69::RBBIDataWrapper"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIterator7setTextEP5UTextR10UErrorCode(%"class.icu_69::RuleBasedBreakIterator"*, %struct.UText*, i32* dereferenceable(4)) unnamed_addr #1 align 2 {
  %4 = alloca %"class.icu_69::UnicodeString", align 8
  %5 = load i32, i32* %2, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %35

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 5
  %9 = load %"class.icu_69::RuleBasedBreakIterator::BreakCache"*, %"class.icu_69::RuleBasedBreakIterator::BreakCache"** %8, align 8
  tail call void @_ZN6icu_6922RuleBasedBreakIterator10BreakCache5resetEii(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %9, i32 0, i32 0) #8
  %10 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 6
  %11 = load %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*, %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"** %10, align 8
  tail call void @_ZN6icu_6922RuleBasedBreakIterator15DictionaryCache5resetEv(%"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %11) #8
  %12 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1
  %13 = tail call %struct.UText* @utext_clone_69(%struct.UText* %12, %struct.UText* %1, i8 signext 0, i8 signext 1, i32* %2) #8
  %14 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 11
  %15 = bitcast %"class.icu_69::UnicodeString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %17, align 8
  call void @_ZN6icu_6923StringCharacterIterator7setTextERKNS_13UnicodeStringE(%"class.icu_69::StringCharacterIterator"* %14, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %4) #8
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %15) #8
  %18 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 10
  %19 = load %"class.icu_69::CharacterIterator"*, %"class.icu_69::CharacterIterator"** %18, align 8
  %20 = getelementptr inbounds %"class.icu_69::StringCharacterIterator", %"class.icu_69::StringCharacterIterator"* %14, i64 0, i32 0, i32 0
  %21 = icmp eq %"class.icu_69::CharacterIterator"* %19, %20
  %22 = icmp eq %"class.icu_69::CharacterIterator"* %19, null
  %23 = or i1 %21, %22
  br i1 %23, label %29, label %24

24:                                               ; preds = %7
  %25 = bitcast %"class.icu_69::CharacterIterator"* %19 to void (%"class.icu_69::CharacterIterator"*)***
  %26 = load void (%"class.icu_69::CharacterIterator"*)**, void (%"class.icu_69::CharacterIterator"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.icu_69::CharacterIterator"*)*, void (%"class.icu_69::CharacterIterator"*)** %26, i64 1
  %28 = load void (%"class.icu_69::CharacterIterator"*)*, void (%"class.icu_69::CharacterIterator"*)** %27, align 8
  call void %28(%"class.icu_69::CharacterIterator"* nonnull %19) #8
  br label %29

29:                                               ; preds = %7, %24
  store %"class.icu_69::CharacterIterator"* %20, %"class.icu_69::CharacterIterator"** %18, align 8
  %30 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to i32 (%"class.icu_69::RuleBasedBreakIterator"*)***
  %31 = load i32 (%"class.icu_69::RuleBasedBreakIterator"*)**, i32 (%"class.icu_69::RuleBasedBreakIterator"*)*** %30, align 8
  %32 = getelementptr inbounds i32 (%"class.icu_69::RuleBasedBreakIterator"*)*, i32 (%"class.icu_69::RuleBasedBreakIterator"*)** %31, i64 10
  %33 = load i32 (%"class.icu_69::RuleBasedBreakIterator"*)*, i32 (%"class.icu_69::RuleBasedBreakIterator"*)** %32, align 8
  %34 = call i32 %33(%"class.icu_69::RuleBasedBreakIterator"* %0) #8
  br label %35

35:                                               ; preds = %3, %29
  ret void
}

declare void @_ZN6icu_6923StringCharacterIterator7setTextERKNS_13UnicodeStringE(%"class.icu_69::StringCharacterIterator"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UText* @_ZNK6icu_6922RuleBasedBreakIterator8getUTextEP5UTextR10UErrorCode(%"class.icu_69::RuleBasedBreakIterator"*, %struct.UText*, i32* dereferenceable(4)) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1
  %5 = tail call %struct.UText* @utext_clone_69(%struct.UText* %1, %struct.UText* %4, i8 signext 0, i8 signext 1, i32* %2) #8
  ret %struct.UText* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.icu_69::CharacterIterator"* @_ZNK6icu_6922RuleBasedBreakIterator7getTextEv(%"class.icu_69::RuleBasedBreakIterator"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 10
  %3 = load %"class.icu_69::CharacterIterator"*, %"class.icu_69::CharacterIterator"** %2, align 8
  ret %"class.icu_69::CharacterIterator"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIterator9adoptTextEPNS_17CharacterIteratorE(%"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::CharacterIterator"*) unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 10
  %5 = load %"class.icu_69::CharacterIterator"*, %"class.icu_69::CharacterIterator"** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 11, i32 0, i32 0
  %7 = icmp eq %"class.icu_69::CharacterIterator"* %5, %6
  %8 = icmp eq %"class.icu_69::CharacterIterator"* %5, null
  %9 = or i1 %7, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.icu_69::CharacterIterator"* %5 to void (%"class.icu_69::CharacterIterator"*)***
  %12 = load void (%"class.icu_69::CharacterIterator"*)**, void (%"class.icu_69::CharacterIterator"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.icu_69::CharacterIterator"*)*, void (%"class.icu_69::CharacterIterator"*)** %12, i64 1
  %14 = load void (%"class.icu_69::CharacterIterator"*)*, void (%"class.icu_69::CharacterIterator"*)** %13, align 8
  tail call void %14(%"class.icu_69::CharacterIterator"* nonnull %5) #8
  br label %15

15:                                               ; preds = %2, %10
  store %"class.icu_69::CharacterIterator"* %1, %"class.icu_69::CharacterIterator"** %4, align 8
  %16 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #8
  store i32 0, i32* %3, align 4
  %17 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 5
  %18 = load %"class.icu_69::RuleBasedBreakIterator::BreakCache"*, %"class.icu_69::RuleBasedBreakIterator::BreakCache"** %17, align 8
  tail call void @_ZN6icu_6922RuleBasedBreakIterator10BreakCache5resetEii(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %18, i32 0, i32 0) #8
  %19 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 6
  %20 = load %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*, %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"** %19, align 8
  tail call void @_ZN6icu_6922RuleBasedBreakIterator15DictionaryCache5resetEv(%"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %20) #8
  %21 = icmp eq %"class.icu_69::CharacterIterator"* %1, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.icu_69::CharacterIterator", %"class.icu_69::CharacterIterator"* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %22, %15
  %27 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1
  %28 = call %struct.UText* @utext_openUChars_69(%struct.UText* %27, i16* null, i64 0, i32* nonnull %3) #8
  br label %32

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1
  %31 = call %struct.UText* @utext_openCharacterIterator_69(%struct.UText* %30, %"class.icu_69::CharacterIterator"* nonnull %1, i32* nonnull %3) #8
  br label %32

32:                                               ; preds = %29, %26
  %33 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to i32 (%"class.icu_69::RuleBasedBreakIterator"*)***
  %34 = load i32 (%"class.icu_69::RuleBasedBreakIterator"*)**, i32 (%"class.icu_69::RuleBasedBreakIterator"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.icu_69::RuleBasedBreakIterator"*)*, i32 (%"class.icu_69::RuleBasedBreakIterator"*)** %34, i64 10
  %36 = load i32 (%"class.icu_69::RuleBasedBreakIterator"*)*, i32 (%"class.icu_69::RuleBasedBreakIterator"*)** %35, align 8
  %37 = call i32 %36(%"class.icu_69::RuleBasedBreakIterator"* %0) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #8
  ret void
}

declare %struct.UText* @utext_openCharacterIterator_69(%struct.UText*, %"class.icu_69::CharacterIterator"*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIterator7setTextERKNS_13UnicodeStringE(%"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  store i32 0, i32* %3, align 4
  %5 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 5
  %6 = load %"class.icu_69::RuleBasedBreakIterator::BreakCache"*, %"class.icu_69::RuleBasedBreakIterator::BreakCache"** %5, align 8
  tail call void @_ZN6icu_6922RuleBasedBreakIterator10BreakCache5resetEii(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %6, i32 0, i32 0) #8
  %7 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 6
  %8 = load %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"*, %"class.icu_69::RuleBasedBreakIterator::DictionaryCache"** %7, align 8
  tail call void @_ZN6icu_6922RuleBasedBreakIterator15DictionaryCache5resetEv(%"class.icu_69::RuleBasedBreakIterator::DictionaryCache"* %8) #8
  %9 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1
  %10 = call %struct.UText* @utext_openConstUnicodeString_69(%struct.UText* %9, %"class.icu_69::UnicodeString"* %1, i32* nonnull %3) #8
  %11 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 11
  call void @_ZN6icu_6923StringCharacterIterator7setTextERKNS_13UnicodeStringE(%"class.icu_69::StringCharacterIterator"* %11, %"class.icu_69::UnicodeString"* dereferenceable(64) %1) #8
  %12 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 10
  %13 = load %"class.icu_69::CharacterIterator"*, %"class.icu_69::CharacterIterator"** %12, align 8
  %14 = getelementptr inbounds %"class.icu_69::StringCharacterIterator", %"class.icu_69::StringCharacterIterator"* %11, i64 0, i32 0, i32 0
  %15 = icmp eq %"class.icu_69::CharacterIterator"* %13, %14
  %16 = icmp eq %"class.icu_69::CharacterIterator"* %13, null
  %17 = or i1 %15, %16
  br i1 %17, label %23, label %18

18:                                               ; preds = %2
  %19 = bitcast %"class.icu_69::CharacterIterator"* %13 to void (%"class.icu_69::CharacterIterator"*)***
  %20 = load void (%"class.icu_69::CharacterIterator"*)**, void (%"class.icu_69::CharacterIterator"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.icu_69::CharacterIterator"*)*, void (%"class.icu_69::CharacterIterator"*)** %20, i64 1
  %22 = load void (%"class.icu_69::CharacterIterator"*)*, void (%"class.icu_69::CharacterIterator"*)** %21, align 8
  call void %22(%"class.icu_69::CharacterIterator"* nonnull %13) #8
  br label %23

23:                                               ; preds = %2, %18
  store %"class.icu_69::CharacterIterator"* %14, %"class.icu_69::CharacterIterator"** %12, align 8
  %24 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to i32 (%"class.icu_69::RuleBasedBreakIterator"*)***
  %25 = load i32 (%"class.icu_69::RuleBasedBreakIterator"*)**, i32 (%"class.icu_69::RuleBasedBreakIterator"*)*** %24, align 8
  %26 = getelementptr inbounds i32 (%"class.icu_69::RuleBasedBreakIterator"*)*, i32 (%"class.icu_69::RuleBasedBreakIterator"*)** %25, i64 10
  %27 = load i32 (%"class.icu_69::RuleBasedBreakIterator"*)*, i32 (%"class.icu_69::RuleBasedBreakIterator"*)** %26, align 8
  %28 = call i32 %27(%"class.icu_69::RuleBasedBreakIterator"* %0) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  ret void
}

declare %struct.UText* @utext_openConstUnicodeString_69(%struct.UText*, %"class.icu_69::UnicodeString"*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(648) %"class.icu_69::RuleBasedBreakIterator"* @_ZN6icu_6922RuleBasedBreakIterator16refreshInputTextEP5UTextR10UErrorCode(%"class.icu_69::RuleBasedBreakIterator"* returned, %struct.UText*, i32* dereferenceable(4)) unnamed_addr #1 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %19

6:                                                ; preds = %3
  %7 = icmp eq %struct.UText* %1, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  store i32 1, i32* %2, align 4
  br label %19

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1
  %11 = tail call i64 @utext_getNativeIndex_69(%struct.UText* %10) #8
  %12 = tail call %struct.UText* @utext_clone_69(%struct.UText* %10, %struct.UText* nonnull %1, i8 signext 0, i8 signext 1, i32* %2) #8
  %13 = load i32, i32* %2, align 4
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %15, label %19

15:                                               ; preds = %9
  tail call void @utext_setNativeIndex_69(%struct.UText* %10, i64 %11) #8
  %16 = tail call i64 @utext_getNativeIndex_69(%struct.UText* %10) #8
  %17 = icmp eq i64 %16, %11
  br i1 %17, label %19, label %18

18:                                               ; preds = %15
  store i32 1, i32* %2, align 4
  br label %19

19:                                               ; preds = %9, %15, %18, %3, %8
  ret %"class.icu_69::RuleBasedBreakIterator"* %0
}

declare i64 @utext_getNativeIndex_69(%struct.UText*) local_unnamed_addr #2

declare void @utext_setNativeIndex_69(%struct.UText*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6922RuleBasedBreakIterator5firstEv(%"class.icu_69::RuleBasedBreakIterator"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 5
  %5 = load %"class.icu_69::RuleBasedBreakIterator::BreakCache"*, %"class.icu_69::RuleBasedBreakIterator::BreakCache"** %4, align 8
  %6 = tail call signext i8 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache4seekEi(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %5, i32 0) #8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = load %"class.icu_69::RuleBasedBreakIterator::BreakCache"*, %"class.icu_69::RuleBasedBreakIterator::BreakCache"** %4, align 8
  %10 = call signext i8 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache12populateNearEiR10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %9, i32 0, i32* nonnull dereferenceable(4) %2) #8
  br label %11

11:                                               ; preds = %1, %8
  %12 = load %"class.icu_69::RuleBasedBreakIterator::BreakCache"*, %"class.icu_69::RuleBasedBreakIterator::BreakCache"** %4, align 8
  %13 = call i32 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache7currentEv(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %12) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  ret i32 0
}

declare signext i8 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache4seekEi(%"class.icu_69::RuleBasedBreakIterator::BreakCache"*, i32) local_unnamed_addr #2

declare signext i8 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache12populateNearEiR10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"*, i32, i32* dereferenceable(4)) local_unnamed_addr #2

declare i32 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache7currentEv(%"class.icu_69::RuleBasedBreakIterator::BreakCache"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6922RuleBasedBreakIterator4lastEv(%"class.icu_69::RuleBasedBreakIterator"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1
  %3 = tail call i64 @utext_nativeLength_69(%struct.UText* %2) #8
  %4 = trunc i64 %3 to i32
  %5 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to i8 (%"class.icu_69::RuleBasedBreakIterator"*, i32)***
  %6 = load i8 (%"class.icu_69::RuleBasedBreakIterator"*, i32)**, i8 (%"class.icu_69::RuleBasedBreakIterator"*, i32)*** %5, align 8
  %7 = getelementptr inbounds i8 (%"class.icu_69::RuleBasedBreakIterator"*, i32)*, i8 (%"class.icu_69::RuleBasedBreakIterator"*, i32)** %6, i64 17
  %8 = load i8 (%"class.icu_69::RuleBasedBreakIterator"*, i32)*, i8 (%"class.icu_69::RuleBasedBreakIterator"*, i32)** %7, align 8
  %9 = tail call signext i8 %8(%"class.icu_69::RuleBasedBreakIterator"* %0, i32 %4) #8
  ret i32 %4
}

declare i64 @utext_nativeLength_69(%struct.UText*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6922RuleBasedBreakIterator4nextEi(%"class.icu_69::RuleBasedBreakIterator"*, i32) unnamed_addr #1 align 2 {
  %3 = icmp sgt i32 %1, 0
  br i1 %3, label %4, label %16

4:                                                ; preds = %2
  %5 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to i32 (%"class.icu_69::RuleBasedBreakIterator"*)***
  br label %6

6:                                                ; preds = %4, %6
  %7 = phi i32 [ %1, %4 ], [ %12, %6 ]
  %8 = load i32 (%"class.icu_69::RuleBasedBreakIterator"*)**, i32 (%"class.icu_69::RuleBasedBreakIterator"*)*** %5, align 8
  %9 = getelementptr inbounds i32 (%"class.icu_69::RuleBasedBreakIterator"*)*, i32 (%"class.icu_69::RuleBasedBreakIterator"*)** %8, i64 13
  %10 = load i32 (%"class.icu_69::RuleBasedBreakIterator"*)*, i32 (%"class.icu_69::RuleBasedBreakIterator"*)** %9, align 8
  %11 = tail call i32 %10(%"class.icu_69::RuleBasedBreakIterator"* %0) #8
  %12 = add nsw i32 %7, -1
  %13 = icmp sgt i32 %12, 0
  %14 = icmp ne i32 %11, -1
  %15 = and i1 %13, %14
  br i1 %15, label %6, label %34

16:                                               ; preds = %2
  %17 = icmp slt i32 %1, 0
  %18 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to i32 (%"class.icu_69::RuleBasedBreakIterator"*)***
  br i1 %17, label %19, label %29

19:                                               ; preds = %16, %19
  %20 = phi i32 [ %25, %19 ], [ %1, %16 ]
  %21 = load i32 (%"class.icu_69::RuleBasedBreakIterator"*)**, i32 (%"class.icu_69::RuleBasedBreakIterator"*)*** %18, align 8
  %22 = getelementptr inbounds i32 (%"class.icu_69::RuleBasedBreakIterator"*)*, i32 (%"class.icu_69::RuleBasedBreakIterator"*)** %21, i64 12
  %23 = load i32 (%"class.icu_69::RuleBasedBreakIterator"*)*, i32 (%"class.icu_69::RuleBasedBreakIterator"*)** %22, align 8
  %24 = tail call i32 %23(%"class.icu_69::RuleBasedBreakIterator"* %0) #8
  %25 = add nsw i32 %20, 1
  %26 = icmp slt i32 %25, 0
  %27 = icmp ne i32 %24, -1
  %28 = and i1 %26, %27
  br i1 %28, label %19, label %34

29:                                               ; preds = %16
  %30 = load i32 (%"class.icu_69::RuleBasedBreakIterator"*)**, i32 (%"class.icu_69::RuleBasedBreakIterator"*)*** %18, align 8
  %31 = getelementptr inbounds i32 (%"class.icu_69::RuleBasedBreakIterator"*)*, i32 (%"class.icu_69::RuleBasedBreakIterator"*)** %30, i64 14
  %32 = load i32 (%"class.icu_69::RuleBasedBreakIterator"*)*, i32 (%"class.icu_69::RuleBasedBreakIterator"*)** %31, align 8
  %33 = tail call i32 %32(%"class.icu_69::RuleBasedBreakIterator"* %0) #8
  br label %34

34:                                               ; preds = %19, %6, %29
  %35 = phi i32 [ %33, %29 ], [ %11, %6 ], [ %24, %19 ]
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6922RuleBasedBreakIterator4nextEv(%"class.icu_69::RuleBasedBreakIterator"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 5
  %3 = load %"class.icu_69::RuleBasedBreakIterator::BreakCache"*, %"class.icu_69::RuleBasedBreakIterator::BreakCache"** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %3, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %3, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  tail call void @_ZN6icu_6922RuleBasedBreakIterator10BreakCache6nextOLEv(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %3) #8
  br label %27

10:                                               ; preds = %1
  %11 = add nsw i32 %5, 1
  %12 = and i32 %11, 127
  store i32 %12, i32* %4, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %3, i64 0, i32 6, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %3, i64 0, i32 1
  %17 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %16, align 8
  %18 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %17, i64 0, i32 3
  store i32 %15, i32* %18, align 8
  %19 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %3, i64 0, i32 4
  store i32 %15, i32* %19, align 8
  %20 = load i32, i32* %4, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator::BreakCache", %"class.icu_69::RuleBasedBreakIterator::BreakCache"* %3, i64 0, i32 7, i64 %21
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = load %"class.icu_69::RuleBasedBreakIterator"*, %"class.icu_69::RuleBasedBreakIterator"** %16, align 8
  %26 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %25, i64 0, i32 4
  store i32 %24, i32* %26, align 4
  br label %27

27:                                               ; preds = %9, %10
  %28 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 12
  %29 = load i8, i8* %28, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 3
  %33 = load i32, i32* %32, align 8
  br label %34

34:                                               ; preds = %27, %31
  %35 = phi i32 [ %33, %31 ], [ -1, %27 ]
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6922RuleBasedBreakIterator8previousEv(%"class.icu_69::RuleBasedBreakIterator"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 5
  %5 = load %"class.icu_69::RuleBasedBreakIterator::BreakCache"*, %"class.icu_69::RuleBasedBreakIterator::BreakCache"** %4, align 8
  call void @_ZN6icu_6922RuleBasedBreakIterator10BreakCache8previousER10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %5, i32* nonnull dereferenceable(4) %2) #8
  %6 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 12
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi i32 [ %11, %9 ], [ -1, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  ret i32 %13
}

declare void @_ZN6icu_6922RuleBasedBreakIterator10BreakCache8previousER10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"*, i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6922RuleBasedBreakIterator9followingEi(%"class.icu_69::RuleBasedBreakIterator"*, i32) unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = icmp slt i32 %1, 0
  br i1 %4, label %5, label %11

5:                                                ; preds = %2
  %6 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to i32 (%"class.icu_69::RuleBasedBreakIterator"*)***
  %7 = load i32 (%"class.icu_69::RuleBasedBreakIterator"*)**, i32 (%"class.icu_69::RuleBasedBreakIterator"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.icu_69::RuleBasedBreakIterator"*)*, i32 (%"class.icu_69::RuleBasedBreakIterator"*)** %7, i64 10
  %9 = load i32 (%"class.icu_69::RuleBasedBreakIterator"*)*, i32 (%"class.icu_69::RuleBasedBreakIterator"*)** %8, align 8
  %10 = tail call i32 %9(%"class.icu_69::RuleBasedBreakIterator"* %0) #8
  br label %27

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1
  %13 = sext i32 %1 to i64
  tail call void @utext_setNativeIndex_69(%struct.UText* %12, i64 %13) #8
  %14 = tail call i64 @utext_getNativeIndex_69(%struct.UText* %12) #8
  %15 = trunc i64 %14 to i32
  %16 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #8
  store i32 0, i32* %3, align 4
  %17 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 5
  %18 = load %"class.icu_69::RuleBasedBreakIterator::BreakCache"*, %"class.icu_69::RuleBasedBreakIterator::BreakCache"** %17, align 8
  call void @_ZN6icu_6922RuleBasedBreakIterator10BreakCache9followingEiR10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %18, i32 %15, i32* nonnull dereferenceable(4) %3) #8
  %19 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 12
  %20 = load i8, i8* %19, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  br label %25

25:                                               ; preds = %11, %22
  %26 = phi i32 [ %24, %22 ], [ -1, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #8
  br label %27

27:                                               ; preds = %25, %5
  %28 = phi i32 [ %10, %5 ], [ %26, %25 ]
  ret i32 %28
}

declare void @_ZN6icu_6922RuleBasedBreakIterator10BreakCache9followingEiR10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"*, i32, i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6922RuleBasedBreakIterator9precedingEi(%"class.icu_69::RuleBasedBreakIterator"*, i32) unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1
  %6 = tail call i64 @utext_nativeLength_69(%struct.UText* %5) #8
  %7 = icmp slt i64 %6, %4
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to i32 (%"class.icu_69::RuleBasedBreakIterator"*)***
  %10 = load i32 (%"class.icu_69::RuleBasedBreakIterator"*)**, i32 (%"class.icu_69::RuleBasedBreakIterator"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.icu_69::RuleBasedBreakIterator"*)*, i32 (%"class.icu_69::RuleBasedBreakIterator"*)** %10, i64 11
  %12 = load i32 (%"class.icu_69::RuleBasedBreakIterator"*)*, i32 (%"class.icu_69::RuleBasedBreakIterator"*)** %11, align 8
  %13 = tail call i32 %12(%"class.icu_69::RuleBasedBreakIterator"* %0) #8
  br label %28

14:                                               ; preds = %2
  tail call void @utext_setNativeIndex_69(%struct.UText* %5, i64 %4) #8
  %15 = tail call i64 @utext_getNativeIndex_69(%struct.UText* %5) #8
  %16 = trunc i64 %15 to i32
  %17 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #8
  store i32 0, i32* %3, align 4
  %18 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 5
  %19 = load %"class.icu_69::RuleBasedBreakIterator::BreakCache"*, %"class.icu_69::RuleBasedBreakIterator::BreakCache"** %18, align 8
  call void @_ZN6icu_6922RuleBasedBreakIterator10BreakCache9precedingEiR10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %19, i32 %16, i32* nonnull dereferenceable(4) %3) #8
  %20 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 12
  %21 = load i8, i8* %20, align 8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 3
  %25 = load i32, i32* %24, align 8
  br label %26

26:                                               ; preds = %14, %23
  %27 = phi i32 [ %25, %23 ], [ -1, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #8
  br label %28

28:                                               ; preds = %26, %8
  %29 = phi i32 [ %13, %8 ], [ %27, %26 ]
  ret i32 %29
}

declare void @_ZN6icu_6922RuleBasedBreakIterator10BreakCache9precedingEiR10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"*, i32, i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6922RuleBasedBreakIterator10isBoundaryEi(%"class.icu_69::RuleBasedBreakIterator"*, i32) unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = icmp slt i32 %1, 0
  br i1 %4, label %5, label %11

5:                                                ; preds = %2
  %6 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to i32 (%"class.icu_69::RuleBasedBreakIterator"*)***
  %7 = load i32 (%"class.icu_69::RuleBasedBreakIterator"*)**, i32 (%"class.icu_69::RuleBasedBreakIterator"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.icu_69::RuleBasedBreakIterator"*)*, i32 (%"class.icu_69::RuleBasedBreakIterator"*)** %7, i64 10
  %9 = load i32 (%"class.icu_69::RuleBasedBreakIterator"*)*, i32 (%"class.icu_69::RuleBasedBreakIterator"*)** %8, align 8
  %10 = tail call i32 %9(%"class.icu_69::RuleBasedBreakIterator"* %0) #8
  br label %44

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1
  %13 = sext i32 %1 to i64
  tail call void @utext_setNativeIndex_69(%struct.UText* %12, i64 %13) #8
  %14 = tail call i64 @utext_getNativeIndex_69(%struct.UText* %12) #8
  %15 = trunc i64 %14 to i32
  %16 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #8
  store i32 0, i32* %3, align 4
  %17 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 5
  %18 = load %"class.icu_69::RuleBasedBreakIterator::BreakCache"*, %"class.icu_69::RuleBasedBreakIterator::BreakCache"** %17, align 8
  %19 = tail call signext i8 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache4seekEi(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %18, i32 %15) #8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %11
  %22 = load %"class.icu_69::RuleBasedBreakIterator::BreakCache"*, %"class.icu_69::RuleBasedBreakIterator::BreakCache"** %17, align 8
  %23 = call signext i8 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache12populateNearEiR10UErrorCode(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %22, i32 %15, i32* nonnull dereferenceable(4) %3) #8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %36, label %25

25:                                               ; preds = %11, %21
  %26 = load %"class.icu_69::RuleBasedBreakIterator::BreakCache"*, %"class.icu_69::RuleBasedBreakIterator::BreakCache"** %17, align 8
  %27 = call i32 @_ZN6icu_6922RuleBasedBreakIterator10BreakCache7currentEv(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %26) #8
  %28 = icmp eq i32 %27, %1
  %29 = icmp slt i32 %15, %1
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %35

31:                                               ; preds = %25
  %32 = call i32 @utext_char32At_69(%struct.UText* %12, i64 %13) #8
  %33 = icmp ne i32 %32, -1
  %34 = zext i1 %33 to i8
  br label %42

35:                                               ; preds = %25
  br i1 %28, label %42, label %36

36:                                               ; preds = %21, %35
  %37 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to i32 (%"class.icu_69::RuleBasedBreakIterator"*)***
  %38 = load i32 (%"class.icu_69::RuleBasedBreakIterator"*)**, i32 (%"class.icu_69::RuleBasedBreakIterator"*)*** %37, align 8
  %39 = getelementptr inbounds i32 (%"class.icu_69::RuleBasedBreakIterator"*)*, i32 (%"class.icu_69::RuleBasedBreakIterator"*)** %38, i64 13
  %40 = load i32 (%"class.icu_69::RuleBasedBreakIterator"*)*, i32 (%"class.icu_69::RuleBasedBreakIterator"*)** %39, align 8
  %41 = call i32 %40(%"class.icu_69::RuleBasedBreakIterator"* %0) #8
  br label %42

42:                                               ; preds = %31, %35, %36
  %43 = phi i8 [ %34, %31 ], [ 0, %36 ], [ 1, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #8
  br label %44

44:                                               ; preds = %42, %5
  %45 = phi i8 [ 0, %5 ], [ %43, %42 ]
  ret i8 %45
}

declare i32 @utext_char32At_69(%struct.UText*, i64) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6922RuleBasedBreakIterator7currentEv(%"class.icu_69::RuleBasedBreakIterator"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6922RuleBasedBreakIterator10handleNextEv(%"class.icu_69::RuleBasedBreakIterator"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 2
  %3 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %3, i64 0, i32 1
  %5 = load %"struct.icu_69::RBBIStateTable"*, %"struct.icu_69::RBBIStateTable"** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %3, i64 0, i32 7
  %7 = load %struct.UCPTrie*, %struct.UCPTrie** %6, align 8
  %8 = tail call i32 @ucptrie_getValueWidth_69(%struct.UCPTrie* %7) #8
  %9 = icmp eq i32 %8, 2
  %10 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %5, i64 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 4
  %13 = icmp eq i32 %12, 0
  %14 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %2, align 8
  %15 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %14, i64 0, i32 1
  %16 = load %"struct.icu_69::RBBIStateTable"*, %"struct.icu_69::RBBIStateTable"** %15, align 8
  %17 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %16, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %16, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 4
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 9
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 7
  %28 = load i64, i64* %27, align 8
  %29 = sub nsw i64 %25, %28
  %30 = icmp sgt i64 %29, -1
  br i1 %13, label %466, label %31

31:                                               ; preds = %1
  br i1 %9, label %32, label %249

32:                                               ; preds = %31
  br i1 %30, label %33, label %47

33:                                               ; preds = %32
  %34 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 6
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = icmp slt i64 %29, %36
  br i1 %37, label %38, label %47

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  %40 = load i16*, i16** %39, align 8
  %41 = getelementptr inbounds i16, i16* %40, i64 %29
  %42 = load i16, i16* %41, align 2
  %43 = icmp ult i16 %42, -9216
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  %45 = trunc i64 %29 to i32
  %46 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 8
  store i32 %45, i32* %46, align 8
  br label %50

47:                                               ; preds = %38, %33, %32
  tail call void @utext_setNativeIndex_69(%struct.UText* %26, i64 %25) #8
  %48 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 8
  %49 = load i32, i32* %48, align 8
  br label %50

50:                                               ; preds = %47, %44
  %51 = phi i32 [ %49, %47 ], [ %45, %44 ]
  %52 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 8
  %53 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 9
  %54 = load i32, i32* %53, align 4
  %55 = icmp slt i32 %51, %54
  br i1 %55, label %56, label %67

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  %58 = load i16*, i16** %57, align 8
  %59 = sext i32 %51 to i64
  %60 = getelementptr inbounds i16, i16* %58, i64 %59
  %61 = load i16, i16* %60, align 2
  %62 = icmp ult i16 %61, -10240
  br i1 %62, label %63, label %67

63:                                               ; preds = %56
  %64 = add nsw i32 %51, 1
  store i32 %64, i32* %52, align 8
  %65 = load i16, i16* %60, align 2
  %66 = zext i16 %65 to i32
  br label %72

67:                                               ; preds = %56, %50
  %68 = tail call i32 @utext_next32_69(%struct.UText* %26) #8
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %70, label %72

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 12
  store i8 1, i8* %71, align 8
  br label %909

72:                                               ; preds = %67, %63
  %73 = phi i32 [ %66, %63 ], [ %68, %67 ]
  %74 = zext i32 %18 to i64
  %75 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %16, i64 0, i32 5, i64 %74
  %76 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %16, i64 0, i32 4
  %77 = load i32, i32* %76, align 4
  %78 = and i32 %77, 2
  %79 = trunc i32 %78 to i16
  %80 = lshr exact i32 %78, 1
  %81 = xor i32 %80, 1
  %82 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 6
  %83 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 11
  %84 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 13
  %85 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  br label %86

86:                                               ; preds = %235, %72
  %87 = phi i16 [ %79, %72 ], [ %150, %235 ]
  %88 = phi i32 [ %81, %72 ], [ 1, %235 ]
  %89 = phi i8* [ %75, %72 ], [ %157, %235 ]
  %90 = phi i32 [ %73, %72 ], [ %236, %235 ]
  %91 = phi i32 [ %24, %72 ], [ %193, %235 ]
  %92 = icmp eq i32 %90, -1
  %93 = icmp ult i32 %90, 65536
  %94 = icmp ult i32 %90, 1114112
  %95 = lshr i32 %90, 6
  %96 = zext i32 %95 to i64
  %97 = and i32 %90, 63
  br label %98

98:                                               ; preds = %86, %237
  %99 = phi i16 [ %150, %237 ], [ %87, %86 ]
  %100 = phi i32 [ %239, %237 ], [ %88, %86 ]
  %101 = phi i8* [ %157, %237 ], [ %89, %86 ]
  %102 = phi i32 [ %193, %237 ], [ %91, %86 ]
  %103 = bitcast i8* %101 to %"struct.icu_69::RBBIStateTableRowT"*
  br i1 %92, label %104, label %106

104:                                              ; preds = %98
  %105 = icmp eq i32 %100, 2
  br i1 %105, label %240, label %147

106:                                              ; preds = %98
  %107 = icmp eq i32 %100, 1
  br i1 %107, label %108, label %147

108:                                              ; preds = %106
  %109 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %2, align 8
  %110 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %109, i64 0, i32 7
  %111 = load %struct.UCPTrie*, %struct.UCPTrie** %110, align 8
  %112 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %111, i64 0, i32 1, i32 0
  %113 = load i8*, i8** %112, align 8
  br i1 %93, label %114, label %121

114:                                              ; preds = %108
  %115 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %111, i64 0, i32 0
  %116 = load i16*, i16** %115, align 8
  %117 = getelementptr inbounds i16, i16* %116, i64 %96
  %118 = load i16, i16* %117, align 2
  %119 = zext i16 %118 to i32
  %120 = add nuw nsw i32 %97, %119
  br label %136

121:                                              ; preds = %108
  br i1 %94, label %122, label %132

122:                                              ; preds = %121
  %123 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %111, i64 0, i32 4
  %124 = load i32, i32* %123, align 8
  %125 = icmp sgt i32 %124, %90
  br i1 %125, label %130, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %111, i64 0, i32 3
  %128 = load i32, i32* %127, align 4
  %129 = add nsw i32 %128, -2
  br label %136

130:                                              ; preds = %122
  %131 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %111, i32 %90) #8
  br label %136

132:                                              ; preds = %121
  %133 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %111, i64 0, i32 3
  %134 = load i32, i32* %133, align 4
  %135 = add nsw i32 %134, -1
  br label %136

136:                                              ; preds = %132, %130, %126, %114
  %137 = phi i32 [ %120, %114 ], [ %135, %132 ], [ %129, %126 ], [ %131, %130 ]
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i8, i8* %113, i64 %138
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i16
  %142 = zext i8 %140 to i32
  %143 = icmp ule i32 %20, %142
  %144 = zext i1 %143 to i32
  %145 = load i32, i32* %22, align 8
  %146 = add i32 %145, %144
  store i32 %146, i32* %22, align 8
  br label %147

147:                                              ; preds = %136, %106, %104
  %148 = phi i1 [ true, %136 ], [ false, %106 ], [ false, %104 ]
  %149 = phi i32 [ 1, %136 ], [ %100, %106 ], [ 2, %104 ]
  %150 = phi i16 [ %141, %136 ], [ %99, %106 ], [ 1, %104 ]
  %151 = zext i16 %150 to i64
  %152 = getelementptr inbounds %"struct.icu_69::RBBIStateTableRowT", %"struct.icu_69::RBBIStateTableRowT"* %103, i64 0, i32 3, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i32
  %155 = mul i32 %18, %154
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %16, i64 0, i32 5, i64 %156
  %158 = load i8, i8* %157, align 1
  switch i8 %158, label %182 [
    i8 1, label %159
    i8 0, label %192
  ]

159:                                              ; preds = %147
  %160 = icmp eq i32 %149, 0
  br i1 %160, label %177, label %161

161:                                              ; preds = %159
  %162 = load i32, i32* %52, align 8
  %163 = load i32, i32* %82, align 4
  %164 = icmp sgt i32 %162, %163
  br i1 %164, label %169, label %165

165:                                              ; preds = %161
  %166 = load i64, i64* %27, align 8
  %167 = sext i32 %162 to i64
  %168 = add nsw i64 %166, %167
  br label %174

169:                                              ; preds = %161
  %170 = load %struct.UTextFuncs*, %struct.UTextFuncs** %83, align 8
  %171 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %170, i64 0, i32 10
  %172 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %171, align 8
  %173 = tail call i64 %172(%struct.UText* %26) #8
  br label %174

174:                                              ; preds = %169, %165
  %175 = phi i64 [ %168, %165 ], [ %173, %169 ]
  %176 = trunc i64 %175 to i32
  br label %177

177:                                              ; preds = %174, %159
  %178 = phi i32 [ %176, %174 ], [ %102, %159 ]
  %179 = getelementptr inbounds i8, i8* %157, i64 2
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i32
  store i32 %181, i32* %21, align 4
  br label %192

182:                                              ; preds = %147
  %183 = load i32*, i32** %84, align 8
  %184 = zext i8 %158 to i64
  %185 = getelementptr inbounds i32, i32* %183, i64 %184
  %186 = load i32, i32* %185, align 4
  %187 = icmp sgt i32 %186, -1
  br i1 %187, label %188, label %192

188:                                              ; preds = %182
  %189 = getelementptr inbounds i8, i8* %157, i64 2
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i32
  store i32 %191, i32* %21, align 4
  store i32 %186, i32* %23, align 8
  br label %909

192:                                              ; preds = %182, %177, %147
  %193 = phi i32 [ %178, %177 ], [ %102, %147 ], [ %102, %182 ]
  %194 = getelementptr inbounds i8, i8* %157, i64 1
  %195 = load i8, i8* %194, align 1
  %196 = icmp ugt i8 %195, 1
  br i1 %196, label %197, label %216

197:                                              ; preds = %192
  %198 = load i32, i32* %52, align 8
  %199 = load i32, i32* %82, align 4
  %200 = icmp sgt i32 %198, %199
  br i1 %200, label %205, label %201

201:                                              ; preds = %197
  %202 = load i64, i64* %27, align 8
  %203 = sext i32 %198 to i64
  %204 = add nsw i64 %202, %203
  br label %210

205:                                              ; preds = %197
  %206 = load %struct.UTextFuncs*, %struct.UTextFuncs** %83, align 8
  %207 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %206, i64 0, i32 10
  %208 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %207, align 8
  %209 = tail call i64 %208(%struct.UText* %26) #8
  br label %210

210:                                              ; preds = %205, %201
  %211 = phi i64 [ %204, %201 ], [ %209, %205 ]
  %212 = trunc i64 %211 to i32
  %213 = load i32*, i32** %84, align 8
  %214 = zext i8 %195 to i64
  %215 = getelementptr inbounds i32, i32* %213, i64 %214
  store i32 %212, i32* %215, align 4
  br label %216

216:                                              ; preds = %210, %192
  %217 = icmp eq i8 %153, 0
  br i1 %217, label %240, label %218

218:                                              ; preds = %216
  br i1 %148, label %219, label %237

219:                                              ; preds = %218
  %220 = load i32, i32* %52, align 8
  %221 = load i32, i32* %53, align 4
  %222 = icmp slt i32 %220, %221
  br i1 %222, label %223, label %233

223:                                              ; preds = %219
  %224 = load i16*, i16** %85, align 8
  %225 = sext i32 %220 to i64
  %226 = getelementptr inbounds i16, i16* %224, i64 %225
  %227 = load i16, i16* %226, align 2
  %228 = icmp ult i16 %227, -10240
  br i1 %228, label %229, label %233

229:                                              ; preds = %223
  %230 = add nsw i32 %220, 1
  store i32 %230, i32* %52, align 8
  %231 = load i16, i16* %226, align 2
  %232 = zext i16 %231 to i32
  br label %235

233:                                              ; preds = %223, %219
  %234 = tail call i32 @utext_next32_69(%struct.UText* %26) #8
  br label %235

235:                                              ; preds = %233, %229
  %236 = phi i32 [ %232, %229 ], [ %234, %233 ]
  br label %86

237:                                              ; preds = %218
  %238 = icmp eq i32 %149, 0
  %239 = select i1 %238, i32 1, i32 %149
  br label %98

240:                                              ; preds = %216, %104
  %241 = phi i32 [ %102, %104 ], [ %193, %216 ]
  %242 = icmp eq i32 %241, %24
  br i1 %242, label %243, label %247

243:                                              ; preds = %240
  tail call void @utext_setNativeIndex_69(%struct.UText* %26, i64 %25) #8
  %244 = tail call i32 @utext_next32_69(%struct.UText* %26) #8
  %245 = tail call i64 @utext_getNativeIndex_69(%struct.UText* %26) #8
  %246 = trunc i64 %245 to i32
  store i32 0, i32* %21, align 4
  br label %247

247:                                              ; preds = %243, %240
  %248 = phi i32 [ %246, %243 ], [ %241, %240 ]
  store i32 %248, i32* %23, align 8
  br label %909

249:                                              ; preds = %31
  br i1 %30, label %250, label %264

250:                                              ; preds = %249
  %251 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 6
  %252 = load i32, i32* %251, align 4
  %253 = sext i32 %252 to i64
  %254 = icmp slt i64 %29, %253
  br i1 %254, label %255, label %264

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  %257 = load i16*, i16** %256, align 8
  %258 = getelementptr inbounds i16, i16* %257, i64 %29
  %259 = load i16, i16* %258, align 2
  %260 = icmp ult i16 %259, -9216
  br i1 %260, label %261, label %264

261:                                              ; preds = %255
  %262 = trunc i64 %29 to i32
  %263 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 8
  store i32 %262, i32* %263, align 8
  br label %267

264:                                              ; preds = %255, %250, %249
  tail call void @utext_setNativeIndex_69(%struct.UText* %26, i64 %25) #8
  %265 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 8
  %266 = load i32, i32* %265, align 8
  br label %267

267:                                              ; preds = %264, %261
  %268 = phi i32 [ %266, %264 ], [ %262, %261 ]
  %269 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 8
  %270 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 9
  %271 = load i32, i32* %270, align 4
  %272 = icmp slt i32 %268, %271
  br i1 %272, label %273, label %284

273:                                              ; preds = %267
  %274 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  %275 = load i16*, i16** %274, align 8
  %276 = sext i32 %268 to i64
  %277 = getelementptr inbounds i16, i16* %275, i64 %276
  %278 = load i16, i16* %277, align 2
  %279 = icmp ult i16 %278, -10240
  br i1 %279, label %280, label %284

280:                                              ; preds = %273
  %281 = add nsw i32 %268, 1
  store i32 %281, i32* %269, align 8
  %282 = load i16, i16* %277, align 2
  %283 = zext i16 %282 to i32
  br label %289

284:                                              ; preds = %273, %267
  %285 = tail call i32 @utext_next32_69(%struct.UText* %26) #8
  %286 = icmp eq i32 %285, -1
  br i1 %286, label %287, label %289

287:                                              ; preds = %284
  %288 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 12
  store i8 1, i8* %288, align 8
  br label %909

289:                                              ; preds = %284, %280
  %290 = phi i32 [ %283, %280 ], [ %285, %284 ]
  %291 = zext i32 %18 to i64
  %292 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %16, i64 0, i32 5, i64 %291
  %293 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %16, i64 0, i32 4
  %294 = load i32, i32* %293, align 4
  %295 = and i32 %294, 2
  %296 = trunc i32 %295 to i16
  %297 = lshr exact i32 %295, 1
  %298 = xor i32 %297, 1
  %299 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 6
  %300 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 11
  %301 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 13
  %302 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  br label %303

303:                                              ; preds = %452, %289
  %304 = phi i16 [ %296, %289 ], [ %367, %452 ]
  %305 = phi i32 [ %298, %289 ], [ 1, %452 ]
  %306 = phi i8* [ %292, %289 ], [ %374, %452 ]
  %307 = phi i32 [ %290, %289 ], [ %453, %452 ]
  %308 = phi i32 [ %24, %289 ], [ %410, %452 ]
  %309 = icmp eq i32 %307, -1
  %310 = icmp ult i32 %307, 65536
  %311 = icmp ult i32 %307, 1114112
  %312 = lshr i32 %307, 6
  %313 = zext i32 %312 to i64
  %314 = and i32 %307, 63
  br label %315

315:                                              ; preds = %303, %454
  %316 = phi i16 [ %367, %454 ], [ %304, %303 ]
  %317 = phi i32 [ %456, %454 ], [ %305, %303 ]
  %318 = phi i8* [ %374, %454 ], [ %306, %303 ]
  %319 = phi i32 [ %410, %454 ], [ %308, %303 ]
  %320 = bitcast i8* %318 to %"struct.icu_69::RBBIStateTableRowT"*
  br i1 %309, label %321, label %323

321:                                              ; preds = %315
  %322 = icmp eq i32 %317, 2
  br i1 %322, label %457, label %364

323:                                              ; preds = %315
  %324 = icmp eq i32 %317, 1
  br i1 %324, label %325, label %364

325:                                              ; preds = %323
  %326 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %2, align 8
  %327 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %326, i64 0, i32 7
  %328 = load %struct.UCPTrie*, %struct.UCPTrie** %327, align 8
  %329 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %328, i64 0, i32 1
  %330 = bitcast %union.UCPTrieData* %329 to i16**
  %331 = load i16*, i16** %330, align 8
  br i1 %310, label %332, label %339

332:                                              ; preds = %325
  %333 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %328, i64 0, i32 0
  %334 = load i16*, i16** %333, align 8
  %335 = getelementptr inbounds i16, i16* %334, i64 %313
  %336 = load i16, i16* %335, align 2
  %337 = zext i16 %336 to i32
  %338 = add nuw nsw i32 %314, %337
  br label %354

339:                                              ; preds = %325
  br i1 %311, label %340, label %350

340:                                              ; preds = %339
  %341 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %328, i64 0, i32 4
  %342 = load i32, i32* %341, align 8
  %343 = icmp sgt i32 %342, %307
  br i1 %343, label %348, label %344

344:                                              ; preds = %340
  %345 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %328, i64 0, i32 3
  %346 = load i32, i32* %345, align 4
  %347 = add nsw i32 %346, -2
  br label %354

348:                                              ; preds = %340
  %349 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %328, i32 %307) #8
  br label %354

350:                                              ; preds = %339
  %351 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %328, i64 0, i32 3
  %352 = load i32, i32* %351, align 4
  %353 = add nsw i32 %352, -1
  br label %354

354:                                              ; preds = %350, %348, %344, %332
  %355 = phi i32 [ %338, %332 ], [ %353, %350 ], [ %347, %344 ], [ %349, %348 ]
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds i16, i16* %331, i64 %356
  %358 = load i16, i16* %357, align 2
  %359 = zext i16 %358 to i32
  %360 = icmp ule i32 %20, %359
  %361 = zext i1 %360 to i32
  %362 = load i32, i32* %22, align 8
  %363 = add i32 %362, %361
  store i32 %363, i32* %22, align 8
  br label %364

364:                                              ; preds = %354, %323, %321
  %365 = phi i1 [ true, %354 ], [ false, %323 ], [ false, %321 ]
  %366 = phi i32 [ 1, %354 ], [ %317, %323 ], [ 2, %321 ]
  %367 = phi i16 [ %358, %354 ], [ %316, %323 ], [ 1, %321 ]
  %368 = zext i16 %367 to i64
  %369 = getelementptr inbounds %"struct.icu_69::RBBIStateTableRowT", %"struct.icu_69::RBBIStateTableRowT"* %320, i64 0, i32 3, i64 %368
  %370 = load i8, i8* %369, align 1
  %371 = zext i8 %370 to i32
  %372 = mul i32 %18, %371
  %373 = zext i32 %372 to i64
  %374 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %16, i64 0, i32 5, i64 %373
  %375 = load i8, i8* %374, align 1
  switch i8 %375, label %399 [
    i8 1, label %376
    i8 0, label %409
  ]

376:                                              ; preds = %364
  %377 = icmp eq i32 %366, 0
  br i1 %377, label %394, label %378

378:                                              ; preds = %376
  %379 = load i32, i32* %269, align 8
  %380 = load i32, i32* %299, align 4
  %381 = icmp sgt i32 %379, %380
  br i1 %381, label %386, label %382

382:                                              ; preds = %378
  %383 = load i64, i64* %27, align 8
  %384 = sext i32 %379 to i64
  %385 = add nsw i64 %383, %384
  br label %391

386:                                              ; preds = %378
  %387 = load %struct.UTextFuncs*, %struct.UTextFuncs** %300, align 8
  %388 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %387, i64 0, i32 10
  %389 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %388, align 8
  %390 = tail call i64 %389(%struct.UText* %26) #8
  br label %391

391:                                              ; preds = %386, %382
  %392 = phi i64 [ %385, %382 ], [ %390, %386 ]
  %393 = trunc i64 %392 to i32
  br label %394

394:                                              ; preds = %391, %376
  %395 = phi i32 [ %393, %391 ], [ %319, %376 ]
  %396 = getelementptr inbounds i8, i8* %374, i64 2
  %397 = load i8, i8* %396, align 1
  %398 = zext i8 %397 to i32
  store i32 %398, i32* %21, align 4
  br label %409

399:                                              ; preds = %364
  %400 = load i32*, i32** %301, align 8
  %401 = zext i8 %375 to i64
  %402 = getelementptr inbounds i32, i32* %400, i64 %401
  %403 = load i32, i32* %402, align 4
  %404 = icmp sgt i32 %403, -1
  br i1 %404, label %405, label %409

405:                                              ; preds = %399
  %406 = getelementptr inbounds i8, i8* %374, i64 2
  %407 = load i8, i8* %406, align 1
  %408 = zext i8 %407 to i32
  store i32 %408, i32* %21, align 4
  store i32 %403, i32* %23, align 8
  br label %909

409:                                              ; preds = %399, %394, %364
  %410 = phi i32 [ %395, %394 ], [ %319, %364 ], [ %319, %399 ]
  %411 = getelementptr inbounds i8, i8* %374, i64 1
  %412 = load i8, i8* %411, align 1
  %413 = icmp ugt i8 %412, 1
  br i1 %413, label %414, label %433

414:                                              ; preds = %409
  %415 = load i32, i32* %269, align 8
  %416 = load i32, i32* %299, align 4
  %417 = icmp sgt i32 %415, %416
  br i1 %417, label %422, label %418

418:                                              ; preds = %414
  %419 = load i64, i64* %27, align 8
  %420 = sext i32 %415 to i64
  %421 = add nsw i64 %419, %420
  br label %427

422:                                              ; preds = %414
  %423 = load %struct.UTextFuncs*, %struct.UTextFuncs** %300, align 8
  %424 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %423, i64 0, i32 10
  %425 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %424, align 8
  %426 = tail call i64 %425(%struct.UText* %26) #8
  br label %427

427:                                              ; preds = %422, %418
  %428 = phi i64 [ %421, %418 ], [ %426, %422 ]
  %429 = trunc i64 %428 to i32
  %430 = load i32*, i32** %301, align 8
  %431 = zext i8 %412 to i64
  %432 = getelementptr inbounds i32, i32* %430, i64 %431
  store i32 %429, i32* %432, align 4
  br label %433

433:                                              ; preds = %427, %409
  %434 = icmp eq i8 %370, 0
  br i1 %434, label %457, label %435

435:                                              ; preds = %433
  br i1 %365, label %436, label %454

436:                                              ; preds = %435
  %437 = load i32, i32* %269, align 8
  %438 = load i32, i32* %270, align 4
  %439 = icmp slt i32 %437, %438
  br i1 %439, label %440, label %450

440:                                              ; preds = %436
  %441 = load i16*, i16** %302, align 8
  %442 = sext i32 %437 to i64
  %443 = getelementptr inbounds i16, i16* %441, i64 %442
  %444 = load i16, i16* %443, align 2
  %445 = icmp ult i16 %444, -10240
  br i1 %445, label %446, label %450

446:                                              ; preds = %440
  %447 = add nsw i32 %437, 1
  store i32 %447, i32* %269, align 8
  %448 = load i16, i16* %443, align 2
  %449 = zext i16 %448 to i32
  br label %452

450:                                              ; preds = %440, %436
  %451 = tail call i32 @utext_next32_69(%struct.UText* %26) #8
  br label %452

452:                                              ; preds = %450, %446
  %453 = phi i32 [ %449, %446 ], [ %451, %450 ]
  br label %303

454:                                              ; preds = %435
  %455 = icmp eq i32 %366, 0
  %456 = select i1 %455, i32 1, i32 %366
  br label %315

457:                                              ; preds = %433, %321
  %458 = phi i32 [ %319, %321 ], [ %410, %433 ]
  %459 = icmp eq i32 %458, %24
  br i1 %459, label %460, label %464

460:                                              ; preds = %457
  tail call void @utext_setNativeIndex_69(%struct.UText* %26, i64 %25) #8
  %461 = tail call i32 @utext_next32_69(%struct.UText* %26) #8
  %462 = tail call i64 @utext_getNativeIndex_69(%struct.UText* %26) #8
  %463 = trunc i64 %462 to i32
  store i32 0, i32* %21, align 4
  br label %464

464:                                              ; preds = %460, %457
  %465 = phi i32 [ %463, %460 ], [ %458, %457 ]
  store i32 %465, i32* %23, align 8
  br label %909

466:                                              ; preds = %1
  br i1 %9, label %467, label %688

467:                                              ; preds = %466
  br i1 %30, label %468, label %482

468:                                              ; preds = %467
  %469 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 6
  %470 = load i32, i32* %469, align 4
  %471 = sext i32 %470 to i64
  %472 = icmp slt i64 %29, %471
  br i1 %472, label %473, label %482

473:                                              ; preds = %468
  %474 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  %475 = load i16*, i16** %474, align 8
  %476 = getelementptr inbounds i16, i16* %475, i64 %29
  %477 = load i16, i16* %476, align 2
  %478 = icmp ult i16 %477, -9216
  br i1 %478, label %479, label %482

479:                                              ; preds = %473
  %480 = trunc i64 %29 to i32
  %481 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 8
  store i32 %480, i32* %481, align 8
  br label %485

482:                                              ; preds = %473, %468, %467
  tail call void @utext_setNativeIndex_69(%struct.UText* %26, i64 %25) #8
  %483 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 8
  %484 = load i32, i32* %483, align 8
  br label %485

485:                                              ; preds = %482, %479
  %486 = phi i32 [ %484, %482 ], [ %480, %479 ]
  %487 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 8
  %488 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 9
  %489 = load i32, i32* %488, align 4
  %490 = icmp slt i32 %486, %489
  br i1 %490, label %491, label %502

491:                                              ; preds = %485
  %492 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  %493 = load i16*, i16** %492, align 8
  %494 = sext i32 %486 to i64
  %495 = getelementptr inbounds i16, i16* %493, i64 %494
  %496 = load i16, i16* %495, align 2
  %497 = icmp ult i16 %496, -10240
  br i1 %497, label %498, label %502

498:                                              ; preds = %491
  %499 = add nsw i32 %486, 1
  store i32 %499, i32* %487, align 8
  %500 = load i16, i16* %495, align 2
  %501 = zext i16 %500 to i32
  br label %507

502:                                              ; preds = %491, %485
  %503 = tail call i32 @utext_next32_69(%struct.UText* %26) #8
  %504 = icmp eq i32 %503, -1
  br i1 %504, label %505, label %507

505:                                              ; preds = %502
  %506 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 12
  store i8 1, i8* %506, align 8
  br label %909

507:                                              ; preds = %502, %498
  %508 = phi i32 [ %501, %498 ], [ %503, %502 ]
  %509 = zext i32 %18 to i64
  %510 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %16, i64 0, i32 5, i64 %509
  %511 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %16, i64 0, i32 4
  %512 = load i32, i32* %511, align 4
  %513 = and i32 %512, 2
  %514 = trunc i32 %513 to i16
  %515 = lshr exact i32 %513, 1
  %516 = xor i32 %515, 1
  %517 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 6
  %518 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 11
  %519 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 13
  %520 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  br label %521

521:                                              ; preds = %674, %507
  %522 = phi i16 [ %514, %507 ], [ %585, %674 ]
  %523 = phi i32 [ %516, %507 ], [ 1, %674 ]
  %524 = phi i8* [ %510, %507 ], [ %592, %674 ]
  %525 = phi i32 [ %508, %507 ], [ %675, %674 ]
  %526 = phi i32 [ %24, %507 ], [ %631, %674 ]
  %527 = icmp eq i32 %525, -1
  %528 = icmp ult i32 %525, 65536
  %529 = icmp ult i32 %525, 1114112
  %530 = lshr i32 %525, 6
  %531 = zext i32 %530 to i64
  %532 = and i32 %525, 63
  br label %533

533:                                              ; preds = %521, %676
  %534 = phi i16 [ %585, %676 ], [ %522, %521 ]
  %535 = phi i32 [ %678, %676 ], [ %523, %521 ]
  %536 = phi i8* [ %592, %676 ], [ %524, %521 ]
  %537 = phi i32 [ %631, %676 ], [ %526, %521 ]
  %538 = bitcast i8* %536 to %"struct.icu_69::RBBIStateTableRowT.2"*
  br i1 %527, label %539, label %541

539:                                              ; preds = %533
  %540 = icmp eq i32 %535, 2
  br i1 %540, label %679, label %582

541:                                              ; preds = %533
  %542 = icmp eq i32 %535, 1
  br i1 %542, label %543, label %582

543:                                              ; preds = %541
  %544 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %2, align 8
  %545 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %544, i64 0, i32 7
  %546 = load %struct.UCPTrie*, %struct.UCPTrie** %545, align 8
  %547 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %546, i64 0, i32 1, i32 0
  %548 = load i8*, i8** %547, align 8
  br i1 %528, label %549, label %556

549:                                              ; preds = %543
  %550 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %546, i64 0, i32 0
  %551 = load i16*, i16** %550, align 8
  %552 = getelementptr inbounds i16, i16* %551, i64 %531
  %553 = load i16, i16* %552, align 2
  %554 = zext i16 %553 to i32
  %555 = add nuw nsw i32 %532, %554
  br label %571

556:                                              ; preds = %543
  br i1 %529, label %557, label %567

557:                                              ; preds = %556
  %558 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %546, i64 0, i32 4
  %559 = load i32, i32* %558, align 8
  %560 = icmp sgt i32 %559, %525
  br i1 %560, label %565, label %561

561:                                              ; preds = %557
  %562 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %546, i64 0, i32 3
  %563 = load i32, i32* %562, align 4
  %564 = add nsw i32 %563, -2
  br label %571

565:                                              ; preds = %557
  %566 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %546, i32 %525) #8
  br label %571

567:                                              ; preds = %556
  %568 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %546, i64 0, i32 3
  %569 = load i32, i32* %568, align 4
  %570 = add nsw i32 %569, -1
  br label %571

571:                                              ; preds = %567, %565, %561, %549
  %572 = phi i32 [ %555, %549 ], [ %570, %567 ], [ %564, %561 ], [ %566, %565 ]
  %573 = sext i32 %572 to i64
  %574 = getelementptr inbounds i8, i8* %548, i64 %573
  %575 = load i8, i8* %574, align 1
  %576 = zext i8 %575 to i16
  %577 = zext i8 %575 to i32
  %578 = icmp ule i32 %20, %577
  %579 = zext i1 %578 to i32
  %580 = load i32, i32* %22, align 8
  %581 = add i32 %580, %579
  store i32 %581, i32* %22, align 8
  br label %582

582:                                              ; preds = %571, %541, %539
  %583 = phi i1 [ true, %571 ], [ false, %541 ], [ false, %539 ]
  %584 = phi i32 [ 1, %571 ], [ %535, %541 ], [ 2, %539 ]
  %585 = phi i16 [ %576, %571 ], [ %534, %541 ], [ 1, %539 ]
  %586 = zext i16 %585 to i64
  %587 = getelementptr inbounds %"struct.icu_69::RBBIStateTableRowT.2", %"struct.icu_69::RBBIStateTableRowT.2"* %538, i64 0, i32 3, i64 %586
  %588 = load i16, i16* %587, align 2
  %589 = zext i16 %588 to i32
  %590 = mul i32 %18, %589
  %591 = zext i32 %590 to i64
  %592 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %16, i64 0, i32 5, i64 %591
  %593 = bitcast i8* %592 to i16*
  %594 = load i16, i16* %593, align 2
  switch i16 %594, label %619 [
    i16 1, label %595
    i16 0, label %630
  ]

595:                                              ; preds = %582
  %596 = icmp eq i32 %584, 0
  br i1 %596, label %613, label %597

597:                                              ; preds = %595
  %598 = load i32, i32* %487, align 8
  %599 = load i32, i32* %517, align 4
  %600 = icmp sgt i32 %598, %599
  br i1 %600, label %605, label %601

601:                                              ; preds = %597
  %602 = load i64, i64* %27, align 8
  %603 = sext i32 %598 to i64
  %604 = add nsw i64 %602, %603
  br label %610

605:                                              ; preds = %597
  %606 = load %struct.UTextFuncs*, %struct.UTextFuncs** %518, align 8
  %607 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %606, i64 0, i32 10
  %608 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %607, align 8
  %609 = tail call i64 %608(%struct.UText* %26) #8
  br label %610

610:                                              ; preds = %605, %601
  %611 = phi i64 [ %604, %601 ], [ %609, %605 ]
  %612 = trunc i64 %611 to i32
  br label %613

613:                                              ; preds = %610, %595
  %614 = phi i32 [ %612, %610 ], [ %537, %595 ]
  %615 = getelementptr inbounds i8, i8* %592, i64 4
  %616 = bitcast i8* %615 to i16*
  %617 = load i16, i16* %616, align 2
  %618 = zext i16 %617 to i32
  store i32 %618, i32* %21, align 4
  br label %630

619:                                              ; preds = %582
  %620 = load i32*, i32** %519, align 8
  %621 = zext i16 %594 to i64
  %622 = getelementptr inbounds i32, i32* %620, i64 %621
  %623 = load i32, i32* %622, align 4
  %624 = icmp sgt i32 %623, -1
  br i1 %624, label %625, label %630

625:                                              ; preds = %619
  %626 = getelementptr inbounds i8, i8* %592, i64 4
  %627 = bitcast i8* %626 to i16*
  %628 = load i16, i16* %627, align 2
  %629 = zext i16 %628 to i32
  store i32 %629, i32* %21, align 4
  store i32 %623, i32* %23, align 8
  br label %909

630:                                              ; preds = %619, %613, %582
  %631 = phi i32 [ %614, %613 ], [ %537, %582 ], [ %537, %619 ]
  %632 = getelementptr inbounds i8, i8* %592, i64 2
  %633 = bitcast i8* %632 to i16*
  %634 = load i16, i16* %633, align 2
  %635 = icmp ugt i16 %634, 1
  br i1 %635, label %636, label %655

636:                                              ; preds = %630
  %637 = load i32, i32* %487, align 8
  %638 = load i32, i32* %517, align 4
  %639 = icmp sgt i32 %637, %638
  br i1 %639, label %644, label %640

640:                                              ; preds = %636
  %641 = load i64, i64* %27, align 8
  %642 = sext i32 %637 to i64
  %643 = add nsw i64 %641, %642
  br label %649

644:                                              ; preds = %636
  %645 = load %struct.UTextFuncs*, %struct.UTextFuncs** %518, align 8
  %646 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %645, i64 0, i32 10
  %647 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %646, align 8
  %648 = tail call i64 %647(%struct.UText* %26) #8
  br label %649

649:                                              ; preds = %644, %640
  %650 = phi i64 [ %643, %640 ], [ %648, %644 ]
  %651 = trunc i64 %650 to i32
  %652 = load i32*, i32** %519, align 8
  %653 = zext i16 %634 to i64
  %654 = getelementptr inbounds i32, i32* %652, i64 %653
  store i32 %651, i32* %654, align 4
  br label %655

655:                                              ; preds = %649, %630
  %656 = icmp eq i16 %588, 0
  br i1 %656, label %679, label %657

657:                                              ; preds = %655
  br i1 %583, label %658, label %676

658:                                              ; preds = %657
  %659 = load i32, i32* %487, align 8
  %660 = load i32, i32* %488, align 4
  %661 = icmp slt i32 %659, %660
  br i1 %661, label %662, label %672

662:                                              ; preds = %658
  %663 = load i16*, i16** %520, align 8
  %664 = sext i32 %659 to i64
  %665 = getelementptr inbounds i16, i16* %663, i64 %664
  %666 = load i16, i16* %665, align 2
  %667 = icmp ult i16 %666, -10240
  br i1 %667, label %668, label %672

668:                                              ; preds = %662
  %669 = add nsw i32 %659, 1
  store i32 %669, i32* %487, align 8
  %670 = load i16, i16* %665, align 2
  %671 = zext i16 %670 to i32
  br label %674

672:                                              ; preds = %662, %658
  %673 = tail call i32 @utext_next32_69(%struct.UText* %26) #8
  br label %674

674:                                              ; preds = %672, %668
  %675 = phi i32 [ %671, %668 ], [ %673, %672 ]
  br label %521

676:                                              ; preds = %657
  %677 = icmp eq i32 %584, 0
  %678 = select i1 %677, i32 1, i32 %584
  br label %533

679:                                              ; preds = %655, %539
  %680 = phi i32 [ %537, %539 ], [ %631, %655 ]
  %681 = icmp eq i32 %680, %24
  br i1 %681, label %682, label %686

682:                                              ; preds = %679
  tail call void @utext_setNativeIndex_69(%struct.UText* %26, i64 %25) #8
  %683 = tail call i32 @utext_next32_69(%struct.UText* %26) #8
  %684 = tail call i64 @utext_getNativeIndex_69(%struct.UText* %26) #8
  %685 = trunc i64 %684 to i32
  store i32 0, i32* %21, align 4
  br label %686

686:                                              ; preds = %682, %679
  %687 = phi i32 [ %685, %682 ], [ %680, %679 ]
  store i32 %687, i32* %23, align 8
  br label %909

688:                                              ; preds = %466
  br i1 %30, label %689, label %703

689:                                              ; preds = %688
  %690 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 6
  %691 = load i32, i32* %690, align 4
  %692 = sext i32 %691 to i64
  %693 = icmp slt i64 %29, %692
  br i1 %693, label %694, label %703

694:                                              ; preds = %689
  %695 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  %696 = load i16*, i16** %695, align 8
  %697 = getelementptr inbounds i16, i16* %696, i64 %29
  %698 = load i16, i16* %697, align 2
  %699 = icmp ult i16 %698, -9216
  br i1 %699, label %700, label %703

700:                                              ; preds = %694
  %701 = trunc i64 %29 to i32
  %702 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 8
  store i32 %701, i32* %702, align 8
  br label %706

703:                                              ; preds = %694, %689, %688
  tail call void @utext_setNativeIndex_69(%struct.UText* %26, i64 %25) #8
  %704 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 8
  %705 = load i32, i32* %704, align 8
  br label %706

706:                                              ; preds = %703, %700
  %707 = phi i32 [ %705, %703 ], [ %701, %700 ]
  %708 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 8
  %709 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 9
  %710 = load i32, i32* %709, align 4
  %711 = icmp slt i32 %707, %710
  br i1 %711, label %712, label %723

712:                                              ; preds = %706
  %713 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  %714 = load i16*, i16** %713, align 8
  %715 = sext i32 %707 to i64
  %716 = getelementptr inbounds i16, i16* %714, i64 %715
  %717 = load i16, i16* %716, align 2
  %718 = icmp ult i16 %717, -10240
  br i1 %718, label %719, label %723

719:                                              ; preds = %712
  %720 = add nsw i32 %707, 1
  store i32 %720, i32* %708, align 8
  %721 = load i16, i16* %716, align 2
  %722 = zext i16 %721 to i32
  br label %728

723:                                              ; preds = %712, %706
  %724 = tail call i32 @utext_next32_69(%struct.UText* %26) #8
  %725 = icmp eq i32 %724, -1
  br i1 %725, label %726, label %728

726:                                              ; preds = %723
  %727 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 12
  store i8 1, i8* %727, align 8
  br label %909

728:                                              ; preds = %723, %719
  %729 = phi i32 [ %722, %719 ], [ %724, %723 ]
  %730 = zext i32 %18 to i64
  %731 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %16, i64 0, i32 5, i64 %730
  %732 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %16, i64 0, i32 4
  %733 = load i32, i32* %732, align 4
  %734 = and i32 %733, 2
  %735 = trunc i32 %734 to i16
  %736 = lshr exact i32 %734, 1
  %737 = xor i32 %736, 1
  %738 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 6
  %739 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 11
  %740 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 13
  %741 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  br label %742

742:                                              ; preds = %895, %728
  %743 = phi i16 [ %735, %728 ], [ %806, %895 ]
  %744 = phi i32 [ %737, %728 ], [ 1, %895 ]
  %745 = phi i8* [ %731, %728 ], [ %813, %895 ]
  %746 = phi i32 [ %729, %728 ], [ %896, %895 ]
  %747 = phi i32 [ %24, %728 ], [ %852, %895 ]
  %748 = icmp eq i32 %746, -1
  %749 = icmp ult i32 %746, 65536
  %750 = icmp ult i32 %746, 1114112
  %751 = lshr i32 %746, 6
  %752 = zext i32 %751 to i64
  %753 = and i32 %746, 63
  br label %754

754:                                              ; preds = %742, %897
  %755 = phi i16 [ %806, %897 ], [ %743, %742 ]
  %756 = phi i32 [ %899, %897 ], [ %744, %742 ]
  %757 = phi i8* [ %813, %897 ], [ %745, %742 ]
  %758 = phi i32 [ %852, %897 ], [ %747, %742 ]
  %759 = bitcast i8* %757 to %"struct.icu_69::RBBIStateTableRowT.2"*
  br i1 %748, label %760, label %762

760:                                              ; preds = %754
  %761 = icmp eq i32 %756, 2
  br i1 %761, label %900, label %803

762:                                              ; preds = %754
  %763 = icmp eq i32 %756, 1
  br i1 %763, label %764, label %803

764:                                              ; preds = %762
  %765 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %2, align 8
  %766 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %765, i64 0, i32 7
  %767 = load %struct.UCPTrie*, %struct.UCPTrie** %766, align 8
  %768 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %767, i64 0, i32 1
  %769 = bitcast %union.UCPTrieData* %768 to i16**
  %770 = load i16*, i16** %769, align 8
  br i1 %749, label %771, label %778

771:                                              ; preds = %764
  %772 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %767, i64 0, i32 0
  %773 = load i16*, i16** %772, align 8
  %774 = getelementptr inbounds i16, i16* %773, i64 %752
  %775 = load i16, i16* %774, align 2
  %776 = zext i16 %775 to i32
  %777 = add nuw nsw i32 %753, %776
  br label %793

778:                                              ; preds = %764
  br i1 %750, label %779, label %789

779:                                              ; preds = %778
  %780 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %767, i64 0, i32 4
  %781 = load i32, i32* %780, align 8
  %782 = icmp sgt i32 %781, %746
  br i1 %782, label %787, label %783

783:                                              ; preds = %779
  %784 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %767, i64 0, i32 3
  %785 = load i32, i32* %784, align 4
  %786 = add nsw i32 %785, -2
  br label %793

787:                                              ; preds = %779
  %788 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %767, i32 %746) #8
  br label %793

789:                                              ; preds = %778
  %790 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %767, i64 0, i32 3
  %791 = load i32, i32* %790, align 4
  %792 = add nsw i32 %791, -1
  br label %793

793:                                              ; preds = %789, %787, %783, %771
  %794 = phi i32 [ %777, %771 ], [ %792, %789 ], [ %786, %783 ], [ %788, %787 ]
  %795 = sext i32 %794 to i64
  %796 = getelementptr inbounds i16, i16* %770, i64 %795
  %797 = load i16, i16* %796, align 2
  %798 = zext i16 %797 to i32
  %799 = icmp ule i32 %20, %798
  %800 = zext i1 %799 to i32
  %801 = load i32, i32* %22, align 8
  %802 = add i32 %801, %800
  store i32 %802, i32* %22, align 8
  br label %803

803:                                              ; preds = %793, %762, %760
  %804 = phi i1 [ true, %793 ], [ false, %762 ], [ false, %760 ]
  %805 = phi i32 [ 1, %793 ], [ %756, %762 ], [ 2, %760 ]
  %806 = phi i16 [ %797, %793 ], [ %755, %762 ], [ 1, %760 ]
  %807 = zext i16 %806 to i64
  %808 = getelementptr inbounds %"struct.icu_69::RBBIStateTableRowT.2", %"struct.icu_69::RBBIStateTableRowT.2"* %759, i64 0, i32 3, i64 %807
  %809 = load i16, i16* %808, align 2
  %810 = zext i16 %809 to i32
  %811 = mul i32 %18, %810
  %812 = zext i32 %811 to i64
  %813 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %16, i64 0, i32 5, i64 %812
  %814 = bitcast i8* %813 to i16*
  %815 = load i16, i16* %814, align 2
  switch i16 %815, label %840 [
    i16 1, label %816
    i16 0, label %851
  ]

816:                                              ; preds = %803
  %817 = icmp eq i32 %805, 0
  br i1 %817, label %834, label %818

818:                                              ; preds = %816
  %819 = load i32, i32* %708, align 8
  %820 = load i32, i32* %738, align 4
  %821 = icmp sgt i32 %819, %820
  br i1 %821, label %826, label %822

822:                                              ; preds = %818
  %823 = load i64, i64* %27, align 8
  %824 = sext i32 %819 to i64
  %825 = add nsw i64 %823, %824
  br label %831

826:                                              ; preds = %818
  %827 = load %struct.UTextFuncs*, %struct.UTextFuncs** %739, align 8
  %828 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %827, i64 0, i32 10
  %829 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %828, align 8
  %830 = tail call i64 %829(%struct.UText* %26) #8
  br label %831

831:                                              ; preds = %826, %822
  %832 = phi i64 [ %825, %822 ], [ %830, %826 ]
  %833 = trunc i64 %832 to i32
  br label %834

834:                                              ; preds = %831, %816
  %835 = phi i32 [ %833, %831 ], [ %758, %816 ]
  %836 = getelementptr inbounds i8, i8* %813, i64 4
  %837 = bitcast i8* %836 to i16*
  %838 = load i16, i16* %837, align 2
  %839 = zext i16 %838 to i32
  store i32 %839, i32* %21, align 4
  br label %851

840:                                              ; preds = %803
  %841 = load i32*, i32** %740, align 8
  %842 = zext i16 %815 to i64
  %843 = getelementptr inbounds i32, i32* %841, i64 %842
  %844 = load i32, i32* %843, align 4
  %845 = icmp sgt i32 %844, -1
  br i1 %845, label %846, label %851

846:                                              ; preds = %840
  %847 = getelementptr inbounds i8, i8* %813, i64 4
  %848 = bitcast i8* %847 to i16*
  %849 = load i16, i16* %848, align 2
  %850 = zext i16 %849 to i32
  store i32 %850, i32* %21, align 4
  store i32 %844, i32* %23, align 8
  br label %909

851:                                              ; preds = %840, %834, %803
  %852 = phi i32 [ %835, %834 ], [ %758, %803 ], [ %758, %840 ]
  %853 = getelementptr inbounds i8, i8* %813, i64 2
  %854 = bitcast i8* %853 to i16*
  %855 = load i16, i16* %854, align 2
  %856 = icmp ugt i16 %855, 1
  br i1 %856, label %857, label %876

857:                                              ; preds = %851
  %858 = load i32, i32* %708, align 8
  %859 = load i32, i32* %738, align 4
  %860 = icmp sgt i32 %858, %859
  br i1 %860, label %865, label %861

861:                                              ; preds = %857
  %862 = load i64, i64* %27, align 8
  %863 = sext i32 %858 to i64
  %864 = add nsw i64 %862, %863
  br label %870

865:                                              ; preds = %857
  %866 = load %struct.UTextFuncs*, %struct.UTextFuncs** %739, align 8
  %867 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %866, i64 0, i32 10
  %868 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %867, align 8
  %869 = tail call i64 %868(%struct.UText* %26) #8
  br label %870

870:                                              ; preds = %865, %861
  %871 = phi i64 [ %864, %861 ], [ %869, %865 ]
  %872 = trunc i64 %871 to i32
  %873 = load i32*, i32** %740, align 8
  %874 = zext i16 %855 to i64
  %875 = getelementptr inbounds i32, i32* %873, i64 %874
  store i32 %872, i32* %875, align 4
  br label %876

876:                                              ; preds = %870, %851
  %877 = icmp eq i16 %809, 0
  br i1 %877, label %900, label %878

878:                                              ; preds = %876
  br i1 %804, label %879, label %897

879:                                              ; preds = %878
  %880 = load i32, i32* %708, align 8
  %881 = load i32, i32* %709, align 4
  %882 = icmp slt i32 %880, %881
  br i1 %882, label %883, label %893

883:                                              ; preds = %879
  %884 = load i16*, i16** %741, align 8
  %885 = sext i32 %880 to i64
  %886 = getelementptr inbounds i16, i16* %884, i64 %885
  %887 = load i16, i16* %886, align 2
  %888 = icmp ult i16 %887, -10240
  br i1 %888, label %889, label %893

889:                                              ; preds = %883
  %890 = add nsw i32 %880, 1
  store i32 %890, i32* %708, align 8
  %891 = load i16, i16* %886, align 2
  %892 = zext i16 %891 to i32
  br label %895

893:                                              ; preds = %883, %879
  %894 = tail call i32 @utext_next32_69(%struct.UText* %26) #8
  br label %895

895:                                              ; preds = %893, %889
  %896 = phi i32 [ %892, %889 ], [ %894, %893 ]
  br label %742

897:                                              ; preds = %878
  %898 = icmp eq i32 %805, 0
  %899 = select i1 %898, i32 1, i32 %805
  br label %754

900:                                              ; preds = %876, %760
  %901 = phi i32 [ %758, %760 ], [ %852, %876 ]
  %902 = icmp eq i32 %901, %24
  br i1 %902, label %903, label %907

903:                                              ; preds = %900
  tail call void @utext_setNativeIndex_69(%struct.UText* %26, i64 %25) #8
  %904 = tail call i32 @utext_next32_69(%struct.UText* %26) #8
  %905 = tail call i64 @utext_getNativeIndex_69(%struct.UText* %26) #8
  %906 = trunc i64 %905 to i32
  store i32 0, i32* %21, align 4
  br label %907

907:                                              ; preds = %903, %900
  %908 = phi i32 [ %906, %903 ], [ %901, %900 ]
  store i32 %908, i32* %23, align 8
  br label %909

909:                                              ; preds = %907, %846, %726, %686, %625, %505, %464, %405, %287, %247, %188, %70
  %910 = phi i32 [ -1, %70 ], [ %248, %247 ], [ %186, %188 ], [ -1, %287 ], [ %465, %464 ], [ %403, %405 ], [ -1, %505 ], [ %687, %686 ], [ %623, %625 ], [ -1, %726 ], [ %908, %907 ], [ %844, %846 ]
  ret i32 %910
}

declare i32 @ucptrie_getValueWidth_69(%struct.UCPTrie*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6922RuleBasedBreakIterator18handleSafePreviousEi(%"class.icu_69::RuleBasedBreakIterator"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 2
  %4 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %3, align 8
  %5 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %4, i64 0, i32 2
  %6 = load %"struct.icu_69::RBBIStateTable"*, %"struct.icu_69::RBBIStateTable"** %5, align 8
  %7 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %4, i64 0, i32 7
  %8 = load %struct.UCPTrie*, %struct.UCPTrie** %7, align 8
  %9 = tail call i32 @ucptrie_getValueWidth_69(%struct.UCPTrie* %8) #8
  %10 = icmp eq i32 %9, 2
  %11 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %6, i64 0, i32 4
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 4
  %14 = icmp eq i32 %13, 0
  %15 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %3, align 8
  %16 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %15, i64 0, i32 2
  %17 = load %"struct.icu_69::RBBIStateTable"*, %"struct.icu_69::RBBIStateTable"** %16, align 8
  %18 = sext i32 %1 to i64
  %19 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 7
  %21 = load i64, i64* %20, align 8
  %22 = sub nsw i64 %18, %21
  %23 = icmp sgt i64 %22, -1
  br i1 %14, label %318, label %24

24:                                               ; preds = %2
  br i1 %10, label %25, label %171

25:                                               ; preds = %24
  br i1 %23, label %26, label %40

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 6
  %28 = load i32, i32* %27, align 4
  %29 = sext i32 %28 to i64
  %30 = icmp slt i64 %22, %29
  br i1 %30, label %31, label %40

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  %33 = load i16*, i16** %32, align 8
  %34 = getelementptr inbounds i16, i16* %33, i64 %22
  %35 = load i16, i16* %34, align 2
  %36 = icmp ult i16 %35, -9216
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  %38 = trunc i64 %22 to i32
  %39 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 8
  store i32 %38, i32* %39, align 8
  br label %42

40:                                               ; preds = %31, %26, %25
  tail call void @utext_setNativeIndex_69(%struct.UText* %19, i64 %18) #8
  %41 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %3, align 8
  br label %42

42:                                               ; preds = %40, %37
  %43 = phi %"class.icu_69::RBBIDataWrapper"* [ %41, %40 ], [ %15, %37 ]
  %44 = icmp eq %"class.icu_69::RBBIDataWrapper"* %43, null
  br i1 %44, label %614, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 8
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 6
  %49 = load i32, i32* %48, align 4
  %50 = icmp sgt i32 %47, %49
  br i1 %50, label %55, label %51

51:                                               ; preds = %45
  %52 = load i64, i64* %20, align 8
  %53 = sext i32 %47 to i64
  %54 = add nsw i64 %52, %53
  br label %61

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 11
  %57 = load %struct.UTextFuncs*, %struct.UTextFuncs** %56, align 8
  %58 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %57, i64 0, i32 10
  %59 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %58, align 8
  %60 = tail call i64 %59(%struct.UText* %19) #8
  br label %61

61:                                               ; preds = %55, %51
  %62 = phi i64 [ %54, %51 ], [ %60, %55 ]
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %614, label %64

64:                                               ; preds = %61
  %65 = load i32, i32* %46, align 8
  %66 = icmp sgt i32 %65, 0
  br i1 %66, label %67, label %78

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  %69 = load i16*, i16** %68, align 8
  %70 = add nsw i32 %65, -1
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i16, i16* %69, i64 %71
  %73 = load i16, i16* %72, align 2
  %74 = icmp ult i16 %73, -10240
  br i1 %74, label %75, label %78

75:                                               ; preds = %67
  store i32 %70, i32* %46, align 8
  %76 = load i16, i16* %72, align 2
  %77 = zext i16 %76 to i32
  br label %81

78:                                               ; preds = %67, %64
  %79 = tail call i32 @utext_previous32_69(%struct.UText* %19) #8
  %80 = icmp eq i32 %79, -1
  br i1 %80, label %154, label %81

81:                                               ; preds = %78, %75
  %82 = phi i32 [ %77, %75 ], [ %79, %78 ]
  %83 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %17, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  br label %86

86:                                               ; preds = %151, %81
  %87 = phi i32 [ %82, %81 ], [ %152, %151 ]
  %88 = phi i32 [ %84, %81 ], [ %134, %151 ]
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %17, i64 0, i32 5, i64 %89
  %91 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %3, align 8
  %92 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %91, i64 0, i32 7
  %93 = load %struct.UCPTrie*, %struct.UCPTrie** %92, align 8
  %94 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %93, i64 0, i32 1, i32 0
  %95 = load i8*, i8** %94, align 8
  %96 = icmp ult i32 %87, 65536
  br i1 %96, label %97, label %107

97:                                               ; preds = %86
  %98 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %93, i64 0, i32 0
  %99 = load i16*, i16** %98, align 8
  %100 = lshr i32 %87, 6
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds i16, i16* %99, i64 %101
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i32
  %105 = and i32 %87, 63
  %106 = add nuw nsw i32 %105, %104
  br label %123

107:                                              ; preds = %86
  %108 = icmp ult i32 %87, 1114112
  br i1 %108, label %109, label %119

109:                                              ; preds = %107
  %110 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %93, i64 0, i32 4
  %111 = load i32, i32* %110, align 8
  %112 = icmp sgt i32 %111, %87
  br i1 %112, label %117, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %93, i64 0, i32 3
  %115 = load i32, i32* %114, align 4
  %116 = add nsw i32 %115, -2
  br label %123

117:                                              ; preds = %109
  %118 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %93, i32 %87) #8
  br label %123

119:                                              ; preds = %107
  %120 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %93, i64 0, i32 3
  %121 = load i32, i32* %120, align 4
  %122 = add nsw i32 %121, -1
  br label %123

123:                                              ; preds = %119, %117, %113, %97
  %124 = phi i32 [ %106, %97 ], [ %122, %119 ], [ %116, %113 ], [ %118, %117 ]
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i8, i8* %95, i64 %125
  %127 = load i8, i8* %126, align 1
  %128 = getelementptr inbounds i8, i8* %90, i64 3
  %129 = zext i8 %127 to i64
  %130 = getelementptr inbounds i8, i8* %128, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i32
  %133 = load i32, i32* %83, align 4
  %134 = mul i32 %133, %132
  %135 = icmp eq i8 %131, 0
  br i1 %135, label %154, label %136

136:                                              ; preds = %123
  %137 = load i32, i32* %46, align 8
  %138 = icmp sgt i32 %137, 0
  br i1 %138, label %139, label %149

139:                                              ; preds = %136
  %140 = load i16*, i16** %85, align 8
  %141 = add nsw i32 %137, -1
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds i16, i16* %140, i64 %142
  %144 = load i16, i16* %143, align 2
  %145 = icmp ult i16 %144, -10240
  br i1 %145, label %146, label %149

146:                                              ; preds = %139
  store i32 %141, i32* %46, align 8
  %147 = load i16, i16* %143, align 2
  %148 = zext i16 %147 to i32
  br label %151

149:                                              ; preds = %139, %136
  %150 = tail call i32 @utext_previous32_69(%struct.UText* %19) #8
  br label %151

151:                                              ; preds = %149, %146
  %152 = phi i32 [ %148, %146 ], [ %150, %149 ]
  %153 = icmp eq i32 %152, -1
  br i1 %153, label %154, label %86

154:                                              ; preds = %151, %123, %78
  %155 = load i32, i32* %46, align 8
  %156 = load i32, i32* %48, align 4
  %157 = icmp sgt i32 %155, %156
  br i1 %157, label %162, label %158

158:                                              ; preds = %154
  %159 = load i64, i64* %20, align 8
  %160 = sext i32 %155 to i64
  %161 = add nsw i64 %159, %160
  br label %168

162:                                              ; preds = %154
  %163 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 11
  %164 = load %struct.UTextFuncs*, %struct.UTextFuncs** %163, align 8
  %165 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %164, i64 0, i32 10
  %166 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %165, align 8
  %167 = tail call i64 %166(%struct.UText* %19) #8
  br label %168

168:                                              ; preds = %162, %158
  %169 = phi i64 [ %161, %158 ], [ %167, %162 ]
  %170 = trunc i64 %169 to i32
  br label %614

171:                                              ; preds = %24
  br i1 %23, label %172, label %186

172:                                              ; preds = %171
  %173 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 6
  %174 = load i32, i32* %173, align 4
  %175 = sext i32 %174 to i64
  %176 = icmp slt i64 %22, %175
  br i1 %176, label %177, label %186

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  %179 = load i16*, i16** %178, align 8
  %180 = getelementptr inbounds i16, i16* %179, i64 %22
  %181 = load i16, i16* %180, align 2
  %182 = icmp ult i16 %181, -9216
  br i1 %182, label %183, label %186

183:                                              ; preds = %177
  %184 = trunc i64 %22 to i32
  %185 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 8
  store i32 %184, i32* %185, align 8
  br label %188

186:                                              ; preds = %177, %172, %171
  tail call void @utext_setNativeIndex_69(%struct.UText* %19, i64 %18) #8
  %187 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %3, align 8
  br label %188

188:                                              ; preds = %186, %183
  %189 = phi %"class.icu_69::RBBIDataWrapper"* [ %187, %186 ], [ %15, %183 ]
  %190 = icmp eq %"class.icu_69::RBBIDataWrapper"* %189, null
  br i1 %190, label %614, label %191

191:                                              ; preds = %188
  %192 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 8
  %193 = load i32, i32* %192, align 8
  %194 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 6
  %195 = load i32, i32* %194, align 4
  %196 = icmp sgt i32 %193, %195
  br i1 %196, label %201, label %197

197:                                              ; preds = %191
  %198 = load i64, i64* %20, align 8
  %199 = sext i32 %193 to i64
  %200 = add nsw i64 %198, %199
  br label %207

201:                                              ; preds = %191
  %202 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 11
  %203 = load %struct.UTextFuncs*, %struct.UTextFuncs** %202, align 8
  %204 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %203, i64 0, i32 10
  %205 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %204, align 8
  %206 = tail call i64 %205(%struct.UText* %19) #8
  br label %207

207:                                              ; preds = %201, %197
  %208 = phi i64 [ %200, %197 ], [ %206, %201 ]
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %614, label %210

210:                                              ; preds = %207
  %211 = load i32, i32* %192, align 8
  %212 = icmp sgt i32 %211, 0
  br i1 %212, label %213, label %224

213:                                              ; preds = %210
  %214 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  %215 = load i16*, i16** %214, align 8
  %216 = add nsw i32 %211, -1
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds i16, i16* %215, i64 %217
  %219 = load i16, i16* %218, align 2
  %220 = icmp ult i16 %219, -10240
  br i1 %220, label %221, label %224

221:                                              ; preds = %213
  store i32 %216, i32* %192, align 8
  %222 = load i16, i16* %218, align 2
  %223 = zext i16 %222 to i32
  br label %227

224:                                              ; preds = %213, %210
  %225 = tail call i32 @utext_previous32_69(%struct.UText* %19) #8
  %226 = icmp eq i32 %225, -1
  br i1 %226, label %301, label %227

227:                                              ; preds = %224, %221
  %228 = phi i32 [ %223, %221 ], [ %225, %224 ]
  %229 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %17, i64 0, i32 1
  %230 = load i32, i32* %229, align 4
  %231 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  br label %232

232:                                              ; preds = %298, %227
  %233 = phi i32 [ %228, %227 ], [ %299, %298 ]
  %234 = phi i32 [ %230, %227 ], [ %281, %298 ]
  %235 = zext i32 %234 to i64
  %236 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %17, i64 0, i32 5, i64 %235
  %237 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %3, align 8
  %238 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %237, i64 0, i32 7
  %239 = load %struct.UCPTrie*, %struct.UCPTrie** %238, align 8
  %240 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %239, i64 0, i32 1
  %241 = bitcast %union.UCPTrieData* %240 to i16**
  %242 = load i16*, i16** %241, align 8
  %243 = icmp ult i32 %233, 65536
  br i1 %243, label %244, label %254

244:                                              ; preds = %232
  %245 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %239, i64 0, i32 0
  %246 = load i16*, i16** %245, align 8
  %247 = lshr i32 %233, 6
  %248 = zext i32 %247 to i64
  %249 = getelementptr inbounds i16, i16* %246, i64 %248
  %250 = load i16, i16* %249, align 2
  %251 = zext i16 %250 to i32
  %252 = and i32 %233, 63
  %253 = add nuw nsw i32 %252, %251
  br label %270

254:                                              ; preds = %232
  %255 = icmp ult i32 %233, 1114112
  br i1 %255, label %256, label %266

256:                                              ; preds = %254
  %257 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %239, i64 0, i32 4
  %258 = load i32, i32* %257, align 8
  %259 = icmp sgt i32 %258, %233
  br i1 %259, label %264, label %260

260:                                              ; preds = %256
  %261 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %239, i64 0, i32 3
  %262 = load i32, i32* %261, align 4
  %263 = add nsw i32 %262, -2
  br label %270

264:                                              ; preds = %256
  %265 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %239, i32 %233) #8
  br label %270

266:                                              ; preds = %254
  %267 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %239, i64 0, i32 3
  %268 = load i32, i32* %267, align 4
  %269 = add nsw i32 %268, -1
  br label %270

270:                                              ; preds = %266, %264, %260, %244
  %271 = phi i32 [ %253, %244 ], [ %269, %266 ], [ %263, %260 ], [ %265, %264 ]
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds i16, i16* %242, i64 %272
  %274 = load i16, i16* %273, align 2
  %275 = getelementptr inbounds i8, i8* %236, i64 3
  %276 = zext i16 %274 to i64
  %277 = getelementptr inbounds i8, i8* %275, i64 %276
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  %280 = load i32, i32* %229, align 4
  %281 = mul i32 %280, %279
  %282 = icmp eq i8 %278, 0
  br i1 %282, label %301, label %283

283:                                              ; preds = %270
  %284 = load i32, i32* %192, align 8
  %285 = icmp sgt i32 %284, 0
  br i1 %285, label %286, label %296

286:                                              ; preds = %283
  %287 = load i16*, i16** %231, align 8
  %288 = add nsw i32 %284, -1
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds i16, i16* %287, i64 %289
  %291 = load i16, i16* %290, align 2
  %292 = icmp ult i16 %291, -10240
  br i1 %292, label %293, label %296

293:                                              ; preds = %286
  store i32 %288, i32* %192, align 8
  %294 = load i16, i16* %290, align 2
  %295 = zext i16 %294 to i32
  br label %298

296:                                              ; preds = %286, %283
  %297 = tail call i32 @utext_previous32_69(%struct.UText* %19) #8
  br label %298

298:                                              ; preds = %296, %293
  %299 = phi i32 [ %295, %293 ], [ %297, %296 ]
  %300 = icmp eq i32 %299, -1
  br i1 %300, label %301, label %232

301:                                              ; preds = %298, %270, %224
  %302 = load i32, i32* %192, align 8
  %303 = load i32, i32* %194, align 4
  %304 = icmp sgt i32 %302, %303
  br i1 %304, label %309, label %305

305:                                              ; preds = %301
  %306 = load i64, i64* %20, align 8
  %307 = sext i32 %302 to i64
  %308 = add nsw i64 %306, %307
  br label %315

309:                                              ; preds = %301
  %310 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 11
  %311 = load %struct.UTextFuncs*, %struct.UTextFuncs** %310, align 8
  %312 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %311, i64 0, i32 10
  %313 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %312, align 8
  %314 = tail call i64 %313(%struct.UText* %19) #8
  br label %315

315:                                              ; preds = %309, %305
  %316 = phi i64 [ %308, %305 ], [ %314, %309 ]
  %317 = trunc i64 %316 to i32
  br label %614

318:                                              ; preds = %2
  br i1 %10, label %319, label %466

319:                                              ; preds = %318
  br i1 %23, label %320, label %334

320:                                              ; preds = %319
  %321 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 6
  %322 = load i32, i32* %321, align 4
  %323 = sext i32 %322 to i64
  %324 = icmp slt i64 %22, %323
  br i1 %324, label %325, label %334

325:                                              ; preds = %320
  %326 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  %327 = load i16*, i16** %326, align 8
  %328 = getelementptr inbounds i16, i16* %327, i64 %22
  %329 = load i16, i16* %328, align 2
  %330 = icmp ult i16 %329, -9216
  br i1 %330, label %331, label %334

331:                                              ; preds = %325
  %332 = trunc i64 %22 to i32
  %333 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 8
  store i32 %332, i32* %333, align 8
  br label %336

334:                                              ; preds = %325, %320, %319
  tail call void @utext_setNativeIndex_69(%struct.UText* %19, i64 %18) #8
  %335 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %3, align 8
  br label %336

336:                                              ; preds = %334, %331
  %337 = phi %"class.icu_69::RBBIDataWrapper"* [ %335, %334 ], [ %15, %331 ]
  %338 = icmp eq %"class.icu_69::RBBIDataWrapper"* %337, null
  br i1 %338, label %614, label %339

339:                                              ; preds = %336
  %340 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 8
  %341 = load i32, i32* %340, align 8
  %342 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 6
  %343 = load i32, i32* %342, align 4
  %344 = icmp sgt i32 %341, %343
  br i1 %344, label %349, label %345

345:                                              ; preds = %339
  %346 = load i64, i64* %20, align 8
  %347 = sext i32 %341 to i64
  %348 = add nsw i64 %346, %347
  br label %355

349:                                              ; preds = %339
  %350 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 11
  %351 = load %struct.UTextFuncs*, %struct.UTextFuncs** %350, align 8
  %352 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %351, i64 0, i32 10
  %353 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %352, align 8
  %354 = tail call i64 %353(%struct.UText* %19) #8
  br label %355

355:                                              ; preds = %349, %345
  %356 = phi i64 [ %348, %345 ], [ %354, %349 ]
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %614, label %358

358:                                              ; preds = %355
  %359 = load i32, i32* %340, align 8
  %360 = icmp sgt i32 %359, 0
  br i1 %360, label %361, label %372

361:                                              ; preds = %358
  %362 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  %363 = load i16*, i16** %362, align 8
  %364 = add nsw i32 %359, -1
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds i16, i16* %363, i64 %365
  %367 = load i16, i16* %366, align 2
  %368 = icmp ult i16 %367, -10240
  br i1 %368, label %369, label %372

369:                                              ; preds = %361
  store i32 %364, i32* %340, align 8
  %370 = load i16, i16* %366, align 2
  %371 = zext i16 %370 to i32
  br label %375

372:                                              ; preds = %361, %358
  %373 = tail call i32 @utext_previous32_69(%struct.UText* %19) #8
  %374 = icmp eq i32 %373, -1
  br i1 %374, label %449, label %375

375:                                              ; preds = %372, %369
  %376 = phi i32 [ %371, %369 ], [ %373, %372 ]
  %377 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %17, i64 0, i32 1
  %378 = load i32, i32* %377, align 4
  %379 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  br label %380

380:                                              ; preds = %446, %375
  %381 = phi i32 [ %376, %375 ], [ %447, %446 ]
  %382 = phi i32 [ %378, %375 ], [ %429, %446 ]
  %383 = zext i32 %382 to i64
  %384 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %17, i64 0, i32 5, i64 %383
  %385 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %3, align 8
  %386 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %385, i64 0, i32 7
  %387 = load %struct.UCPTrie*, %struct.UCPTrie** %386, align 8
  %388 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %387, i64 0, i32 1, i32 0
  %389 = load i8*, i8** %388, align 8
  %390 = icmp ult i32 %381, 65536
  br i1 %390, label %391, label %401

391:                                              ; preds = %380
  %392 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %387, i64 0, i32 0
  %393 = load i16*, i16** %392, align 8
  %394 = lshr i32 %381, 6
  %395 = zext i32 %394 to i64
  %396 = getelementptr inbounds i16, i16* %393, i64 %395
  %397 = load i16, i16* %396, align 2
  %398 = zext i16 %397 to i32
  %399 = and i32 %381, 63
  %400 = add nuw nsw i32 %399, %398
  br label %417

401:                                              ; preds = %380
  %402 = icmp ult i32 %381, 1114112
  br i1 %402, label %403, label %413

403:                                              ; preds = %401
  %404 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %387, i64 0, i32 4
  %405 = load i32, i32* %404, align 8
  %406 = icmp sgt i32 %405, %381
  br i1 %406, label %411, label %407

407:                                              ; preds = %403
  %408 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %387, i64 0, i32 3
  %409 = load i32, i32* %408, align 4
  %410 = add nsw i32 %409, -2
  br label %417

411:                                              ; preds = %403
  %412 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %387, i32 %381) #8
  br label %417

413:                                              ; preds = %401
  %414 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %387, i64 0, i32 3
  %415 = load i32, i32* %414, align 4
  %416 = add nsw i32 %415, -1
  br label %417

417:                                              ; preds = %413, %411, %407, %391
  %418 = phi i32 [ %400, %391 ], [ %416, %413 ], [ %410, %407 ], [ %412, %411 ]
  %419 = sext i32 %418 to i64
  %420 = getelementptr inbounds i8, i8* %389, i64 %419
  %421 = load i8, i8* %420, align 1
  %422 = getelementptr inbounds i8, i8* %384, i64 6
  %423 = bitcast i8* %422 to [1 x i16]*
  %424 = zext i8 %421 to i64
  %425 = getelementptr inbounds [1 x i16], [1 x i16]* %423, i64 0, i64 %424
  %426 = load i16, i16* %425, align 2
  %427 = zext i16 %426 to i32
  %428 = load i32, i32* %377, align 4
  %429 = mul i32 %428, %427
  %430 = icmp eq i16 %426, 0
  br i1 %430, label %449, label %431

431:                                              ; preds = %417
  %432 = load i32, i32* %340, align 8
  %433 = icmp sgt i32 %432, 0
  br i1 %433, label %434, label %444

434:                                              ; preds = %431
  %435 = load i16*, i16** %379, align 8
  %436 = add nsw i32 %432, -1
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds i16, i16* %435, i64 %437
  %439 = load i16, i16* %438, align 2
  %440 = icmp ult i16 %439, -10240
  br i1 %440, label %441, label %444

441:                                              ; preds = %434
  store i32 %436, i32* %340, align 8
  %442 = load i16, i16* %438, align 2
  %443 = zext i16 %442 to i32
  br label %446

444:                                              ; preds = %434, %431
  %445 = tail call i32 @utext_previous32_69(%struct.UText* %19) #8
  br label %446

446:                                              ; preds = %444, %441
  %447 = phi i32 [ %443, %441 ], [ %445, %444 ]
  %448 = icmp eq i32 %447, -1
  br i1 %448, label %449, label %380

449:                                              ; preds = %446, %417, %372
  %450 = load i32, i32* %340, align 8
  %451 = load i32, i32* %342, align 4
  %452 = icmp sgt i32 %450, %451
  br i1 %452, label %457, label %453

453:                                              ; preds = %449
  %454 = load i64, i64* %20, align 8
  %455 = sext i32 %450 to i64
  %456 = add nsw i64 %454, %455
  br label %463

457:                                              ; preds = %449
  %458 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 11
  %459 = load %struct.UTextFuncs*, %struct.UTextFuncs** %458, align 8
  %460 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %459, i64 0, i32 10
  %461 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %460, align 8
  %462 = tail call i64 %461(%struct.UText* %19) #8
  br label %463

463:                                              ; preds = %457, %453
  %464 = phi i64 [ %456, %453 ], [ %462, %457 ]
  %465 = trunc i64 %464 to i32
  br label %614

466:                                              ; preds = %318
  br i1 %23, label %467, label %481

467:                                              ; preds = %466
  %468 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 6
  %469 = load i32, i32* %468, align 4
  %470 = sext i32 %469 to i64
  %471 = icmp slt i64 %22, %470
  br i1 %471, label %472, label %481

472:                                              ; preds = %467
  %473 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  %474 = load i16*, i16** %473, align 8
  %475 = getelementptr inbounds i16, i16* %474, i64 %22
  %476 = load i16, i16* %475, align 2
  %477 = icmp ult i16 %476, -9216
  br i1 %477, label %478, label %481

478:                                              ; preds = %472
  %479 = trunc i64 %22 to i32
  %480 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 8
  store i32 %479, i32* %480, align 8
  br label %483

481:                                              ; preds = %472, %467, %466
  tail call void @utext_setNativeIndex_69(%struct.UText* %19, i64 %18) #8
  %482 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %3, align 8
  br label %483

483:                                              ; preds = %481, %478
  %484 = phi %"class.icu_69::RBBIDataWrapper"* [ %482, %481 ], [ %15, %478 ]
  %485 = icmp eq %"class.icu_69::RBBIDataWrapper"* %484, null
  br i1 %485, label %614, label %486

486:                                              ; preds = %483
  %487 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 8
  %488 = load i32, i32* %487, align 8
  %489 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 6
  %490 = load i32, i32* %489, align 4
  %491 = icmp sgt i32 %488, %490
  br i1 %491, label %496, label %492

492:                                              ; preds = %486
  %493 = load i64, i64* %20, align 8
  %494 = sext i32 %488 to i64
  %495 = add nsw i64 %493, %494
  br label %502

496:                                              ; preds = %486
  %497 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 11
  %498 = load %struct.UTextFuncs*, %struct.UTextFuncs** %497, align 8
  %499 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %498, i64 0, i32 10
  %500 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %499, align 8
  %501 = tail call i64 %500(%struct.UText* %19) #8
  br label %502

502:                                              ; preds = %496, %492
  %503 = phi i64 [ %495, %492 ], [ %501, %496 ]
  %504 = icmp eq i64 %503, 0
  br i1 %504, label %614, label %505

505:                                              ; preds = %502
  %506 = load i32, i32* %487, align 8
  %507 = icmp sgt i32 %506, 0
  br i1 %507, label %508, label %519

508:                                              ; preds = %505
  %509 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  %510 = load i16*, i16** %509, align 8
  %511 = add nsw i32 %506, -1
  %512 = sext i32 %511 to i64
  %513 = getelementptr inbounds i16, i16* %510, i64 %512
  %514 = load i16, i16* %513, align 2
  %515 = icmp ult i16 %514, -10240
  br i1 %515, label %516, label %519

516:                                              ; preds = %508
  store i32 %511, i32* %487, align 8
  %517 = load i16, i16* %513, align 2
  %518 = zext i16 %517 to i32
  br label %522

519:                                              ; preds = %508, %505
  %520 = tail call i32 @utext_previous32_69(%struct.UText* %19) #8
  %521 = icmp eq i32 %520, -1
  br i1 %521, label %597, label %522

522:                                              ; preds = %519, %516
  %523 = phi i32 [ %518, %516 ], [ %520, %519 ]
  %524 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %17, i64 0, i32 1
  %525 = load i32, i32* %524, align 4
  %526 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 10
  br label %527

527:                                              ; preds = %594, %522
  %528 = phi i32 [ %523, %522 ], [ %595, %594 ]
  %529 = phi i32 [ %525, %522 ], [ %577, %594 ]
  %530 = zext i32 %529 to i64
  %531 = getelementptr inbounds %"struct.icu_69::RBBIStateTable", %"struct.icu_69::RBBIStateTable"* %17, i64 0, i32 5, i64 %530
  %532 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %3, align 8
  %533 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %532, i64 0, i32 7
  %534 = load %struct.UCPTrie*, %struct.UCPTrie** %533, align 8
  %535 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %534, i64 0, i32 1
  %536 = bitcast %union.UCPTrieData* %535 to i16**
  %537 = load i16*, i16** %536, align 8
  %538 = icmp ult i32 %528, 65536
  br i1 %538, label %539, label %549

539:                                              ; preds = %527
  %540 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %534, i64 0, i32 0
  %541 = load i16*, i16** %540, align 8
  %542 = lshr i32 %528, 6
  %543 = zext i32 %542 to i64
  %544 = getelementptr inbounds i16, i16* %541, i64 %543
  %545 = load i16, i16* %544, align 2
  %546 = zext i16 %545 to i32
  %547 = and i32 %528, 63
  %548 = add nuw nsw i32 %547, %546
  br label %565

549:                                              ; preds = %527
  %550 = icmp ult i32 %528, 1114112
  br i1 %550, label %551, label %561

551:                                              ; preds = %549
  %552 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %534, i64 0, i32 4
  %553 = load i32, i32* %552, align 8
  %554 = icmp sgt i32 %553, %528
  br i1 %554, label %559, label %555

555:                                              ; preds = %551
  %556 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %534, i64 0, i32 3
  %557 = load i32, i32* %556, align 4
  %558 = add nsw i32 %557, -2
  br label %565

559:                                              ; preds = %551
  %560 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %534, i32 %528) #8
  br label %565

561:                                              ; preds = %549
  %562 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %534, i64 0, i32 3
  %563 = load i32, i32* %562, align 4
  %564 = add nsw i32 %563, -1
  br label %565

565:                                              ; preds = %561, %559, %555, %539
  %566 = phi i32 [ %548, %539 ], [ %564, %561 ], [ %558, %555 ], [ %560, %559 ]
  %567 = sext i32 %566 to i64
  %568 = getelementptr inbounds i16, i16* %537, i64 %567
  %569 = load i16, i16* %568, align 2
  %570 = getelementptr inbounds i8, i8* %531, i64 6
  %571 = bitcast i8* %570 to [1 x i16]*
  %572 = zext i16 %569 to i64
  %573 = getelementptr inbounds [1 x i16], [1 x i16]* %571, i64 0, i64 %572
  %574 = load i16, i16* %573, align 2
  %575 = zext i16 %574 to i32
  %576 = load i32, i32* %524, align 4
  %577 = mul i32 %576, %575
  %578 = icmp eq i16 %574, 0
  br i1 %578, label %597, label %579

579:                                              ; preds = %565
  %580 = load i32, i32* %487, align 8
  %581 = icmp sgt i32 %580, 0
  br i1 %581, label %582, label %592

582:                                              ; preds = %579
  %583 = load i16*, i16** %526, align 8
  %584 = add nsw i32 %580, -1
  %585 = sext i32 %584 to i64
  %586 = getelementptr inbounds i16, i16* %583, i64 %585
  %587 = load i16, i16* %586, align 2
  %588 = icmp ult i16 %587, -10240
  br i1 %588, label %589, label %592

589:                                              ; preds = %582
  store i32 %584, i32* %487, align 8
  %590 = load i16, i16* %586, align 2
  %591 = zext i16 %590 to i32
  br label %594

592:                                              ; preds = %582, %579
  %593 = tail call i32 @utext_previous32_69(%struct.UText* %19) #8
  br label %594

594:                                              ; preds = %592, %589
  %595 = phi i32 [ %591, %589 ], [ %593, %592 ]
  %596 = icmp eq i32 %595, -1
  br i1 %596, label %597, label %527

597:                                              ; preds = %594, %565, %519
  %598 = load i32, i32* %487, align 8
  %599 = load i32, i32* %489, align 4
  %600 = icmp sgt i32 %598, %599
  br i1 %600, label %605, label %601

601:                                              ; preds = %597
  %602 = load i64, i64* %20, align 8
  %603 = sext i32 %598 to i64
  %604 = add nsw i64 %602, %603
  br label %611

605:                                              ; preds = %597
  %606 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 1, i32 11
  %607 = load %struct.UTextFuncs*, %struct.UTextFuncs** %606, align 8
  %608 = getelementptr inbounds %struct.UTextFuncs, %struct.UTextFuncs* %607, i64 0, i32 10
  %609 = load i64 (%struct.UText*)*, i64 (%struct.UText*)** %608, align 8
  %610 = tail call i64 %609(%struct.UText* %19) #8
  br label %611

611:                                              ; preds = %605, %601
  %612 = phi i64 [ %604, %601 ], [ %610, %605 ]
  %613 = trunc i64 %612 to i32
  br label %614

614:                                              ; preds = %611, %502, %483, %463, %355, %336, %315, %207, %188, %168, %61, %42
  %615 = phi i32 [ %170, %168 ], [ -1, %61 ], [ -1, %42 ], [ %317, %315 ], [ -1, %207 ], [ -1, %188 ], [ %465, %463 ], [ -1, %355 ], [ -1, %336 ], [ %613, %611 ], [ -1, %502 ], [ -1, %483 ]
  ret i32 %615
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6922RuleBasedBreakIterator13getRuleStatusEv(%"class.icu_69::RuleBasedBreakIterator"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 2
  %5 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %5, i64 0, i32 4
  %7 = load i32*, i32** %6, align 8
  %8 = sext i32 %3 to i64
  %9 = getelementptr inbounds i32, i32* %7, i64 %8
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, %3
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i32, i32* %7, i64 %12
  %14 = load i32, i32* %13, align 4
  ret i32 %14
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6icu_6922RuleBasedBreakIterator16getRuleStatusVecEPiiR10UErrorCode(%"class.icu_69::RuleBasedBreakIterator"* nocapture readonly, i32* nocapture, i32, i32* nocapture dereferenceable(4)) unnamed_addr #7 align 2 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %70

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 2
  %9 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %8, align 8
  %10 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %9, i64 0, i32 4
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i32, i32* %11, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, %2
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  store i32 15, i32* %3, align 4
  br label %19

19:                                               ; preds = %18, %7
  %20 = phi i32 [ %2, %18 ], [ %16, %7 ]
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %70

22:                                               ; preds = %19
  %23 = sext i32 %20 to i64
  %24 = and i64 %23, 1
  %25 = icmp eq i32 %20, 1
  br i1 %25, label %55, label %26

26:                                               ; preds = %22
  %27 = sub nsw i64 %23, %24
  br label %28

28:                                               ; preds = %28, %26
  %29 = phi i64 [ 0, %26 ], [ %46, %28 ]
  %30 = phi i64 [ %27, %26 ], [ %53, %28 ]
  %31 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %8, align 8
  %32 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %31, i64 0, i32 4
  %33 = load i32*, i32** %32, align 8
  %34 = load i32, i32* %12, align 4
  %35 = or i64 %29, 1
  %36 = trunc i64 %35 to i32
  %37 = add i32 %34, %36
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i32, i32* %33, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds i32, i32* %1, i64 %29
  store i32 %40, i32* %41, align 4
  %42 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %8, align 8
  %43 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %42, i64 0, i32 4
  %44 = load i32*, i32** %43, align 8
  %45 = load i32, i32* %12, align 4
  %46 = add nuw nsw i64 %29, 2
  %47 = trunc i64 %46 to i32
  %48 = add i32 %45, %47
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, i32* %44, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds i32, i32* %1, i64 %35
  store i32 %51, i32* %52, align 4
  %53 = add i64 %30, -2
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %28

55:                                               ; preds = %28, %22
  %56 = phi i64 [ 0, %22 ], [ %46, %28 ]
  %57 = icmp eq i64 %24, 0
  br i1 %57, label %70, label %58

58:                                               ; preds = %55
  %59 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %8, align 8
  %60 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %59, i64 0, i32 4
  %61 = load i32*, i32** %60, align 8
  %62 = load i32, i32* %12, align 4
  %63 = trunc i64 %56 to i32
  %64 = add i32 %63, 1
  %65 = add i32 %62, %64
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i32, i32* %61, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds i32, i32* %1, i64 %56
  store i32 %68, i32* %69, align 4
  br label %70

70:                                               ; preds = %58, %55, %19, %4
  %71 = phi i32 [ 0, %4 ], [ %16, %19 ], [ %16, %55 ], [ %16, %58 ]
  ret i32 %71
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZN6icu_6922RuleBasedBreakIterator14getBinaryRulesERj(%"class.icu_69::RuleBasedBreakIterator"* nocapture readonly, i32* nocapture dereferenceable(4)) unnamed_addr #7 align 2 {
  store i32 0, i32* %1, align 4
  %3 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 2
  %4 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %3, align 8
  %5 = icmp eq %"class.icu_69::RBBIDataWrapper"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::RBBIDataWrapper", %"class.icu_69::RBBIDataWrapper"* %4, i64 0, i32 0
  %8 = load %"struct.icu_69::RBBIDataHeader"*, %"struct.icu_69::RBBIDataHeader"** %7, align 8
  %9 = bitcast %"struct.icu_69::RBBIDataHeader"* %8 to i8*
  %10 = getelementptr inbounds %"struct.icu_69::RBBIDataHeader", %"struct.icu_69::RBBIDataHeader"* %8, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %1, align 4
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi i8* [ %9, %6 ], [ null, %2 ]
  ret i8* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::RuleBasedBreakIterator"* @_ZN6icu_6922RuleBasedBreakIterator17createBufferCloneEPvRiR10UErrorCode(%"class.icu_69::RuleBasedBreakIterator"*, i8* nocapture readnone, i32* nocapture dereferenceable(4), i32* nocapture dereferenceable(4)) unnamed_addr #1 align 2 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %19

7:                                                ; preds = %4
  %8 = load i32, i32* %2, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %7
  store i32 1, i32* %2, align 4
  br label %19

11:                                               ; preds = %7
  %12 = bitcast %"class.icu_69::RuleBasedBreakIterator"* %0 to %"class.icu_69::RuleBasedBreakIterator"* (%"class.icu_69::RuleBasedBreakIterator"*)***
  %13 = load %"class.icu_69::RuleBasedBreakIterator"* (%"class.icu_69::RuleBasedBreakIterator"*)**, %"class.icu_69::RuleBasedBreakIterator"* (%"class.icu_69::RuleBasedBreakIterator"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator"* (%"class.icu_69::RuleBasedBreakIterator"*)*, %"class.icu_69::RuleBasedBreakIterator"* (%"class.icu_69::RuleBasedBreakIterator"*)** %13, i64 4
  %15 = load %"class.icu_69::RuleBasedBreakIterator"* (%"class.icu_69::RuleBasedBreakIterator"*)*, %"class.icu_69::RuleBasedBreakIterator"* (%"class.icu_69::RuleBasedBreakIterator"*)** %14, align 8
  %16 = tail call %"class.icu_69::RuleBasedBreakIterator"* %15(%"class.icu_69::RuleBasedBreakIterator"* %0) #8
  %17 = icmp eq %"class.icu_69::RuleBasedBreakIterator"* %16, null
  %18 = select i1 %17, i32 7, i32 -126
  store i32 %18, i32* %3, align 4
  br label %19

19:                                               ; preds = %4, %11, %10
  %20 = phi %"class.icu_69::RuleBasedBreakIterator"* [ null, %10 ], [ %16, %11 ], [ null, %4 ]
  ret %"class.icu_69::RuleBasedBreakIterator"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @rbbi_cleanup_69() #1 {
  %1 = load %"class.icu_69::UStack"*, %"class.icu_69::UStack"** @_ZL23gLanguageBreakFactories, align 8
  %2 = icmp eq %"class.icu_69::UStack"* %1, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = bitcast %"class.icu_69::UStack"* %1 to void (%"class.icu_69::UStack"*)***
  %5 = load void (%"class.icu_69::UStack"*)**, void (%"class.icu_69::UStack"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.icu_69::UStack"*)*, void (%"class.icu_69::UStack"*)** %5, i64 1
  %7 = load void (%"class.icu_69::UStack"*)*, void (%"class.icu_69::UStack"*)** %6, align 8
  tail call void %7(%"class.icu_69::UStack"* nonnull %1) #8
  br label %8

8:                                                ; preds = %3, %0
  store %"class.icu_69::UStack"* null, %"class.icu_69::UStack"** @_ZL23gLanguageBreakFactories, align 8
  %9 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** @_ZL12gEmptyString, align 8
  %10 = icmp eq %"class.icu_69::UnicodeString"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %8
  %12 = bitcast %"class.icu_69::UnicodeString"* %9 to void (%"class.icu_69::UnicodeString"*)***
  %13 = load void (%"class.icu_69::UnicodeString"*)**, void (%"class.icu_69::UnicodeString"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.icu_69::UnicodeString"*)*, void (%"class.icu_69::UnicodeString"*)** %13, i64 1
  %15 = load void (%"class.icu_69::UnicodeString"*)*, void (%"class.icu_69::UnicodeString"*)** %14, align 8
  tail call void %15(%"class.icu_69::UnicodeString"* nonnull %9) #8
  br label %16

16:                                               ; preds = %11, %8
  store %"class.icu_69::UnicodeString"* null, %"class.icu_69::UnicodeString"** @_ZL12gEmptyString, align 8
  store atomic i32 0, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZL31gLanguageBreakFactoriesInitOnce, i64 0, i32 0, i32 0, i32 0) seq_cst, align 4
  store atomic i32 0, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZL13gRBBIInitOnce, i64 0, i32 0, i32 0, i32 0) seq_cst, align 4
  ret i8 1
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::LanguageBreakEngine"* @_ZN6icu_6922RuleBasedBreakIterator22getLanguageBreakEngineEi(%"class.icu_69::RuleBasedBreakIterator"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #8
  store i32 0, i32* %4, align 4
  %6 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 7
  %7 = load %"class.icu_69::UStack"*, %"class.icu_69::UStack"** %6, align 8
  %8 = icmp eq %"class.icu_69::UStack"* %7, null
  %9 = getelementptr inbounds %"class.icu_69::UStack", %"class.icu_69::UStack"* %7, i64 0, i32 0
  br i1 %8, label %10, label %26

10:                                               ; preds = %2
  %11 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 40) #8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %10
  store %"class.icu_69::UStack"* null, %"class.icu_69::UStack"** %6, align 8
  br label %25

14:                                               ; preds = %10
  %15 = bitcast i8* %11 to %"class.icu_69::UStack"*
  call void @_ZN6icu_696UStackC1ER10UErrorCode(%"class.icu_69::UStack"* nonnull %15, i32* nonnull dereferenceable(4) %4) #8
  %16 = bitcast %"class.icu_69::UStack"** %6 to i8**
  store i8* %11, i8** %16, align 8
  %17 = load i32, i32* %4, align 4
  %18 = icmp slt i32 %17, 1
  %19 = bitcast i8* %11 to %"class.icu_69::UVector"*
  br i1 %18, label %26, label %20

20:                                               ; preds = %14
  %21 = bitcast i8* %11 to void (%"class.icu_69::UStack"*)***
  %22 = load void (%"class.icu_69::UStack"*)**, void (%"class.icu_69::UStack"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.icu_69::UStack"*)*, void (%"class.icu_69::UStack"*)** %22, i64 1
  %24 = load void (%"class.icu_69::UStack"*)*, void (%"class.icu_69::UStack"*)** %23, align 8
  call void %24(%"class.icu_69::UStack"* nonnull %15) #8
  br label %25

25:                                               ; preds = %13, %20
  store %"class.icu_69::UStack"* null, %"class.icu_69::UStack"** %6, align 8
  br label %148

26:                                               ; preds = %14, %2
  %27 = phi %"class.icu_69::UVector"* [ %19, %14 ], [ %9, %2 ]
  %28 = bitcast %"class.icu_69::UStack"** %6 to %"class.icu_69::UVector"**
  %29 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %27, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  br label %31

31:                                               ; preds = %35, %26
  %32 = phi i32 [ %30, %26 ], [ %33, %35 ]
  %33 = add nsw i32 %32, -1
  %34 = icmp sgt i32 %32, 0
  br i1 %34, label %35, label %45

35:                                               ; preds = %31
  %36 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %28, align 8
  %37 = call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %36, i32 %33) #8
  %38 = bitcast i8* %37 to %"class.icu_69::LanguageBreakEngine"*
  %39 = bitcast i8* %37 to i8 (%"class.icu_69::LanguageBreakEngine"*, i32)***
  %40 = load i8 (%"class.icu_69::LanguageBreakEngine"*, i32)**, i8 (%"class.icu_69::LanguageBreakEngine"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i8 (%"class.icu_69::LanguageBreakEngine"*, i32)*, i8 (%"class.icu_69::LanguageBreakEngine"*, i32)** %40, i64 2
  %42 = load i8 (%"class.icu_69::LanguageBreakEngine"*, i32)*, i8 (%"class.icu_69::LanguageBreakEngine"*, i32)** %41, align 8
  %43 = call signext i8 %42(%"class.icu_69::LanguageBreakEngine"* %38, i32 %1) #8
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %31, label %146

45:                                               ; preds = %31
  %46 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZL31gLanguageBreakFactoriesInitOnce, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %47 = icmp eq i32 %46, 2
  br i1 %47, label %69, label %48

48:                                               ; preds = %45
  %49 = call signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZL31gLanguageBreakFactoriesInitOnce to %"struct.icu_69::UInitOnce"*)) #8
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %69, label %51

51:                                               ; preds = %48
  %52 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52) #8
  store i32 0, i32* %3, align 4
  %53 = call i8* @_ZN6icu_697UMemorynwEm(i64 40) #8
  %54 = icmp eq i8* %53, null
  br i1 %54, label %55, label %56

55:                                               ; preds = %51
  store %"class.icu_69::UStack"* null, %"class.icu_69::UStack"** @_ZL23gLanguageBreakFactories, align 8
  br label %68

56:                                               ; preds = %51
  %57 = bitcast i8* %53 to %"class.icu_69::UStack"*
  call void @_ZN6icu_696UStackC1EPFvPvEPFa8UElementS4_ER10UErrorCode(%"class.icu_69::UStack"* nonnull %57, void (i8*)* nonnull @_ZL14_deleteFactoryPv, i8 (i8*, i8*)* null, i32* nonnull dereferenceable(4) %3) #8
  store i8* %53, i8** bitcast (%"class.icu_69::UStack"** @_ZL23gLanguageBreakFactories to i8**), align 8
  %58 = load i32, i32* %3, align 4
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %56
  %61 = call i8* @_ZN6icu_697UMemorynwEm(i64 16) #8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %60
  %64 = bitcast i8* %61 to %"class.icu_69::ICULanguageBreakFactory"*
  call void @_ZN6icu_6923ICULanguageBreakFactoryC1ER10UErrorCode(%"class.icu_69::ICULanguageBreakFactory"* nonnull %64, i32* nonnull dereferenceable(4) %3) #8
  br label %65

65:                                               ; preds = %63, %60
  %66 = load %"class.icu_69::UStack"*, %"class.icu_69::UStack"** @_ZL23gLanguageBreakFactories, align 8
  %67 = getelementptr inbounds %"class.icu_69::UStack", %"class.icu_69::UStack"* %66, i64 0, i32 0
  call void @_ZN6icu_697UVector10addElementEPvR10UErrorCode(%"class.icu_69::UVector"* %67, i8* %61, i32* nonnull dereferenceable(4) %3) #8
  br label %68

68:                                               ; preds = %65, %56, %55
  call void @ucln_common_registerCleanup_69(i32 3, i8 ()* nonnull @rbbi_cleanup_69) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #8
  call void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZL31gLanguageBreakFactoriesInitOnce to %"struct.icu_69::UInitOnce"*)) #8
  br label %69

69:                                               ; preds = %68, %48, %45
  %70 = load %"class.icu_69::UStack"*, %"class.icu_69::UStack"** @_ZL23gLanguageBreakFactories, align 8
  %71 = icmp eq %"class.icu_69::UStack"* %70, null
  br i1 %71, label %110, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.icu_69::UStack", %"class.icu_69::UStack"* %70, i64 0, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = icmp sgt i32 %74, 0
  br i1 %75, label %76, label %110

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.icu_69::UStack", %"class.icu_69::UStack"* %70, i64 0, i32 0
  %78 = add nsw i32 %74, -1
  %79 = call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %77, i32 %78) #8
  %80 = bitcast i8* %79 to %"class.icu_69::LanguageBreakFactory"*
  %81 = bitcast i8* %79 to %"class.icu_69::LanguageBreakEngine"* (%"class.icu_69::LanguageBreakFactory"*, i32)***
  %82 = load %"class.icu_69::LanguageBreakEngine"* (%"class.icu_69::LanguageBreakFactory"*, i32)**, %"class.icu_69::LanguageBreakEngine"* (%"class.icu_69::LanguageBreakFactory"*, i32)*** %81, align 8
  %83 = getelementptr inbounds %"class.icu_69::LanguageBreakEngine"* (%"class.icu_69::LanguageBreakFactory"*, i32)*, %"class.icu_69::LanguageBreakEngine"* (%"class.icu_69::LanguageBreakFactory"*, i32)** %82, i64 2
  %84 = load %"class.icu_69::LanguageBreakEngine"* (%"class.icu_69::LanguageBreakFactory"*, i32)*, %"class.icu_69::LanguageBreakEngine"* (%"class.icu_69::LanguageBreakFactory"*, i32)** %83, align 8
  %85 = call %"class.icu_69::LanguageBreakEngine"* %84(%"class.icu_69::LanguageBreakFactory"* %80, i32 %1) #8
  %86 = icmp eq %"class.icu_69::LanguageBreakEngine"* %85, null
  %87 = icmp sgt i32 %78, 0
  %88 = and i1 %87, %86
  br i1 %88, label %89, label %103

89:                                               ; preds = %76, %89
  %90 = phi i32 [ %92, %89 ], [ %78, %76 ]
  %91 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** bitcast (%"class.icu_69::UStack"** @_ZL23gLanguageBreakFactories to %"class.icu_69::UVector"**), align 8
  %92 = add nsw i32 %90, -1
  %93 = call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %91, i32 %92) #8
  %94 = bitcast i8* %93 to %"class.icu_69::LanguageBreakFactory"*
  %95 = bitcast i8* %93 to %"class.icu_69::LanguageBreakEngine"* (%"class.icu_69::LanguageBreakFactory"*, i32)***
  %96 = load %"class.icu_69::LanguageBreakEngine"* (%"class.icu_69::LanguageBreakFactory"*, i32)**, %"class.icu_69::LanguageBreakEngine"* (%"class.icu_69::LanguageBreakFactory"*, i32)*** %95, align 8
  %97 = getelementptr inbounds %"class.icu_69::LanguageBreakEngine"* (%"class.icu_69::LanguageBreakFactory"*, i32)*, %"class.icu_69::LanguageBreakEngine"* (%"class.icu_69::LanguageBreakFactory"*, i32)** %96, i64 2
  %98 = load %"class.icu_69::LanguageBreakEngine"* (%"class.icu_69::LanguageBreakFactory"*, i32)*, %"class.icu_69::LanguageBreakEngine"* (%"class.icu_69::LanguageBreakFactory"*, i32)** %97, align 8
  %99 = call %"class.icu_69::LanguageBreakEngine"* %98(%"class.icu_69::LanguageBreakFactory"* %94, i32 %1) #8
  %100 = icmp eq %"class.icu_69::LanguageBreakEngine"* %99, null
  %101 = icmp sgt i32 %92, 0
  %102 = and i1 %101, %100
  br i1 %102, label %89, label %103

103:                                              ; preds = %89, %76
  %104 = phi %"class.icu_69::LanguageBreakEngine"* [ %85, %76 ], [ %99, %89 ]
  %105 = icmp eq %"class.icu_69::LanguageBreakEngine"* %104, null
  br i1 %105, label %110, label %106

106:                                              ; preds = %103
  %107 = load %"class.icu_69::UStack"*, %"class.icu_69::UStack"** %6, align 8
  %108 = bitcast %"class.icu_69::LanguageBreakEngine"* %104 to i8*
  %109 = getelementptr inbounds %"class.icu_69::UStack", %"class.icu_69::UStack"* %107, i64 0, i32 0
  call void @_ZN6icu_697UVector10addElementEPvR10UErrorCode(%"class.icu_69::UVector"* %109, i8* nonnull %108, i32* nonnull dereferenceable(4) %4) #8
  br label %148

110:                                              ; preds = %72, %69, %103
  %111 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 8
  %112 = load %"class.icu_69::UnhandledEngine"*, %"class.icu_69::UnhandledEngine"** %111, align 8
  %113 = icmp eq %"class.icu_69::UnhandledEngine"* %112, null
  br i1 %113, label %114, label %138

114:                                              ; preds = %110
  %115 = call i8* @_ZN6icu_697UMemorynwEm(i64 16) #8
  %116 = icmp eq i8* %115, null
  br i1 %116, label %120, label %117

117:                                              ; preds = %114
  %118 = bitcast i8* %115 to %"class.icu_69::UnhandledEngine"*
  call void @_ZN6icu_6915UnhandledEngineC1ER10UErrorCode(%"class.icu_69::UnhandledEngine"* nonnull %118, i32* nonnull dereferenceable(4) %4) #8
  %119 = bitcast %"class.icu_69::UnhandledEngine"** %111 to i8**
  store i8* %115, i8** %119, align 8
  br label %125

120:                                              ; preds = %114
  %121 = bitcast %"class.icu_69::UnhandledEngine"** %111 to i8**
  store i8* null, i8** %121, align 8
  %122 = load i32, i32* %4, align 4
  %123 = icmp slt i32 %122, 1
  br i1 %123, label %124, label %125

124:                                              ; preds = %120
  store i32 7, i32* %4, align 4
  br label %148

125:                                              ; preds = %117, %120
  %126 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %28, align 8
  call void @_ZN6icu_697UVector15insertElementAtEPviR10UErrorCode(%"class.icu_69::UVector"* %126, i8* %115, i32 0, i32* nonnull dereferenceable(4) %4) #8
  %127 = load i32, i32* %4, align 4
  %128 = icmp slt i32 %127, 1
  %129 = load %"class.icu_69::UnhandledEngine"*, %"class.icu_69::UnhandledEngine"** %111, align 8
  br i1 %128, label %138, label %130

130:                                              ; preds = %125
  %131 = icmp eq %"class.icu_69::UnhandledEngine"* %129, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %130
  %133 = bitcast %"class.icu_69::UnhandledEngine"* %129 to void (%"class.icu_69::UnhandledEngine"*)***
  %134 = load void (%"class.icu_69::UnhandledEngine"*)**, void (%"class.icu_69::UnhandledEngine"*)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.icu_69::UnhandledEngine"*)*, void (%"class.icu_69::UnhandledEngine"*)** %134, i64 1
  %136 = load void (%"class.icu_69::UnhandledEngine"*)*, void (%"class.icu_69::UnhandledEngine"*)** %135, align 8
  call void %136(%"class.icu_69::UnhandledEngine"* nonnull %129) #8
  br label %137

137:                                              ; preds = %132, %130
  store %"class.icu_69::UnhandledEngine"* null, %"class.icu_69::UnhandledEngine"** %111, align 8
  br label %148

138:                                              ; preds = %125, %110
  %139 = phi %"class.icu_69::UnhandledEngine"* [ %112, %110 ], [ %129, %125 ]
  %140 = bitcast %"class.icu_69::UnhandledEngine"* %139 to void (%"class.icu_69::UnhandledEngine"*, i32)***
  %141 = load void (%"class.icu_69::UnhandledEngine"*, i32)**, void (%"class.icu_69::UnhandledEngine"*, i32)*** %140, align 8
  %142 = getelementptr inbounds void (%"class.icu_69::UnhandledEngine"*, i32)*, void (%"class.icu_69::UnhandledEngine"*, i32)** %141, i64 4
  %143 = load void (%"class.icu_69::UnhandledEngine"*, i32)*, void (%"class.icu_69::UnhandledEngine"*, i32)** %142, align 8
  call void %143(%"class.icu_69::UnhandledEngine"* %139, i32 %1) #8
  %144 = bitcast %"class.icu_69::UnhandledEngine"** %111 to %"class.icu_69::LanguageBreakEngine"**
  %145 = load %"class.icu_69::LanguageBreakEngine"*, %"class.icu_69::LanguageBreakEngine"** %144, align 8
  br label %148

146:                                              ; preds = %35
  %147 = bitcast i8* %37 to %"class.icu_69::LanguageBreakEngine"*
  br label %148

148:                                              ; preds = %146, %106, %124, %137, %138, %25
  %149 = phi %"class.icu_69::LanguageBreakEngine"* [ null, %25 ], [ %104, %106 ], [ null, %124 ], [ null, %137 ], [ %145, %138 ], [ %147, %146 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #8
  ret %"class.icu_69::LanguageBreakEngine"* %149
}

declare void @_ZN6icu_696UStackC1ER10UErrorCode(%"class.icu_69::UStack"*, i32* dereferenceable(4)) unnamed_addr #2

declare i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"*, i32) local_unnamed_addr #2

declare void @_ZN6icu_6915UnhandledEngineC1ER10UErrorCode(%"class.icu_69::UnhandledEngine"*, i32* dereferenceable(4)) unnamed_addr #2

declare void @_ZN6icu_697UVector15insertElementAtEPviR10UErrorCode(%"class.icu_69::UVector"*, i8*, i32, i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIterator9dumpCacheEv(%"class.icu_69::RuleBasedBreakIterator"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 5
  %3 = load %"class.icu_69::RuleBasedBreakIterator::BreakCache"*, %"class.icu_69::RuleBasedBreakIterator::BreakCache"** %2, align 8
  tail call void @_ZN6icu_6922RuleBasedBreakIterator10BreakCache9dumpCacheEv(%"class.icu_69::RuleBasedBreakIterator::BreakCache"* %3) #8
  ret void
}

declare void @_ZN6icu_6922RuleBasedBreakIterator10BreakCache9dumpCacheEv(%"class.icu_69::RuleBasedBreakIterator::BreakCache"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6922RuleBasedBreakIterator10dumpTablesEv(%"class.icu_69::RuleBasedBreakIterator"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 2
  %3 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %2, align 8
  tail call void @_ZN6icu_6915RBBIDataWrapper9printDataEv(%"class.icu_69::RBBIDataWrapper"* %3) #8
  ret void
}

declare void @_ZN6icu_6915RBBIDataWrapper9printDataEv(%"class.icu_69::RBBIDataWrapper"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6922RuleBasedBreakIterator8getRulesEv(%"class.icu_69::RuleBasedBreakIterator"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::RuleBasedBreakIterator", %"class.icu_69::RuleBasedBreakIterator"* %0, i64 0, i32 2
  %3 = load %"class.icu_69::RBBIDataWrapper"*, %"class.icu_69::RBBIDataWrapper"** %2, align 8
  %4 = icmp eq %"class.icu_69::RBBIDataWrapper"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6915RBBIDataWrapper19getRuleSourceStringEv(%"class.icu_69::RBBIDataWrapper"* nonnull %3) #8
  br label %25

7:                                                ; preds = %1
  %8 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZL13gRBBIInitOnce, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %9 = icmp eq i32 %8, 2
  br i1 %9, label %23, label %10

10:                                               ; preds = %7
  %11 = tail call signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZL13gRBBIInitOnce to %"struct.icu_69::UInitOnce"*)) #8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %10
  %14 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 64) #8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %13
  %17 = bitcast i8* %14 to %"class.icu_69::UnicodeString"*
  %18 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds i8, i8* %14, i64 8
  %20 = bitcast i8* %19 to i16*
  store i16 2, i16* %20, align 8
  br label %21

21:                                               ; preds = %13, %16
  %22 = phi %"class.icu_69::UnicodeString"* [ %17, %16 ], [ null, %13 ]
  store %"class.icu_69::UnicodeString"* %22, %"class.icu_69::UnicodeString"** @_ZL12gEmptyString, align 8
  tail call void @ucln_common_registerCleanup_69(i32 3, i8 ()* nonnull @rbbi_cleanup_69) #8
  tail call void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZL13gRBBIInitOnce to %"struct.icu_69::UInitOnce"*)) #8
  br label %23

23:                                               ; preds = %7, %10, %21
  %24 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** @_ZL12gEmptyString, align 8
  br label %25

25:                                               ; preds = %23, %5
  %26 = phi %"class.icu_69::UnicodeString"* [ %6, %5 ], [ %24, %23 ]
  ret %"class.icu_69::UnicodeString"* %26
}

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6915RBBIDataWrapper19getRuleSourceStringEv(%"class.icu_69::RBBIDataWrapper"*) local_unnamed_addr #2

declare void @_ZN6icu_6922RuleBasedBreakIterator10BreakCache6nextOLEv(%"class.icu_69::RuleBasedBreakIterator::BreakCache"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL14_deleteFactoryPv(i8*) #1 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to %"class.icu_69::LanguageBreakFactory"*
  %5 = bitcast i8* %0 to void (%"class.icu_69::LanguageBreakFactory"*)***
  %6 = load void (%"class.icu_69::LanguageBreakFactory"*)**, void (%"class.icu_69::LanguageBreakFactory"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.icu_69::LanguageBreakFactory"*)*, void (%"class.icu_69::LanguageBreakFactory"*)** %6, i64 1
  %8 = load void (%"class.icu_69::LanguageBreakFactory"*)*, void (%"class.icu_69::LanguageBreakFactory"*)** %7, align 8
  tail call void %8(%"class.icu_69::LanguageBreakFactory"* nonnull %4) #8
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN6icu_696UStackC1EPFvPvEPFa8UElementS4_ER10UErrorCode(%"class.icu_69::UStack"*, void (i8*)*, i8 (i8*, i8*)*, i32* dereferenceable(4)) unnamed_addr #2

declare void @_ZN6icu_6923ICULanguageBreakFactoryC1ER10UErrorCode(%"class.icu_69::ICULanguageBreakFactory"*, i32* dereferenceable(4)) unnamed_addr #2

declare void @ucln_common_registerCleanup_69(i32, i8 ()*) local_unnamed_addr #2

declare void @_ZN6icu_697UVector10addElementEPvR10UErrorCode(%"class.icu_69::UVector"*, i8*, i32* dereferenceable(4)) local_unnamed_addr #2

declare signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8)) local_unnamed_addr #2

declare i32 @utext_next32_69(%struct.UText*) local_unnamed_addr #2

declare i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie*, i32) local_unnamed_addr #2

declare i32 @utext_previous32_69(%struct.UText*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind allocsize(0) }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
