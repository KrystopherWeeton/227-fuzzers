; ModuleID = '../../net/ssl/ssl_private_key.cc'
source_filename = "../../net/ssl/ssl_private_key.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i16*, i16*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i16* }

@.ref.tmp = private unnamed_addr constant [7 x i16] [i16 1025, i16 1281, i16 1537, i16 513, i16 2052, i16 2053, i16 2054], align 2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net13SSLPrivateKey27DefaultAlgorithmPreferencesEib(%"class.std::__1::vector"* noalias nocapture sret, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %35 [
    i32 6, label %4
    i32 408, label %25
  ]

4:                                                ; preds = %3
  %5 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #3
  br i1 %2, label %6, label %15

6:                                                ; preds = %4
  %7 = tail call i8* @_Znwm(i64 14) #4
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds i8, i8* %7, i64 14
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i16** %11 to i8**
  store i8* %10, i8** %12, align 8
  %13 = bitcast i16** %8 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %7, i8* align 2 bitcast ([7 x i16]* @.ref.tmp to i8*), i64 14, i1 false) #3
  %14 = ptrtoint i8* %10 to i64
  store i64 %14, i64* %13, align 8
  br label %37

15:                                               ; preds = %4
  %16 = tail call i8* @_Znwm(i64 8) #4
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %16, i64 8
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast i16** %20 to i8**
  store i8* %19, i8** %21, align 8
  %22 = bitcast i16** %17 to i64*
  %23 = bitcast i8* %16 to i64*
  store i64 144403264501253121, i64* %23, align 2
  %24 = ptrtoint i8* %19 to i64
  store i64 %24, i64* %22, align 8
  br label %37

25:                                               ; preds = %3
  %26 = tail call i8* @_Znwm(i64 8) #4
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds i8, i8* %26, i64 8
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast i16** %30 to i8**
  store i8* %29, i8** %31, align 8
  %32 = bitcast i16** %27 to i64*
  %33 = bitcast i8* %26 to i64*
  store i64 144966223044740099, i64* %33, align 2
  %34 = ptrtoint i8* %29 to i64
  store i64 %34, i64* %32, align 8
  br label %37

35:                                               ; preds = %3
  %36 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #3
  br label %37

37:                                               ; preds = %35, %25, %15, %6
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }
attributes #4 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
