; ModuleID = '../../media/gpu/vp9_picture.cc'
source_filename = "../../media/gpu/vp9_picture.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::VP9Picture" = type { %"class.media::CodecPicture.base", %"class.std::__1::unique_ptr.11", %"class.absl::optional.17" }
%"class.media::CodecPicture.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", i32, %"class.gfx::Rect", %"class.std::__1::unique_ptr", %"class.media::VideoColorSpace" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.media::DecryptConfig"* }
%"class.media::DecryptConfig" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.absl::optional", [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::SubsampleEntry"*, %"struct.media::SubsampleEntry"*, %"class.std::__1::__compressed_pair.4" }
%"struct.media::SubsampleEntry" = type { i32, i32 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.media::SubsampleEntry"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.media::EncryptionPattern" }
%"class.media::EncryptionPattern" = type { i32, i32 }
%"class.media::VideoColorSpace" = type { i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.media::Vp9FrameHeader"* }
%"struct.media::Vp9FrameHeader" = type { i8, i8, i8, i32, i8, i8, i8, i32, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, [3 x i8], [4 x i8], i8, i32, i8, i8, i8, i8, %"struct.media::Vp9QuantizationParams", i8, i8, i8*, i64, i64, i64, %"struct.media::Vp9CompressedHeader", %"struct.media::Vp9FrameContext", %"struct.media::Vp9FrameContext", %"struct.media::Vp9SegmentationParams", %"struct.media::Vp9LoopFilterParams" }
%"struct.media::Vp9QuantizationParams" = type { i8, i8, i8, i8 }
%"struct.media::Vp9CompressedHeader" = type { i32, i32 }
%"struct.media::Vp9FrameContext" = type { [2 x [1 x i8]], [2 x [2 x i8]], [2 x [3 x i8]], [4 x [2 x [2 x [6 x [6 x [3 x i8]]]]]], [3 x i8], [7 x [3 x i8]], [4 x [2 x i8]], [4 x i8], [5 x i8], [5 x [2 x i8]], [5 x i8], [4 x [9 x i8]], [10 x [9 x i8]], [16 x [3 x i8]], [3 x i8], [2 x i8], [2 x [10 x i8]], [2 x i8], [2 x [10 x i8]], [2 x [2 x [3 x i8]]], [2 x [3 x i8]], [2 x i8], [2 x i8] }
%"struct.media::Vp9SegmentationParams" = type { i8, i8, [7 x i8], i8, [3 x i8], i8, i8, [8 x [4 x i8]], [8 x [4 x i16]], [8 x [2 x i16]], [8 x [2 x i16]] }
%"struct.media::Vp9LoopFilterParams" = type { i8, i8, i8, i8, [4 x i8], [4 x i8], [2 x i8], [2 x i8], [8 x [4 x [2 x i8]]] }
%"class.absl::optional.17" = type { %"class.absl::optional_internal::optional_data.18" }
%"class.absl::optional_internal::optional_data.18" = type { %"class.absl::optional_internal::optional_data_base.19" }
%"class.absl::optional_internal::optional_data_base.19" = type { %"class.absl::optional_internal::optional_data_dtor_base.20" }
%"class.absl::optional_internal::optional_data_dtor_base.20" = type { i8, %union.anon.21 }
%union.anon.21 = type { %"struct.media::Vp9Metadata" }
%"struct.media::Vp9Metadata" = type { i8, i8, i8, %"class.std::__1::vector.22" }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { i8*, i8*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i8* }
%"class.media::CodecPicture" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", i32, %"class.gfx::Rect", %"class.std::__1::unique_ptr", %"class.media::VideoColorSpace", [4 x i8] }>
%"class.media::V4L2VP9Picture" = type opaque
%"class.media::VaapiVP9Picture" = type opaque

@_ZTVN5media10VP9PictureE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::VP9Picture"*)* @_ZN5media10VP9PictureD2Ev to i8*), i8* bitcast (void (%"class.media::VP9Picture"*)* @_ZN5media10VP9PictureD0Ev to i8*), i8* bitcast (%"class.media::V4L2VP9Picture"* (%"class.media::VP9Picture"*)* @_ZN5media10VP9Picture16AsV4L2VP9PictureEv to i8*), i8* bitcast (%"class.media::VaapiVP9Picture"* (%"class.media::VP9Picture"*)* @_ZN5media10VP9Picture17AsVaapiVP9PictureEv to i8*), i8* bitcast (%"class.media::VP9Picture"* (%"class.media::VP9Picture"*)* @_ZN5media10VP9Picture15CreateDuplicateEv to i8*)] }, align 8

@_ZN5media10VP9PictureC1Ev = hidden unnamed_addr alias void (%"class.media::VP9Picture"*), void (%"class.media::VP9Picture"*)* @_ZN5media10VP9PictureC2Ev
@_ZN5media10VP9PictureD1Ev = hidden unnamed_addr alias void (%"class.media::VP9Picture"*), void (%"class.media::VP9Picture"*)* @_ZN5media10VP9PictureD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media10VP9PictureC2Ev(%"class.media::VP9Picture"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.media::VP9Picture"* %0 to %"class.media::CodecPicture"*
  tail call void @_ZN5media12CodecPictureC2Ev(%"class.media::CodecPicture"* %2) #7
  %3 = getelementptr inbounds %"class.media::VP9Picture", %"class.media::VP9Picture"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5media10VP9PictureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.media::VP9Picture", %"class.media::VP9Picture"* %0, i64 0, i32 1
  %5 = tail call i8* @_Znwm(i64 4440) #8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 4440, i1 false)
  %6 = ptrtoint i8* %5 to i64
  %7 = bitcast %"class.std::__1::unique_ptr.11"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.media::VP9Picture", %"class.media::VP9Picture"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.media::VP9Picture", %"class.media::VP9Picture"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false) #7
  ret void
}

declare void @_ZN5media12CodecPictureC2Ev(%"class.media::CodecPicture"*) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media10VP9PictureD2Ev(%"class.media::VP9Picture"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VP9Picture", %"class.media::VP9Picture"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5media10VP9PictureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::VP9Picture", %"class.media::VP9Picture"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.media::VP9Picture", %"class.media::VP9Picture"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5media11Vp9MetadataD1Ev(%"struct.media::Vp9Metadata"* %7) #7
  store i8 0, i8* %3, align 8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.media::VP9Picture", %"class.media::VP9Picture"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"struct.media::Vp9FrameHeader"*, %"struct.media::Vp9FrameHeader"** %9, align 8
  store %"struct.media::Vp9FrameHeader"* null, %"struct.media::Vp9FrameHeader"** %9, align 8
  %11 = icmp eq %"struct.media::Vp9FrameHeader"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.media::Vp9FrameHeader", %"struct.media::Vp9FrameHeader"* %10, i64 0, i32 0
  tail call void @_ZdlPv(i8* %13) #8
  br label %14

14:                                               ; preds = %8, %12
  %15 = bitcast %"class.media::VP9Picture"* %0 to %"class.media::CodecPicture"*
  tail call void @_ZN5media12CodecPictureD2Ev(%"class.media::CodecPicture"* %15) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5media12CodecPictureD2Ev(%"class.media::CodecPicture"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media10VP9PictureD0Ev(%"class.media::VP9Picture"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VP9Picture", %"class.media::VP9Picture"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5media10VP9PictureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::VP9Picture", %"class.media::VP9Picture"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.media::VP9Picture", %"class.media::VP9Picture"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5media11Vp9MetadataD1Ev(%"struct.media::Vp9Metadata"* %7) #7
  store i8 0, i8* %3, align 8
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.media::VP9Picture", %"class.media::VP9Picture"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"struct.media::Vp9FrameHeader"*, %"struct.media::Vp9FrameHeader"** %9, align 8
  store %"struct.media::Vp9FrameHeader"* null, %"struct.media::Vp9FrameHeader"** %9, align 8
  %11 = icmp eq %"struct.media::Vp9FrameHeader"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.media::Vp9FrameHeader", %"struct.media::Vp9FrameHeader"* %10, i64 0, i32 0
  tail call void @_ZdlPv(i8* %13) #8
  br label %14

14:                                               ; preds = %8, %12
  %15 = bitcast %"class.media::VP9Picture"* %0 to %"class.media::CodecPicture"*
  tail call void @_ZN5media12CodecPictureD2Ev(%"class.media::CodecPicture"* %15) #7
  %16 = bitcast %"class.media::VP9Picture"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.media::V4L2VP9Picture"* @_ZN5media10VP9Picture16AsV4L2VP9PictureEv(%"class.media::VP9Picture"* nocapture readnone) unnamed_addr #6 align 2 {
  ret %"class.media::V4L2VP9Picture"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.media::VaapiVP9Picture"* @_ZN5media10VP9Picture17AsVaapiVP9PictureEv(%"class.media::VP9Picture"* nocapture readnone) unnamed_addr #6 align 2 {
  ret %"class.media::VaapiVP9Picture"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::VP9Picture"* @_ZN5media10VP9Picture9DuplicateEv(%"class.media::VP9Picture"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.media::VP9Picture"* %0 to %"class.media::VP9Picture"* (%"class.media::VP9Picture"*)***
  %3 = load %"class.media::VP9Picture"* (%"class.media::VP9Picture"*)**, %"class.media::VP9Picture"* (%"class.media::VP9Picture"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.media::VP9Picture"* (%"class.media::VP9Picture"*)*, %"class.media::VP9Picture"* (%"class.media::VP9Picture"*)** %3, i64 4
  %5 = load %"class.media::VP9Picture"* (%"class.media::VP9Picture"*)*, %"class.media::VP9Picture"* (%"class.media::VP9Picture"*)** %4, align 8
  %6 = tail call %"class.media::VP9Picture"* %5(%"class.media::VP9Picture"* %0) #7
  %7 = icmp eq %"class.media::VP9Picture"* %6, null
  br i1 %7, label %39, label %8

8:                                                ; preds = %1
  %9 = tail call i8* @_Znwm(i64 4440) #8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 4440, i1 false) #7
  %10 = ptrtoint i8* %9 to i64
  %11 = getelementptr inbounds %"class.media::VP9Picture", %"class.media::VP9Picture"* %6, i64 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"struct.media::Vp9FrameHeader"*, %"struct.media::Vp9FrameHeader"** %12, align 8
  %14 = bitcast %"class.std::__1::unique_ptr.11"* %11 to i64*
  store i64 %10, i64* %14, align 8
  %15 = icmp eq %"struct.media::Vp9FrameHeader"* %13, null
  %16 = bitcast i8* %9 to %"struct.media::Vp9FrameHeader"*
  br i1 %15, label %20, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"struct.media::Vp9FrameHeader", %"struct.media::Vp9FrameHeader"* %13, i64 0, i32 0
  tail call void @_ZdlPv(i8* %18) #8
  %19 = load %"struct.media::Vp9FrameHeader"*, %"struct.media::Vp9FrameHeader"** %12, align 8
  br label %20

20:                                               ; preds = %8, %17
  %21 = phi %"struct.media::Vp9FrameHeader"* [ %16, %8 ], [ %19, %17 ]
  %22 = getelementptr inbounds %"struct.media::Vp9FrameHeader", %"struct.media::Vp9FrameHeader"* %21, i64 0, i32 0
  %23 = getelementptr inbounds %"class.media::VP9Picture", %"class.media::VP9Picture"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"struct.media::Vp9FrameHeader"*, %"struct.media::Vp9FrameHeader"** %23, align 8
  %25 = getelementptr inbounds %"struct.media::Vp9FrameHeader", %"struct.media::Vp9FrameHeader"* %24, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %25, i64 4440, i1 false)
  %26 = getelementptr inbounds %"class.media::VP9Picture", %"class.media::VP9Picture"* %0, i64 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.media::VP9Picture", %"class.media::VP9Picture"* %6, i64 0, i32 0, i32 2
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds %"class.media::VP9Picture", %"class.media::VP9Picture"* %0, i64 0, i32 0, i32 3
  %30 = bitcast %"class.gfx::Rect"* %29 to <2 x i64>*
  %31 = load <2 x i64>, <2 x i64>* %30, align 8
  %32 = getelementptr inbounds %"class.media::VP9Picture", %"class.media::VP9Picture"* %6, i64 0, i32 0, i32 3
  %33 = bitcast %"class.gfx::Rect"* %32 to <2 x i64>*
  store <2 x i64> %31, <2 x i64>* %33, align 8
  %34 = getelementptr inbounds %"class.media::VP9Picture", %"class.media::VP9Picture"* %0, i64 0, i32 0, i32 5
  %35 = getelementptr inbounds %"class.media::VP9Picture", %"class.media::VP9Picture"* %6, i64 0, i32 0, i32 5, i32 0
  %36 = bitcast %"class.media::VideoColorSpace"* %34 to i32*
  %37 = bitcast i8* %35 to i32*
  %38 = load i32, i32* %36, align 1
  store i32 %38, i32* %37, align 8
  br label %39

39:                                               ; preds = %1, %20
  ret %"class.media::VP9Picture"* %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.media::VP9Picture"* @_ZN5media10VP9Picture15CreateDuplicateEv(%"class.media::VP9Picture"* nocapture readnone) unnamed_addr #6 align 2 {
  ret %"class.media::VP9Picture"* null
}

; Function Attrs: nounwind
declare void @_ZN5media11Vp9MetadataD1Ev(%"struct.media::Vp9Metadata"*) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
