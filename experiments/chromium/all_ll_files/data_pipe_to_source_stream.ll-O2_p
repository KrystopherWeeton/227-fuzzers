; ModuleID = '../../services/network/public/cpp/data_pipe_to_source_stream.cc'
source_filename = "../../services/network/public/cpp/data_pipe_to_source_stream.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.network::DataPipeToSourceStream" = type { %"class.net::SourceStream.base", %"class.mojo::ScopedHandleBase", %"class.mojo::SimpleWatcher", i8, i8, %class.scoped_refptr.12, i32, %"class.base::OnceCallback" }
%"class.net::SourceStream.base" = type <{ i32 (...)**, i32 }>
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr, i8, %"class.mojo::ScopedHandleBase.1", %class.scoped_refptr.2, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mojo::ScopedHandleBase.1" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.4", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.6", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.6" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.7" }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i8 }
%class.scoped_refptr.12 = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.13", i8* }
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::RepeatingCallback.14" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.net::SourceStream" = type <{ i32 (...)**, i32, [4 x i8] }>
%struct.MojoBeginReadDataOptions = type { i32, i32 }
%struct.MojoEndReadDataOptions = type { i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }

$_ZN4mojo13SimpleWatcher17DiscardReadyStateERKN4base17RepeatingCallbackIFvjEEEjRKNS_18HandleSignalsStateE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS5_EEEFvjSB_EE3RunEPNS0_13BindStateBaseEjSB_ = comdat any

$_ZN4base8internal9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN7network22DataPipeToSourceStreamEFvjEJNS0_17UnretainedWrapperIS4_EEEEEFvjEE3RunEPNS0_13BindStateBaseEj = comdat any

$_ZN4base8internal9BindStateIMN7network22DataPipeToSourceStreamEFvjEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN7network22DataPipeToSourceStreamE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.network::DataPipeToSourceStream"*)* @_ZN7network22DataPipeToSourceStreamD2Ev to i8*), i8* bitcast (void (%"class.network::DataPipeToSourceStream"*)* @_ZN7network22DataPipeToSourceStreamD0Ev to i8*), i8* bitcast (i32 (%"class.network::DataPipeToSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)* @_ZN7network22DataPipeToSourceStream4ReadEPN3net8IOBufferEiN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.network::DataPipeToSourceStream"*)* @_ZNK7network22DataPipeToSourceStream11DescriptionEv to i8*), i8* bitcast (i1 (%"class.network::DataPipeToSourceStream"*)* @_ZNK7network22DataPipeToSourceStream16MayHaveMoreBytesEv to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"DataPipeToSourceStream\00", align 1
@.str.1 = private unnamed_addr constant [64 x i8] c"../../services/network/public/cpp/data_pipe_to_source_stream.cc\00", align 1

@_ZN7network22DataPipeToSourceStreamC1EN4mojo16ScopedHandleBaseINS1_22DataPipeConsumerHandleEEE = hidden unnamed_addr alias void (%"class.network::DataPipeToSourceStream"*, %"class.mojo::ScopedHandleBase"*), void (%"class.network::DataPipeToSourceStream"*, %"class.mojo::ScopedHandleBase"*)* @_ZN7network22DataPipeToSourceStreamC2EN4mojo16ScopedHandleBaseINS1_22DataPipeConsumerHandleEEE
@_ZN7network22DataPipeToSourceStreamD1Ev = hidden unnamed_addr alias void (%"class.network::DataPipeToSourceStream"*), void (%"class.network::DataPipeToSourceStream"*)* @_ZN7network22DataPipeToSourceStreamD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network22DataPipeToSourceStreamC2EN4mojo16ScopedHandleBaseINS1_22DataPipeConsumerHandleEEE(%"class.network::DataPipeToSourceStream"*, %"class.mojo::ScopedHandleBase"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::Handle", align 4
  %4 = alloca %"class.base::RepeatingCallback", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::RepeatingCallback.14", align 8
  %7 = bitcast %"class.network::DataPipeToSourceStream"* %0 to %"class.net::SourceStream"*
  tail call void @_ZN3net12SourceStreamC2ENS0_10SourceTypeE(%"class.net::SourceStream"* %7, i32 4) #8
  %8 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7network22DataPipeToSourceStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4, !noalias !2
  store i32 %11, i32* %9, align 4, !alias.scope !2
  store i32 0, i32* %10, align 4, !noalias !2
  %12 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 2
  %13 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 19) #8
  %14 = call dereferenceable(8) %class.scoped_refptr* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #8
  %15 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %14, i64 0, i32 0
  %16 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %15, align 8
  %17 = icmp eq %"class.base::SequencedTaskRunner"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %16, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic
  br label %21

21:                                               ; preds = %2, %18
  call void @_ZN4mojo13SimpleWatcherC1ERKN4base8LocationENS0_12ArmingPolicyE13scoped_refptrINS1_19SequencedTaskRunnerEEPKc(%"class.mojo::SimpleWatcher"* %12, %"class.base::Location"* nonnull dereferenceable(32) %5, i32 1, %"class.base::SequencedTaskRunner"* %16, i8* null) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8
  %22 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 3
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 4
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 5, i32 0
  store %"class.net::IOBuffer"* null, %"class.net::IOBuffer"** %24, align 8
  %25 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 6
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %26, align 8
  %27 = load i32, i32* %9, align 4
  %28 = ptrtoint %"class.network::DataPipeToSourceStream"* %0 to i64
  %29 = call i8* @_Znwm(i64 56) #9, !noalias !5
  %30 = bitcast i8* %29 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %30, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN7network22DataPipeToSourceStreamEFvjEJNS0_17UnretainedWrapperIS4_EEEEEFvjEE3RunEPNS0_13BindStateBaseEj to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN7network22DataPipeToSourceStreamEFvjEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !5
  %31 = getelementptr inbounds i8, i8* %29, i64 32
  %32 = bitcast i8* %31 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.network::DataPipeToSourceStream"*, i32)* @_ZN7network22DataPipeToSourceStream10OnReadableEj to i64), i64 0>, <2 x i64>* %32, align 8, !noalias !5
  %33 = getelementptr inbounds i8, i8* %29, i64 48
  %34 = bitcast i8* %33 to i64*
  store i64 %28, i64* %34, align 8, !noalias !5
  %35 = bitcast %"class.mojo::Handle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35)
  %36 = bitcast %"class.base::RepeatingCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = getelementptr inbounds %"class.mojo::Handle", %"class.mojo::Handle"* %3, i64 0, i32 0
  store i32 %27, i32* %37, align 4
  %38 = call i8* @_Znwm(i64 48) #9, !noalias !10
  %39 = bitcast i8* %38 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %39, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"struct.mojo::HandleSignalsState"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS5_EEEFvjSB_EE3RunEPNS0_13BindStateBaseEjSB_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !10
  %40 = getelementptr inbounds i8, i8* %38, i64 32
  %41 = bitcast i8* %40 to i64*
  store i64 ptrtoint (void (%"class.base::RepeatingCallback.14"*, i32, %"struct.mojo::HandleSignalsState"*)* @_ZN4mojo13SimpleWatcher17DiscardReadyStateERKN4base17RepeatingCallbackIFvjEEEjRKNS_18HandleSignalsStateE to i64), i64* %41, align 8, !noalias !10
  %42 = getelementptr inbounds i8, i8* %38, i64 40
  %43 = getelementptr inbounds %"class.base::RepeatingCallback.14", %"class.base::RepeatingCallback.14"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = ptrtoint i8* %29 to i64
  %45 = bitcast i8* %42 to i64*
  store i64 %44, i64* %45, align 8, !noalias !10
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %43, align 8, !noalias !10
  %46 = bitcast %"class.base::RepeatingCallback"* %4 to i8**
  store i8* %38, i8** %46, align 8, !alias.scope !10
  %47 = call i32 @_ZN4mojo13SimpleWatcher5WatchENS_6HandleEjjN4base17RepeatingCallbackIFvjRKNS_18HandleSignalsStateEEEE(%"class.mojo::SimpleWatcher"* %12, %"class.mojo::Handle"* nonnull %3, i32 5, i32 1, %"class.base::RepeatingCallback"* nonnull %4) #8
  %48 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %48) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  %49 = getelementptr inbounds %"class.base::RepeatingCallback.14", %"class.base::RepeatingCallback.14"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %49) #8
  ret void
}

declare void @_ZN3net12SourceStreamC2ENS0_10SourceTypeE(%"class.net::SourceStream"*, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

declare dereferenceable(8) %class.scoped_refptr* @_ZN4base25SequencedTaskRunnerHandle3GetEv() local_unnamed_addr #1

declare void @_ZN4mojo13SimpleWatcherC1ERKN4base8LocationENS0_12ArmingPolicyE13scoped_refptrINS1_19SequencedTaskRunnerEEPKc(%"class.mojo::SimpleWatcher"*, %"class.base::Location"* dereferenceable(32), i32, %"class.base::SequencedTaskRunner"*, i8*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network22DataPipeToSourceStream10OnReadableEj(%"class.network::DataPipeToSourceStream"*, i32) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %struct.MojoBeginReadDataOptions, align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  store i8* null, i8** %6, align 8
  %9 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #8
  store i32 0, i32* %7, align 4
  %10 = bitcast %struct.MojoBeginReadDataOptions* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #8
  %11 = getelementptr inbounds %struct.MojoBeginReadDataOptions, %struct.MojoBeginReadDataOptions* %4, i64 0, i32 0
  %12 = getelementptr inbounds %struct.MojoBeginReadDataOptions, %struct.MojoBeginReadDataOptions* %4, i64 0, i32 1
  store i32 8, i32* %11, align 8
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = call i32 @MojoBeginReadData(i32 %14, %struct.MojoBeginReadDataOptions* nonnull %4, i8** nonnull %6, i32* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8
  switch i32 %15, label %65 [
    i32 0, label %16
    i32 9, label %44
    i32 17, label %63
  ]

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 6
  %18 = load i32, i32* %17, align 8
  %19 = icmp sgt i32 %18, -1
  br i1 %19, label %21, label %20, !prof !15

20:                                               ; preds = %16
  call void @llvm.trap() #8
  unreachable

21:                                               ; preds = %16
  %22 = load i32, i32* %7, align 4
  %23 = icmp ult i32 %22, %18
  %24 = select i1 %23, i32 %22, i32 %18
  %25 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 5, i32 0
  %26 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %25, align 8
  %27 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %26, i64 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = load i8*, i8** %6, align 8
  %30 = zext i32 %24 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %29, i64 %30, i1 false)
  %31 = load i32, i32* %13, align 4
  %32 = call i32 @MojoEndReadData(i32 %31, i32 %24, %struct.MojoEndReadDataOptions* null) #8
  %33 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 7
  %34 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %33, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.base::OnceCallback"* %33 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %37, i64* %38, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %35, align 8
  %39 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %40 = inttoptr i64 %37 to %"class.base::internal::BindStateBase"*
  %41 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %40, i64 0, i32 1
  %42 = bitcast void ()** %41 to void (%"class.base::internal::BindStateBase"*, i32)**
  %43 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %42, align 8
  call void %43(%"class.base::internal::BindStateBase"* %40, i32 %24) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  br label %65

44:                                               ; preds = %2
  %45 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 4
  store i8 1, i8* %45, align 1
  %46 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 2
  call void @_ZN4mojo13SimpleWatcher6CancelEv(%"class.mojo::SimpleWatcher"* %46) #8
  %47 = load i32, i32* %13, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %44
  %50 = call i32 @MojoClose(i32 %47) #8
  br label %51

51:                                               ; preds = %44, %49
  store i32 0, i32* %13, align 4
  %52 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 7
  %53 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #8
  %54 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %52, i64 0, i32 0, i32 0, i32 0
  %55 = bitcast %"class.base::OnceCallback"* %52 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %56, i64* %57, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %54, align 8
  %58 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %59 = inttoptr i64 %56 to %"class.base::internal::BindStateBase"*
  %60 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %59, i64 0, i32 1
  %61 = bitcast void ()** %60 to void (%"class.base::internal::BindStateBase"*, i32)**
  %62 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %61, align 8
  call void %62(%"class.base::internal::BindStateBase"* %59, i32 0) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %58) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #8
  br label %65

63:                                               ; preds = %2
  %64 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 2
  call void @_ZN4mojo13SimpleWatcher11ArmOrNotifyEv(%"class.mojo::SimpleWatcher"* %64) #8
  br label %65

65:                                               ; preds = %2, %63, %51, %21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network22DataPipeToSourceStreamD2Ev(%"class.network::DataPipeToSourceStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7network22DataPipeToSourceStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #8
  %4 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 5, i32 0
  %5 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %4, align 8
  %6 = icmp eq %"class.net::IOBuffer"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %19

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe.13"* %13 to %"class.net::IOBuffer"*
  %15 = bitcast %"class.base::RefCountedThreadSafe.13"* %13 to void (%"class.net::IOBuffer"*)***
  %16 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %16, i64 1
  %18 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %17, align 8
  tail call void %18(%"class.net::IOBuffer"* nonnull %14) #8
  br label %19

19:                                               ; preds = %1, %7, %12
  %20 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 2
  tail call void @_ZN4mojo13SimpleWatcherD1Ev(%"class.mojo::SimpleWatcher"* %20) #8
  %21 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = tail call i32 @MojoClose(i32 %22) #8
  br label %26

26:                                               ; preds = %19, %24
  %27 = bitcast %"class.network::DataPipeToSourceStream"* %0 to %"class.net::SourceStream"*
  tail call void @_ZN3net12SourceStreamD2Ev(%"class.net::SourceStream"* %27) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo13SimpleWatcherD1Ev(%"class.mojo::SimpleWatcher"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net12SourceStreamD2Ev(%"class.net::SourceStream"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network22DataPipeToSourceStreamD0Ev(%"class.network::DataPipeToSourceStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7network22DataPipeToSourceStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #8
  %4 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 5, i32 0
  %5 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %4, align 8
  %6 = icmp eq %"class.net::IOBuffer"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %19

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe.13"* %13 to %"class.net::IOBuffer"*
  %15 = bitcast %"class.base::RefCountedThreadSafe.13"* %13 to void (%"class.net::IOBuffer"*)***
  %16 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %16, i64 1
  %18 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %17, align 8
  tail call void %18(%"class.net::IOBuffer"* nonnull %14) #8
  br label %19

19:                                               ; preds = %12, %7, %1
  %20 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 2
  tail call void @_ZN4mojo13SimpleWatcherD1Ev(%"class.mojo::SimpleWatcher"* %20) #8
  %21 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = tail call i32 @MojoClose(i32 %22) #8
  br label %26

26:                                               ; preds = %19, %24
  %27 = bitcast %"class.network::DataPipeToSourceStream"* %0 to %"class.net::SourceStream"*
  tail call void @_ZN3net12SourceStreamD2Ev(%"class.net::SourceStream"* %27) #8
  %28 = bitcast %"class.network::DataPipeToSourceStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7network22DataPipeToSourceStream11DescriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.network::DataPipeToSourceStream"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 8, i8* %4, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  store i64 7309457989175632196, i64* %5, align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast i64* %6 to i8*
  store i8 0, i8* %7, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7network22DataPipeToSourceStream16MayHaveMoreBytesEv(%"class.network::DataPipeToSourceStream"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 1, !range !16
  %4 = icmp eq i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7network22DataPipeToSourceStream4ReadEPN3net8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.network::DataPipeToSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*) unnamed_addr #0 align 2 {
  %5 = alloca %struct.MojoBeginReadDataOptions, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 3
  %9 = load i8, i8* %8, align 1, !range !16
  store i8 1, i8* %8, align 1
  %10 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %76, label %13

13:                                               ; preds = %4
  %14 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  store i8* null, i8** %6, align 8
  %15 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #8
  store i32 0, i32* %7, align 4
  %16 = bitcast %struct.MojoBeginReadDataOptions* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %struct.MojoBeginReadDataOptions, %struct.MojoBeginReadDataOptions* %5, i64 0, i32 0
  %18 = getelementptr inbounds %struct.MojoBeginReadDataOptions, %struct.MojoBeginReadDataOptions* %5, i64 0, i32 1
  store i32 8, i32* %17, align 8
  store i32 0, i32* %18, align 4
  %19 = call i32 @MojoBeginReadData(i32 %11, %struct.MojoBeginReadDataOptions* nonnull %5, i8** nonnull %6, i32* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  switch i32 %19, label %74 [
    i32 0, label %20
    i32 9, label %35
    i32 17, label %44
  ]

20:                                               ; preds = %13
  %21 = icmp sgt i32 %2, -1
  br i1 %21, label %23, label %22, !prof !15

22:                                               ; preds = %20
  call void @llvm.trap() #8
  unreachable

23:                                               ; preds = %20
  %24 = load i32, i32* %7, align 4
  %25 = icmp ult i32 %24, %2
  %26 = select i1 %25, i32 %24, i32 %2
  %27 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = load i8*, i8** %6, align 8
  %30 = zext i32 %26 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %29, i64 %30, i1 false)
  %31 = load i32, i32* %10, align 4
  %32 = call i32 @MojoEndReadData(i32 %31, i32 %26, %struct.MojoEndReadDataOptions* null) #8
  %33 = icmp sgt i32 %26, -1
  br i1 %33, label %74, label %34, !prof !15

34:                                               ; preds = %23
  call void @llvm.trap() #8
  unreachable

35:                                               ; preds = %13
  %36 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 4
  store i8 1, i8* %36, align 1
  %37 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 2
  call void @_ZN4mojo13SimpleWatcher6CancelEv(%"class.mojo::SimpleWatcher"* %37) #8
  %38 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %35
  %42 = call i32 @MojoClose(i32 %39) #8
  br label %43

43:                                               ; preds = %35, %41
  store i32 0, i32* %38, align 4
  br label %74

44:                                               ; preds = %13
  %45 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 7, i32 0
  %46 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %47 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %45, %"class.base::internal::CallbackBase"* dereferenceable(8) %46) #8
  %48 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 5
  %49 = icmp eq %"class.net::IOBuffer"* %1, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i32* %51, i32 1 monotonic
  br label %53

53:                                               ; preds = %50, %44
  %54 = ptrtoint %"class.net::IOBuffer"* %1 to i64
  %55 = bitcast %class.scoped_refptr.12* %48 to i64*
  %56 = getelementptr inbounds %class.scoped_refptr.12, %class.scoped_refptr.12* %48, i64 0, i32 0
  %57 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %56, align 8
  store i64 %54, i64* %55, align 8
  %58 = icmp eq %"class.net::IOBuffer"* %57, null
  br i1 %58, label %71, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %57, i64 0, i32 1
  %61 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw sub i32* %61, i32 1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %71

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %60, i64 -2
  %66 = bitcast %"class.base::RefCountedThreadSafe.13"* %65 to %"class.net::IOBuffer"*
  %67 = bitcast %"class.base::RefCountedThreadSafe.13"* %65 to void (%"class.net::IOBuffer"*)***
  %68 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %68, i64 1
  %70 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %69, align 8
  call void %70(%"class.net::IOBuffer"* nonnull %66) #8
  br label %71

71:                                               ; preds = %53, %59, %64
  %72 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 6
  store i32 %2, i32* %72, align 8
  %73 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 2
  call void @_ZN4mojo13SimpleWatcher11ArmOrNotifyEv(%"class.mojo::SimpleWatcher"* %73) #8
  br label %74

74:                                               ; preds = %23, %13, %71, %43
  %75 = phi i32 [ -1, %71 ], [ 0, %43 ], [ -9, %13 ], [ %26, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  br label %76

76:                                               ; preds = %4, %74
  %77 = phi i32 [ %75, %74 ], [ 0, %4 ]
  %78 = icmp eq i8* %8, null
  br i1 %78, label %80, label %79

79:                                               ; preds = %76
  store i8 %9, i8* %8, align 1
  br label %80

80:                                               ; preds = %76, %79
  ret i32 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network22DataPipeToSourceStream13FinishReadingEv(%"class.network::DataPipeToSourceStream"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 4
  store i8 1, i8* %2, align 1
  %3 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 2
  tail call void @_ZN4mojo13SimpleWatcher6CancelEv(%"class.mojo::SimpleWatcher"* %3) #8
  %4 = getelementptr inbounds %"class.network::DataPipeToSourceStream", %"class.network::DataPipeToSourceStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call i32 @MojoClose(i32 %5) #8
  br label %9

9:                                                ; preds = %1, %7
  store i32 0, i32* %4, align 4
  ret void
}

declare void @_ZN4mojo13SimpleWatcher11ArmOrNotifyEv(%"class.mojo::SimpleWatcher"*) local_unnamed_addr #1

declare void @_ZN4mojo13SimpleWatcher6CancelEv(%"class.mojo::SimpleWatcher"*) local_unnamed_addr #1

declare i32 @_ZN4mojo13SimpleWatcher5WatchENS_6HandleEjjN4base17RepeatingCallbackIFvjRKNS_18HandleSignalsStateEEEE(%"class.mojo::SimpleWatcher"*, %"class.mojo::Handle"*, i32, i32, %"class.base::RepeatingCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo13SimpleWatcher17DiscardReadyStateERKN4base17RepeatingCallbackIFvjEEEjRKNS_18HandleSignalsStateE(%"class.base::RepeatingCallback.14"* dereferenceable(8), i32, %"struct.mojo::HandleSignalsState"* dereferenceable(8)) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::RepeatingCallback.14", %"class.base::RepeatingCallback.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %5, i64 0, i32 1
  %7 = bitcast void ()** %6 to void (%"class.base::internal::BindStateBase"*, i32)**
  %8 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %7, align 8
  tail call void %8(%"class.base::internal::BindStateBase"* %5, i32 %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS5_EEEFvjSB_EE3RunEPNS0_13BindStateBaseEjSB_(%"class.base::internal::BindStateBase"*, i32, %"struct.mojo::HandleSignalsState"* dereferenceable(8)) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::RepeatingCallback.14"*, i32, %"struct.mojo::HandleSignalsState"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::RepeatingCallback.14"*
  %8 = load void (%"class.base::RepeatingCallback.14"*, i32, %"struct.mojo::HandleSignalsState"*)*, void (%"class.base::RepeatingCallback.14"*, i32, %"struct.mojo::HandleSignalsState"*)** %5, align 8
  tail call void %8(%"class.base::RepeatingCallback.14"* dereferenceable(8) %7, i32 %1, %"struct.mojo::HandleSignalsState"* dereferenceable(8) %2) #8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

declare i32 @MojoBeginReadData(i32, %struct.MojoBeginReadDataOptions*, i8**, i32*) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare i32 @MojoEndReadData(i32, i32, %struct.MojoEndReadDataOptions*) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #3

declare i32 @MojoClose(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN7network22DataPipeToSourceStreamEFvjEJNS0_17UnretainedWrapperIS4_EEEEEFvjEE3RunEPNS0_13BindStateBaseEj(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.network::DataPipeToSourceStream"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.network::DataPipeToSourceStream"*, i32)**
  %22 = load void (%"class.network::DataPipeToSourceStream"*, i32)*, void (%"class.network::DataPipeToSourceStream"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.network::DataPipeToSourceStream"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.network::DataPipeToSourceStream"*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.network::DataPipeToSourceStream"* %13, i32 %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN7network22DataPipeToSourceStreamEFvjEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv: argument 0"}
!4 = distinct !{!4, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN7network22DataPipeToSourceStreamEFvjEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN7network22DataPipeToSourceStreamEFvjEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base13BindRepeatingIMN7network22DataPipeToSourceStreamEFvjEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!9 = distinct !{!9, !"_ZN4base13BindRepeatingIMN7network22DataPipeToSourceStreamEFvjEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFvRKNS2_IFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EEEDcOT0_DpOT1_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFvRKNS2_IFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EEEDcOT0_DpOT1_"}
!13 = distinct !{!13, !14, !"_ZN4base13BindRepeatingIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS3_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!14 = distinct !{!14, !"_ZN4base13BindRepeatingIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS3_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!15 = !{!"branch_weights", i32 2000, i32 1}
!16 = !{i8 0, i8 2}
