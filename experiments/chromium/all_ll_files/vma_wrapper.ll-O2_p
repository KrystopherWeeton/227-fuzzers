; ModuleID = '../../gpu/vulkan/vma_wrapper.cc'
source_filename = "../../gpu/vulkan/vma_wrapper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.VkPhysicalDevice_T = type opaque
%struct.VkDevice_T = type opaque
%struct.VkInstance_T = type opaque
%struct.VmaAllocator_T = type opaque
%struct.VmaVulkanFunctions = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)*, i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)*, void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)*, void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkDeviceMemory_T = type opaque
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%struct.VkBuffer_T = type opaque
%struct.VkImage_T = type opaque
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%struct.VkExtent3D = type { i32, i32, i32 }
%struct.VkCommandBuffer_T = type opaque
%struct.VkBufferCopy = type { i64, i64, i64 }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%struct.VmaAllocatorCreateInfo = type { i32, %struct.VkPhysicalDevice_T*, %struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*, %struct.VmaDeviceMemoryCallbacks*, i32, i64*, %struct.VmaVulkanFunctions*, %struct.VmaRecordSettings*, %struct.VkInstance_T*, i32 }
%struct.VmaDeviceMemoryCallbacks = type { void (%struct.VmaAllocator_T*, i32, %struct.VkDeviceMemory_T*, i64, i8*)*, void (%struct.VmaAllocator_T*, i32, %struct.VkDeviceMemory_T*, i64, i8*)*, i8* }
%struct.VmaRecordSettings = type { i32, i8* }
%"struct.gpu::VulkanFunctionPointers" = type { i8*, %"class.gpu::VulkanFunctionPointers::VulkanFunction", %"class.gpu::VulkanFunctionPointers::VulkanFunction.0", %"class.gpu::VulkanFunctionPointers::VulkanFunction.1", %"class.gpu::VulkanFunctionPointers::VulkanFunction.2", %"class.gpu::VulkanFunctionPointers::VulkanFunction.3", %"class.gpu::VulkanFunctionPointers::VulkanFunction.4", %"class.gpu::VulkanFunctionPointers::VulkanFunction.5", %"class.gpu::VulkanFunctionPointers::VulkanFunction.6", %"class.gpu::VulkanFunctionPointers::VulkanFunction.7", %"class.gpu::VulkanFunctionPointers::VulkanFunction.8", %"class.gpu::VulkanFunctionPointers::VulkanFunction.9", %"class.gpu::VulkanFunctionPointers::VulkanFunction.10", %"class.gpu::VulkanFunctionPointers::VulkanFunction.11", %"class.gpu::VulkanFunctionPointers::VulkanFunction.12", %"class.gpu::VulkanFunctionPointers::VulkanFunction.13", %"class.gpu::VulkanFunctionPointers::VulkanFunction.14", %"class.gpu::VulkanFunctionPointers::VulkanFunction.15", %"class.gpu::VulkanFunctionPointers::VulkanFunction.16", %"class.gpu::VulkanFunctionPointers::VulkanFunction.17", %"class.gpu::VulkanFunctionPointers::VulkanFunction.18", %"class.gpu::VulkanFunctionPointers::VulkanFunction.19", %"class.gpu::VulkanFunctionPointers::VulkanFunction.20", %"class.gpu::VulkanFunctionPointers::VulkanFunction.21", %"class.gpu::VulkanFunctionPointers::VulkanFunction.22", %"class.gpu::VulkanFunctionPointers::VulkanFunction.23", %"class.gpu::VulkanFunctionPointers::VulkanFunction.24", %"class.gpu::VulkanFunctionPointers::VulkanFunction.25", %"class.gpu::VulkanFunctionPointers::VulkanFunction.26", %"class.gpu::VulkanFunctionPointers::VulkanFunction.27", %"class.gpu::VulkanFunctionPointers::VulkanFunction.28", %"class.gpu::VulkanFunctionPointers::VulkanFunction.29", %"class.gpu::VulkanFunctionPointers::VulkanFunction.30", %"class.gpu::VulkanFunctionPointers::VulkanFunction.31", %"class.gpu::VulkanFunctionPointers::VulkanFunction.32", %"class.gpu::VulkanFunctionPointers::VulkanFunction.33", %"class.gpu::VulkanFunctionPointers::VulkanFunction.34", %"class.gpu::VulkanFunctionPointers::VulkanFunction.35", %"class.gpu::VulkanFunctionPointers::VulkanFunction.36", %"class.gpu::VulkanFunctionPointers::VulkanFunction.37", %"class.gpu::VulkanFunctionPointers::VulkanFunction.38", %"class.gpu::VulkanFunctionPointers::VulkanFunction.39", %"class.gpu::VulkanFunctionPointers::VulkanFunction.40", %"class.gpu::VulkanFunctionPointers::VulkanFunction.41", %"class.gpu::VulkanFunctionPointers::VulkanFunction.42", %"class.gpu::VulkanFunctionPointers::VulkanFunction.43", %"class.gpu::VulkanFunctionPointers::VulkanFunction.44", %"class.gpu::VulkanFunctionPointers::VulkanFunction.45", %"class.gpu::VulkanFunctionPointers::VulkanFunction.46", %"class.gpu::VulkanFunctionPointers::VulkanFunction.47", %"class.gpu::VulkanFunctionPointers::VulkanFunction.48", %"class.gpu::VulkanFunctionPointers::VulkanFunction.49", %"class.gpu::VulkanFunctionPointers::VulkanFunction.50", %"class.gpu::VulkanFunctionPointers::VulkanFunction.51", %"class.gpu::VulkanFunctionPointers::VulkanFunction.52", %"class.gpu::VulkanFunctionPointers::VulkanFunction.53", %"class.gpu::VulkanFunctionPointers::VulkanFunction.54", %"class.gpu::VulkanFunctionPointers::VulkanFunction.55", %"class.gpu::VulkanFunctionPointers::VulkanFunction.56", %"class.gpu::VulkanFunctionPointers::VulkanFunction.57", %"class.gpu::VulkanFunctionPointers::VulkanFunction.58", %"class.gpu::VulkanFunctionPointers::VulkanFunction.59", %"class.gpu::VulkanFunctionPointers::VulkanFunction.60", %"class.gpu::VulkanFunctionPointers::VulkanFunction.61", %"class.gpu::VulkanFunctionPointers::VulkanFunction.62", %"class.gpu::VulkanFunctionPointers::VulkanFunction.63", %"class.gpu::VulkanFunctionPointers::VulkanFunction.64", %"class.gpu::VulkanFunctionPointers::VulkanFunction.65", %"class.gpu::VulkanFunctionPointers::VulkanFunction.66", %"class.gpu::VulkanFunctionPointers::VulkanFunction.67", %"class.gpu::VulkanFunctionPointers::VulkanFunction.68", %"class.gpu::VulkanFunctionPointers::VulkanFunction.69", %"class.gpu::VulkanFunctionPointers::VulkanFunction.70", %"class.gpu::VulkanFunctionPointers::VulkanFunction.71", %"class.gpu::VulkanFunctionPointers::VulkanFunction.67", %"class.gpu::VulkanFunctionPointers::VulkanFunction.72", %"class.gpu::VulkanFunctionPointers::VulkanFunction.73", %"class.gpu::VulkanFunctionPointers::VulkanFunction.74", %"class.gpu::VulkanFunctionPointers::VulkanFunction.75", %"class.gpu::VulkanFunctionPointers::VulkanFunction.76", %"class.gpu::VulkanFunctionPointers::VulkanFunction.77", %"class.gpu::VulkanFunctionPointers::VulkanFunction.78", %"class.gpu::VulkanFunctionPointers::VulkanFunction.79", %"class.gpu::VulkanFunctionPointers::VulkanFunction.80", %"class.gpu::VulkanFunctionPointers::VulkanFunction.81", %"class.gpu::VulkanFunctionPointers::VulkanFunction.82", %"class.gpu::VulkanFunctionPointers::VulkanFunction.83", %"class.gpu::VulkanFunctionPointers::VulkanFunction.84", %"class.gpu::VulkanFunctionPointers::VulkanFunction.85", %"class.gpu::VulkanFunctionPointers::VulkanFunction.86", %"class.gpu::VulkanFunctionPointers::VulkanFunction.87", %"class.gpu::VulkanFunctionPointers::VulkanFunction.88", %"class.gpu::VulkanFunctionPointers::VulkanFunction.89", %"class.gpu::VulkanFunctionPointers::VulkanFunction.90", %"class.gpu::VulkanFunctionPointers::VulkanFunction.91", %"class.gpu::VulkanFunctionPointers::VulkanFunction.92", %"class.gpu::VulkanFunctionPointers::VulkanFunction.93", %"class.gpu::VulkanFunctionPointers::VulkanFunction.94", %"class.gpu::VulkanFunctionPointers::VulkanFunction.95", %"class.gpu::VulkanFunctionPointers::VulkanFunction.96", %"class.gpu::VulkanFunctionPointers::VulkanFunction.97" }
%"class.gpu::VulkanFunctionPointers::VulkanFunction" = type { void ()* (%struct.VkInstance_T*, i8*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.0" = type { i32 (i32*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.1" = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.2" = type { i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.3" = type { i32 (i32*, %struct.VkLayerProperties*)* }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.4" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.5" = type { void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.6" = type { i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.7" = type { i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.8" = type { i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.9" = type { void ()* (%struct.VkDevice_T*, i8*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.10" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.11" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.12" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.13" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.14" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.15" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.16" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.17" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.18" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.19" = type { void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)* }
%struct.VkSurfaceKHR_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.20" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)* }
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.21" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)* }
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.22" = type { i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.23" = type { i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)* }
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.24" = type { i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.25" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.26" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)* }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorPool_T = type opaque
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkDescriptorSet_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.27" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.28" = type { i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)* }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%struct.VkRenderPass_T = type opaque
%struct.VkFramebuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.29" = type { i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.30" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.31" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.32" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.33" = type { void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)* }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.34" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.35" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)* }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.36" = type { void (%struct.VkCommandBuffer_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.37" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.38" = type { void (%struct.VkCommandBuffer_T*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.39" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.40" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.41" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)* }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.42" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.43" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkSampler_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.44" = type { i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%struct.VkFence_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.45" = type { i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)* }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.46" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkPipelineCache_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkShaderModule_T = type opaque
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkPipelineLayout_T = type opaque
%struct.VkPipeline_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.47" = type { i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.48" = type { i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)* }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.49" = type { i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.50" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.51" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)* }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%struct.VkSemaphore_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.52" = type { i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)* }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.53" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.54" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.55" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.56" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.57" = type { void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.58" = type { void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.59" = type { void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.60" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.61" = type { void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.62" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.63" = type { void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.64" = type { void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.65" = type { void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.66" = type { i32 (%struct.VkDevice_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.68" = type { i32 (%struct.VkCommandBuffer_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.69" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.70" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.71" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.67" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.72" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.73" = type { void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.74" = type { void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)* }
%struct.VkQueue_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.75" = type { void (%struct.VkDevice_T*, %struct.VkDeviceQueueInfo2*, %struct.VkQueue_T**)* }
%struct.VkDeviceQueueInfo2 = type { i32, i8*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.76" = type { i32 (%struct.VkDevice_T*, %struct.VkFence_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.77" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.78" = type { void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.79" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)* }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.80" = type { i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.81" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.82" = type { i32 (%struct.VkQueue_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.83" = type { i32 (%struct.VkCommandBuffer_T*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.84" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.85" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.86" = type { void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkBufferView_T = type opaque
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.87" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.88" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)* }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.89" = type { i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)* }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.90" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)* }
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %struct.VkDeviceMemory_T*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.91" = type { i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)* }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.92" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)* }
%struct.VkSwapchainKHR_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.93" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)* }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %struct.VkSurfaceKHR_T*, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %struct.VkSwapchainKHR_T* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.94" = type { void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.95" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.96" = type { i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)* }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.97" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageDrmFormatModifierPropertiesEXT*)* }
%struct.VkImageDrmFormatModifierPropertiesEXT = type { i32, i8*, i64 }
%struct.VmaAllocationCreateInfo = type { i32, i32, i32, i32, i32, %struct.VmaPool_T*, i8* }
%struct.VmaPool_T = type opaque
%struct.VmaAllocation_T = type opaque
%struct.VmaAllocationInfo = type { i32, %struct.VkDeviceMemory_T*, i64, i64, i8*, i8* }
%struct.VmaStats = type { [32 x %struct.VmaStatInfo], [16 x %struct.VmaStatInfo], %struct.VmaStatInfo }
%struct.VmaStatInfo = type { i32, i32, i32, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.VmaBudget = type { i64, i64, i64, i64 }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu3vma15CreateAllocatorEP18VkPhysicalDevice_TP10VkDevice_TP12VkInstance_TPKmPP14VmaAllocator_T(%struct.VkPhysicalDevice_T*, %struct.VkDevice_T*, %struct.VkInstance_T*, i64*, %struct.VmaAllocator_T**) local_unnamed_addr #0 {
  %6 = alloca %struct.VmaVulkanFunctions, align 8
  %7 = alloca %struct.VmaAllocatorCreateInfo, align 8
  %8 = tail call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #3
  %9 = bitcast %struct.VmaVulkanFunctions* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %9) #3
  %10 = getelementptr inbounds %struct.VmaVulkanFunctions, %struct.VmaVulkanFunctions* %6, i64 0, i32 16
  %11 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 48, i1 false)
  %12 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %8, i64 0, i32 18, i32 0
  %13 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %struct.VmaVulkanFunctions* %6 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %struct.VmaVulkanFunctions, %struct.VmaVulkanFunctions* %6, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %8, i64 0, i32 16, i32 0
  %18 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)** %16 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %struct.VmaVulkanFunctions, %struct.VmaVulkanFunctions* %6, i64 0, i32 2
  %22 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %8, i64 0, i32 29, i32 0
  %23 = bitcast i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)** %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %struct.VmaVulkanFunctions, %struct.VmaVulkanFunctions* %6, i64 0, i32 3
  %27 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %8, i64 0, i32 73, i32 0
  %28 = bitcast void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)** %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %struct.VmaVulkanFunctions, %struct.VmaVulkanFunctions* %6, i64 0, i32 4
  %32 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %8, i64 0, i32 83, i32 0
  %33 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)** %31 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %struct.VmaVulkanFunctions, %struct.VmaVulkanFunctions* %6, i64 0, i32 5
  %37 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %8, i64 0, i32 88, i32 0
  %38 = bitcast void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)** %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %struct.VmaVulkanFunctions, %struct.VmaVulkanFunctions* %6, i64 0, i32 6
  %42 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %8, i64 0, i32 69, i32 0
  %43 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)** %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %struct.VmaVulkanFunctions, %struct.VmaVulkanFunctions* %6, i64 0, i32 7
  %47 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %8, i64 0, i32 74, i32 0
  %48 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)** %46 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %struct.VmaVulkanFunctions, %struct.VmaVulkanFunctions* %6, i64 0, i32 8
  %52 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %8, i64 0, i32 31, i32 0
  %53 = bitcast i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)** %51 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %struct.VmaVulkanFunctions, %struct.VmaVulkanFunctions* %6, i64 0, i32 9
  %57 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %8, i64 0, i32 33, i32 0
  %58 = bitcast i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)** %56 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %struct.VmaVulkanFunctions, %struct.VmaVulkanFunctions* %6, i64 0, i32 10
  %62 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %8, i64 0, i32 75, i32 0
  %63 = bitcast void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)** %61 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %struct.VmaVulkanFunctions, %struct.VmaVulkanFunctions* %6, i64 0, i32 11
  %67 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %8, i64 0, i32 80, i32 0
  %68 = bitcast void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)** %66 to i64*
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %struct.VmaVulkanFunctions, %struct.VmaVulkanFunctions* %6, i64 0, i32 12
  %72 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %8, i64 0, i32 42, i32 0
  %73 = bitcast i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)** %71 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %struct.VmaVulkanFunctions, %struct.VmaVulkanFunctions* %6, i64 0, i32 13
  %77 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %8, i64 0, i32 55, i32 0
  %78 = bitcast void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)** %76 to i64*
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %struct.VmaVulkanFunctions, %struct.VmaVulkanFunctions* %6, i64 0, i32 14
  %82 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %8, i64 0, i32 49, i32 0
  %83 = bitcast i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)** %81 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %struct.VmaVulkanFunctions, %struct.VmaVulkanFunctions* %6, i64 0, i32 15
  %87 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %8, i64 0, i32 62, i32 0
  %88 = bitcast void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)** %86 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %struct.VmaVulkanFunctions, %struct.VmaVulkanFunctions* %6, i64 0, i32 16
  %92 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %8, i64 0, i32 36, i32 0
  %93 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)** %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %struct.VmaVulkanFunctions, %struct.VmaVulkanFunctions* %6, i64 0, i32 17
  %97 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %8, i64 0, i32 76, i32 0
  %98 = bitcast void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %struct.VmaVulkanFunctions, %struct.VmaVulkanFunctions* %6, i64 0, i32 18
  %102 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %8, i64 0, i32 81, i32 0
  %103 = bitcast void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %struct.VmaVulkanFunctions, %struct.VmaVulkanFunctions* %6, i64 0, i32 19
  %107 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %8, i64 0, i32 32, i32 0
  %108 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %struct.VmaVulkanFunctions, %struct.VmaVulkanFunctions* %6, i64 0, i32 20
  %112 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %8, i64 0, i32 34, i32 0
  %113 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %struct.VmaVulkanFunctions, %struct.VmaVulkanFunctions* %6, i64 0, i32 21
  %117 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %8, i64 0, i32 17, i32 0
  %118 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = bitcast %struct.VmaAllocatorCreateInfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %121) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 -86, i64 96, i1 false)
  %122 = getelementptr inbounds %struct.VmaAllocatorCreateInfo, %struct.VmaAllocatorCreateInfo* %7, i64 0, i32 0
  store i32 1, i32* %122, align 8
  %123 = getelementptr inbounds %struct.VmaAllocatorCreateInfo, %struct.VmaAllocatorCreateInfo* %7, i64 0, i32 1
  store %struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDevice_T** %123, align 8
  %124 = getelementptr inbounds %struct.VmaAllocatorCreateInfo, %struct.VmaAllocatorCreateInfo* %7, i64 0, i32 2
  store %struct.VkDevice_T* %1, %struct.VkDevice_T** %124, align 8
  %125 = getelementptr inbounds %struct.VmaAllocatorCreateInfo, %struct.VmaAllocatorCreateInfo* %7, i64 0, i32 3
  store i64 4194304, i64* %125, align 8
  %126 = getelementptr inbounds %struct.VmaAllocatorCreateInfo, %struct.VmaAllocatorCreateInfo* %7, i64 0, i32 4
  %127 = getelementptr inbounds %struct.VmaAllocatorCreateInfo, %struct.VmaAllocatorCreateInfo* %7, i64 0, i32 7
  %128 = bitcast %struct.VkAllocationCallbacks** %126 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %128, i8 0, i64 20, i1 false)
  store i64* %3, i64** %127, align 8
  %129 = getelementptr inbounds %struct.VmaAllocatorCreateInfo, %struct.VmaAllocatorCreateInfo* %7, i64 0, i32 8
  store %struct.VmaVulkanFunctions* %6, %struct.VmaVulkanFunctions** %129, align 8
  %130 = getelementptr inbounds %struct.VmaAllocatorCreateInfo, %struct.VmaAllocatorCreateInfo* %7, i64 0, i32 9
  store %struct.VmaRecordSettings* null, %struct.VmaRecordSettings** %130, align 8
  %131 = getelementptr inbounds %struct.VmaAllocatorCreateInfo, %struct.VmaAllocatorCreateInfo* %7, i64 0, i32 10
  store %struct.VkInstance_T* %2, %struct.VkInstance_T** %131, align 8
  %132 = getelementptr inbounds %struct.VmaAllocatorCreateInfo, %struct.VmaAllocatorCreateInfo* %7, i64 0, i32 11
  store i32 4198400, i32* %132, align 8
  %133 = call i32 @vmaCreateAllocator(%struct.VmaAllocatorCreateInfo* nonnull %7, %struct.VmaAllocator_T** %4) #3
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %121) #3
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %9) #3
  ret i32 %133
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @vmaCreateAllocator(%struct.VmaAllocatorCreateInfo*, %struct.VmaAllocator_T**) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu3vma16DestroyAllocatorEP14VmaAllocator_T(%struct.VmaAllocator_T*) local_unnamed_addr #0 {
  tail call void @vmaDestroyAllocator(%struct.VmaAllocator_T* %0) #3
  ret void
}

declare void @vmaDestroyAllocator(%struct.VmaAllocator_T*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu3vma22AllocateMemoryForImageEP14VmaAllocator_TP9VkImage_TPK23VmaAllocationCreateInfoPP15VmaAllocation_TP17VmaAllocationInfo(%struct.VmaAllocator_T*, %struct.VkImage_T*, %struct.VmaAllocationCreateInfo*, %struct.VmaAllocation_T**, %struct.VmaAllocationInfo*) local_unnamed_addr #0 {
  %6 = tail call i32 @vmaAllocateMemoryForImage(%struct.VmaAllocator_T* %0, %struct.VkImage_T* %1, %struct.VmaAllocationCreateInfo* %2, %struct.VmaAllocation_T** %3, %struct.VmaAllocationInfo* %4) #3
  ret i32 %6
}

declare i32 @vmaAllocateMemoryForImage(%struct.VmaAllocator_T*, %struct.VkImage_T*, %struct.VmaAllocationCreateInfo*, %struct.VmaAllocation_T**, %struct.VmaAllocationInfo*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu3vma23AllocateMemoryForBufferEP14VmaAllocator_TP10VkBuffer_TPK23VmaAllocationCreateInfoPP15VmaAllocation_TP17VmaAllocationInfo(%struct.VmaAllocator_T*, %struct.VkBuffer_T*, %struct.VmaAllocationCreateInfo*, %struct.VmaAllocation_T**, %struct.VmaAllocationInfo*) local_unnamed_addr #0 {
  %6 = tail call i32 @vmaAllocateMemoryForBuffer(%struct.VmaAllocator_T* %0, %struct.VkBuffer_T* %1, %struct.VmaAllocationCreateInfo* %2, %struct.VmaAllocation_T** %3, %struct.VmaAllocationInfo* %4) #3
  ret i32 %6
}

declare i32 @vmaAllocateMemoryForBuffer(%struct.VmaAllocator_T*, %struct.VkBuffer_T*, %struct.VmaAllocationCreateInfo*, %struct.VmaAllocation_T**, %struct.VmaAllocationInfo*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu3vma12CreateBufferEP14VmaAllocator_TPK18VkBufferCreateInfojjPP10VkBuffer_TPP15VmaAllocation_T(%struct.VmaAllocator_T*, %struct.VkBufferCreateInfo*, i32, i32, %struct.VkBuffer_T**, %struct.VmaAllocation_T**) local_unnamed_addr #0 {
  %7 = alloca %struct.VmaAllocationCreateInfo, align 8
  %8 = bitcast %struct.VmaAllocationCreateInfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 40, i1 false)
  %9 = getelementptr inbounds %struct.VmaAllocationCreateInfo, %struct.VmaAllocationCreateInfo* %7, i64 0, i32 2
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %struct.VmaAllocationCreateInfo, %struct.VmaAllocationCreateInfo* %7, i64 0, i32 3
  store i32 %3, i32* %10, align 4
  %11 = call i32 @vmaCreateBuffer(%struct.VmaAllocator_T* %0, %struct.VkBufferCreateInfo* %1, %struct.VmaAllocationCreateInfo* nonnull %7, %struct.VkBuffer_T** %4, %struct.VmaAllocation_T** %5, %struct.VmaAllocationInfo* null) #3
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #3
  ret i32 %11
}

declare i32 @vmaCreateBuffer(%struct.VmaAllocator_T*, %struct.VkBufferCreateInfo*, %struct.VmaAllocationCreateInfo*, %struct.VkBuffer_T**, %struct.VmaAllocation_T**, %struct.VmaAllocationInfo*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu3vma13DestroyBufferEP14VmaAllocator_TP10VkBuffer_TP15VmaAllocation_T(%struct.VmaAllocator_T*, %struct.VkBuffer_T*, %struct.VmaAllocation_T*) local_unnamed_addr #0 {
  tail call void @vmaDestroyBuffer(%struct.VmaAllocator_T* %0, %struct.VkBuffer_T* %1, %struct.VmaAllocation_T* %2) #3
  ret void
}

declare void @vmaDestroyBuffer(%struct.VmaAllocator_T*, %struct.VkBuffer_T*, %struct.VmaAllocation_T*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu3vma9MapMemoryEP14VmaAllocator_TP15VmaAllocation_TPPv(%struct.VmaAllocator_T*, %struct.VmaAllocation_T*, i8**) local_unnamed_addr #0 {
  %4 = tail call i32 @vmaMapMemory(%struct.VmaAllocator_T* %0, %struct.VmaAllocation_T* %1, i8** %2) #3
  ret i32 %4
}

declare i32 @vmaMapMemory(%struct.VmaAllocator_T*, %struct.VmaAllocation_T*, i8**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu3vma11UnmapMemoryEP14VmaAllocator_TP15VmaAllocation_T(%struct.VmaAllocator_T*, %struct.VmaAllocation_T*) local_unnamed_addr #0 {
  tail call void @vmaUnmapMemory(%struct.VmaAllocator_T* %0, %struct.VmaAllocation_T* %1) #3
  ret void
}

declare void @vmaUnmapMemory(%struct.VmaAllocator_T*, %struct.VmaAllocation_T*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu3vma10FreeMemoryEP14VmaAllocator_TP15VmaAllocation_T(%struct.VmaAllocator_T*, %struct.VmaAllocation_T*) local_unnamed_addr #0 {
  tail call void @vmaFreeMemory(%struct.VmaAllocator_T* %0, %struct.VmaAllocation_T* %1) #3
  ret void
}

declare void @vmaFreeMemory(%struct.VmaAllocator_T*, %struct.VmaAllocation_T*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu3vma15FlushAllocationEP14VmaAllocator_TP15VmaAllocation_Tmm(%struct.VmaAllocator_T*, %struct.VmaAllocation_T*, i64, i64) local_unnamed_addr #0 {
  %5 = tail call i32 @vmaFlushAllocation(%struct.VmaAllocator_T* %0, %struct.VmaAllocation_T* %1, i64 %2, i64 %3) #3
  ret i32 %5
}

declare i32 @vmaFlushAllocation(%struct.VmaAllocator_T*, %struct.VmaAllocation_T*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu3vma20InvalidateAllocationEP14VmaAllocator_TP15VmaAllocation_Tmm(%struct.VmaAllocator_T*, %struct.VmaAllocation_T*, i64, i64) local_unnamed_addr #0 {
  %5 = tail call i32 @vmaInvalidateAllocation(%struct.VmaAllocator_T* %0, %struct.VmaAllocation_T* %1, i64 %2, i64 %3) #3
  ret i32 %5
}

declare i32 @vmaInvalidateAllocation(%struct.VmaAllocator_T*, %struct.VmaAllocation_T*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu3vma17GetAllocationInfoEP14VmaAllocator_TP15VmaAllocation_TP17VmaAllocationInfo(%struct.VmaAllocator_T*, %struct.VmaAllocation_T*, %struct.VmaAllocationInfo*) local_unnamed_addr #0 {
  tail call void @vmaGetAllocationInfo(%struct.VmaAllocator_T* %0, %struct.VmaAllocation_T* %1, %struct.VmaAllocationInfo* %2) #3
  ret void
}

declare void @vmaGetAllocationInfo(%struct.VmaAllocator_T*, %struct.VmaAllocation_T*, %struct.VmaAllocationInfo*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu3vma23GetMemoryTypePropertiesEP14VmaAllocator_TjPj(%struct.VmaAllocator_T*, i32, i32*) local_unnamed_addr #0 {
  tail call void @vmaGetMemoryTypeProperties(%struct.VmaAllocator_T* %0, i32 %1, i32* %2) #3
  ret void
}

declare void @vmaGetMemoryTypeProperties(%struct.VmaAllocator_T*, i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu3vma27GetPhysicalDevicePropertiesEP14VmaAllocator_TPPK26VkPhysicalDeviceProperties(%struct.VmaAllocator_T*, %struct.VkPhysicalDeviceProperties**) local_unnamed_addr #0 {
  tail call void @vmaGetPhysicalDeviceProperties(%struct.VmaAllocator_T* %0, %struct.VkPhysicalDeviceProperties** %1) #3
  ret void
}

declare void @vmaGetPhysicalDeviceProperties(%struct.VmaAllocator_T*, %struct.VkPhysicalDeviceProperties**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu3vma14CalculateStatsEP14VmaAllocator_TP8VmaStats(%struct.VmaAllocator_T*, %struct.VmaStats*) local_unnamed_addr #0 {
  tail call void @vmaCalculateStats(%struct.VmaAllocator_T* %0, %struct.VmaStats* %1) #3
  ret void
}

declare void @vmaCalculateStats(%struct.VmaAllocator_T*, %struct.VmaStats*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3gpu3vma23GetTotalAllocatedMemoryEP14VmaAllocator_T(%struct.VmaAllocator_T*) local_unnamed_addr #0 {
  %2 = alloca [16 x %struct.VmaBudget], align 16
  %3 = alloca %struct.VkPhysicalDeviceMemoryProperties*, align 8
  %4 = bitcast [16 x %struct.VmaBudget]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %4) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 512, i1 false)
  %5 = getelementptr inbounds [16 x %struct.VmaBudget], [16 x %struct.VmaBudget]* %2, i64 0, i64 0
  call void @vmaGetBudget(%struct.VmaAllocator_T* %0, %struct.VmaBudget* nonnull %5) #3
  %6 = bitcast %struct.VkPhysicalDeviceMemoryProperties** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #3
  store %struct.VkPhysicalDeviceMemoryProperties* inttoptr (i64 -6148914691236517206 to %struct.VkPhysicalDeviceMemoryProperties*), %struct.VkPhysicalDeviceMemoryProperties** %3, align 8
  call void @vmaGetMemoryProperties(%struct.VmaAllocator_T* %0, %struct.VkPhysicalDeviceMemoryProperties** nonnull %3) #3
  %7 = load %struct.VkPhysicalDeviceMemoryProperties*, %struct.VkPhysicalDeviceMemoryProperties** %3, align 8
  %8 = getelementptr inbounds %struct.VkPhysicalDeviceMemoryProperties, %struct.VkPhysicalDeviceMemoryProperties* %7, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %30, label %11

11:                                               ; preds = %1
  %12 = zext i32 %9 to i64
  %13 = and i64 %12, 1
  %14 = icmp eq i32 %9, 1
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = sub nsw i64 %12, %13
  br label %32

17:                                               ; preds = %32, %11
  %18 = phi i64 [ undef, %11 ], [ %50, %32 ]
  %19 = phi i64 [ 0, %11 ], [ %51, %32 ]
  %20 = phi i64 [ 0, %11 ], [ %50, %32 ]
  %21 = icmp eq i64 %13, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds [16 x %struct.VmaBudget], [16 x %struct.VmaBudget]* %2, i64 0, i64 %19, i32 0
  %24 = getelementptr inbounds [16 x %struct.VmaBudget], [16 x %struct.VmaBudget]* %2, i64 0, i64 %19, i32 1
  %25 = load i64, i64* %23, align 16
  %26 = load i64, i64* %24, align 8
  %27 = icmp ult i64 %25, %26
  %28 = select i1 %27, i64 %26, i64 %25
  %29 = add i64 %28, %20
  br label %30

30:                                               ; preds = %22, %17, %1
  %31 = phi i64 [ 0, %1 ], [ %18, %17 ], [ %29, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #3
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %4) #3
  ret i64 %31

32:                                               ; preds = %32, %15
  %33 = phi i64 [ 0, %15 ], [ %51, %32 ]
  %34 = phi i64 [ 0, %15 ], [ %50, %32 ]
  %35 = phi i64 [ %16, %15 ], [ %52, %32 ]
  %36 = getelementptr inbounds [16 x %struct.VmaBudget], [16 x %struct.VmaBudget]* %2, i64 0, i64 %33, i32 0
  %37 = getelementptr inbounds [16 x %struct.VmaBudget], [16 x %struct.VmaBudget]* %2, i64 0, i64 %33, i32 1
  %38 = load i64, i64* %36, align 16
  %39 = load i64, i64* %37, align 8
  %40 = icmp ult i64 %38, %39
  %41 = select i1 %40, i64 %39, i64 %38
  %42 = add i64 %41, %34
  %43 = or i64 %33, 1
  %44 = getelementptr inbounds [16 x %struct.VmaBudget], [16 x %struct.VmaBudget]* %2, i64 0, i64 %43, i32 0
  %45 = getelementptr inbounds [16 x %struct.VmaBudget], [16 x %struct.VmaBudget]* %2, i64 0, i64 %43, i32 1
  %46 = load i64, i64* %44, align 16
  %47 = load i64, i64* %45, align 8
  %48 = icmp ult i64 %46, %47
  %49 = select i1 %48, i64 %47, i64 %46
  %50 = add i64 %49, %42
  %51 = add nuw nsw i64 %33, 2
  %52 = add i64 %35, -2
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %17, label %32
}

declare void @vmaGetBudget(%struct.VmaAllocator_T*, %struct.VmaBudget*) local_unnamed_addr #2

declare void @vmaGetMemoryProperties(%struct.VmaAllocator_T*, %struct.VkPhysicalDeviceMemoryProperties**) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
