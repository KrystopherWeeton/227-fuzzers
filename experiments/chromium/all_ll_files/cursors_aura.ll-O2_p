; ModuleID = '../../ui/base/cursor/cursors_aura.cc'
source_filename = "../../ui/base/cursor/cursors_aura.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ui::(anonymous namespace)::CursorSizeData" = type { i32, %"struct.ui::(anonymous namespace)::CursorData"*, i32 }
%"struct.ui::(anonymous namespace)::CursorData" = type { i32, i32, %"struct.ui::(anonymous namespace)::HotPoint", %"struct.ui::(anonymous namespace)::HotPoint" }
%"struct.ui::(anonymous namespace)::HotPoint" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.ui::ResourceBundle" = type { %"class.ui::ResourceBundle::Delegate"*, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9", %"class.std::__1::vector", i32, %"class.std::__1::map", %"class.gfx::Image", %"class.std::__1::map.27", %"class.base::FilePath", %"class.std::__1::unordered_map", i8, i8, %"class.std::__1::basic_string" }
%"class.ui::ResourceBundle::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::Lock"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.ui::ResourceHandle"* }
%"class.ui::ResourceHandle" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.9"*, %"class.std::__1::unique_ptr.9"*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::unique_ptr.9"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i64 }
%"class.gfx::Image" = type { %class.scoped_refptr.26 }
%class.scoped_refptr.26 = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.std::__1::map.27" = type { %"class.std::__1::__tree.28" }
%"class.std::__1::__tree.28" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.43", %"class.std::__1::__compressed_pair.51", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.58", [4 x i8] }>
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45", %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { float }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.0, i32, i32 }
%class.sk_sp.0 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.ui::Cursor" = type { i32, %class.scoped_refptr, float, %"class.gfx::Point", %class.SkBitmap }
%class.scoped_refptr = type { %"class.ui::PlatformCursor"* }
%"class.ui::PlatformCursor" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.61 }
%class.scoped_refptr.61 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"class.gfx::ImageSkiaRep" = type <{ %"class.cc::PaintImage", %class.sk_sp.63, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp.62, %class.sk_sp.63, %"class.gfx::Rect", i32, %class.sk_sp.68, %class.sk_sp.69, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.62, %class.scoped_refptr.70 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%class.sk_sp.68 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.69 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp.62 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.scoped_refptr.70 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type opaque
%class.sk_sp.63 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.64", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { i8* }
%"class.gfx::Size" = type { i32, i32 }

@_ZN2ui12_GLOBAL__N_112kCursorSizesE = internal constant [2 x %"struct.ui::(anonymous namespace)::CursorSizeData"] [%"struct.ui::(anonymous namespace)::CursorSizeData" { i32 0, %"struct.ui::(anonymous namespace)::CursorData"* getelementptr inbounds ([38 x %"struct.ui::(anonymous namespace)::CursorData"], [38 x %"struct.ui::(anonymous namespace)::CursorData"]* @_ZN2ui12_GLOBAL__N_114kNormalCursorsE, i32 0, i32 0), i32 38 }, %"struct.ui::(anonymous namespace)::CursorSizeData" { i32 1, %"struct.ui::(anonymous namespace)::CursorData"* getelementptr inbounds ([36 x %"struct.ui::(anonymous namespace)::CursorData"], [36 x %"struct.ui::(anonymous namespace)::CursorData"]* @_ZN2ui12_GLOBAL__N_113kLargeCursorsE, i32 0, i32 0), i32 36 }], align 16
@_ZN2ui12_GLOBAL__N_114kNormalCursorsE = internal constant [38 x %"struct.ui::(anonymous namespace)::CursorData"] [%"struct.ui::(anonymous namespace)::CursorData" { i32 -1, i32 28819, %"struct.ui::(anonymous namespace)::HotPoint" { i32 4, i32 4 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 7, i32 7 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 0, i32 28819, %"struct.ui::(anonymous namespace)::HotPoint" { i32 4, i32 4 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 7, i32 7 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 35, i32 28818, %"struct.ui::(anonymous namespace)::HotPoint" { i32 9, i32 9 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 18, i32 18 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 38, i32 28818, %"struct.ui::(anonymous namespace)::HotPoint" { i32 9, i32 9 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 18, i32 18 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 36, i32 28798, %"struct.ui::(anonymous namespace)::HotPoint" { i32 9, i32 9 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 18, i32 18 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 2, i32 28805, %"struct.ui::(anonymous namespace)::HotPoint" { i32 9, i32 4 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 19, i32 8 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 29, i32 28808, %"struct.ui::(anonymous namespace)::HotPoint" { i32 11, i32 11 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 23, i32 23 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 8, i32 28809, %"struct.ui::(anonymous namespace)::HotPoint" { i32 12, i32 11 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 25, i32 23 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 12, i32 28823, %"struct.ui::(anonymous namespace)::HotPoint" { i32 12, i32 11 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 25, i32 23 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 11, i32 28821, %"struct.ui::(anonymous namespace)::HotPoint" { i32 11, i32 11 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 24, i32 23 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 9, i32 28815, %"struct.ui::(anonymous namespace)::HotPoint" { i32 11, i32 11 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 24, i32 23 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 7, i32 28812, %"struct.ui::(anonymous namespace)::HotPoint" { i32 11, i32 12 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 23, i32 23 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 10, i32 28822, %"struct.ui::(anonymous namespace)::HotPoint" { i32 11, i32 12 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 23, i32 23 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 6, i32 28800, %"struct.ui::(anonymous namespace)::HotPoint" { i32 12, i32 11 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 25, i32 23 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 13, i32 28825, %"struct.ui::(anonymous namespace)::HotPoint" { i32 12, i32 11 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 25, i32 23 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 3, i32 28807, %"struct.ui::(anonymous namespace)::HotPoint" { i32 12, i32 12 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 24, i32 25 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 33, i32 28760, %"struct.ui::(anonymous namespace)::HotPoint" { i32 8, i32 6 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 15, i32 11 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 31, i32 28795, %"struct.ui::(anonymous namespace)::HotPoint" { i32 11, i32 11 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 24, i32 23 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 32, i32 28797, %"struct.ui::(anonymous namespace)::HotPoint" { i32 4, i32 4 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 8, i32 9 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 1, i32 28799, %"struct.ui::(anonymous namespace)::HotPoint" { i32 12, i32 12 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 24, i32 24 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 5, i32 28806, %"struct.ui::(anonymous namespace)::HotPoint" { i32 4, i32 4 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 8, i32 9 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 30, i32 28826, %"struct.ui::(anonymous namespace)::HotPoint" { i32 12, i32 11 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 26, i32 23 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 39, i32 28827, %"struct.ui::(anonymous namespace)::HotPoint" { i32 10, i32 10 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 20, i32 20 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 40, i32 28828, %"struct.ui::(anonymous namespace)::HotPoint" { i32 10, i32 10 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 20, i32 20 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 19, i32 28820, %"struct.ui::(anonymous namespace)::HotPoint" { i32 11, i32 12 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 23, i32 23 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 18, i32 28796, %"struct.ui::(anonymous namespace)::HotPoint" { i32 12, i32 11 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 25, i32 23 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 50, i32 28801, %"struct.ui::(anonymous namespace)::HotPoint" { i32 12, i32 11 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 25, i32 23 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 15, i32 28802, %"struct.ui::(anonymous namespace)::HotPoint" { i32 12, i32 11 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 25, i32 23 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 51, i32 28813, %"struct.ui::(anonymous namespace)::HotPoint" { i32 11, i32 12 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 23, i32 23 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 14, i32 28814, %"struct.ui::(anonymous namespace)::HotPoint" { i32 11, i32 12 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 23, i32 23 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 52, i32 28810, %"struct.ui::(anonymous namespace)::HotPoint" { i32 12, i32 11 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 25, i32 23 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 16, i32 28811, %"struct.ui::(anonymous namespace)::HotPoint" { i32 12, i32 11 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 25, i32 23 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 53, i32 28816, %"struct.ui::(anonymous namespace)::HotPoint" { i32 11, i32 11 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 24, i32 23 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 17, i32 28817, %"struct.ui::(anonymous namespace)::HotPoint" { i32 11, i32 11 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 24, i32 23 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 41, i32 28803, %"struct.ui::(anonymous namespace)::HotPoint" { i32 8, i32 5 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 16, i32 10 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 42, i32 28804, %"struct.ui::(anonymous namespace)::HotPoint" { i32 9, i32 9 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 18, i32 18 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 4, i32 28824, %"struct.ui::(anonymous namespace)::HotPoint" { i32 7, i32 7 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 14, i32 14 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 34, i32 28824, %"struct.ui::(anonymous namespace)::HotPoint" { i32 7, i32 7 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 14, i32 14 } }], align 16
@_ZN2ui12_GLOBAL__N_113kLargeCursorsE = internal constant [36 x %"struct.ui::(anonymous namespace)::CursorData"] [%"struct.ui::(anonymous namespace)::CursorData" { i32 -1, i32 28786, %"struct.ui::(anonymous namespace)::HotPoint" { i32 10, i32 10 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 20, i32 20 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 0, i32 28786, %"struct.ui::(anonymous namespace)::HotPoint" { i32 10, i32 10 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 20, i32 20 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 35, i32 28785, %"struct.ui::(anonymous namespace)::HotPoint" { i32 10, i32 10 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 20, i32 20 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 38, i32 28785, %"struct.ui::(anonymous namespace)::HotPoint" { i32 10, i32 10 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 20, i32 20 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 36, i32 28765, %"struct.ui::(anonymous namespace)::HotPoint" { i32 10, i32 10 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 20, i32 20 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 2, i32 28772, %"struct.ui::(anonymous namespace)::HotPoint" { i32 25, i32 7 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 50, i32 14 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 29, i32 28775, %"struct.ui::(anonymous namespace)::HotPoint" { i32 32, i32 31 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 64, i32 62 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 8, i32 28776, %"struct.ui::(anonymous namespace)::HotPoint" { i32 31, i32 28 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 62, i32 56 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 12, i32 28790, %"struct.ui::(anonymous namespace)::HotPoint" { i32 31, i32 28 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 62, i32 56 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 11, i32 28788, %"struct.ui::(anonymous namespace)::HotPoint" { i32 28, i32 28 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 56, i32 56 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 9, i32 28782, %"struct.ui::(anonymous namespace)::HotPoint" { i32 28, i32 28 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 56, i32 56 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 7, i32 28779, %"struct.ui::(anonymous namespace)::HotPoint" { i32 29, i32 32 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 58, i32 64 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 10, i32 28789, %"struct.ui::(anonymous namespace)::HotPoint" { i32 29, i32 32 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 58, i32 64 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 6, i32 28767, %"struct.ui::(anonymous namespace)::HotPoint" { i32 35, i32 29 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 70, i32 58 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 13, i32 28791, %"struct.ui::(anonymous namespace)::HotPoint" { i32 35, i32 29 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 70, i32 58 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 3, i32 28774, %"struct.ui::(anonymous namespace)::HotPoint" { i32 30, i32 32 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 60, i32 64 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 33, i32 28761, %"struct.ui::(anonymous namespace)::HotPoint" { i32 19, i32 11 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 38, i32 22 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 31, i32 28762, %"struct.ui::(anonymous namespace)::HotPoint" { i32 30, i32 30 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 60, i32 60 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 32, i32 28764, %"struct.ui::(anonymous namespace)::HotPoint" { i32 11, i32 11 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 22, i32 22 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 1, i32 28766, %"struct.ui::(anonymous namespace)::HotPoint" { i32 30, i32 32 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 60, i32 64 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 5, i32 28773, %"struct.ui::(anonymous namespace)::HotPoint" { i32 10, i32 11 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 20, i32 22 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 30, i32 28792, %"struct.ui::(anonymous namespace)::HotPoint" { i32 32, i32 30 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 64, i32 60 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 39, i32 28793, %"struct.ui::(anonymous namespace)::HotPoint" { i32 25, i32 26 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 50, i32 52 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 40, i32 28794, %"struct.ui::(anonymous namespace)::HotPoint" { i32 26, i32 26 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 52, i32 52 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 19, i32 28787, %"struct.ui::(anonymous namespace)::HotPoint" { i32 29, i32 32 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 58, i32 64 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 18, i32 28763, %"struct.ui::(anonymous namespace)::HotPoint" { i32 35, i32 29 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 70, i32 58 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 50, i32 28768, %"struct.ui::(anonymous namespace)::HotPoint" { i32 35, i32 29 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 70, i32 58 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 15, i32 28769, %"struct.ui::(anonymous namespace)::HotPoint" { i32 35, i32 29 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 70, i32 58 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 51, i32 28780, %"struct.ui::(anonymous namespace)::HotPoint" { i32 29, i32 32 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 58, i32 64 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 14, i32 28781, %"struct.ui::(anonymous namespace)::HotPoint" { i32 29, i32 32 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 58, i32 64 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 52, i32 28777, %"struct.ui::(anonymous namespace)::HotPoint" { i32 32, i32 30 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 64, i32 60 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 16, i32 28778, %"struct.ui::(anonymous namespace)::HotPoint" { i32 32, i32 30 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 64, i32 60 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 53, i32 28783, %"struct.ui::(anonymous namespace)::HotPoint" { i32 32, i32 31 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 64, i32 62 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 17, i32 28784, %"struct.ui::(anonymous namespace)::HotPoint" { i32 32, i32 31 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 64, i32 62 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 41, i32 28770, %"struct.ui::(anonymous namespace)::HotPoint" { i32 21, i32 11 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 42, i32 22 } }, %"struct.ui::(anonymous namespace)::CursorData" { i32 42, i32 28771, %"struct.ui::(anonymous namespace)::HotPoint" { i32 20, i32 12 }, %"struct.ui::(anonymous namespace)::HotPoint" { i32 40, i32 24 } }], align 16

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui16GetCursorDataForENS_10CursorSizeENS_5mojom10CursorTypeEfPiPN3gfx5PointE(i32, i32, float, i32* nocapture, %"class.gfx::Point"* nocapture) local_unnamed_addr #0 {
  %6 = icmp eq i32 %0, 1
  %7 = select i1 %6, %"struct.ui::(anonymous namespace)::CursorSizeData"* getelementptr inbounds ([2 x %"struct.ui::(anonymous namespace)::CursorSizeData"], [2 x %"struct.ui::(anonymous namespace)::CursorSizeData"]* @_ZN2ui12_GLOBAL__N_112kCursorSizesE, i64 0, i64 1), %"struct.ui::(anonymous namespace)::CursorSizeData"* null
  %8 = icmp eq i32 %0, 0
  %9 = select i1 %8, %"struct.ui::(anonymous namespace)::CursorSizeData"* getelementptr inbounds ([2 x %"struct.ui::(anonymous namespace)::CursorSizeData"], [2 x %"struct.ui::(anonymous namespace)::CursorSizeData"]* @_ZN2ui12_GLOBAL__N_112kCursorSizesE, i64 0, i64 0), %"struct.ui::(anonymous namespace)::CursorSizeData"* %7
  %10 = icmp eq %"struct.ui::(anonymous namespace)::CursorSizeData"* %9, null
  br i1 %10, label %40, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"struct.ui::(anonymous namespace)::CursorSizeData", %"struct.ui::(anonymous namespace)::CursorSizeData"* %9, i64 0, i32 1
  %13 = load %"struct.ui::(anonymous namespace)::CursorData"*, %"struct.ui::(anonymous namespace)::CursorData"** %12, align 8
  %14 = getelementptr inbounds %"struct.ui::(anonymous namespace)::CursorSizeData", %"struct.ui::(anonymous namespace)::CursorSizeData"* %9, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  %17 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #3
  %18 = tail call i32 @_ZNK2ui14ResourceBundle17GetMaxScaleFactorEv(%"class.ui::ResourceBundle"* %17) #3
  %19 = icmp ne i32 %18, 7
  %20 = icmp eq i32 %15, 0
  br i1 %20, label %40, label %21

21:                                               ; preds = %11, %26
  %22 = phi i64 [ %27, %26 ], [ 0, %11 ]
  %23 = getelementptr inbounds %"struct.ui::(anonymous namespace)::CursorData", %"struct.ui::(anonymous namespace)::CursorData"* %13, i64 %22, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, %1
  br i1 %25, label %29, label %26

26:                                               ; preds = %21
  %27 = add nuw i64 %22, 1
  %28 = icmp eq i64 %27, %16
  br i1 %28, label %40, label %21

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"struct.ui::(anonymous namespace)::CursorData", %"struct.ui::(anonymous namespace)::CursorData"* %13, i64 %22, i32 1
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %3, align 4
  %32 = fcmp oeq float %2, 1.000000e+00
  %33 = or i1 %32, %19
  %34 = getelementptr inbounds %"struct.ui::(anonymous namespace)::CursorData", %"struct.ui::(anonymous namespace)::CursorData"* %13, i64 %22, i32 2, i32 0
  %35 = getelementptr inbounds %"struct.ui::(anonymous namespace)::CursorData", %"struct.ui::(anonymous namespace)::CursorData"* %13, i64 %22, i32 2, i32 1
  %36 = getelementptr inbounds %"struct.ui::(anonymous namespace)::CursorData", %"struct.ui::(anonymous namespace)::CursorData"* %13, i64 %22, i32 3, i32 0
  %37 = getelementptr inbounds %"struct.ui::(anonymous namespace)::CursorData", %"struct.ui::(anonymous namespace)::CursorData"* %13, i64 %22, i32 3, i32 1
  %38 = select i1 %33, i32* %35, i32* %37
  %39 = select i1 %33, i32* %34, i32* %36
  br label %66

40:                                               ; preds = %26, %11, %5
  %41 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #3
  %42 = tail call i32 @_ZNK2ui14ResourceBundle17GetMaxScaleFactorEv(%"class.ui::ResourceBundle"* %41) #3
  %43 = icmp ne i32 %42, 7
  br label %44

44:                                               ; preds = %78, %40
  %45 = phi i64 [ 0, %40 ], [ %79, %78 ]
  %46 = getelementptr inbounds [38 x %"struct.ui::(anonymous namespace)::CursorData"], [38 x %"struct.ui::(anonymous namespace)::CursorData"]* @_ZN2ui12_GLOBAL__N_114kNormalCursorsE, i64 0, i64 %45, i32 0
  %47 = load i32, i32* %46, align 16
  %48 = icmp eq i32 %47, %1
  br i1 %48, label %49, label %61

49:                                               ; preds = %61, %44
  %50 = phi i64 [ %45, %44 ], [ %62, %61 ]
  %51 = getelementptr inbounds [38 x %"struct.ui::(anonymous namespace)::CursorData"], [38 x %"struct.ui::(anonymous namespace)::CursorData"]* @_ZN2ui12_GLOBAL__N_114kNormalCursorsE, i64 0, i64 %50, i32 1
  %52 = load i32, i32* %51, align 4
  store i32 %52, i32* %3, align 4
  %53 = fcmp oeq float %2, 1.000000e+00
  %54 = or i1 %53, %43
  %55 = getelementptr inbounds [38 x %"struct.ui::(anonymous namespace)::CursorData"], [38 x %"struct.ui::(anonymous namespace)::CursorData"]* @_ZN2ui12_GLOBAL__N_114kNormalCursorsE, i64 0, i64 %50, i32 2, i32 0
  %56 = getelementptr inbounds [38 x %"struct.ui::(anonymous namespace)::CursorData"], [38 x %"struct.ui::(anonymous namespace)::CursorData"]* @_ZN2ui12_GLOBAL__N_114kNormalCursorsE, i64 0, i64 %50, i32 2, i32 1
  %57 = getelementptr inbounds [38 x %"struct.ui::(anonymous namespace)::CursorData"], [38 x %"struct.ui::(anonymous namespace)::CursorData"]* @_ZN2ui12_GLOBAL__N_114kNormalCursorsE, i64 0, i64 %50, i32 3, i32 0
  %58 = getelementptr inbounds [38 x %"struct.ui::(anonymous namespace)::CursorData"], [38 x %"struct.ui::(anonymous namespace)::CursorData"]* @_ZN2ui12_GLOBAL__N_114kNormalCursorsE, i64 0, i64 %50, i32 3, i32 1
  %59 = select i1 %54, i32* %56, i32* %58
  %60 = select i1 %54, i32* %55, i32* %57
  br label %66

61:                                               ; preds = %44
  %62 = or i64 %45, 1
  %63 = getelementptr inbounds [38 x %"struct.ui::(anonymous namespace)::CursorData"], [38 x %"struct.ui::(anonymous namespace)::CursorData"]* @_ZN2ui12_GLOBAL__N_114kNormalCursorsE, i64 0, i64 %62, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, %1
  br i1 %65, label %49, label %78

66:                                               ; preds = %29, %49
  %67 = phi i32* [ %59, %49 ], [ %38, %29 ]
  %68 = phi i32* [ %60, %49 ], [ %39, %29 ]
  %69 = load i32, i32* %68, align 4
  %70 = load i32, i32* %67, align 4
  %71 = bitcast %"class.gfx::Point"* %4 to i64*
  %72 = zext i32 %70 to i64
  %73 = shl nuw i64 %72, 32
  %74 = zext i32 %69 to i64
  %75 = or i64 %73, %74
  store i64 %75, i64* %71, align 4
  br label %76

76:                                               ; preds = %78, %66
  %77 = phi i1 [ true, %66 ], [ false, %78 ]
  ret i1 %77

78:                                               ; preds = %61
  %79 = add nuw nsw i64 %45, 2
  %80 = icmp eq i64 %79, 38
  br i1 %80, label %76, label %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui16GetDefaultBitmapERKNS_6CursorE(%class.SkBitmap* noalias sret, %"class.ui::Cursor"* nocapture readonly dereferenceable(88)) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.gfx::Point", align 4
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #3
  store i32 -1431655766, i32* %3, align 4
  %6 = bitcast %"class.gfx::Point"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #3
  %7 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %4, i64 0, i32 1
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %1, i64 0, i32 2
  %12 = load float, float* %11, align 8
  %13 = call zeroext i1 @_ZN2ui16GetCursorDataForENS_10CursorSizeENS_5mojom10CursorTypeEfPiPN3gfx5PointE(i32 0, i32 %10, float %12, i32* nonnull %3, %"class.gfx::Point"* nonnull %4)
  br i1 %13, label %15, label %14

14:                                               ; preds = %2
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %0) #3
  br label %22

15:                                               ; preds = %2
  %16 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #3
  %17 = load i32, i32* %3, align 4
  %18 = tail call %"class.gfx::ImageSkia"* @_ZN2ui14ResourceBundle17GetImageSkiaNamedEi(%"class.ui::ResourceBundle"* %16, i32 %17) #3
  %19 = load float, float* %11, align 8
  %20 = tail call dereferenceable(192) %"class.gfx::ImageSkiaRep"* @_ZNK3gfx9ImageSkia17GetRepresentationEf(%"class.gfx::ImageSkia"* %18, float %19) #3
  %21 = tail call dereferenceable(56) %class.SkBitmap* @_ZNK3gfx12ImageSkiaRep9GetBitmapEv(%"class.gfx::ImageSkiaRep"* %20) #3
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %0, %class.SkBitmap* dereferenceable(56) %21) #3
  br label %22

22:                                               ; preds = %15, %14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #3
  ret void
}

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() local_unnamed_addr #2

declare %"class.gfx::ImageSkia"* @_ZN2ui14ResourceBundle17GetImageSkiaNamedEi(%"class.ui::ResourceBundle"*, i32) local_unnamed_addr #2

declare dereferenceable(192) %"class.gfx::ImageSkiaRep"* @_ZNK3gfx9ImageSkia17GetRepresentationEf(%"class.gfx::ImageSkia"*, float) local_unnamed_addr #2

declare dereferenceable(56) %class.SkBitmap* @_ZNK3gfx12ImageSkiaRep9GetBitmapEv(%"class.gfx::ImageSkiaRep"*) local_unnamed_addr #2

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui17GetDefaultHotspotERKNS_6CursorE(%"class.ui::Cursor"* nocapture readonly dereferenceable(88)) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.gfx::Point"*
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #3
  store i32 -1431655766, i32* %2, align 4
  %6 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #3
  %7 = bitcast i64* %3 to i32*
  %8 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %4, i64 0, i32 1
  store i32 0, i32* %7, align 8
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %0, i64 0, i32 2
  %12 = load float, float* %11, align 8
  %13 = call zeroext i1 @_ZN2ui16GetCursorDataForENS_10CursorSizeENS_5mojom10CursorTypeEfPiPN3gfx5PointE(i32 0, i32 %10, float %12, i32* nonnull %2, %"class.gfx::Point"* nonnull %4)
  %14 = load i64, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #3
  %15 = select i1 %13, i64 %14, i64 0
  ret i64 %15
}

declare i32 @_ZNK2ui14ResourceBundle17GetMaxScaleFactorEv(%"class.ui::ResourceBundle"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
