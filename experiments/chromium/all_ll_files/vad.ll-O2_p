; ModuleID = '../../third_party/webrtc/common_audio/vad/vad.cc'
source_filename = "../../third_party/webrtc/common_audio/vad/vad.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::Vad" = type { i32 (...)** }
%"class.webrtc::(anonymous namespace)::VadImpl" = type <{ %"class.webrtc::Vad", %struct.WebRtcVadInst*, i32, [4 x i8] }>
%struct.WebRtcVadInst = type opaque

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t = comdat any

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_EEEvPKciS8_DpRKT_E1t = comdat any

@_ZTVN6webrtc12_GLOBAL__N_17VadImplE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::(anonymous namespace)::VadImpl"*)* @_ZN6webrtc12_GLOBAL__N_17VadImplD2Ev to i8*), i8* bitcast (void (%"class.webrtc::(anonymous namespace)::VadImpl"*)* @_ZN6webrtc12_GLOBAL__N_17VadImplD0Ev to i8*), i8* bitcast (i32 (%"class.webrtc::(anonymous namespace)::VadImpl"*, i16*, i64, i32)* @_ZN6webrtc12_GLOBAL__N_17VadImpl13VoiceActivityEPKsmi to i8*), i8* bitcast (void (%"class.webrtc::(anonymous namespace)::VadImpl"*)* @_ZN6webrtc12_GLOBAL__N_17VadImpl5ResetEv to i8*)] }, align 8
@.str = private unnamed_addr constant [49 x i8] c"../../third_party/webrtc/common_audio/vad/vad.cc\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"handle_\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"WebRtcVad_Init(handle_) == 0\00", align 1
@.str.3 = private unnamed_addr constant [50 x i8] c"WebRtcVad_set_mode(handle_, aggressiveness_) == 0\00", align 1
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t = linkonce_odr hidden constant [1 x i8] zeroinitializer, comdat, align 1
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_EEEvPKciS8_DpRKT_E1t = linkonce_odr hidden constant [4 x i8] c"\0D\01\01\00", comdat, align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::Vad"* @_ZN6webrtc9CreateVadENS_3Vad14AggressivenessE(i32) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 24) #5
  %3 = bitcast i8* %2 to %"class.webrtc::(anonymous namespace)::VadImpl"*
  %4 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc12_GLOBAL__N_17VadImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = bitcast i8* %5 to %struct.WebRtcVadInst**
  store %struct.WebRtcVadInst* null, %struct.WebRtcVadInst** %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 16
  %8 = bitcast i8* %7 to i32*
  store i32 %0, i32* %8, align 8
  tail call void @_ZN6webrtc12_GLOBAL__N_17VadImpl5ResetEv(%"class.webrtc::(anonymous namespace)::VadImpl"* nonnull %3) #6
  %9 = bitcast i8* %2 to %"class.webrtc::Vad"*
  ret %"class.webrtc::Vad"* %9
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6webrtc12_GLOBAL__N_17VadImpl5ResetEv(%"class.webrtc::(anonymous namespace)::VadImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::VadImpl", %"class.webrtc::(anonymous namespace)::VadImpl"* %0, i64 0, i32 1
  %3 = load %struct.WebRtcVadInst*, %struct.WebRtcVadInst** %2, align 8
  %4 = icmp eq %struct.WebRtcVadInst* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @WebRtcVad_Free(%struct.WebRtcVadInst* nonnull %3) #6
  br label %6

6:                                                ; preds = %1, %5
  %7 = tail call %struct.WebRtcVadInst* @WebRtcVad_Create() #6
  store %struct.WebRtcVadInst* %7, %struct.WebRtcVadInst** %2, align 8
  %8 = icmp eq %struct.WebRtcVadInst* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 50, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t, i64 0, i64 0)) #7
  unreachable

10:                                               ; preds = %6
  %11 = tail call i32 @WebRtcVad_Init(%struct.WebRtcVadInst* nonnull %7) #6
  %12 = icmp eq i32 %11, 0
  %13 = load %struct.WebRtcVadInst*, %struct.WebRtcVadInst** %2, align 8
  br i1 %12, label %16, label %14

14:                                               ; preds = %10
  %15 = tail call i32 @WebRtcVad_Init(%struct.WebRtcVadInst* %13) #6
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 51, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_EEEvPKciS8_DpRKT_E1t, i64 0, i64 0), i32 %15, i32 0) #7
  unreachable

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::VadImpl", %"class.webrtc::(anonymous namespace)::VadImpl"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = tail call i32 @WebRtcVad_set_mode(%struct.WebRtcVadInst* %13, i32 %18) #6
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = load %struct.WebRtcVadInst*, %struct.WebRtcVadInst** %2, align 8
  %23 = load i32, i32* %17, align 8
  %24 = tail call i32 @WebRtcVad_set_mode(%struct.WebRtcVadInst* %22, i32 %23) #6
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 52, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_EEEvPKciS8_DpRKT_E1t, i64 0, i64 0), i32 %24, i32 0) #7
  unreachable

25:                                               ; preds = %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6webrtc12_GLOBAL__N_17VadImplD2Ev(%"class.webrtc::(anonymous namespace)::VadImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::VadImpl", %"class.webrtc::(anonymous namespace)::VadImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc12_GLOBAL__N_17VadImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::VadImpl", %"class.webrtc::(anonymous namespace)::VadImpl"* %0, i64 0, i32 1
  %4 = load %struct.WebRtcVadInst*, %struct.WebRtcVadInst** %3, align 8
  tail call void @WebRtcVad_Free(%struct.WebRtcVadInst* %4) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6webrtc12_GLOBAL__N_17VadImplD0Ev(%"class.webrtc::(anonymous namespace)::VadImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::VadImpl", %"class.webrtc::(anonymous namespace)::VadImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc12_GLOBAL__N_17VadImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::VadImpl", %"class.webrtc::(anonymous namespace)::VadImpl"* %0, i64 0, i32 1
  %4 = load %struct.WebRtcVadInst*, %struct.WebRtcVadInst** %3, align 8
  tail call void @WebRtcVad_Free(%struct.WebRtcVadInst* %4) #6
  %5 = bitcast %"class.webrtc::(anonymous namespace)::VadImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6webrtc12_GLOBAL__N_17VadImpl13VoiceActivityEPKsmi(%"class.webrtc::(anonymous namespace)::VadImpl"* nocapture readonly, i16*, i64, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::VadImpl", %"class.webrtc::(anonymous namespace)::VadImpl"* %0, i64 0, i32 1
  %6 = load %struct.WebRtcVadInst*, %struct.WebRtcVadInst** %5, align 8
  %7 = tail call i32 @WebRtcVad_Process(%struct.WebRtcVadInst* %6, i32 %3, i16* %1, i64 %2) #6
  %8 = icmp eq i32 %7, 1
  %9 = select i1 %8, i32 1, i32 -1
  %10 = icmp eq i32 %7, 0
  %11 = select i1 %10, i32 0, i32 %9
  ret i32 %11
}

declare void @WebRtcVad_Free(%struct.WebRtcVadInst*) local_unnamed_addr #2

declare %struct.WebRtcVadInst* @WebRtcVad_Create() local_unnamed_addr #2

declare i32 @WebRtcVad_Init(%struct.WebRtcVadInst*) local_unnamed_addr #2

declare i32 @WebRtcVad_set_mode(%struct.WebRtcVadInst*, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8*, i32, i8*, i8*, ...) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare i32 @WebRtcVad_Process(%struct.WebRtcVadInst*, i32, i16*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { builtin nounwind }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
