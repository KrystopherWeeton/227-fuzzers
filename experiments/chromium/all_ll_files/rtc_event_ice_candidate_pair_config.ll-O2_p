; ModuleID = '../../third_party/webrtc/logging/rtc_event_log/events/rtc_event_ice_candidate_pair_config.cc'
source_filename = "../../third_party/webrtc/logging/rtc_event_log/events/rtc_event_ice_candidate_pair_config.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::IceCandidatePairDescription" = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.webrtc::RtcEventIceCandidatePairConfig" = type <{ %"class.webrtc::RtcEvent", i32, i32, %"class.webrtc::IceCandidatePairDescription", [4 x i8] }>
%"class.webrtc::RtcEvent" = type { i32 (...)**, i64 }

$_ZNK6webrtc30RtcEventIceCandidatePairConfig7GetTypeEv = comdat any

$_ZNK6webrtc30RtcEventIceCandidatePairConfig13IsConfigEventEv = comdat any

@_ZTVN6webrtc30RtcEventIceCandidatePairConfigE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::RtcEventIceCandidatePairConfig"*)* @_ZN6webrtc30RtcEventIceCandidatePairConfigD2Ev to i8*), i8* bitcast (void (%"class.webrtc::RtcEventIceCandidatePairConfig"*)* @_ZN6webrtc30RtcEventIceCandidatePairConfigD0Ev to i8*), i8* bitcast (i32 (%"class.webrtc::RtcEventIceCandidatePairConfig"*)* @_ZNK6webrtc30RtcEventIceCandidatePairConfig7GetTypeEv to i8*), i8* bitcast (i1 (%"class.webrtc::RtcEventIceCandidatePairConfig"*)* @_ZNK6webrtc30RtcEventIceCandidatePairConfig13IsConfigEventEv to i8*)] }, align 8

@_ZN6webrtc27IceCandidatePairDescriptionC1Ev = hidden unnamed_addr alias void (%"class.webrtc::IceCandidatePairDescription"*), void (%"class.webrtc::IceCandidatePairDescription"*)* @_ZN6webrtc27IceCandidatePairDescriptionC2Ev
@_ZN6webrtc27IceCandidatePairDescriptionC1ERKS0_ = hidden unnamed_addr alias void (%"class.webrtc::IceCandidatePairDescription"*, %"class.webrtc::IceCandidatePairDescription"*), void (%"class.webrtc::IceCandidatePairDescription"*, %"class.webrtc::IceCandidatePairDescription"*)* @_ZN6webrtc27IceCandidatePairDescriptionC2ERKS0_
@_ZN6webrtc27IceCandidatePairDescriptionD1Ev = hidden unnamed_addr alias void (%"class.webrtc::IceCandidatePairDescription"*), void (%"class.webrtc::IceCandidatePairDescription"*)* @_ZN6webrtc27IceCandidatePairDescriptionD2Ev
@_ZN6webrtc30RtcEventIceCandidatePairConfigC1ENS_26IceCandidatePairConfigTypeEjRKNS_27IceCandidatePairDescriptionE = hidden unnamed_addr alias void (%"class.webrtc::RtcEventIceCandidatePairConfig"*, i32, i32, %"class.webrtc::IceCandidatePairDescription"*), void (%"class.webrtc::RtcEventIceCandidatePairConfig"*, i32, i32, %"class.webrtc::IceCandidatePairDescription"*)* @_ZN6webrtc30RtcEventIceCandidatePairConfigC2ENS_26IceCandidatePairConfigTypeEjRKNS_27IceCandidatePairDescriptionE
@_ZN6webrtc30RtcEventIceCandidatePairConfigC1ERKS0_ = hidden unnamed_addr alias void (%"class.webrtc::RtcEventIceCandidatePairConfig"*, %"class.webrtc::RtcEventIceCandidatePairConfig"*), void (%"class.webrtc::RtcEventIceCandidatePairConfig"*, %"class.webrtc::RtcEventIceCandidatePairConfig"*)* @_ZN6webrtc30RtcEventIceCandidatePairConfigC2ERKS0_
@_ZN6webrtc30RtcEventIceCandidatePairConfigD1Ev = hidden unnamed_addr alias void (%"class.webrtc::RtcEventIceCandidatePairConfig"*), void (%"class.webrtc::RtcEventIceCandidatePairConfig"*)* @_ZN6webrtc30RtcEventIceCandidatePairConfigD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc27IceCandidatePairDescriptionC2Ev(%"class.webrtc::IceCandidatePairDescription"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.webrtc::IceCandidatePairDescription"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 28, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc27IceCandidatePairDescriptionC2ERKS0_(%"class.webrtc::IceCandidatePairDescription"* nocapture, %"class.webrtc::IceCandidatePairDescription"* nocapture readonly dereferenceable(28)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::IceCandidatePairDescription", %"class.webrtc::IceCandidatePairDescription"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.webrtc::IceCandidatePairDescription", %"class.webrtc::IceCandidatePairDescription"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 4
  %6 = getelementptr inbounds %"class.webrtc::IceCandidatePairDescription", %"class.webrtc::IceCandidatePairDescription"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.webrtc::IceCandidatePairDescription", %"class.webrtc::IceCandidatePairDescription"* %0, i64 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %"class.webrtc::IceCandidatePairDescription", %"class.webrtc::IceCandidatePairDescription"* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.webrtc::IceCandidatePairDescription", %"class.webrtc::IceCandidatePairDescription"* %0, i64 0, i32 2
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %"class.webrtc::IceCandidatePairDescription", %"class.webrtc::IceCandidatePairDescription"* %1, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.webrtc::IceCandidatePairDescription", %"class.webrtc::IceCandidatePairDescription"* %0, i64 0, i32 3
  store i32 %13, i32* %14, align 4
  %15 = getelementptr inbounds %"class.webrtc::IceCandidatePairDescription", %"class.webrtc::IceCandidatePairDescription"* %1, i64 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.webrtc::IceCandidatePairDescription", %"class.webrtc::IceCandidatePairDescription"* %0, i64 0, i32 4
  store i32 %16, i32* %17, align 4
  %18 = getelementptr inbounds %"class.webrtc::IceCandidatePairDescription", %"class.webrtc::IceCandidatePairDescription"* %1, i64 0, i32 5
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.webrtc::IceCandidatePairDescription", %"class.webrtc::IceCandidatePairDescription"* %0, i64 0, i32 5
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %"class.webrtc::IceCandidatePairDescription", %"class.webrtc::IceCandidatePairDescription"* %1, i64 0, i32 6
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.webrtc::IceCandidatePairDescription", %"class.webrtc::IceCandidatePairDescription"* %0, i64 0, i32 6
  store i32 %22, i32* %23, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc27IceCandidatePairDescriptionD2Ev(%"class.webrtc::IceCandidatePairDescription"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc30RtcEventIceCandidatePairConfigC2ENS_26IceCandidatePairConfigTypeEjRKNS_27IceCandidatePairDescriptionE(%"class.webrtc::RtcEventIceCandidatePairConfig"*, i32, i32, %"class.webrtc::IceCandidatePairDescription"* nocapture readonly dereferenceable(28)) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc8RtcEventC2Ev(%"class.webrtc::RtcEvent"* %5) #9
  %6 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc30RtcEventIceCandidatePairConfigE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 1
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 2
  store i32 %2, i32* %8, align 4
  %9 = getelementptr inbounds %"class.webrtc::IceCandidatePairDescription", %"class.webrtc::IceCandidatePairDescription"* %3, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 3, i32 0
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %"class.webrtc::IceCandidatePairDescription", %"class.webrtc::IceCandidatePairDescription"* %3, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 3, i32 1
  store i32 %13, i32* %14, align 4
  %15 = getelementptr inbounds %"class.webrtc::IceCandidatePairDescription", %"class.webrtc::IceCandidatePairDescription"* %3, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 3, i32 2
  store i32 %16, i32* %17, align 4
  %18 = getelementptr inbounds %"class.webrtc::IceCandidatePairDescription", %"class.webrtc::IceCandidatePairDescription"* %3, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 3, i32 3
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %"class.webrtc::IceCandidatePairDescription", %"class.webrtc::IceCandidatePairDescription"* %3, i64 0, i32 4
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 3, i32 4
  store i32 %22, i32* %23, align 4
  %24 = getelementptr inbounds %"class.webrtc::IceCandidatePairDescription", %"class.webrtc::IceCandidatePairDescription"* %3, i64 0, i32 5
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 3, i32 5
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds %"class.webrtc::IceCandidatePairDescription", %"class.webrtc::IceCandidatePairDescription"* %3, i64 0, i32 6
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 3, i32 6
  store i32 %28, i32* %29, align 4
  ret void
}

declare void @_ZN6webrtc8RtcEventC2Ev(%"class.webrtc::RtcEvent"*) unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc30RtcEventIceCandidatePairConfigC2ERKS0_(%"class.webrtc::RtcEventIceCandidatePairConfig"* nocapture, %"class.webrtc::RtcEventIceCandidatePairConfig"* nocapture readonly dereferenceable(56)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %1, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 0, i32 1
  store i64 %4, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc30RtcEventIceCandidatePairConfigE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %10, align 4
  %13 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %1, i64 0, i32 3, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 3, i32 0
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %1, i64 0, i32 3, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 3, i32 1
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %1, i64 0, i32 3, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 3, i32 2
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %1, i64 0, i32 3, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 3, i32 3
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %1, i64 0, i32 3, i32 4
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 3, i32 4
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %1, i64 0, i32 3, i32 5
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 3, i32 5
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %1, i64 0, i32 3, i32 6
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 3, i32 6
  store i32 %32, i32* %33, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc30RtcEventIceCandidatePairConfigD2Ev(%"class.webrtc::RtcEventIceCandidatePairConfig"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc30RtcEventIceCandidatePairConfigD0Ev(%"class.webrtc::RtcEventIceCandidatePairConfig"*) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.webrtc::RtcEventIceCandidatePairConfig"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull %"class.webrtc::RtcEventIceCandidatePairConfig"* @_ZNK6webrtc30RtcEventIceCandidatePairConfig4CopyEv(%"class.webrtc::RtcEventIceCandidatePairConfig"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = tail call i8* @_Znwm(i64 56) #10
  %3 = bitcast i8* %2 to %"class.webrtc::RtcEventIceCandidatePairConfig"*
  %4 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = bitcast i8* %2 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to i64*
  store i64 %5, i64* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc30RtcEventIceCandidatePairConfigE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds i8, i8* %2, i64 16
  %10 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 1
  %11 = bitcast i32* %10 to <4 x i32>*
  %12 = load <4 x i32>, <4 x i32>* %11, align 8
  %13 = bitcast i8* %9 to <4 x i32>*
  store <4 x i32> %12, <4 x i32>* %13, align 8
  %14 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 3, i32 2
  %15 = getelementptr inbounds i8, i8* %2, i64 32
  %16 = bitcast i32* %14 to <4 x i32>*
  %17 = load <4 x i32>, <4 x i32>* %16, align 4
  %18 = bitcast i8* %15 to <4 x i32>*
  store <4 x i32> %17, <4 x i32>* %18, align 4
  %19 = getelementptr inbounds %"class.webrtc::RtcEventIceCandidatePairConfig", %"class.webrtc::RtcEventIceCandidatePairConfig"* %0, i64 0, i32 3, i32 6
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds i8, i8* %2, i64 48
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 4
  ret %"class.webrtc::RtcEventIceCandidatePairConfig"* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6webrtc30RtcEventIceCandidatePairConfig7GetTypeEv(%"class.webrtc::RtcEventIceCandidatePairConfig"*) unnamed_addr #3 comdat align 2 {
  ret i32 11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6webrtc30RtcEventIceCandidatePairConfig13IsConfigEventEv(%"class.webrtc::RtcEventIceCandidatePairConfig"*) unnamed_addr #3 comdat align 2 {
  ret i1 false
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
