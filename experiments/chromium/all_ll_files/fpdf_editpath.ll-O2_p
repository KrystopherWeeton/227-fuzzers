; ModuleID = '../../third_party/pdfium/fpdfsdk/fpdf_editpath.cpp'
source_filename = "../../third_party/pdfium/fpdfsdk/fpdf_editpath.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.fpdf_pageobject_t__ = type opaque
%class.CFX_PTemplate = type { float, float }
%class.CPDF_PathObject = type { %class.CPDF_PageObject, i8, i8, %class.CPDF_Path, %class.CFX_Matrix }
%class.CPDF_PageObject = type { %class.CPDF_GraphicStates, %class.CFX_FloatRect, %class.CPDF_ContentMarks, i8, i32 }
%class.CPDF_GraphicStates = type { i32 (...)**, %class.CPDF_ClipPath, %class.CFX_GraphState, %class.CPDF_ColorState, %class.CPDF_TextState, %class.CPDF_GeneralState }
%class.CPDF_ClipPath = type { %"class.fxcrt::SharedCopyOnWrite" }
%"class.fxcrt::SharedCopyOnWrite" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.0" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.CPDF_ClipPath::PathData"* }
%"class.CPDF_ClipPath::PathData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector", %"class.std::__1::vector.6" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.3" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.std::__1::unique_ptr.8"*, %"class.std::__1::unique_ptr.8"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::unique_ptr.8" = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::unique_ptr.8"* }
%class.CFX_GraphState = type { %"class.fxcrt::SharedCopyOnWrite.15" }
%"class.fxcrt::SharedCopyOnWrite.15" = type { %"class.fxcrt::RetainPtr.16" }
%"class.fxcrt::RetainPtr.16" = type { %"class.std::__1::unique_ptr.17" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %class.CFX_RetainableGraphStateData* }
%class.CFX_RetainableGraphStateData = type { %"class.fxcrt::Retainable", %class.CFX_GraphStateData }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.20" }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { float*, float*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { float* }
%class.CPDF_ColorState = type { %"class.fxcrt::SharedCopyOnWrite.29" }
%"class.fxcrt::SharedCopyOnWrite.29" = type { %"class.fxcrt::RetainPtr.30" }
%"class.fxcrt::RetainPtr.30" = type { %"class.std::__1::unique_ptr.31" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.CPDF_ColorState::ColorData"* }
%"class.CPDF_ColorState::ColorData" = type { %"class.fxcrt::Retainable", i32, i32, %class.CPDF_Color, %class.CPDF_Color }
%class.CPDF_Color = type { %"class.std::__1::vector.20", %"class.std::__1::unique_ptr.34", %"class.fxcrt::RetainPtr.38" }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.PatternValue* }
%class.PatternValue = type opaque
%"class.fxcrt::RetainPtr.38" = type { %"class.std::__1::unique_ptr.39" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type opaque
%class.CPDF_TextState = type { %"class.fxcrt::SharedCopyOnWrite.46" }
%"class.fxcrt::SharedCopyOnWrite.46" = type { %"class.fxcrt::RetainPtr.47" }
%"class.fxcrt::RetainPtr.47" = type { %"class.std::__1::unique_ptr.48" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.CPDF_TextState::TextData"* }
%"class.CPDF_TextState::TextData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.51", %"class.fxcrt::UnownedPtr", float, float, float, i32, [4 x float], [4 x float] }
%"class.fxcrt::RetainPtr.51" = type { %"class.std::__1::unique_ptr.52" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %class.CPDF_Font* }
%class.CPDF_Font = type opaque
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%class.CPDF_GeneralState = type { %"class.fxcrt::SharedCopyOnWrite.59" }
%"class.fxcrt::SharedCopyOnWrite.59" = type { %"class.fxcrt::RetainPtr.60" }
%"class.fxcrt::RetainPtr.60" = type { %"class.std::__1::unique_ptr.61" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.CPDF_GeneralState::StateData"* }
%"class.CPDF_GeneralState::StateData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::ByteString", i32, %"class.fxcrt::RetainPtr.70", %class.CFX_Matrix, float, float, %"class.fxcrt::RetainPtr.76", %"class.fxcrt::RetainPtr.82", %class.CFX_Matrix, i32, i8, i8, i8, i8, i8, i32, %"class.fxcrt::RetainPtr.76", %"class.fxcrt::RetainPtr.76", %"class.fxcrt::RetainPtr.76", float, float }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.64" }
%"class.fxcrt::RetainPtr.64" = type { %"class.std::__1::unique_ptr.65" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.fxcrt::RetainPtr.70" = type { %"class.std::__1::unique_ptr.71" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %class.CPDF_Object* }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::RetainPtr.82" = type { %"class.std::__1::unique_ptr.83" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %class.CPDF_TransferFunc* }
%class.CPDF_TransferFunc = type opaque
%"class.fxcrt::RetainPtr.76" = type { %"class.std::__1::unique_ptr.77" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %class.CPDF_Object* }
%class.CFX_FloatRect = type { float, float, float, float }
%class.CPDF_ContentMarks = type { %"class.fxcrt::RetainPtr.90" }
%"class.fxcrt::RetainPtr.90" = type { %"class.std::__1::unique_ptr.91" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.CPDF_ContentMarks::MarkData"* }
%"class.CPDF_ContentMarks::MarkData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.94" }
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { %"class.fxcrt::RetainPtr.96"*, %"class.fxcrt::RetainPtr.96"*, %"class.std::__1::__compressed_pair.97" }
%"class.fxcrt::RetainPtr.96" = type opaque
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.fxcrt::RetainPtr.96"* }
%class.CPDF_Path = type { %"class.fxcrt::SharedCopyOnWrite.104" }
%"class.fxcrt::SharedCopyOnWrite.104" = type { %"class.fxcrt::RetainPtr.105" }
%"class.fxcrt::RetainPtr.105" = type { %"class.std::__1::unique_ptr.106" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %class.CFX_RetainablePathData* }
%class.CFX_RetainablePathData = type { %"class.fxcrt::Retainable", %class.CFX_PathData }
%class.CFX_PathData = type { %"class.std::__1::vector.109" }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.111" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %class.FX_PATHPOINT* }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%struct.fpdf_pathsegment_t = type opaque
%struct._FS_MATRIX_ = type { float, float, float, float, float, float }

; Function Attrs: nounwind ssp uwtable
define hidden %struct.fpdf_pageobject_t__* @FPDFPageObj_CreateNewPath(float, float) local_unnamed_addr #0 {
  %3 = alloca %class.CFX_PTemplate, align 4
  %4 = tail call i8* @_Znwm(i64 120) #7
  %5 = bitcast i8* %4 to %class.CPDF_PathObject*
  tail call void @_ZN15CPDF_PathObjectC1Ev(%class.CPDF_PathObject* nonnull %5) #8
  %6 = getelementptr inbounds i8, i8* %4, i64 88
  %7 = bitcast i8* %6 to %class.CPDF_Path*
  %8 = bitcast %class.CFX_PTemplate* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 0
  store float %0, float* %9, align 4
  %10 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 1
  store float %1, float* %10, align 4
  call void @_ZN9CPDF_Path11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CPDF_Path* %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %3, i8 zeroext 2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  %11 = bitcast i8* %4 to %class.CPDF_GraphicStates*
  call void @_ZN18CPDF_GraphicStates13DefaultStatesEv(%class.CPDF_GraphicStates* nonnull %11) #8
  %12 = bitcast i8* %4 to %struct.fpdf_pageobject_t__*
  ret %struct.fpdf_pageobject_t__* %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN9CPDF_Path11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CPDF_Path*, %class.CFX_PTemplate* dereferenceable(8), i8 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN18CPDF_GraphicStates13DefaultStatesEv(%class.CPDF_GraphicStates*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.fpdf_pageobject_t__* @FPDFPageObj_CreateNewRect(float, float, float, float) local_unnamed_addr #0 {
  %5 = tail call i8* @_Znwm(i64 120) #7
  %6 = bitcast i8* %5 to %class.CPDF_PathObject*
  tail call void @_ZN15CPDF_PathObjectC1Ev(%class.CPDF_PathObject* nonnull %6) #8
  %7 = getelementptr inbounds i8, i8* %5, i64 88
  %8 = bitcast i8* %7 to %class.CPDF_Path*
  %9 = fadd float %0, %2
  %10 = fadd float %1, %3
  tail call void @_ZN9CPDF_Path10AppendRectEffff(%class.CPDF_Path* %8, float %0, float %1, float %9, float %10) #8
  %11 = bitcast i8* %5 to %class.CPDF_GraphicStates*
  tail call void @_ZN18CPDF_GraphicStates13DefaultStatesEv(%class.CPDF_GraphicStates* nonnull %11) #8
  %12 = bitcast i8* %5 to %struct.fpdf_pageobject_t__*
  ret %struct.fpdf_pageobject_t__* %12
}

declare void @_ZN9CPDF_Path10AppendRectEffff(%class.CPDF_Path*, float, float, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDFPath_CountSegments(%struct.fpdf_pageobject_t__*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.fpdf_pageobject_t__* %0, null
  br i1 %2, label %25, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.fpdf_pageobject_t__* %0 to %class.CPDF_PageObject*
  %5 = bitcast %struct.fpdf_pageobject_t__* %0 to %class.CPDF_PathObject* (%class.CPDF_PageObject*)***
  %6 = load %class.CPDF_PathObject* (%class.CPDF_PageObject*)**, %class.CPDF_PathObject* (%class.CPDF_PageObject*)*** %5, align 8
  %7 = getelementptr inbounds %class.CPDF_PathObject* (%class.CPDF_PageObject*)*, %class.CPDF_PathObject* (%class.CPDF_PageObject*)** %6, i64 11
  %8 = load %class.CPDF_PathObject* (%class.CPDF_PageObject*)*, %class.CPDF_PathObject* (%class.CPDF_PageObject*)** %7, align 8
  %9 = tail call %class.CPDF_PathObject* %8(%class.CPDF_PageObject* nonnull %4) #8
  %10 = icmp eq %class.CPDF_PathObject* %9, null
  br i1 %10, label %25, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %9, i64 0, i32 3
  %13 = tail call dereferenceable(24) %"class.std::__1::vector.109"* @_ZNK9CPDF_Path9GetPointsEv(%class.CPDF_Path* %12) #8
  %14 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %13, i64 0, i32 0, i32 1
  %15 = bitcast %class.FX_PATHPOINT** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.109"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = sdiv exact i64 %19, 12
  %21 = icmp ult i64 %20, 2147483648
  br i1 %21, label %23, label %22, !prof !2

22:                                               ; preds = %11
  tail call void @llvm.trap() #8
  unreachable

23:                                               ; preds = %11
  %24 = trunc i64 %20 to i32
  br label %25

25:                                               ; preds = %1, %3, %23
  %26 = phi i32 [ %24, %23 ], [ -1, %3 ], [ -1, %1 ]
  ret i32 %26
}

declare dereferenceable(24) %"class.std::__1::vector.109"* @_ZNK9CPDF_Path9GetPointsEv(%class.CPDF_Path*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.fpdf_pathsegment_t* @FPDFPath_GetPathSegment(%struct.fpdf_pageobject_t__*, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.fpdf_pageobject_t__* %0, null
  br i1 %3, label %37, label %4

4:                                                ; preds = %2
  %5 = bitcast %struct.fpdf_pageobject_t__* %0 to %class.CPDF_PageObject*
  %6 = bitcast %struct.fpdf_pageobject_t__* %0 to %class.CPDF_PathObject* (%class.CPDF_PageObject*)***
  %7 = load %class.CPDF_PathObject* (%class.CPDF_PageObject*)**, %class.CPDF_PathObject* (%class.CPDF_PageObject*)*** %6, align 8
  %8 = getelementptr inbounds %class.CPDF_PathObject* (%class.CPDF_PageObject*)*, %class.CPDF_PathObject* (%class.CPDF_PageObject*)** %7, i64 11
  %9 = load %class.CPDF_PathObject* (%class.CPDF_PageObject*)*, %class.CPDF_PathObject* (%class.CPDF_PageObject*)** %8, align 8
  %10 = tail call %class.CPDF_PathObject* %9(%class.CPDF_PageObject* nonnull %5) #8
  %11 = icmp eq %class.CPDF_PathObject* %10, null
  br i1 %11, label %37, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %10, i64 0, i32 3
  %14 = tail call dereferenceable(24) %"class.std::__1::vector.109"* @_ZNK9CPDF_Path9GetPointsEv(%class.CPDF_Path* %13) #8
  %15 = bitcast %"class.std::__1::vector.109"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %14, i64 0, i32 0, i32 1
  %18 = bitcast %class.FX_PATHPOINT** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %16
  %21 = sdiv exact i64 %20, 12
  %22 = icmp sgt i32 %1, -1
  br i1 %22, label %23, label %37

23:                                               ; preds = %12
  %24 = icmp ult i64 %21, 2147483648
  br i1 %24, label %26, label %25, !prof !2

25:                                               ; preds = %23
  tail call void @llvm.trap() #8
  unreachable

26:                                               ; preds = %23
  %27 = trunc i64 %21 to i32
  %28 = icmp sgt i32 %27, %1
  br i1 %28, label %29, label %37

29:                                               ; preds = %26
  %30 = sext i32 %1 to i64
  %31 = icmp ugt i64 %21, %30
  br i1 %31, label %33, label %32, !prof !2

32:                                               ; preds = %29
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !3
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !4
  unreachable

33:                                               ; preds = %29
  %34 = inttoptr i64 %16 to %class.FX_PATHPOINT*
  %35 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %34, i64 %30
  %36 = bitcast %class.FX_PATHPOINT* %35 to %struct.fpdf_pathsegment_t*
  br label %37

37:                                               ; preds = %12, %2, %33, %26, %4
  %38 = phi %struct.fpdf_pathsegment_t* [ null, %4 ], [ %36, %33 ], [ null, %26 ], [ null, %2 ], [ null, %12 ]
  ret %struct.fpdf_pathsegment_t* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDFPath_MoveTo(%struct.fpdf_pageobject_t__*, float, float) local_unnamed_addr #0 {
  %4 = alloca %class.CFX_PTemplate, align 4
  %5 = icmp eq %struct.fpdf_pageobject_t__* %0, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %3
  %7 = bitcast %struct.fpdf_pageobject_t__* %0 to %class.CPDF_PageObject*
  %8 = bitcast %struct.fpdf_pageobject_t__* %0 to %class.CPDF_PathObject* (%class.CPDF_PageObject*)***
  %9 = load %class.CPDF_PathObject* (%class.CPDF_PageObject*)**, %class.CPDF_PathObject* (%class.CPDF_PageObject*)*** %8, align 8
  %10 = getelementptr inbounds %class.CPDF_PathObject* (%class.CPDF_PageObject*)*, %class.CPDF_PathObject* (%class.CPDF_PageObject*)** %9, i64 11
  %11 = load %class.CPDF_PathObject* (%class.CPDF_PageObject*)*, %class.CPDF_PathObject* (%class.CPDF_PageObject*)** %10, align 8
  %12 = tail call %class.CPDF_PathObject* %11(%class.CPDF_PageObject* nonnull %7) #8
  %13 = icmp eq %class.CPDF_PathObject* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %12, i64 0, i32 3
  %16 = bitcast %class.CFX_PTemplate* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 0
  store float %1, float* %17, align 4
  %18 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 1
  store float %2, float* %18, align 4
  call void @_ZN9CPDF_Path11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CPDF_Path* %15, %class.CFX_PTemplate* nonnull dereferenceable(8) %4, i8 zeroext 2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  %19 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %12, i64 0, i32 0, i32 3
  store i8 1, i8* %19, align 8
  br label %20

20:                                               ; preds = %3, %6, %14
  %21 = phi i32 [ 1, %14 ], [ 0, %6 ], [ 0, %3 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDFPath_LineTo(%struct.fpdf_pageobject_t__*, float, float) local_unnamed_addr #0 {
  %4 = alloca %class.CFX_PTemplate, align 4
  %5 = icmp eq %struct.fpdf_pageobject_t__* %0, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %3
  %7 = bitcast %struct.fpdf_pageobject_t__* %0 to %class.CPDF_PageObject*
  %8 = bitcast %struct.fpdf_pageobject_t__* %0 to %class.CPDF_PathObject* (%class.CPDF_PageObject*)***
  %9 = load %class.CPDF_PathObject* (%class.CPDF_PageObject*)**, %class.CPDF_PathObject* (%class.CPDF_PageObject*)*** %8, align 8
  %10 = getelementptr inbounds %class.CPDF_PathObject* (%class.CPDF_PageObject*)*, %class.CPDF_PathObject* (%class.CPDF_PageObject*)** %9, i64 11
  %11 = load %class.CPDF_PathObject* (%class.CPDF_PageObject*)*, %class.CPDF_PathObject* (%class.CPDF_PageObject*)** %10, align 8
  %12 = tail call %class.CPDF_PathObject* %11(%class.CPDF_PageObject* nonnull %7) #8
  %13 = icmp eq %class.CPDF_PathObject* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %12, i64 0, i32 3
  %16 = bitcast %class.CFX_PTemplate* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 0
  store float %1, float* %17, align 4
  %18 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 1
  store float %2, float* %18, align 4
  call void @_ZN9CPDF_Path11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CPDF_Path* %15, %class.CFX_PTemplate* nonnull dereferenceable(8) %4, i8 zeroext 0) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  %19 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %12, i64 0, i32 0, i32 3
  store i8 1, i8* %19, align 8
  br label %20

20:                                               ; preds = %3, %6, %14
  %21 = phi i32 [ 1, %14 ], [ 0, %6 ], [ 0, %3 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDFPath_BezierTo(%struct.fpdf_pageobject_t__*, float, float, float, float, float, float) local_unnamed_addr #0 {
  %8 = alloca %class.CFX_PTemplate, align 4
  %9 = alloca %class.CFX_PTemplate, align 4
  %10 = alloca %class.CFX_PTemplate, align 4
  %11 = icmp eq %struct.fpdf_pageobject_t__* %0, null
  br i1 %11, label %32, label %12

12:                                               ; preds = %7
  %13 = bitcast %struct.fpdf_pageobject_t__* %0 to %class.CPDF_PageObject*
  %14 = bitcast %struct.fpdf_pageobject_t__* %0 to %class.CPDF_PathObject* (%class.CPDF_PageObject*)***
  %15 = load %class.CPDF_PathObject* (%class.CPDF_PageObject*)**, %class.CPDF_PathObject* (%class.CPDF_PageObject*)*** %14, align 8
  %16 = getelementptr inbounds %class.CPDF_PathObject* (%class.CPDF_PageObject*)*, %class.CPDF_PathObject* (%class.CPDF_PageObject*)** %15, i64 11
  %17 = load %class.CPDF_PathObject* (%class.CPDF_PageObject*)*, %class.CPDF_PathObject* (%class.CPDF_PageObject*)** %16, align 8
  %18 = tail call %class.CPDF_PathObject* %17(%class.CPDF_PageObject* nonnull %13) #8
  %19 = icmp eq %class.CPDF_PathObject* %18, null
  br i1 %19, label %32, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %18, i64 0, i32 3
  %22 = bitcast %class.CFX_PTemplate* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  %23 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %8, i64 0, i32 0
  store float %1, float* %23, align 4
  %24 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %8, i64 0, i32 1
  store float %2, float* %24, align 4
  call void @_ZN9CPDF_Path11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CPDF_Path* %21, %class.CFX_PTemplate* nonnull dereferenceable(8) %8, i8 zeroext 1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #8
  %25 = bitcast %class.CFX_PTemplate* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #8
  %26 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 0
  store float %3, float* %26, align 4
  %27 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 1
  store float %4, float* %27, align 4
  call void @_ZN9CPDF_Path11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CPDF_Path* %21, %class.CFX_PTemplate* nonnull dereferenceable(8) %9, i8 zeroext 1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #8
  %28 = bitcast %class.CFX_PTemplate* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  %29 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 0
  store float %5, float* %29, align 4
  %30 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 1
  store float %6, float* %30, align 4
  call void @_ZN9CPDF_Path11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CPDF_Path* %21, %class.CFX_PTemplate* nonnull dereferenceable(8) %10, i8 zeroext 1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  %31 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %18, i64 0, i32 0, i32 3
  store i8 1, i8* %31, align 8
  br label %32

32:                                               ; preds = %7, %12, %20
  %33 = phi i32 [ 1, %20 ], [ 0, %12 ], [ 0, %7 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDFPath_Close(%struct.fpdf_pageobject_t__*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.fpdf_pageobject_t__* %0, null
  br i1 %2, label %21, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.fpdf_pageobject_t__* %0 to %class.CPDF_PageObject*
  %5 = bitcast %struct.fpdf_pageobject_t__* %0 to %class.CPDF_PathObject* (%class.CPDF_PageObject*)***
  %6 = load %class.CPDF_PathObject* (%class.CPDF_PageObject*)**, %class.CPDF_PathObject* (%class.CPDF_PageObject*)*** %5, align 8
  %7 = getelementptr inbounds %class.CPDF_PathObject* (%class.CPDF_PageObject*)*, %class.CPDF_PathObject* (%class.CPDF_PageObject*)** %6, i64 11
  %8 = load %class.CPDF_PathObject* (%class.CPDF_PageObject*)*, %class.CPDF_PathObject* (%class.CPDF_PageObject*)** %7, align 8
  %9 = tail call %class.CPDF_PathObject* %8(%class.CPDF_PageObject* nonnull %4) #8
  %10 = icmp eq %class.CPDF_PathObject* %9, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %9, i64 0, i32 3
  %13 = tail call dereferenceable(24) %"class.std::__1::vector.109"* @_ZNK9CPDF_Path9GetPointsEv(%class.CPDF_Path* %12) #8
  %14 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %13, i64 0, i32 0, i32 0
  %15 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %13, i64 0, i32 0, i32 1
  %17 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %16, align 8
  %18 = icmp eq %class.FX_PATHPOINT* %15, %17
  br i1 %18, label %21, label %19

19:                                               ; preds = %11
  tail call void @_ZN9CPDF_Path9ClosePathEv(%class.CPDF_Path* %12) #8
  %20 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %9, i64 0, i32 0, i32 3
  store i8 1, i8* %20, align 8
  br label %21

21:                                               ; preds = %1, %19, %11, %3
  %22 = phi i32 [ 0, %3 ], [ 1, %19 ], [ 0, %11 ], [ 0, %1 ]
  ret i32 %22
}

declare void @_ZN9CPDF_Path9ClosePathEv(%class.CPDF_Path*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDFPath_SetDrawMode(%struct.fpdf_pageobject_t__*, i32, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.fpdf_pageobject_t__* %0, null
  br i1 %4, label %23, label %5

5:                                                ; preds = %3
  %6 = bitcast %struct.fpdf_pageobject_t__* %0 to %class.CPDF_PageObject*
  %7 = bitcast %struct.fpdf_pageobject_t__* %0 to %class.CPDF_PathObject* (%class.CPDF_PageObject*)***
  %8 = load %class.CPDF_PathObject* (%class.CPDF_PageObject*)**, %class.CPDF_PathObject* (%class.CPDF_PageObject*)*** %7, align 8
  %9 = getelementptr inbounds %class.CPDF_PathObject* (%class.CPDF_PageObject*)*, %class.CPDF_PathObject* (%class.CPDF_PageObject*)** %8, i64 11
  %10 = load %class.CPDF_PathObject* (%class.CPDF_PageObject*)*, %class.CPDF_PathObject* (%class.CPDF_PageObject*)** %9, align 8
  %11 = tail call %class.CPDF_PathObject* %10(%class.CPDF_PageObject* nonnull %6) #8
  %12 = icmp eq %class.CPDF_PathObject* %11, null
  br i1 %12, label %23, label %13

13:                                               ; preds = %5
  %14 = icmp ne i32 %2, 0
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %11, i64 0, i32 1
  store i8 %15, i8* %16, align 8
  %17 = icmp eq i32 %1, 2
  %18 = select i1 %17, i8 2, i8 0
  %19 = icmp eq i32 %1, 1
  %20 = select i1 %19, i8 1, i8 %18
  %21 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %11, i64 0, i32 2
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %11, i64 0, i32 0, i32 3
  store i8 1, i8* %22, align 8
  br label %23

23:                                               ; preds = %3, %5, %13
  %24 = phi i32 [ 1, %13 ], [ 0, %5 ], [ 0, %3 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDFPath_GetDrawMode(%struct.fpdf_pageobject_t__*, i32*, i32*) local_unnamed_addr #0 {
  %4 = icmp eq %struct.fpdf_pageobject_t__* %0, null
  br i1 %4, label %27, label %5

5:                                                ; preds = %3
  %6 = bitcast %struct.fpdf_pageobject_t__* %0 to %class.CPDF_PageObject*
  %7 = bitcast %struct.fpdf_pageobject_t__* %0 to %class.CPDF_PathObject* (%class.CPDF_PageObject*)***
  %8 = load %class.CPDF_PathObject* (%class.CPDF_PageObject*)**, %class.CPDF_PathObject* (%class.CPDF_PageObject*)*** %7, align 8
  %9 = getelementptr inbounds %class.CPDF_PathObject* (%class.CPDF_PageObject*)*, %class.CPDF_PathObject* (%class.CPDF_PageObject*)** %8, i64 11
  %10 = load %class.CPDF_PathObject* (%class.CPDF_PageObject*)*, %class.CPDF_PathObject* (%class.CPDF_PageObject*)** %9, align 8
  %11 = tail call %class.CPDF_PathObject* %10(%class.CPDF_PageObject* nonnull %6) #8
  %12 = icmp ne %class.CPDF_PathObject* %11, null
  %13 = icmp ne i32* %1, null
  %14 = and i1 %13, %12
  %15 = icmp ne i32* %2, null
  %16 = and i1 %15, %14
  br i1 %16, label %17, label %27

17:                                               ; preds = %5
  %18 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %11, i64 0, i32 2
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 2
  %21 = select i1 %20, i32 2, i32 0
  %22 = icmp eq i8 %19, 1
  %23 = select i1 %22, i32 1, i32 %21
  store i32 %23, i32* %1, align 4
  %24 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %11, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !5
  %26 = zext i8 %25 to i32
  store i32 %26, i32* %2, align 4
  br label %27

27:                                               ; preds = %3, %5, %17
  %28 = phi i32 [ 1, %17 ], [ 0, %5 ], [ 0, %3 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDFPath_GetMatrix(%struct.fpdf_pageobject_t__*, %struct._FS_MATRIX_*) local_unnamed_addr #0 {
  %3 = alloca %struct._FS_MATRIX_, align 4
  %4 = icmp ne %struct.fpdf_pageobject_t__* %0, null
  %5 = icmp ne %struct._FS_MATRIX_* %1, null
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %19

7:                                                ; preds = %2
  %8 = bitcast %struct.fpdf_pageobject_t__* %0 to %class.CPDF_PageObject*
  %9 = bitcast %struct.fpdf_pageobject_t__* %0 to %class.CPDF_PathObject* (%class.CPDF_PageObject*)***
  %10 = load %class.CPDF_PathObject* (%class.CPDF_PageObject*)**, %class.CPDF_PathObject* (%class.CPDF_PageObject*)*** %9, align 8
  %11 = getelementptr inbounds %class.CPDF_PathObject* (%class.CPDF_PageObject*)*, %class.CPDF_PathObject* (%class.CPDF_PageObject*)** %10, i64 11
  %12 = load %class.CPDF_PathObject* (%class.CPDF_PageObject*)*, %class.CPDF_PathObject* (%class.CPDF_PageObject*)** %11, align 8
  %13 = tail call %class.CPDF_PathObject* %12(%class.CPDF_PageObject* nonnull %8) #8
  %14 = icmp eq %class.CPDF_PathObject* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %7
  %16 = bitcast %struct._FS_MATRIX_* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #8
  %17 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %13, i64 0, i32 4
  call void @_Z21FSMatrixFromCFXMatrixRK10CFX_Matrix(%struct._FS_MATRIX_* nonnull sret %3, %class.CFX_Matrix* dereferenceable(24) %17) #8
  %18 = bitcast %struct._FS_MATRIX_* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* nonnull align 4 %16, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #8
  br label %19

19:                                               ; preds = %15, %7, %2
  %20 = phi i32 [ 0, %2 ], [ 1, %15 ], [ 0, %7 ]
  ret i32 %20
}

declare void @_Z21FSMatrixFromCFXMatrixRK10CFX_Matrix(%struct._FS_MATRIX_* sret, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FPDFPath_SetMatrix(%struct.fpdf_pageobject_t__*, %struct._FS_MATRIX_*) local_unnamed_addr #0 {
  %3 = alloca %class.CFX_Matrix, align 4
  %4 = icmp eq %struct._FS_MATRIX_* %1, null
  %5 = icmp eq %struct.fpdf_pageobject_t__* %0, null
  %6 = or i1 %5, %4
  br i1 %6, label %20, label %7

7:                                                ; preds = %2
  %8 = bitcast %struct.fpdf_pageobject_t__* %0 to %class.CPDF_PageObject*
  %9 = bitcast %struct.fpdf_pageobject_t__* %0 to %class.CPDF_PathObject* (%class.CPDF_PageObject*)***
  %10 = load %class.CPDF_PathObject* (%class.CPDF_PageObject*)**, %class.CPDF_PathObject* (%class.CPDF_PageObject*)*** %9, align 8
  %11 = getelementptr inbounds %class.CPDF_PathObject* (%class.CPDF_PageObject*)*, %class.CPDF_PathObject* (%class.CPDF_PageObject*)** %10, i64 11
  %12 = load %class.CPDF_PathObject* (%class.CPDF_PageObject*)*, %class.CPDF_PathObject* (%class.CPDF_PageObject*)** %11, align 8
  %13 = tail call %class.CPDF_PathObject* %12(%class.CPDF_PageObject* nonnull %8) #8
  %14 = icmp eq %class.CPDF_PathObject* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %7
  %16 = bitcast %class.CFX_Matrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #8
  call void @_Z21CFXMatrixFromFSMatrixRK11_FS_MATRIX_(%class.CFX_Matrix* nonnull sret %3, %struct._FS_MATRIX_* nonnull dereferenceable(24) %1) #8
  %17 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %13, i64 0, i32 4
  %18 = bitcast %class.CFX_Matrix* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 4 %16, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #8
  %19 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %13, i64 0, i32 0, i32 3
  store i8 1, i8* %19, align 8
  br label %20

20:                                               ; preds = %15, %7, %2
  %21 = phi i32 [ 0, %2 ], [ 1, %15 ], [ 0, %7 ]
  ret i32 %21
}

declare void @_Z21CFXMatrixFromFSMatrixRK11_FS_MATRIX_(%class.CFX_Matrix* sret, %struct._FS_MATRIX_* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @FPDFPathSegment_GetPoint(%struct.fpdf_pathsegment_t* readonly, float*, float*) local_unnamed_addr #3 {
  %4 = icmp ne %struct.fpdf_pathsegment_t* %0, null
  %5 = icmp ne float* %1, null
  %6 = and i1 %4, %5
  %7 = icmp ne float* %2, null
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %18

9:                                                ; preds = %3
  %10 = bitcast %struct.fpdf_pathsegment_t* %0 to %class.FX_PATHPOINT*
  %11 = bitcast %struct.fpdf_pathsegment_t* %0 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = bitcast float* %1 to i32*
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %10, i64 0, i32 0, i32 1
  %15 = bitcast float* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = bitcast float* %2 to i32*
  store i32 %16, i32* %17, align 4
  br label %18

18:                                               ; preds = %3, %9
  %19 = phi i32 [ 1, %9 ], [ 0, %3 ]
  ret i32 %19
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @FPDFPathSegment_GetType(%struct.fpdf_pathsegment_t* readonly) local_unnamed_addr #4 {
  %2 = icmp eq %struct.fpdf_pathsegment_t* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.fpdf_pathsegment_t* %0 to %class.FX_PATHPOINT*
  %5 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %4, i64 0, i32 1
  %6 = load i8, i8* %5, align 4
  %7 = zext i8 %6 to i32
  br label %8

8:                                                ; preds = %1, %3
  %9 = phi i32 [ %7, %3 ], [ -1, %1 ]
  ret i32 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @FPDFPathSegment_GetClose(%struct.fpdf_pathsegment_t* readonly) local_unnamed_addr #4 {
  %2 = icmp eq %struct.fpdf_pathsegment_t* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.fpdf_pathsegment_t* %0 to %class.FX_PATHPOINT*
  %5 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %4, i64 0, i32 2
  %6 = load i8, i8* %5, align 1, !range !5
  %7 = zext i8 %6 to i32
  br label %8

8:                                                ; preds = %1, %3
  %9 = phi i32 [ 0, %1 ], [ %7, %3 ]
  ret i32 %9
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN15CPDF_PathObjectC1Ev(%class.CPDF_PathObject*) unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i32 -2143700828}
!4 = !{i32 -2143700807}
!5 = !{i8 0, i8 2}
