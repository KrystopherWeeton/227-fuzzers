; ModuleID = '../../google_apis/gcm/engine/gcm_registration_request_handler.cc'
source_filename = "../../google_apis/gcm/engine/gcm_registration_request_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gcm::GCMRegistrationRequestHandler" = type { %"class.gcm::RegistrationRequest::CustomRequestHandler", %"class.std::__1::basic_string" }
%"class.gcm::RegistrationRequest::CustomRequestHandler" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.2", [4 x i8] }>
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i32 }

@_ZTVN3gcm29GCMRegistrationRequestHandlerE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gcm::GCMRegistrationRequestHandler"*)* @_ZN3gcm29GCMRegistrationRequestHandlerD2Ev to i8*), i8* bitcast (void (%"class.gcm::GCMRegistrationRequestHandler"*)* @_ZN3gcm29GCMRegistrationRequestHandlerD0Ev to i8*), i8* bitcast (void (%"class.gcm::GCMRegistrationRequestHandler"*, %"class.std::__1::basic_string"*)* @_ZN3gcm29GCMRegistrationRequestHandler16BuildRequestBodyEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.gcm::GCMRegistrationRequestHandler"*, i32)* @_ZN3gcm29GCMRegistrationRequestHandler17ReportStatusToUMAENS_19RegistrationRequest6StatusE to i8*), i8* bitcast (void (%"class.gcm::GCMRegistrationRequestHandler"*, i32)* @_ZN3gcm29GCMRegistrationRequestHandler23ReportNetErrorCodeToUMAEi to i8*)] }, align 8
@_ZN3gcm12_GLOBAL__N_110kSenderKeyE = internal unnamed_addr constant [7 x i8] c"sender\00", align 1
@.str = private unnamed_addr constant [30 x i8] c"GCM.RegistrationRequestStatus\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"GCM.RegistrationRequest.NetErrorCode\00", align 1
@_ZZN3gcm29GCMRegistrationRequestHandler17ReportStatusToUMAENS_19RegistrationRequest6StatusEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN3gcm29GCMRegistrationRequestHandlerC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.gcm::GCMRegistrationRequestHandler"*, %"class.std::__1::basic_string"*), void (%"class.gcm::GCMRegistrationRequestHandler"*, %"class.std::__1::basic_string"*)* @_ZN3gcm29GCMRegistrationRequestHandlerC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
@_ZN3gcm29GCMRegistrationRequestHandlerD1Ev = hidden unnamed_addr alias void (%"class.gcm::GCMRegistrationRequestHandler"*), void (%"class.gcm::GCMRegistrationRequestHandler"*)* @_ZN3gcm29GCMRegistrationRequestHandlerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gcm29GCMRegistrationRequestHandlerC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gcm::GCMRegistrationRequestHandler"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gcm::GCMRegistrationRequestHandler", %"class.gcm::GCMRegistrationRequestHandler"* %0, i64 0, i32 0
  tail call void @_ZN3gcm19RegistrationRequest20CustomRequestHandlerC2Ev(%"class.gcm::RegistrationRequest::CustomRequestHandler"* %3) #5
  %4 = getelementptr inbounds %"class.gcm::GCMRegistrationRequestHandler", %"class.gcm::GCMRegistrationRequestHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gcm29GCMRegistrationRequestHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.gcm::GCMRegistrationRequestHandler", %"class.gcm::GCMRegistrationRequestHandler"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #5
  br label %18

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %5, i8* %15, i64 %17) #5
  br label %18

18:                                               ; preds = %10, %13
  ret void
}

declare void @_ZN3gcm19RegistrationRequest20CustomRequestHandlerC2Ev(%"class.gcm::RegistrationRequest::CustomRequestHandler"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gcm29GCMRegistrationRequestHandlerD2Ev(%"class.gcm::GCMRegistrationRequestHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gcm::GCMRegistrationRequestHandler", %"class.gcm::GCMRegistrationRequestHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gcm29GCMRegistrationRequestHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gcm::GCMRegistrationRequestHandler", %"class.gcm::GCMRegistrationRequestHandler"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #6
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.gcm::GCMRegistrationRequestHandler", %"class.gcm::GCMRegistrationRequestHandler"* %0, i64 0, i32 0
  tail call void @_ZN3gcm19RegistrationRequest20CustomRequestHandlerD2Ev(%"class.gcm::RegistrationRequest::CustomRequestHandler"* %12) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gcm19RegistrationRequest20CustomRequestHandlerD2Ev(%"class.gcm::RegistrationRequest::CustomRequestHandler"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gcm29GCMRegistrationRequestHandlerD0Ev(%"class.gcm::GCMRegistrationRequestHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gcm::GCMRegistrationRequestHandler", %"class.gcm::GCMRegistrationRequestHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gcm29GCMRegistrationRequestHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gcm::GCMRegistrationRequestHandler", %"class.gcm::GCMRegistrationRequestHandler"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #6
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.gcm::GCMRegistrationRequestHandler", %"class.gcm::GCMRegistrationRequestHandler"* %0, i64 0, i32 0
  tail call void @_ZN3gcm19RegistrationRequest20CustomRequestHandlerD2Ev(%"class.gcm::RegistrationRequest::CustomRequestHandler"* %12) #5
  %13 = bitcast %"class.gcm::GCMRegistrationRequestHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gcm29GCMRegistrationRequestHandler16BuildRequestBodyEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gcm::GCMRegistrationRequestHandler"*, %"class.std::__1::basic_string"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #5
  %5 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  store i8 6, i8* %6, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN3gcm12_GLOBAL__N_110kSenderKeyE, i64 0, i64 0), i64 6, i1 false) #5
  %7 = getelementptr inbounds i8, i8* %4, i64 6
  store i8 0, i8* %7, align 2
  %8 = getelementptr inbounds %"class.gcm::GCMRegistrationRequestHandler", %"class.gcm::GCMRegistrationRequestHandler"* %0, i64 0, i32 1
  call void @_ZN3gcm17BuildFormEncodingERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_PS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string"* dereferenceable(24) %8, %"class.std::__1::basic_string"* %1) #5
  %9 = load i8, i8* %6, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %13) #6
  br label %14

14:                                               ; preds = %2, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #5
  ret void
}

declare void @_ZN3gcm17BuildFormEncodingERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_PS6_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gcm29GCMRegistrationRequestHandler17ReportStatusToUMAENS_19RegistrationRequest6StatusE(%"class.gcm::GCMRegistrationRequestHandler"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %3 = load atomic i64, i64* @_ZZN3gcm29GCMRegistrationRequestHandler17ReportStatusToUMAENS_19RegistrationRequest6StatusEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %4 = inttoptr i64 %3 to %"class.base::HistogramBase"*
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 1, i32 14, i32 15, i32 1) #5
  %8 = ptrtoint %"class.base::HistogramBase"* %7 to i64
  store atomic i64 %8, i64* @_ZZN3gcm29GCMRegistrationRequestHandler17ReportStatusToUMAENS_19RegistrationRequest6StatusEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.base::HistogramBase"* [ %4, %2 ], [ %7, %6 ]
  %11 = bitcast %"class.base::HistogramBase"* %10 to void (%"class.base::HistogramBase"*, i32)***
  %12 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %12, i64 6
  %14 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %13, align 8
  tail call void %14(%"class.base::HistogramBase"* %10, i32 %1) #5
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gcm29GCMRegistrationRequestHandler23ReportNetErrorCodeToUMAEi(%"class.gcm::GCMRegistrationRequestHandler"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %3 = icmp slt i32 %1, 0
  %4 = sub nsw i32 0, %1
  %5 = select i1 %3, i32 %4, i32 %1
  tail call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 %5) #5
  ret void
}

declare void @_ZN4base18UmaHistogramSparseEPKci(i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
