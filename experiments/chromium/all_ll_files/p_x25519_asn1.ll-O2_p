; ModuleID = '../../third_party/boringssl/src/crypto/evp/p_x25519_asn1.c'
source_filename = "../../third_party/boringssl/src/crypto/evp/p_x25519_asn1.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type { i32, [9 x i8], i8, {}*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, {}*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)* }
%struct.cbs_st = type { i8*, i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%struct.X25519_KEY = type { [32 x i8], [32 x i8], i8 }

@x25519_asn1_meth = hidden constant { i32, [9 x i8], i8, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)* } { i32 948, [9 x i8] c"+en\00\00\00\00\00\00", i8 3, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)* @x25519_pub_decode, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)* @x25519_pub_encode, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)* @x25519_pub_cmp, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)* @x25519_priv_decode, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)* @x25519_priv_encode, i32 (%struct.evp_pkey_st*, i8*, i64)* @x25519_set_priv_raw, i32 (%struct.evp_pkey_st*, i8*, i64)* @x25519_set_pub_raw, i32 (%struct.evp_pkey_st*, i8*, i64*)* @x25519_get_priv_raw, i32 (%struct.evp_pkey_st*, i8*, i64*)* @x25519_get_pub_raw, i32 (%struct.evp_pkey_st*)* null, i32 (%struct.evp_pkey_st*)* @x25519_size, i32 (%struct.evp_pkey_st*)* @x25519_bits, i32 (%struct.evp_pkey_st*)* null, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)* null, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)* null, void (%struct.evp_pkey_st*)* @x25519_free }, align 8
@.str = private unnamed_addr constant [59 x i8] c"../../third_party/boringssl/src/crypto/evp/p_x25519_asn1.c\00", align 1

; Function Attrs: nounwind ssp uwtable
define internal i32 @x25519_pub_decode(%struct.evp_pkey_st* nocapture, %struct.cbs_st*, %struct.cbs_st*) #0 {
  %4 = tail call i64 @CBS_len(%struct.cbs_st* %1) #6
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @ERR_put_error(i32 6, i32 0, i32 102, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 118) #6
  br label %20

7:                                                ; preds = %3
  %8 = tail call i8* @CBS_data(%struct.cbs_st* %2) #6
  %9 = tail call i64 @CBS_len(%struct.cbs_st* %2) #6
  %10 = icmp eq i64 %9, 32
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @ERR_put_error(i32 6, i32 0, i32 102, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 54) #6
  br label %20

12:                                               ; preds = %7
  %13 = tail call i8* @OPENSSL_malloc(i64 65) #6
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  tail call void @ERR_put_error(i32 6, i32 0, i32 65, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 60) #6
  br label %20

16:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %13, i8* align 1 %8, i64 32, i1 false) #6
  %17 = getelementptr inbounds i8, i8* %13, i64 64
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @OPENSSL_free(i8* %19) #6
  store i8* %13, i8** %18, align 8
  br label %20

20:                                               ; preds = %16, %15, %11, %6
  %21 = phi i32 [ 0, %6 ], [ 0, %11 ], [ 0, %15 ], [ 1, %16 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @x25519_pub_encode(%struct.cbb_st*, %struct.evp_pkey_st* nocapture readonly) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = alloca %struct.cbb_st, align 8
  %6 = alloca %struct.cbb_st, align 8
  %7 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %1, i64 0, i32 2, i32 0
  %8 = bitcast i8** %7 to %struct.X25519_KEY**
  %9 = load %struct.X25519_KEY*, %struct.X25519_KEY** %8, align 8
  %10 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  %12 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = bitcast %struct.cbb_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %3, i32 536870928) #6
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %38, label %16

16:                                               ; preds = %2
  %17 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4, i32 536870928) #6
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %38, label %19

19:                                               ; preds = %16
  %20 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 6) #6
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %38, label %22

22:                                               ; preds = %19
  %23 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %5, i8* getelementptr inbounds ({ i32, [9 x i8], i8, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)* }, { i32, [9 x i8], i8, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)* }* @x25519_asn1_meth, i64 0, i32 1, i64 0), i64 3) #6
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %38, label %25

25:                                               ; preds = %22
  %26 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %6, i32 3) #6
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %38, label %28

28:                                               ; preds = %25
  %29 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %6, i8 zeroext 0) #6
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.X25519_KEY, %struct.X25519_KEY* %9, i64 0, i32 0, i64 0
  %33 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %6, i8* %32, i64 32) #6
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = call i32 @CBB_flush(%struct.cbb_st* %0) #6
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35, %31, %28, %25, %22, %19, %16, %2
  call void @ERR_put_error(i32 6, i32 0, i32 105, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 138) #6
  br label %39

39:                                               ; preds = %35, %38
  %40 = phi i32 [ 0, %38 ], [ 1, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #6
  ret i32 %40
}

; Function Attrs: nounwind readonly ssp uwtable
define internal i32 @x25519_pub_cmp(%struct.evp_pkey_st* nocapture readonly, %struct.evp_pkey_st* nocapture readonly) #1 {
  %3 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %4 = bitcast i8** %3 to %struct.X25519_KEY**
  %5 = load %struct.X25519_KEY*, %struct.X25519_KEY** %4, align 8
  %6 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %1, i64 0, i32 2, i32 0
  %7 = bitcast i8** %6 to %struct.X25519_KEY**
  %8 = load %struct.X25519_KEY*, %struct.X25519_KEY** %7, align 8
  %9 = getelementptr inbounds %struct.X25519_KEY, %struct.X25519_KEY* %5, i64 0, i32 0, i64 0
  %10 = getelementptr inbounds %struct.X25519_KEY, %struct.X25519_KEY* %8, i64 0, i32 0, i64 0
  %11 = tail call i32 @bcmp(i8* %9, i8* %10, i64 32)
  %12 = icmp eq i32 %11, 0
  %13 = zext i1 %12 to i32
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @x25519_priv_decode(%struct.evp_pkey_st* nocapture, %struct.cbs_st*, %struct.cbs_st*) #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #6
  %6 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = tail call i64 @CBS_len(%struct.cbs_st* %1) #6
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %3
  %10 = call i32 @CBS_get_asn1(%struct.cbs_st* %2, %struct.cbs_st* nonnull %4, i32 4) #6
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = call i64 @CBS_len(%struct.cbs_st* %2) #6
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %12, %9, %3
  call void @ERR_put_error(i32 6, i32 0, i32 102, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 160) #6
  br label %30

16:                                               ; preds = %12
  %17 = call i8* @CBS_data(%struct.cbs_st* nonnull %4) #6
  %18 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #6
  %19 = icmp eq i64 %18, 32
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  call void @ERR_put_error(i32 6, i32 0, i32 102, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 33) #6
  br label %30

21:                                               ; preds = %16
  %22 = call i8* @OPENSSL_malloc(i64 65) #6
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @ERR_put_error(i32 6, i32 0, i32 65, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 39) #6
  br label %30

25:                                               ; preds = %21
  %26 = getelementptr inbounds i8, i8* %22, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %17, i64 32, i1 false) #6
  call void @X25519_public_from_private(i8* nonnull %22, i8* %26) #6
  %27 = getelementptr inbounds i8, i8* %22, i64 64
  store i8 1, i8* %27, align 1
  %28 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @OPENSSL_free(i8* %29) #6
  store i8* %22, i8** %28, align 8
  br label %30

30:                                               ; preds = %25, %24, %20, %15
  %31 = phi i32 [ 0, %15 ], [ 0, %20 ], [ 0, %24 ], [ 1, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #6
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @x25519_priv_encode(%struct.cbb_st*, %struct.evp_pkey_st* nocapture readonly) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = alloca %struct.cbb_st, align 8
  %6 = alloca %struct.cbb_st, align 8
  %7 = alloca %struct.cbb_st, align 8
  %8 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %1, i64 0, i32 2, i32 0
  %9 = bitcast i8** %8 to %struct.X25519_KEY**
  %10 = load %struct.X25519_KEY*, %struct.X25519_KEY** %9, align 8
  %11 = getelementptr inbounds %struct.X25519_KEY, %struct.X25519_KEY* %10, i64 0, i32 2
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %2
  tail call void @ERR_put_error(i32 6, i32 0, i32 130, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 170) #6
  br label %51

15:                                               ; preds = %2
  %16 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  %17 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false)
  %18 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 32, i1 false)
  %19 = bitcast %struct.cbb_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false)
  %20 = bitcast %struct.cbb_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 32, i1 false)
  %21 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %3, i32 536870928) #6
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %48, label %23

23:                                               ; preds = %15
  %24 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %3, i64 0) #6
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %48, label %26

26:                                               ; preds = %23
  %27 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4, i32 536870928) #6
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %48, label %29

29:                                               ; preds = %26
  %30 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 6) #6
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %48, label %32

32:                                               ; preds = %29
  %33 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %5, i8* getelementptr inbounds ({ i32, [9 x i8], i8, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)* }, { i32, [9 x i8], i8, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)* }* @x25519_asn1_meth, i64 0, i32 1, i64 0), i64 3) #6
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %48, label %35

35:                                               ; preds = %32
  %36 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %6, i32 4) #6
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %48, label %38

38:                                               ; preds = %35
  %39 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %6, %struct.cbb_st* nonnull %7, i32 4) #6
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.X25519_KEY, %struct.X25519_KEY* %10, i64 0, i32 1, i64 0
  %43 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %7, i8* %42, i64 32) #6
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %41
  %46 = call i32 @CBB_flush(%struct.cbb_st* %0) #6
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45, %41, %38, %35, %32, %29, %26, %23, %15
  call void @ERR_put_error(i32 6, i32 0, i32 105, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 187) #6
  br label %49

49:                                               ; preds = %45, %48
  %50 = phi i32 [ 0, %48 ], [ 1, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  br label %51

51:                                               ; preds = %49, %14
  %52 = phi i32 [ %50, %49 ], [ 0, %14 ]
  ret i32 %52
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @x25519_set_priv_raw(%struct.evp_pkey_st* nocapture, i8* nocapture readonly, i64) #0 {
  %4 = icmp eq i64 %2, 32
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  tail call void @ERR_put_error(i32 6, i32 0, i32 102, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 33) #6
  br label %15

6:                                                ; preds = %3
  %7 = tail call i8* @OPENSSL_malloc(i64 65) #6
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  tail call void @ERR_put_error(i32 6, i32 0, i32 65, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 39) #6
  br label %15

10:                                               ; preds = %6
  %11 = getelementptr inbounds i8, i8* %7, i64 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %1, i64 32, i1 false) #6
  tail call void @X25519_public_from_private(i8* nonnull %7, i8* %11) #6
  %12 = getelementptr inbounds i8, i8* %7, i64 64
  store i8 1, i8* %12, align 1
  %13 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %14 = load i8*, i8** %13, align 8
  tail call void @OPENSSL_free(i8* %14) #6
  store i8* %7, i8** %13, align 8
  br label %15

15:                                               ; preds = %9, %10, %5
  %16 = phi i32 [ 0, %5 ], [ 0, %9 ], [ 1, %10 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @x25519_set_pub_raw(%struct.evp_pkey_st* nocapture, i8* nocapture readonly, i64) #0 {
  %4 = icmp eq i64 %2, 32
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  tail call void @ERR_put_error(i32 6, i32 0, i32 102, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 54) #6
  br label %14

6:                                                ; preds = %3
  %7 = tail call i8* @OPENSSL_malloc(i64 65) #6
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  tail call void @ERR_put_error(i32 6, i32 0, i32 65, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 60) #6
  br label %14

10:                                               ; preds = %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 %1, i64 32, i1 false) #6
  %11 = getelementptr inbounds i8, i8* %7, i64 64
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @OPENSSL_free(i8* %13) #6
  store i8* %7, i8** %12, align 8
  br label %14

14:                                               ; preds = %9, %10, %5
  %15 = phi i32 [ 0, %5 ], [ 0, %9 ], [ 1, %10 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @x25519_get_priv_raw(%struct.evp_pkey_st* nocapture readonly, i8*, i64* nocapture) #0 {
  %4 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %5 = bitcast i8** %4 to %struct.X25519_KEY**
  %6 = load %struct.X25519_KEY*, %struct.X25519_KEY** %5, align 8
  %7 = getelementptr inbounds %struct.X25519_KEY, %struct.X25519_KEY* %6, i64 0, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %3
  tail call void @ERR_put_error(i32 6, i32 0, i32 130, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 76) #6
  br label %20

11:                                               ; preds = %3
  %12 = icmp eq i8* %1, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  store i64 32, i64* %2, align 8
  br label %20

14:                                               ; preds = %11
  %15 = load i64, i64* %2, align 8
  %16 = icmp ult i64 %15, 32
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @ERR_put_error(i32 6, i32 0, i32 100, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 86) #6
  br label %20

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.X25519_KEY, %struct.X25519_KEY* %6, i64 0, i32 1, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1, i8* align 1 %19, i64 32, i1 false) #6
  store i64 32, i64* %2, align 8
  br label %20

20:                                               ; preds = %18, %17, %13, %10
  %21 = phi i32 [ 1, %13 ], [ 0, %17 ], [ 1, %18 ], [ 0, %10 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @x25519_get_pub_raw(%struct.evp_pkey_st* nocapture readonly, i8*, i64* nocapture) #0 {
  %4 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %5 = bitcast i8** %4 to %struct.X25519_KEY**
  %6 = load %struct.X25519_KEY*, %struct.X25519_KEY** %5, align 8
  %7 = icmp eq i8* %1, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  store i64 32, i64* %2, align 8
  br label %15

9:                                                ; preds = %3
  %10 = load i64, i64* %2, align 8
  %11 = icmp ult i64 %10, 32
  br i1 %11, label %12, label %13

12:                                               ; preds = %9
  tail call void @ERR_put_error(i32 6, i32 0, i32 100, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 104) #6
  br label %15

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.X25519_KEY, %struct.X25519_KEY* %6, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1, i8* align 1 %14, i64 32, i1 false) #6
  store i64 32, i64* %2, align 8
  br label %15

15:                                               ; preds = %13, %12, %8
  %16 = phi i32 [ 1, %8 ], [ 0, %12 ], [ 1, %13 ]
  ret i32 %16
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @x25519_size(%struct.evp_pkey_st* nocapture readnone) #2 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @x25519_bits(%struct.evp_pkey_st* nocapture readnone) #2 {
  ret i32 253
}

; Function Attrs: nounwind ssp uwtable
define internal void @x25519_free(%struct.evp_pkey_st* nocapture) #0 {
  %2 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %3 = load i8*, i8** %2, align 8
  tail call void @OPENSSL_free(i8* %3) #6
  store i8* null, i8** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_PKEY_set1_tls_encodedpoint(%struct.evp_pkey_st* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 948
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @ERR_put_error(i32 6, i32 0, i32 129, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 225) #6
  br label %19

8:                                                ; preds = %3
  %9 = icmp eq i64 %2, 32
  br i1 %9, label %11, label %10

10:                                               ; preds = %8
  tail call void @ERR_put_error(i32 6, i32 0, i32 102, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 54) #6
  br label %19

11:                                               ; preds = %8
  %12 = tail call i8* @OPENSSL_malloc(i64 65) #6
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  tail call void @ERR_put_error(i32 6, i32 0, i32 65, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 60) #6
  br label %19

15:                                               ; preds = %11
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %1, i64 32, i1 false) #6
  %16 = getelementptr inbounds i8, i8* %12, i64 64
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @OPENSSL_free(i8* %18) #6
  store i8* %12, i8** %17, align 8
  br label %19

19:                                               ; preds = %15, %14, %10, %7
  %20 = phi i32 [ 0, %7 ], [ 0, %10 ], [ 0, %14 ], [ 1, %15 ]
  ret i32 %20
}

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @EVP_PKEY_get1_tls_encodedpoint(%struct.evp_pkey_st* nocapture readonly, i8** nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 948
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @ERR_put_error(i32 6, i32 0, i32 129, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 236) #6
  br label %18

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2, i32 0
  %9 = bitcast i8** %8 to %struct.X25519_KEY**
  %10 = load %struct.X25519_KEY*, %struct.X25519_KEY** %9, align 8
  %11 = icmp eq %struct.X25519_KEY* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  tail call void @ERR_put_error(i32 6, i32 0, i32 120, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 242) #6
  br label %18

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.X25519_KEY, %struct.X25519_KEY* %10, i64 0, i32 0, i64 0
  %15 = tail call i8* @OPENSSL_memdup(i8* %14, i64 32) #6
  store i8* %15, i8** %1, align 8
  %16 = icmp eq i8* %15, null
  %17 = select i1 %16, i64 0, i64 32
  br label %18

18:                                               ; preds = %12, %13, %6
  %19 = phi i64 [ 0, %6 ], [ 0, %12 ], [ %17, %13 ]
  ret i64 %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare i8* @OPENSSL_memdup(i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #3

declare i8* @CBS_data(%struct.cbs_st*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare i32 @CBB_add_asn1(%struct.cbb_st*, %struct.cbb_st*, i32) local_unnamed_addr #3

declare i32 @CBB_add_bytes(%struct.cbb_st*, i8*, i64) local_unnamed_addr #3

declare i32 @CBB_add_u8(%struct.cbb_st*, i8 zeroext) local_unnamed_addr #3

declare i32 @CBB_flush(%struct.cbb_st*) local_unnamed_addr #3

declare i32 @CBS_get_asn1(%struct.cbs_st*, %struct.cbs_st*, i32) local_unnamed_addr #3

declare i32 @CBB_add_asn1_uint64(%struct.cbb_st*, i64) local_unnamed_addr #3

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #3

declare void @X25519_public_from_private(i8*, i8*) local_unnamed_addr #3

declare void @OPENSSL_free(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree nounwind readonly }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
