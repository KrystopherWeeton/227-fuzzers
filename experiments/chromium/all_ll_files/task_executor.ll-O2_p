; ModuleID = '../../base/task/task_executor.cc'
source_filename = "../../base/task/task_executor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [8 x i8] }
%"struct.std::__1::array" = type { [4 x %"class.base::TaskExecutor"*] }
%"class.base::TaskExecutor" = type { i32 (...)** }
%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array.0" }
%"struct.std::__1::array.0" = type { [8 x i8] }

@_ZZN4base28GetTLSForCurrentTaskExecutorEvE8instance = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN4base28GetTLSForCurrentTaskExecutorEvE8instance = internal global i64 0, align 8
@_ZZN4base12_GLOBAL__N_118GetTaskExecutorMapEvE9executors = internal unnamed_addr global %"struct.std::__1::array" zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::ThreadLocalPointer"* @_ZN4base28GetTLSForCurrentTaskExecutorEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base28GetTLSForCurrentTaskExecutorEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base28GetTLSForCurrentTaskExecutorEvE8instance) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base28GetTLSForCurrentTaskExecutorEvE8instance to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base28GetTLSForCurrentTaskExecutorEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #5
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base28GetTLSForCurrentTaskExecutorEvE8instance) #5
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.base::ThreadLocalPointer"* bitcast (%"class.base::NoDestructor"* @_ZZN4base28GetTLSForCurrentTaskExecutorEvE8instance to %"class.base::ThreadLocalPointer"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base31SetTaskExecutorForCurrentThreadEPNS_12TaskExecutorE(%"class.base::TaskExecutor"*) local_unnamed_addr #0 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base28GetTLSForCurrentTaskExecutorEvE8instance to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base28GetTLSForCurrentTaskExecutorEvE8instance) #5
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base28GetTLSForCurrentTaskExecutorEvE8instance to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base28GetTLSForCurrentTaskExecutorEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #5
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base28GetTLSForCurrentTaskExecutorEvE8instance) #5
  br label %8

8:                                                ; preds = %1, %4, %7
  %9 = bitcast %"class.base::TaskExecutor"* %0 to i8*
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base28GetTLSForCurrentTaskExecutorEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), i8* %9) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::TaskExecutor"* @_ZN4base31GetTaskExecutorForCurrentThreadEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base28GetTLSForCurrentTaskExecutorEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base28GetTLSForCurrentTaskExecutorEvE8instance) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base28GetTLSForCurrentTaskExecutorEvE8instance to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base28GetTLSForCurrentTaskExecutorEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #5
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base28GetTLSForCurrentTaskExecutorEvE8instance) #5
  br label %7

7:                                                ; preds = %0, %3, %6
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base28GetTLSForCurrentTaskExecutorEvE8instance to %"class.base::ThreadLocalStorage::Slot"*)) #5
  %9 = bitcast i8* %8 to %"class.base::TaskExecutor"*
  ret %"class.base::TaskExecutor"* %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base20RegisterTaskExecutorEhPNS_12TaskExecutorE(i8 zeroext, %"class.base::TaskExecutor"*) local_unnamed_addr #2 {
  %3 = zext i8 %0 to i64
  %4 = add nsw i64 %3, -1
  %5 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* @_ZZN4base12_GLOBAL__N_118GetTaskExecutorMapEvE9executors, i64 0, i32 0, i64 %4
  store %"class.base::TaskExecutor"* %1, %"class.base::TaskExecutor"** %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base32UnregisterTaskExecutorForTestingEh(i8 zeroext) local_unnamed_addr #2 {
  %2 = zext i8 %0 to i64
  %3 = add nsw i64 %2, -1
  %4 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* @_ZZN4base12_GLOBAL__N_118GetTaskExecutorMapEvE9executors, i64 0, i32 0, i64 %3
  store %"class.base::TaskExecutor"* null, %"class.base::TaskExecutor"** %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.base::TaskExecutor"* @_ZN4base34GetRegisteredTaskExecutorForTraitsERKNS_10TaskTraitsE(%"class.base::TaskTraits"* nocapture readonly dereferenceable(15)) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %0, i64 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = zext i8 %3 to i64
  %7 = add nsw i64 %6, -1
  %8 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* @_ZZN4base12_GLOBAL__N_118GetTaskExecutorMapEvE9executors, i64 0, i32 0, i64 %7
  %9 = load %"class.base::TaskExecutor"*, %"class.base::TaskExecutor"** %8, align 8
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %"class.base::TaskExecutor"* [ %9, %5 ], [ null, %1 ]
  ret %"class.base::TaskExecutor"* %11
}

declare void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"*, void (i8*)*) unnamed_addr #4

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #4

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
