; ModuleID = '../../content/browser/mojo_binder_policy_applier.cc'
source_filename = "../../content/browser/mojo_binder_policy_applier.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::MojoBinderPolicyApplier" = type { i32, %"class.content::MojoBinderPolicyMapImpl"*, %"class.base::OnceCallback", i32, %"class.std::__1::vector.2" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.base::OnceCallback.4"*, %"class.base::OnceCallback.4"*, %"class.std::__1::__compressed_pair.5" }
%"class.base::OnceCallback.4" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.base::OnceCallback.4"* }
%"class.content::MojoBinderPolicyMapImpl" = type { %"class.content::MojoBinderPolicyMap", %"class.base::flat_map" }
%"class.content::MojoBinderPolicyMap" = type { i32 (...)** }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN4base12OnceCallbackIFvvEEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

@.str = private unnamed_addr constant [21 x i8] c"MBPA_BAD_INTERFACE: \00", align 1

@_ZN7content23MojoBinderPolicyApplierC1EPKNS_23MojoBinderPolicyMapImplEN4base12OnceCallbackIFvRKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEEE = hidden unnamed_addr alias void (%"class.content::MojoBinderPolicyApplier"*, %"class.content::MojoBinderPolicyMapImpl"*, %"class.base::OnceCallback"*), void (%"class.content::MojoBinderPolicyApplier"*, %"class.content::MojoBinderPolicyMapImpl"*, %"class.base::OnceCallback"*)* @_ZN7content23MojoBinderPolicyApplierC2EPKNS_23MojoBinderPolicyMapImplEN4base12OnceCallbackIFvRKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEEE
@_ZN7content23MojoBinderPolicyApplierD1Ev = hidden unnamed_addr alias void (%"class.content::MojoBinderPolicyApplier"*), void (%"class.content::MojoBinderPolicyApplier"*)* @_ZN7content23MojoBinderPolicyApplierD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content23MojoBinderPolicyApplierC2EPKNS_23MojoBinderPolicyMapImplEN4base12OnceCallbackIFvRKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEEE(%"class.content::MojoBinderPolicyApplier"* nocapture, %"class.content::MojoBinderPolicyMapImpl"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 0
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 1
  store %"class.content::MojoBinderPolicyMapImpl"* %1, %"class.content::MojoBinderPolicyMapImpl"** %5, align 8
  %6 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 3
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 4
  %13 = bitcast %"class.std::__1::vector.2"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content23MojoBinderPolicyApplierD2Ev(%"class.content::MojoBinderPolicyApplier"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.base::OnceCallback.4"*, %"class.base::OnceCallback.4"** %3, align 8
  %5 = icmp eq %"class.base::OnceCallback.4"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::OnceCallback.4"* %4 to i8*
  %8 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %"class.base::OnceCallback.4"*, %"class.base::OnceCallback.4"** %8, align 8
  %10 = icmp eq %"class.base::OnceCallback.4"* %9, %4
  br i1 %10, label %19, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"class.base::OnceCallback.4"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %12, i64 -1
  %14 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %13, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %14) #10
  %15 = icmp eq %"class.base::OnceCallback.4"* %13, %4
  br i1 %15, label %16, label %11

16:                                               ; preds = %11
  %17 = bitcast %"class.std::__1::vector.2"* %2 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %6
  %20 = phi i8* [ %18, %16 ], [ %7, %6 ]
  store %"class.base::OnceCallback.4"* %4, %"class.base::OnceCallback.4"** %8, align 8
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %1, %19
  %22 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %22) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.content::MojoBinderPolicyApplier"* @_ZN7content23MojoBinderPolicyApplier31CreateForSameOriginPrerenderingEN4base12OnceCallbackIFvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEE(%"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = tail call %"class.content::MojoBinderPolicyMapImpl"* @_ZN7content23MojoBinderPolicyMapImpl36GetInstanceForSameOriginPrerenderingEv() #10
  %4 = ptrtoint %"class.content::MojoBinderPolicyMapImpl"* %3 to i64
  %5 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)
  %6 = tail call i8* @_Znwm(i64 56) #11
  %7 = bitcast i8* %6 to %"class.content::MojoBinderPolicyApplier"*
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %11 = bitcast i8* %6 to i32*
  store i32 1, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 8
  %13 = bitcast i8* %12 to i64*
  store i64 %4, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %6, i64 16
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast i8* %14 to i64*
  store i64 %10, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %17 = getelementptr inbounds i8, i8* %6, i64 24
  %18 = bitcast i8* %17 to i32*
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %6, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #10
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5)
  ret %"class.content::MojoBinderPolicyApplier"* %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.content::MojoBinderPolicyMapImpl"* @_ZN7content23MojoBinderPolicyMapImpl36GetInstanceForSameOriginPrerenderingEv() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content23MojoBinderPolicyApplier19ApplyPolicyToBinderERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base12OnceCallbackIFvvEEE(%"class.content::MojoBinderPolicyApplier"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::OnceCallback.4"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::OnceCallback.4", align 8
  %6 = alloca %"class.base::OnceCallback.4", align 8
  %7 = alloca %"class.base::OnceCallback.4", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 2
  br i1 %12, label %13, label %24

13:                                               ; preds = %3
  %14 = bitcast %"class.base::OnceCallback.4"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback.4"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.base::OnceCallback.4"* %7 to i64*
  store i64 %17, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %19 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %7, i64 0, i32 0
  %20 = inttoptr i64 %17 to %"class.base::internal::BindStateBase"*
  %21 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %20, i64 0, i32 1
  %22 = bitcast void ()** %21 to void (%"class.base::internal::BindStateBase"*)**
  %23 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %22, align 8
  tail call void %23(%"class.base::internal::BindStateBase"* %20) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  br label %121

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 1
  %26 = load %"class.content::MojoBinderPolicyMapImpl"*, %"class.content::MojoBinderPolicyMapImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = tail call i32 @_ZNK7content23MojoBinderPolicyMapImpl19GetMojoBinderPolicyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_16MojoBinderPolicyE(%"class.content::MojoBinderPolicyMapImpl"* %26, %"class.std::__1::basic_string"* dereferenceable(24) %1, i32 %28) #10
  %30 = load i32, i32* %10, align 8
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %60

32:                                               ; preds = %24
  switch i32 %29, label %121 [
    i32 0, label %33
    i32 2, label %33
    i32 3, label %33
    i32 1, label %44
  ]

33:                                               ; preds = %32, %32, %32
  %34 = bitcast %"class.base::OnceCallback.4"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %2, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.base::OnceCallback.4"* %2 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.base::OnceCallback.4"* %6 to i64*
  store i64 %37, i64* %38, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %35, align 8
  %39 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %6, i64 0, i32 0
  %40 = inttoptr i64 %37 to %"class.base::internal::BindStateBase"*
  %41 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %40, i64 0, i32 1
  %42 = bitcast void ()** %41 to void (%"class.base::internal::BindStateBase"*)**
  %43 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %42, align 8
  tail call void %43(%"class.base::internal::BindStateBase"* %40) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  br label %121

44:                                               ; preds = %32
  %45 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 4, i32 0, i32 1
  %46 = load %"class.base::OnceCallback.4"*, %"class.base::OnceCallback.4"** %45, align 8
  %47 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %48 = load %"class.base::OnceCallback.4"*, %"class.base::OnceCallback.4"** %47, align 8
  %49 = icmp ult %"class.base::OnceCallback.4"* %46, %48
  br i1 %49, label %50, label %58

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %2, i64 0, i32 0, i32 0, i32 0
  %52 = bitcast %"class.base::OnceCallback.4"* %2 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.base::OnceCallback.4"* %46 to i64*
  store i64 %53, i64* %54, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %51, align 8
  %55 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %46, i64 1
  %56 = ptrtoint %"class.base::OnceCallback.4"* %55 to i64
  %57 = bitcast %"class.base::OnceCallback.4"** %45 to i64*
  store i64 %56, i64* %57, align 8
  br label %121

58:                                               ; preds = %44
  %59 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 4
  tail call void @_ZNSt3__16vectorIN4base12OnceCallbackIFvvEEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.2"* %59, %"class.base::OnceCallback.4"* dereferenceable(8) %2) #10
  br label %121

60:                                               ; preds = %24
  switch i32 %29, label %121 [
    i32 0, label %61
    i32 2, label %72
    i32 1, label %84
    i32 3, label %100
  ]

61:                                               ; preds = %60
  %62 = bitcast %"class.base::OnceCallback.4"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #10
  %63 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %2, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.base::OnceCallback.4"* %2 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.base::OnceCallback.4"* %5 to i64*
  store i64 %65, i64* %66, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %63, align 8
  %67 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %5, i64 0, i32 0
  %68 = inttoptr i64 %65 to %"class.base::internal::BindStateBase"*
  %69 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %68, i64 0, i32 1
  %70 = bitcast void ()** %69 to void (%"class.base::internal::BindStateBase"*)**
  %71 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %70, align 8
  tail call void %71(%"class.base::internal::BindStateBase"* %68) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %67) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #10
  br label %121

72:                                               ; preds = %60
  %73 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %74 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %73, align 8
  %75 = icmp eq %"class.base::internal::BindStateBase"* %74, null
  br i1 %75, label %121, label %76

76:                                               ; preds = %72
  %77 = ptrtoint %"class.base::internal::BindStateBase"* %74 to i64
  %78 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #10
  %79 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %77, i64* %79, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %73, align 8
  %80 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %81 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %74, i64 0, i32 1
  %82 = bitcast void ()** %81 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)**
  %83 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)** %82, align 8
  tail call void %83(%"class.base::internal::BindStateBase"* nonnull %74, %"class.std::__1::basic_string"* dereferenceable(24) %1) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %80) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #10
  br label %121

84:                                               ; preds = %60
  %85 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 4, i32 0, i32 1
  %86 = load %"class.base::OnceCallback.4"*, %"class.base::OnceCallback.4"** %85, align 8
  %87 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %88 = load %"class.base::OnceCallback.4"*, %"class.base::OnceCallback.4"** %87, align 8
  %89 = icmp ult %"class.base::OnceCallback.4"* %86, %88
  br i1 %89, label %90, label %98

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %2, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.base::OnceCallback.4"* %2 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.base::OnceCallback.4"* %86 to i64*
  store i64 %93, i64* %94, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %91, align 8
  %95 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %86, i64 1
  %96 = ptrtoint %"class.base::OnceCallback.4"* %95 to i64
  %97 = bitcast %"class.base::OnceCallback.4"** %85 to i64*
  store i64 %96, i64* %97, align 8
  br label %121

98:                                               ; preds = %84
  %99 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 4
  tail call void @_ZNSt3__16vectorIN4base12OnceCallbackIFvvEEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.2"* %99, %"class.base::OnceCallback.4"* dereferenceable(8) %2) #10
  br label %121

100:                                              ; preds = %60
  %101 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #10
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %1) #10
  call void @_ZN4mojo16ReportBadMessageERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #10
  %102 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  call void @_ZdlPv(i8* %108) #11
  br label %109

109:                                              ; preds = %100, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #10
  %110 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %111 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %110, align 8
  %112 = icmp eq %"class.base::internal::BindStateBase"* %111, null
  br i1 %112, label %121, label %113

113:                                              ; preds = %109
  %114 = ptrtoint %"class.base::internal::BindStateBase"* %111 to i64
  %115 = bitcast %"class.base::OnceCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #10
  %116 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %114, i64* %116, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %110, align 8
  %117 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  %118 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %111, i64 0, i32 1
  %119 = bitcast void ()** %118 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)**
  %120 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)** %119, align 8
  call void %120(%"class.base::internal::BindStateBase"* nonnull %111, %"class.std::__1::basic_string"* dereferenceable(24) %1) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %117) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #10
  br label %121

121:                                              ; preds = %72, %109, %98, %90, %58, %50, %32, %33, %113, %76, %60, %61, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK7content23MojoBinderPolicyApplier19GetMojoBinderPolicyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.content::MojoBinderPolicyApplier"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 1
  %4 = load %"class.content::MojoBinderPolicyMapImpl"*, %"class.content::MojoBinderPolicyMapImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = tail call i32 @_ZNK7content23MojoBinderPolicyMapImpl19GetMojoBinderPolicyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_16MojoBinderPolicyE(%"class.content::MojoBinderPolicyMapImpl"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %1, i32 %6) #10
  ret i32 %7
}

declare void @_ZN4mojo16ReportBadMessageERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7content23MojoBinderPolicyApplier17PrepareToGrantAllEv(%"class.content::MojoBinderPolicyApplier"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 3
  store i32 1, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content23MojoBinderPolicyApplier8GrantAllEv(%"class.content::MojoBinderPolicyApplier"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.4", align 8
  %3 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 3
  store i32 2, i32* %3, align 8
  %4 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 4, i32 0, i32 0
  %5 = load %"class.base::OnceCallback.4"*, %"class.base::OnceCallback.4"** %4, align 8
  %6 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 4, i32 0, i32 1
  %7 = load %"class.base::OnceCallback.4"*, %"class.base::OnceCallback.4"** %6, align 8
  %8 = icmp eq %"class.base::OnceCallback.4"* %5, %7
  br i1 %8, label %22, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.base::OnceCallback.4"* %2 to i8*
  %11 = bitcast %"class.base::OnceCallback.4"* %2 to i64*
  %12 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %2, i64 0, i32 0
  br label %24

13:                                               ; preds = %24
  %14 = load %"class.base::OnceCallback.4"*, %"class.base::OnceCallback.4"** %4, align 8
  %15 = load %"class.base::OnceCallback.4"*, %"class.base::OnceCallback.4"** %6, align 8
  %16 = icmp eq %"class.base::OnceCallback.4"* %15, %14
  br i1 %16, label %22, label %17

17:                                               ; preds = %13, %17
  %18 = phi %"class.base::OnceCallback.4"* [ %19, %17 ], [ %15, %13 ]
  %19 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %18, i64 -1
  %20 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %19, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %20) #10
  %21 = icmp eq %"class.base::OnceCallback.4"* %19, %14
  br i1 %21, label %22, label %17

22:                                               ; preds = %17, %1, %13
  %23 = phi %"class.base::OnceCallback.4"* [ %14, %13 ], [ %5, %1 ], [ %14, %17 ]
  store %"class.base::OnceCallback.4"* %23, %"class.base::OnceCallback.4"** %6, align 8
  ret void

24:                                               ; preds = %9, %24
  %25 = phi %"class.base::OnceCallback.4"* [ %5, %9 ], [ %33, %24 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %26 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.base::OnceCallback.4"* %25 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %26, align 8
  %29 = inttoptr i64 %28 to %"class.base::internal::BindStateBase"*
  %30 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %29, i64 0, i32 1
  %31 = bitcast void ()** %30 to void (%"class.base::internal::BindStateBase"*)**
  %32 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %31, align 8
  call void %32(%"class.base::internal::BindStateBase"* %29) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  %33 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %25, i64 1
  %34 = icmp eq %"class.base::OnceCallback.4"* %33, %7
  br i1 %34, label %13, label %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content23MojoBinderPolicyApplier19DropDeferredBindersEv(%"class.content::MojoBinderPolicyApplier"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.base::OnceCallback.4"*, %"class.base::OnceCallback.4"** %2, align 8
  %4 = getelementptr inbounds %"class.content::MojoBinderPolicyApplier", %"class.content::MojoBinderPolicyApplier"* %0, i64 0, i32 4, i32 0, i32 1
  %5 = load %"class.base::OnceCallback.4"*, %"class.base::OnceCallback.4"** %4, align 8
  %6 = icmp eq %"class.base::OnceCallback.4"* %5, %3
  br i1 %6, label %12, label %7

7:                                                ; preds = %1, %7
  %8 = phi %"class.base::OnceCallback.4"* [ %9, %7 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %8, i64 -1
  %10 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %9, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %10) #10
  %11 = icmp eq %"class.base::OnceCallback.4"* %9, %3
  br i1 %11, label %12, label %7

12:                                               ; preds = %7, %1
  store %"class.base::OnceCallback.4"* %3, %"class.base::OnceCallback.4"** %4, align 8
  ret void
}

declare i32 @_ZNK7content23MojoBinderPolicyMapImpl19GetMojoBinderPolicyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_16MojoBinderPolicyE(%"class.content::MojoBinderPolicyMapImpl"*, %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base12OnceCallbackIFvvEEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.2"*, %"class.base::OnceCallback.4"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::OnceCallback.4"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback.4"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.base::OnceCallback.4"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::OnceCallback.4"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %36, i64 %35
  %39 = ptrtoint %"class.base::OnceCallback.4"* %38 to i64
  %40 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.base::OnceCallback.4"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.base::OnceCallback.4"* %37 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %40, align 8
  %44 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %37, i64 1
  %45 = ptrtoint %"class.base::OnceCallback.4"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.base::OnceCallback.4"*, %"class.base::OnceCallback.4"** %46, align 8
  %48 = ptrtoint %"class.base::OnceCallback.4"* %47 to i64
  %49 = load %"class.base::OnceCallback.4"*, %"class.base::OnceCallback.4"** %3, align 8
  %50 = icmp eq %"class.base::OnceCallback.4"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.base::internal::BindStateBase"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.base::OnceCallback.4"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.base::OnceCallback.4"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %60, i64 -1
  %64 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %61, i64 -1
  %65 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.base::OnceCallback.4"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.base::OnceCallback.4"* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %65, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !2

71:                                               ; preds = %59, %51
  %72 = phi %"class.base::OnceCallback.4"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.base::OnceCallback.4"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.base::OnceCallback.4"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.base::OnceCallback.4"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.base::OnceCallback.4"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %77, i64 -1
  %80 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %78, i64 -1
  %81 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.base::OnceCallback.4"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.base::OnceCallback.4"* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %81, align 8
  %85 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %77, i64 -2
  %86 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %78, i64 -2
  %87 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.base::OnceCallback.4"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.base::OnceCallback.4"* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %87, align 8
  %91 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %77, i64 -3
  %92 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %78, i64 -3
  %93 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.base::OnceCallback.4"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.base::OnceCallback.4"* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %93, align 8
  %97 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %77, i64 -4
  %98 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %78, i64 -4
  %99 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.base::OnceCallback.4"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.base::OnceCallback.4"* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %99, align 8
  %103 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %77, i64 -5
  %104 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %78, i64 -5
  %105 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.base::OnceCallback.4"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.base::OnceCallback.4"* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %105, align 8
  %109 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %77, i64 -6
  %110 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %78, i64 -6
  %111 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.base::OnceCallback.4"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.base::OnceCallback.4"* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %111, align 8
  %115 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %77, i64 -7
  %116 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %78, i64 -7
  %117 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.base::OnceCallback.4"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.base::OnceCallback.4"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %117, align 8
  %121 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %77, i64 -8
  %122 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %78, i64 -8
  %123 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.base::OnceCallback.4"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.base::OnceCallback.4"* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %123, align 8
  %127 = icmp eq %"class.base::OnceCallback.4"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.base::OnceCallback.4"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.base::OnceCallback.4"*, %"class.base::OnceCallback.4"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.base::OnceCallback.4"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.base::OnceCallback.4"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.base::OnceCallback.4"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.base::OnceCallback.4"*
  %138 = icmp eq %"class.base::OnceCallback.4"* %133, %137
  br i1 %138, label %144, label %139

139:                                              ; preds = %132, %139
  %140 = phi %"class.base::OnceCallback.4"* [ %141, %139 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %140, i64 -1
  %142 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %141, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %142) #10
  %143 = icmp eq %"class.base::OnceCallback.4"* %141, %137
  br i1 %143, label %144, label %139

144:                                              ; preds = %139, %132
  %145 = icmp eq i64 %135, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %147) #11
  br label %148

148:                                              ; preds = %144, %146
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
