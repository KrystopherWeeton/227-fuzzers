; ModuleID = '../../third_party/blink/renderer/platform/network/encoded_form_data.cc'
source_filename = "../../third_party/blink/renderer/platform/network/encoded_form_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.1, i64, i64, %"class.absl::optional", %class.scoped_refptr.7 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.1 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.7 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type { %"class.WTF::RefCounted", %"class.mojo::Remote" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.178" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.8, %"class.std::__1::unique_ptr.127", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.10, i32 }>
%class.scoped_refptr.8 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.10, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.94", %"class.absl::optional.99", %"class.absl::optional.55", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.118", i8, [7 x i8], %class.scoped_refptr.10, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.9" }>
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.12 }
%union.anon.12 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.17", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.24", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.25" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.10, %"class.std::__1::unique_ptr.32", %"class.absl::optional.41", %"struct.std::__1::atomic.51", i8, i8, i8, i8, i32, i32, %"class.absl::optional.55", %"class.std::__1::unique_ptr.60", i8, i64, %class.scoped_refptr.90, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.93" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.30 }
%class.scoped_refptr.30 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.31", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.31" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.10, i8, %"class.mojo::ScopedHandleBase.35", %class.scoped_refptr.36, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.37" }
%"class.mojo::ScopedHandleBase.35" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.36 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.37" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.41" = type { %"class.absl::optional_internal::optional_data.42" }
%"class.absl::optional_internal::optional_data.42" = type { %"class.absl::optional_internal::optional_data_base.43" }
%"class.absl::optional_internal::optional_data_base.43" = type { %"class.absl::optional_internal::optional_data_dtor_base.44" }
%"class.absl::optional_internal::optional_data_dtor_base.44" = type { i8, %union.anon.45 }
%union.anon.45 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.46", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.46" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__cxx_atomic_impl.53" }
%"struct.std::__1::__cxx_atomic_impl.53" = type { %"struct.std::__1::__cxx_atomic_base_impl.54" }
%"struct.std::__1::__cxx_atomic_base_impl.54" = type { i8 }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.63", i8, i64, %class.scoped_refptr.64, %class.scoped_refptr.86 }
%"class.base::RepeatingCallback.63" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.64 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.65", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.75", i8, [7 x i8] }>
%"class.base::RefCounted.65" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.66 }
%class.scoped_refptr.66 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.67", %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { i64 }
%"class.std::__1::map.75" = type { %"class.std::__1::__tree.76" }
%"class.std::__1::__tree.76" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.77", %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%class.scoped_refptr.86 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.90 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.91 }
%class.scoped_refptr.91 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.184", [4 x i8], %"class.base::RepeatingCallback.130", %class.scoped_refptr.10, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.184" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.130" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.92 }
%class.scoped_refptr.92 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.93" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.94" = type { %"class.absl::optional_internal::optional_data.95" }
%"class.absl::optional_internal::optional_data.95" = type { %"class.absl::optional_internal::optional_data_base.96" }
%"class.absl::optional_internal::optional_data_base.96" = type { %"class.absl::optional_internal::optional_data_dtor_base.97" }
%"class.absl::optional_internal::optional_data_dtor_base.97" = type { i8, %union.anon.98 }
%union.anon.98 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.99" = type { %"class.absl::optional_internal::optional_data.100" }
%"class.absl::optional_internal::optional_data.100" = type { %"class.absl::optional_internal::optional_data_base.101" }
%"class.absl::optional_internal::optional_data_base.101" = type { %"class.absl::optional_internal::optional_data_dtor_base.102" }
%"class.absl::optional_internal::optional_data_dtor_base.102" = type { i8, [7 x i8], %union.anon.103 }
%union.anon.103 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.55" = type { %"class.absl::optional_internal::optional_data.56" }
%"class.absl::optional_internal::optional_data.56" = type { %"class.absl::optional_internal::optional_data_base.57" }
%"class.absl::optional_internal::optional_data_base.57" = type { %"class.absl::optional_internal::optional_data_dtor_base.58" }
%"class.absl::optional_internal::optional_data_dtor_base.58" = type { i8, %union.anon.59 }
%union.anon.59 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.104 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.104 = type { %"class.std::__1::map.106" }
%"class.std::__1::map.106" = type { %"class.std::__1::__tree.107" }
%"class.std::__1::__tree.107" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.117"*, i64 }
%"class.std::__1::unique_ptr.117" = type opaque
%"class.std::__1::map.118" = type { %"class.std::__1::__tree.119" }
%"class.std::__1::__tree.119" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.130", %"class.base::OnceCallback.131", %"class.absl::optional.132", %"class.absl::optional.137", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.145", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.153", %"class.std::__1::map.164", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.173", i8, %class.scoped_refptr.10, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.174" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.131" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.132" = type { %"class.absl::optional_internal::optional_data.133" }
%"class.absl::optional_internal::optional_data.133" = type { %"class.absl::optional_internal::optional_data_base.134" }
%"class.absl::optional_internal::optional_data_base.134" = type { %"class.absl::optional_internal::optional_data_dtor_base.135" }
%"class.absl::optional_internal::optional_data_dtor_base.135" = type { i8, %union.anon.136 }
%union.anon.136 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.137" = type { %"class.absl::optional_internal::optional_data.138" }
%"class.absl::optional_internal::optional_data.138" = type { %"class.absl::optional_internal::optional_data_base.139" }
%"class.absl::optional_internal::optional_data_base.139" = type { %"class.absl::optional_internal::optional_data_dtor_base.140" }
%"class.absl::optional_internal::optional_data_dtor_base.140" = type { i8, %union.anon.141 }
%union.anon.141 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.10, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.143" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.142" }
%"class.base::time_internal::TimeBase.142" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.143" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.144 }
%class.scoped_refptr.144 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.148", %class.scoped_refptr.149 }
%"class.base::RepeatingCallback.148" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.149 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.9", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.153" = type { %"class.std::__1::__tree.154" }
%"class.std::__1::__tree.154" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.155", %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::map.164" = type { %"class.std::__1::__tree.165" }
%"class.std::__1::__tree.165" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.166", %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.base::OnceCallback.173" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.174" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.10 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.11" }>
%"class.base::RefCountedThreadSafe.11" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.network::mojom::blink::DataPipeGetterProxy"* }
%"class.network::mojom::blink::DataPipeGetterProxy" = type { %"class.network::mojom::blink::DataPipeGetter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::DataPipeGetter" = type { i32 (...)** }
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted.185", [4 x i8], %"class.WTF::Vector.187", i64, %"class.WTF::Vector", i8, [7 x i8] }>
%"class.WTF::RefCounted.185" = type { %"class.base::RefCounted.186" }
%"class.base::RefCounted.186" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.187" = type { %"class.WTF::VectorBuffer.188" }
%"class.WTF::VectorBuffer.188" = type { %"class.WTF::VectorBufferBase.189" }
%"class.WTF::VectorBufferBase.189" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.mojo::internal::InterfacePtrStateBase" = type <{ %class.scoped_refptr.8, %"class.std::__1::unique_ptr.127", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.10, i32, [4 x i8] }>
%"class.mojo::PendingRemote.193" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%struct.MojoCreateMessagePipeOptions = type { i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::TextEncoding" = type { i8* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.11", [4 x i8] }>

$_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEEaSERKS2_ = comdat any

$_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15FormDataElementEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm = comdat any

$_ZN4mojo6RemoteIN7network5mojom5blink14DataPipeGetterEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN3WTF6VectorIN5blink15FormDataElementELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink15FormDataElementELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink15FormDataElementELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15FormDataElementEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FormDataElement]\00", align 1
@_ZN7network5mojom5blink14DataPipeGetter5Name_E = external constant [0 x i8], align 1
@_ZTVN7network5mojom5blink31DataPipeGetterResponseValidatorE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1

@_ZN5blink15FormDataElementC1Ev = hidden unnamed_addr alias void (%"class.blink::FormDataElement"*), void (%"class.blink::FormDataElement"*)* @_ZN5blink15FormDataElementC2Ev
@_ZN5blink15FormDataElementC1ERKN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEE = hidden unnamed_addr alias void (%"class.blink::FormDataElement"*, %"class.WTF::Vector"*), void (%"class.blink::FormDataElement"*, %"class.WTF::Vector"*)* @_ZN5blink15FormDataElementC2ERKN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEE
@_ZN5blink15FormDataElementC1ERKN3WTF6StringEllRKN4absl8optionalIN4base4TimeEEE = hidden unnamed_addr alias void (%"class.blink::FormDataElement"*, %"class.WTF::String"*, i64, i64, %"class.absl::optional"*), void (%"class.blink::FormDataElement"*, %"class.WTF::String"*, i64, i64, %"class.absl::optional"*)* @_ZN5blink15FormDataElementC2ERKN3WTF6StringEllRKN4absl8optionalIN4base4TimeEEE
@_ZN5blink15FormDataElementC1ERKN3WTF6StringE13scoped_refptrINS_14BlobDataHandleEE = hidden unnamed_addr alias void (%"class.blink::FormDataElement"*, %"class.WTF::String"*, %"class.blink::BlobDataHandle"*), void (%"class.blink::FormDataElement"*, %"class.WTF::String"*, %"class.blink::BlobDataHandle"*)* @_ZN5blink15FormDataElementC2ERKN3WTF6StringE13scoped_refptrINS_14BlobDataHandleEE
@_ZN5blink15FormDataElementC1E13scoped_refptrINS_21WrappedDataPipeGetterEE = hidden unnamed_addr alias void (%"class.blink::FormDataElement"*, %"class.blink::WrappedDataPipeGetter"*), void (%"class.blink::FormDataElement"*, %"class.blink::WrappedDataPipeGetter"*)* @_ZN5blink15FormDataElementC2E13scoped_refptrINS_21WrappedDataPipeGetterEE
@_ZN5blink15FormDataElementC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::FormDataElement"*, %"class.blink::FormDataElement"*), void (%"class.blink::FormDataElement"*, %"class.blink::FormDataElement"*)* @_ZN5blink15FormDataElementC2ERKS0_
@_ZN5blink15FormDataElementC1EOS0_ = hidden unnamed_addr alias void (%"class.blink::FormDataElement"*, %"class.blink::FormDataElement"*), void (%"class.blink::FormDataElement"*, %"class.blink::FormDataElement"*)* @_ZN5blink15FormDataElementC2EOS0_
@_ZN5blink15FormDataElementD1Ev = hidden unnamed_addr alias void (%"class.blink::FormDataElement"*), void (%"class.blink::FormDataElement"*)* @_ZN5blink15FormDataElementD2Ev
@_ZN5blink15EncodedFormDataD1Ev = hidden unnamed_addr alias void (%"class.blink::EncodedFormData"*), void (%"class.blink::EncodedFormData"*)* @_ZN5blink15EncodedFormDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15FormDataElementC2Ev(%"class.blink::FormDataElement"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 8, i32 0
  store %"class.blink::WrappedDataPipeGetter"* null, %"class.blink::WrappedDataPipeGetter"** %5, align 8
  %6 = bitcast %"class.WTF::Vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15FormDataElementC2ERKN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEE(%"class.blink::FormDataElement"* nocapture, %"class.WTF::Vector"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 0
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %7, align 8
  %8 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %2
  %11 = zext i32 %6 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %11) #11
  %13 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %12) #11
  %14 = ptrtoint i8* %13 to i64
  %15 = bitcast %"class.WTF::Vector"* %4 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = trunc i64 %12 to i32
  store i32 %16, i32* %8, align 8
  br label %17

17:                                               ; preds = %10, %2
  %18 = phi i8* [ null, %2 ], [ %13, %10 ]
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp ne i8* %18, null
  %25 = icmp ne i8* %23, null
  %26 = and i1 %24, %25
  br i1 %26, label %27, label %30, !prof !2

27:                                               ; preds = %17
  %28 = load i32, i32* %19, align 4
  %29 = zext i32 %28 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* nonnull align 1 %23, i64 %29, i1 false) #11
  br label %30

30:                                               ; preds = %17, %27
  %31 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 2, i32 0, i32 0
  %32 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 8, i32 0
  store %"class.blink::WrappedDataPipeGetter"* null, %"class.blink::WrappedDataPipeGetter"** %33, align 8
  %34 = bitcast %"class.WTF::StringImpl"** %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15FormDataElement27IsSafeToSendToAnotherThreadEv(%"class.blink::FormDataElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 2
  %3 = tail call zeroext i1 @_ZNK3WTF6String27IsSafeToSendToAnotherThreadEv(%"class.WTF::String"* %2) #11
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 3
  %6 = tail call zeroext i1 @_ZNK3WTF6String27IsSafeToSendToAnotherThreadEv(%"class.WTF::String"* %5) #11
  br label %7

7:                                                ; preds = %4, %1
  %8 = phi i1 [ false, %1 ], [ %6, %4 ]
  ret i1 %8
}

declare zeroext i1 @_ZNK3WTF6String27IsSafeToSendToAnotherThreadEv(%"class.WTF::String"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15FormDataElementC2ERKN3WTF6StringEllRKN4absl8optionalIN4base4TimeEEE(%"class.blink::FormDataElement"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), i64, i64, %"class.absl::optional"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 0
  store i32 1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::Vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #11
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #11
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !3

27:                                               ; preds = %18
  tail call void @llvm.trap() #11
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %5, %13, %28
  %31 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 3, i32 0, i32 0
  %32 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 5
  %33 = bitcast %"class.WTF::StringImpl"** %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false)
  store i64 %2, i64* %32, align 8
  %34 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 6
  store i64 %3, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false)
  %37 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 8, i32 0
  store %"class.blink::WrappedDataPipeGetter"* null, %"class.blink::WrappedDataPipeGetter"** %37, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15FormDataElementC2ERKN3WTF6StringE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::FormDataElement"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::BlobDataHandle"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.blink::BlobDataHandle"* %2 to i64
  %5 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 0
  store i32 2, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %8 = bitcast %"class.WTF::Vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false)
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %10 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #11
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %3
  %30 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 4
  %31 = bitcast %class.scoped_refptr.1* %30 to i64*
  store i64 %4, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 8, i32 0
  store %"class.blink::WrappedDataPipeGetter"* null, %"class.blink::WrappedDataPipeGetter"** %33, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15FormDataElementC2E13scoped_refptrINS_21WrappedDataPipeGetterEE(%"class.blink::FormDataElement"* nocapture, %"class.blink::WrappedDataPipeGetter"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::WrappedDataPipeGetter"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 0
  store i32 3, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 8
  %8 = bitcast %class.scoped_refptr.7* %7 to i64*
  %9 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 40, i1 false)
  store i64 %3, i64* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15FormDataElementC2ERKS0_(%"class.blink::FormDataElement"* nocapture, %"class.blink::FormDataElement"* nocapture readonly dereferenceable(88)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %10, align 8
  %11 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %2
  %14 = zext i32 %9 to i64
  %15 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %14) #11
  %16 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %15) #11
  %17 = ptrtoint i8* %16 to i64
  %18 = bitcast %"class.WTF::Vector"* %7 to i64*
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = trunc i64 %15 to i32
  store i32 %19, i32* %11, align 8
  br label %20

20:                                               ; preds = %13, %2
  %21 = phi i8* [ null, %2 ], [ %16, %13 ]
  %22 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = icmp ne i8* %21, null
  %28 = icmp ne i8* %26, null
  %29 = and i1 %27, %28
  br i1 %29, label %30, label %33, !prof !2

30:                                               ; preds = %20
  %31 = load i32, i32* %22, align 4
  %32 = zext i32 %31 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* nonnull align 1 %26, i64 %32, i1 false) #11
  br label %33

33:                                               ; preds = %20, %30
  %34 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #11
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  tail call void @llvm.trap() #11
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %33, %38, %53
  %56 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 3, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %58, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %59, label %77, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %77

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i33
  %69 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #11
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !3

74:                                               ; preds = %65
  tail call void @llvm.trap() #11
  unreachable

75:                                               ; preds = %65
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %66, align 4
  br label %77

77:                                               ; preds = %55, %60, %75
  %78 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 4, i32 0
  %79 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 4, i32 0
  store %"class.blink::BlobDataHandle"* %79, %"class.blink::BlobDataHandle"** %80, align 8
  %81 = icmp eq %"class.blink::BlobDataHandle"* %79, null
  br i1 %81, label %89, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 1 monotonic
  %85 = icmp sgt i32 %84, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %82
  %87 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #11
  %88 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #11
  br label %89

89:                                               ; preds = %77, %82, %86
  %90 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 5
  %91 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 5
  %92 = bitcast i64* %90 to i8*
  %93 = bitcast i64* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 32, i1 false)
  %94 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 8, i32 0
  %95 = load %"class.blink::WrappedDataPipeGetter"*, %"class.blink::WrappedDataPipeGetter"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 8, i32 0
  store %"class.blink::WrappedDataPipeGetter"* %95, %"class.blink::WrappedDataPipeGetter"** %96, align 8
  %97 = icmp eq %"class.blink::WrappedDataPipeGetter"* %95, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %89
  %99 = getelementptr inbounds %"class.blink::WrappedDataPipeGetter", %"class.blink::WrappedDataPipeGetter"* %95, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %99) #11
  br label %100

100:                                              ; preds = %89, %98
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15FormDataElementC2EOS0_(%"class.blink::FormDataElement"* nocapture, %"class.blink::FormDataElement"* nocapture dereferenceable(88)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = bitcast %"class.WTF::Vector"* %7 to i64*
  %11 = bitcast %"class.WTF::Vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #11
  %12 = load i64, i64* %10, align 8
  %13 = bitcast %"class.WTF::Vector"* %6 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = load i32, i32* %8, align 4
  %16 = load i32, i32* %14, align 4
  store i32 %16, i32* %8, align 4
  store i32 %15, i32* %14, align 4
  %17 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %9, align 4
  %19 = load i32, i32* %17, align 4
  store i32 %19, i32* %9, align 4
  store i32 %18, i32* %17, align 4
  %20 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 2
  %21 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 2
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %23 = bitcast %"class.WTF::String"* %21 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.WTF::String"* %20 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %26 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 3
  %27 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 3
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = bitcast %"class.WTF::String"* %27 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.WTF::String"* %26 to i64*
  store i64 %30, i64* %31, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %28, align 8
  %32 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 4
  %33 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 4
  %34 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %33, i64 0, i32 0
  %35 = bitcast %class.scoped_refptr.1* %33 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %class.scoped_refptr.1* %32 to i64*
  store i64 %36, i64* %37, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %34, align 8
  %38 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 5
  %39 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 5
  %40 = bitcast i64* %38 to i8*
  %41 = bitcast i64* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 32, i1 false)
  %42 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 8
  %43 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 8
  %44 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %43, i64 0, i32 0
  %45 = bitcast %class.scoped_refptr.7* %43 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %class.scoped_refptr.7* %42 to i64*
  store i64 %46, i64* %47, align 8
  store %"class.blink::WrappedDataPipeGetter"* null, %"class.blink::WrappedDataPipeGetter"** %44, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15FormDataElementD2Ev(%"class.blink::FormDataElement"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 8, i32 0
  %3 = load %"class.blink::WrappedDataPipeGetter"*, %"class.blink::WrappedDataPipeGetter"** %2, align 8
  %4 = icmp eq %"class.blink::WrappedDataPipeGetter"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::WrappedDataPipeGetter", %"class.blink::WrappedDataPipeGetter"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::WrappedDataPipeGetter", %"class.blink::WrappedDataPipeGetter"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #11
  %8 = getelementptr inbounds %"class.blink::WrappedDataPipeGetter", %"class.blink::WrappedDataPipeGetter"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %25

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %6, i64 2
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %6, i64 12
  %14 = bitcast %"class.base::RefCounted"* %13 to %"class.network::mojom::blink::DataPipeGetterProxy"**
  %15 = load %"class.network::mojom::blink::DataPipeGetterProxy"*, %"class.network::mojom::blink::DataPipeGetterProxy"** %14, align 8
  store %"class.network::mojom::blink::DataPipeGetterProxy"* null, %"class.network::mojom::blink::DataPipeGetterProxy"** %14, align 8
  %16 = icmp eq %"class.network::mojom::blink::DataPipeGetterProxy"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.network::mojom::blink::DataPipeGetterProxy"* %15 to void (%"class.network::mojom::blink::DataPipeGetterProxy"*)***
  %19 = load void (%"class.network::mojom::blink::DataPipeGetterProxy"*)**, void (%"class.network::mojom::blink::DataPipeGetterProxy"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.network::mojom::blink::DataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::DataPipeGetterProxy"*)** %19, i64 1
  %21 = load void (%"class.network::mojom::blink::DataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::DataPipeGetterProxy"*)** %20, align 8
  tail call void %21(%"class.network::mojom::blink::DataPipeGetterProxy"* nonnull %15) #11
  br label %22

22:                                               ; preds = %17, %11
  %23 = bitcast %"class.base::RefCounted"* %12 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %23) #11
  %24 = bitcast %"class.blink::WrappedDataPipeGetter"* %3 to i8*
  tail call void @free(i8* %24) #11
  br label %25

25:                                               ; preds = %1, %5, %22
  %26 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 4, i32 0
  %27 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %26, align 8
  %28 = icmp eq %"class.blink::BlobDataHandle"* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %35

33:                                               ; preds = %29
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %27) #11
  %34 = bitcast %"class.blink::BlobDataHandle"* %27 to i8*
  tail call void @free(i8* %34) #11
  br label %35

35:                                               ; preds = %25, %29, %33
  %36 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 3, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #11
  br label %52

52:                                               ; preds = %35, %48, %51
  %53 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 2, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #11
  br label %69

69:                                               ; preds = %52, %65, %68
  %70 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = icmp eq i8* %71, null
  br i1 %72, label %79, label %73, !prof !2

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %78, label %77, !prof !3

77:                                               ; preds = %73
  store i32 0, i32* %74, align 4
  br label %78

78:                                               ; preds = %77, %73
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %71) #11
  store i8* null, i8** %70, align 8
  br label %79

79:                                               ; preds = %69, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %"class.blink::FormDataElement"* @_ZN5blink15FormDataElementaSERKS0_(%"class.blink::FormDataElement"* returned, %"class.blink::FormDataElement"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 0
  store i32 %5, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 1
  %9 = tail call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector"* %7, %"class.WTF::Vector"* dereferenceable(16) %8)
  %10 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #11
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !3

28:                                               ; preds = %19
  tail call void @llvm.trap() #11
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %29, %14, %2
  %32 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %33 = bitcast %"class.WTF::String"* %10 to i64*
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  store i64 %32, i64* %33, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #11
  br label %50

50:                                               ; preds = %31, %46, %49
  %51 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 3
  %52 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 3, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %72, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %72

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = zext i32 %62 to i33
  %64 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %63, i33 1) #11
  %65 = extractvalue { i33, i1 } %64, 1
  %66 = extractvalue { i33, i1 } %64, 0
  %67 = icmp slt i33 %66, 0
  %68 = or i1 %65, %67
  br i1 %68, label %69, label %70, !prof !3

69:                                               ; preds = %60
  tail call void @llvm.trap() #11
  unreachable

70:                                               ; preds = %60
  %71 = trunc i33 %66 to i32
  store i32 %71, i32* %61, align 4
  br label %72

72:                                               ; preds = %70, %55, %50
  %73 = ptrtoint %"class.WTF::StringImpl"* %53 to i64
  %74 = bitcast %"class.WTF::String"* %51 to i64*
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %51, i64 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  store i64 %73, i64* %74, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #11
  br label %91

91:                                               ; preds = %72, %87, %90
  %92 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 4
  %93 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 4, i32 0
  %94 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %93, align 8
  %95 = icmp eq %"class.blink::BlobDataHandle"* %94, null
  br i1 %95, label %103, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = atomicrmw add i32* %97, i32 1 monotonic
  %99 = icmp sgt i32 %98, 0
  br i1 %99, label %103, label %100

100:                                              ; preds = %96
  %101 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #11
  %102 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #11
  br label %103

103:                                              ; preds = %91, %96, %100
  %104 = ptrtoint %"class.blink::BlobDataHandle"* %94 to i64
  %105 = bitcast %class.scoped_refptr.1* %92 to i64*
  %106 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %92, i64 0, i32 0
  %107 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %106, align 8
  store i64 %104, i64* %105, align 8
  %108 = icmp eq %"class.blink::BlobDataHandle"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = atomicrmw sub i32* %110, i32 1 acq_rel
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %113, label %115

113:                                              ; preds = %109
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %107) #11
  %114 = bitcast %"class.blink::BlobDataHandle"* %107 to i8*
  call void @free(i8* %114) #11
  br label %115

115:                                              ; preds = %103, %109, %113
  %116 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 5
  %117 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 5
  %118 = bitcast i64* %116 to i8*
  %119 = bitcast i64* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %119, i64 32, i1 false)
  %120 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 8
  %121 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 8, i32 0
  %122 = load %"class.blink::WrappedDataPipeGetter"*, %"class.blink::WrappedDataPipeGetter"** %121, align 8
  %123 = icmp eq %"class.blink::WrappedDataPipeGetter"* %122, null
  br i1 %123, label %126, label %124

124:                                              ; preds = %115
  %125 = getelementptr inbounds %"class.blink::WrappedDataPipeGetter", %"class.blink::WrappedDataPipeGetter"* %122, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %125) #11
  br label %126

126:                                              ; preds = %115, %124
  %127 = ptrtoint %"class.blink::WrappedDataPipeGetter"* %122 to i64
  %128 = bitcast %class.scoped_refptr.7* %120 to i64*
  %129 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %120, i64 0, i32 0
  %130 = load %"class.blink::WrappedDataPipeGetter"*, %"class.blink::WrappedDataPipeGetter"** %129, align 8
  store i64 %127, i64* %128, align 8
  %131 = icmp eq %"class.blink::WrappedDataPipeGetter"* %130, null
  br i1 %131, label %152, label %132

132:                                              ; preds = %126
  %133 = getelementptr inbounds %"class.blink::WrappedDataPipeGetter", %"class.blink::WrappedDataPipeGetter"* %130, i64 0, i32 0, i32 0
  %134 = getelementptr inbounds %"class.blink::WrappedDataPipeGetter", %"class.blink::WrappedDataPipeGetter"* %130, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %134) #11
  %135 = getelementptr inbounds %"class.blink::WrappedDataPipeGetter", %"class.blink::WrappedDataPipeGetter"* %130, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %152

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %133, i64 2
  %140 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %133, i64 12
  %141 = bitcast %"class.base::RefCounted"* %140 to %"class.network::mojom::blink::DataPipeGetterProxy"**
  %142 = load %"class.network::mojom::blink::DataPipeGetterProxy"*, %"class.network::mojom::blink::DataPipeGetterProxy"** %141, align 8
  store %"class.network::mojom::blink::DataPipeGetterProxy"* null, %"class.network::mojom::blink::DataPipeGetterProxy"** %141, align 8
  %143 = icmp eq %"class.network::mojom::blink::DataPipeGetterProxy"* %142, null
  br i1 %143, label %149, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.network::mojom::blink::DataPipeGetterProxy"* %142 to void (%"class.network::mojom::blink::DataPipeGetterProxy"*)***
  %146 = load void (%"class.network::mojom::blink::DataPipeGetterProxy"*)**, void (%"class.network::mojom::blink::DataPipeGetterProxy"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.network::mojom::blink::DataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::DataPipeGetterProxy"*)** %146, i64 1
  %148 = load void (%"class.network::mojom::blink::DataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::DataPipeGetterProxy"*)** %147, align 8
  call void %148(%"class.network::mojom::blink::DataPipeGetterProxy"* nonnull %142) #11
  br label %149

149:                                              ; preds = %144, %138
  %150 = bitcast %"class.base::RefCounted"* %139 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %150) #11
  %151 = bitcast %"class.blink::WrappedDataPipeGetter"* %130 to i8*
  call void @free(i8* %151) #11
  br label %152

152:                                              ; preds = %126, %132, %149
  ret %"class.blink::FormDataElement"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector"* %1, %0
  br i1 %3, label %79, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i32 %8, i32* %5, align 4
  br label %54

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %8, %13
  br i1 %14, label %15, label %54

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %19, %17
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %22) #11
  %24 = load i32, i32* %7, align 4
  %25 = load i32, i32* %12, align 8
  br label %26

26:                                               ; preds = %15, %20
  %27 = phi i32 [ 0, %15 ], [ %25, %20 ]
  %28 = phi i32 [ %8, %15 ], [ %24, %20 ]
  %29 = icmp ult i32 %27, %28
  br i1 %29, label %30, label %54, !prof !2

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  %34 = zext i32 %28 to i64
  %35 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %34) #11
  %36 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %35) #11
  %37 = ptrtoint i8* %36 to i64
  br i1 %33, label %38, label %41

38:                                               ; preds = %30
  %39 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %39 monotonic, align 8
  %40 = trunc i64 %35 to i32
  store i32 %40, i32* %12, align 8
  br label %54

41:                                               ; preds = %30
  %42 = load i8*, i8** %31, align 8
  %43 = icmp ne i8* %36, null
  %44 = icmp ne i8* %42, null
  %45 = and i1 %43, %44
  br i1 %45, label %46, label %50, !prof !2

46:                                               ; preds = %41
  %47 = load i32, i32* %5, align 4
  %48 = zext i32 %47 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* nonnull align 1 %42, i64 %48, i1 false) #11
  %49 = load i8*, i8** %31, align 8
  br label %50

50:                                               ; preds = %46, %41
  %51 = phi i8* [ %42, %41 ], [ %49, %46 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #11
  %52 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %52 monotonic, align 8
  %53 = trunc i64 %35 to i32
  store i32 %53, i32* %12, align 8
  br label %54

54:                                               ; preds = %50, %38, %26, %11, %10
  %55 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = load i32, i32* %5, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %60, i8* align 1 %56, i64 %58, i1 false) #11
  %61 = load i8*, i8** %55, align 8
  %62 = load i32, i32* %5, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %61, i64 %63
  %65 = load i8*, i8** %59, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %63
  %67 = icmp ne i8* %66, null
  %68 = icmp ne i8* %64, null
  %69 = and i1 %68, %67
  br i1 %69, label %70, label %77, !prof !2

70:                                               ; preds = %54
  %71 = load i32, i32* %7, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %61, i64 %72
  %74 = ptrtoint i8* %73 to i64
  %75 = ptrtoint i8* %64 to i64
  %76 = sub i64 %74, %75
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %66, i8* nonnull align 1 %64, i64 %76, i1 false) #11
  br label %77

77:                                               ; preds = %54, %70
  %78 = load i32, i32* %7, align 4
  store i32 %78, i32* %5, align 4
  br label %79

79:                                               ; preds = %2, %77
  ret %"class.WTF::Vector"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %"class.blink::FormDataElement"* @_ZN5blink15FormDataElementaSEOS0_(%"class.blink::FormDataElement"* returned, %"class.blink::FormDataElement"* nocapture dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 1
  %8 = bitcast %"class.WTF::Vector"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.WTF::Vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  store atomic i64 %11, i64* %8 monotonic, align 8
  store atomic i64 %9, i64* %10 monotonic, align 8
  %12 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = load i32, i32* %12, align 4
  %15 = load i32, i32* %13, align 4
  store i32 %15, i32* %12, align 4
  store i32 %14, i32* %13, align 4
  %16 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %17 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %16, align 4
  %19 = load i32, i32* %17, align 4
  store i32 %19, i32* %16, align 4
  store i32 %18, i32* %17, align 4
  %20 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 2
  %21 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 2
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %23 = bitcast %"class.WTF::String"* %21 to i64*
  %24 = load i64, i64* %23, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %25 = bitcast %"class.WTF::String"* %20 to i64*
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #11
  br label %42

42:                                               ; preds = %2, %38, %41
  %43 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 3
  %44 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 3
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 0, i32 0, i32 0
  %46 = bitcast %"class.WTF::String"* %44 to i64*
  %47 = load i64, i64* %46, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %45, align 8
  %48 = bitcast %"class.WTF::String"* %43 to i64*
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  store i64 %47, i64* %48, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #11
  br label %65

65:                                               ; preds = %42, %61, %64
  %66 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 4
  %67 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 4
  %68 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %67, i64 0, i32 0
  %69 = bitcast %class.scoped_refptr.1* %67 to i64*
  %70 = load i64, i64* %69, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %68, align 8
  %71 = bitcast %class.scoped_refptr.1* %66 to i64*
  %72 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %66, i64 0, i32 0
  %73 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %72, align 8
  store i64 %70, i64* %71, align 8
  %74 = icmp eq %"class.blink::BlobDataHandle"* %73, null
  br i1 %74, label %81, label %75

75:                                               ; preds = %65
  %76 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw sub i32* %76, i32 1 acq_rel
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %81

79:                                               ; preds = %75
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %73) #11
  %80 = bitcast %"class.blink::BlobDataHandle"* %73 to i8*
  tail call void @free(i8* %80) #11
  br label %81

81:                                               ; preds = %65, %75, %79
  %82 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 5
  %83 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 5
  %84 = bitcast i64* %82 to i8*
  %85 = bitcast i64* %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 32, i1 false)
  %86 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 8
  %87 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 8
  %88 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %87, i64 0, i32 0
  %89 = bitcast %class.scoped_refptr.7* %87 to i64*
  %90 = load i64, i64* %89, align 8
  store %"class.blink::WrappedDataPipeGetter"* null, %"class.blink::WrappedDataPipeGetter"** %88, align 8
  %91 = bitcast %class.scoped_refptr.7* %86 to i64*
  %92 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %86, i64 0, i32 0
  %93 = load %"class.blink::WrappedDataPipeGetter"*, %"class.blink::WrappedDataPipeGetter"** %92, align 8
  store i64 %90, i64* %91, align 8
  %94 = icmp eq %"class.blink::WrappedDataPipeGetter"* %93, null
  br i1 %94, label %115, label %95

95:                                               ; preds = %81
  %96 = getelementptr inbounds %"class.blink::WrappedDataPipeGetter", %"class.blink::WrappedDataPipeGetter"* %93, i64 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.blink::WrappedDataPipeGetter", %"class.blink::WrappedDataPipeGetter"* %93, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %97) #11
  %98 = getelementptr inbounds %"class.blink::WrappedDataPipeGetter", %"class.blink::WrappedDataPipeGetter"* %93, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %115

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %96, i64 2
  %103 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %96, i64 12
  %104 = bitcast %"class.base::RefCounted"* %103 to %"class.network::mojom::blink::DataPipeGetterProxy"**
  %105 = load %"class.network::mojom::blink::DataPipeGetterProxy"*, %"class.network::mojom::blink::DataPipeGetterProxy"** %104, align 8
  store %"class.network::mojom::blink::DataPipeGetterProxy"* null, %"class.network::mojom::blink::DataPipeGetterProxy"** %104, align 8
  %106 = icmp eq %"class.network::mojom::blink::DataPipeGetterProxy"* %105, null
  br i1 %106, label %112, label %107

107:                                              ; preds = %101
  %108 = bitcast %"class.network::mojom::blink::DataPipeGetterProxy"* %105 to void (%"class.network::mojom::blink::DataPipeGetterProxy"*)***
  %109 = load void (%"class.network::mojom::blink::DataPipeGetterProxy"*)**, void (%"class.network::mojom::blink::DataPipeGetterProxy"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.network::mojom::blink::DataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::DataPipeGetterProxy"*)** %109, i64 1
  %111 = load void (%"class.network::mojom::blink::DataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::DataPipeGetterProxy"*)** %110, align 8
  tail call void %111(%"class.network::mojom::blink::DataPipeGetterProxy"* nonnull %105) #11
  br label %112

112:                                              ; preds = %107, %101
  %113 = bitcast %"class.base::RefCounted"* %102 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %113) #11
  %114 = bitcast %"class.blink::WrappedDataPipeGetter"* %93 to i8*
  tail call void @free(i8* %114) #11
  br label %115

115:                                              ; preds = %81, %95, %112
  ret %"class.blink::FormDataElement"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blinkeqERKNS_15FormDataElementES2_(%"class.blink::FormDataElement"* readonly dereferenceable(88), %"class.blink::FormDataElement"* readonly dereferenceable(88)) local_unnamed_addr #0 {
  %3 = icmp eq %"class.blink::FormDataElement"* %0, %1
  br i1 %3, label %77, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %10, label %77

10:                                               ; preds = %4
  switch i32 %6, label %77 [
    i32 0, label %11
    i32 1, label %27
    i32 2, label %65
    i32 3, label %71
  ]

11:                                               ; preds = %10
  %12 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %77

17:                                               ; preds = %11
  %18 = icmp eq i32 %13, 0
  br i1 %18, label %77, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = zext i32 %13 to i64
  %25 = tail call i32 @bcmp(i8* %21, i8* %23, i64 %24) #11
  %26 = icmp eq i32 %25, 0
  br label %77

27:                                               ; preds = %10
  %28 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"* %31) #11
  br i1 %32, label %33, label %77

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 5
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 5
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %35, %37
  br i1 %38, label %39, label %77

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 6
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 6
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %41, %43
  br i1 %44, label %45, label %77

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %47 = load i8, i8* %46, align 8, !range !4
  %48 = icmp ne i8 %47, 0
  %49 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %50 = load i8, i8* %49, align 8, !range !4
  %51 = icmp ne i8 %50, 0
  %52 = xor i1 %48, %51
  %53 = xor i1 %48, true
  %54 = or i1 %52, %53
  %55 = xor i1 %52, true
  br i1 %54, label %77, label %56

56:                                               ; preds = %45
  %57 = icmp eq i8 %50, 0
  br i1 %57, label %58, label %59, !prof !3

58:                                               ; preds = %56
  tail call void @llvm.trap() #11
  unreachable

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %61
  br label %77

65:                                               ; preds = %10
  %66 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 3, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 3, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"* %69) #11
  br label %77

71:                                               ; preds = %10
  %72 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %0, i64 0, i32 8, i32 0
  %73 = load %"class.blink::WrappedDataPipeGetter"*, %"class.blink::WrappedDataPipeGetter"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %1, i64 0, i32 8, i32 0
  %75 = load %"class.blink::WrappedDataPipeGetter"*, %"class.blink::WrappedDataPipeGetter"** %74, align 8
  %76 = icmp eq %"class.blink::WrappedDataPipeGetter"* %73, %75
  br label %77

77:                                               ; preds = %59, %45, %19, %17, %11, %10, %27, %33, %39, %4, %2, %71, %65
  %78 = phi i1 [ %70, %65 ], [ %76, %71 ], [ true, %2 ], [ false, %4 ], [ false, %39 ], [ false, %33 ], [ false, %27 ], [ true, %10 ], [ %26, %19 ], [ false, %11 ], [ true, %17 ], [ %55, %45 ], [ %64, %59 ]
  ret i1 %78
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15EncodedFormDataD2Ev(%"class.blink::EncodedFormData"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %11, label %5, !prof !2

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9, !prof !3

9:                                                ; preds = %5
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %9, %5
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %3) #11
  store i8* null, i8** %2, align 8
  br label %11

11:                                               ; preds = %1, %10
  %12 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %13, align 8
  %15 = icmp eq %"class.blink::FormDataElement"* %14, null
  br i1 %15, label %33, label %16, !prof !2

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::FormDataElement"* %14 to i8*
  %18 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %31, label %21, !prof !3

21:                                               ; preds = %16
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %14, i64 %22
  br label %24

24:                                               ; preds = %24, %21
  %25 = phi %"class.blink::FormDataElement"* [ %26, %24 ], [ %14, %21 ]
  tail call void @_ZN5blink15FormDataElementD2Ev(%"class.blink::FormDataElement"* %25) #11
  %26 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %25, i64 1
  %27 = icmp eq %"class.blink::FormDataElement"* %26, %23
  br i1 %27, label %28, label %24

28:                                               ; preds = %24
  store i32 0, i32* %18, align 4
  %29 = bitcast %"class.WTF::Vector.187"* %12 to i8**
  %30 = load i8*, i8** %29, align 8
  br label %31

31:                                               ; preds = %28, %16
  %32 = phi i8* [ %30, %28 ], [ %17, %16 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %32) #11
  store %"class.blink::FormDataElement"* null, %"class.blink::FormDataElement"** %13, align 8
  br label %33

33:                                               ; preds = %11, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call noalias i8* @malloc(i64 56) #11
  %2 = bitcast i8* %1 to %"class.blink::EncodedFormData"*
  %3 = bitcast i8* %1 to i32*
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds i8, i8* %1, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 41, i1 false) #11
  ret %"class.blink::EncodedFormData"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEPKvj(i8* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call noalias i8* @malloc(i64 56) #11
  %4 = bitcast i8* %3 to %"class.blink::EncodedFormData"*
  %5 = bitcast i8* %3 to i32*
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 41, i1 false) #11
  tail call void @_ZN5blink15EncodedFormData10AppendDataEPKvj(%"class.blink::EncodedFormData"* %4, i8* %0, i32 %1)
  ret %"class.blink::EncodedFormData"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15EncodedFormData10AppendDataEPKvj(%"class.blink::EncodedFormData"*, i8* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::FormDataElement", align 8
  %5 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %3
  %10 = add i32 %7, -1
  %11 = tail call dereferenceable(88) %"class.blink::FormDataElement"* @_ZN3WTF6VectorIN5blink15FormDataElementELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.187"* %5, i32 %10) #11
  %12 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %78, label %15

15:                                               ; preds = %9
  %16 = load i32, i32* %6, align 4
  br label %17

17:                                               ; preds = %15, %3
  %18 = phi i32 [ %16, %15 ], [ 0, %3 ]
  %19 = bitcast %"class.blink::FormDataElement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 0
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 1
  %22 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 8, i32 0
  store %"class.blink::WrappedDataPipeGetter"* null, %"class.blink::WrappedDataPipeGetter"** %23, align 8
  %24 = bitcast %"class.WTF::Vector"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 40, i1 false) #11
  %25 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %18, %26
  br i1 %27, label %76, label %28, !prof !3

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %5, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %29, align 8
  %31 = zext i32 %18 to i64
  %32 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %30, i64 %31, i32 0
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %30, i64 %31, i32 1
  %34 = bitcast %"class.WTF::Vector"* %33 to i8*
  %35 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %30, i64 %31, i32 1, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %30, i64 %31, i32 1, i32 0, i32 0, i32 2
  %37 = bitcast %"class.WTF::Vector"* %21 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #11
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.WTF::Vector"* %33 to i64*
  store atomic i64 0, i64* %37 monotonic, align 8
  store atomic i64 %38, i64* %39 monotonic, align 8
  %40 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %41 = load i32, i32* %35, align 4
  %42 = load i32, i32* %40, align 8
  store i32 %42, i32* %35, align 4
  store i32 %41, i32* %40, align 8
  %43 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 1, i32 0, i32 0, i32 2
  %44 = load i32, i32* %36, align 4
  %45 = load i32, i32* %43, align 4
  store i32 %45, i32* %36, align 4
  store i32 %44, i32* %43, align 4
  %46 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %30, i64 %31, i32 2
  %47 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 2
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %47, i64 0, i32 0, i32 0
  %49 = bitcast %"class.WTF::String"* %47 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.WTF::String"* %46 to i64*
  store i64 %50, i64* %51, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  %52 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %30, i64 %31, i32 3
  %53 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 3
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  %55 = bitcast %"class.WTF::String"* %53 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.WTF::String"* %52 to i64*
  store i64 %56, i64* %57, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %54, align 8
  %58 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %30, i64 %31, i32 4
  %59 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 4
  %60 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %59, i64 0, i32 0
  %61 = bitcast %class.scoped_refptr.1* %59 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %class.scoped_refptr.1* %58 to i64*
  store i64 %62, i64* %63, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %60, align 8
  %64 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %30, i64 %31, i32 5
  %65 = bitcast i64* %64 to i8*
  %66 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 5
  %67 = bitcast i64* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %67, i64 32, i1 false) #11
  %68 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %30, i64 %31, i32 8
  %69 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 8
  %70 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %69, i64 0, i32 0
  %71 = bitcast %class.scoped_refptr.7* %69 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %class.scoped_refptr.7* %68 to i64*
  store i64 %72, i64* %73, align 8
  store %"class.blink::WrappedDataPipeGetter"* null, %"class.blink::WrappedDataPipeGetter"** %70, align 8
  %74 = load i32, i32* %6, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %6, align 4
  br label %77

76:                                               ; preds = %17
  call void @_ZN3WTF6VectorIN5blink15FormDataElementELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.187"* %5, %"class.blink::FormDataElement"* nonnull dereferenceable(88) %4) #11
  br label %77

77:                                               ; preds = %28, %76
  call void @_ZN5blink15FormDataElementD2Ev(%"class.blink::FormDataElement"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %19) #11
  br label %78

78:                                               ; preds = %9, %77
  %79 = load i32, i32* %6, align 4
  %80 = add i32 %79, -1
  %81 = call dereferenceable(88) %"class.blink::FormDataElement"* @_ZN3WTF6VectorIN5blink15FormDataElementELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.187"* %5, i32 %80) #11
  %82 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %81, i64 0, i32 1
  %83 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %81, i64 0, i32 1, i32 0, i32 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = add i32 %84, %2
  %86 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %81, i64 0, i32 1, i32 0, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = icmp ult i32 %87, %85
  br i1 %88, label %89, label %122

89:                                               ; preds = %78
  %90 = lshr i32 %87, 2
  %91 = add nuw i32 %87, 1
  %92 = add i32 %91, %90
  %93 = icmp ugt i32 %92, 4
  %94 = select i1 %93, i32 %92, i32 4
  %95 = icmp ugt i32 %94, %85
  %96 = select i1 %95, i32 %94, i32 %85
  %97 = icmp ult i32 %87, %96
  br i1 %97, label %98, label %122, !prof !2

98:                                               ; preds = %89
  %99 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %82, i64 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = icmp eq i8* %100, null
  %102 = zext i32 %96 to i64
  %103 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %102) #11
  %104 = call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %103) #11
  %105 = ptrtoint i8* %104 to i64
  br i1 %101, label %106, label %109

106:                                              ; preds = %98
  %107 = bitcast %"class.WTF::Vector"* %82 to i64*
  store atomic i64 %105, i64* %107 monotonic, align 8
  %108 = trunc i64 %103 to i32
  store i32 %108, i32* %86, align 8
  br label %122

109:                                              ; preds = %98
  %110 = load i8*, i8** %99, align 8
  %111 = icmp ne i8* %104, null
  %112 = icmp ne i8* %110, null
  %113 = and i1 %111, %112
  br i1 %113, label %114, label %118, !prof !2

114:                                              ; preds = %109
  %115 = load i32, i32* %83, align 4
  %116 = zext i32 %115 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %104, i8* nonnull align 1 %110, i64 %116, i1 false) #11
  %117 = load i8*, i8** %99, align 8
  br label %118

118:                                              ; preds = %114, %109
  %119 = phi i8* [ %110, %109 ], [ %117, %114 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %119) #11
  %120 = bitcast %"class.WTF::Vector"* %82 to i64*
  store atomic i64 %105, i64* %120 monotonic, align 8
  %121 = trunc i64 %103 to i32
  store i32 %121, i32* %86, align 8
  br label %122

122:                                              ; preds = %118, %106, %89, %78
  %123 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %82, i64 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  %125 = load i32, i32* %83, align 4
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds i8, i8* %124, i64 %126
  %128 = zext i32 %85 to i64
  %129 = getelementptr inbounds i8, i8* %124, i64 %128
  %130 = ptrtoint i8* %129 to i64
  %131 = ptrtoint i8* %127 to i64
  %132 = sub i64 %130, %131
  call void @llvm.memset.p0i8.i64(i8* align 1 %127, i8 0, i64 %132, i1 false) #11
  store i32 %85, i32* %83, align 4
  %133 = load i8*, i8** %123, align 8
  %134 = zext i32 %84 to i64
  %135 = getelementptr inbounds i8, i8* %133, i64 %134
  %136 = zext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %135, i8* align 1 %1, i64 %136, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEN4base4spanIKcLm18446744073709551615EEE(i64, i8*) local_unnamed_addr #0 align 2 {
  %3 = tail call noalias i8* @malloc(i64 56) #11
  %4 = bitcast i8* %3 to %"class.blink::EncodedFormData"*
  %5 = bitcast i8* %3 to i32*
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 41, i1 false) #11
  %7 = trunc i64 %0 to i32
  tail call void @_ZN5blink15EncodedFormData10AppendDataEPKvj(%"class.blink::EncodedFormData"* %4, i8* %1, i32 %7)
  ret %"class.blink::EncodedFormData"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateERKN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEE(%"class.WTF::Vector"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %2 = tail call noalias i8* @malloc(i64 56) #11
  %3 = bitcast i8* %2 to %"class.blink::EncodedFormData"*
  %4 = bitcast i8* %2 to i32*
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 41, i1 false) #11
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  tail call void @_ZN5blink15EncodedFormData10AppendDataEPKvj(%"class.blink::EncodedFormData"* %3, i8* %7, i32 %9)
  ret %"class.blink::EncodedFormData"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::EncodedFormData"* @_ZNK5blink15EncodedFormData4CopyEv(%"class.blink::EncodedFormData"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call noalias i8* @malloc(i64 56) #11
  %3 = bitcast i8* %2 to %"class.blink::EncodedFormData"*
  %4 = bitcast i8* %2 to i32*
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = bitcast i8* %5 to %"class.blink::FormDataElement"**
  store %"class.blink::FormDataElement"* null, %"class.blink::FormDataElement"** %8, align 8
  %9 = getelementptr inbounds i8, i8* %2, i64 16
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 8
  %11 = icmp eq i32 %7, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %1
  %13 = zext i32 %7 to i64
  %14 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15FormDataElementEEEmm(i64 %13) #11
  %15 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %14, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15FormDataElementEEEPKcv, i64 0, i64 0)) #11
  %16 = ptrtoint i8* %15 to i64
  %17 = bitcast i8* %5 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = udiv i64 %14, 88
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %10, align 8
  %20 = bitcast i8* %15 to %"class.blink::FormDataElement"*
  br label %21

21:                                               ; preds = %12, %1
  %22 = phi %"class.blink::FormDataElement"* [ null, %1 ], [ %20, %12 ]
  %23 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds i8, i8* %2, i64 20
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 4
  %27 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %28 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %27, align 8
  %29 = zext i32 %24 to i64
  %30 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %28, i64 %29
  %31 = icmp eq i32 %24, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %21, %32
  %33 = phi %"class.blink::FormDataElement"* [ %35, %32 ], [ %22, %21 ]
  %34 = phi %"class.blink::FormDataElement"* [ %36, %32 ], [ %28, %21 ]
  tail call void @_ZN5blink15FormDataElementC2ERKS0_(%"class.blink::FormDataElement"* %33, %"class.blink::FormDataElement"* dereferenceable(88) %34) #11
  %35 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %33, i64 1
  %36 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %34, i64 1
  %37 = icmp eq %"class.blink::FormDataElement"* %36, %30
  br i1 %37, label %38, label %32

38:                                               ; preds = %32, %21
  %39 = getelementptr inbounds i8, i8* %2, i64 24
  %40 = bitcast i8* %39 to i64*
  %41 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 3
  %42 = load i64, i64* %41, align 8
  store i64 %42, i64* %40, align 8
  %43 = getelementptr inbounds i8, i8* %2, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #11
  %44 = getelementptr inbounds i8, i8* %2, i64 48
  %45 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 5
  %46 = load i8, i8* %45, align 8, !range !4
  store i8 %46, i8* %44, align 8
  ret %"class.blink::EncodedFormData"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::EncodedFormData"* @_ZNK5blink15EncodedFormData8DeepCopyEv(%"class.blink::EncodedFormData"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.mojo::ScopedHandleBase", align 4
  %3 = alloca %"class.mojo::MessagePipeHandle", align 4
  %4 = alloca %"class.mojo::MessagePipeHandle", align 4
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.mojo::PendingRemote.193", align 4
  %7 = alloca %"class.mojo::PendingRemote.193", align 4
  %8 = alloca %"class.mojo::PendingRemote.193", align 4
  %9 = alloca %"class.mojo::PendingRemote.193", align 4
  %10 = alloca %"class.blink::FormDataElement", align 8
  %11 = alloca %"class.blink::FormDataElement", align 8
  %12 = alloca %"class.blink::FormDataElement", align 8
  %13 = alloca %"class.mojo::PendingRemote.193", align 4
  %14 = alloca %"class.mojo::PendingReceiver", align 8
  %15 = alloca %"class.blink::FormDataElement", align 8
  %16 = tail call noalias i8* @malloc(i64 56) #11
  %17 = bitcast i8* %16 to %"class.blink::EncodedFormData"*
  %18 = bitcast i8* %16 to i32*
  store i32 1, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %16, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 41, i1 false) #11
  %20 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 3
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds i8, i8* %16, i64 24
  %23 = bitcast i8* %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 4
  %25 = getelementptr inbounds i8, i8* %16, i64 32
  %26 = bitcast i8* %25 to %"class.WTF::Vector"*
  %27 = tail call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector"* %26, %"class.WTF::Vector"* dereferenceable(16) %24)
  %28 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 5
  %29 = load i8, i8* %28, align 8, !range !4
  %30 = getelementptr inbounds i8, i8* %16, i64 48
  store i8 %29, i8* %30, align 8
  %31 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %395, label %34

34:                                               ; preds = %1
  %35 = zext i32 %32 to i64
  %36 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15FormDataElementEEEmm(i64 %35) #11
  %37 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %36, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15FormDataElementEEEPKcv, i64 0, i64 0)) #11
  %38 = ptrtoint i8* %37 to i64
  %39 = bitcast i8* %19 to i64*
  store atomic i64 %38, i64* %39 monotonic, align 8
  %40 = udiv i64 %36, 88
  %41 = trunc i64 %40 to i32
  %42 = getelementptr inbounds i8, i8* %16, i64 16
  %43 = bitcast i8* %42 to i32*
  store i32 %41, i32* %43, align 8
  %44 = load i32, i32* %31, align 4
  %45 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %46 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %45, align 8
  %47 = zext i32 %44 to i64
  %48 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %46, i64 %47
  %49 = icmp eq i32 %44, 0
  br i1 %49, label %395, label %50

50:                                               ; preds = %34
  %51 = bitcast %"class.mojo::PendingRemote.193"* %13 to i8*
  %52 = getelementptr inbounds %"class.mojo::PendingRemote.193", %"class.mojo::PendingRemote.193"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.mojo::PendingRemote.193", %"class.mojo::PendingRemote.193"* %13, i64 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.mojo::PendingRemote.193", %"class.mojo::PendingRemote.193"* %13, i64 0, i32 0
  %55 = bitcast %"class.mojo::MessagePipeHandle"* %3 to i8*
  %56 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %3, i64 0, i32 0, i32 0
  %57 = bitcast %"class.mojo::MessagePipeHandle"* %4 to i8*
  %58 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %4, i64 0, i32 0, i32 0
  %59 = bitcast %"class.mojo::ScopedHandleBase"* %2 to i8*
  %60 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %14, i64 0, i32 0
  %61 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %2, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.mojo::PendingRemote.193"* %9 to i8*
  %63 = getelementptr inbounds %"class.mojo::PendingRemote.193", %"class.mojo::PendingRemote.193"* %9, i64 0, i32 0
  %64 = bitcast %"class.mojo::PendingRemote.193"* %8 to i8*
  %65 = getelementptr inbounds %"class.mojo::PendingRemote.193", %"class.mojo::PendingRemote.193"* %8, i64 0, i32 0
  %66 = bitcast %"class.mojo::PendingRemote.193"* %7 to i8*
  %67 = getelementptr inbounds %"class.mojo::PendingRemote.193", %"class.mojo::PendingRemote.193"* %7, i64 0, i32 0
  %68 = bitcast %"class.mojo::PendingRemote.193"* %6 to i8*
  %69 = getelementptr inbounds %"class.mojo::PendingRemote.193", %"class.mojo::PendingRemote.193"* %6, i64 0, i32 0
  %70 = bitcast %"class.blink::FormDataElement"* %15 to i8*
  %71 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 0, i32 0
  %72 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 0, i32 1
  %73 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %74 = bitcast i8* %19 to %"class.blink::FormDataElement"**
  %75 = getelementptr inbounds i8, i8* %16, i64 20
  %76 = bitcast i8* %75 to i32*
  %77 = bitcast %"class.WTF::Vector"* %72 to i64*
  %78 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 0, i32 1, i32 0, i32 0, i32 1
  %79 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 0, i32 1, i32 0, i32 0, i32 2
  %80 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 0, i32 2, i32 0, i32 0
  %81 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 0, i32 4, i32 0
  %82 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 0, i32 5
  %83 = bitcast i64* %82 to i8*
  %84 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 0, i32 8, i32 0
  %85 = bitcast %"class.blink::FormDataElement"* %12 to i8*
  %86 = bitcast %"class.logging::CheckError"* %5 to i8*
  %87 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %12, i64 0, i32 0
  %88 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %12, i64 0, i32 1
  %89 = bitcast %"class.WTF::Vector"* %88 to i8*
  %90 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %12, i64 0, i32 3, i32 0, i32 0
  %91 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %12, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.WTF::Vector"* %88 to i64*
  %93 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %12, i64 0, i32 1, i32 0, i32 0, i32 1
  %94 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %12, i64 0, i32 1, i32 0, i32 0, i32 2
  %95 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %12, i64 0, i32 2, i32 0, i32 0
  %96 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %12, i64 0, i32 4, i32 0
  %97 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %12, i64 0, i32 5
  %98 = bitcast i64* %97 to i8*
  %99 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %12, i64 0, i32 8, i32 0
  %100 = bitcast %"class.blink::FormDataElement"* %11 to i8*
  %101 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %11, i64 0, i32 0
  %102 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %11, i64 0, i32 1
  %103 = bitcast %"class.WTF::Vector"* %102 to i8*
  %104 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %11, i64 0, i32 2, i32 0, i32 0
  %105 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %11, i64 0, i32 5
  %106 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %11, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %107 = bitcast %"class.WTF::Vector"* %102 to i64*
  %108 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %11, i64 0, i32 1, i32 0, i32 0, i32 1
  %109 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %11, i64 0, i32 1, i32 0, i32 0, i32 2
  %110 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %11, i64 0, i32 2, i32 0, i32 0
  %111 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %11, i64 0, i32 4, i32 0
  %112 = bitcast i64* %105 to i8*
  %113 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %11, i64 0, i32 8, i32 0
  %114 = bitcast %"class.blink::FormDataElement"* %10 to i8*
  %115 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %10, i64 0, i32 0
  %116 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %10, i64 0, i32 1
  %117 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %10, i64 0, i32 1, i32 0, i32 0, i32 1
  %119 = bitcast %"class.WTF::Vector"* %116 to i64*
  %120 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %10, i64 0, i32 1, i32 0, i32 0, i32 2
  %121 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %10, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %122 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %10, i64 0, i32 2, i32 0, i32 0
  %123 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %10, i64 0, i32 4, i32 0
  %124 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %10, i64 0, i32 5
  %125 = bitcast i64* %124 to i8*
  %126 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %10, i64 0, i32 8, i32 0
  %127 = bitcast %"class.WTF::StringImpl"** %80 to <2 x %"class.WTF::StringImpl"*>*
  %128 = bitcast %"class.WTF::StringImpl"** %95 to <2 x %"class.WTF::StringImpl"*>*
  %129 = bitcast i64* %105 to <2 x i64>*
  %130 = bitcast %"class.WTF::StringImpl"** %110 to <2 x %"class.WTF::StringImpl"*>*
  %131 = bitcast %"class.WTF::StringImpl"** %122 to <2 x %"class.WTF::StringImpl"*>*
  br label %132

132:                                              ; preds = %50, %392
  %133 = phi %"class.blink::FormDataElement"* [ %46, %50 ], [ %393, %392 ]
  %134 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %133, i64 0, i32 0
  %135 = load i32, i32* %134, align 8
  switch i32 %135, label %392 [
    i32 0, label %136
    i32 1, label %181
    i32 2, label %243
    i32 3, label %314
  ]

136:                                              ; preds = %132
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %114) #11
  store i32 0, i32* %115, align 8
  %137 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %133, i64 0, i32 1, i32 0, i32 0, i32 1
  %138 = load i32, i32* %137, align 8
  store i8* null, i8** %117, align 8
  store i32 0, i32* %118, align 8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %146, label %140

140:                                              ; preds = %136
  %141 = zext i32 %138 to i64
  %142 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %141) #11
  %143 = call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %142) #11
  %144 = ptrtoint i8* %143 to i64
  store atomic i64 %144, i64* %119 monotonic, align 8
  %145 = trunc i64 %142 to i32
  store i32 %145, i32* %118, align 8
  br label %146

146:                                              ; preds = %140, %136
  %147 = phi i32 [ 0, %136 ], [ %145, %140 ]
  %148 = phi i64 [ 0, %136 ], [ %144, %140 ]
  %149 = phi i8* [ null, %136 ], [ %143, %140 ]
  %150 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %133, i64 0, i32 1, i32 0, i32 0, i32 2
  %151 = load i32, i32* %150, align 4
  store i32 %151, i32* %120, align 4
  %152 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %133, i64 0, i32 1, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = icmp ne i8* %149, null
  %155 = icmp ne i8* %153, null
  %156 = and i1 %154, %155
  br i1 %156, label %157, label %159, !prof !2

157:                                              ; preds = %146
  %158 = zext i32 %151 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %149, i8* nonnull align 1 %153, i64 %158, i1 false) #11
  br label %159

159:                                              ; preds = %146, %157
  store i8 0, i8* %121, align 8
  %160 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %74, align 8
  %161 = load i32, i32* %76, align 4
  %162 = zext i32 %161 to i64
  %163 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %160, i64 %162, i32 0
  store i32 0, i32* %163, align 8
  %164 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %160, i64 %162, i32 1
  %165 = bitcast %"class.WTF::Vector"* %164 to i8*
  %166 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %160, i64 %162, i32 1, i32 0, i32 0, i32 1
  %167 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %160, i64 %162, i32 1, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %165, i8 0, i64 16, i1 false) #11
  %168 = bitcast %"class.WTF::Vector"* %164 to i64*
  store atomic i64 0, i64* %119 monotonic, align 8
  store atomic i64 %148, i64* %168 monotonic, align 8
  %169 = load i32, i32* %166, align 4
  store i32 %147, i32* %166, align 4
  store i32 %169, i32* %118, align 8
  %170 = load i32, i32* %167, align 4
  store i32 %151, i32* %167, align 4
  store i32 %170, i32* %120, align 4
  %171 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %160, i64 %162, i32 2
  %172 = bitcast %"class.WTF::String"* %171 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %172, align 8
  store <2 x %"class.WTF::StringImpl"*> zeroinitializer, <2 x %"class.WTF::StringImpl"*>* %131, align 8
  %173 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %160, i64 %162, i32 4
  %174 = bitcast %class.scoped_refptr.1* %173 to i64*
  store i64 0, i64* %174, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %123, align 8
  %175 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %160, i64 %162, i32 5
  %176 = bitcast i64* %175 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %176, i8* align 8 %125, i64 32, i1 false) #11
  %177 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %160, i64 %162, i32 8
  %178 = bitcast %class.scoped_refptr.7* %177 to i64*
  store i64 0, i64* %178, align 8
  store %"class.blink::WrappedDataPipeGetter"* null, %"class.blink::WrappedDataPipeGetter"** %126, align 8
  %179 = load i32, i32* %76, align 4
  %180 = add i32 %179, 1
  store i32 %180, i32* %76, align 4
  call void @_ZN5blink15FormDataElementD2Ev(%"class.blink::FormDataElement"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %114) #11
  br label %392

181:                                              ; preds = %132
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %100) #11
  %182 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %133, i64 0, i32 2
  %183 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %182) #11
  %184 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %133, i64 0, i32 5
  %185 = bitcast i64* %184 to <2 x i64>*
  %186 = load <2 x i64>, <2 x i64>* %185, align 8
  store i32 1, i32* %101, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 16, i1 false) #11
  store %"class.WTF::StringImpl"* %183, %"class.WTF::StringImpl"** %104, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %183, null
  %188 = ptrtoint %"class.WTF::StringImpl"* %183 to i64
  br i1 %187, label %206, label %189

189:                                              ; preds = %181
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = and i32 %191, 2
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %206

194:                                              ; preds = %189
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  %197 = zext i32 %196 to i33
  %198 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %197, i33 1) #11
  %199 = extractvalue { i33, i1 } %198, 1
  %200 = extractvalue { i33, i1 } %198, 0
  %201 = icmp slt i33 %200, 0
  %202 = or i1 %199, %201
  br i1 %202, label %203, label %204, !prof !3

203:                                              ; preds = %194
  call void @llvm.trap() #11
  unreachable

204:                                              ; preds = %194
  %205 = trunc i33 %200 to i32
  store i32 %205, i32* %195, align 4
  br label %206

206:                                              ; preds = %181, %189, %204
  store <2 x i64> %186, <2 x i64>* %129, align 8
  %207 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %133, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %207, i64 16, i1 false) #11
  %208 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %74, align 8
  %209 = load i32, i32* %76, align 4
  %210 = zext i32 %209 to i64
  %211 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %208, i64 %210, i32 0
  store i32 1, i32* %211, align 8
  %212 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %208, i64 %210, i32 1
  %213 = bitcast %"class.WTF::Vector"* %212 to i8*
  %214 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %208, i64 %210, i32 1, i32 0, i32 0, i32 1
  %215 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %208, i64 %210, i32 1, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %213, i8 0, i64 16, i1 false) #11
  %216 = bitcast %"class.WTF::Vector"* %212 to i64*
  store atomic i64 0, i64* %107 monotonic, align 8
  store atomic i64 0, i64* %216 monotonic, align 8
  %217 = load i32, i32* %214, align 4
  store i32 0, i32* %214, align 4
  store i32 %217, i32* %108, align 8
  %218 = load i32, i32* %215, align 4
  store i32 0, i32* %215, align 4
  store i32 %218, i32* %109, align 4
  %219 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %208, i64 %210, i32 2
  %220 = bitcast %"class.WTF::String"* %219 to i64*
  store i64 %188, i64* %220, align 8
  %221 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %208, i64 %210, i32 3
  store <2 x %"class.WTF::StringImpl"*> zeroinitializer, <2 x %"class.WTF::StringImpl"*>* %130, align 8
  %222 = bitcast %"class.WTF::String"* %221 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %222, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %111, align 8
  %223 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %208, i64 %210, i32 5
  %224 = bitcast i64* %223 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %224, i8* align 8 %112, i64 32, i1 false) #11
  %225 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %208, i64 %210, i32 8
  %226 = bitcast %class.scoped_refptr.7* %225 to i64*
  store i64 0, i64* %226, align 8
  store %"class.blink::WrappedDataPipeGetter"* null, %"class.blink::WrappedDataPipeGetter"** %113, align 8
  %227 = load i32, i32* %76, align 4
  %228 = add i32 %227, 1
  store i32 %228, i32* %76, align 4
  call void @_ZN5blink15FormDataElementD2Ev(%"class.blink::FormDataElement"* nonnull %11) #11
  br i1 %187, label %242, label %229

229:                                              ; preds = %206
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %183) #11
  br label %242

242:                                              ; preds = %206, %238, %241
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %100) #11
  br label %392

243:                                              ; preds = %132
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %85) #11
  %244 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %133, i64 0, i32 3
  %245 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %244) #11
  %246 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %133, i64 0, i32 4, i32 0
  %247 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %246, align 8
  %248 = icmp eq %"class.blink::BlobDataHandle"* %247, null
  br i1 %248, label %255, label %249

249:                                              ; preds = %243
  %250 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %247, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = atomicrmw add i32* %250, i32 1 monotonic
  %252 = icmp sgt i32 %251, 0
  br i1 %252, label %255, label %253

253:                                              ; preds = %249
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #11
  %254 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #11
  br label %255

255:                                              ; preds = %243, %249, %253
  %256 = ptrtoint %"class.blink::BlobDataHandle"* %247 to i64
  store i32 2, i32* %87, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #11
  store %"class.WTF::StringImpl"* %245, %"class.WTF::StringImpl"** %90, align 8
  %257 = icmp eq %"class.WTF::StringImpl"* %245, null
  %258 = ptrtoint %"class.WTF::StringImpl"* %245 to i64
  br i1 %257, label %276, label %259

259:                                              ; preds = %255
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = load atomic i32, i32* %260 monotonic, align 4
  %262 = and i32 %261, 2
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %276

264:                                              ; preds = %259
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  %267 = zext i32 %266 to i33
  %268 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %267, i33 1) #11
  %269 = extractvalue { i33, i1 } %268, 1
  %270 = extractvalue { i33, i1 } %268, 0
  %271 = icmp slt i33 %270, 0
  %272 = or i1 %269, %271
  br i1 %272, label %273, label %274, !prof !3

273:                                              ; preds = %264
  call void @llvm.trap() #11
  unreachable

274:                                              ; preds = %264
  %275 = trunc i33 %270 to i32
  store i32 %275, i32* %265, align 4
  br label %276

276:                                              ; preds = %255, %259, %274
  store i8 0, i8* %91, align 8
  %277 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %74, align 8
  %278 = load i32, i32* %76, align 4
  %279 = zext i32 %278 to i64
  %280 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %277, i64 %279, i32 0
  store i32 2, i32* %280, align 8
  %281 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %277, i64 %279, i32 1
  %282 = bitcast %"class.WTF::Vector"* %281 to i8*
  %283 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %277, i64 %279, i32 1, i32 0, i32 0, i32 1
  %284 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %277, i64 %279, i32 1, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %282, i8 0, i64 16, i1 false) #11
  %285 = bitcast %"class.WTF::Vector"* %281 to i64*
  store atomic i64 0, i64* %92 monotonic, align 8
  store atomic i64 0, i64* %285 monotonic, align 8
  %286 = load i32, i32* %283, align 4
  store i32 0, i32* %283, align 4
  store i32 %286, i32* %93, align 8
  %287 = load i32, i32* %284, align 4
  store i32 0, i32* %284, align 4
  store i32 %287, i32* %94, align 4
  %288 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %277, i64 %279, i32 2
  %289 = bitcast %"class.WTF::String"* %288 to i64*
  store i64 0, i64* %289, align 8
  %290 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %277, i64 %279, i32 3
  %291 = bitcast %"class.WTF::String"* %290 to i64*
  store i64 %258, i64* %291, align 8
  store <2 x %"class.WTF::StringImpl"*> zeroinitializer, <2 x %"class.WTF::StringImpl"*>* %128, align 8
  %292 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %277, i64 %279, i32 4
  %293 = bitcast %class.scoped_refptr.1* %292 to i64*
  store i64 %256, i64* %293, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %96, align 8
  %294 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %277, i64 %279, i32 5
  %295 = bitcast i64* %294 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %295, i8* align 8 %98, i64 32, i1 false) #11
  %296 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %277, i64 %279, i32 8
  %297 = bitcast %class.scoped_refptr.7* %296 to i64*
  store i64 0, i64* %297, align 8
  store %"class.blink::WrappedDataPipeGetter"* null, %"class.blink::WrappedDataPipeGetter"** %99, align 8
  %298 = load i32, i32* %76, align 4
  %299 = add i32 %298, 1
  store i32 %299, i32* %76, align 4
  call void @_ZN5blink15FormDataElementD2Ev(%"class.blink::FormDataElement"* nonnull %12) #11
  br i1 %257, label %313, label %300

300:                                              ; preds = %276
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %302 = load atomic i32, i32* %301 monotonic, align 4
  %303 = and i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 0
  %306 = load i32, i32* %305, align 4
  br i1 %304, label %307, label %309

307:                                              ; preds = %300
  %308 = add i32 %306, -1
  store i32 %308, i32* %305, align 4
  br label %309

309:                                              ; preds = %307, %300
  %310 = phi i32 [ %308, %307 ], [ %306, %300 ]
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %312, label %313

312:                                              ; preds = %309
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %245) #11
  br label %313

313:                                              ; preds = %276, %309, %312
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %85) #11
  br label %392

314:                                              ; preds = %132
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  store i32 -1431655766, i32* %52, align 4
  store i32 -1431655766, i32* %53, align 4
  call void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %54) #11
  %315 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %133, i64 0, i32 8, i32 0
  %316 = load %"class.blink::WrappedDataPipeGetter"*, %"class.blink::WrappedDataPipeGetter"** %315, align 8
  %317 = getelementptr inbounds %"class.blink::WrappedDataPipeGetter", %"class.blink::WrappedDataPipeGetter"* %316, i64 0, i32 1, i32 0, i32 1
  %318 = getelementptr inbounds %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178"* %317, i64 0, i32 0, i32 0, i32 0
  %319 = load %"class.network::mojom::blink::DataPipeGetterProxy"*, %"class.network::mojom::blink::DataPipeGetterProxy"** %318, align 8
  %320 = icmp eq %"class.network::mojom::blink::DataPipeGetterProxy"* %319, null
  br i1 %320, label %321, label %343

321:                                              ; preds = %314
  %322 = getelementptr inbounds %"class.blink::WrappedDataPipeGetter", %"class.blink::WrappedDataPipeGetter"* %316, i64 0, i32 1
  %323 = bitcast %"class.mojo::Remote"* %322 to %"class.mojo::internal::InterfacePtrStateBase"*
  %324 = call i8* @_Znwm(i64 8) #12
  %325 = bitcast i8* %324 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7network5mojom5blink31DataPipeGetterResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %325, align 8
  %326 = bitcast i8* %324 to %"class.mojo::MessageReceiver"*
  %327 = call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %323, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %326, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7network5mojom5blink14DataPipeGetter5Name_E, i64 0, i64 0)) #11
  br i1 %327, label %328, label %343

328:                                              ; preds = %321
  %329 = getelementptr inbounds %"class.blink::WrappedDataPipeGetter", %"class.blink::WrappedDataPipeGetter"* %316, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %330 = bitcast %"class.mojo::InterfaceEndpointClient"** %329 to %"class.mojo::MessageReceiverWithResponder"**
  %331 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %330, align 8
  %332 = call i8* @_Znwm(i64 16) #12
  %333 = bitcast i8* %332 to %"class.network::mojom::blink::DataPipeGetterProxy"*
  call void @_ZN7network5mojom5blink19DataPipeGetterProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.network::mojom::blink::DataPipeGetterProxy"* nonnull %333, %"class.mojo::MessageReceiverWithResponder"* %331) #11
  %334 = ptrtoint i8* %332 to i64
  %335 = load %"class.network::mojom::blink::DataPipeGetterProxy"*, %"class.network::mojom::blink::DataPipeGetterProxy"** %318, align 8
  %336 = bitcast %"class.std::__1::unique_ptr.178"* %317 to i64*
  store i64 %334, i64* %336, align 8
  %337 = icmp eq %"class.network::mojom::blink::DataPipeGetterProxy"* %335, null
  br i1 %337, label %343, label %338

338:                                              ; preds = %328
  %339 = bitcast %"class.network::mojom::blink::DataPipeGetterProxy"* %335 to void (%"class.network::mojom::blink::DataPipeGetterProxy"*)***
  %340 = load void (%"class.network::mojom::blink::DataPipeGetterProxy"*)**, void (%"class.network::mojom::blink::DataPipeGetterProxy"*)*** %339, align 8
  %341 = getelementptr inbounds void (%"class.network::mojom::blink::DataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::DataPipeGetterProxy"*)** %340, i64 1
  %342 = load void (%"class.network::mojom::blink::DataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::DataPipeGetterProxy"*)** %341, align 8
  call void %342(%"class.network::mojom::blink::DataPipeGetterProxy"* nonnull %335) #11
  br label %343

343:                                              ; preds = %314, %321, %328, %338
  %344 = load %"class.network::mojom::blink::DataPipeGetterProxy"*, %"class.network::mojom::blink::DataPipeGetterProxy"** %318, align 8
  %345 = getelementptr inbounds %"class.network::mojom::blink::DataPipeGetterProxy", %"class.network::mojom::blink::DataPipeGetterProxy"* %344, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #11, !noalias !5
  store i32 0, i32* %56, align 4, !noalias !5
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #11, !noalias !5
  store i32 0, i32* %58, align 4, !noalias !5
  %346 = call i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions* null, i32* nonnull %56, i32* nonnull %58) #11, !noalias !5
  %347 = load i32, i32* %56, align 4, !noalias !5
  %348 = load i32, i32* %58, align 4, !noalias !5
  %349 = load i32, i32* %52, align 4, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #11, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #11, !noalias !5
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %353, label %351

351:                                              ; preds = %343
  %352 = call i32 @MojoClose(i32 %349) #11
  br label %353

353:                                              ; preds = %351, %343
  store i32 %347, i32* %52, align 4, !noalias !5
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59) #11, !noalias !5
  store i32 %348, i32* %61, align 4, !alias.scope !8, !noalias !5
  call void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"* nonnull %60, %"class.mojo::ScopedHandleBase"* nonnull %2) #11
  %354 = load i32, i32* %61, align 4, !noalias !5
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %358, label %356

356:                                              ; preds = %353
  %357 = call i32 @MojoClose(i32 %354) #11
  br label %358

358:                                              ; preds = %356, %353
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #11, !noalias !5
  %359 = bitcast %"class.network::mojom::blink::DataPipeGetterProxy"* %344 to void (%"class.network::mojom::blink::DataPipeGetter"*, %"class.mojo::PendingReceiver"*)***
  %360 = load void (%"class.network::mojom::blink::DataPipeGetter"*, %"class.mojo::PendingReceiver"*)**, void (%"class.network::mojom::blink::DataPipeGetter"*, %"class.mojo::PendingReceiver"*)*** %359, align 8
  %361 = getelementptr inbounds void (%"class.network::mojom::blink::DataPipeGetter"*, %"class.mojo::PendingReceiver"*)*, void (%"class.network::mojom::blink::DataPipeGetter"*, %"class.mojo::PendingReceiver"*)** %360, i64 3
  %362 = load void (%"class.network::mojom::blink::DataPipeGetter"*, %"class.mojo::PendingReceiver"*)*, void (%"class.network::mojom::blink::DataPipeGetter"*, %"class.mojo::PendingReceiver"*)** %361, align 8
  call void %362(%"class.network::mojom::blink::DataPipeGetter"* %345, %"class.mojo::PendingReceiver"* nonnull %14) #11
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %60) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62)
  %363 = call noalias i8* @malloc(i64 56) #11
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %63, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %54) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64)
  %364 = bitcast i8* %363 to i32*
  store i32 1, i32* %364, align 4
  %365 = getelementptr inbounds i8, i8* %363, i64 8
  %366 = bitcast i8* %365 to %"class.mojo::Remote"*
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %65, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %63) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #11
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %67, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %65) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #11
  %367 = bitcast i8* %365 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %367) #11
  %368 = getelementptr inbounds i8, i8* %363, i64 48
  %369 = bitcast i8* %368 to i64*
  store i64 0, i64* %369, align 8
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %69, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %67) #11
  call void @_ZN4mojo6RemoteIN7network5mojom5blink14DataPipeGetterEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"* %366, %"class.mojo::PendingRemote.193"* nonnull %6, %"class.base::SequencedTaskRunner"* null) #11
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %69) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #11
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %67) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #11
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %65) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64)
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %63) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62)
  %370 = ptrtoint i8* %363 to i64
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %70) #11
  store i32 3, i32* %71, align 8
  store i8 0, i8* %73, align 8
  %371 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %74, align 8
  %372 = load i32, i32* %76, align 4
  %373 = zext i32 %372 to i64
  %374 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %371, i64 %373, i32 0
  store i32 3, i32* %374, align 8
  %375 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %371, i64 %373, i32 1
  %376 = bitcast %"class.WTF::Vector"* %375 to i8*
  %377 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %371, i64 %373, i32 1, i32 0, i32 0, i32 1
  %378 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %371, i64 %373, i32 1, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %376, i8 0, i64 16, i1 false) #11
  %379 = bitcast %"class.WTF::Vector"* %375 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store atomic i64 0, i64* %379 monotonic, align 8
  %380 = load i32, i32* %377, align 4
  store i32 0, i32* %377, align 4
  store i32 %380, i32* %78, align 8
  %381 = load i32, i32* %378, align 4
  store i32 0, i32* %378, align 4
  store i32 %381, i32* %79, align 4
  %382 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %371, i64 %373, i32 2
  %383 = bitcast %"class.WTF::String"* %382 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %383, align 8
  store <2 x %"class.WTF::StringImpl"*> zeroinitializer, <2 x %"class.WTF::StringImpl"*>* %127, align 8
  %384 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %371, i64 %373, i32 4
  %385 = bitcast %class.scoped_refptr.1* %384 to i64*
  store i64 0, i64* %385, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %81, align 8
  %386 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %371, i64 %373, i32 5
  %387 = bitcast i64* %386 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %387, i8* align 8 %83, i64 32, i1 false) #11
  %388 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %371, i64 %373, i32 8
  %389 = bitcast %class.scoped_refptr.7* %388 to i64*
  store i64 %370, i64* %389, align 8
  store %"class.blink::WrappedDataPipeGetter"* null, %"class.blink::WrappedDataPipeGetter"** %84, align 8
  %390 = load i32, i32* %76, align 4
  %391 = add i32 %390, 1
  store i32 %391, i32* %76, align 4
  call void @_ZN5blink15FormDataElementD2Ev(%"class.blink::FormDataElement"* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %70) #11
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %54) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  br label %392

392:                                              ; preds = %132, %358, %313, %242, %159
  %393 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %133, i64 1
  %394 = icmp eq %"class.blink::FormDataElement"* %393, %48
  br i1 %394, label %395, label %132

395:                                              ; preds = %392, %1, %34
  ret %"class.blink::EncodedFormData"* %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15EncodedFormData10AppendFileERKN3WTF6StringERKN4absl8optionalIN4base4TimeEEE(%"class.blink::EncodedFormData"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.absl::optional"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::FormDataElement", align 8
  %5 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2
  %6 = bitcast %"class.blink::FormDataElement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 0
  store i32 1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 1
  %9 = bitcast %"class.WTF::Vector"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #11
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #11
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !3

28:                                               ; preds = %19
  tail call void @llvm.trap() #11
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %3, %14, %29
  %32 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 3, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 6
  %34 = bitcast %"class.WTF::StringImpl"** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false)
  store i64 -1, i64* %33, align 8
  %35 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false) #11
  %37 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 8, i32 0
  store %"class.blink::WrappedDataPipeGetter"* null, %"class.blink::WrappedDataPipeGetter"** %37, align 8
  %38 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %39, %41
  br i1 %42, label %92, label %43, !prof !3

43:                                               ; preds = %31
  %44 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 5
  %45 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %5, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %45, align 8
  %47 = zext i32 %39 to i64
  %48 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %46, i64 %47, i32 0
  %49 = load i32, i32* %7, align 8
  store i32 %49, i32* %48, align 8
  %50 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %46, i64 %47, i32 1
  %51 = bitcast %"class.WTF::Vector"* %50 to i8*
  %52 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %46, i64 %47, i32 1, i32 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %46, i64 %47, i32 1, i32 0, i32 0, i32 2
  %54 = bitcast %"class.WTF::Vector"* %8 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #11
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.WTF::Vector"* %50 to i64*
  store atomic i64 0, i64* %54 monotonic, align 8
  store atomic i64 %55, i64* %56 monotonic, align 8
  %57 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %58 = load i32, i32* %52, align 4
  %59 = load i32, i32* %57, align 8
  store i32 %59, i32* %52, align 4
  store i32 %58, i32* %57, align 8
  %60 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 1, i32 0, i32 0, i32 2
  %61 = load i32, i32* %53, align 4
  %62 = load i32, i32* %60, align 4
  store i32 %62, i32* %53, align 4
  store i32 %61, i32* %60, align 4
  %63 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %46, i64 %47, i32 2
  %64 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 2
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = bitcast %"class.WTF::String"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.WTF::String"* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %65, align 8
  %69 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %46, i64 %47, i32 3
  %70 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 3
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %70, i64 0, i32 0, i32 0
  %72 = bitcast %"class.WTF::String"* %70 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.WTF::String"* %69 to i64*
  store i64 %73, i64* %74, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %71, align 8
  %75 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %46, i64 %47, i32 4
  %76 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 4
  %77 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %76, i64 0, i32 0
  %78 = bitcast %class.scoped_refptr.1* %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %class.scoped_refptr.1* %75 to i64*
  store i64 %79, i64* %80, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %77, align 8
  %81 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %46, i64 %47, i32 5
  %82 = bitcast i64* %81 to i8*
  %83 = bitcast i64* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 32, i1 false) #11
  %84 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %46, i64 %47, i32 8
  %85 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 8
  %86 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %85, i64 0, i32 0
  %87 = bitcast %class.scoped_refptr.7* %85 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %class.scoped_refptr.7* %84 to i64*
  store i64 %88, i64* %89, align 8
  store %"class.blink::WrappedDataPipeGetter"* null, %"class.blink::WrappedDataPipeGetter"** %86, align 8
  %90 = load i32, i32* %38, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %38, align 4
  br label %93

92:                                               ; preds = %31
  call void @_ZN3WTF6VectorIN5blink15FormDataElementELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.187"* %5, %"class.blink::FormDataElement"* nonnull dereferenceable(88) %4) #11
  br label %93

93:                                               ; preds = %43, %92
  call void @_ZN5blink15FormDataElementD2Ev(%"class.blink::FormDataElement"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15EncodedFormData15AppendFileRangeERKN3WTF6StringEllRKN4absl8optionalIN4base4TimeEEE(%"class.blink::EncodedFormData"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), i64, i64, %"class.absl::optional"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::FormDataElement", align 8
  %7 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2
  %8 = bitcast %"class.blink::FormDataElement"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %6, i64 0, i32 0
  store i32 1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %6, i64 0, i32 1
  %11 = bitcast %"class.WTF::Vector"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #11
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %6, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %14, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #11
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !3

30:                                               ; preds = %21
  tail call void @llvm.trap() #11
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %5, %16, %31
  %34 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %6, i64 0, i32 3, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %6, i64 0, i32 5
  %36 = bitcast %"class.WTF::StringImpl"** %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #11
  store i64 %2, i64* %35, align 8
  %37 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %6, i64 0, i32 6
  store i64 %3, i64* %37, align 8
  %38 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %6, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 16, i1 false) #11
  %40 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %6, i64 0, i32 8, i32 0
  store %"class.blink::WrappedDataPipeGetter"* null, %"class.blink::WrappedDataPipeGetter"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %94, label %46, !prof !3

46:                                               ; preds = %33
  %47 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %7, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %47, align 8
  %49 = zext i32 %42 to i64
  %50 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %48, i64 %49, i32 0
  %51 = load i32, i32* %9, align 8
  store i32 %51, i32* %50, align 8
  %52 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %48, i64 %49, i32 1
  %53 = bitcast %"class.WTF::Vector"* %52 to i8*
  %54 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %48, i64 %49, i32 1, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %48, i64 %49, i32 1, i32 0, i32 0, i32 2
  %56 = bitcast %"class.WTF::Vector"* %10 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #11
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.WTF::Vector"* %52 to i64*
  store atomic i64 0, i64* %56 monotonic, align 8
  store atomic i64 %57, i64* %58 monotonic, align 8
  %59 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %60 = load i32, i32* %54, align 4
  %61 = load i32, i32* %59, align 8
  store i32 %61, i32* %54, align 4
  store i32 %60, i32* %59, align 8
  %62 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %6, i64 0, i32 1, i32 0, i32 0, i32 2
  %63 = load i32, i32* %55, align 4
  %64 = load i32, i32* %62, align 4
  store i32 %64, i32* %55, align 4
  store i32 %63, i32* %62, align 4
  %65 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %48, i64 %49, i32 2
  %66 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %6, i64 0, i32 2
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 0, i32 0, i32 0
  %68 = bitcast %"class.WTF::String"* %66 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.WTF::String"* %65 to i64*
  store i64 %69, i64* %70, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %67, align 8
  %71 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %48, i64 %49, i32 3
  %72 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %6, i64 0, i32 3
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %72, i64 0, i32 0, i32 0
  %74 = bitcast %"class.WTF::String"* %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.WTF::String"* %71 to i64*
  store i64 %75, i64* %76, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %73, align 8
  %77 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %48, i64 %49, i32 4
  %78 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %6, i64 0, i32 4
  %79 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %78, i64 0, i32 0
  %80 = bitcast %class.scoped_refptr.1* %78 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %class.scoped_refptr.1* %77 to i64*
  store i64 %81, i64* %82, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %79, align 8
  %83 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %48, i64 %49, i32 5
  %84 = bitcast i64* %83 to i8*
  %85 = bitcast i64* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 32, i1 false) #11
  %86 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %48, i64 %49, i32 8
  %87 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %6, i64 0, i32 8
  %88 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %87, i64 0, i32 0
  %89 = bitcast %class.scoped_refptr.7* %87 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %class.scoped_refptr.7* %86 to i64*
  store i64 %90, i64* %91, align 8
  store %"class.blink::WrappedDataPipeGetter"* null, %"class.blink::WrappedDataPipeGetter"** %88, align 8
  %92 = load i32, i32* %41, align 4
  %93 = add i32 %92, 1
  store i32 %93, i32* %41, align 4
  br label %95

94:                                               ; preds = %33
  call void @_ZN3WTF6VectorIN5blink15FormDataElementELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.187"* %7, %"class.blink::FormDataElement"* nonnull dereferenceable(88) %6) #11
  br label %95

95:                                               ; preds = %46, %94
  call void @_ZN5blink15FormDataElementD2Ev(%"class.blink::FormDataElement"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15EncodedFormData10AppendBlobERKN3WTF6StringE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::EncodedFormData"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::BlobDataHandle"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::FormDataElement", align 8
  %5 = ptrtoint %"class.blink::BlobDataHandle"* %2 to i64
  %6 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2
  %7 = bitcast %"class.blink::FormDataElement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 0
  store i32 2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::Vector"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #11
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #11
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #11
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %3, %15, %30
  %33 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 4
  %34 = bitcast %class.scoped_refptr.1* %33 to i64*
  store i64 %5, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 8, i32 0
  store %"class.blink::WrappedDataPipeGetter"* null, %"class.blink::WrappedDataPipeGetter"** %36, align 8
  %37 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %38, %40
  br i1 %41, label %89, label %42, !prof !3

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %6, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %43, align 8
  %45 = zext i32 %38 to i64
  %46 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %44, i64 %45, i32 0
  %47 = load i32, i32* %8, align 8
  store i32 %47, i32* %46, align 8
  %48 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %44, i64 %45, i32 1
  %49 = bitcast %"class.WTF::Vector"* %48 to i8*
  %50 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %44, i64 %45, i32 1, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %44, i64 %45, i32 1, i32 0, i32 0, i32 2
  %52 = bitcast %"class.WTF::Vector"* %9 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #11
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.WTF::Vector"* %48 to i64*
  store atomic i64 0, i64* %52 monotonic, align 8
  store atomic i64 %53, i64* %54 monotonic, align 8
  %55 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %56 = load i32, i32* %50, align 4
  %57 = load i32, i32* %55, align 8
  store i32 %57, i32* %50, align 4
  store i32 %56, i32* %55, align 8
  %58 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 1, i32 0, i32 0, i32 2
  %59 = load i32, i32* %51, align 4
  %60 = load i32, i32* %58, align 4
  store i32 %60, i32* %51, align 4
  store i32 %59, i32* %58, align 4
  %61 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %44, i64 %45, i32 2
  %62 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 2
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 0, i32 0, i32 0
  %64 = bitcast %"class.WTF::String"* %62 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.WTF::String"* %61 to i64*
  store i64 %65, i64* %66, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %63, align 8
  %67 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %44, i64 %45, i32 3
  %68 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 3
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %68, i64 0, i32 0, i32 0
  %70 = bitcast %"class.WTF::String"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.WTF::String"* %67 to i64*
  store i64 %71, i64* %72, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %73 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %44, i64 %45, i32 4
  %74 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %33, i64 0, i32 0
  %75 = load i64, i64* %34, align 8
  %76 = bitcast %class.scoped_refptr.1* %73 to i64*
  store i64 %75, i64* %76, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %74, align 8
  %77 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %44, i64 %45, i32 5
  %78 = bitcast i64* %77 to i8*
  %79 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 5
  %80 = bitcast i64* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %80, i64 32, i1 false) #11
  %81 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %44, i64 %45, i32 8
  %82 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %4, i64 0, i32 8
  %83 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %82, i64 0, i32 0
  %84 = bitcast %class.scoped_refptr.7* %82 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %class.scoped_refptr.7* %81 to i64*
  store i64 %85, i64* %86, align 8
  store %"class.blink::WrappedDataPipeGetter"* null, %"class.blink::WrappedDataPipeGetter"** %83, align 8
  %87 = load i32, i32* %37, align 4
  %88 = add i32 %87, 1
  store i32 %88, i32* %37, align 4
  br label %90

89:                                               ; preds = %32
  call void @_ZN3WTF6VectorIN5blink15FormDataElementELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.187"* %6, %"class.blink::FormDataElement"* nonnull dereferenceable(88) %4) #11
  br label %90

90:                                               ; preds = %89, %42
  call void @_ZN5blink15FormDataElementD2Ev(%"class.blink::FormDataElement"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15EncodedFormData14AppendDataPipeE13scoped_refptrINS_21WrappedDataPipeGetterEE(%"class.blink::EncodedFormData"*, %"class.blink::WrappedDataPipeGetter"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::WrappedDataPipeGetter"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %10, label %32, !prof !3

10:                                               ; preds = %2
  %11 = add i32 %6, 1
  %12 = lshr i32 %6, 2
  %13 = add i32 %11, %12
  %14 = icmp ugt i32 %13, 4
  %15 = select i1 %14, i32 %13, i32 4
  %16 = icmp ugt i32 %15, %11
  %17 = select i1 %16, i32 %15, i32 %11
  %18 = icmp ult i32 %6, %17
  br i1 %18, label %19, label %32, !prof !2

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %4, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %20, align 8
  %22 = icmp eq %"class.blink::FormDataElement"* %21, null
  br i1 %22, label %23, label %31

23:                                               ; preds = %19
  %24 = zext i32 %17 to i64
  %25 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15FormDataElementEEEmm(i64 %24) #11
  %26 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %25, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15FormDataElementEEEPKcv, i64 0, i64 0)) #11
  %27 = ptrtoint i8* %26 to i64
  %28 = bitcast %"class.WTF::Vector.187"* %4 to i64*
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = udiv i64 %25, 88
  %30 = trunc i64 %29 to i32
  store i32 %30, i32* %7, align 8
  br label %32

31:                                               ; preds = %19
  tail call void @_ZN3WTF6VectorIN5blink15FormDataElementELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.187"* %4, i32 %17) #11
  br label %32

32:                                               ; preds = %31, %23, %10, %2
  %33 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %4, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %33, align 8
  %35 = load i32, i32* %5, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %34, i64 %36, i32 0
  store i32 3, i32* %37, align 8
  %38 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %34, i64 %36, i32 1
  %39 = bitcast %"class.WTF::Vector"* %38 to i8*
  %40 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %34, i64 %36, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %40, align 8
  %41 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %34, i64 %36, i32 8
  %42 = bitcast %class.scoped_refptr.7* %41 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 40, i1 false) #11
  store i64 %3, i64* %42, align 8
  %43 = load i32, i32* %5, align 4
  %44 = add i32 %43, 1
  store i32 %44, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15EncodedFormData7FlattenERN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEE(%"class.blink::EncodedFormData"* nocapture readonly, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %"class.WTF::Vector"* %1 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %13) #11
  br label %15

15:                                               ; preds = %2, %11
  %16 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %17, i64 %20
  %22 = icmp eq i32 %19, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %34, %15
  ret void

24:                                               ; preds = %15, %34
  %25 = phi %"class.blink::FormDataElement"* [ %35, %34 ], [ %17, %15 ]
  %26 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %25, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %25, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %25, i64 0, i32 1, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  tail call void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector"* %1, i8* %31, i32 %33)
  br label %34

34:                                               ; preds = %29, %24
  %35 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %25, i64 1
  %36 = icmp eq %"class.blink::FormDataElement"* %35, %21
  br i1 %36, label %23, label %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %87

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ugt i8* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = icmp ugt i8* %19, %1
  br i1 %20, label %52, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %87, !prof !2

30:                                               ; preds = %21
  %31 = icmp eq i8* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %32) #11
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %33) #11
  %35 = ptrtoint i8* %34 to i64
  br i1 %31, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %35, i64* %37 monotonic, align 8
  %38 = trunc i64 %33 to i32
  store i32 %38, i32* %10, align 8
  br label %87

39:                                               ; preds = %30
  %40 = load i8*, i8** %14, align 8
  %41 = icmp ne i8* %34, null
  %42 = icmp ne i8* %40, null
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %48, !prof !2

44:                                               ; preds = %39
  %45 = load i32, i32* %7, align 4
  %46 = zext i32 %45 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* nonnull align 1 %40, i64 %46, i1 false) #11
  %47 = load i8*, i8** %14, align 8
  br label %48

48:                                               ; preds = %44, %39
  %49 = phi i8* [ %40, %39 ], [ %47, %44 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #11
  %50 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %35, i64* %50 monotonic, align 8
  %51 = trunc i64 %33 to i32
  store i32 %51, i32* %10, align 8
  br label %87

52:                                               ; preds = %17
  %53 = ptrtoint i8* %1 to i64
  %54 = ptrtoint i8* %15 to i64
  %55 = sub i64 %53, %54
  %56 = lshr i32 %11, 2
  %57 = add nuw i32 %11, 1
  %58 = add i32 %57, %56
  %59 = icmp ugt i32 %58, 4
  %60 = select i1 %59, i32 %58, i32 4
  %61 = icmp ugt i32 %60, %9
  %62 = select i1 %61, i32 %60, i32 %9
  %63 = icmp ult i32 %11, %62
  br i1 %63, label %64, label %84, !prof !2

64:                                               ; preds = %52
  %65 = icmp eq i8* %15, null
  %66 = zext i32 %62 to i64
  %67 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %66) #11
  %68 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %67) #11
  %69 = ptrtoint i8* %68 to i64
  br i1 %65, label %81, label %70

70:                                               ; preds = %64
  %71 = load i8*, i8** %14, align 8
  %72 = icmp ne i8* %68, null
  %73 = icmp ne i8* %71, null
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %79, !prof !2

75:                                               ; preds = %70
  %76 = load i32, i32* %7, align 4
  %77 = zext i32 %76 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* nonnull align 1 %71, i64 %77, i1 false) #11
  %78 = load i8*, i8** %14, align 8
  br label %79

79:                                               ; preds = %75, %70
  %80 = phi i8* [ %71, %70 ], [ %78, %75 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #11
  br label %81

81:                                               ; preds = %64, %79
  %82 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %69, i64* %82 monotonic, align 8
  %83 = trunc i64 %67 to i32
  store i32 %83, i32* %10, align 8
  br label %84

84:                                               ; preds = %81, %52
  %85 = phi i8* [ %15, %52 ], [ %68, %81 ]
  %86 = getelementptr inbounds i8, i8* %85, i64 %55
  br label %87

87:                                               ; preds = %84, %21, %36, %48, %3
  %88 = phi i8* [ %1, %3 ], [ %86, %84 ], [ %1, %21 ], [ %1, %36 ], [ %1, %48 ]
  %89 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #11
  %90 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %90, align 8
  %91 = load i32, i32* %7, align 4
  %92 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = icmp ult i32 %9, %91
  br i1 %93, label %95, label %94

94:                                               ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* null, i8** %90, align 8
  br label %104

95:                                               ; preds = %87
  %96 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  %97 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %91) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* %96, i8* %97) #11
  %98 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* %99, i8** %90, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #11
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #11
  br label %104

104:                                              ; preds = %94, %95, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #11
  %105 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = load i32, i32* %7, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %106, i64 %108
  %110 = icmp ne i8* %109, null
  %111 = icmp ne i8* %88, null
  %112 = and i1 %111, %110
  br i1 %112, label %113, label %115, !prof !2

113:                                              ; preds = %104
  %114 = zext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %109, i8* nonnull align 1 %88, i64 %114, i1 false) #11
  br label %115

115:                                              ; preds = %104, %113
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15EncodedFormData15FlattenToStringEv(%"class.blink::EncodedFormData"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = alloca %"class.WTF::Vector", align 8
  %4 = bitcast %"class.WTF::Vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #11
  %7 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %27, label %14

14:                                               ; preds = %1, %24
  %15 = phi %"class.blink::FormDataElement"* [ %25, %24 ], [ %8, %1 ]
  %16 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 0, i32 1, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  call void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector"* nonnull %3, i8* %21, i32 %23) #11
  br label %24

24:                                               ; preds = %19, %14
  %25 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 1
  %26 = icmp eq %"class.blink::FormDataElement"* %25, %12
  br i1 %26, label %27, label %14

27:                                               ; preds = %24, %1
  %28 = call dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF14Latin1EncodingEv() #11
  %29 = load i8*, i8** %5, align 8
  %30 = load i32, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #11
  store i8 -86, i8* %2, align 1
  %31 = call %"class.WTF::StringImpl"* @_ZNK3WTF12TextEncoding6DecodeEPKcjbRb(%"class.WTF::TextEncoding"* %28, i8* %29, i32 %30, i1 zeroext false, i8* nonnull dereferenceable(1) %2) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #11
  %32 = load i8*, i8** %5, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %39, label %34, !prof !2

34:                                               ; preds = %27
  %35 = load i32, i32* %6, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37, !prof !3

37:                                               ; preds = %34
  store i32 0, i32* %6, align 4
  br label %38

38:                                               ; preds = %37, %34
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %32) #11
  store i8* null, i8** %5, align 8
  br label %39

39:                                               ; preds = %27, %38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret %"class.WTF::StringImpl"* %31
}

declare dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF14Latin1EncodingEv() local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink15EncodedFormData11SizeInBytesEv(%"class.blink::EncodedFormData"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %38, %1
  %10 = phi i32 [ 0, %1 ], [ %39, %38 ]
  %11 = zext i32 %10 to i64
  ret i64 %11

12:                                               ; preds = %1, %38
  %13 = phi %"class.blink::FormDataElement"* [ %40, %38 ], [ %3, %1 ]
  %14 = phi i32 [ %39, %38 ], [ 0, %1 ]
  %15 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %13, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  switch i32 %16, label %38 [
    i32 0, label %17
    i32 1, label %21
    i32 2, label %29
  ]

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %13, i64 0, i32 1, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, %14
  br label %38

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %13, i64 0, i32 6
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %13, i64 0, i32 5
  %25 = load i64, i64* %24, align 8
  %26 = sub nsw i64 %23, %25
  %27 = trunc i64 %26 to i32
  %28 = add i32 %14, %27
  br label %38

29:                                               ; preds = %12
  %30 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %13, i64 0, i32 4, i32 0
  %31 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %30, align 8
  %32 = icmp eq %"class.blink::BlobDataHandle"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %31, i64 0, i32 3
  %35 = load i64, i64* %34, align 8
  %36 = trunc i64 %35 to i32
  %37 = add i32 %14, %36
  br label %38

38:                                               ; preds = %29, %33, %12, %21, %17
  %39 = phi i32 [ %14, %12 ], [ %37, %33 ], [ %14, %29 ], [ %28, %21 ], [ %20, %17 ]
  %40 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %13, i64 1
  %41 = icmp eq %"class.blink::FormDataElement"* %40, %7
  br i1 %41, label %9, label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15EncodedFormData27IsSafeToSendToAnotherThreadEv(%"class.blink::EncodedFormData"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %23

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %23, label %15

13:                                               ; preds = %19
  %14 = icmp eq %"class.blink::FormDataElement"* %22, %11
  br i1 %14, label %23, label %15

15:                                               ; preds = %5, %13
  %16 = phi %"class.blink::FormDataElement"* [ %22, %13 ], [ %7, %5 ]
  %17 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %16, i64 0, i32 2
  %18 = tail call zeroext i1 @_ZNK3WTF6String27IsSafeToSendToAnotherThreadEv(%"class.WTF::String"* %17) #11
  br i1 %18, label %19, label %23

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %16, i64 0, i32 3
  %21 = tail call zeroext i1 @_ZNK3WTF6String27IsSafeToSendToAnotherThreadEv(%"class.WTF::String"* %20) #11
  %22 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %16, i64 1
  br i1 %21, label %13, label %23

23:                                               ; preds = %19, %13, %15, %5, %1
  %24 = phi i1 [ false, %1 ], [ true, %5 ], [ false, %19 ], [ true, %13 ], [ false, %15 ]
  ret i1 %24
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15FormDataElementEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 24379392
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 24379392) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = mul i64 %0, 88
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #1

declare zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.mojo::MessageReceiver"*, i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN7network5mojom5blink19DataPipeGetterProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.network::mojom::blink::DataPipeGetterProxy"*, %"class.mojo::MessageReceiverWithResponder"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #7

declare %"class.WTF::StringImpl"* @_ZNK3WTF12TextEncoding6DecodeEPKcjbRb(%"class.WTF::TextEncoding"*, i8*, i32, i1 zeroext, i8* dereferenceable(1)) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #11
  ret i64 %20
}

; Function Attrs: nounwind
declare void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #7

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions*, i32*, i32*) local_unnamed_addr #1

declare i32 @MojoClose(i32) local_unnamed_addr #1

declare void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"*, %"class.mojo::ScopedHandleBase"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN7network5mojom5blink14DataPipeGetterEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"*, %"class.mojo::PendingRemote.193"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::internal::InterfacePtrState", align 8
  %5 = getelementptr inbounds %"class.mojo::PendingRemote.193", %"class.mojo::PendingRemote.193"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false) #11
  %10 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #11
  %11 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.178"* %11 to i64*
  %13 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.178"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 0, i64* %14, align 8
  %16 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %16, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #11
  %17 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.network::mojom::blink::DataPipeGetterProxy"*, %"class.network::mojom::blink::DataPipeGetterProxy"** %17, align 8
  store %"class.network::mojom::blink::DataPipeGetterProxy"* null, %"class.network::mojom::blink::DataPipeGetterProxy"** %17, align 8
  %19 = icmp eq %"class.network::mojom::blink::DataPipeGetterProxy"* %18, null
  br i1 %19, label %52, label %20

20:                                               ; preds = %8
  %21 = bitcast %"class.network::mojom::blink::DataPipeGetterProxy"* %18 to void (%"class.network::mojom::blink::DataPipeGetterProxy"*)***
  %22 = load void (%"class.network::mojom::blink::DataPipeGetterProxy"*)**, void (%"class.network::mojom::blink::DataPipeGetterProxy"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.network::mojom::blink::DataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::DataPipeGetterProxy"*)** %22, i64 1
  %24 = load void (%"class.network::mojom::blink::DataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::DataPipeGetterProxy"*)** %23, align 8
  call void %24(%"class.network::mojom::blink::DataPipeGetterProxy"* nonnull %18) #11
  br label %52

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.mojo::PendingRemote.193", %"class.mojo::PendingRemote.193"* %1, i64 0, i32 0
  %27 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"* %27, %"struct.mojo::internal::PendingRemoteState"* %26, %"class.base::SequencedTaskRunner"* %2) #11
  %28 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.network::mojom::blink::DataPipeGetterProxy"*, %"class.network::mojom::blink::DataPipeGetterProxy"** %29, align 8
  %31 = icmp eq %"class.network::mojom::blink::DataPipeGetterProxy"* %30, null
  br i1 %31, label %32, label %62

32:                                               ; preds = %25
  %33 = tail call i8* @_Znwm(i64 8) #12
  %34 = bitcast i8* %33 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7network5mojom5blink31DataPipeGetterResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = bitcast i8* %33 to %"class.mojo::MessageReceiver"*
  %36 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %27, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %35, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7network5mojom5blink14DataPipeGetter5Name_E, i64 0, i64 0)) #11
  br i1 %36, label %37, label %62

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = bitcast %"class.mojo::InterfaceEndpointClient"** %38 to %"class.mojo::MessageReceiverWithResponder"**
  %40 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %39, align 8
  %41 = tail call i8* @_Znwm(i64 16) #12
  %42 = bitcast i8* %41 to %"class.network::mojom::blink::DataPipeGetterProxy"*
  tail call void @_ZN7network5mojom5blink19DataPipeGetterProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.network::mojom::blink::DataPipeGetterProxy"* nonnull %42, %"class.mojo::MessageReceiverWithResponder"* %40) #11
  %43 = ptrtoint i8* %41 to i64
  %44 = load %"class.network::mojom::blink::DataPipeGetterProxy"*, %"class.network::mojom::blink::DataPipeGetterProxy"** %29, align 8
  %45 = bitcast %"class.std::__1::unique_ptr.178"* %28 to i64*
  store i64 %43, i64* %45, align 8
  %46 = icmp eq %"class.network::mojom::blink::DataPipeGetterProxy"* %44, null
  br i1 %46, label %62, label %47

47:                                               ; preds = %37
  %48 = bitcast %"class.network::mojom::blink::DataPipeGetterProxy"* %44 to void (%"class.network::mojom::blink::DataPipeGetterProxy"*)***
  %49 = load void (%"class.network::mojom::blink::DataPipeGetterProxy"*)**, void (%"class.network::mojom::blink::DataPipeGetterProxy"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.network::mojom::blink::DataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::DataPipeGetterProxy"*)** %49, i64 1
  %51 = load void (%"class.network::mojom::blink::DataPipeGetterProxy"*)*, void (%"class.network::mojom::blink::DataPipeGetterProxy"*)** %50, align 8
  tail call void %51(%"class.network::mojom::blink::DataPipeGetterProxy"* nonnull %44) #11
  br label %62

52:                                               ; preds = %20, %8
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #11
  %53 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe.11", %"class.base::RefCountedThreadSafe.11"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw sub i32* %56, i32 1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe.11", %"class.base::RefCountedThreadSafe.11"* %55, i64 -2
  %61 = bitcast %"class.base::RefCountedThreadSafe.11"* %60 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %61) #11
  br label %62

62:                                               ; preds = %47, %37, %32, %25, %52, %54, %59
  ret void
}

declare void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #1

declare void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"*, %"class.mojo::internal::InterfacePtrStateBase"*) local_unnamed_addr #1

declare void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"*, %"struct.mojo::internal::PendingRemoteState"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(88) %"class.blink::FormDataElement"* @_ZN3WTF6VectorIN5blink15FormDataElementELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.187"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %24, i64 %25
  ret %"class.blink::FormDataElement"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15FormDataElementELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.187"*, %"class.blink::FormDataElement"* dereferenceable(88)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %6, align 8
  %8 = icmp ugt %"class.blink::FormDataElement"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %7, i64 %10
  %12 = icmp ugt %"class.blink::FormDataElement"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::FormDataElement"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15FormDataElementEEEmm(i64 %27) #11
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15FormDataElementEEEPKcv, i64 0, i64 0)) #11
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.187"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 88
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.blink::FormDataElement"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink15FormDataElementELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.187"* %0, i32 %22) #11
  %36 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.blink::FormDataElement"* %1 to i64
  %39 = ptrtoint %"class.blink::FormDataElement"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 88
  %42 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !2

52:                                               ; preds = %37
  %53 = icmp eq %"class.blink::FormDataElement"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15FormDataElementEEEmm(i64 %55) #11
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15FormDataElementEEEPKcv, i64 0, i64 0)) #11
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.187"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 88
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.blink::FormDataElement"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink15FormDataElementELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.187"* %0, i32 %50) #11
  %64 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.blink::FormDataElement"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.blink::FormDataElement"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.blink::FormDataElement"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %69, i64 %72, i32 0
  %74 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %70, i64 0, i32 0
  %75 = load i32, i32* %74, align 8
  store i32 %75, i32* %73, align 8
  %76 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %69, i64 %72, i32 1
  %77 = bitcast %"class.WTF::Vector"* %76 to i8*
  %78 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %70, i64 0, i32 1
  %79 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %69, i64 %72, i32 1, i32 0, i32 0, i32 1
  %80 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %69, i64 %72, i32 1, i32 0, i32 0, i32 2
  %81 = bitcast %"class.WTF::Vector"* %78 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #11
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.WTF::Vector"* %76 to i64*
  store atomic i64 0, i64* %81 monotonic, align 8
  store atomic i64 %82, i64* %83 monotonic, align 8
  %84 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %70, i64 0, i32 1, i32 0, i32 0, i32 1
  %85 = load i32, i32* %79, align 4
  %86 = load i32, i32* %84, align 4
  store i32 %86, i32* %79, align 4
  store i32 %85, i32* %84, align 4
  %87 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %70, i64 0, i32 1, i32 0, i32 0, i32 2
  %88 = load i32, i32* %80, align 4
  %89 = load i32, i32* %87, align 4
  store i32 %89, i32* %80, align 4
  store i32 %88, i32* %87, align 4
  %90 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %69, i64 %72, i32 2
  %91 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %70, i64 0, i32 2
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %91, i64 0, i32 0, i32 0
  %93 = bitcast %"class.WTF::String"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.WTF::String"* %90 to i64*
  store i64 %94, i64* %95, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %92, align 8
  %96 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %69, i64 %72, i32 3
  %97 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %70, i64 0, i32 3
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 0, i32 0, i32 0
  %99 = bitcast %"class.WTF::String"* %97 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.WTF::String"* %96 to i64*
  store i64 %100, i64* %101, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %98, align 8
  %102 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %69, i64 %72, i32 4
  %103 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %70, i64 0, i32 4
  %104 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %103, i64 0, i32 0
  %105 = bitcast %class.scoped_refptr.1* %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %class.scoped_refptr.1* %102 to i64*
  store i64 %106, i64* %107, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %104, align 8
  %108 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %69, i64 %72, i32 5
  %109 = bitcast i64* %108 to i8*
  %110 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %70, i64 0, i32 5
  %111 = bitcast i64* %110 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %111, i64 32, i1 false) #11
  %112 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %69, i64 %72, i32 8
  %113 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %70, i64 0, i32 8
  %114 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %113, i64 0, i32 0
  %115 = bitcast %class.scoped_refptr.7* %113 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %class.scoped_refptr.7* %112 to i64*
  store i64 %116, i64* %117, align 8
  store %"class.blink::WrappedDataPipeGetter"* null, %"class.blink::WrappedDataPipeGetter"** %114, align 8
  %118 = load i32, i32* %3, align 4
  %119 = add i32 %118, 1
  store i32 %119, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15FormDataElementELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.187"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %67

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.187"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %65, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"class.blink::FormDataElement"* [ %63, %14 ], [ %6, %4 ]
  %16 = phi %"class.blink::FormDataElement"* [ %62, %14 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %16, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %16, i64 0, i32 1
  %21 = bitcast %"class.WTF::Vector"* %20 to i8*
  %22 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 0, i32 1
  %23 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %16, i64 0, i32 1, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %16, i64 0, i32 1, i32 0, i32 0, i32 2
  %25 = bitcast %"class.WTF::Vector"* %22 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #11
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::Vector"* %20 to i64*
  store atomic i64 0, i64* %25 monotonic, align 8
  store atomic i64 %26, i64* %27 monotonic, align 8
  %28 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 0, i32 1, i32 0, i32 0, i32 1
  %29 = load i32, i32* %23, align 4
  %30 = load i32, i32* %28, align 4
  store i32 %30, i32* %23, align 4
  store i32 %29, i32* %28, align 4
  %31 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 0, i32 1, i32 0, i32 0, i32 2
  %32 = load i32, i32* %24, align 4
  %33 = load i32, i32* %31, align 4
  store i32 %33, i32* %24, align 4
  store i32 %32, i32* %31, align 4
  %34 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %16, i64 0, i32 2
  %35 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 0, i32 2
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %37 = bitcast %"class.WTF::String"* %35 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.WTF::String"* %34 to i64*
  store i64 %38, i64* %39, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %36, align 8
  %40 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %16, i64 0, i32 3
  %41 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 0, i32 3
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 0, i32 0, i32 0
  %43 = bitcast %"class.WTF::String"* %41 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.WTF::String"* %40 to i64*
  store i64 %44, i64* %45, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %42, align 8
  %46 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %16, i64 0, i32 4
  %47 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 0, i32 4
  %48 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %47, i64 0, i32 0
  %49 = bitcast %class.scoped_refptr.1* %47 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %class.scoped_refptr.1* %46 to i64*
  store i64 %50, i64* %51, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %48, align 8
  %52 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %16, i64 0, i32 5
  %53 = bitcast i64* %52 to i8*
  %54 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 0, i32 5
  %55 = bitcast i64* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %55, i64 32, i1 false) #11
  %56 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %16, i64 0, i32 8
  %57 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 0, i32 8
  %58 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %57, i64 0, i32 0
  %59 = bitcast %class.scoped_refptr.7* %57 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %class.scoped_refptr.7* %56 to i64*
  store i64 %60, i64* %61, align 8
  store %"class.blink::WrappedDataPipeGetter"* null, %"class.blink::WrappedDataPipeGetter"** %58, align 8
  tail call void @_ZN5blink15FormDataElementD2Ev(%"class.blink::FormDataElement"* %15) #11
  %62 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %16, i64 1
  %63 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %15, i64 1
  %64 = icmp eq %"class.blink::FormDataElement"* %63, %10
  br i1 %64, label %65, label %14

65:                                               ; preds = %14, %4
  %66 = bitcast %"class.blink::FormDataElement"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %66) #11
  br label %143

67:                                               ; preds = %2
  %68 = zext i32 %1 to i64
  %69 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15FormDataElementEEEmm(i64 %68) #11
  %70 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %69, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15FormDataElementEEEPKcv, i64 0, i64 0)) #11
  %71 = udiv i64 %69, 88
  %72 = ptrtoint i8* %70 to i64
  %73 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %73, align 8
  %75 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %74, i64 %77
  %79 = icmp eq i32 %76, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %67
  %81 = bitcast %"class.blink::FormDataElement"* %74 to i8*
  br label %138

82:                                               ; preds = %67
  %83 = bitcast i8* %70 to %"class.blink::FormDataElement"*
  br label %84

84:                                               ; preds = %82, %84
  %85 = phi %"class.blink::FormDataElement"* [ %133, %84 ], [ %74, %82 ]
  %86 = phi %"class.blink::FormDataElement"* [ %132, %84 ], [ %83, %82 ]
  %87 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %86, i64 0, i32 0
  %88 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %85, i64 0, i32 0
  %89 = load i32, i32* %88, align 8
  store i32 %89, i32* %87, align 8
  %90 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %86, i64 0, i32 1
  %91 = bitcast %"class.WTF::Vector"* %90 to i8*
  %92 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %85, i64 0, i32 1
  %93 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %86, i64 0, i32 1, i32 0, i32 0, i32 1
  %94 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %86, i64 0, i32 1, i32 0, i32 0, i32 2
  %95 = bitcast %"class.WTF::Vector"* %92 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 16, i1 false) #11
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.WTF::Vector"* %90 to i64*
  store atomic i64 0, i64* %95 monotonic, align 8
  store atomic i64 %96, i64* %97 monotonic, align 8
  %98 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %85, i64 0, i32 1, i32 0, i32 0, i32 1
  %99 = load i32, i32* %93, align 4
  %100 = load i32, i32* %98, align 4
  store i32 %100, i32* %93, align 4
  store i32 %99, i32* %98, align 4
  %101 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %85, i64 0, i32 1, i32 0, i32 0, i32 2
  %102 = load i32, i32* %94, align 4
  %103 = load i32, i32* %101, align 4
  store i32 %103, i32* %94, align 4
  store i32 %102, i32* %101, align 4
  %104 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %86, i64 0, i32 2
  %105 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %85, i64 0, i32 2
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %105, i64 0, i32 0, i32 0
  %107 = bitcast %"class.WTF::String"* %105 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.WTF::String"* %104 to i64*
  store i64 %108, i64* %109, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %106, align 8
  %110 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %86, i64 0, i32 3
  %111 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %85, i64 0, i32 3
  %112 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %111, i64 0, i32 0, i32 0
  %113 = bitcast %"class.WTF::String"* %111 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.WTF::String"* %110 to i64*
  store i64 %114, i64* %115, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %112, align 8
  %116 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %86, i64 0, i32 4
  %117 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %85, i64 0, i32 4
  %118 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %117, i64 0, i32 0
  %119 = bitcast %class.scoped_refptr.1* %117 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %class.scoped_refptr.1* %116 to i64*
  store i64 %120, i64* %121, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %118, align 8
  %122 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %86, i64 0, i32 5
  %123 = bitcast i64* %122 to i8*
  %124 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %85, i64 0, i32 5
  %125 = bitcast i64* %124 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %125, i64 32, i1 false) #11
  %126 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %86, i64 0, i32 8
  %127 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %85, i64 0, i32 8
  %128 = getelementptr inbounds %class.scoped_refptr.7, %class.scoped_refptr.7* %127, i64 0, i32 0
  %129 = bitcast %class.scoped_refptr.7* %127 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %class.scoped_refptr.7* %126 to i64*
  store i64 %130, i64* %131, align 8
  store %"class.blink::WrappedDataPipeGetter"* null, %"class.blink::WrappedDataPipeGetter"** %128, align 8
  tail call void @_ZN5blink15FormDataElementD2Ev(%"class.blink::FormDataElement"* %85) #11
  %132 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %86, i64 1
  %133 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %85, i64 1
  %134 = icmp eq %"class.blink::FormDataElement"* %133, %78
  br i1 %134, label %135, label %84

135:                                              ; preds = %84
  %136 = bitcast %"class.WTF::Vector.187"* %0 to i8**
  %137 = load i8*, i8** %136, align 8
  br label %138

138:                                              ; preds = %80, %135
  %139 = phi i8* [ %137, %135 ], [ %81, %80 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %139) #11
  %140 = bitcast %"class.WTF::Vector.187"* %0 to i64*
  store atomic i64 %72, i64* %140 monotonic, align 8
  %141 = trunc i64 %71 to i32
  %142 = getelementptr inbounds %"class.WTF::Vector.187", %"class.WTF::Vector.187"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %141, i32* %142, align 8
  br label %143

143:                                              ; preds = %138, %65
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4mojo13PendingRemoteIN7network5mojom5blink14DataPipeGetterEE30InitWithNewPipeAndPassReceiverEv: argument 0"}
!7 = distinct !{!7, !"_ZN4mojo13PendingRemoteIN7network5mojom5blink14DataPipeGetterEE30InitWithNewPipeAndPassReceiverEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!10 = distinct !{!10, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
