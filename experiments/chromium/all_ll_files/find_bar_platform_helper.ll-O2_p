; ModuleID = '../../chrome/browser/ui/find_bar/find_bar_platform_helper.cc'
source_filename = "../../chrome/browser/ui/find_bar/find_bar_platform_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.FindBarPlatformHelper = type { i32 (...)**, %class.FindBarController* }
%class.FindBarController = type opaque

@_ZTV21FindBarPlatformHelper = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.FindBarPlatformHelper*)* @_ZN21FindBarPlatformHelperD2Ev to i8*), i8* bitcast (void (%class.FindBarPlatformHelper*)* @_ZN21FindBarPlatformHelperD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN21FindBarPlatformHelperD1Ev = hidden unnamed_addr alias void (%class.FindBarPlatformHelper*), void (%class.FindBarPlatformHelper*)* @_ZN21FindBarPlatformHelperD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.FindBarPlatformHelper* @_ZN21FindBarPlatformHelper6CreateEP17FindBarController(%class.FindBarController* nocapture readnone) local_unnamed_addr #0 align 2 {
  ret %class.FindBarPlatformHelper* null
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN21FindBarPlatformHelperC2EP17FindBarController(%class.FindBarPlatformHelper* nocapture, %class.FindBarController*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.FindBarPlatformHelper, %class.FindBarPlatformHelper* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV21FindBarPlatformHelper, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.FindBarPlatformHelper, %class.FindBarPlatformHelper* %0, i64 0, i32 1
  store %class.FindBarController* %1, %class.FindBarController** %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN21FindBarPlatformHelperD2Ev(%class.FindBarPlatformHelper* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN21FindBarPlatformHelperD0Ev(%class.FindBarPlatformHelper* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #4
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

declare void @__cxa_pure_virtual() unnamed_addr

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
