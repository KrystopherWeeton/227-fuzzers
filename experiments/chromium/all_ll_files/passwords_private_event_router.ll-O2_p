; ModuleID = '../../chrome/browser/extensions/api/passwords_private/passwords_private_event_router.cc'
source_filename = "../../chrome/browser/extensions/api/passwords_private/passwords_private_event_router.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::PasswordsPrivateEventRouter" = type { %class.KeyedService, %"class.content::BrowserContext"*, %"class.extensions::EventRouter"*, %"class.absl::optional", %"class.absl::optional" }
%class.KeyedService = type { i32 (...)** }
%"class.extensions::EventRouter" = type { %class.KeyedService, %"class.extensions::ExtensionRegistryObserver", %"class.extensions::EventListenerMap::Delegate", %"class.content::RenderProcessHostObserver", %"class.extensions::mojom::EventRouter", %"class.content::BrowserContext"*, %"class.extensions::ExtensionPrefs"*, %"class.base::ScopedObservation", %"class.extensions::EventListenerMap", %"class.std::__1::unordered_map.161", %"class.base::ObserverList.185", %"class.std::__1::set.189", %"class.extensions::LazyEventDispatchUtil", %"class.extensions::EventAckData", %"class.mojo::ReceiverSetBase", %"class.base::WeakPtrFactory.220" }
%"class.extensions::ExtensionRegistryObserver" = type { i32 (...)** }
%"class.extensions::EventListenerMap::Delegate" = type { i32 (...)** }
%"class.content::RenderProcessHostObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.8" }
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"class.extensions::mojom::EventRouter" = type { i32 (...)** }
%"class.extensions::ExtensionPrefs" = type opaque
%"class.base::ScopedObservation" = type { %"class.extensions::ExtensionRegistryObserver"*, %"class.extensions::ExtensionRegistry"* }
%"class.extensions::ExtensionRegistry" = type { %class.KeyedService, %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.base::ObserverList", %"class.content::BrowserContext"* }
%"class.extensions::ExtensionSet" = type { %"class.std::__1::map.13" }
%"class.std::__1::map.13" = type { %"class.std::__1::__tree.14" }
%"class.std::__1::__tree.14" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.24" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.extensions::EventListenerMap" = type { %"class.extensions::EventListenerMap::Delegate"*, %"class.std::__1::set", %"class.std::__1::unordered_map", %"class.std::__1::map.54", %"class.extensions::EventFilter" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.29" }
%"class.std::__1::__tree.29" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.36", %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.49", %"class.std::__1::__compressed_pair.51", [4 x i8] }>
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { float }
%"class.std::__1::map.54" = type { %"class.std::__1::__tree.55" }
%"class.std::__1::__tree.55" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.extensions::EventFilter" = type { %"class.url_matcher::URLMatcher", %"class.std::__1::map.134", i32, i32, %"class.std::__1::map.143", %"class.std::__1::map.152" }
%"class.url_matcher::URLMatcher" = type { %"class.url_matcher::URLMatcherConditionFactory", %"class.std::__1::map.74", %"class.std::__1::map.83", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.92", %"class.url_matcher::RegexSetMatcher", %"class.url_matcher::RegexSetMatcher" }
%"class.url_matcher::URLMatcherConditionFactory" = type { i32, %"class.std::__1::map.65", %"class.std::__1::map.65", %"class.std::__1::map.65" }
%"class.std::__1::map.65" = type { %"class.std::__1::__tree.66" }
%"class.std::__1::__tree.66" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.67", %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.74" = type { %"class.std::__1::__tree.75" }
%"class.std::__1::__tree.75" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.76", %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.83" = type { %"class.std::__1::__tree.84" }
%"class.std::__1::__tree.84" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.url_matcher::SubstringSetMatcher"* }
%"class.url_matcher::SubstringSetMatcher" = type <{ %"class.std::__1::vector.95", i8, [7 x i8] }>
%"class.std::__1::vector.95" = type { %"class.std::__1::__vector_base.96" }
%"class.std::__1::__vector_base.96" = type { %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.std::__1::__compressed_pair.104" }
%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode" = type <{ %"class.base::flat_map", i32, i32, i32, [4 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.97" }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.99" }
%"struct.std::__1::pair" = type { i8, i32 }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* }
%"class.url_matcher::RegexSetMatcher" = type { i32 (...)**, %"class.std::__1::map.112", %"class.std::__1::vector.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.92" }
%"class.std::__1::map.112" = type { %"class.std::__1::__tree.113" }
%"class.std::__1::__tree.113" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.114", %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { i32*, i32*, %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { i32* }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.re2::FilteredRE2"* }
%"class.re2::FilteredRE2" = type opaque
%"class.std::__1::map.134" = type { %"class.std::__1::__tree.135" }
%"class.std::__1::__tree.135" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.143" = type { %"class.std::__1::__tree.144" }
%"class.std::__1::__tree.144" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.145", %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.152" = type { %"class.std::__1::__tree.153" }
%"class.std::__1::__tree.153" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.154", %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_map.161" = type { %"class.std::__1::__hash_table.162" }
%"class.std::__1::__hash_table.162" = type <{ %"class.std::__1::unique_ptr.163", %"class.std::__1::__compressed_pair.173", %"class.std::__1::__compressed_pair.178", %"class.std::__1::__compressed_pair.181", [4 x i8] }>
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165", %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base.166"** }
%"struct.std::__1::__hash_node_base.166" = type { %"struct.std::__1::__hash_node_base.166"* }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.std::__1::__bucket_list_deallocator.168" }
%"class.std::__1::__bucket_list_deallocator.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.std::__1::__hash_node_base.166" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.base::ObserverList.185" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.186", i64, i32, [4 x i8] }>
%"class.base::LinkedList.186" = type { %"class.base::LinkNode.187" }
%"class.base::LinkNode.187" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::set.189" = type { %"class.std::__1::__tree.190" }
%"class.std::__1::__tree.190" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.191", %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.extensions::LazyEventDispatchUtil" = type { %"class.extensions::ExtensionRegistryObserver", %"class.content::BrowserContext"*, %"class.base::ObserverList.199", %"class.base::ScopedObservation" }
%"class.base::ObserverList.199" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.200", i64, i32, [4 x i8] }>
%"class.base::LinkedList.200" = type { %"class.base::LinkNode.201" }
%"class.base::LinkNode.201" = type { %"class.base::internal::LinkNodeBase" }
%"class.extensions::EventAckData" = type { %class.scoped_refptr.203, %"class.base::WeakPtrFactory.204" }
%class.scoped_refptr.203 = type { %"class.extensions::EventAckData::CoreThreadEventInfo"* }
%"class.extensions::EventAckData::CoreThreadEventInfo" = type opaque
%"class.base::WeakPtrFactory.204" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.207", i64, %"class.std::__1::map.208", i8*, i64, %"class.base::WeakPtrFactory.219" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.205 }
%class.scoped_refptr.205 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.206", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.206" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.207" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.208" = type { %"class.std::__1::__tree.209" }
%"class.std::__1::__tree.209" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.210", %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory.219" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.220" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::vector.221" }
%"class.std::__1::vector.221" = type { %"class.std::__1::__vector_base.222" }
%"class.std::__1::__vector_base.222" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.223" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.228" }
%"union.absl::variant_internal::DestructibleUnionImpl.228" = type { %"union.absl::variant_internal::DestructibleUnionImpl.229" }
%"union.absl::variant_internal::DestructibleUnionImpl.229" = type { %"union.absl::variant_internal::DestructibleUnionImpl.230" }
%"union.absl::variant_internal::DestructibleUnionImpl.230" = type { %"union.absl::variant_internal::DestructibleUnionImpl.231" }
%"union.absl::variant_internal::DestructibleUnionImpl.231" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.234 }
%union.anon.234 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.base::Value"* }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.std::__1::vector.259" = type opaque
%"struct.extensions::Event" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.263", %"class.content::BrowserContext"*, %class.GURL, i32, [4 x i8], %"struct.extensions::EventFilteringInfo", %"class.base::RepeatingCallback.295" }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.base::ListValue"* }
%"class.base::ListValue" = type { %"class.base::Value" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.269" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %class.GURL* }
%"struct.extensions::EventFilteringInfo" = type <{ %"class.absl::optional.275", %"class.absl::optional.280", %"class.absl::optional.285", %"class.absl::optional.280", %"class.absl::optional.290", [6 x i8] }>
%"class.absl::optional.275" = type { %"class.absl::optional_internal::optional_data.276" }
%"class.absl::optional_internal::optional_data.276" = type { %"class.absl::optional_internal::optional_data_base.277" }
%"class.absl::optional_internal::optional_data_base.277" = type { %"class.absl::optional_internal::optional_data_dtor_base.278" }
%"class.absl::optional_internal::optional_data_dtor_base.278" = type { i8, %union.anon.279 }
%union.anon.279 = type { %class.GURL }
%"class.absl::optional.285" = type { %"class.absl::optional_internal::optional_data.286" }
%"class.absl::optional_internal::optional_data.286" = type { %"class.absl::optional_internal::optional_data_base.287" }
%"class.absl::optional_internal::optional_data_base.287" = type { %"class.absl::optional_internal::optional_data_dtor_base.288" }
%"class.absl::optional_internal::optional_data_dtor_base.288" = type { i8, %union.anon.289 }
%union.anon.289 = type { i32 }
%"class.absl::optional.280" = type { %"class.absl::optional_internal::optional_data.281" }
%"class.absl::optional_internal::optional_data.281" = type { %"class.absl::optional_internal::optional_data_base.282" }
%"class.absl::optional_internal::optional_data_base.282" = type { %"class.absl::optional_internal::optional_data_dtor_base.283" }
%"class.absl::optional_internal::optional_data_dtor_base.283" = type { i8, %union.anon.284 }
%union.anon.284 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.290" = type { %"class.absl::optional_internal::optional_data.291" }
%"class.absl::optional_internal::optional_data.291" = type { %"class.absl::optional_internal::optional_data_base.292" }
%"class.absl::optional_internal::optional_data_base.292" = type { %"class.absl::optional_internal::optional_data_dtor_base.293" }
%"class.absl::optional_internal::optional_data_dtor_base.293" = type { i8, %union.anon.294 }
%union.anon.294 = type { i8 }
%"class.base::RepeatingCallback.295" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector.299" = type opaque
%"struct.extensions::api::passwords_private::PasswordExportProgress" = type { i32, %"class.std::__1::unique_ptr.300" }
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.std::__1::basic_string"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.std::__1::vector.317" = type { %"class.std::__1::__vector_base.318" }
%"class.std::__1::__vector_base.318" = type { %"struct.extensions::api::passwords_private::InsecureCredential"*, %"struct.extensions::api::passwords_private::InsecureCredential"*, %"class.std::__1::__compressed_pair.325" }
%"struct.extensions::api::passwords_private::InsecureCredential" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::unique_ptr.300", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.300", %"class.std::__1::unique_ptr.319" }
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"struct.extensions::api::passwords_private::CompromisedInfo"* }
%"struct.extensions::api::passwords_private::CompromisedInfo" = type <{ double, %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"struct.extensions::api::passwords_private::InsecureCredential"* }
%"struct.extensions::api::passwords_private::PasswordCheckStatus" = type { i32, %"class.std::__1::unique_ptr.330", %"class.std::__1::unique_ptr.330", %"class.std::__1::unique_ptr.300" }
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__111make_uniqueIN10extensions5EventEJNS1_6events14HistogramValueERA_KcNS_6vectorIN4base5ValueENS_9allocatorISA_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@_ZTVN10extensions27PasswordsPrivateEventRouterE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::PasswordsPrivateEventRouter"*)* @_ZN10extensions27PasswordsPrivateEventRouterD2Ev to i8*), i8* bitcast (void (%"class.extensions::PasswordsPrivateEventRouter"*)* @_ZN10extensions27PasswordsPrivateEventRouterD0Ev to i8*), i8* bitcast (void (%class.KeyedService*)* @_ZN12KeyedService8ShutdownEv to i8*)] }, align 8
@_ZN10extensions3api17passwords_private27OnSavedPasswordsListChanged10kEventNameE = external constant [0 x i8], align 1
@_ZN10extensions3api17passwords_private31OnPasswordExceptionsListChanged10kEventNameE = external constant [0 x i8], align 1
@_ZN10extensions3api17passwords_private29OnPasswordsFileExportProgress10kEventNameE = external constant [0 x i8], align 1
@_ZN10extensions3api17passwords_private33OnAccountStorageOptInStateChanged10kEventNameE = external constant [0 x i8], align 1
@_ZN10extensions3api17passwords_private31OnCompromisedCredentialsChanged10kEventNameE = external constant [0 x i8], align 1
@_ZN10extensions3api17passwords_private24OnWeakCredentialsChanged10kEventNameE = external constant [0 x i8], align 1
@_ZN10extensions3api17passwords_private28OnPasswordCheckStatusChanged10kEventNameE = external constant [0 x i8], align 1

@_ZN10extensions27PasswordsPrivateEventRouterC1EPN7content14BrowserContextE = hidden unnamed_addr alias void (%"class.extensions::PasswordsPrivateEventRouter"*, %"class.content::BrowserContext"*), void (%"class.extensions::PasswordsPrivateEventRouter"*, %"class.content::BrowserContext"*)* @_ZN10extensions27PasswordsPrivateEventRouterC2EPN7content14BrowserContextE
@_ZN10extensions27PasswordsPrivateEventRouterD1Ev = hidden unnamed_addr alias void (%"class.extensions::PasswordsPrivateEventRouter"*), void (%"class.extensions::PasswordsPrivateEventRouter"*)* @_ZN10extensions27PasswordsPrivateEventRouterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions27PasswordsPrivateEventRouterC2EPN7content14BrowserContextE(%"class.extensions::PasswordsPrivateEventRouter"*, %"class.content::BrowserContext"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 0
  tail call void @_ZN12KeyedServiceC2Ev(%class.KeyedService* %3) #10
  %4 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10extensions27PasswordsPrivateEventRouterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 1
  store %"class.content::BrowserContext"* %1, %"class.content::BrowserContext"** %5, align 8
  %6 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 2
  store %"class.extensions::EventRouter"* null, %"class.extensions::EventRouter"** %6, align 8
  %7 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %union.anon* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #10
  %11 = bitcast %union.anon* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 25, i1 false)
  %12 = tail call %"class.extensions::EventRouter"* @_ZN10extensions11EventRouter3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"* %1) #10
  store %"class.extensions::EventRouter"* %12, %"class.extensions::EventRouter"** %6, align 8
  ret void
}

declare void @_ZN12KeyedServiceC2Ev(%class.KeyedService*) unnamed_addr #1

declare %"class.extensions::EventRouter"* @_ZN10extensions11EventRouter3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions27PasswordsPrivateEventRouterD2Ev(%"class.extensions::PasswordsPrivateEventRouter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10extensions27PasswordsPrivateEventRouterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %10 = icmp eq %"class.base::Value"* %9, null
  br i1 %10, label %25, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.base::Value"* %9 to i8*
  %13 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %14 = load %"class.base::Value"*, %"class.base::Value"** %13, align 8
  %15 = icmp eq %"class.base::Value"* %14, %9
  br i1 %15, label %23, label %16

16:                                               ; preds = %11, %16
  %17 = phi %"class.base::Value"* [ %18, %16 ], [ %14, %11 ]
  %18 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %17, i64 -1
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %18) #10
  %19 = icmp eq %"class.base::Value"* %18, %9
  br i1 %19, label %20, label %16

20:                                               ; preds = %16
  %21 = bitcast %"class.std::__1::vector.221"* %7 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %20, %11
  %24 = phi i8* [ %22, %20 ], [ %12, %11 ]
  store %"class.base::Value"* %9, %"class.base::Value"** %13, align 8
  tail call void @_ZdlPv(i8* %24) #11
  br label %25

25:                                               ; preds = %23, %6
  store i8 0, i8* %3, align 8
  br label %26

26:                                               ; preds = %1, %25
  %27 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %50, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.base::Value"*, %"class.base::Value"** %32, align 8
  %34 = icmp eq %"class.base::Value"* %33, null
  br i1 %34, label %49, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::Value"* %33 to i8*
  %37 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %38 = load %"class.base::Value"*, %"class.base::Value"** %37, align 8
  %39 = icmp eq %"class.base::Value"* %38, %33
  br i1 %39, label %47, label %40

40:                                               ; preds = %35, %40
  %41 = phi %"class.base::Value"* [ %42, %40 ], [ %38, %35 ]
  %42 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %41, i64 -1
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %42) #10
  %43 = icmp eq %"class.base::Value"* %42, %33
  br i1 %43, label %44, label %40

44:                                               ; preds = %40
  %45 = bitcast %"class.std::__1::vector.221"* %31 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %35
  %48 = phi i8* [ %46, %44 ], [ %36, %35 ]
  store %"class.base::Value"* %33, %"class.base::Value"** %37, align 8
  tail call void @_ZdlPv(i8* %48) #11
  br label %49

49:                                               ; preds = %47, %30
  store i8 0, i8* %27, align 8
  br label %50

50:                                               ; preds = %26, %49
  %51 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 0
  tail call void @_ZN12KeyedServiceD2Ev(%class.KeyedService* %51) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN12KeyedServiceD2Ev(%class.KeyedService*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions27PasswordsPrivateEventRouterD0Ev(%"class.extensions::PasswordsPrivateEventRouter"*) unnamed_addr #0 align 2 {
  tail call void @_ZN10extensions27PasswordsPrivateEventRouterD2Ev(%"class.extensions::PasswordsPrivateEventRouter"* %0) #10
  %2 = bitcast %"class.extensions::PasswordsPrivateEventRouter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions27PasswordsPrivateEventRouter27OnSavedPasswordsListChangedERKNSt3__16vectorINS_3api17passwords_private15PasswordUiEntryENS1_9allocatorIS5_EEEE(%"class.extensions::PasswordsPrivateEventRouter"* nocapture, %"class.std::__1::vector.259"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.221", align 16
  %4 = bitcast %"class.std::__1::vector.221"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  call void @_ZN10extensions3api17passwords_private27OnSavedPasswordsListChanged6CreateERKNSt3__16vectorINS1_15PasswordUiEntryENS3_9allocatorIS5_EEEE(%"class.std::__1::vector.221"* nonnull sret %3, %"class.std::__1::vector.259"* %1) #10
  %5 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %7, label %37, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %8, i64 0, i32 0, i32 0
  %11 = load %"class.base::Value"*, %"class.base::Value"** %10, align 8
  %12 = icmp eq %"class.base::Value"* %11, null
  br i1 %12, label %28, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.base::Value"* %11 to i8*
  %15 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %16 = load %"class.base::Value"*, %"class.base::Value"** %15, align 8
  %17 = icmp eq %"class.base::Value"* %16, %11
  br i1 %17, label %25, label %18

18:                                               ; preds = %13, %18
  %19 = phi %"class.base::Value"* [ %20, %18 ], [ %16, %13 ]
  %20 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %19, i64 -1
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %20) #10
  %21 = icmp eq %"class.base::Value"* %20, %11
  br i1 %21, label %22, label %18

22:                                               ; preds = %18
  %23 = bitcast %"class.std::__1::vector.221"* %8 to i8**
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %22, %13
  %26 = phi i8* [ %24, %22 ], [ %14, %13 ]
  store %"class.base::Value"* %11, %"class.base::Value"** %15, align 8
  call void @_ZdlPv(i8* %26) #11
  %27 = bitcast %"class.std::__1::vector.221"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #10
  br label %28

28:                                               ; preds = %25, %9
  %29 = bitcast %"class.std::__1::vector.221"* %3 to <2 x i64>*
  %30 = load <2 x i64>, <2 x i64>* %29, align 16
  %31 = bitcast %"class.std::__1::vector.221"* %8 to <2 x i64>*
  store <2 x i64> %30, <2 x i64>* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"class.base::Value"** %32 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast %"class.base::Value"** %35 to i64*
  store i64 %34, i64* %36, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 0, i64 24, i1 false) #10
  br label %46

37:                                               ; preds = %2
  %38 = bitcast %"class.std::__1::vector.221"* %3 to <2 x i64>*
  %39 = load <2 x i64>, <2 x i64>* %38, align 16
  %40 = bitcast %"class.std::__1::vector.221"* %8 to <2 x i64>*
  store <2 x i64> %39, <2 x i64>* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast %"class.base::Value"** %41 to i64*
  %43 = load i64, i64* %42, align 16
  %44 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast %"class.base::Value"** %44 to i64*
  store i64 %43, i64* %45, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 0, i64 24, i1 false) #10
  store i8 1, i8* %5, align 8
  br label %46

46:                                               ; preds = %37, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  call void @_ZN10extensions27PasswordsPrivateEventRouter32SendSavedPasswordListToListenersEv(%"class.extensions::PasswordsPrivateEventRouter"* %0)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN10extensions3api17passwords_private27OnSavedPasswordsListChanged6CreateERKNSt3__16vectorINS1_15PasswordUiEntryENS3_9allocatorIS5_EEEE(%"class.std::__1::vector.221"* sret, %"class.std::__1::vector.259"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions27PasswordsPrivateEventRouter32SendSavedPasswordListToListenersEv(%"class.extensions::PasswordsPrivateEventRouter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.std::__1::vector.221", align 8
  %4 = alloca %"class.base::Value", align 8
  %5 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %46, label %8

8:                                                ; preds = %1
  %9 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #10
  store i32 205, i32* %2, align 4
  %10 = bitcast %"class.std::__1::vector.221"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = bitcast %"class.base::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %13 = bitcast %"class.std::__1::vector.221"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %16 = bitcast %"class.base::Value"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %14
  %19 = ashr exact i64 %18, 5
  %20 = inttoptr i64 %14 to %"class.base::Value"*
  call void @_ZN4base5ValueC1ENS_4spanIKS0_Lm18446744073709551615EEE(%"class.base::Value"* nonnull %4, i64 %19, %"class.base::Value"* %20) #10
  call void @_ZN4base5Value8TakeListEv(%"class.std::__1::vector.221"* nonnull sret %3, %"class.base::Value"* nonnull %4) #10
  %21 = call %"struct.extensions::Event"* @_ZNSt3__111make_uniqueIN10extensions5EventEJNS1_6events14HistogramValueERA_KcNS_6vectorIN4base5ValueENS_9allocatorISA_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* nonnull dereferenceable(4) %2, [0 x i8]* nonnull @_ZN10extensions3api17passwords_private27OnSavedPasswordsListChanged10kEventNameE, %"class.std::__1::vector.221"* nonnull dereferenceable(24) %3)
  %22 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.base::Value"*, %"class.base::Value"** %22, align 8
  %24 = icmp eq %"class.base::Value"* %23, null
  br i1 %24, label %39, label %25

25:                                               ; preds = %8
  %26 = bitcast %"class.base::Value"* %23 to i8*
  %27 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %3, i64 0, i32 0, i32 1
  %28 = load %"class.base::Value"*, %"class.base::Value"** %27, align 8
  %29 = icmp eq %"class.base::Value"* %28, %23
  br i1 %29, label %37, label %30

30:                                               ; preds = %25, %30
  %31 = phi %"class.base::Value"* [ %32, %30 ], [ %28, %25 ]
  %32 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %31, i64 -1
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %32) #10
  %33 = icmp eq %"class.base::Value"* %32, %23
  br i1 %33, label %34, label %30

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::vector.221"* %3 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %25
  %38 = phi i8* [ %36, %34 ], [ %26, %25 ]
  store %"class.base::Value"* %23, %"class.base::Value"** %27, align 8
  call void @_ZdlPv(i8* %38) #11
  br label %39

39:                                               ; preds = %37, %8
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #10
  %40 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 2
  %41 = load %"class.extensions::EventRouter"*, %"class.extensions::EventRouter"** %40, align 8
  %42 = bitcast %"class.extensions::EventRouter"* %41 to void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)***
  %43 = load void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)**, void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)*, void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)** %43, i64 12
  %45 = load void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)*, void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)** %44, align 8
  call void %45(%"class.extensions::EventRouter"* %41, %"struct.extensions::Event"* %21) #10
  br label %46

46:                                               ; preds = %1, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.extensions::Event"* @_ZNSt3__111make_uniqueIN10extensions5EventEJNS1_6events14HistogramValueERA_KcNS_6vectorIN4base5ValueENS_9allocatorISA_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* dereferenceable(4), [0 x i8]*, %"class.std::__1::vector.221"* dereferenceable(24)) local_unnamed_addr #5 comdat {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::vector.221", align 16
  %6 = tail call i8* @_Znwm(i64 392) #11
  %7 = bitcast i8* %6 to %"struct.extensions::Event"*
  %8 = load i32, i32* %0, align 4
  %9 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  %10 = getelementptr inbounds [0 x i8], [0 x i8]* %1, i64 0, i64 0
  %11 = tail call i64 @strlen(i8* %10) #10
  %12 = icmp ugt i64 %11, -17
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %14) #12
  unreachable

15:                                               ; preds = %3
  %16 = icmp ult i64 %11, 23
  br i1 %16, label %25, label %17

17:                                               ; preds = %15
  %18 = add nuw i64 %11, 16
  %19 = and i64 %18, -16
  %20 = tail call i8* @_Znwm(i64 %19) #11
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = or i64 %19, -9223372036854775808
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %11, i64* %24, align 8
  br label %30

25:                                               ; preds = %15
  %26 = trunc i64 %11 to i8
  %27 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 %26, i8* %28, align 1
  %29 = icmp eq i64 %11, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %25, %17
  %31 = phi i8* [ %20, %17 ], [ %9, %25 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %31, i8* align 1 %10, i64 %11, i1 false) #10
  br label %32

32:                                               ; preds = %25, %30
  %33 = phi i8* [ %9, %25 ], [ %31, %30 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 %11
  store i8 0, i8* %34, align 1
  %35 = bitcast %"class.std::__1::vector.221"* %2 to <2 x i64>*
  %36 = load <2 x i64>, <2 x i64>* %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %5, i64 0, i32 0, i32 1
  %38 = bitcast %"class.std::__1::vector.221"* %5 to <2 x i64>*
  store <2 x i64> %36, <2 x i64>* %38, align 16
  %39 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast %"class.base::Value"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %43 = bitcast %"class.base::Value"** %42 to i64*
  store i64 %41, i64* %43, align 16
  %44 = bitcast %"class.std::__1::vector.221"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #10
  call void @_ZN10extensions5EventC1ENS_6events14HistogramValueERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_6vectorIN4base5ValueENS7_ISE_EEEE(%"struct.extensions::Event"* nonnull %7, i32 %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::vector.221"* nonnull %5) #10
  %45 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %5, i64 0, i32 0, i32 0
  %46 = load %"class.base::Value"*, %"class.base::Value"** %45, align 16
  %47 = icmp eq %"class.base::Value"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %32
  %49 = bitcast %"class.base::Value"* %46 to i8*
  %50 = load %"class.base::Value"*, %"class.base::Value"** %37, align 8
  %51 = icmp eq %"class.base::Value"* %50, %46
  br i1 %51, label %59, label %52

52:                                               ; preds = %48, %52
  %53 = phi %"class.base::Value"* [ %54, %52 ], [ %50, %48 ]
  %54 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %53, i64 -1
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %54) #10
  %55 = icmp eq %"class.base::Value"* %54, %46
  br i1 %55, label %56, label %52

56:                                               ; preds = %52
  %57 = bitcast %"class.std::__1::vector.221"* %5 to i8**
  %58 = load i8*, i8** %57, align 16
  br label %59

59:                                               ; preds = %56, %48
  %60 = phi i8* [ %58, %56 ], [ %49, %48 ]
  store %"class.base::Value"* %46, %"class.base::Value"** %37, align 8
  call void @_ZdlPv(i8* %60) #11
  br label %61

61:                                               ; preds = %32, %59
  %62 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %61, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  ret %"struct.extensions::Event"* %7
}

declare void @_ZN4base5ValueC1ENS_4spanIKS0_Lm18446744073709551615EEE(%"class.base::Value"*, i64, %"class.base::Value"*) unnamed_addr #1

declare void @_ZN4base5Value8TakeListEv(%"class.std::__1::vector.221"* sret, %"class.base::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions27PasswordsPrivateEventRouter31OnPasswordExceptionsListChangedERKNSt3__16vectorINS_3api17passwords_private14ExceptionEntryENS1_9allocatorIS5_EEEE(%"class.extensions::PasswordsPrivateEventRouter"* nocapture, %"class.std::__1::vector.299"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.221", align 16
  %4 = bitcast %"class.std::__1::vector.221"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  call void @_ZN10extensions3api17passwords_private31OnPasswordExceptionsListChanged6CreateERKNSt3__16vectorINS1_14ExceptionEntryENS3_9allocatorIS5_EEEE(%"class.std::__1::vector.221"* nonnull sret %3, %"class.std::__1::vector.299"* %1) #10
  %5 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %7, label %37, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %8, i64 0, i32 0, i32 0
  %11 = load %"class.base::Value"*, %"class.base::Value"** %10, align 8
  %12 = icmp eq %"class.base::Value"* %11, null
  br i1 %12, label %28, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.base::Value"* %11 to i8*
  %15 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %16 = load %"class.base::Value"*, %"class.base::Value"** %15, align 8
  %17 = icmp eq %"class.base::Value"* %16, %11
  br i1 %17, label %25, label %18

18:                                               ; preds = %13, %18
  %19 = phi %"class.base::Value"* [ %20, %18 ], [ %16, %13 ]
  %20 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %19, i64 -1
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %20) #10
  %21 = icmp eq %"class.base::Value"* %20, %11
  br i1 %21, label %22, label %18

22:                                               ; preds = %18
  %23 = bitcast %"class.std::__1::vector.221"* %8 to i8**
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %22, %13
  %26 = phi i8* [ %24, %22 ], [ %14, %13 ]
  store %"class.base::Value"* %11, %"class.base::Value"** %15, align 8
  call void @_ZdlPv(i8* %26) #11
  %27 = bitcast %"class.std::__1::vector.221"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #10
  br label %28

28:                                               ; preds = %25, %9
  %29 = bitcast %"class.std::__1::vector.221"* %3 to <2 x i64>*
  %30 = load <2 x i64>, <2 x i64>* %29, align 16
  %31 = bitcast %"class.std::__1::vector.221"* %8 to <2 x i64>*
  store <2 x i64> %30, <2 x i64>* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"class.base::Value"** %32 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast %"class.base::Value"** %35 to i64*
  store i64 %34, i64* %36, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 0, i64 24, i1 false) #10
  br label %46

37:                                               ; preds = %2
  %38 = bitcast %"class.std::__1::vector.221"* %3 to <2 x i64>*
  %39 = load <2 x i64>, <2 x i64>* %38, align 16
  %40 = bitcast %"class.std::__1::vector.221"* %8 to <2 x i64>*
  store <2 x i64> %39, <2 x i64>* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast %"class.base::Value"** %41 to i64*
  %43 = load i64, i64* %42, align 16
  %44 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast %"class.base::Value"** %44 to i64*
  store i64 %43, i64* %45, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 0, i64 24, i1 false) #10
  store i8 1, i8* %5, align 8
  br label %46

46:                                               ; preds = %37, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  call void @_ZN10extensions27PasswordsPrivateEventRouter36SendPasswordExceptionListToListenersEv(%"class.extensions::PasswordsPrivateEventRouter"* %0)
  ret void
}

declare void @_ZN10extensions3api17passwords_private31OnPasswordExceptionsListChanged6CreateERKNSt3__16vectorINS1_14ExceptionEntryENS3_9allocatorIS5_EEEE(%"class.std::__1::vector.221"* sret, %"class.std::__1::vector.299"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions27PasswordsPrivateEventRouter36SendPasswordExceptionListToListenersEv(%"class.extensions::PasswordsPrivateEventRouter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.std::__1::vector.221", align 8
  %4 = alloca %"class.base::Value", align 8
  %5 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %46, label %8

8:                                                ; preds = %1
  %9 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #10
  store i32 203, i32* %2, align 4
  %10 = bitcast %"class.std::__1::vector.221"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = bitcast %"class.base::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %13 = bitcast %"class.std::__1::vector.221"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %16 = bitcast %"class.base::Value"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %14
  %19 = ashr exact i64 %18, 5
  %20 = inttoptr i64 %14 to %"class.base::Value"*
  call void @_ZN4base5ValueC1ENS_4spanIKS0_Lm18446744073709551615EEE(%"class.base::Value"* nonnull %4, i64 %19, %"class.base::Value"* %20) #10
  call void @_ZN4base5Value8TakeListEv(%"class.std::__1::vector.221"* nonnull sret %3, %"class.base::Value"* nonnull %4) #10
  %21 = call %"struct.extensions::Event"* @_ZNSt3__111make_uniqueIN10extensions5EventEJNS1_6events14HistogramValueERA_KcNS_6vectorIN4base5ValueENS_9allocatorISA_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* nonnull dereferenceable(4) %2, [0 x i8]* nonnull @_ZN10extensions3api17passwords_private31OnPasswordExceptionsListChanged10kEventNameE, %"class.std::__1::vector.221"* nonnull dereferenceable(24) %3)
  %22 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.base::Value"*, %"class.base::Value"** %22, align 8
  %24 = icmp eq %"class.base::Value"* %23, null
  br i1 %24, label %39, label %25

25:                                               ; preds = %8
  %26 = bitcast %"class.base::Value"* %23 to i8*
  %27 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %3, i64 0, i32 0, i32 1
  %28 = load %"class.base::Value"*, %"class.base::Value"** %27, align 8
  %29 = icmp eq %"class.base::Value"* %28, %23
  br i1 %29, label %37, label %30

30:                                               ; preds = %25, %30
  %31 = phi %"class.base::Value"* [ %32, %30 ], [ %28, %25 ]
  %32 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %31, i64 -1
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %32) #10
  %33 = icmp eq %"class.base::Value"* %32, %23
  br i1 %33, label %34, label %30

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::vector.221"* %3 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %25
  %38 = phi i8* [ %36, %34 ], [ %26, %25 ]
  store %"class.base::Value"* %23, %"class.base::Value"** %27, align 8
  call void @_ZdlPv(i8* %38) #11
  br label %39

39:                                               ; preds = %37, %8
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #10
  %40 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 2
  %41 = load %"class.extensions::EventRouter"*, %"class.extensions::EventRouter"** %40, align 8
  %42 = bitcast %"class.extensions::EventRouter"* %41 to void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)***
  %43 = load void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)**, void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)*, void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)** %43, i64 12
  %45 = load void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)*, void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)** %44, align 8
  call void %45(%"class.extensions::EventRouter"* %41, %"struct.extensions::Event"* %21) #10
  br label %46

46:                                               ; preds = %1, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions27PasswordsPrivateEventRouter25OnPasswordsExportProgressENS_3api17passwords_private20ExportProgressStatusERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.extensions::PasswordsPrivateEventRouter"* nocapture readonly, i32, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.extensions::api::passwords_private::PasswordExportProgress", align 8
  %5 = alloca %"class.std::__1::vector.221", align 8
  %6 = alloca %"class.base::Value", align 8
  %7 = alloca i32, align 4
  %8 = bitcast %"struct.extensions::api::passwords_private::PasswordExportProgress"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  call void @_ZN10extensions3api17passwords_private22PasswordExportProgressC1Ev(%"struct.extensions::api::passwords_private::PasswordExportProgress"* nonnull %4) #10
  %9 = getelementptr inbounds %"struct.extensions::api::passwords_private::PasswordExportProgress", %"struct.extensions::api::passwords_private::PasswordExportProgress"* %4, i64 0, i32 0
  store i32 %1, i32* %9, align 8
  %10 = call i8* @_Znwm(i64 24) #11
  %11 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %16, i64 24, i1 false) #10
  br label %23

17:                                               ; preds = %3
  %18 = bitcast i8* %10 to %"class.std::__1::basic_string"*
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %18, i8* %20, i64 %22) #10
  br label %23

23:                                               ; preds = %15, %17
  %24 = ptrtoint i8* %10 to i64
  %25 = getelementptr inbounds %"struct.extensions::api::passwords_private::PasswordExportProgress", %"struct.extensions::api::passwords_private::PasswordExportProgress"* %4, i64 0, i32 1
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.300", %"class.std::__1::unique_ptr.300"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.300"* %25 to i64*
  store i64 %24, i64* %28, align 8
  %29 = icmp eq %"class.std::__1::basic_string"* %27, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %23
  %31 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #11
  br label %38

38:                                               ; preds = %35, %30
  %39 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @_ZdlPv(i8* %39) #11
  br label %40

40:                                               ; preds = %38, %23
  %41 = bitcast %"class.std::__1::vector.221"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #10
  %42 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %5, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 24, i1 false) #10
  %44 = bitcast %"class.base::Value"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #10
  %45 = call %"class.base::DictionaryValue"* @_ZNK10extensions3api17passwords_private22PasswordExportProgress7ToValueEv(%"struct.extensions::api::passwords_private::PasswordExportProgress"* nonnull %4) #10
  %46 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %45, i64 0, i32 0
  call void @_ZN4base5Value18FromUniquePtrValueENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.base::Value"* nonnull sret %6, %"class.base::Value"* %46) #10
  call void @_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.221"* nonnull %5, %"class.base::Value"* nonnull dereferenceable(32) %6) #10
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #10
  %47 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #10
  store i32 415, i32* %7, align 4
  %48 = call %"struct.extensions::Event"* @_ZNSt3__111make_uniqueIN10extensions5EventEJNS1_6events14HistogramValueERA_KcNS_6vectorIN4base5ValueENS_9allocatorISA_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* nonnull dereferenceable(4) %7, [0 x i8]* nonnull @_ZN10extensions3api17passwords_private29OnPasswordsFileExportProgress10kEventNameE, %"class.std::__1::vector.221"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #10
  %49 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 2
  %50 = load %"class.extensions::EventRouter"*, %"class.extensions::EventRouter"** %49, align 8
  %51 = bitcast %"class.extensions::EventRouter"* %50 to void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)***
  %52 = load void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)**, void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)*, void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)** %52, i64 12
  %54 = load void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)*, void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)** %53, align 8
  call void %54(%"class.extensions::EventRouter"* %50, %"struct.extensions::Event"* %48) #10
  %55 = load %"class.base::Value"*, %"class.base::Value"** %42, align 8
  %56 = icmp eq %"class.base::Value"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %40
  %58 = bitcast %"class.base::Value"* %55 to i8*
  %59 = load %"class.base::Value"*, %"class.base::Value"** %43, align 8
  %60 = icmp eq %"class.base::Value"* %59, %55
  br i1 %60, label %68, label %61

61:                                               ; preds = %57, %61
  %62 = phi %"class.base::Value"* [ %63, %61 ], [ %59, %57 ]
  %63 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %62, i64 -1
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %63) #10
  %64 = icmp eq %"class.base::Value"* %63, %55
  br i1 %64, label %65, label %61

65:                                               ; preds = %61
  %66 = bitcast %"class.std::__1::vector.221"* %5 to i8**
  %67 = load i8*, i8** %66, align 8
  br label %68

68:                                               ; preds = %65, %57
  %69 = phi i8* [ %67, %65 ], [ %58, %57 ]
  store %"class.base::Value"* %55, %"class.base::Value"** %43, align 8
  call void @_ZdlPv(i8* %69) #11
  br label %70

70:                                               ; preds = %40, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #10
  call void @_ZN10extensions3api17passwords_private22PasswordExportProgressD1Ev(%"struct.extensions::api::passwords_private::PasswordExportProgress"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN10extensions3api17passwords_private22PasswordExportProgressC1Ev(%"struct.extensions::api::passwords_private::PasswordExportProgress"*) unnamed_addr #1

declare void @_ZN4base5Value18FromUniquePtrValueENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.base::Value"* sret, %"class.base::Value"*) local_unnamed_addr #1

declare %"class.base::DictionaryValue"* @_ZNK10extensions3api17passwords_private22PasswordExportProgress7ToValueEv(%"struct.extensions::api::passwords_private::PasswordExportProgress"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN10extensions3api17passwords_private22PasswordExportProgressD1Ev(%"struct.extensions::api::passwords_private::PasswordExportProgress"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions27PasswordsPrivateEventRouter33OnAccountStorageOptInStateChangedEb(%"class.extensions::PasswordsPrivateEventRouter"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::vector.221", align 8
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #10
  store i32 451, i32* %3, align 4
  %6 = bitcast %"class.std::__1::vector.221"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  call void @_ZN10extensions3api17passwords_private33OnAccountStorageOptInStateChanged6CreateEb(%"class.std::__1::vector.221"* nonnull sret %4, i1 zeroext %1) #10
  %7 = call %"struct.extensions::Event"* @_ZNSt3__111make_uniqueIN10extensions5EventEJNS1_6events14HistogramValueERA_KcNS_6vectorIN4base5ValueENS_9allocatorISA_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* nonnull dereferenceable(4) %3, [0 x i8]* nonnull @_ZN10extensions3api17passwords_private33OnAccountStorageOptInStateChanged10kEventNameE, %"class.std::__1::vector.221"* nonnull dereferenceable(24) %4)
  %8 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %4, i64 0, i32 0, i32 0
  %9 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %10 = icmp eq %"class.base::Value"* %9, null
  br i1 %10, label %25, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.base::Value"* %9 to i8*
  %13 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %4, i64 0, i32 0, i32 1
  %14 = load %"class.base::Value"*, %"class.base::Value"** %13, align 8
  %15 = icmp eq %"class.base::Value"* %14, %9
  br i1 %15, label %23, label %16

16:                                               ; preds = %11, %16
  %17 = phi %"class.base::Value"* [ %18, %16 ], [ %14, %11 ]
  %18 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %17, i64 -1
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %18) #10
  %19 = icmp eq %"class.base::Value"* %18, %9
  br i1 %19, label %20, label %16

20:                                               ; preds = %16
  %21 = bitcast %"class.std::__1::vector.221"* %4 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %20, %11
  %24 = phi i8* [ %22, %20 ], [ %12, %11 ]
  store %"class.base::Value"* %9, %"class.base::Value"** %13, align 8
  call void @_ZdlPv(i8* %24) #11
  br label %25

25:                                               ; preds = %23, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #10
  %26 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 2
  %27 = load %"class.extensions::EventRouter"*, %"class.extensions::EventRouter"** %26, align 8
  %28 = bitcast %"class.extensions::EventRouter"* %27 to void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)***
  %29 = load void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)**, void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)*, void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)** %29, i64 12
  %31 = load void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)*, void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)** %30, align 8
  call void %31(%"class.extensions::EventRouter"* %27, %"struct.extensions::Event"* %7) #10
  ret void
}

declare void @_ZN10extensions3api17passwords_private33OnAccountStorageOptInStateChanged6CreateEb(%"class.std::__1::vector.221"* sret, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions27PasswordsPrivateEventRouter31OnCompromisedCredentialsChangedENSt3__16vectorINS_3api17passwords_private18InsecureCredentialENS1_9allocatorIS5_EEEE(%"class.extensions::PasswordsPrivateEventRouter"* nocapture readonly, %"class.std::__1::vector.317"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::vector.221", align 8
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #10
  store i32 453, i32* %3, align 4
  %6 = bitcast %"class.std::__1::vector.221"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  call void @_ZN10extensions3api17passwords_private31OnCompromisedCredentialsChanged6CreateERKNSt3__16vectorINS1_18InsecureCredentialENS3_9allocatorIS5_EEEE(%"class.std::__1::vector.221"* nonnull sret %4, %"class.std::__1::vector.317"* dereferenceable(24) %1) #10
  %7 = call %"struct.extensions::Event"* @_ZNSt3__111make_uniqueIN10extensions5EventEJNS1_6events14HistogramValueERA_KcNS_6vectorIN4base5ValueENS_9allocatorISA_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* nonnull dereferenceable(4) %3, [0 x i8]* nonnull @_ZN10extensions3api17passwords_private31OnCompromisedCredentialsChanged10kEventNameE, %"class.std::__1::vector.221"* nonnull dereferenceable(24) %4)
  %8 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %4, i64 0, i32 0, i32 0
  %9 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %10 = icmp eq %"class.base::Value"* %9, null
  br i1 %10, label %25, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.base::Value"* %9 to i8*
  %13 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %4, i64 0, i32 0, i32 1
  %14 = load %"class.base::Value"*, %"class.base::Value"** %13, align 8
  %15 = icmp eq %"class.base::Value"* %14, %9
  br i1 %15, label %23, label %16

16:                                               ; preds = %11, %16
  %17 = phi %"class.base::Value"* [ %18, %16 ], [ %14, %11 ]
  %18 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %17, i64 -1
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %18) #10
  %19 = icmp eq %"class.base::Value"* %18, %9
  br i1 %19, label %20, label %16

20:                                               ; preds = %16
  %21 = bitcast %"class.std::__1::vector.221"* %4 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %20, %11
  %24 = phi i8* [ %22, %20 ], [ %12, %11 ]
  store %"class.base::Value"* %9, %"class.base::Value"** %13, align 8
  call void @_ZdlPv(i8* %24) #11
  br label %25

25:                                               ; preds = %23, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #10
  %26 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 2
  %27 = load %"class.extensions::EventRouter"*, %"class.extensions::EventRouter"** %26, align 8
  %28 = bitcast %"class.extensions::EventRouter"* %27 to void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)***
  %29 = load void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)**, void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)*, void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)** %29, i64 12
  %31 = load void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)*, void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)** %30, align 8
  call void %31(%"class.extensions::EventRouter"* %27, %"struct.extensions::Event"* %7) #10
  ret void
}

declare void @_ZN10extensions3api17passwords_private31OnCompromisedCredentialsChanged6CreateERKNSt3__16vectorINS1_18InsecureCredentialENS3_9allocatorIS5_EEEE(%"class.std::__1::vector.221"* sret, %"class.std::__1::vector.317"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions27PasswordsPrivateEventRouter24OnWeakCredentialsChangedENSt3__16vectorINS_3api17passwords_private18InsecureCredentialENS1_9allocatorIS5_EEEE(%"class.extensions::PasswordsPrivateEventRouter"* nocapture readonly, %"class.std::__1::vector.317"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::vector.221", align 8
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #10
  store i32 463, i32* %3, align 4
  %6 = bitcast %"class.std::__1::vector.221"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  call void @_ZN10extensions3api17passwords_private24OnWeakCredentialsChanged6CreateERKNSt3__16vectorINS1_18InsecureCredentialENS3_9allocatorIS5_EEEE(%"class.std::__1::vector.221"* nonnull sret %4, %"class.std::__1::vector.317"* dereferenceable(24) %1) #10
  %7 = call %"struct.extensions::Event"* @_ZNSt3__111make_uniqueIN10extensions5EventEJNS1_6events14HistogramValueERA_KcNS_6vectorIN4base5ValueENS_9allocatorISA_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* nonnull dereferenceable(4) %3, [0 x i8]* nonnull @_ZN10extensions3api17passwords_private24OnWeakCredentialsChanged10kEventNameE, %"class.std::__1::vector.221"* nonnull dereferenceable(24) %4)
  %8 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %4, i64 0, i32 0, i32 0
  %9 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %10 = icmp eq %"class.base::Value"* %9, null
  br i1 %10, label %25, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.base::Value"* %9 to i8*
  %13 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %4, i64 0, i32 0, i32 1
  %14 = load %"class.base::Value"*, %"class.base::Value"** %13, align 8
  %15 = icmp eq %"class.base::Value"* %14, %9
  br i1 %15, label %23, label %16

16:                                               ; preds = %11, %16
  %17 = phi %"class.base::Value"* [ %18, %16 ], [ %14, %11 ]
  %18 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %17, i64 -1
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %18) #10
  %19 = icmp eq %"class.base::Value"* %18, %9
  br i1 %19, label %20, label %16

20:                                               ; preds = %16
  %21 = bitcast %"class.std::__1::vector.221"* %4 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %20, %11
  %24 = phi i8* [ %22, %20 ], [ %12, %11 ]
  store %"class.base::Value"* %9, %"class.base::Value"** %13, align 8
  call void @_ZdlPv(i8* %24) #11
  br label %25

25:                                               ; preds = %23, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #10
  %26 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 2
  %27 = load %"class.extensions::EventRouter"*, %"class.extensions::EventRouter"** %26, align 8
  %28 = bitcast %"class.extensions::EventRouter"* %27 to void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)***
  %29 = load void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)**, void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)*, void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)** %29, i64 12
  %31 = load void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)*, void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)** %30, align 8
  call void %31(%"class.extensions::EventRouter"* %27, %"struct.extensions::Event"* %7) #10
  ret void
}

declare void @_ZN10extensions3api17passwords_private24OnWeakCredentialsChanged6CreateERKNSt3__16vectorINS1_18InsecureCredentialENS3_9allocatorIS5_EEEE(%"class.std::__1::vector.221"* sret, %"class.std::__1::vector.317"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions27PasswordsPrivateEventRouter28OnPasswordCheckStatusChangedERKNS_3api17passwords_private19PasswordCheckStatusE(%"class.extensions::PasswordsPrivateEventRouter"* nocapture readonly, %"struct.extensions::api::passwords_private::PasswordCheckStatus"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::vector.221", align 8
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #10
  store i32 455, i32* %3, align 4
  %6 = bitcast %"class.std::__1::vector.221"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  call void @_ZN10extensions3api17passwords_private28OnPasswordCheckStatusChanged6CreateERKNS1_19PasswordCheckStatusE(%"class.std::__1::vector.221"* nonnull sret %4, %"struct.extensions::api::passwords_private::PasswordCheckStatus"* dereferenceable(32) %1) #10
  %7 = call %"struct.extensions::Event"* @_ZNSt3__111make_uniqueIN10extensions5EventEJNS1_6events14HistogramValueERA_KcNS_6vectorIN4base5ValueENS_9allocatorISA_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* nonnull dereferenceable(4) %3, [0 x i8]* nonnull @_ZN10extensions3api17passwords_private28OnPasswordCheckStatusChanged10kEventNameE, %"class.std::__1::vector.221"* nonnull dereferenceable(24) %4)
  %8 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %4, i64 0, i32 0, i32 0
  %9 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %10 = icmp eq %"class.base::Value"* %9, null
  br i1 %10, label %25, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.base::Value"* %9 to i8*
  %13 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %4, i64 0, i32 0, i32 1
  %14 = load %"class.base::Value"*, %"class.base::Value"** %13, align 8
  %15 = icmp eq %"class.base::Value"* %14, %9
  br i1 %15, label %23, label %16

16:                                               ; preds = %11, %16
  %17 = phi %"class.base::Value"* [ %18, %16 ], [ %14, %11 ]
  %18 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %17, i64 -1
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %18) #10
  %19 = icmp eq %"class.base::Value"* %18, %9
  br i1 %19, label %20, label %16

20:                                               ; preds = %16
  %21 = bitcast %"class.std::__1::vector.221"* %4 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %20, %11
  %24 = phi i8* [ %22, %20 ], [ %12, %11 ]
  store %"class.base::Value"* %9, %"class.base::Value"** %13, align 8
  call void @_ZdlPv(i8* %24) #11
  br label %25

25:                                               ; preds = %23, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #10
  %26 = getelementptr inbounds %"class.extensions::PasswordsPrivateEventRouter", %"class.extensions::PasswordsPrivateEventRouter"* %0, i64 0, i32 2
  %27 = load %"class.extensions::EventRouter"*, %"class.extensions::EventRouter"** %26, align 8
  %28 = bitcast %"class.extensions::EventRouter"* %27 to void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)***
  %29 = load void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)**, void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)*, void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)** %29, i64 12
  %31 = load void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)*, void (%"class.extensions::EventRouter"*, %"struct.extensions::Event"*)** %30, align 8
  call void %31(%"class.extensions::EventRouter"* %27, %"struct.extensions::Event"* %7) #10
  ret void
}

declare void @_ZN10extensions3api17passwords_private28OnPasswordCheckStatusChanged6CreateERKNS1_19PasswordCheckStatusE(%"class.std::__1::vector.221"* sret, %"struct.extensions::api::passwords_private::PasswordCheckStatus"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.extensions::PasswordsPrivateEventRouter"* @_ZN10extensions27PasswordsPrivateEventRouter6CreateEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 88) #11
  %3 = bitcast i8* %2 to %"class.extensions::PasswordsPrivateEventRouter"*
  %4 = bitcast i8* %2 to %class.KeyedService*
  tail call void @_ZN12KeyedServiceC2Ev(%class.KeyedService* nonnull %4) #10
  %5 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10extensions27PasswordsPrivateEventRouterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = bitcast i8* %6 to %"class.content::BrowserContext"**
  store %"class.content::BrowserContext"* %0, %"class.content::BrowserContext"** %7, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 16
  %9 = bitcast i8* %8 to %"class.extensions::EventRouter"**
  store %"class.extensions::EventRouter"* null, %"class.extensions::EventRouter"** %9, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 24
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 32
  %12 = getelementptr inbounds i8, i8* %2, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 25, i1 false) #10
  %13 = tail call %"class.extensions::EventRouter"* @_ZN10extensions11EventRouter3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"* %0) #10
  store %"class.extensions::EventRouter"* %13, %"class.extensions::EventRouter"** %9, align 8
  ret %"class.extensions::PasswordsPrivateEventRouter"* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN12KeyedService8ShutdownEv(%class.KeyedService*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN10extensions5EventC1ENS_6events14HistogramValueERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_6vectorIN4base5ValueENS7_ISE_EEEE(%"struct.extensions::Event"*, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.221"*) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.221"*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::Value"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.221"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.221"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::Value"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.base::Value"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::Value"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %36, i64 %35
  %39 = ptrtoint %"class.base::Value"* %38 to i64
  tail call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %37, %"class.base::Value"* dereferenceable(32) %1) #10
  %40 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %37, i64 1
  %41 = ptrtoint %"class.base::Value"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.base::Value"*, %"class.base::Value"** %42, align 8
  %44 = load %"class.base::Value"*, %"class.base::Value"** %3, align 8
  %45 = icmp eq %"class.base::Value"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.base::Value"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"class.base::Value"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.base::Value"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %49, i64 -1
  %52 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %50, i64 -1
  tail call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %51, %"class.base::Value"* dereferenceable(32) %52) #10
  %53 = icmp eq %"class.base::Value"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"class.base::Value"*, %"class.base::Value"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"class.base::Value"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"class.base::Value"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"class.base::Value"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"class.base::Value"*
  %63 = icmp eq %"class.base::Value"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"class.base::Value"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %65, i64 -1
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %66) #10
  %67 = icmp eq %"class.base::Value"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #11
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
