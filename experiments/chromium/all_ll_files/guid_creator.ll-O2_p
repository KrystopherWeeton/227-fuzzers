; ModuleID = '../../third_party/breakpad/breakpad/src/common/linux/guid_creator.cc'
source_filename = "../../third_party/breakpad/breakpad/src/common/linux/guid_creator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.MDGUID = type { i32, i16, i16, [8 x i8] }

$_ZN13GUIDGenerator18CreateGUIDFromRandEP6MDGUID = comdat any

$_ZN13GUIDGenerator12InitOnceImplEv = comdat any

@_ZN13GUIDGenerator12once_controlE = hidden global i32 0, align 4
@.str = private unnamed_addr constant [25 x i8] c"%08x-%04x-%04x-%08x-%08x\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z10CreateGUIDP6MDGUID(%struct.MDGUID*) local_unnamed_addr #0 {
  %2 = bitcast %struct.MDGUID* %0 to i8*
  %3 = tail call i32 (i8*, i32, ...) @open64(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i32 524288) #7
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %17, label %5

5:                                                ; preds = %1, %8
  %6 = tail call i64 @read(i32 %3, i8* %2, i64 16) #7
  %7 = icmp eq i64 %6, -1
  br i1 %7, label %8, label %14

8:                                                ; preds = %5
  %9 = tail call i32* @__errno_location() #8
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 4
  br i1 %11, label %5, label %12

12:                                               ; preds = %8
  %13 = tail call i32 @close(i32 %3) #7
  br label %17

14:                                               ; preds = %5
  %15 = tail call i32 @close(i32 %3) #7
  %16 = icmp eq i64 %6, 16
  br i1 %16, label %18, label %17

17:                                               ; preds = %1, %12, %14
  tail call void @_ZN13GUIDGenerator18CreateGUIDFromRandEP6MDGUID(%struct.MDGUID* %0) #7
  br label %18

18:                                               ; preds = %14, %17
  %19 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 2
  %20 = load i16, i16* %19, align 2
  %21 = and i16 %20, 4095
  %22 = or i16 %21, 16384
  store i16 %22, i16* %19, align 2
  %23 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 3, i64 0
  %24 = load i8, i8* %23, align 4
  %25 = and i8 %24, 63
  %26 = or i8 %25, -128
  store i8 %26, i8* %23, align 4
  ret i1 true
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_Z12GUIDToStringPK6MDGUIDPci(%struct.MDGUID* nocapture readonly, i8* nocapture, i32) local_unnamed_addr #1 {
  %4 = sext i32 %2 to i64
  %5 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 1
  %8 = load i16, i16* %7, align 4
  %9 = zext i16 %8 to i32
  %10 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 2
  %11 = load i16, i16* %10, align 2
  %12 = zext i16 %11 to i32
  %13 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 3, i64 0
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 3, i64 1
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = shl nuw nsw i32 %18, 8
  %20 = or i32 %19, %15
  %21 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 3, i64 2
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = shl nuw nsw i32 %23, 16
  %25 = or i32 %20, %24
  %26 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 3, i64 3
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = shl nuw i32 %28, 24
  %30 = or i32 %25, %29
  %31 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 3, i64 4
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 3, i64 5
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = shl nuw nsw i32 %36, 8
  %38 = or i32 %37, %33
  %39 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 3, i64 6
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = shl nuw nsw i32 %41, 16
  %43 = or i32 %38, %42
  %44 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 3, i64 7
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = shl nuw i32 %46, 24
  %48 = or i32 %43, %47
  %49 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1, i64 %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 %6, i32 %9, i32 %12, i32 %30, i32 %48) #7
  %50 = icmp eq i32 %49, 36
  br i1 %50, label %51, label %53

51:                                               ; preds = %3
  %52 = getelementptr inbounds i8, i8* %1, i64 36
  store i8 0, i8* %52, align 1
  br label %53

53:                                               ; preds = %3, %51
  %54 = phi i1 [ true, %51 ], [ false, %3 ]
  ret i1 %54
}

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13GUIDGenerator18CreateGUIDFromRandEP6MDGUID(%struct.MDGUID*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %struct.MDGUID* %0 to i8*
  %3 = tail call i32 @pthread_once(i32* nonnull @_ZN13GUIDGenerator12once_controlE, void ()* nonnull @_ZN13GUIDGenerator12InitOnceImplEv) #7
  %4 = tail call i32 @rand() #7
  %5 = trunc i32 %4 to i8
  store i8 %5, i8* %2, align 1
  %6 = tail call i32 @rand() #7
  %7 = trunc i32 %6 to i8
  %8 = getelementptr inbounds i8, i8* %2, i64 1
  store i8 %7, i8* %8, align 1
  %9 = tail call i32 @rand() #7
  %10 = trunc i32 %9 to i8
  %11 = getelementptr inbounds i8, i8* %2, i64 2
  store i8 %10, i8* %11, align 1
  %12 = tail call i32 @rand() #7
  %13 = trunc i32 %12 to i8
  %14 = getelementptr inbounds i8, i8* %2, i64 3
  store i8 %13, i8* %14, align 1
  %15 = tail call i32 @rand() #7
  %16 = trunc i32 %15 to i8
  %17 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 1
  %18 = bitcast i16* %17 to i8*
  store i8 %16, i8* %18, align 1
  %19 = tail call i32 @rand() #7
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds i8, i8* %2, i64 5
  store i8 %20, i8* %21, align 1
  %22 = tail call i32 @rand() #7
  %23 = trunc i32 %22 to i8
  %24 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 2
  %25 = bitcast i16* %24 to i8*
  store i8 %23, i8* %25, align 1
  %26 = tail call i32 @rand() #7
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds i8, i8* %2, i64 7
  store i8 %27, i8* %28, align 1
  %29 = tail call i32 @rand() #7
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 3, i64 0
  store i8 %30, i8* %31, align 1
  %32 = tail call i32 @rand() #7
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 3, i64 1
  store i8 %33, i8* %34, align 1
  %35 = tail call i32 @rand() #7
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 3, i64 2
  store i8 %36, i8* %37, align 1
  %38 = tail call i32 @rand() #7
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 3, i64 3
  store i8 %39, i8* %40, align 1
  %41 = tail call i32 @rand() #7
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 3, i64 4
  store i8 %42, i8* %43, align 1
  %44 = tail call i32 @rand() #7
  %45 = trunc i32 %44 to i8
  %46 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 3, i64 5
  store i8 %45, i8* %46, align 1
  %47 = tail call i32 @rand() #7
  %48 = trunc i32 %47 to i8
  %49 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 3, i64 6
  store i8 %48, i8* %49, align 1
  %50 = tail call i32 @rand() #7
  %51 = trunc i32 %50 to i8
  %52 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %0, i64 0, i32 3, i64 7
  store i8 %51, i8* %52, align 1
  ret void
}

; Function Attrs: nofree
declare i32 @open64(i8* nocapture readonly, i32, ...) local_unnamed_addr #3

; Function Attrs: nofree
declare i64 @read(i32, i8* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #4

declare i32 @close(i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @rand() local_unnamed_addr #6

declare i32 @pthread_once(i32*, void ()*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13GUIDGenerator12InitOnceImplEv() #0 comdat align 2 {
  %1 = tail call i64 @time(i64* null) #7
  %2 = trunc i64 %1 to i32
  %3 = or i32 %2, trunc (i64 lshr (i64 ptrtoint (i32* @_ZN13GUIDGenerator12once_controlE to i64), i64 4) to i32)
  tail call void @srand(i32 %3) #7
  ret void
}

; Function Attrs: nounwind
declare void @srand(i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare i64 @time(i64*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
