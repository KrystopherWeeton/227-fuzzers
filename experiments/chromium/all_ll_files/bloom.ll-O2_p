; ModuleID = '../../third_party/leveldatabase/src/util/bloom.cc'
source_filename = "../../third_party/leveldatabase/src/util/bloom.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.leveldb::FilterPolicy" = type { i32 (...)** }
%"class.leveldb::(anonymous namespace)::BloomFilterPolicy" = type { %"class.leveldb::FilterPolicy", i64, i64 }
%"class.leveldb::Slice" = type { i8*, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZTVN7leveldb12_GLOBAL__N_117BloomFilterPolicyE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.leveldb::FilterPolicy"*)* @_ZN7leveldb12FilterPolicyD2Ev to i8*), i8* bitcast (void (%"class.leveldb::(anonymous namespace)::BloomFilterPolicy"*)* @_ZN7leveldb12_GLOBAL__N_117BloomFilterPolicyD0Ev to i8*), i8* bitcast (i8* (%"class.leveldb::(anonymous namespace)::BloomFilterPolicy"*)* @_ZNK7leveldb12_GLOBAL__N_117BloomFilterPolicy4NameEv to i8*), i8* bitcast (void (%"class.leveldb::(anonymous namespace)::BloomFilterPolicy"*, %"class.leveldb::Slice"*, i32, %"class.std::__1::basic_string"*)* @_ZNK7leveldb12_GLOBAL__N_117BloomFilterPolicy12CreateFilterEPKNS_5SliceEiPNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.leveldb::(anonymous namespace)::BloomFilterPolicy"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)* @_ZNK7leveldb12_GLOBAL__N_117BloomFilterPolicy11KeyMayMatchERKNS_5SliceES4_ to i8*)] }, align 8
@.str = private unnamed_addr constant [28 x i8] c"leveldb.BuiltinBloomFilter2\00", align 1

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull %"class.leveldb::FilterPolicy"* @_ZN7leveldb20NewBloomFilterPolicyEi(i32) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 24) #8
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7leveldb12_GLOBAL__N_117BloomFilterPolicyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to i64*
  %6 = sext i32 %0 to i64
  store i64 %6, i64* %5, align 8
  %7 = sitofp i32 %0 to double
  %8 = fmul double %7, 6.900000e-01
  %9 = fptoui double %8 to i64
  %10 = getelementptr inbounds i8, i8* %2, i64 16
  %11 = bitcast i8* %10 to i64*
  %12 = icmp eq i64 %9, 0
  %13 = select i1 %12, i64 1, i64 %9
  %14 = icmp ult i64 %13, 30
  %15 = select i1 %14, i64 %13, i64 30
  store i64 %15, i64* %11, align 8
  %16 = bitcast i8* %2 to %"class.leveldb::FilterPolicy"*
  ret %"class.leveldb::FilterPolicy"* %16
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7leveldb12FilterPolicyD2Ev(%"class.leveldb::FilterPolicy"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7leveldb12_GLOBAL__N_117BloomFilterPolicyD0Ev(%"class.leveldb::(anonymous namespace)::BloomFilterPolicy"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::BloomFilterPolicy", %"class.leveldb::(anonymous namespace)::BloomFilterPolicy"* %0, i64 0, i32 0
  tail call void @_ZN7leveldb12FilterPolicyD2Ev(%"class.leveldb::FilterPolicy"* %2) #9
  %3 = bitcast %"class.leveldb::(anonymous namespace)::BloomFilterPolicy"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK7leveldb12_GLOBAL__N_117BloomFilterPolicy4NameEv(%"class.leveldb::(anonymous namespace)::BloomFilterPolicy"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK7leveldb12_GLOBAL__N_117BloomFilterPolicy12CreateFilterEPKNS_5SliceEiPNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.leveldb::(anonymous namespace)::BloomFilterPolicy"* nocapture readonly, %"class.leveldb::Slice"* nocapture readonly, i32, %"class.std::__1::basic_string"*) unnamed_addr #5 align 2 {
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::BloomFilterPolicy", %"class.leveldb::(anonymous namespace)::BloomFilterPolicy"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = mul i64 %7, %5
  %9 = icmp ugt i64 %8, 64
  %10 = select i1 %9, i64 %8, i64 64
  %11 = add i64 %10, 7
  %12 = lshr i64 %11, 3
  %13 = and i64 %11, -8
  %14 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  br label %23

21:                                               ; preds = %4
  %22 = zext i8 %16 to i64
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i64 [ %20, %18 ], [ %22, %21 ]
  %25 = add i64 %24, %12
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %3, i64 %25, i8 signext 0) #9
  %26 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::BloomFilterPolicy", %"class.leveldb::(anonymous namespace)::BloomFilterPolicy"* %0, i64 0, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %3, i8 signext %28) #9
  %29 = load i8, i8* %15, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  br label %36

34:                                               ; preds = %23
  %35 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  br label %36

36:                                               ; preds = %31, %34
  %37 = phi i8* [ %33, %31 ], [ %35, %34 ]
  %38 = getelementptr inbounds i8, i8* %37, i64 %24
  %39 = icmp sgt i32 %2, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  %41 = zext i32 %2 to i64
  br label %43

42:                                               ; preds = %55, %36
  ret void

43:                                               ; preds = %55, %40
  %44 = phi i64 [ 0, %40 ], [ %56, %55 ]
  %45 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %1, i64 %44, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %1, i64 %44, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = tail call i32 @_ZN7leveldb4HashEPKcmj(i8* %46, i64 %48, i32 -1130422988) #9
  %50 = lshr i32 %49, 17
  %51 = shl i32 %49, 15
  %52 = or i32 %50, %51
  %53 = load i64, i64* %26, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %58, %43
  %56 = add nuw nsw i64 %44, 1
  %57 = icmp eq i64 %56, %41
  br i1 %57, label %42, label %43

58:                                               ; preds = %43, %58
  %59 = phi i64 [ %72, %58 ], [ 0, %43 ]
  %60 = phi i32 [ %71, %58 ], [ %49, %43 ]
  %61 = zext i32 %60 to i64
  %62 = urem i64 %61, %13
  %63 = trunc i64 %62 to i32
  %64 = and i32 %63, 7
  %65 = shl i32 1, %64
  %66 = lshr i64 %62, 3
  %67 = getelementptr inbounds i8, i8* %38, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = trunc i32 %65 to i8
  %70 = or i8 %68, %69
  store i8 %70, i8* %67, align 1
  %71 = add i32 %60, %52
  %72 = add nuw i64 %59, 1
  %73 = load i64, i64* %26, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %58, label %55
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK7leveldb12_GLOBAL__N_117BloomFilterPolicy11KeyMayMatchERKNS_5SliceES4_(%"class.leveldb::(anonymous namespace)::BloomFilterPolicy"* nocapture readnone, %"class.leveldb::Slice"* nocapture readonly dereferenceable(16), %"class.leveldb::Slice"* nocapture readonly dereferenceable(16)) unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %2, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, 2
  br i1 %6, label %44, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %2, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = add i64 %5, -1
  %11 = shl i64 %10, 3
  %12 = getelementptr inbounds i8, i8* %9, i64 %10
  %13 = load i8, i8* %12, align 1
  %14 = sext i8 %13 to i64
  %15 = icmp ugt i8 %13, 30
  br i1 %15, label %44, label %16

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %1, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %1, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = tail call i32 @_ZN7leveldb4HashEPKcmj(i8* %18, i64 %20, i32 -1130422988) #9
  %22 = lshr i32 %21, 17
  %23 = shl i32 %21, 15
  %24 = or i32 %22, %23
  %25 = icmp eq i8 %13, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %16, %40
  %27 = phi i64 [ %42, %40 ], [ 0, %16 ]
  %28 = phi i32 [ %41, %40 ], [ %21, %16 ]
  %29 = zext i32 %28 to i64
  %30 = urem i64 %29, %11
  %31 = trunc i64 %30 to i32
  %32 = lshr i64 %30, 3
  %33 = getelementptr inbounds i8, i8* %9, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  %36 = and i32 %31, 7
  %37 = shl i32 1, %36
  %38 = and i32 %37, %35
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %26
  %41 = add i32 %28, %24
  %42 = add nuw i64 %27, 1
  %43 = icmp ult i64 %42, %14
  br i1 %43, label %26, label %44

44:                                               ; preds = %40, %26, %16, %7, %3
  %45 = phi i1 [ false, %3 ], [ true, %7 ], [ true, %16 ], [ true, %40 ], [ false, %26 ]
  ret i1 %45
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #7

declare i32 @_ZN7leveldb4HashEPKcmj(i8*, i64, i32) local_unnamed_addr #7

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
