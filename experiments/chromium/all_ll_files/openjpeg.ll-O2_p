; ModuleID = '../../third_party/pdfium/third_party/libopenjpeg20/openjpeg.c'
source_filename = "../../third_party/pdfium/third_party/libopenjpeg20/openjpeg.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.opj_codestream_info_v2 = type { i32, i32, i32, i32, i32, i32, i32, %struct.opj_tile_v2_info, %struct.opj_tile_v2_info* }
%struct.opj_tile_v2_info = type { i32, i32, i32, i32, i32, %struct.opj_tccp_info* }
%struct.opj_tccp_info = type { i32, i32, i32, i32, i32, i32, i32, i32, [97 x i32], [97 x i32], i32, i32, [33 x i32], [33 x i32] }
%struct.opj_codestream_index = type { i64, i64, i64, i32, %struct.opj_marker_info*, i32, i32, %struct.opj_tile_index* }
%struct.opj_marker_info = type { i16, i64, i32 }
%struct.opj_tile_index = type { i32, i32, i32, i32, %struct.opj_tp_index*, i32, %struct.opj_marker_info*, i32, i32, %struct.opj_packet_info* }
%struct.opj_tp_index = type { i64, i64, i64 }
%struct.opj_packet_info = type { i64, i64, i64, double }
%struct.opj_stream_private = type { i8*, void (i8*)*, i64, i64 (i8*, i64, i8*)*, i64 (i8*, i64, i8*)*, i64 (i64, i8*)*, i32 (i64, i8*)*, i8*, i8*, i64 (%struct.opj_stream_private*, i64, %struct.opj_event_mgr*)*, i32 (%struct.opj_stream_private*, i64, %struct.opj_event_mgr*)*, i64, i64, i64, i32 }
%struct.opj_image = type { i32, i32, i32, i32, i32, i32, %struct.opj_image_comp*, i8*, i32 }
%struct.opj_image_comp = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, i16 }
%struct.opj_event_mgr = type { i8*, i8*, i8*, void (i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*)* }
%struct.opj_dparameters = type { i32, i32, [4096 x i8], [4096 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.opj_j2k = type { i32, %union.anon.0, %struct.opj_image*, %struct.opj_image*, %struct.opj_cp, %struct.opj_procedure_list*, %struct.opj_procedure_list*, %struct.opj_codestream_index*, i32, %struct.opj_tcd*, %struct.opj_thread_pool_t*, i32, i32, i32 }
%union.anon.0 = type { %struct.opj_j2k_dec }
%struct.opj_j2k_dec = type { i32, %struct.opj_tcp*, i8*, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32*, i8 }
%struct.opj_tcp = type { i32, i32, i32, i32, i32, [100 x float], i32, [32 x %struct.opj_poc], i32, %struct.opj_ppx_struct*, i8*, i8*, i32, i32, [100 x float], %struct.opj_tccp*, i32, i32, i8*, i32, double*, float*, float*, %struct.opj_mct_data*, i32, i32, %struct.opj_simple_mcc_decorrelation_data*, i32, i32, i8 }
%struct.opj_poc = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [5 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.opj_ppx_struct = type { i8*, i32 }
%struct.opj_tccp = type { i32, i32, i32, i32, i32, i32, i32, [97 x %struct.opj_stepsize], i32, i32, [33 x i32], [33 x i32], i32 }
%struct.opj_stepsize = type { i32, i32 }
%struct.opj_mct_data = type { i32, i32, i32, i8*, i32 }
%struct.opj_simple_mcc_decorrelation_data = type { i32, i32, %struct.opj_mct_data*, %struct.opj_mct_data*, i8 }
%struct.opj_cp = type { i16, i32, i32, i32, i32, i8*, i32, i32, i32, %struct.opj_ppx_struct*, i8*, i32, i32, i8*, i8*, i8*, i32, i32, i32, %struct.opj_tcp*, %union.anon.1, i8 }
%union.anon.1 = type { %struct.opj_encoding_param }
%struct.opj_encoding_param = type { i32, i32, i32*, i8, i8 }
%struct.opj_procedure_list = type { i32, i32, void ()** }
%struct.opj_tcd = type { i32, i32, i32, i32, i32, %struct.opj_tcd_image*, %struct.opj_image*, %struct.opj_cp*, %struct.opj_tcp*, i32, i8, %struct.opj_thread_pool_t*, i32, i32, i32, i32, i32, i32* }
%struct.opj_tcd_image = type { %struct.opj_tcd_tile* }
%struct.opj_tcd_tile = type { i32, i32, i32, i32, i32, %struct.opj_tcd_tilecomp*, i32, double, [100 x double], i32 }
%struct.opj_tcd_tilecomp = type { i32, i32, i32, i32, i32, i32, i32, %struct.opj_tcd_resolution*, i32, i32*, i32, i64, i64, i32*, i32, i32, i32, i32, i32 }
%struct.opj_tcd_resolution = type { i32, i32, i32, i32, i32, i32, i32, [3 x %struct.opj_tcd_band], i32, i32, i32, i32 }
%struct.opj_tcd_band = type { i32, i32, i32, i32, i32, %struct.opj_tcd_precinct*, i32, i32, float }
%struct.opj_tcd_precinct = type { i32, i32, i32, i32, i32, i32, %union.anon.2, i32, %struct.opj_tgt_tree*, %struct.opj_tgt_tree* }
%union.anon.2 = type { %struct.opj_tcd_cblk_enc* }
%struct.opj_tcd_cblk_enc = type { i8*, %struct.opj_tcd_layer*, %struct.opj_tcd_pass*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.opj_tcd_layer = type { i32, i32, double, i8* }
%struct.opj_tcd_pass = type { i32, double, i32, i8 }
%struct.opj_tgt_tree = type { i32, i32, i32, %struct.opj_tgt_node*, i32 }
%struct.opj_tgt_node = type { %struct.opj_tgt_node*, i32, i32, i32 }
%struct.opj_thread_pool_t = type opaque
%struct.opj_jp2 = type { %struct.opj_j2k*, %struct.opj_procedure_list*, %struct.opj_procedure_list*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, %struct.opj_jp2_comps*, i64, i64, i32, i32, i32, %struct.opj_jp2_color, i32, i8, i8 }
%struct.opj_jp2_comps = type { i32, i32, i32 }
%struct.opj_jp2_color = type { i8*, i32, %struct.opj_jp2_cdef*, %struct.opj_jp2_pclr*, i8 }
%struct.opj_jp2_cdef = type { %struct.opj_jp2_cdef_info*, i16 }
%struct.opj_jp2_cdef_info = type { i16, i16, i16 }
%struct.opj_jp2_pclr = type { i32*, i8*, i8*, %struct.opj_jp2_cmap_comp*, i16, i8 }
%struct.opj_jp2_cmap_comp = type { i16, i8, i8 }
%struct.opj_cparameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32*, i8*, i32, i32, [32 x %struct.opj_poc], i32, i32, [100 x float], [100 x float], i32, i32, i32, i32, i32, i32, i32, i32, [33 x i32], [33 x i32], [4096 x i8], [4096 x i8], i32, [4096 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [16 x i32], [16 x i32], [16 x i32], [16 x i32], [16 x i32], i32, i32, i32, i32, [16 x i32], [16 x i32], i32, i32, i32, i8, i8, i8, i32, i8*, i32, i16 }

@.str = private unnamed_addr constant [6 x i8] c"2.4.0\00", align 1
@.str.1 = private unnamed_addr constant [81 x i8] c"Codec provided to the opj_setup_decoder function is not a decompressor handler.\0A\00", align 1
@.str.2 = private unnamed_addr constant [79 x i8] c"Codec provided to the opj_read_header function is not a decompressor handler.\0A\00", align 1
@.str.3 = private unnamed_addr constant [90 x i8] c"Codec provided to the opj_set_decoded_components function is not a decompressor handler.\0A\00", align 1
@.str.4 = private unnamed_addr constant [53 x i8] c"apply_color_transforms = OPJ_TRUE is not supported.\0A\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"wb\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @opj_set_info_handler(i8**, void (i8*, i8*)*, i8*) local_unnamed_addr #0 {
  %4 = icmp eq i8** %0, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds i8*, i8** %0, i64 17
  %7 = bitcast i8** %6 to void (i8*, i8*)**
  store void (i8*, i8*)* %1, void (i8*, i8*)** %7, align 8
  %8 = getelementptr inbounds i8*, i8** %0, i64 14
  store i8* %2, i8** %8, align 8
  br label %9

9:                                                ; preds = %3, %5
  %10 = phi i32 [ 1, %5 ], [ 0, %3 ]
  ret i32 %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @opj_set_warning_handler(i8**, void (i8*, i8*)*, i8*) local_unnamed_addr #0 {
  %4 = icmp eq i8** %0, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds i8*, i8** %0, i64 16
  %7 = bitcast i8** %6 to void (i8*, i8*)**
  store void (i8*, i8*)* %1, void (i8*, i8*)** %7, align 8
  %8 = getelementptr inbounds i8*, i8** %0, i64 13
  store i8* %2, i8** %8, align 8
  br label %9

9:                                                ; preds = %3, %5
  %10 = phi i32 [ 1, %5 ], [ 0, %3 ]
  ret i32 %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @opj_set_error_handler(i8**, void (i8*, i8*)*, i8*) local_unnamed_addr #0 {
  %4 = icmp eq i8** %0, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds i8*, i8** %0, i64 12
  %7 = getelementptr inbounds i8*, i8** %0, i64 15
  %8 = bitcast i8** %7 to void (i8*, i8*)**
  store void (i8*, i8*)* %1, void (i8*, i8*)** %8, align 8
  store i8* %2, i8** %6, align 8
  br label %9

9:                                                ; preds = %3, %5
  %10 = phi i32 [ 1, %5 ], [ 0, %3 ]
  ret i32 %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @opj_version() local_unnamed_addr #1 {
  ret i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden i8** @opj_create_decompress(i32) local_unnamed_addr #2 {
  %2 = tail call i8* @opj_calloc(i64 1, i64 184) #7
  %3 = icmp eq i8* %2, null
  br i1 %3, label %82, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds i8, i8* %2, i64 144
  %6 = bitcast i8* %5 to i32*
  store i32 1, i32* %6, align 8
  switch i32 %0, label %77 [
    i32 0, label %7
    i32 2, label %42
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %2, i64 152
  %9 = bitcast i8* %8 to void (i8*, i32, %struct._IO_FILE*)**
  store void (i8*, i32, %struct._IO_FILE*)* bitcast (void (%struct.opj_j2k*, i32, %struct._IO_FILE*)* @j2k_dump to void (i8*, i32, %struct._IO_FILE*)*), void (i8*, i32, %struct._IO_FILE*)** %9, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 160
  %11 = bitcast i8* %10 to %struct.opj_codestream_info_v2* (i8*)**
  store %struct.opj_codestream_info_v2* (i8*)* bitcast (%struct.opj_codestream_info_v2* (%struct.opj_j2k*)* @j2k_get_cstr_info to %struct.opj_codestream_info_v2* (i8*)*), %struct.opj_codestream_info_v2* (i8*)** %11, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 168
  %13 = bitcast i8* %12 to %struct.opj_codestream_index* (i8*)**
  store %struct.opj_codestream_index* (i8*)* bitcast (%struct.opj_codestream_index* (%struct.opj_j2k*)* @j2k_get_cstr_index to %struct.opj_codestream_index* (i8*)*), %struct.opj_codestream_index* (i8*)** %13, align 8
  %14 = getelementptr inbounds i8, i8* %2, i64 8
  %15 = bitcast i8* %14 to i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)**
  store i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)* @opj_j2k_decode to i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)*), i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)** %15, align 8
  %16 = getelementptr inbounds i8, i8* %2, i64 32
  %17 = bitcast i8* %16 to i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)**
  store i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_end_decompress to i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)*), i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)** %17, align 8
  %18 = bitcast i8* %2 to i32 (%struct.opj_stream_private*, i8*, %struct.opj_image**, %struct.opj_event_mgr*)**
  store i32 (%struct.opj_stream_private*, i8*, %struct.opj_image**, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_stream_private*, %struct.opj_j2k*, %struct.opj_image**, %struct.opj_event_mgr*)* @opj_j2k_read_header to i32 (%struct.opj_stream_private*, i8*, %struct.opj_image**, %struct.opj_event_mgr*)*), i32 (%struct.opj_stream_private*, i8*, %struct.opj_image**, %struct.opj_event_mgr*)** %18, align 8
  %19 = getelementptr inbounds i8, i8* %2, i64 40
  %20 = bitcast i8* %19 to void (i8*)**
  store void (i8*)* bitcast (void (%struct.opj_j2k*)* @opj_j2k_destroy to void (i8*)*), void (i8*)** %20, align 8
  %21 = getelementptr inbounds i8, i8* %2, i64 48
  %22 = bitcast i8* %21 to void (i8*, %struct.opj_dparameters*)**
  store void (i8*, %struct.opj_dparameters*)* bitcast (void (%struct.opj_j2k*, %struct.opj_dparameters*)* @opj_j2k_setup_decoder to void (i8*, %struct.opj_dparameters*)*), void (i8*, %struct.opj_dparameters*)** %22, align 8
  %23 = getelementptr inbounds i8, i8* %2, i64 16
  %24 = bitcast i8* %23 to i32 (i8*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, %struct.opj_stream_private*, %struct.opj_event_mgr*)**
  store i32 (i8*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_j2k*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_read_tile_header to i32 (i8*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, %struct.opj_stream_private*, %struct.opj_event_mgr*)*), i32 (i8*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, %struct.opj_stream_private*, %struct.opj_event_mgr*)** %24, align 8
  %25 = getelementptr inbounds i8, i8* %2, i64 24
  %26 = bitcast i8* %25 to i32 (i8*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)**
  store i32 (i8*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_j2k*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_decode_tile to i32 (i8*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)*), i32 (i8*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)** %26, align 8
  %27 = getelementptr inbounds i8, i8* %2, i64 56
  %28 = bitcast i8* %27 to i32 (i8*, %struct.opj_image*, i32, i32, i32, i32, %struct.opj_event_mgr*)**
  store i32 (i8*, %struct.opj_image*, i32, i32, i32, i32, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_j2k*, %struct.opj_image*, i32, i32, i32, i32, %struct.opj_event_mgr*)* @opj_j2k_set_decode_area to i32 (i8*, %struct.opj_image*, i32, i32, i32, i32, %struct.opj_event_mgr*)*), i32 (i8*, %struct.opj_image*, i32, i32, i32, i32, %struct.opj_event_mgr*)** %28, align 8
  %29 = getelementptr inbounds i8, i8* %2, i64 64
  %30 = bitcast i8* %29 to i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*, i32)**
  store i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*, i32)* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*, i32)* @opj_j2k_get_tile to i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*, i32)*), i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*, i32)** %30, align 8
  %31 = getelementptr inbounds i8, i8* %2, i64 72
  %32 = bitcast i8* %31 to i32 (i8*, i32, %struct.opj_event_mgr*)**
  store i32 (i8*, i32, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_j2k*, i32, %struct.opj_event_mgr*)* @opj_j2k_set_decoded_resolution_factor to i32 (i8*, i32, %struct.opj_event_mgr*)*), i32 (i8*, i32, %struct.opj_event_mgr*)** %32, align 8
  %33 = getelementptr inbounds i8, i8* %2, i64 80
  %34 = bitcast i8* %33 to i32 (i8*, i32, i32*, %struct.opj_event_mgr*)**
  store i32 (i8*, i32, i32*, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_j2k*, i32, i32*, %struct.opj_event_mgr*)* @opj_j2k_set_decoded_components to i32 (i8*, i32, i32*, %struct.opj_event_mgr*)*), i32 (i8*, i32, i32*, %struct.opj_event_mgr*)** %34, align 8
  %35 = getelementptr inbounds i8, i8* %2, i64 176
  %36 = bitcast i8* %35 to i32 (i8*, i32)**
  store i32 (i8*, i32)* bitcast (i32 (%struct.opj_j2k*, i32)* @opj_j2k_set_threads to i32 (i8*, i32)*), i32 (i8*, i32)** %36, align 8
  %37 = tail call %struct.opj_j2k* @opj_j2k_create_decompress() #7
  %38 = getelementptr inbounds i8, i8* %2, i64 88
  %39 = bitcast i8* %38 to %struct.opj_j2k**
  store %struct.opj_j2k* %37, %struct.opj_j2k** %39, align 8
  %40 = icmp eq %struct.opj_j2k* %37, null
  br i1 %40, label %41, label %78

41:                                               ; preds = %7
  tail call void @opj_free(i8* nonnull %2) #7
  br label %82

42:                                               ; preds = %4
  %43 = getelementptr inbounds i8, i8* %2, i64 152
  %44 = bitcast i8* %43 to void (i8*, i32, %struct._IO_FILE*)**
  store void (i8*, i32, %struct._IO_FILE*)* bitcast (void (%struct.opj_jp2*, i32, %struct._IO_FILE*)* @jp2_dump to void (i8*, i32, %struct._IO_FILE*)*), void (i8*, i32, %struct._IO_FILE*)** %44, align 8
  %45 = getelementptr inbounds i8, i8* %2, i64 160
  %46 = bitcast i8* %45 to %struct.opj_codestream_info_v2* (i8*)**
  store %struct.opj_codestream_info_v2* (i8*)* bitcast (%struct.opj_codestream_info_v2* (%struct.opj_jp2*)* @jp2_get_cstr_info to %struct.opj_codestream_info_v2* (i8*)*), %struct.opj_codestream_info_v2* (i8*)** %46, align 8
  %47 = getelementptr inbounds i8, i8* %2, i64 168
  %48 = bitcast i8* %47 to %struct.opj_codestream_index* (i8*)**
  store %struct.opj_codestream_index* (i8*)* bitcast (%struct.opj_codestream_index* (%struct.opj_jp2*)* @jp2_get_cstr_index to %struct.opj_codestream_index* (i8*)*), %struct.opj_codestream_index* (i8*)** %48, align 8
  %49 = getelementptr inbounds i8, i8* %2, i64 8
  %50 = bitcast i8* %49 to i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)**
  store i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_jp2*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)* @opj_jp2_decode to i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)*), i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)** %50, align 8
  %51 = getelementptr inbounds i8, i8* %2, i64 32
  %52 = bitcast i8* %51 to i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)**
  store i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_jp2*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_jp2_end_decompress to i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)*), i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)** %52, align 8
  %53 = bitcast i8* %2 to i32 (%struct.opj_stream_private*, i8*, %struct.opj_image**, %struct.opj_event_mgr*)**
  store i32 (%struct.opj_stream_private*, i8*, %struct.opj_image**, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_stream_private*, %struct.opj_jp2*, %struct.opj_image**, %struct.opj_event_mgr*)* @opj_jp2_read_header to i32 (%struct.opj_stream_private*, i8*, %struct.opj_image**, %struct.opj_event_mgr*)*), i32 (%struct.opj_stream_private*, i8*, %struct.opj_image**, %struct.opj_event_mgr*)** %53, align 8
  %54 = getelementptr inbounds i8, i8* %2, i64 16
  %55 = bitcast i8* %54 to i32 (i8*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, %struct.opj_stream_private*, %struct.opj_event_mgr*)**
  store i32 (i8*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_jp2*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_jp2_read_tile_header to i32 (i8*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, %struct.opj_stream_private*, %struct.opj_event_mgr*)*), i32 (i8*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, %struct.opj_stream_private*, %struct.opj_event_mgr*)** %55, align 8
  %56 = getelementptr inbounds i8, i8* %2, i64 24
  %57 = bitcast i8* %56 to i32 (i8*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)**
  store i32 (i8*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_jp2*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_jp2_decode_tile to i32 (i8*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)*), i32 (i8*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)** %57, align 8
  %58 = getelementptr inbounds i8, i8* %2, i64 40
  %59 = bitcast i8* %58 to void (i8*)**
  store void (i8*)* bitcast (void (%struct.opj_jp2*)* @opj_jp2_destroy to void (i8*)*), void (i8*)** %59, align 8
  %60 = getelementptr inbounds i8, i8* %2, i64 48
  %61 = bitcast i8* %60 to void (i8*, %struct.opj_dparameters*)**
  store void (i8*, %struct.opj_dparameters*)* bitcast (void (%struct.opj_jp2*, %struct.opj_dparameters*)* @opj_jp2_setup_decoder to void (i8*, %struct.opj_dparameters*)*), void (i8*, %struct.opj_dparameters*)** %61, align 8
  %62 = getelementptr inbounds i8, i8* %2, i64 56
  %63 = bitcast i8* %62 to i32 (i8*, %struct.opj_image*, i32, i32, i32, i32, %struct.opj_event_mgr*)**
  store i32 (i8*, %struct.opj_image*, i32, i32, i32, i32, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_jp2*, %struct.opj_image*, i32, i32, i32, i32, %struct.opj_event_mgr*)* @opj_jp2_set_decode_area to i32 (i8*, %struct.opj_image*, i32, i32, i32, i32, %struct.opj_event_mgr*)*), i32 (i8*, %struct.opj_image*, i32, i32, i32, i32, %struct.opj_event_mgr*)** %63, align 8
  %64 = getelementptr inbounds i8, i8* %2, i64 64
  %65 = bitcast i8* %64 to i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*, i32)**
  store i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*, i32)* bitcast (i32 (%struct.opj_jp2*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*, i32)* @opj_jp2_get_tile to i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*, i32)*), i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*, i32)** %65, align 8
  %66 = getelementptr inbounds i8, i8* %2, i64 72
  %67 = bitcast i8* %66 to i32 (i8*, i32, %struct.opj_event_mgr*)**
  store i32 (i8*, i32, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_jp2*, i32, %struct.opj_event_mgr*)* @opj_jp2_set_decoded_resolution_factor to i32 (i8*, i32, %struct.opj_event_mgr*)*), i32 (i8*, i32, %struct.opj_event_mgr*)** %67, align 8
  %68 = getelementptr inbounds i8, i8* %2, i64 80
  %69 = bitcast i8* %68 to i32 (i8*, i32, i32*, %struct.opj_event_mgr*)**
  store i32 (i8*, i32, i32*, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_jp2*, i32, i32*, %struct.opj_event_mgr*)* @opj_jp2_set_decoded_components to i32 (i8*, i32, i32*, %struct.opj_event_mgr*)*), i32 (i8*, i32, i32*, %struct.opj_event_mgr*)** %69, align 8
  %70 = getelementptr inbounds i8, i8* %2, i64 176
  %71 = bitcast i8* %70 to i32 (i8*, i32)**
  store i32 (i8*, i32)* bitcast (i32 (%struct.opj_jp2*, i32)* @opj_jp2_set_threads to i32 (i8*, i32)*), i32 (i8*, i32)** %71, align 8
  %72 = tail call %struct.opj_jp2* @opj_jp2_create(i32 1) #7
  %73 = getelementptr inbounds i8, i8* %2, i64 88
  %74 = bitcast i8* %73 to %struct.opj_jp2**
  store %struct.opj_jp2* %72, %struct.opj_jp2** %74, align 8
  %75 = icmp eq %struct.opj_jp2* %72, null
  br i1 %75, label %76, label %78

76:                                               ; preds = %42
  tail call void @opj_free(i8* nonnull %2) #7
  br label %82

77:                                               ; preds = %4
  tail call void @opj_free(i8* nonnull %2) #7
  br label %82

78:                                               ; preds = %7, %42
  %79 = getelementptr inbounds i8, i8* %2, i64 96
  %80 = bitcast i8* %79 to %struct.opj_event_mgr*
  tail call void @opj_set_default_event_handler(%struct.opj_event_mgr* %80) #7
  %81 = bitcast i8* %2 to i8**
  br label %82

82:                                               ; preds = %1, %78, %77, %76, %41
  %83 = phi i8** [ null, %77 ], [ %81, %78 ], [ null, %76 ], [ null, %41 ], [ null, %1 ]
  ret i8** %83
}

declare i8* @opj_calloc(i64, i64) local_unnamed_addr #3

declare void @j2k_dump(%struct.opj_j2k*, i32, %struct._IO_FILE*) #3

declare %struct.opj_codestream_info_v2* @j2k_get_cstr_info(%struct.opj_j2k*) #3

declare %struct.opj_codestream_index* @j2k_get_cstr_index(%struct.opj_j2k*) #3

declare i32 @opj_j2k_decode(%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*) #3

declare i32 @opj_j2k_end_decompress(%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*) #3

declare i32 @opj_j2k_read_header(%struct.opj_stream_private*, %struct.opj_j2k*, %struct.opj_image**, %struct.opj_event_mgr*) #3

declare void @opj_j2k_destroy(%struct.opj_j2k*) #3

declare void @opj_j2k_setup_decoder(%struct.opj_j2k*, %struct.opj_dparameters*) #3

declare i32 @opj_j2k_read_tile_header(%struct.opj_j2k*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, %struct.opj_stream_private*, %struct.opj_event_mgr*) #3

declare i32 @opj_j2k_decode_tile(%struct.opj_j2k*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*) #3

declare i32 @opj_j2k_set_decode_area(%struct.opj_j2k*, %struct.opj_image*, i32, i32, i32, i32, %struct.opj_event_mgr*) #3

declare i32 @opj_j2k_get_tile(%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*, i32) #3

declare i32 @opj_j2k_set_decoded_resolution_factor(%struct.opj_j2k*, i32, %struct.opj_event_mgr*) #3

declare i32 @opj_j2k_set_decoded_components(%struct.opj_j2k*, i32, i32*, %struct.opj_event_mgr*) #3

declare i32 @opj_j2k_set_threads(%struct.opj_j2k*, i32) #3

declare %struct.opj_j2k* @opj_j2k_create_decompress() local_unnamed_addr #3

declare void @opj_free(i8*) local_unnamed_addr #3

declare void @jp2_dump(%struct.opj_jp2*, i32, %struct._IO_FILE*) #3

declare %struct.opj_codestream_info_v2* @jp2_get_cstr_info(%struct.opj_jp2*) #3

declare %struct.opj_codestream_index* @jp2_get_cstr_index(%struct.opj_jp2*) #3

declare i32 @opj_jp2_decode(%struct.opj_jp2*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*) #3

declare i32 @opj_jp2_end_decompress(%struct.opj_jp2*, %struct.opj_stream_private*, %struct.opj_event_mgr*) #3

declare i32 @opj_jp2_read_header(%struct.opj_stream_private*, %struct.opj_jp2*, %struct.opj_image**, %struct.opj_event_mgr*) #3

declare i32 @opj_jp2_read_tile_header(%struct.opj_jp2*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, %struct.opj_stream_private*, %struct.opj_event_mgr*) #3

declare i32 @opj_jp2_decode_tile(%struct.opj_jp2*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*) #3

declare void @opj_jp2_destroy(%struct.opj_jp2*) #3

declare void @opj_jp2_setup_decoder(%struct.opj_jp2*, %struct.opj_dparameters*) #3

declare i32 @opj_jp2_set_decode_area(%struct.opj_jp2*, %struct.opj_image*, i32, i32, i32, i32, %struct.opj_event_mgr*) #3

declare i32 @opj_jp2_get_tile(%struct.opj_jp2*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*, i32) #3

declare i32 @opj_jp2_set_decoded_resolution_factor(%struct.opj_jp2*, i32, %struct.opj_event_mgr*) #3

declare i32 @opj_jp2_set_decoded_components(%struct.opj_jp2*, i32, i32*, %struct.opj_event_mgr*) #3

declare i32 @opj_jp2_set_threads(%struct.opj_jp2*, i32) #3

declare %struct.opj_jp2* @opj_jp2_create(i32) local_unnamed_addr #3

declare void @opj_set_default_event_handler(%struct.opj_event_mgr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @opj_set_default_decoder_parameters(%struct.opj_dparameters*) local_unnamed_addr #2 {
  %2 = icmp eq %struct.opj_dparameters* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.opj_dparameters, %struct.opj_dparameters* %0, i64 0, i32 4
  %5 = bitcast %struct.opj_dparameters* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %5, i8 0, i64 8248, i1 false)
  store i32 -1, i32* %4, align 4
  %6 = getelementptr inbounds %struct.opj_dparameters, %struct.opj_dparameters* %0, i64 0, i32 5
  store i32 -1, i32* %6, align 4
  %7 = getelementptr inbounds %struct.opj_dparameters, %struct.opj_dparameters* %0, i64 0, i32 16
  store i32 0, i32* %7, align 4
  br label %8

8:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opj_codec_set_threads(i8** readonly, i32) local_unnamed_addr #2 {
  %3 = icmp ne i8** %0, null
  %4 = icmp sgt i32 %1, -1
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8*, i8** %0, i64 22
  %8 = bitcast i8** %7 to i32 (i8*, i32)**
  %9 = load i32 (i8*, i32)*, i32 (i8*, i32)** %8, align 8
  %10 = getelementptr inbounds i8*, i8** %0, i64 11
  %11 = load i8*, i8** %10, align 8
  %12 = tail call i32 %9(i8* %11, i32 %1) #7
  br label %13

13:                                               ; preds = %2, %6
  %14 = phi i32 [ %12, %6 ], [ 0, %2 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opj_setup_decoder(i8**, %struct.opj_dparameters*) local_unnamed_addr #2 {
  %3 = icmp ne i8** %0, null
  %4 = icmp ne %struct.opj_dparameters* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %21

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8*, i8** %0, i64 18
  %8 = bitcast i8** %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %6
  %12 = getelementptr inbounds i8*, i8** %0, i64 12
  %13 = bitcast i8** %12 to %struct.opj_event_mgr*
  %14 = tail call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %13, i32 1, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0)) #7
  br label %21

15:                                               ; preds = %6
  %16 = getelementptr inbounds i8*, i8** %0, i64 6
  %17 = bitcast i8** %16 to void (i8*, %struct.opj_dparameters*)**
  %18 = load void (i8*, %struct.opj_dparameters*)*, void (i8*, %struct.opj_dparameters*)** %17, align 8
  %19 = getelementptr inbounds i8*, i8** %0, i64 11
  %20 = load i8*, i8** %19, align 8
  tail call void %18(i8* %20, %struct.opj_dparameters* nonnull %1) #7
  br label %21

21:                                               ; preds = %2, %11, %15
  %22 = phi i32 [ 1, %15 ], [ 0, %11 ], [ 0, %2 ]
  ret i32 %22
}

declare i32 @opj_event_msg(%struct.opj_event_mgr*, i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opj_read_header(i8**, i8**, %struct.opj_image**) local_unnamed_addr #2 {
  %4 = icmp ne i8** %1, null
  %5 = icmp ne i8** %0, null
  %6 = and i1 %5, %4
  br i1 %6, label %7, label %25

7:                                                ; preds = %3
  %8 = getelementptr inbounds i8*, i8** %1, i64 18
  %9 = bitcast i8** %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %7
  %13 = getelementptr inbounds i8*, i8** %1, i64 12
  %14 = bitcast i8** %13 to %struct.opj_event_mgr*
  %15 = tail call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %14, i32 1, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.2, i64 0, i64 0)) #7
  br label %25

16:                                               ; preds = %7
  %17 = bitcast i8** %0 to %struct.opj_stream_private*
  %18 = bitcast i8** %1 to i32 (%struct.opj_stream_private*, i8*, %struct.opj_image**, %struct.opj_event_mgr*)**
  %19 = load i32 (%struct.opj_stream_private*, i8*, %struct.opj_image**, %struct.opj_event_mgr*)*, i32 (%struct.opj_stream_private*, i8*, %struct.opj_image**, %struct.opj_event_mgr*)** %18, align 8
  %20 = getelementptr inbounds i8*, i8** %1, i64 11
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds i8*, i8** %1, i64 12
  %23 = bitcast i8** %22 to %struct.opj_event_mgr*
  %24 = tail call i32 %19(%struct.opj_stream_private* nonnull %17, i8* %21, %struct.opj_image** %2, %struct.opj_event_mgr* %23) #7
  br label %25

25:                                               ; preds = %3, %12, %16
  %26 = phi i32 [ %24, %16 ], [ 0, %12 ], [ 0, %3 ]
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opj_set_decoded_components(i8**, i32, i32*, i32) local_unnamed_addr #2 {
  %5 = icmp eq i8** %0, null
  br i1 %5, label %30, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds i8*, i8** %0, i64 18
  %8 = bitcast i8** %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %6
  %12 = getelementptr inbounds i8*, i8** %0, i64 12
  %13 = bitcast i8** %12 to %struct.opj_event_mgr*
  %14 = tail call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %13, i32 1, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.3, i64 0, i64 0)) #7
  br label %30

15:                                               ; preds = %6
  %16 = icmp eq i32 %3, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds i8*, i8** %0, i64 12
  %19 = bitcast i8** %18 to %struct.opj_event_mgr*
  %20 = tail call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %19, i32 1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.4, i64 0, i64 0)) #7
  br label %30

21:                                               ; preds = %15
  %22 = getelementptr inbounds i8*, i8** %0, i64 10
  %23 = bitcast i8** %22 to i32 (i8*, i32, i32*, %struct.opj_event_mgr*)**
  %24 = load i32 (i8*, i32, i32*, %struct.opj_event_mgr*)*, i32 (i8*, i32, i32*, %struct.opj_event_mgr*)** %23, align 8
  %25 = getelementptr inbounds i8*, i8** %0, i64 11
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds i8*, i8** %0, i64 12
  %28 = bitcast i8** %27 to %struct.opj_event_mgr*
  %29 = tail call i32 %24(i8* %26, i32 %1, i32* %2, %struct.opj_event_mgr* %28) #7
  br label %30

30:                                               ; preds = %4, %11, %17, %21
  %31 = phi i32 [ 0, %17 ], [ %29, %21 ], [ 0, %11 ], [ 0, %4 ]
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opj_decode(i8**, i8**, %struct.opj_image*) local_unnamed_addr #2 {
  %4 = icmp ne i8** %0, null
  %5 = icmp ne i8** %1, null
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %22

7:                                                ; preds = %3
  %8 = getelementptr inbounds i8*, i8** %0, i64 18
  %9 = bitcast i8** %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %7
  %13 = bitcast i8** %1 to %struct.opj_stream_private*
  %14 = getelementptr inbounds i8*, i8** %0, i64 1
  %15 = bitcast i8** %14 to i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)**
  %16 = load i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)*, i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)** %15, align 8
  %17 = getelementptr inbounds i8*, i8** %0, i64 11
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8*, i8** %0, i64 12
  %20 = bitcast i8** %19 to %struct.opj_event_mgr*
  %21 = tail call i32 %16(i8* %18, %struct.opj_stream_private* nonnull %13, %struct.opj_image* %2, %struct.opj_event_mgr* %20) #7
  br label %22

22:                                               ; preds = %3, %12, %7
  %23 = phi i32 [ %21, %12 ], [ 0, %7 ], [ 0, %3 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opj_set_decode_area(i8**, %struct.opj_image*, i32, i32, i32, i32) local_unnamed_addr #2 {
  %7 = icmp eq i8** %0, null
  br i1 %7, label %22, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds i8*, i8** %0, i64 18
  %10 = bitcast i8** %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds i8*, i8** %0, i64 7
  %15 = bitcast i8** %14 to i32 (i8*, %struct.opj_image*, i32, i32, i32, i32, %struct.opj_event_mgr*)**
  %16 = load i32 (i8*, %struct.opj_image*, i32, i32, i32, i32, %struct.opj_event_mgr*)*, i32 (i8*, %struct.opj_image*, i32, i32, i32, i32, %struct.opj_event_mgr*)** %15, align 8
  %17 = getelementptr inbounds i8*, i8** %0, i64 11
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8*, i8** %0, i64 12
  %20 = bitcast i8** %19 to %struct.opj_event_mgr*
  %21 = tail call i32 %16(i8* %18, %struct.opj_image* %1, i32 %2, i32 %3, i32 %4, i32 %5, %struct.opj_event_mgr* %20) #7
  br label %22

22:                                               ; preds = %6, %13, %8
  %23 = phi i32 [ %21, %13 ], [ 0, %8 ], [ 0, %6 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opj_read_tile_header(i8**, i8**, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*) local_unnamed_addr #2 {
  %11 = icmp ne i8** %0, null
  %12 = icmp ne i8** %1, null
  %13 = and i1 %11, %12
  %14 = icmp ne i32* %3, null
  %15 = and i1 %13, %14
  %16 = icmp ne i32* %2, null
  %17 = and i1 %16, %15
  br i1 %17, label %18, label %33

18:                                               ; preds = %10
  %19 = getelementptr inbounds i8*, i8** %0, i64 18
  %20 = bitcast i8** %19 to i32*
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %18
  %24 = bitcast i8** %1 to %struct.opj_stream_private*
  %25 = getelementptr inbounds i8*, i8** %0, i64 2
  %26 = bitcast i8** %25 to i32 (i8*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, %struct.opj_stream_private*, %struct.opj_event_mgr*)**
  %27 = load i32 (i8*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, %struct.opj_stream_private*, %struct.opj_event_mgr*)*, i32 (i8*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, %struct.opj_stream_private*, %struct.opj_event_mgr*)** %26, align 8
  %28 = getelementptr inbounds i8*, i8** %0, i64 11
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds i8*, i8** %0, i64 12
  %31 = bitcast i8** %30 to %struct.opj_event_mgr*
  %32 = tail call i32 %27(i8* %29, i32* nonnull %2, i32* nonnull %3, i32* %4, i32* %5, i32* %6, i32* %7, i32* %8, i32* %9, %struct.opj_stream_private* nonnull %24, %struct.opj_event_mgr* %31) #7
  br label %33

33:                                               ; preds = %10, %23, %18
  %34 = phi i32 [ %32, %23 ], [ 0, %18 ], [ 0, %10 ]
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opj_decode_tile_data(i8**, i32, i8*, i32, i8**) local_unnamed_addr #2 {
  %6 = icmp ne i8** %0, null
  %7 = icmp ne i8* %2, null
  %8 = and i1 %6, %7
  %9 = icmp ne i8** %4, null
  %10 = and i1 %8, %9
  br i1 %10, label %11, label %26

11:                                               ; preds = %5
  %12 = getelementptr inbounds i8*, i8** %0, i64 18
  %13 = bitcast i8** %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %26, label %16

16:                                               ; preds = %11
  %17 = bitcast i8** %4 to %struct.opj_stream_private*
  %18 = getelementptr inbounds i8*, i8** %0, i64 3
  %19 = bitcast i8** %18 to i32 (i8*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)**
  %20 = load i32 (i8*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)*, i32 (i8*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)** %19, align 8
  %21 = getelementptr inbounds i8*, i8** %0, i64 11
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds i8*, i8** %0, i64 12
  %24 = bitcast i8** %23 to %struct.opj_event_mgr*
  %25 = tail call i32 %20(i8* %22, i32 %1, i8* nonnull %2, i32 %3, %struct.opj_stream_private* nonnull %17, %struct.opj_event_mgr* %24) #7
  br label %26

26:                                               ; preds = %5, %16, %11
  %27 = phi i32 [ %25, %16 ], [ 0, %11 ], [ 0, %5 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opj_get_decoded_tile(i8**, i8**, %struct.opj_image*, i32) local_unnamed_addr #2 {
  %5 = icmp ne i8** %0, null
  %6 = icmp ne i8** %1, null
  %7 = and i1 %5, %6
  br i1 %7, label %8, label %23

8:                                                ; preds = %4
  %9 = getelementptr inbounds i8*, i8** %0, i64 18
  %10 = bitcast i8** %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %8
  %14 = bitcast i8** %1 to %struct.opj_stream_private*
  %15 = getelementptr inbounds i8*, i8** %0, i64 8
  %16 = bitcast i8** %15 to i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*, i32)**
  %17 = load i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*, i32)*, i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*, i32)** %16, align 8
  %18 = getelementptr inbounds i8*, i8** %0, i64 11
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8*, i8** %0, i64 12
  %21 = bitcast i8** %20 to %struct.opj_event_mgr*
  %22 = tail call i32 %17(i8* %19, %struct.opj_stream_private* nonnull %14, %struct.opj_image* %2, %struct.opj_event_mgr* %21, i32 %3) #7
  br label %23

23:                                               ; preds = %4, %13, %8
  %24 = phi i32 [ %22, %13 ], [ 0, %8 ], [ 0, %4 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opj_set_decoded_resolution_factor(i8**, i32) local_unnamed_addr #2 {
  %3 = icmp eq i8** %0, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8*, i8** %0, i64 9
  %6 = bitcast i8** %5 to i32 (i8*, i32, %struct.opj_event_mgr*)**
  %7 = load i32 (i8*, i32, %struct.opj_event_mgr*)*, i32 (i8*, i32, %struct.opj_event_mgr*)** %6, align 8
  %8 = getelementptr inbounds i8*, i8** %0, i64 11
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8*, i8** %0, i64 12
  %11 = bitcast i8** %10 to %struct.opj_event_mgr*
  %12 = tail call i32 %7(i8* %9, i32 %1, %struct.opj_event_mgr* %11) #7
  br label %13

13:                                               ; preds = %2, %4
  %14 = phi i32 [ %12, %4 ], [ 0, %2 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i8** @opj_create_compress(i32) local_unnamed_addr #2 {
  %2 = tail call i8* @opj_calloc(i64 1, i64 184) #7
  %3 = icmp eq i8* %2, null
  br i1 %3, label %54, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds i8, i8* %2, i64 144
  %6 = bitcast i8* %5 to i32*
  store i32 0, i32* %6, align 8
  switch i32 %0, label %49 [
    i32 0, label %7
    i32 2, label %28
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)**
  store i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_encode to i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)*), i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)** %9, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 24
  %11 = bitcast i8* %10 to i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)**
  store i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_end_compress to i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)*), i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)** %11, align 8
  %12 = bitcast i8* %2 to i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)**
  store i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)* @opj_j2k_start_compress to i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)*), i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)** %12, align 8
  %13 = getelementptr inbounds i8, i8* %2, i64 16
  %14 = bitcast i8* %13 to i32 (i8*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)**
  store i32 (i8*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_j2k*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_j2k_write_tile to i32 (i8*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)*), i32 (i8*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)** %14, align 8
  %15 = getelementptr inbounds i8, i8* %2, i64 32
  %16 = bitcast i8* %15 to void (i8*)**
  store void (i8*)* bitcast (void (%struct.opj_j2k*)* @opj_j2k_destroy to void (i8*)*), void (i8*)** %16, align 8
  %17 = getelementptr inbounds i8, i8* %2, i64 40
  %18 = bitcast i8* %17 to i32 (i8*, %struct.opj_cparameters*, %struct.opj_image*, %struct.opj_event_mgr*)**
  store i32 (i8*, %struct.opj_cparameters*, %struct.opj_image*, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_j2k*, %struct.opj_cparameters*, %struct.opj_image*, %struct.opj_event_mgr*)* @opj_j2k_setup_encoder to i32 (i8*, %struct.opj_cparameters*, %struct.opj_image*, %struct.opj_event_mgr*)*), i32 (i8*, %struct.opj_cparameters*, %struct.opj_image*, %struct.opj_event_mgr*)** %18, align 8
  %19 = getelementptr inbounds i8, i8* %2, i64 48
  %20 = bitcast i8* %19 to i32 (i8*, i8**, %struct.opj_event_mgr*)**
  store i32 (i8*, i8**, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_j2k*, i8**, %struct.opj_event_mgr*)* @opj_j2k_encoder_set_extra_options to i32 (i8*, i8**, %struct.opj_event_mgr*)*), i32 (i8*, i8**, %struct.opj_event_mgr*)** %20, align 8
  %21 = getelementptr inbounds i8, i8* %2, i64 176
  %22 = bitcast i8* %21 to i32 (i8*, i32)**
  store i32 (i8*, i32)* bitcast (i32 (%struct.opj_j2k*, i32)* @opj_j2k_set_threads to i32 (i8*, i32)*), i32 (i8*, i32)** %22, align 8
  %23 = tail call %struct.opj_j2k* @opj_j2k_create_compress() #7
  %24 = getelementptr inbounds i8, i8* %2, i64 88
  %25 = bitcast i8* %24 to %struct.opj_j2k**
  store %struct.opj_j2k* %23, %struct.opj_j2k** %25, align 8
  %26 = icmp eq %struct.opj_j2k* %23, null
  br i1 %26, label %27, label %50

27:                                               ; preds = %7
  tail call void @opj_free(i8* nonnull %2) #7
  br label %54

28:                                               ; preds = %4
  %29 = getelementptr inbounds i8, i8* %2, i64 8
  %30 = bitcast i8* %29 to i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)**
  store i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_jp2*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_jp2_encode to i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)*), i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)** %30, align 8
  %31 = getelementptr inbounds i8, i8* %2, i64 24
  %32 = bitcast i8* %31 to i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)**
  store i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_jp2*, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_jp2_end_compress to i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)*), i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)** %32, align 8
  %33 = bitcast i8* %2 to i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)**
  store i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_jp2*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)* @opj_jp2_start_compress to i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)*), i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)** %33, align 8
  %34 = getelementptr inbounds i8, i8* %2, i64 16
  %35 = bitcast i8* %34 to i32 (i8*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)**
  store i32 (i8*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_jp2*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)* @opj_jp2_write_tile to i32 (i8*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)*), i32 (i8*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)** %35, align 8
  %36 = getelementptr inbounds i8, i8* %2, i64 32
  %37 = bitcast i8* %36 to void (i8*)**
  store void (i8*)* bitcast (void (%struct.opj_jp2*)* @opj_jp2_destroy to void (i8*)*), void (i8*)** %37, align 8
  %38 = getelementptr inbounds i8, i8* %2, i64 40
  %39 = bitcast i8* %38 to i32 (i8*, %struct.opj_cparameters*, %struct.opj_image*, %struct.opj_event_mgr*)**
  store i32 (i8*, %struct.opj_cparameters*, %struct.opj_image*, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_jp2*, %struct.opj_cparameters*, %struct.opj_image*, %struct.opj_event_mgr*)* @opj_jp2_setup_encoder to i32 (i8*, %struct.opj_cparameters*, %struct.opj_image*, %struct.opj_event_mgr*)*), i32 (i8*, %struct.opj_cparameters*, %struct.opj_image*, %struct.opj_event_mgr*)** %39, align 8
  %40 = getelementptr inbounds i8, i8* %2, i64 48
  %41 = bitcast i8* %40 to i32 (i8*, i8**, %struct.opj_event_mgr*)**
  store i32 (i8*, i8**, %struct.opj_event_mgr*)* bitcast (i32 (%struct.opj_jp2*, i8**, %struct.opj_event_mgr*)* @opj_jp2_encoder_set_extra_options to i32 (i8*, i8**, %struct.opj_event_mgr*)*), i32 (i8*, i8**, %struct.opj_event_mgr*)** %41, align 8
  %42 = getelementptr inbounds i8, i8* %2, i64 176
  %43 = bitcast i8* %42 to i32 (i8*, i32)**
  store i32 (i8*, i32)* bitcast (i32 (%struct.opj_jp2*, i32)* @opj_jp2_set_threads to i32 (i8*, i32)*), i32 (i8*, i32)** %43, align 8
  %44 = tail call %struct.opj_jp2* @opj_jp2_create(i32 0) #7
  %45 = getelementptr inbounds i8, i8* %2, i64 88
  %46 = bitcast i8* %45 to %struct.opj_jp2**
  store %struct.opj_jp2* %44, %struct.opj_jp2** %46, align 8
  %47 = icmp eq %struct.opj_jp2* %44, null
  br i1 %47, label %48, label %50

48:                                               ; preds = %28
  tail call void @opj_free(i8* nonnull %2) #7
  br label %54

49:                                               ; preds = %4
  tail call void @opj_free(i8* nonnull %2) #7
  br label %54

50:                                               ; preds = %7, %28
  %51 = getelementptr inbounds i8, i8* %2, i64 96
  %52 = bitcast i8* %51 to %struct.opj_event_mgr*
  tail call void @opj_set_default_event_handler(%struct.opj_event_mgr* %52) #7
  %53 = bitcast i8* %2 to i8**
  br label %54

54:                                               ; preds = %1, %50, %49, %48, %27
  %55 = phi i8** [ null, %49 ], [ %53, %50 ], [ null, %48 ], [ null, %27 ], [ null, %1 ]
  ret i8** %55
}

declare i32 @opj_j2k_encode(%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*) #3

declare i32 @opj_j2k_end_compress(%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_event_mgr*) #3

declare i32 @opj_j2k_start_compress(%struct.opj_j2k*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*) #3

declare i32 @opj_j2k_write_tile(%struct.opj_j2k*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*) #3

declare i32 @opj_j2k_setup_encoder(%struct.opj_j2k*, %struct.opj_cparameters*, %struct.opj_image*, %struct.opj_event_mgr*) #3

declare i32 @opj_j2k_encoder_set_extra_options(%struct.opj_j2k*, i8**, %struct.opj_event_mgr*) #3

declare %struct.opj_j2k* @opj_j2k_create_compress() local_unnamed_addr #3

declare i32 @opj_jp2_encode(%struct.opj_jp2*, %struct.opj_stream_private*, %struct.opj_event_mgr*) #3

declare i32 @opj_jp2_end_compress(%struct.opj_jp2*, %struct.opj_stream_private*, %struct.opj_event_mgr*) #3

declare i32 @opj_jp2_start_compress(%struct.opj_jp2*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*) #3

declare i32 @opj_jp2_write_tile(%struct.opj_jp2*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*) #3

declare i32 @opj_jp2_setup_encoder(%struct.opj_jp2*, %struct.opj_cparameters*, %struct.opj_image*, %struct.opj_event_mgr*) #3

declare i32 @opj_jp2_encoder_set_extra_options(%struct.opj_jp2*, i8**, %struct.opj_event_mgr*) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @opj_set_default_encoder_parameters(%struct.opj_cparameters*) local_unnamed_addr #2 {
  %2 = icmp eq %struct.opj_cparameters* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %0, i64 0, i32 17
  %5 = bitcast %struct.opj_cparameters* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 18720, i1 false)
  store i32 6, i32* %4, align 8
  %6 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %0, i64 0, i32 52
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %0, i64 0, i32 18
  store i32 64, i32* %7, align 4
  %8 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %0, i64 0, i32 19
  store i32 64, i32* %8, align 8
  %9 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %0, i64 0, i32 11
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %0, i64 0, i32 22
  store i32 -1, i32* %10, align 4
  %11 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %0, i64 0, i32 33
  %12 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %0, i64 0, i32 53
  store i8 0, i8* %12, align 8
  %13 = bitcast i32* %11 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 -1, i32 -1>, <4 x i32>* %13, align 4
  %14 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %0, i64 0, i32 15, i64 0
  store float 0.000000e+00, float* %14, align 8
  %15 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %0, i64 0, i32 14
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %0, i64 0, i32 5
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %0, i64 0, i32 6
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %0, i64 0, i32 7
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %0, i64 0, i32 56
  store i32 0, i32* %19, align 4
  br label %20

20:                                               ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opj_setup_encoder(i8**, %struct.opj_cparameters*, %struct.opj_image*) local_unnamed_addr #2 {
  %4 = icmp ne i8** %0, null
  %5 = icmp ne %struct.opj_cparameters* %1, null
  %6 = and i1 %4, %5
  %7 = icmp ne %struct.opj_image* %2, null
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %23

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8*, i8** %0, i64 18
  %11 = bitcast i8** %10 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %23

14:                                               ; preds = %9
  %15 = getelementptr inbounds i8*, i8** %0, i64 5
  %16 = bitcast i8** %15 to i32 (i8*, %struct.opj_cparameters*, %struct.opj_image*, %struct.opj_event_mgr*)**
  %17 = load i32 (i8*, %struct.opj_cparameters*, %struct.opj_image*, %struct.opj_event_mgr*)*, i32 (i8*, %struct.opj_cparameters*, %struct.opj_image*, %struct.opj_event_mgr*)** %16, align 8
  %18 = getelementptr inbounds i8*, i8** %0, i64 11
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8*, i8** %0, i64 12
  %21 = bitcast i8** %20 to %struct.opj_event_mgr*
  %22 = tail call i32 %17(i8* %19, %struct.opj_cparameters* nonnull %1, %struct.opj_image* nonnull %2, %struct.opj_event_mgr* %21) #7
  br label %23

23:                                               ; preds = %9, %3, %14
  %24 = phi i32 [ %22, %14 ], [ 0, %3 ], [ 0, %9 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opj_encoder_set_extra_options(i8**, i8**) local_unnamed_addr #2 {
  %3 = icmp eq i8** %0, null
  br i1 %3, label %18, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8*, i8** %0, i64 18
  %6 = bitcast i8** %5 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %18

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8*, i8** %0, i64 6
  %11 = bitcast i8** %10 to i32 (i8*, i8**, %struct.opj_event_mgr*)**
  %12 = load i32 (i8*, i8**, %struct.opj_event_mgr*)*, i32 (i8*, i8**, %struct.opj_event_mgr*)** %11, align 8
  %13 = getelementptr inbounds i8*, i8** %0, i64 11
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8*, i8** %0, i64 12
  %16 = bitcast i8** %15 to %struct.opj_event_mgr*
  %17 = tail call i32 %12(i8* %14, i8** %1, %struct.opj_event_mgr* %16) #7
  br label %18

18:                                               ; preds = %4, %2, %9
  %19 = phi i32 [ %17, %9 ], [ 0, %2 ], [ 0, %4 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opj_start_compress(i8**, %struct.opj_image*, i8**) local_unnamed_addr #2 {
  %4 = icmp ne i8** %0, null
  %5 = icmp ne i8** %2, null
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %21

7:                                                ; preds = %3
  %8 = getelementptr inbounds i8*, i8** %0, i64 18
  %9 = bitcast i8** %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %21

12:                                               ; preds = %7
  %13 = bitcast i8** %2 to %struct.opj_stream_private*
  %14 = bitcast i8** %0 to i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)**
  %15 = load i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)*, i32 (i8*, %struct.opj_stream_private*, %struct.opj_image*, %struct.opj_event_mgr*)** %14, align 8
  %16 = getelementptr inbounds i8*, i8** %0, i64 11
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds i8*, i8** %0, i64 12
  %19 = bitcast i8** %18 to %struct.opj_event_mgr*
  %20 = tail call i32 %15(i8* %17, %struct.opj_stream_private* nonnull %13, %struct.opj_image* %1, %struct.opj_event_mgr* %19) #7
  br label %21

21:                                               ; preds = %7, %3, %12
  %22 = phi i32 [ %20, %12 ], [ 0, %3 ], [ 0, %7 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opj_encode(i8**, i8**) local_unnamed_addr #2 {
  %3 = icmp ne i8** %0, null
  %4 = icmp ne i8** %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %21

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8*, i8** %0, i64 18
  %8 = bitcast i8** %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %6
  %12 = bitcast i8** %1 to %struct.opj_stream_private*
  %13 = getelementptr inbounds i8*, i8** %0, i64 1
  %14 = bitcast i8** %13 to i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)**
  %15 = load i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)*, i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)** %14, align 8
  %16 = getelementptr inbounds i8*, i8** %0, i64 11
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds i8*, i8** %0, i64 12
  %19 = bitcast i8** %18 to %struct.opj_event_mgr*
  %20 = tail call i32 %15(i8* %17, %struct.opj_stream_private* nonnull %12, %struct.opj_event_mgr* %19) #7
  br label %21

21:                                               ; preds = %6, %2, %11
  %22 = phi i32 [ %20, %11 ], [ 0, %2 ], [ 0, %6 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opj_end_compress(i8**, i8**) local_unnamed_addr #2 {
  %3 = icmp ne i8** %0, null
  %4 = icmp ne i8** %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %21

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8*, i8** %0, i64 18
  %8 = bitcast i8** %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %6
  %12 = bitcast i8** %1 to %struct.opj_stream_private*
  %13 = getelementptr inbounds i8*, i8** %0, i64 3
  %14 = bitcast i8** %13 to i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)**
  %15 = load i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)*, i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)** %14, align 8
  %16 = getelementptr inbounds i8*, i8** %0, i64 11
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds i8*, i8** %0, i64 12
  %19 = bitcast i8** %18 to %struct.opj_event_mgr*
  %20 = tail call i32 %15(i8* %17, %struct.opj_stream_private* nonnull %12, %struct.opj_event_mgr* %19) #7
  br label %21

21:                                               ; preds = %6, %2, %11
  %22 = phi i32 [ %20, %11 ], [ 0, %2 ], [ 0, %6 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opj_end_decompress(i8**, i8**) local_unnamed_addr #2 {
  %3 = icmp ne i8** %0, null
  %4 = icmp ne i8** %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %21

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8*, i8** %0, i64 18
  %8 = bitcast i8** %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %6
  %12 = bitcast i8** %1 to %struct.opj_stream_private*
  %13 = getelementptr inbounds i8*, i8** %0, i64 4
  %14 = bitcast i8** %13 to i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)**
  %15 = load i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)*, i32 (i8*, %struct.opj_stream_private*, %struct.opj_event_mgr*)** %14, align 8
  %16 = getelementptr inbounds i8*, i8** %0, i64 11
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds i8*, i8** %0, i64 12
  %19 = bitcast i8** %18 to %struct.opj_event_mgr*
  %20 = tail call i32 %15(i8* %17, %struct.opj_stream_private* nonnull %12, %struct.opj_event_mgr* %19) #7
  br label %21

21:                                               ; preds = %2, %11, %6
  %22 = phi i32 [ %20, %11 ], [ 0, %6 ], [ 0, %2 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opj_set_MCT(%struct.opj_cparameters* nocapture, float* nocapture readonly, i32* nocapture readonly, i32) local_unnamed_addr #2 {
  %5 = shl i32 %3, 2
  %6 = mul i32 %5, %3
  %7 = add i32 %6, %5
  %8 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %0, i64 0, i32 59
  %9 = load i16, i16* %8, align 4
  %10 = icmp slt i16 %9, 0
  %11 = or i16 %9, 256
  %12 = select i1 %10, i16 %11, i16 -32512
  store i16 %12, i16* %8, align 4
  %13 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %0, i64 0, i32 21
  store i32 1, i32* %13, align 8
  %14 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %0, i64 0, i32 55
  store i8 2, i8* %14, align 2
  %15 = zext i32 %7 to i64
  %16 = tail call i8* @opj_malloc(i64 %15) #7
  %17 = getelementptr inbounds %struct.opj_cparameters, %struct.opj_cparameters* %0, i64 0, i32 57
  store i8* %16, i8** %17, align 8
  %18 = icmp eq i8* %16, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %4
  %20 = bitcast float* %1 to i8*
  %21 = zext i32 %6 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %16, i8* align 4 %20, i64 %21, i1 false)
  %22 = load i8*, i8** %17, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = bitcast i32* %2 to i8*
  %25 = zext i32 %5 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 4 %24, i64 %25, i1 false)
  br label %26

26:                                               ; preds = %4, %19
  %27 = phi i32 [ 1, %19 ], [ 0, %4 ]
  ret i32 %27
}

declare i8* @opj_malloc(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opj_write_tile(i8**, i32, i8*, i32, i8**) local_unnamed_addr #2 {
  %6 = icmp ne i8** %0, null
  %7 = icmp ne i8** %4, null
  %8 = and i1 %6, %7
  %9 = icmp ne i8* %2, null
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %26

11:                                               ; preds = %5
  %12 = getelementptr inbounds i8*, i8** %0, i64 18
  %13 = bitcast i8** %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %26

16:                                               ; preds = %11
  %17 = bitcast i8** %4 to %struct.opj_stream_private*
  %18 = getelementptr inbounds i8*, i8** %0, i64 2
  %19 = bitcast i8** %18 to i32 (i8*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)**
  %20 = load i32 (i8*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)*, i32 (i8*, i32, i8*, i32, %struct.opj_stream_private*, %struct.opj_event_mgr*)** %19, align 8
  %21 = getelementptr inbounds i8*, i8** %0, i64 11
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds i8*, i8** %0, i64 12
  %24 = bitcast i8** %23 to %struct.opj_event_mgr*
  %25 = tail call i32 %20(i8* %22, i32 %1, i8* nonnull %2, i32 %3, %struct.opj_stream_private* nonnull %17, %struct.opj_event_mgr* %24) #7
  br label %26

26:                                               ; preds = %5, %16, %11
  %27 = phi i32 [ %25, %16 ], [ 0, %11 ], [ 0, %5 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @opj_destroy_codec(i8**) local_unnamed_addr #2 {
  %2 = icmp eq i8** %0, null
  br i1 %2, label %23, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8*, i8** %0, i64 18
  %5 = bitcast i8** %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds i8*, i8** %0, i64 5
  %10 = bitcast i8** %9 to void (i8*)**
  %11 = load void (i8*)*, void (i8*)** %10, align 8
  %12 = getelementptr inbounds i8*, i8** %0, i64 11
  %13 = load i8*, i8** %12, align 8
  tail call void %11(i8* %13) #7
  br label %20

14:                                               ; preds = %3
  %15 = getelementptr inbounds i8*, i8** %0, i64 4
  %16 = bitcast i8** %15 to void (i8*)**
  %17 = load void (i8*)*, void (i8*)** %16, align 8
  %18 = getelementptr inbounds i8*, i8** %0, i64 11
  %19 = load i8*, i8** %18, align 8
  tail call void %17(i8* %19) #7
  br label %20

20:                                               ; preds = %14, %8
  %21 = getelementptr inbounds i8*, i8** %0, i64 11
  store i8* null, i8** %21, align 8
  %22 = bitcast i8** %0 to i8*
  tail call void @opj_free(i8* nonnull %22) #7
  br label %23

23:                                               ; preds = %1, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @opj_dump_codec(i8** readonly, i32, %struct._IO_FILE*) local_unnamed_addr #2 {
  %4 = icmp eq i8** %0, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds i8*, i8** %0, i64 19
  %7 = bitcast i8** %6 to void (i8*, i32, %struct._IO_FILE*)**
  %8 = load void (i8*, i32, %struct._IO_FILE*)*, void (i8*, i32, %struct._IO_FILE*)** %7, align 8
  %9 = getelementptr inbounds i8*, i8** %0, i64 11
  %10 = load i8*, i8** %9, align 8
  tail call void %8(i8* %10, i32 %1, %struct._IO_FILE* %2) #7
  br label %11

11:                                               ; preds = %3, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.opj_codestream_info_v2* @opj_get_cstr_info(i8** readonly) local_unnamed_addr #2 {
  %2 = icmp eq i8** %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8*, i8** %0, i64 20
  %5 = bitcast i8** %4 to %struct.opj_codestream_info_v2* (i8*)**
  %6 = load %struct.opj_codestream_info_v2* (i8*)*, %struct.opj_codestream_info_v2* (i8*)** %5, align 8
  %7 = getelementptr inbounds i8*, i8** %0, i64 11
  %8 = load i8*, i8** %7, align 8
  %9 = tail call %struct.opj_codestream_info_v2* %6(i8* %8) #7
  br label %10

10:                                               ; preds = %1, %3
  %11 = phi %struct.opj_codestream_info_v2* [ %9, %3 ], [ null, %1 ]
  ret %struct.opj_codestream_info_v2* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @opj_destroy_cstr_info(%struct.opj_codestream_info_v2**) local_unnamed_addr #2 {
  %2 = icmp eq %struct.opj_codestream_info_v2** %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = load %struct.opj_codestream_info_v2*, %struct.opj_codestream_info_v2** %0, align 8
  %5 = getelementptr inbounds %struct.opj_codestream_info_v2, %struct.opj_codestream_info_v2* %4, i64 0, i32 7, i32 5
  %6 = load %struct.opj_tccp_info*, %struct.opj_tccp_info** %5, align 8
  %7 = icmp eq %struct.opj_tccp_info* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = bitcast %struct.opj_codestream_info_v2* %4 to i8*
  br label %14

10:                                               ; preds = %3
  %11 = bitcast %struct.opj_tccp_info* %6 to i8*
  tail call void @opj_free(i8* nonnull %11) #7
  %12 = bitcast %struct.opj_codestream_info_v2** %0 to i8**
  %13 = load i8*, i8** %12, align 8
  br label %14

14:                                               ; preds = %8, %10
  %15 = phi i8* [ %9, %8 ], [ %13, %10 ]
  tail call void @opj_free(i8* %15) #7
  store %struct.opj_codestream_info_v2* null, %struct.opj_codestream_info_v2** %0, align 8
  br label %16

16:                                               ; preds = %1, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.opj_codestream_index* @opj_get_cstr_index(i8** readonly) local_unnamed_addr #2 {
  %2 = icmp eq i8** %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8*, i8** %0, i64 21
  %5 = bitcast i8** %4 to %struct.opj_codestream_index* (i8*)**
  %6 = load %struct.opj_codestream_index* (i8*)*, %struct.opj_codestream_index* (i8*)** %5, align 8
  %7 = getelementptr inbounds i8*, i8** %0, i64 11
  %8 = load i8*, i8** %7, align 8
  %9 = tail call %struct.opj_codestream_index* %6(i8* %8) #7
  br label %10

10:                                               ; preds = %1, %3
  %11 = phi %struct.opj_codestream_index* [ %9, %3 ], [ null, %1 ]
  ret %struct.opj_codestream_index* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @opj_destroy_cstr_index(%struct.opj_codestream_index** nocapture) local_unnamed_addr #2 {
  %2 = load %struct.opj_codestream_index*, %struct.opj_codestream_index** %0, align 8
  %3 = icmp eq %struct.opj_codestream_index* %2, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %1
  tail call void @j2k_destroy_cstr_index(%struct.opj_codestream_index* nonnull %2) #7
  store %struct.opj_codestream_index* null, %struct.opj_codestream_index** %0, align 8
  br label %5

5:                                                ; preds = %1, %4
  ret void
}

declare void @j2k_destroy_cstr_index(%struct.opj_codestream_index*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8** @opj_stream_create_default_file_stream(i8* readonly, i32) local_unnamed_addr #2 {
  %3 = tail call i8** @opj_stream_create_file_stream(i8* %0, i64 1048576, i32 %1)
  ret i8** %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i8** @opj_stream_create_file_stream(i8* readonly, i64, i32) local_unnamed_addr #2 {
  %4 = icmp eq i8* %0, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %3
  %6 = icmp eq i32 %2, 0
  %7 = select i1 %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0)
  %8 = tail call %struct._IO_FILE* @fopen64(i8* nonnull %0, i8* %7)
  %9 = icmp eq %struct._IO_FILE* %8, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %5
  %11 = tail call i8** @opj_stream_create(i64 %1, i32 %2) #7
  %12 = icmp eq i8** %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = tail call i32 @fclose(%struct._IO_FILE* nonnull %8)
  br label %20

15:                                               ; preds = %10
  %16 = bitcast %struct._IO_FILE* %8 to i8*
  tail call void @opj_stream_set_user_data(i8** nonnull %11, i8* nonnull %16, void (i8*)* bitcast (i32 (%struct._IO_FILE*)* @fclose to void (i8*)*)) #7
  %17 = tail call i32 @fseeko64(%struct._IO_FILE* nonnull %8, i64 0, i32 2) #7
  %18 = tail call i64 @ftello64(%struct._IO_FILE* nonnull %8) #7
  %19 = tail call i32 @fseeko64(%struct._IO_FILE* nonnull %8, i64 0, i32 0) #7
  tail call void @opj_stream_set_user_data_length(i8** nonnull %11, i64 %18) #7
  tail call void @opj_stream_set_read_function(i8** nonnull %11, i64 (i8*, i64, i8*)* bitcast (i64 (i8*, i64, %struct._IO_FILE*)* @opj_read_from_file to i64 (i8*, i64, i8*)*)) #7
  tail call void @opj_stream_set_write_function(i8** nonnull %11, i64 (i8*, i64, i8*)* bitcast (i64 (i8*, i64, %struct._IO_FILE*)* @opj_write_from_file to i64 (i8*, i64, i8*)*)) #7
  tail call void @opj_stream_set_skip_function(i8** nonnull %11, i64 (i64, i8*)* bitcast (i64 (i64, %struct._IO_FILE*)* @opj_skip_from_file to i64 (i64, i8*)*)) #7
  tail call void @opj_stream_set_seek_function(i8** nonnull %11, i32 (i64, i8*)* bitcast (i32 (i64, %struct._IO_FILE*)* @opj_seek_from_file to i32 (i64, i8*)*)) #7
  br label %20

20:                                               ; preds = %5, %3, %15, %13
  %21 = phi i8** [ %11, %15 ], [ null, %13 ], [ null, %3 ], [ null, %5 ]
  ret i8** %21
}

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fopen64(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #5

declare hidden i8** @opj_stream_create(i64, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) #5

declare hidden void @opj_stream_set_user_data(i8**, i8*, void (i8*)*) local_unnamed_addr #3

declare hidden void @opj_stream_set_user_data_length(i8**, i64) local_unnamed_addr #3

declare hidden void @opj_stream_set_read_function(i8**, i64 (i8*, i64, i8*)*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
define internal i64 @opj_read_from_file(i8* nocapture, i64, %struct._IO_FILE* nocapture) #6 {
  %4 = tail call i64 @fread(i8* %0, i64 1, i64 %1, %struct._IO_FILE* %2)
  %5 = icmp eq i64 %4, 0
  %6 = select i1 %5, i64 -1, i64 %4
  ret i64 %6
}

declare hidden void @opj_stream_set_write_function(i8**, i64 (i8*, i64, i8*)*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
define internal i64 @opj_write_from_file(i8* nocapture, i64, %struct._IO_FILE* nocapture) #6 {
  %4 = tail call i64 @fwrite(i8* %0, i64 1, i64 %1, %struct._IO_FILE* %2)
  ret i64 %4
}

declare hidden void @opj_stream_set_skip_function(i8**, i64 (i64, i8*)*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
define internal i64 @opj_skip_from_file(i64, %struct._IO_FILE* nocapture) #6 {
  %3 = tail call i32 @fseeko64(%struct._IO_FILE* %1, i64 %0, i32 1)
  %4 = icmp eq i32 %3, 0
  %5 = select i1 %4, i64 %0, i64 -1
  ret i64 %5
}

declare hidden void @opj_stream_set_seek_function(i8**, i32 (i64, i8*)*) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
define internal i32 @opj_seek_from_file(i64, %struct._IO_FILE* nocapture) #6 {
  %3 = tail call i32 @fseeko64(%struct._IO_FILE* %1, i64 %0, i32 0)
  %4 = icmp eq i32 %3, 0
  %5 = zext i1 %4 to i32
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @opj_image_data_alloc(i64) local_unnamed_addr #2 {
  %2 = tail call i8* @opj_aligned_malloc(i64 %0) #7
  ret i8* %2
}

declare i8* @opj_aligned_malloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @opj_image_data_free(i8*) local_unnamed_addr #2 {
  tail call void @opj_aligned_free(i8* %0) #7
  ret void
}

declare void @opj_aligned_free(i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @fseeko64(%struct._IO_FILE* nocapture, i64, i32) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i64 @ftello64(%struct._IO_FILE* nocapture) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i64 @fread(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
