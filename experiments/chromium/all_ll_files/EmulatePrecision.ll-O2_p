; ModuleID = '../../third_party/angle/src/compiler/translator/tree_ops/EmulatePrecision.cpp'
source_filename = "../../third_party/angle/src/compiler/translator/tree_ops/EmulatePrecision.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sh::ImmutableString" = type { i8*, i64 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.sh::EmulatePrecision" = type <{ %"class.sh::TLValueTrackingTraverser.base", [6 x i8], %"class.std::__1::set", %"class.std::__1::set", %"class.std::__1::set", %"class.std::__1::set", %"class.sh::TMap", i8, [7 x i8] }>
%"class.sh::TLValueTrackingTraverser.base" = type <{ %"class.sh::TIntermTraverser", i8, i8 }>
%"class.sh::TIntermTraverser" = type { i32 (...)**, i8, i8, i8, i32, i32, i8, %"class.std::__1::vector", %"class.sh::TSymbolTable"*, %"class.std::__1::vector.37", %"class.std::__1::vector.44", %"class.sh::TVector", %"class.std::__1::vector.51" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"class.std::__1::__compressed_pair.3" }
%"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry" = type { %"class.sh::TIntermAggregateBase"*, %"class.sh::TIntermNode"*, %"class.sh::TVector" }
%"class.sh::TIntermAggregateBase" = type { i32 (...)** }
%"class.sh::TIntermNode" = type { i32 (...)**, %"struct.sh::TSourceLoc" }
%"struct.sh::TSourceLoc" = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"*, %"class.std::__1::__compressed_pair.39" }
%"struct.sh::TIntermTraverser::NodeInsertMultipleEntry" = type { %"class.sh::TIntermBlock"*, i64, %"class.sh::TVector", %"class.sh::TVector" }
%"class.sh::TIntermBlock" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"* }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"struct.sh::TIntermTraverser::NodeUpdateEntry"*, %"struct.sh::TIntermTraverser::NodeUpdateEntry"*, %"class.std::__1::__compressed_pair.46" }
%"struct.sh::TIntermTraverser::NodeUpdateEntry" = type <{ %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.sh::TIntermTraverser::NodeUpdateEntry"* }
%"class.sh::TVector" = type { %"class.std::__1::vector.0" }
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.sh::TIntermNode"** }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { %"struct.sh::TIntermTraverser::ParentBlock"*, %"struct.sh::TIntermTraverser::ParentBlock"*, %"class.std::__1::__compressed_pair.53" }
%"struct.sh::TIntermTraverser::ParentBlock" = type { %"class.sh::TIntermBlock"*, i64 }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.sh::TIntermTraverser::ParentBlock"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree.58" }
%"class.std::__1::__tree.58" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i64 }
%"class.sh::TMap" = type { %"class.std::__1::map.65" }
%"class.std::__1::map.65" = type { %"class.std::__1::__tree.66" }
%"class.std::__1::__tree.66" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.67", %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.sh::TSymbolTable" = type { %"class.sh::TSymbolTableBase", %"class.std::__1::vector.6", %"class.std::__1::vector.13", i8, i32, i32, i32, %struct.ShBuiltInResources, %"class.std::__1::map", %"class.sh::TVariable"* }
%"class.sh::TSymbolTableBase" = type { %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"* }
%"class.sh::TSymbol" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8, i8 }>
%"class.sh::TSymbolUniqueId" = type { i32 }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.std::__1::unique_ptr.15"*, %"class.std::__1::unique_ptr.15"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::unique_ptr.15" = type opaque
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.std::__1::unique_ptr.15"* }
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array", %"struct.std::__1::array", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [3 x i32] }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.sh::TVariable" = type { %"class.sh::TSymbol.base", %"class.sh::TType"*, %"class.sh::TConstantUnion"* }
%"class.sh::TSymbol.base" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8 }>
%"class.sh::TType" = type { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", i8, %"struct.sh::TLayoutQualifier", i8, i8, %"class.sh::TSpan", %"class.sh::TVector.29"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }
%"struct.sh::TMemoryQualifier" = type { i8, i8, i8, i8, i8 }
%"struct.sh::TLayoutQualifier" = type <{ i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.sh::TSpan" = type { i32*, i64 }
%"class.sh::TVector.29" = type opaque
%"class.sh::TInterfaceBlock" = type { %"class.sh::TSymbol.base", %"class.sh::TFieldListCollection", i32, i32 }
%"class.sh::TFieldListCollection" = type { %"class.sh::TVector.30"*, i64, i32, %"class.std::__1::basic_string" }
%"class.sh::TVector.30" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.sh::TStructure" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TFieldListCollection", i8, [7 x i8] }>
%"class.sh::TConstantUnion" = type { %union.anon.36, i32 }
%union.anon.36 = type { i32 }
%"class.sh::TLValueTrackingTraverser" = type <{ %"class.sh::TIntermTraverser", i8, i8, [6 x i8] }>
%"class.sh::TIntermSymbol" = type { %"class.sh::TIntermTyped", %"class.sh::TVariable"* }
%"class.sh::TIntermTyped" = type { %"class.sh::TIntermNode" }
%"class.sh::TIntermBinary" = type <{ %"class.sh::TIntermOperator.base", [7 x i8], %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, i8, [7 x i8] }>
%"class.sh::TIntermOperator.base" = type <{ %"class.sh::TIntermExpression", i8 }>
%"class.sh::TIntermExpression" = type { %"class.sh::TIntermTyped", %"class.sh::TType" }
%"class.sh::TIntermAggregate" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermAggregateBase", %"class.sh::TVector", i8, i8, %"class.sh::TFunction"* }
%"class.sh::TFunction" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TVector.76"*, %"class.sh::TVariable"**, i64, %"class.sh::TType"*, %"class.sh::ImmutableString", i8, i8, i8, i8, [4 x i8] }>
%"class.sh::TVector.76" = type { %"class.std::__1::vector.77" }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"class.sh::TVariable"**, %"class.sh::TVariable"**, %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.sh::TVariable"** }
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector.111", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector.111" = type { %"class.std::__1::__vector_base.112" }
%"class.std::__1::__vector_base.112" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair.113" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.sh::EmulatePrecision::TypePair" = type { i8*, i8* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.84", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.87 }
%union.anon.87 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.88 }
%struct.anon.88 = type { i8 }
%"class.std::__1::basic_iostream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.sh::TIntermDeclaration" = type { %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector" }
%"class.sh::TIntermGlobalQualifierDeclaration" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermSymbol"*, i8, [7 x i8] }>
%"class.sh::TIntermUnary" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermTyped"*, i8, %"class.sh::TFunction"* }
%"class.sh::TInfoSinkBase" = type { %"class.std::__1::basic_string.84", %"class.std::__1::vector.92" }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { i32*, i32*, %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { i32* }
%"class.sh::(anonymous namespace)::RoundingHelperWriter" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.sh::ImmutableString"* }
%"class.std::__1::tuple.129" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.118" }
%"struct.std::__1::pair.118" = type { %"class.sh::ImmutableString", %"class.sh::TFunction"* }
%"class.std::__1::__tree_node.119" = type { %"class.std::__1::__tree_node_base.base", %"struct.sh::EmulatePrecision::TypePair" }
%"class.sh::TIntermConstantUnion" = type { %"class.sh::TIntermExpression", %"class.sh::TConstantUnion"* }
%"class.sh::TIntermSwizzle" = type <{ %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TVector.103", i8, [7 x i8] }>
%"class.sh::TVector.103" = type { %"class.std::__1::vector.104" }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { i32*, i32*, %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { i32* }
%"class.sh::TIntermTernary" = type { %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermIfElse" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermSwitch" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermCase" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"* }
%"class.sh::TIntermFunctionPrototype" = type { %"class.sh::TIntermTyped", %"class.sh::TFunction"* }
%"class.sh::TIntermFunctionDefinition" = type { %"class.sh::TIntermNode", %"class.sh::TIntermFunctionPrototype"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermLoop" = type { %"class.sh::TIntermNode", i32, %"class.sh::TIntermNode"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermBranch" = type { %"class.sh::TIntermNode", i8, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermPreprocessorDirective" = type { %"class.sh::TIntermNode", i32, %"class.sh::ImmutableString" }
%"class.sh::(anonymous namespace)::RoundingHelperWriterHLSL" = type { %"class.sh::(anonymous namespace)::RoundingHelperWriter.base", [4 x i8] }
%"class.sh::(anonymous namespace)::RoundingHelperWriter.base" = type <{ i32 (...)**, i32 }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.sh::(anonymous namespace)::RoundingHelperWriterESSL" = type { %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL.base", [4 x i8] }
%"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL.base" = type { %"class.sh::(anonymous namespace)::RoundingHelperWriter.base" }
%"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL" = type { %"class.sh::(anonymous namespace)::RoundingHelperWriter.base", [4 x i8] }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v = comdat any

$_ZN2sh16EmulatePrecisionD2Ev = comdat any

$_ZN2sh16EmulatePrecisionD0Ev = comdat any

$_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE = comdat any

$_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE = comdat any

$_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE = comdat any

$_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE = comdat any

$_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE = comdat any

$_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE = comdat any

$_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE = comdat any

$_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE = comdat any

$_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE = comdat any

$_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE = comdat any

$_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE = comdat any

$_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE = comdat any

$_ZN2sh13TInfoSinkBaselsIjEERS0_RKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_9TFunctionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEE14pool_allocatorIS7_EE7destroyEPNS_11__tree_nodeIS7_PvEE = comdat any

$_ZNSt3__16__treeIN2sh16EmulatePrecision8TypePairENS2_18TypePairComparatorENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16__treeIN2sh16EmulatePrecision8TypePairENS2_18TypePairComparatorENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_9TFunctionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEE14pool_allocatorIS7_EE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEEbEERKT_DpOT0_ = comdat any

@_ZTVN2sh16EmulatePrecisionE = hidden unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::EmulatePrecision"*)* @_ZN2sh16EmulatePrecisionD2Ev to i8*), i8* bitcast (void (%"class.sh::EmulatePrecision"*)* @_ZN2sh16EmulatePrecisionD0Ev to i8*), i8* bitcast (void (%"class.sh::EmulatePrecision"*, %"class.sh::TIntermSymbol"*)* @_ZN2sh16EmulatePrecision11visitSymbolEPNS_13TIntermSymbolE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*)* @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwizzle"*)* @_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE to i8*), i8* bitcast (i1 (%"class.sh::EmulatePrecision"*, i32, %"class.sh::TIntermBinary"*)* @_ZN2sh16EmulatePrecision11visitBinaryENS_5VisitEPNS_13TIntermBinaryE to i8*), i8* bitcast (i1 (%"class.sh::EmulatePrecision"*, i32, %"class.sh::TIntermUnary"*)* @_ZN2sh16EmulatePrecision10visitUnaryENS_5VisitEPNS_12TIntermUnaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermTernary"*)* @_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*)* @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*)* @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*)* @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*)* @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (i1 (%"class.sh::EmulatePrecision"*, i32, %"class.sh::TIntermAggregate"*)* @_ZN2sh16EmulatePrecision14visitAggregateENS_5VisitEPNS_16TIntermAggregateE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE to i8*), i8* bitcast (i1 (%"class.sh::EmulatePrecision"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*)* @_ZN2sh16EmulatePrecision31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::EmulatePrecision"*, i32, %"class.sh::TIntermDeclaration"*)* @_ZN2sh16EmulatePrecision16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*)* @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*)* @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE to i8*), i8* bitcast (void (%"class.sh::TLValueTrackingTraverser"*, %"class.sh::TIntermBinary"*)* @_ZN2sh24TLValueTrackingTraverser14traverseBinaryEPNS_13TIntermBinaryE to i8*), i8* bitcast (void (%"class.sh::TLValueTrackingTraverser"*, %"class.sh::TIntermUnary"*)* @_ZN2sh24TLValueTrackingTraverser13traverseUnaryEPNS_12TIntermUnaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (void (%"class.sh::TLValueTrackingTraverser"*, %"class.sh::TIntermAggregate"*)* @_ZN2sh24TLValueTrackingTraverser17traverseAggregateEPNS_16TIntermAggregateE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE to i8*)] }, align 8
@.str = private unnamed_addr constant [4 x i8] c"add\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"sub\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"mul\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"div\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@_ZN2sh12_GLOBAL__N_115kAngleFrmStringE = internal constant %"class.sh::ImmutableString" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.68, i32 0, i32 0), i64 9 }, align 8
@_ZN2sh12_GLOBAL__N_115kAngleFrlStringE = internal constant %"class.sh::ImmutableString" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i32 0, i32 0), i64 9 }, align 8
@_ZN2sh12_GLOBAL__N_111kParamXNameE = internal constant %"class.sh::ImmutableString" { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44, i32 0, i32 0), i64 1 }, align 8
@.str.8 = private unnamed_addr constant [16 x i8] c"angle_compound_\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"_frm\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"_frl\00", align 1
@_ZN2sh12_GLOBAL__N_111kParamYNameE = internal constant %"class.sh::ImmutableString" { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.78, i32 0, i32 0), i64 1 }, align 8
@_ZTVN2sh12_GLOBAL__N_124RoundingHelperWriterHLSLE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*)* @_ZN2sh12_GLOBAL__N_120RoundingHelperWriterD2Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::RoundingHelperWriterHLSL"*)* @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterHLSLD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterHLSL"*, i8*)* @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterHLSL13getTypeStringEPKc to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::RoundingHelperWriterHLSL"*, %"class.sh::TInfoSinkBase"*)* @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterHLSL25writeFloatRoundingHelpersERNS_13TInfoSinkBaseE to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::RoundingHelperWriterHLSL"*, %"class.sh::TInfoSinkBase"*, i32)* @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterHLSL26writeVectorRoundingHelpersERNS_13TInfoSinkBaseEj to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::RoundingHelperWriterHLSL"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)* @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterHLSL25writeMatrixRoundingHelperERNS_13TInfoSinkBaseEjjPKc to i8*)] }, align 8
@.str.11 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"vec2\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"float2\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"vec3\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"float3\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"vec4\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"float4\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"mat2\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"float2x2\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"mat3\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"float3x3\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"mat4\00", align 1
@.str.23 = private unnamed_addr constant [9 x i8] c"float4x4\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c"mat2x3\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"float2x3\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"mat2x4\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"float2x4\00", align 1
@.str.28 = private unnamed_addr constant [7 x i8] c"mat3x2\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"float3x2\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"mat3x4\00", align 1
@.str.31 = private unnamed_addr constant [9 x i8] c"float3x4\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"mat4x2\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"float4x2\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"mat4x3\00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c"float4x3\00", align 1
@.str.37 = private unnamed_addr constant [12 x i8] c" angle_frm(\00", align 1
@.str.38 = private unnamed_addr constant [48 x i8] c" v) {\0A    v = clamp(v, -65504.0, 65504.0);\0A    \00", align 1
@.str.39 = private unnamed_addr constant [57 x i8] c" exponent = floor(log2(abs(v) + 1e-30)) - 10.0;\0A    bool\00", align 1
@.str.40 = private unnamed_addr constant [132 x i8] c" isNonZero = exponent < -25.0;\0A    v = v * exp2(-exponent);\0A    v = sign(v) * floor(abs(v));\0A    return v * exp2(exponent) * (float\00", align 1
@.str.41 = private unnamed_addr constant [17 x i8] c")(isNonZero);\0A}\0A\00", align 1
@.str.42 = private unnamed_addr constant [12 x i8] c" angle_frl(\00", align 1
@.str.43 = private unnamed_addr constant [117 x i8] c" v) {\0A    v = clamp(v, -2.0, 2.0);\0A    v = v * 256.0;\0A    v = sign(v) * floor(abs(v));\0A    return v * 0.00390625;\0A}\0A\00", align 1
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@.str.44 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.45 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.46 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c" m) {\0A\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"    \00", align 1
@.str.49 = private unnamed_addr constant [11 x i8] c" rounded;\0A\00", align 1
@.str.50 = private unnamed_addr constant [13 x i8] c"    rounded[\00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c"] = \00", align 1
@.str.52 = private unnamed_addr constant [4 x i8] c"(m[\00", align 1
@.str.53 = private unnamed_addr constant [5 x i8] c"]);\0A\00", align 1
@.str.54 = private unnamed_addr constant [23 x i8] c"    return rounded;\0A}\0A\00", align 1
@_ZTVN2sh12_GLOBAL__N_124RoundingHelperWriterESSLE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*)* @_ZN2sh12_GLOBAL__N_120RoundingHelperWriterD2Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::RoundingHelperWriterESSL"*)* @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterESSLD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterESSL"*, i8*)* @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterESSL13getTypeStringEPKc to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, %"class.sh::TInfoSinkBase"*)* @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterGLSL25writeFloatRoundingHelpersERNS_13TInfoSinkBaseE to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, %"class.sh::TInfoSinkBase"*, i32)* @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterGLSL26writeVectorRoundingHelpersERNS_13TInfoSinkBaseEj to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)* @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterGLSL25writeMatrixRoundingHelperERNS_13TInfoSinkBaseEjjPKc to i8*)] }, align 8
@_ZTVN2sh12_GLOBAL__N_124RoundingHelperWriterGLSLE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*)* @_ZN2sh12_GLOBAL__N_120RoundingHelperWriterD2Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*)* @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterGLSLD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, i8*)* @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterGLSL13getTypeStringEPKc to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, %"class.sh::TInfoSinkBase"*)* @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterGLSL25writeFloatRoundingHelpersERNS_13TInfoSinkBaseE to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, %"class.sh::TInfoSinkBase"*, i32)* @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterGLSL26writeVectorRoundingHelpersERNS_13TInfoSinkBaseEj to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)* @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterGLSL25writeMatrixRoundingHelperERNS_13TInfoSinkBaseEjjPKc to i8*)] }, align 8
@.str.55 = private unnamed_addr constant [7 x i8] c"highp \00", align 1
@.str.56 = private unnamed_addr constant [15 x i8] c" angle_frm(in \00", align 1
@.str.57 = private unnamed_addr constant [48 x i8] c" x) {\0A    x = clamp(x, -65504.0, 65504.0);\0A    \00", align 1
@.str.58 = private unnamed_addr constant [205 x i8] c" exponent = floor(log2(abs(x) + 1e-30)) - 10.0;\0A    bool isNonZero = (exponent >= -25.0);\0A    x = x * exp2(-exponent);\0A    x = sign(x) * floor(abs(x));\0A    return x * exp2(exponent) * float(isNonZero);\0A}\0A\00", align 1
@.str.59 = private unnamed_addr constant [15 x i8] c" angle_frl(in \00", align 1
@.str.60 = private unnamed_addr constant [117 x i8] c" x) {\0A    x = clamp(x, -2.0, 2.0);\0A    x = x * 256.0;\0A    x = sign(x) * floor(abs(x));\0A    return x * 0.00390625;\0A}\0A\00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"vec\00", align 1
@.str.62 = private unnamed_addr constant [57 x i8] c" exponent = floor(log2(abs(v) + 1e-30)) - 10.0;\0A    bvec\00", align 1
@.str.63 = private unnamed_addr constant [44 x i8] c" isNonZero = greaterThanEqual(exponent, vec\00", align 1
@.str.64 = private unnamed_addr constant [108 x i8] c"(-25.0));\0A    v = v * exp2(-exponent);\0A    v = sign(v) * floor(abs(v));\0A    return v * exp2(exponent) * vec\00", align 1
@.str.65 = private unnamed_addr constant [16 x i8] c"(isNonZero);\0A}\0A\00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c"mat\00", align 1
@.str.67 = private unnamed_addr constant [5 x i8] c"(in \00", align 1
@.str.68 = private unnamed_addr constant [10 x i8] c"angle_frm\00", align 1
@.str.69 = private unnamed_addr constant [10 x i8] c"angle_frl\00", align 1
@.str.70 = private unnamed_addr constant [17 x i8] c" angle_compound_\00", align 1
@.str.71 = private unnamed_addr constant [12 x i8] c"_frm(inout \00", align 1
@.str.72 = private unnamed_addr constant [8 x i8] c" x, in \00", align 1
@.str.73 = private unnamed_addr constant [38 x i8] c" y) {\0A    x = angle_frm(angle_frm(x) \00", align 1
@.str.74 = private unnamed_addr constant [22 x i8] c" y);\0A    return x;\0A}\0A\00", align 1
@.str.75 = private unnamed_addr constant [12 x i8] c"_frl(inout \00", align 1
@.str.76 = private unnamed_addr constant [38 x i8] c" y) {\0A    x = angle_frl(angle_frl(x) \00", align 1
@.str.77 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.78 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN2sh16EmulatePrecisionC1EPNS_12TSymbolTableE = hidden unnamed_addr alias void (%"class.sh::EmulatePrecision"*, %"class.sh::TSymbolTable"*), void (%"class.sh::EmulatePrecision"*, %"class.sh::TSymbolTable"*)* @_ZN2sh16EmulatePrecisionC2EPNS_12TSymbolTableE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh16EmulatePrecisionC2EPNS_12TSymbolTableE(%"class.sh::EmulatePrecision"*, %"class.sh::TSymbolTable"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.sh::EmulatePrecision"* %0 to %"class.sh::TLValueTrackingTraverser"*
  tail call void @_ZN2sh24TLValueTrackingTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TLValueTrackingTraverser"* %3, i1 zeroext true, i1 zeroext true, i1 zeroext true, %"class.sh::TSymbolTable"* %1) #12
  %4 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh16EmulatePrecisionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %11 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"** %11, align 8
  %13 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 4, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node_base"** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %19 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_node_base"** %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %18, %"class.std::__1::__tree_end_node"** %19, align 8
  %21 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0
  %23 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__tree_node_base"** %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::__tree_end_node"** %23, align 8
  %25 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 7
  store i8 0, i8* %25, align 8
  ret void
}

declare void @_ZN2sh24TLValueTrackingTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TLValueTrackingTraverser"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.sh::TSymbolTable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh16EmulatePrecision11visitSymbolEPNS_13TIntermSymbolE(%"class.sh::EmulatePrecision"*, %"class.sh::TIntermSymbol"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 0, i32 11, i32 0
  %5 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 0, i32 11, i32 0, i32 0, i32 1
  %6 = bitcast %"class.sh::TIntermNode"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.0"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 3
  %12 = icmp ult i64 %11, 2
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %9 to %"class.sh::TIntermNode"**
  %15 = add nsw i64 %11, -2
  %16 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %14, i64 %15
  %17 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %16, align 8
  %18 = bitcast %"class.sh::TIntermNode"* %17 to %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)***
  br label %19

19:                                               ; preds = %2, %13
  %20 = phi %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*** [ %18, %13 ], [ null, %2 ]
  %21 = phi %"class.sh::TIntermNode"* [ %17, %13 ], [ null, %2 ]
  %22 = bitcast %"class.sh::TIntermSymbol"* %1 to %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)***
  %23 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %23, i64 31
  %25 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %24, align 8
  %26 = tail call dereferenceable(184) %"class.sh::TType"* %25(%"class.sh::TIntermSymbol"* %1) #12
  %27 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %125

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %26, i64 0, i32 10, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %125

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %26, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = add i32 %36, -1
  %38 = icmp ult i32 %37, 2
  br i1 %38, label %39, label %125

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %1, i64 0, i32 0
  %41 = icmp eq %"class.sh::TIntermNode"* %21, null
  br i1 %41, label %125, label %42

42:                                               ; preds = %39
  %43 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*** %20, align 8
  %44 = getelementptr inbounds %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %43, i64 8
  %45 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %44, align 8
  %46 = tail call %"class.sh::TIntermBlock"* %45(%"class.sh::TIntermNode"* nonnull %21) #12
  %47 = icmp eq %"class.sh::TIntermBlock"* %46, null
  br i1 %47, label %48, label %125

48:                                               ; preds = %42
  %49 = bitcast %"class.sh::TIntermNode"* %21 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %50 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %50, i64 13
  %52 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %51, align 8
  %53 = tail call %"class.sh::TIntermBinary"* %52(%"class.sh::TIntermNode"* nonnull %21) #12
  %54 = icmp eq %"class.sh::TIntermBinary"* %53, null
  br i1 %54, label %63, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %53, i64 0, i32 0, i32 1
  %57 = load i8, i8* %56, align 8
  %58 = icmp eq i8 %57, 30
  br i1 %58, label %59, label %63

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %53, i64 0, i32 3
  %61 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %60, align 8
  %62 = icmp eq %"class.sh::TIntermTyped"* %61, %40
  br i1 %62, label %63, label %125

63:                                               ; preds = %48, %55, %59
  %64 = bitcast %"class.sh::TIntermNode"* %21 to %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)***
  %65 = load %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)*** %64, align 8
  %66 = getelementptr inbounds %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)** %65, i64 7
  %67 = load %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)** %66, align 8
  %68 = tail call %"class.sh::TIntermAggregate"* %67(%"class.sh::TIntermNode"* nonnull %21) #12
  %69 = icmp eq %"class.sh::TIntermAggregate"* %68, null
  br i1 %69, label %110, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %68, i64 0, i32 0, i32 1
  %72 = load i8, i8* %71, align 8
  %73 = icmp eq i8 %72, -119
  br i1 %73, label %74, label %110

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %68, i64 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.sh::TIntermAggregate"* %68 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %77 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %76, align 8
  %78 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %77, i64 31
  %79 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %78, align 8
  %80 = tail call dereferenceable(184) %"class.sh::TType"* %79(%"class.sh::TIntermTyped"* %75) #12
  %81 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %80, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = bitcast %"class.sh::TIntermSymbol"* %1 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %84 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %83, align 8
  %85 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %84, i64 31
  %86 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %85, align 8
  %87 = tail call dereferenceable(184) %"class.sh::TType"* %86(%"class.sh::TIntermTyped"* %40) #12
  %88 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %87, i64 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %82, %89
  br i1 %90, label %91, label %110

91:                                               ; preds = %74
  %92 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %68, i64 0, i32 0, i32 0
  %93 = bitcast %"class.sh::TIntermAggregate"* %68 to %"class.sh::TType"* (%"class.sh::TIntermExpression"*)***
  %94 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)**, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*** %93, align 8
  %95 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %94, i64 31
  %96 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %95, align 8
  %97 = tail call dereferenceable(184) %"class.sh::TType"* %96(%"class.sh::TIntermExpression"* %92) #12
  %98 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %97, i64 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 1
  br i1 %100, label %101, label %110

101:                                              ; preds = %91
  %102 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %97, i64 0, i32 10, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %110

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %97, i64 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = add i32 %107, -1
  %109 = icmp ult i32 %108, 2
  br i1 %109, label %125, label %110

110:                                              ; preds = %91, %101, %74, %63, %70, %105
  %111 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 7
  %112 = load i8, i8* %111, align 8, !range !2
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %114, label %125

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 1
  %116 = load i8, i8* %115, align 8, !range !2
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %118, label %125

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 2
  %120 = load i8, i8* %119, align 1, !range !2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %118
  %123 = tail call %"class.sh::TIntermAggregate"* @_ZN2sh16EmulatePrecision30createRoundingFunctionCallNodeEPNS_12TIntermTypedE(%"class.sh::EmulatePrecision"* %0, %"class.sh::TIntermTyped"* %40)
  %124 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"* %3, %"class.sh::TIntermNode"* %124, i32 0) #12
  br label %125

125:                                              ; preds = %118, %114, %59, %42, %39, %19, %30, %110, %122, %105, %34
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermAggregate"* @_ZN2sh16EmulatePrecision30createRoundingFunctionCallNodeEPNS_12TIntermTypedE(%"class.sh::EmulatePrecision"*, %"class.sh::TIntermTyped"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.sh::TVector", align 8
  %4 = alloca %"class.sh::TVector.76", align 8
  %5 = bitcast %"class.sh::TIntermTyped"* %1 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %6 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %6, i64 31
  %8 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %7, align 8
  %9 = tail call dereferenceable(184) %"class.sh::TType"* %8(%"class.sh::TIntermTyped"* %1) #12
  %10 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 1
  %13 = select i1 %12, %"class.sh::ImmutableString"* @_ZN2sh12_GLOBAL__N_115kAngleFrlStringE, %"class.sh::ImmutableString"* @_ZN2sh12_GLOBAL__N_115kAngleFrmStringE
  %14 = bitcast %"class.sh::TVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.sh::TVector", %"class.sh::TVector"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.sh::TVector", %"class.sh::TVector"* %3, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.sh::TVector", %"class.sh::TVector"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #12
  %18 = ptrtoint %"class.sh::TIntermTyped"* %1 to i64
  %19 = bitcast %"class.sh::TIntermNode"*** %16 to i64*
  %20 = bitcast %"class.sh::TVector"* %3 to i64*
  %21 = bitcast %"class.sh::TIntermNode"*** %17 to i64*
  %22 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #12
  %23 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %22, i64 8) #12
  %24 = bitcast i8* %23 to %"class.sh::TIntermNode"**
  %25 = getelementptr inbounds i8, i8* %23, i64 8
  %26 = ptrtoint i8* %25 to i64
  %27 = bitcast i8* %23 to i64*
  store i64 %18, i64* %27, align 8
  %28 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %15, align 8
  %29 = ptrtoint %"class.sh::TIntermNode"** %28 to i64
  %30 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %16, align 8
  %31 = bitcast %"class.sh::TIntermNode"** %30 to i8*
  %32 = icmp eq %"class.sh::TIntermNode"** %30, %28
  br i1 %32, label %206, label %33

33:                                               ; preds = %2
  %34 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %30, i64 -1
  %35 = ptrtoint %"class.sh::TIntermNode"** %34 to i64
  %36 = sub i64 %35, %29
  %37 = lshr i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = icmp ult i64 %38, 4
  br i1 %39, label %136, label %40

40:                                               ; preds = %33
  %41 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %30, i64 -1
  %42 = ptrtoint %"class.sh::TIntermNode"** %41 to i64
  %43 = sub i64 %42, %29
  %44 = lshr i64 %43, 3
  %45 = and i64 %43, -8
  %46 = xor i64 %45, -8
  %47 = getelementptr i8, i8* %23, i64 %46
  %48 = xor i64 %44, -1
  %49 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %30, i64 %48
  %50 = bitcast %"class.sh::TIntermNode"** %49 to i8*
  %51 = icmp ult i8* %47, %31
  %52 = icmp ugt i8* %23, %50
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %40
  %55 = and i64 %38, 4611686018427387900
  %56 = sub nsw i64 0, %55
  %57 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %24, i64 %56
  %58 = sub nsw i64 0, %55
  %59 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %30, i64 %58
  %60 = add nsw i64 %55, -4
  %61 = lshr exact i64 %60, 2
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %60, 0
  br i1 %64, label %111, label %65

65:                                               ; preds = %54
  %66 = sub nuw nsw i64 %62, %63
  %67 = getelementptr i8, i8* %23, i64 -8
  %68 = bitcast i8* %67 to %"class.sh::TIntermNode"**
  %69 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %30, i64 -1
  %70 = getelementptr i8, i8* %23, i64 -8
  %71 = bitcast i8* %70 to %"class.sh::TIntermNode"**
  %72 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %30, i64 -1
  br label %73

73:                                               ; preds = %73, %65
  %74 = phi i64 [ 0, %65 ], [ %108, %73 ]
  %75 = phi i64 [ %66, %65 ], [ %109, %73 ]
  %76 = sub i64 0, %74
  %77 = sub i64 0, %74
  %78 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %68, i64 %76
  %79 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %69, i64 %77
  %80 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %79, i64 -1
  %81 = bitcast %"class.sh::TIntermNode"** %80 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8, !alias.scope !3
  %83 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %79, i64 -2
  %84 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %83, i64 -1
  %85 = bitcast %"class.sh::TIntermNode"** %84 to <2 x i64>*
  %86 = load <2 x i64>, <2 x i64>* %85, align 8, !alias.scope !3
  %87 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %78, i64 -1
  %88 = bitcast %"class.sh::TIntermNode"** %87 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %88, align 8, !alias.scope !6, !noalias !3
  %89 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %78, i64 -2
  %90 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %89, i64 -1
  %91 = bitcast %"class.sh::TIntermNode"** %90 to <2 x i64>*
  store <2 x i64> %86, <2 x i64>* %91, align 8, !alias.scope !6, !noalias !3
  %92 = sub nuw nsw i64 -4, %74
  %93 = sub nuw nsw i64 -4, %74
  %94 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %71, i64 %92
  %95 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %72, i64 %93
  %96 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %95, i64 -1
  %97 = bitcast %"class.sh::TIntermNode"** %96 to <2 x i64>*
  %98 = load <2 x i64>, <2 x i64>* %97, align 8, !alias.scope !3
  %99 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %95, i64 -2
  %100 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %99, i64 -1
  %101 = bitcast %"class.sh::TIntermNode"** %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !3
  %103 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %94, i64 -1
  %104 = bitcast %"class.sh::TIntermNode"** %103 to <2 x i64>*
  store <2 x i64> %98, <2 x i64>* %104, align 8, !alias.scope !6, !noalias !3
  %105 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %94, i64 -2
  %106 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %105, i64 -1
  %107 = bitcast %"class.sh::TIntermNode"** %106 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %107, align 8, !alias.scope !6, !noalias !3
  %108 = add i64 %74, 8
  %109 = add i64 %75, -2
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %73, !llvm.loop !8

111:                                              ; preds = %73, %54
  %112 = phi i64 [ 0, %54 ], [ %108, %73 ]
  %113 = icmp eq i64 %63, 0
  br i1 %113, label %134, label %114

114:                                              ; preds = %111
  %115 = sub i64 0, %112
  %116 = getelementptr i8, i8* %23, i64 -8
  %117 = bitcast i8* %116 to %"class.sh::TIntermNode"**
  %118 = sub i64 0, %112
  %119 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %30, i64 -1
  %120 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %117, i64 %115
  %121 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %119, i64 %118
  %122 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %121, i64 -1
  %123 = bitcast %"class.sh::TIntermNode"** %122 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 8, !alias.scope !3
  %125 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %121, i64 -2
  %126 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %125, i64 -1
  %127 = bitcast %"class.sh::TIntermNode"** %126 to <2 x i64>*
  %128 = load <2 x i64>, <2 x i64>* %127, align 8, !alias.scope !3
  %129 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %120, i64 -1
  %130 = bitcast %"class.sh::TIntermNode"** %129 to <2 x i64>*
  store <2 x i64> %124, <2 x i64>* %130, align 8, !alias.scope !6, !noalias !3
  %131 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %120, i64 -2
  %132 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %131, i64 -1
  %133 = bitcast %"class.sh::TIntermNode"** %132 to <2 x i64>*
  store <2 x i64> %128, <2 x i64>* %133, align 8, !alias.scope !6, !noalias !3
  br label %134

134:                                              ; preds = %111, %114
  %135 = icmp eq i64 %38, %55
  br i1 %135, label %206, label %136

136:                                              ; preds = %134, %40, %33
  %137 = phi %"class.sh::TIntermNode"** [ %24, %40 ], [ %24, %33 ], [ %57, %134 ]
  %138 = phi %"class.sh::TIntermNode"** [ %30, %40 ], [ %30, %33 ], [ %59, %134 ]
  %139 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %138, i64 -1
  %140 = ptrtoint %"class.sh::TIntermNode"** %139 to i64
  %141 = sub i64 %140, %29
  %142 = lshr i64 %141, 3
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %157, label %146

146:                                              ; preds = %136, %146
  %147 = phi %"class.sh::TIntermNode"** [ %150, %146 ], [ %137, %136 ]
  %148 = phi %"class.sh::TIntermNode"** [ %151, %146 ], [ %138, %136 ]
  %149 = phi i64 [ %155, %146 ], [ %144, %136 ]
  %150 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %147, i64 -1
  %151 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %148, i64 -1
  %152 = bitcast %"class.sh::TIntermNode"** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.sh::TIntermNode"** %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = add i64 %149, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %146, !llvm.loop !10

157:                                              ; preds = %146, %136
  %158 = phi %"class.sh::TIntermNode"** [ undef, %136 ], [ %150, %146 ]
  %159 = phi %"class.sh::TIntermNode"** [ %137, %136 ], [ %150, %146 ]
  %160 = phi %"class.sh::TIntermNode"** [ %138, %136 ], [ %151, %146 ]
  %161 = icmp ult i64 %141, 56
  br i1 %161, label %206, label %162

162:                                              ; preds = %157, %162
  %163 = phi %"class.sh::TIntermNode"** [ %200, %162 ], [ %159, %157 ]
  %164 = phi %"class.sh::TIntermNode"** [ %201, %162 ], [ %160, %157 ]
  %165 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %163, i64 -1
  %166 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %164, i64 -1
  %167 = bitcast %"class.sh::TIntermNode"** %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"class.sh::TIntermNode"** %165 to i64*
  store i64 %168, i64* %169, align 8
  %170 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %163, i64 -2
  %171 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %164, i64 -2
  %172 = bitcast %"class.sh::TIntermNode"** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.sh::TIntermNode"** %170 to i64*
  store i64 %173, i64* %174, align 8
  %175 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %163, i64 -3
  %176 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %164, i64 -3
  %177 = bitcast %"class.sh::TIntermNode"** %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = bitcast %"class.sh::TIntermNode"** %175 to i64*
  store i64 %178, i64* %179, align 8
  %180 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %163, i64 -4
  %181 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %164, i64 -4
  %182 = bitcast %"class.sh::TIntermNode"** %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = bitcast %"class.sh::TIntermNode"** %180 to i64*
  store i64 %183, i64* %184, align 8
  %185 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %163, i64 -5
  %186 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %164, i64 -5
  %187 = bitcast %"class.sh::TIntermNode"** %186 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = bitcast %"class.sh::TIntermNode"** %185 to i64*
  store i64 %188, i64* %189, align 8
  %190 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %163, i64 -6
  %191 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %164, i64 -6
  %192 = bitcast %"class.sh::TIntermNode"** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = bitcast %"class.sh::TIntermNode"** %190 to i64*
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %163, i64 -7
  %196 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %164, i64 -7
  %197 = bitcast %"class.sh::TIntermNode"** %196 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.sh::TIntermNode"** %195 to i64*
  store i64 %198, i64* %199, align 8
  %200 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %163, i64 -8
  %201 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %164, i64 -8
  %202 = bitcast %"class.sh::TIntermNode"** %201 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = bitcast %"class.sh::TIntermNode"** %200 to i64*
  store i64 %203, i64* %204, align 8
  %205 = icmp eq %"class.sh::TIntermNode"** %201, %28
  br i1 %205, label %206, label %162, !llvm.loop !12

206:                                              ; preds = %157, %162, %134, %2
  %207 = phi %"class.sh::TIntermNode"** [ %24, %2 ], [ %57, %134 ], [ %158, %157 ], [ %200, %162 ]
  %208 = ptrtoint %"class.sh::TIntermNode"** %207 to i64
  store i64 %208, i64* %20, align 8
  store i64 %26, i64* %19, align 8
  store i64 %26, i64* %21, align 8
  %209 = bitcast %"class.sh::TVector.76"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %209) #12
  %210 = getelementptr inbounds %"class.sh::TVector.76", %"class.sh::TVector.76"* %4, i64 0, i32 0, i32 0, i32 0
  %211 = getelementptr inbounds %"class.sh::TVector.76", %"class.sh::TVector.76"* %4, i64 0, i32 0, i32 0, i32 1
  %212 = getelementptr inbounds %"class.sh::TVector.76", %"class.sh::TVector.76"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %209, i8 0, i64 24, i1 false) #12
  %213 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #12
  %214 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %213, i64 184) #12
  %215 = bitcast i8* %214 to %"class.sh::TType"*
  %216 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %5, align 8
  %217 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %216, i64 31
  %218 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %217, align 8
  %219 = tail call dereferenceable(184) %"class.sh::TType"* %218(%"class.sh::TIntermTyped"* %1) #12
  tail call void @_ZN2sh5TTypeC1ERKS0_(%"class.sh::TType"* %215, %"class.sh::TType"* dereferenceable(184) %219) #12
  %220 = getelementptr inbounds i8, i8* %214, i64 4
  %221 = bitcast i8* %220 to i32*
  store i32 3, i32* %221, align 4
  %222 = getelementptr inbounds i8, i8* %214, i64 8
  %223 = bitcast i8* %222 to i32*
  store i32 14, i32* %223, align 8
  %224 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #12
  %225 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %224, i64 40) #12
  %226 = bitcast i8* %225 to %"class.sh::TVariable"*
  %227 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 0, i32 8
  %228 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %227, align 8
  tail call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %226, %"class.sh::TSymbolTable"* %228, %"class.sh::ImmutableString"* nonnull dereferenceable(16) @_ZN2sh12_GLOBAL__N_111kParamXNameE, %"class.sh::TType"* %215, i8 zeroext 2, i8 zeroext 0) #12
  %229 = ptrtoint i8* %225 to i64
  %230 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %211, align 8
  %231 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %212, align 8
  %232 = icmp ult %"class.sh::TVariable"** %230, %231
  %233 = ptrtoint %"class.sh::TVariable"** %231 to i64
  br i1 %232, label %234, label %239

234:                                              ; preds = %206
  %235 = bitcast %"class.sh::TVariable"** %230 to i64*
  store i64 %229, i64* %235, align 8
  %236 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %230, i64 1
  %237 = ptrtoint %"class.sh::TVariable"** %236 to i64
  %238 = bitcast %"class.sh::TVariable"*** %211 to i64*
  store i64 %237, i64* %238, align 8
  br label %451

239:                                              ; preds = %206
  %240 = ptrtoint %"class.sh::TVariable"** %230 to i64
  %241 = bitcast %"class.sh::TVariable"*** %211 to i64*
  %242 = bitcast %"class.sh::TVector.76"* %4 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = sub i64 %240, %243
  %245 = ashr exact i64 %244, 3
  %246 = add nsw i64 %245, 1
  %247 = icmp ugt i64 %246, 2305843009213693951
  br i1 %247, label %248, label %250

248:                                              ; preds = %239
  %249 = bitcast %"class.sh::TVector.76"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %249) #13
  unreachable

250:                                              ; preds = %239
  %251 = bitcast %"class.sh::TVariable"*** %212 to i64*
  %252 = sub i64 %233, %243
  %253 = ashr exact i64 %252, 3
  %254 = icmp ult i64 %253, 1152921504606846975
  br i1 %254, label %255, label %260

255:                                              ; preds = %250
  %256 = ashr exact i64 %252, 2
  %257 = icmp ult i64 %256, %246
  %258 = select i1 %257, i64 %246, i64 %256
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %266, label %260

260:                                              ; preds = %255, %250
  %261 = phi i64 [ %258, %255 ], [ 2305843009213693951, %250 ]
  %262 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #12
  %263 = shl i64 %261, 3
  %264 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %262, i64 %263) #12
  %265 = bitcast i8* %264 to %"class.sh::TVariable"**
  br label %266

266:                                              ; preds = %260, %255
  %267 = phi i64 [ %261, %260 ], [ 0, %255 ]
  %268 = phi %"class.sh::TVariable"** [ %265, %260 ], [ null, %255 ]
  %269 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %268, i64 %245
  %270 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %268, i64 %267
  %271 = ptrtoint %"class.sh::TVariable"** %270 to i64
  %272 = bitcast %"class.sh::TVariable"** %269 to i64*
  store i64 %229, i64* %272, align 8
  %273 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %269, i64 1
  %274 = ptrtoint %"class.sh::TVariable"** %273 to i64
  %275 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %210, align 8
  %276 = ptrtoint %"class.sh::TVariable"** %275 to i64
  %277 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %211, align 8
  %278 = icmp eq %"class.sh::TVariable"** %277, %275
  br i1 %278, label %448, label %279

279:                                              ; preds = %266
  %280 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %277, i64 -1
  %281 = ptrtoint %"class.sh::TVariable"** %280 to i64
  %282 = sub i64 %281, %276
  %283 = lshr i64 %282, 3
  %284 = add nuw nsw i64 %283, 1
  %285 = icmp ult i64 %284, 4
  br i1 %285, label %378, label %286

286:                                              ; preds = %279
  %287 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %277, i64 -1
  %288 = ptrtoint %"class.sh::TVariable"** %287 to i64
  %289 = sub i64 %288, %276
  %290 = lshr i64 %289, 3
  %291 = xor i64 %290, -1
  %292 = add nsw i64 %245, %291
  %293 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %268, i64 %292
  %294 = xor i64 %290, -1
  %295 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %277, i64 %294
  %296 = icmp ult %"class.sh::TVariable"** %293, %277
  %297 = icmp ult %"class.sh::TVariable"** %295, %269
  %298 = and i1 %296, %297
  br i1 %298, label %378, label %299

299:                                              ; preds = %286
  %300 = and i64 %284, 4611686018427387900
  %301 = sub nsw i64 0, %300
  %302 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %269, i64 %301
  %303 = sub nsw i64 0, %300
  %304 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %277, i64 %303
  %305 = add nsw i64 %300, -4
  %306 = lshr exact i64 %305, 2
  %307 = add nuw nsw i64 %306, 1
  %308 = and i64 %307, 1
  %309 = icmp eq i64 %305, 0
  br i1 %309, label %356, label %310

310:                                              ; preds = %299
  %311 = sub nuw nsw i64 %307, %308
  %312 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %269, i64 -1
  %313 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %277, i64 -1
  %314 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %269, i64 -1
  %315 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %277, i64 -1
  br label %316

316:                                              ; preds = %316, %310
  %317 = phi i64 [ 0, %310 ], [ %351, %316 ]
  %318 = phi i64 [ %311, %310 ], [ %352, %316 ]
  %319 = sub i64 0, %317
  %320 = sub i64 0, %317
  %321 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %312, i64 %319
  %322 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %313, i64 %320
  %323 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %322, i64 -1
  %324 = bitcast %"class.sh::TVariable"** %323 to <2 x i64>*
  %325 = load <2 x i64>, <2 x i64>* %324, align 8, !alias.scope !13
  %326 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %322, i64 -2
  %327 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %326, i64 -1
  %328 = bitcast %"class.sh::TVariable"** %327 to <2 x i64>*
  %329 = load <2 x i64>, <2 x i64>* %328, align 8, !alias.scope !13
  %330 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %321, i64 -1
  %331 = bitcast %"class.sh::TVariable"** %330 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %331, align 8, !alias.scope !16, !noalias !13
  %332 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %321, i64 -2
  %333 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %332, i64 -1
  %334 = bitcast %"class.sh::TVariable"** %333 to <2 x i64>*
  store <2 x i64> %329, <2 x i64>* %334, align 8, !alias.scope !16, !noalias !13
  %335 = sub nuw nsw i64 -4, %317
  %336 = sub nuw nsw i64 -4, %317
  %337 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %314, i64 %335
  %338 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %315, i64 %336
  %339 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %338, i64 -1
  %340 = bitcast %"class.sh::TVariable"** %339 to <2 x i64>*
  %341 = load <2 x i64>, <2 x i64>* %340, align 8, !alias.scope !13
  %342 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %338, i64 -2
  %343 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %342, i64 -1
  %344 = bitcast %"class.sh::TVariable"** %343 to <2 x i64>*
  %345 = load <2 x i64>, <2 x i64>* %344, align 8, !alias.scope !13
  %346 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %337, i64 -1
  %347 = bitcast %"class.sh::TVariable"** %346 to <2 x i64>*
  store <2 x i64> %341, <2 x i64>* %347, align 8, !alias.scope !16, !noalias !13
  %348 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %337, i64 -2
  %349 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %348, i64 -1
  %350 = bitcast %"class.sh::TVariable"** %349 to <2 x i64>*
  store <2 x i64> %345, <2 x i64>* %350, align 8, !alias.scope !16, !noalias !13
  %351 = add i64 %317, 8
  %352 = add i64 %318, -2
  %353 = icmp eq i64 %352, 0
  br i1 %353, label %354, label %316, !llvm.loop !18

354:                                              ; preds = %316
  %355 = sub nuw nsw i64 -8, %317
  br label %356

356:                                              ; preds = %354, %299
  %357 = phi i64 [ 0, %299 ], [ %355, %354 ]
  %358 = icmp eq i64 %308, 0
  br i1 %358, label %376, label %359

359:                                              ; preds = %356
  %360 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %269, i64 -1
  %361 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %277, i64 -1
  %362 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %360, i64 %357
  %363 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %361, i64 %357
  %364 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %363, i64 -1
  %365 = bitcast %"class.sh::TVariable"** %364 to <2 x i64>*
  %366 = load <2 x i64>, <2 x i64>* %365, align 8, !alias.scope !13
  %367 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %363, i64 -2
  %368 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %367, i64 -1
  %369 = bitcast %"class.sh::TVariable"** %368 to <2 x i64>*
  %370 = load <2 x i64>, <2 x i64>* %369, align 8, !alias.scope !13
  %371 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %362, i64 -1
  %372 = bitcast %"class.sh::TVariable"** %371 to <2 x i64>*
  store <2 x i64> %366, <2 x i64>* %372, align 8, !alias.scope !16, !noalias !13
  %373 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %362, i64 -2
  %374 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %373, i64 -1
  %375 = bitcast %"class.sh::TVariable"** %374 to <2 x i64>*
  store <2 x i64> %370, <2 x i64>* %375, align 8, !alias.scope !16, !noalias !13
  br label %376

376:                                              ; preds = %356, %359
  %377 = icmp eq i64 %284, %300
  br i1 %377, label %448, label %378

378:                                              ; preds = %376, %286, %279
  %379 = phi %"class.sh::TVariable"** [ %269, %286 ], [ %269, %279 ], [ %302, %376 ]
  %380 = phi %"class.sh::TVariable"** [ %277, %286 ], [ %277, %279 ], [ %304, %376 ]
  %381 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %380, i64 -1
  %382 = ptrtoint %"class.sh::TVariable"** %381 to i64
  %383 = sub i64 %382, %276
  %384 = lshr i64 %383, 3
  %385 = add nuw nsw i64 %384, 1
  %386 = and i64 %385, 7
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %399, label %388

388:                                              ; preds = %378, %388
  %389 = phi %"class.sh::TVariable"** [ %392, %388 ], [ %379, %378 ]
  %390 = phi %"class.sh::TVariable"** [ %393, %388 ], [ %380, %378 ]
  %391 = phi i64 [ %397, %388 ], [ %386, %378 ]
  %392 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %389, i64 -1
  %393 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %390, i64 -1
  %394 = bitcast %"class.sh::TVariable"** %393 to i64*
  %395 = load i64, i64* %394, align 8
  %396 = bitcast %"class.sh::TVariable"** %392 to i64*
  store i64 %395, i64* %396, align 8
  %397 = add i64 %391, -1
  %398 = icmp eq i64 %397, 0
  br i1 %398, label %399, label %388, !llvm.loop !19

399:                                              ; preds = %388, %378
  %400 = phi %"class.sh::TVariable"** [ undef, %378 ], [ %392, %388 ]
  %401 = phi %"class.sh::TVariable"** [ %379, %378 ], [ %392, %388 ]
  %402 = phi %"class.sh::TVariable"** [ %380, %378 ], [ %393, %388 ]
  %403 = icmp ult i64 %383, 56
  br i1 %403, label %448, label %404

404:                                              ; preds = %399, %404
  %405 = phi %"class.sh::TVariable"** [ %442, %404 ], [ %401, %399 ]
  %406 = phi %"class.sh::TVariable"** [ %443, %404 ], [ %402, %399 ]
  %407 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %405, i64 -1
  %408 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %406, i64 -1
  %409 = bitcast %"class.sh::TVariable"** %408 to i64*
  %410 = load i64, i64* %409, align 8
  %411 = bitcast %"class.sh::TVariable"** %407 to i64*
  store i64 %410, i64* %411, align 8
  %412 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %405, i64 -2
  %413 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %406, i64 -2
  %414 = bitcast %"class.sh::TVariable"** %413 to i64*
  %415 = load i64, i64* %414, align 8
  %416 = bitcast %"class.sh::TVariable"** %412 to i64*
  store i64 %415, i64* %416, align 8
  %417 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %405, i64 -3
  %418 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %406, i64 -3
  %419 = bitcast %"class.sh::TVariable"** %418 to i64*
  %420 = load i64, i64* %419, align 8
  %421 = bitcast %"class.sh::TVariable"** %417 to i64*
  store i64 %420, i64* %421, align 8
  %422 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %405, i64 -4
  %423 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %406, i64 -4
  %424 = bitcast %"class.sh::TVariable"** %423 to i64*
  %425 = load i64, i64* %424, align 8
  %426 = bitcast %"class.sh::TVariable"** %422 to i64*
  store i64 %425, i64* %426, align 8
  %427 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %405, i64 -5
  %428 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %406, i64 -5
  %429 = bitcast %"class.sh::TVariable"** %428 to i64*
  %430 = load i64, i64* %429, align 8
  %431 = bitcast %"class.sh::TVariable"** %427 to i64*
  store i64 %430, i64* %431, align 8
  %432 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %405, i64 -6
  %433 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %406, i64 -6
  %434 = bitcast %"class.sh::TVariable"** %433 to i64*
  %435 = load i64, i64* %434, align 8
  %436 = bitcast %"class.sh::TVariable"** %432 to i64*
  store i64 %435, i64* %436, align 8
  %437 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %405, i64 -7
  %438 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %406, i64 -7
  %439 = bitcast %"class.sh::TVariable"** %438 to i64*
  %440 = load i64, i64* %439, align 8
  %441 = bitcast %"class.sh::TVariable"** %437 to i64*
  store i64 %440, i64* %441, align 8
  %442 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %405, i64 -8
  %443 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %406, i64 -8
  %444 = bitcast %"class.sh::TVariable"** %443 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = bitcast %"class.sh::TVariable"** %442 to i64*
  store i64 %445, i64* %446, align 8
  %447 = icmp eq %"class.sh::TVariable"** %443, %275
  br i1 %447, label %448, label %404, !llvm.loop !20

448:                                              ; preds = %399, %404, %376, %266
  %449 = phi %"class.sh::TVariable"** [ %269, %266 ], [ %302, %376 ], [ %400, %399 ], [ %442, %404 ]
  %450 = ptrtoint %"class.sh::TVariable"** %449 to i64
  store i64 %450, i64* %242, align 8
  store i64 %274, i64* %241, align 8
  store i64 %271, i64* %251, align 8
  br label %451

451:                                              ; preds = %234, %448
  %452 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %5, align 8
  %453 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %452, i64 31
  %454 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %453, align 8
  %455 = tail call dereferenceable(184) %"class.sh::TType"* %454(%"class.sh::TIntermTyped"* %1) #12
  %456 = call %"class.sh::TFunction"* @_ZN2sh16EmulatePrecision19getInternalFunctionERKNS_15ImmutableStringERKNS_5TTypeEPNS_7TVectorIPNS_11TIntermNodeEEERKNS7_IPKNS_9TVariableEEEb(%"class.sh::EmulatePrecision"* %0, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %13, %"class.sh::TType"* dereferenceable(184) %455, %"class.sh::TVector"* nonnull %3, %"class.sh::TVector.76"* nonnull dereferenceable(24) %4, i1 zeroext true)
  %457 = call %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate21CreateRawFunctionCallERKNS_9TFunctionEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TFunction"* dereferenceable(80) %456, %"class.sh::TVector"* nonnull %3) #12
  %458 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %210, align 8
  %459 = icmp eq %"class.sh::TVariable"** %458, null
  br i1 %459, label %463, label %460

460:                                              ; preds = %451
  %461 = ptrtoint %"class.sh::TVariable"** %458 to i64
  %462 = bitcast %"class.sh::TVariable"*** %211 to i64*
  store i64 %461, i64* %462, align 8
  br label %463

463:                                              ; preds = %451, %460
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %209) #12
  %464 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %15, align 8
  %465 = icmp eq %"class.sh::TIntermNode"** %464, null
  br i1 %465, label %469, label %466

466:                                              ; preds = %463
  %467 = ptrtoint %"class.sh::TIntermNode"** %464 to i64
  %468 = bitcast %"class.sh::TIntermNode"*** %16 to i64*
  store i64 %467, i64* %468, align 8
  br label %469

469:                                              ; preds = %463, %466
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  ret %"class.sh::TIntermAggregate"* %457
}

declare void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermNode"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh16EmulatePrecision11visitBinaryENS_5VisitEPNS_13TIntermBinaryE(%"class.sh::EmulatePrecision"*, i32, %"class.sh::TIntermBinary"*) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.sh::EmulatePrecision::TypePair", align 8
  %5 = alloca %"struct.sh::EmulatePrecision::TypePair", align 8
  %6 = alloca %"struct.sh::EmulatePrecision::TypePair", align 8
  %7 = alloca %"struct.sh::EmulatePrecision::TypePair", align 8
  %8 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8
  %10 = icmp eq i8 %9, -117
  %11 = icmp eq i32 %1, 1
  %12 = and i1 %11, %10
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 7
  store i8 0, i8* %14, align 8
  br label %214

15:                                               ; preds = %3
  %16 = icmp eq i8 %9, 46
  %17 = and i1 %11, %16
  %18 = xor i1 %17, true
  %19 = icmp eq i32 %1, 0
  br i1 %19, label %20, label %214

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 0, i32 0
  %22 = bitcast %"class.sh::TIntermBinary"* %2 to %"class.sh::TType"* (%"class.sh::TIntermExpression"*)***
  %23 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)**, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %23, i64 31
  %25 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %24, align 8
  %26 = tail call dereferenceable(184) %"class.sh::TType"* %25(%"class.sh::TIntermExpression"* %21) #12
  %27 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %214

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %26, i64 0, i32 10, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %214

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %26, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = add i32 %36, -1
  %38 = icmp ult i32 %37, 2
  br i1 %38, label %39, label %214

39:                                               ; preds = %34
  switch i8 %9, label %214 [
    i8 -118, label %40
    i8 13, label %40
    i8 14, label %40
    i8 15, label %40
    i8 16, label %40
    i8 31, label %40
    i8 32, label %40
    i8 33, label %40
    i8 34, label %40
    i8 35, label %40
    i8 -116, label %130
    i8 -115, label %151
    i8 -114, label %172
    i8 -113, label %172
    i8 -112, label %172
    i8 -111, label %172
    i8 -110, label %172
    i8 -109, label %193
  ]

40:                                               ; preds = %39, %39, %39, %39, %39, %39, %39, %39, %39, %39
  %41 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 0, i32 11, i32 0
  %43 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 0, i32 11, i32 0, i32 0, i32 1
  %44 = bitcast %"class.sh::TIntermNode"*** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector.0"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = ashr exact i64 %48, 3
  %50 = icmp ult i64 %49, 2
  br i1 %50, label %214, label %51

51:                                               ; preds = %40
  %52 = inttoptr i64 %47 to %"class.sh::TIntermNode"**
  %53 = add nsw i64 %49, -2
  %54 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %52, i64 %53
  %55 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %54, align 8
  %56 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 0, i32 0, i32 0
  %57 = icmp eq %"class.sh::TIntermNode"* %55, null
  br i1 %57, label %214, label %58

58:                                               ; preds = %51
  %59 = bitcast %"class.sh::TIntermNode"* %55 to %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)***
  %60 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*** %59, align 8
  %61 = getelementptr inbounds %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %60, i64 8
  %62 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %61, align 8
  %63 = tail call %"class.sh::TIntermBlock"* %62(%"class.sh::TIntermNode"* nonnull %55) #12
  %64 = icmp eq %"class.sh::TIntermBlock"* %63, null
  br i1 %64, label %65, label %214

65:                                               ; preds = %58
  %66 = bitcast %"class.sh::TIntermNode"* %55 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %67 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %66, align 8
  %68 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %67, i64 13
  %69 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %68, align 8
  %70 = tail call %"class.sh::TIntermBinary"* %69(%"class.sh::TIntermNode"* nonnull %55) #12
  %71 = icmp eq %"class.sh::TIntermBinary"* %70, null
  br i1 %71, label %80, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %70, i64 0, i32 0, i32 1
  %74 = load i8, i8* %73, align 8
  %75 = icmp eq i8 %74, 30
  br i1 %75, label %76, label %80

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %70, i64 0, i32 3
  %78 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %77, align 8
  %79 = icmp eq %"class.sh::TIntermTyped"* %78, %56
  br i1 %79, label %80, label %214

80:                                               ; preds = %65, %72, %76
  %81 = bitcast %"class.sh::TIntermNode"* %55 to %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)***
  %82 = load %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)*** %81, align 8
  %83 = getelementptr inbounds %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)** %82, i64 7
  %84 = load %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)** %83, align 8
  %85 = tail call %"class.sh::TIntermAggregate"* %84(%"class.sh::TIntermNode"* nonnull %55) #12
  %86 = icmp eq %"class.sh::TIntermAggregate"* %85, null
  br i1 %86, label %127, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %85, i64 0, i32 0, i32 1
  %89 = load i8, i8* %88, align 8
  %90 = icmp eq i8 %89, -119
  br i1 %90, label %91, label %127

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %85, i64 0, i32 0, i32 0, i32 0
  %93 = bitcast %"class.sh::TIntermAggregate"* %85 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %94 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %93, align 8
  %95 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %94, i64 31
  %96 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %95, align 8
  %97 = tail call dereferenceable(184) %"class.sh::TType"* %96(%"class.sh::TIntermTyped"* %92) #12
  %98 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %97, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = bitcast %"class.sh::TIntermBinary"* %2 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %101 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %100, align 8
  %102 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %101, i64 31
  %103 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %102, align 8
  %104 = tail call dereferenceable(184) %"class.sh::TType"* %103(%"class.sh::TIntermTyped"* %56) #12
  %105 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %104, i64 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %99, %106
  br i1 %107, label %108, label %127

108:                                              ; preds = %91
  %109 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %85, i64 0, i32 0, i32 0
  %110 = bitcast %"class.sh::TIntermAggregate"* %85 to %"class.sh::TType"* (%"class.sh::TIntermExpression"*)***
  %111 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)**, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*** %110, align 8
  %112 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %111, i64 31
  %113 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %112, align 8
  %114 = tail call dereferenceable(184) %"class.sh::TType"* %113(%"class.sh::TIntermExpression"* %109) #12
  %115 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %114, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %118, label %127

118:                                              ; preds = %108
  %119 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %114, i64 0, i32 10, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %127

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %114, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = add i32 %124, -1
  %126 = icmp ult i32 %125, 2
  br i1 %126, label %214, label %127

127:                                              ; preds = %108, %118, %91, %80, %87, %122
  %128 = tail call %"class.sh::TIntermAggregate"* @_ZN2sh16EmulatePrecision30createRoundingFunctionCallNodeEPNS_12TIntermTypedE(%"class.sh::EmulatePrecision"* %0, %"class.sh::TIntermTyped"* %56)
  %129 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"* %41, %"class.sh::TIntermNode"* %129, i32 0) #12
  br label %214

130:                                              ; preds = %39
  %131 = bitcast %"struct.sh::EmulatePrecision::TypePair"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %131) #12
  %132 = tail call i8* @_ZNK2sh5TType24getBuiltInTypeNameStringEv(%"class.sh::TType"* %26) #12
  %133 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 3
  %134 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %133, align 8
  %135 = bitcast %"class.sh::TIntermTyped"* %134 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %136 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %135, align 8
  %137 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %136, i64 31
  %138 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %137, align 8
  %139 = tail call dereferenceable(184) %"class.sh::TType"* %138(%"class.sh::TIntermTyped"* %134) #12
  %140 = tail call i8* @_ZNK2sh5TType24getBuiltInTypeNameStringEv(%"class.sh::TType"* %139) #12
  %141 = getelementptr inbounds %"struct.sh::EmulatePrecision::TypePair", %"struct.sh::EmulatePrecision::TypePair"* %4, i64 0, i32 0
  store i8* %132, i8** %141, align 8
  %142 = getelementptr inbounds %"struct.sh::EmulatePrecision::TypePair", %"struct.sh::EmulatePrecision::TypePair"* %4, i64 0, i32 1
  store i8* %140, i8** %142, align 8
  %143 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 2, i32 0
  %144 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN2sh16EmulatePrecision8TypePairENS2_18TypePairComparatorENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.58"* %143, %"struct.sh::EmulatePrecision::TypePair"* nonnull dereferenceable(16) %4, %"struct.sh::EmulatePrecision::TypePair"* nonnull dereferenceable(16) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %131) #12
  %145 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 2
  %146 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %145, align 8
  %147 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %133, align 8
  %148 = call %"class.sh::TIntermAggregate"* @_ZN2sh16EmulatePrecision40createCompoundAssignmentFunctionCallNodeEPNS_12TIntermTypedES2_PKc(%"class.sh::EmulatePrecision"* %0, %"class.sh::TIntermTyped"* %146, %"class.sh::TIntermTyped"* %147, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0))
  %149 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %148, i64 0, i32 0, i32 0, i32 0, i32 0
  %150 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 0
  call void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"* %150, %"class.sh::TIntermNode"* %149, i32 1) #12
  br label %214

151:                                              ; preds = %39
  %152 = bitcast %"struct.sh::EmulatePrecision::TypePair"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %152) #12
  %153 = tail call i8* @_ZNK2sh5TType24getBuiltInTypeNameStringEv(%"class.sh::TType"* %26) #12
  %154 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 3
  %155 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %154, align 8
  %156 = bitcast %"class.sh::TIntermTyped"* %155 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %157 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %156, align 8
  %158 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %157, i64 31
  %159 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %158, align 8
  %160 = tail call dereferenceable(184) %"class.sh::TType"* %159(%"class.sh::TIntermTyped"* %155) #12
  %161 = tail call i8* @_ZNK2sh5TType24getBuiltInTypeNameStringEv(%"class.sh::TType"* %160) #12
  %162 = getelementptr inbounds %"struct.sh::EmulatePrecision::TypePair", %"struct.sh::EmulatePrecision::TypePair"* %5, i64 0, i32 0
  store i8* %153, i8** %162, align 8
  %163 = getelementptr inbounds %"struct.sh::EmulatePrecision::TypePair", %"struct.sh::EmulatePrecision::TypePair"* %5, i64 0, i32 1
  store i8* %161, i8** %163, align 8
  %164 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 3, i32 0
  %165 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN2sh16EmulatePrecision8TypePairENS2_18TypePairComparatorENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.58"* %164, %"struct.sh::EmulatePrecision::TypePair"* nonnull dereferenceable(16) %5, %"struct.sh::EmulatePrecision::TypePair"* nonnull dereferenceable(16) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %152) #12
  %166 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 2
  %167 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %166, align 8
  %168 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %154, align 8
  %169 = call %"class.sh::TIntermAggregate"* @_ZN2sh16EmulatePrecision40createCompoundAssignmentFunctionCallNodeEPNS_12TIntermTypedES2_PKc(%"class.sh::EmulatePrecision"* %0, %"class.sh::TIntermTyped"* %167, %"class.sh::TIntermTyped"* %168, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  %170 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %169, i64 0, i32 0, i32 0, i32 0, i32 0
  %171 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 0
  call void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"* %171, %"class.sh::TIntermNode"* %170, i32 1) #12
  br label %214

172:                                              ; preds = %39, %39, %39, %39, %39
  %173 = bitcast %"struct.sh::EmulatePrecision::TypePair"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %173) #12
  %174 = tail call i8* @_ZNK2sh5TType24getBuiltInTypeNameStringEv(%"class.sh::TType"* %26) #12
  %175 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 3
  %176 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %175, align 8
  %177 = bitcast %"class.sh::TIntermTyped"* %176 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %178 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %177, align 8
  %179 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %178, i64 31
  %180 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %179, align 8
  %181 = tail call dereferenceable(184) %"class.sh::TType"* %180(%"class.sh::TIntermTyped"* %176) #12
  %182 = tail call i8* @_ZNK2sh5TType24getBuiltInTypeNameStringEv(%"class.sh::TType"* %181) #12
  %183 = getelementptr inbounds %"struct.sh::EmulatePrecision::TypePair", %"struct.sh::EmulatePrecision::TypePair"* %6, i64 0, i32 0
  store i8* %174, i8** %183, align 8
  %184 = getelementptr inbounds %"struct.sh::EmulatePrecision::TypePair", %"struct.sh::EmulatePrecision::TypePair"* %6, i64 0, i32 1
  store i8* %182, i8** %184, align 8
  %185 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 4, i32 0
  %186 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN2sh16EmulatePrecision8TypePairENS2_18TypePairComparatorENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.58"* %185, %"struct.sh::EmulatePrecision::TypePair"* nonnull dereferenceable(16) %6, %"struct.sh::EmulatePrecision::TypePair"* nonnull dereferenceable(16) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %173) #12
  %187 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 2
  %188 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %187, align 8
  %189 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %175, align 8
  %190 = call %"class.sh::TIntermAggregate"* @_ZN2sh16EmulatePrecision40createCompoundAssignmentFunctionCallNodeEPNS_12TIntermTypedES2_PKc(%"class.sh::EmulatePrecision"* %0, %"class.sh::TIntermTyped"* %188, %"class.sh::TIntermTyped"* %189, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  %191 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %190, i64 0, i32 0, i32 0, i32 0, i32 0
  %192 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 0
  call void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"* %192, %"class.sh::TIntermNode"* %191, i32 1) #12
  br label %214

193:                                              ; preds = %39
  %194 = bitcast %"struct.sh::EmulatePrecision::TypePair"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %194) #12
  %195 = tail call i8* @_ZNK2sh5TType24getBuiltInTypeNameStringEv(%"class.sh::TType"* %26) #12
  %196 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 3
  %197 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %196, align 8
  %198 = bitcast %"class.sh::TIntermTyped"* %197 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %199 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %198, align 8
  %200 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %199, i64 31
  %201 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %200, align 8
  %202 = tail call dereferenceable(184) %"class.sh::TType"* %201(%"class.sh::TIntermTyped"* %197) #12
  %203 = tail call i8* @_ZNK2sh5TType24getBuiltInTypeNameStringEv(%"class.sh::TType"* %202) #12
  %204 = getelementptr inbounds %"struct.sh::EmulatePrecision::TypePair", %"struct.sh::EmulatePrecision::TypePair"* %7, i64 0, i32 0
  store i8* %195, i8** %204, align 8
  %205 = getelementptr inbounds %"struct.sh::EmulatePrecision::TypePair", %"struct.sh::EmulatePrecision::TypePair"* %7, i64 0, i32 1
  store i8* %203, i8** %205, align 8
  %206 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 5, i32 0
  %207 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN2sh16EmulatePrecision8TypePairENS2_18TypePairComparatorENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.58"* %206, %"struct.sh::EmulatePrecision::TypePair"* nonnull dereferenceable(16) %7, %"struct.sh::EmulatePrecision::TypePair"* nonnull dereferenceable(16) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %194) #12
  %208 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 2
  %209 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %208, align 8
  %210 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %196, align 8
  %211 = call %"class.sh::TIntermAggregate"* @_ZN2sh16EmulatePrecision40createCompoundAssignmentFunctionCallNodeEPNS_12TIntermTypedES2_PKc(%"class.sh::EmulatePrecision"* %0, %"class.sh::TIntermTyped"* %209, %"class.sh::TIntermTyped"* %210, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0))
  %212 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %211, i64 0, i32 0, i32 0, i32 0, i32 0
  %213 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 0
  call void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"* %213, %"class.sh::TIntermNode"* %212, i32 1) #12
  br label %214

214:                                              ; preds = %40, %76, %58, %51, %20, %30, %13, %34, %39, %193, %172, %151, %130, %122, %127, %15
  %215 = phi i1 [ true, %13 ], [ %18, %34 ], [ %18, %39 ], [ %18, %193 ], [ %18, %172 ], [ %18, %151 ], [ %18, %130 ], [ %18, %122 ], [ %18, %127 ], [ %18, %15 ], [ %18, %30 ], [ %18, %20 ], [ %18, %51 ], [ %18, %58 ], [ %18, %76 ], [ %18, %40 ]
  ret i1 %215
}

declare i8* @_ZNK2sh5TType24getBuiltInTypeNameStringEv(%"class.sh::TType"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermAggregate"* @_ZN2sh16EmulatePrecision40createCompoundAssignmentFunctionCallNodeEPNS_12TIntermTypedES2_PKc(%"class.sh::EmulatePrecision"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, i8*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_stringstream", align 8
  %6 = alloca %"class.sh::ImmutableString", align 8
  %7 = alloca %"class.std::__1::basic_string.84", align 8
  %8 = alloca %"class.sh::TVector", align 8
  %9 = alloca %"class.sh::TVector.76", align 8
  %10 = bitcast %"class.std::__1::basic_stringstream"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %10) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 280, i1 false)
  call void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* nonnull sret %5)
  %11 = bitcast %"class.sh::TIntermTyped"* %1 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %12 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %12, i64 31
  %14 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %13, align 8
  %15 = call dereferenceable(184) %"class.sh::TType"* %14(%"class.sh::TIntermTyped"* %1) #12
  %16 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %15, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 2
  %19 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::basic_ostream.base"* %19 to %"class.std::__1::basic_ostream"*
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i64 15) #12
  %22 = call i64 @strlen(i8* %3) #12
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %21, i8* %3, i64 %22) #12
  %24 = select i1 %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %23, i8* %24, i64 4) #12
  %26 = bitcast %"class.sh::ImmutableString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %6, i64 0, i32 0
  %28 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %6, i64 0, i32 1
  %29 = bitcast %"class.std::__1::basic_string.84"* %7 to i8*
  %30 = bitcast %"class.sh::ImmutableString"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #12
  %31 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.84"* nonnull sret %7, %"class.std::__1::basic_stringbuf"* %31) #12
  %32 = bitcast %"class.std::__1::basic_string.84"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %34 to i64
  %41 = select i1 %35, i8* %37, i8* %29
  %42 = select i1 %35, i64 %39, i64 %40
  %43 = add i64 %42, 1
  %44 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #12
  %45 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %44, i64 %43) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* align 1 %41, i64 %43, i1 false) #12
  store i8* %45, i8** %27, align 8
  %46 = load i8, i8* %33, align 1
  %47 = icmp slt i8 %46, 0
  %48 = load i64, i64* %38, align 8
  %49 = zext i8 %46 to i64
  %50 = select i1 %47, i64 %48, i64 %49
  store i64 %50, i64* %28, align 8
  br i1 %47, label %51, label %53

51:                                               ; preds = %4
  %52 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %52) #14
  br label %53

53:                                               ; preds = %51, %4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  %54 = bitcast %"class.sh::TVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #12
  %55 = getelementptr inbounds %"class.sh::TVector", %"class.sh::TVector"* %8, i64 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.sh::TVector", %"class.sh::TVector"* %8, i64 0, i32 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.sh::TVector", %"class.sh::TVector"* %8, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 24, i1 false) #12
  %58 = ptrtoint %"class.sh::TIntermTyped"* %1 to i64
  %59 = bitcast %"class.sh::TIntermNode"*** %56 to i64*
  %60 = bitcast %"class.sh::TVector"* %8 to i64*
  %61 = bitcast %"class.sh::TIntermNode"*** %57 to i64*
  %62 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #12
  %63 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %62, i64 8) #12
  %64 = bitcast i8* %63 to %"class.sh::TIntermNode"**
  %65 = getelementptr inbounds i8, i8* %63, i64 8
  %66 = ptrtoint i8* %65 to i64
  %67 = bitcast i8* %63 to i64*
  store i64 %58, i64* %67, align 8
  %68 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %55, align 8
  %69 = ptrtoint %"class.sh::TIntermNode"** %68 to i64
  %70 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %56, align 8
  %71 = bitcast %"class.sh::TIntermNode"** %70 to i8*
  %72 = icmp eq %"class.sh::TIntermNode"** %70, %68
  br i1 %72, label %246, label %73

73:                                               ; preds = %53
  %74 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %70, i64 -1
  %75 = ptrtoint %"class.sh::TIntermNode"** %74 to i64
  %76 = sub i64 %75, %69
  %77 = lshr i64 %76, 3
  %78 = add nuw nsw i64 %77, 1
  %79 = icmp ult i64 %78, 4
  br i1 %79, label %176, label %80

80:                                               ; preds = %73
  %81 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %70, i64 -1
  %82 = ptrtoint %"class.sh::TIntermNode"** %81 to i64
  %83 = sub i64 %82, %69
  %84 = lshr i64 %83, 3
  %85 = and i64 %83, -8
  %86 = xor i64 %85, -8
  %87 = getelementptr i8, i8* %63, i64 %86
  %88 = xor i64 %84, -1
  %89 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %70, i64 %88
  %90 = bitcast %"class.sh::TIntermNode"** %89 to i8*
  %91 = icmp ult i8* %87, %71
  %92 = icmp ugt i8* %63, %90
  %93 = and i1 %91, %92
  br i1 %93, label %176, label %94

94:                                               ; preds = %80
  %95 = and i64 %78, 4611686018427387900
  %96 = sub nsw i64 0, %95
  %97 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %64, i64 %96
  %98 = sub nsw i64 0, %95
  %99 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %70, i64 %98
  %100 = add nsw i64 %95, -4
  %101 = lshr exact i64 %100, 2
  %102 = add nuw nsw i64 %101, 1
  %103 = and i64 %102, 1
  %104 = icmp eq i64 %100, 0
  br i1 %104, label %151, label %105

105:                                              ; preds = %94
  %106 = sub nuw nsw i64 %102, %103
  %107 = getelementptr i8, i8* %63, i64 -8
  %108 = bitcast i8* %107 to %"class.sh::TIntermNode"**
  %109 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %70, i64 -1
  %110 = getelementptr i8, i8* %63, i64 -8
  %111 = bitcast i8* %110 to %"class.sh::TIntermNode"**
  %112 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %70, i64 -1
  br label %113

113:                                              ; preds = %113, %105
  %114 = phi i64 [ 0, %105 ], [ %148, %113 ]
  %115 = phi i64 [ %106, %105 ], [ %149, %113 ]
  %116 = sub i64 0, %114
  %117 = sub i64 0, %114
  %118 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %108, i64 %116
  %119 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %109, i64 %117
  %120 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %119, i64 -1
  %121 = bitcast %"class.sh::TIntermNode"** %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !21
  %123 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %119, i64 -2
  %124 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %123, i64 -1
  %125 = bitcast %"class.sh::TIntermNode"** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !21
  %127 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %118, i64 -1
  %128 = bitcast %"class.sh::TIntermNode"** %127 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %128, align 8, !alias.scope !24, !noalias !21
  %129 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %118, i64 -2
  %130 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %129, i64 -1
  %131 = bitcast %"class.sh::TIntermNode"** %130 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %131, align 8, !alias.scope !24, !noalias !21
  %132 = sub nuw nsw i64 -4, %114
  %133 = sub nuw nsw i64 -4, %114
  %134 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %111, i64 %132
  %135 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %112, i64 %133
  %136 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %135, i64 -1
  %137 = bitcast %"class.sh::TIntermNode"** %136 to <2 x i64>*
  %138 = load <2 x i64>, <2 x i64>* %137, align 8, !alias.scope !21
  %139 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %135, i64 -2
  %140 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %139, i64 -1
  %141 = bitcast %"class.sh::TIntermNode"** %140 to <2 x i64>*
  %142 = load <2 x i64>, <2 x i64>* %141, align 8, !alias.scope !21
  %143 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %134, i64 -1
  %144 = bitcast %"class.sh::TIntermNode"** %143 to <2 x i64>*
  store <2 x i64> %138, <2 x i64>* %144, align 8, !alias.scope !24, !noalias !21
  %145 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %134, i64 -2
  %146 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %145, i64 -1
  %147 = bitcast %"class.sh::TIntermNode"** %146 to <2 x i64>*
  store <2 x i64> %142, <2 x i64>* %147, align 8, !alias.scope !24, !noalias !21
  %148 = add i64 %114, 8
  %149 = add i64 %115, -2
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %113, !llvm.loop !26

151:                                              ; preds = %113, %94
  %152 = phi i64 [ 0, %94 ], [ %148, %113 ]
  %153 = icmp eq i64 %103, 0
  br i1 %153, label %174, label %154

154:                                              ; preds = %151
  %155 = sub i64 0, %152
  %156 = getelementptr i8, i8* %63, i64 -8
  %157 = bitcast i8* %156 to %"class.sh::TIntermNode"**
  %158 = sub i64 0, %152
  %159 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %70, i64 -1
  %160 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %157, i64 %155
  %161 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %159, i64 %158
  %162 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %161, i64 -1
  %163 = bitcast %"class.sh::TIntermNode"** %162 to <2 x i64>*
  %164 = load <2 x i64>, <2 x i64>* %163, align 8, !alias.scope !21
  %165 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %161, i64 -2
  %166 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %165, i64 -1
  %167 = bitcast %"class.sh::TIntermNode"** %166 to <2 x i64>*
  %168 = load <2 x i64>, <2 x i64>* %167, align 8, !alias.scope !21
  %169 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %160, i64 -1
  %170 = bitcast %"class.sh::TIntermNode"** %169 to <2 x i64>*
  store <2 x i64> %164, <2 x i64>* %170, align 8, !alias.scope !24, !noalias !21
  %171 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %160, i64 -2
  %172 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %171, i64 -1
  %173 = bitcast %"class.sh::TIntermNode"** %172 to <2 x i64>*
  store <2 x i64> %168, <2 x i64>* %173, align 8, !alias.scope !24, !noalias !21
  br label %174

174:                                              ; preds = %151, %154
  %175 = icmp eq i64 %78, %95
  br i1 %175, label %246, label %176

176:                                              ; preds = %174, %80, %73
  %177 = phi %"class.sh::TIntermNode"** [ %64, %80 ], [ %64, %73 ], [ %97, %174 ]
  %178 = phi %"class.sh::TIntermNode"** [ %70, %80 ], [ %70, %73 ], [ %99, %174 ]
  %179 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %178, i64 -1
  %180 = ptrtoint %"class.sh::TIntermNode"** %179 to i64
  %181 = sub i64 %180, %69
  %182 = lshr i64 %181, 3
  %183 = add nuw nsw i64 %182, 1
  %184 = and i64 %183, 7
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %197, label %186

186:                                              ; preds = %176, %186
  %187 = phi %"class.sh::TIntermNode"** [ %190, %186 ], [ %177, %176 ]
  %188 = phi %"class.sh::TIntermNode"** [ %191, %186 ], [ %178, %176 ]
  %189 = phi i64 [ %195, %186 ], [ %184, %176 ]
  %190 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %187, i64 -1
  %191 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %188, i64 -1
  %192 = bitcast %"class.sh::TIntermNode"** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = bitcast %"class.sh::TIntermNode"** %190 to i64*
  store i64 %193, i64* %194, align 8
  %195 = add i64 %189, -1
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %197, label %186, !llvm.loop !27

197:                                              ; preds = %186, %176
  %198 = phi %"class.sh::TIntermNode"** [ undef, %176 ], [ %190, %186 ]
  %199 = phi %"class.sh::TIntermNode"** [ %177, %176 ], [ %190, %186 ]
  %200 = phi %"class.sh::TIntermNode"** [ %178, %176 ], [ %191, %186 ]
  %201 = icmp ult i64 %181, 56
  br i1 %201, label %246, label %202

202:                                              ; preds = %197, %202
  %203 = phi %"class.sh::TIntermNode"** [ %240, %202 ], [ %199, %197 ]
  %204 = phi %"class.sh::TIntermNode"** [ %241, %202 ], [ %200, %197 ]
  %205 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %203, i64 -1
  %206 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %204, i64 -1
  %207 = bitcast %"class.sh::TIntermNode"** %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = bitcast %"class.sh::TIntermNode"** %205 to i64*
  store i64 %208, i64* %209, align 8
  %210 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %203, i64 -2
  %211 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %204, i64 -2
  %212 = bitcast %"class.sh::TIntermNode"** %211 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = bitcast %"class.sh::TIntermNode"** %210 to i64*
  store i64 %213, i64* %214, align 8
  %215 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %203, i64 -3
  %216 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %204, i64 -3
  %217 = bitcast %"class.sh::TIntermNode"** %216 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = bitcast %"class.sh::TIntermNode"** %215 to i64*
  store i64 %218, i64* %219, align 8
  %220 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %203, i64 -4
  %221 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %204, i64 -4
  %222 = bitcast %"class.sh::TIntermNode"** %221 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = bitcast %"class.sh::TIntermNode"** %220 to i64*
  store i64 %223, i64* %224, align 8
  %225 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %203, i64 -5
  %226 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %204, i64 -5
  %227 = bitcast %"class.sh::TIntermNode"** %226 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = bitcast %"class.sh::TIntermNode"** %225 to i64*
  store i64 %228, i64* %229, align 8
  %230 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %203, i64 -6
  %231 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %204, i64 -6
  %232 = bitcast %"class.sh::TIntermNode"** %231 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = bitcast %"class.sh::TIntermNode"** %230 to i64*
  store i64 %233, i64* %234, align 8
  %235 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %203, i64 -7
  %236 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %204, i64 -7
  %237 = bitcast %"class.sh::TIntermNode"** %236 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = bitcast %"class.sh::TIntermNode"** %235 to i64*
  store i64 %238, i64* %239, align 8
  %240 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %203, i64 -8
  %241 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %204, i64 -8
  %242 = bitcast %"class.sh::TIntermNode"** %241 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = bitcast %"class.sh::TIntermNode"** %240 to i64*
  store i64 %243, i64* %244, align 8
  %245 = icmp eq %"class.sh::TIntermNode"** %241, %68
  br i1 %245, label %246, label %202, !llvm.loop !28

246:                                              ; preds = %197, %202, %174, %53
  %247 = phi %"class.sh::TIntermNode"** [ %64, %53 ], [ %97, %174 ], [ %198, %197 ], [ %240, %202 ]
  %248 = ptrtoint %"class.sh::TIntermNode"** %247 to i64
  store i64 %248, i64* %60, align 8
  store i64 %66, i64* %59, align 8
  store i64 %66, i64* %61, align 8
  %249 = ptrtoint %"class.sh::TIntermTyped"* %2 to i64
  %250 = ptrtoint i8* %65 to i64
  %251 = bitcast %"class.sh::TIntermNode"*** %56 to i64*
  %252 = bitcast %"class.sh::TVector"* %8 to i64*
  %253 = sub i64 %250, %248
  %254 = ashr exact i64 %253, 3
  %255 = add nsw i64 %254, 1
  %256 = icmp ugt i64 %255, 2305843009213693951
  br i1 %256, label %257, label %259

257:                                              ; preds = %246
  %258 = bitcast %"class.sh::TVector"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %258) #13
  unreachable

259:                                              ; preds = %246
  %260 = ptrtoint i8* %65 to i64
  %261 = bitcast %"class.sh::TIntermNode"*** %57 to i64*
  %262 = sub i64 %260, %248
  %263 = ashr exact i64 %262, 3
  %264 = icmp ult i64 %263, 1152921504606846975
  br i1 %264, label %265, label %270

265:                                              ; preds = %259
  %266 = ashr exact i64 %262, 2
  %267 = icmp ult i64 %266, %255
  %268 = select i1 %267, i64 %255, i64 %266
  %269 = icmp eq i64 %268, 0
  br i1 %269, label %276, label %270

270:                                              ; preds = %265, %259
  %271 = phi i64 [ %268, %265 ], [ 2305843009213693951, %259 ]
  %272 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #12
  %273 = shl i64 %271, 3
  %274 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %272, i64 %273) #12
  %275 = bitcast i8* %274 to %"class.sh::TIntermNode"**
  br label %276

276:                                              ; preds = %270, %265
  %277 = phi i64 [ %271, %270 ], [ 0, %265 ]
  %278 = phi %"class.sh::TIntermNode"** [ %275, %270 ], [ null, %265 ]
  %279 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %278, i64 %254
  %280 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %278, i64 %277
  %281 = ptrtoint %"class.sh::TIntermNode"** %280 to i64
  %282 = bitcast %"class.sh::TIntermNode"** %279 to i64*
  store i64 %249, i64* %282, align 8
  %283 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %279, i64 1
  %284 = ptrtoint %"class.sh::TIntermNode"** %283 to i64
  %285 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %55, align 8
  %286 = ptrtoint %"class.sh::TIntermNode"** %285 to i64
  %287 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %56, align 8
  %288 = icmp eq %"class.sh::TIntermNode"** %287, %285
  br i1 %288, label %458, label %289

289:                                              ; preds = %276
  %290 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %287, i64 -1
  %291 = ptrtoint %"class.sh::TIntermNode"** %290 to i64
  %292 = sub i64 %291, %286
  %293 = lshr i64 %292, 3
  %294 = add nuw nsw i64 %293, 1
  %295 = icmp ult i64 %294, 4
  br i1 %295, label %388, label %296

296:                                              ; preds = %289
  %297 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %287, i64 -1
  %298 = ptrtoint %"class.sh::TIntermNode"** %297 to i64
  %299 = sub i64 %298, %286
  %300 = lshr i64 %299, 3
  %301 = xor i64 %300, -1
  %302 = add nsw i64 %254, %301
  %303 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %278, i64 %302
  %304 = xor i64 %300, -1
  %305 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %287, i64 %304
  %306 = icmp ult %"class.sh::TIntermNode"** %303, %287
  %307 = icmp ult %"class.sh::TIntermNode"** %305, %279
  %308 = and i1 %306, %307
  br i1 %308, label %388, label %309

309:                                              ; preds = %296
  %310 = and i64 %294, 4611686018427387900
  %311 = sub nsw i64 0, %310
  %312 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %279, i64 %311
  %313 = sub nsw i64 0, %310
  %314 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %287, i64 %313
  %315 = add nsw i64 %310, -4
  %316 = lshr exact i64 %315, 2
  %317 = add nuw nsw i64 %316, 1
  %318 = and i64 %317, 1
  %319 = icmp eq i64 %315, 0
  br i1 %319, label %364, label %320

320:                                              ; preds = %309
  %321 = sub nuw nsw i64 %317, %318
  %322 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %279, i64 -1
  %323 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %287, i64 -1
  %324 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %279, i64 -1
  %325 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %287, i64 -1
  br label %326

326:                                              ; preds = %326, %320
  %327 = phi i64 [ 0, %320 ], [ %361, %326 ]
  %328 = phi i64 [ %321, %320 ], [ %362, %326 ]
  %329 = sub i64 0, %327
  %330 = sub i64 0, %327
  %331 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %322, i64 %329
  %332 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %323, i64 %330
  %333 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %332, i64 -1
  %334 = bitcast %"class.sh::TIntermNode"** %333 to <2 x i64>*
  %335 = load <2 x i64>, <2 x i64>* %334, align 8, !alias.scope !29
  %336 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %332, i64 -2
  %337 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %336, i64 -1
  %338 = bitcast %"class.sh::TIntermNode"** %337 to <2 x i64>*
  %339 = load <2 x i64>, <2 x i64>* %338, align 8, !alias.scope !29
  %340 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %331, i64 -1
  %341 = bitcast %"class.sh::TIntermNode"** %340 to <2 x i64>*
  store <2 x i64> %335, <2 x i64>* %341, align 8, !alias.scope !32, !noalias !29
  %342 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %331, i64 -2
  %343 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %342, i64 -1
  %344 = bitcast %"class.sh::TIntermNode"** %343 to <2 x i64>*
  store <2 x i64> %339, <2 x i64>* %344, align 8, !alias.scope !32, !noalias !29
  %345 = sub nuw nsw i64 -4, %327
  %346 = sub nuw nsw i64 -4, %327
  %347 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %324, i64 %345
  %348 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %325, i64 %346
  %349 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %348, i64 -1
  %350 = bitcast %"class.sh::TIntermNode"** %349 to <2 x i64>*
  %351 = load <2 x i64>, <2 x i64>* %350, align 8, !alias.scope !29
  %352 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %348, i64 -2
  %353 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %352, i64 -1
  %354 = bitcast %"class.sh::TIntermNode"** %353 to <2 x i64>*
  %355 = load <2 x i64>, <2 x i64>* %354, align 8, !alias.scope !29
  %356 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %347, i64 -1
  %357 = bitcast %"class.sh::TIntermNode"** %356 to <2 x i64>*
  store <2 x i64> %351, <2 x i64>* %357, align 8, !alias.scope !32, !noalias !29
  %358 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %347, i64 -2
  %359 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %358, i64 -1
  %360 = bitcast %"class.sh::TIntermNode"** %359 to <2 x i64>*
  store <2 x i64> %355, <2 x i64>* %360, align 8, !alias.scope !32, !noalias !29
  %361 = add i64 %327, 8
  %362 = add i64 %328, -2
  %363 = icmp eq i64 %362, 0
  br i1 %363, label %364, label %326, !llvm.loop !34

364:                                              ; preds = %326, %309
  %365 = phi i64 [ 0, %309 ], [ %361, %326 ]
  %366 = icmp eq i64 %318, 0
  br i1 %366, label %386, label %367

367:                                              ; preds = %364
  %368 = sub i64 0, %365
  %369 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %279, i64 -1
  %370 = sub i64 0, %365
  %371 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %287, i64 -1
  %372 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %369, i64 %368
  %373 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %371, i64 %370
  %374 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %373, i64 -1
  %375 = bitcast %"class.sh::TIntermNode"** %374 to <2 x i64>*
  %376 = load <2 x i64>, <2 x i64>* %375, align 8, !alias.scope !29
  %377 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %373, i64 -2
  %378 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %377, i64 -1
  %379 = bitcast %"class.sh::TIntermNode"** %378 to <2 x i64>*
  %380 = load <2 x i64>, <2 x i64>* %379, align 8, !alias.scope !29
  %381 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %372, i64 -1
  %382 = bitcast %"class.sh::TIntermNode"** %381 to <2 x i64>*
  store <2 x i64> %376, <2 x i64>* %382, align 8, !alias.scope !32, !noalias !29
  %383 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %372, i64 -2
  %384 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %383, i64 -1
  %385 = bitcast %"class.sh::TIntermNode"** %384 to <2 x i64>*
  store <2 x i64> %380, <2 x i64>* %385, align 8, !alias.scope !32, !noalias !29
  br label %386

386:                                              ; preds = %364, %367
  %387 = icmp eq i64 %294, %310
  br i1 %387, label %458, label %388

388:                                              ; preds = %386, %296, %289
  %389 = phi %"class.sh::TIntermNode"** [ %279, %296 ], [ %279, %289 ], [ %312, %386 ]
  %390 = phi %"class.sh::TIntermNode"** [ %287, %296 ], [ %287, %289 ], [ %314, %386 ]
  %391 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %390, i64 -1
  %392 = ptrtoint %"class.sh::TIntermNode"** %391 to i64
  %393 = sub i64 %392, %286
  %394 = lshr i64 %393, 3
  %395 = add nuw nsw i64 %394, 1
  %396 = and i64 %395, 7
  %397 = icmp eq i64 %396, 0
  br i1 %397, label %409, label %398

398:                                              ; preds = %388, %398
  %399 = phi %"class.sh::TIntermNode"** [ %402, %398 ], [ %389, %388 ]
  %400 = phi %"class.sh::TIntermNode"** [ %403, %398 ], [ %390, %388 ]
  %401 = phi i64 [ %407, %398 ], [ %396, %388 ]
  %402 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %399, i64 -1
  %403 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %400, i64 -1
  %404 = bitcast %"class.sh::TIntermNode"** %403 to i64*
  %405 = load i64, i64* %404, align 8
  %406 = bitcast %"class.sh::TIntermNode"** %402 to i64*
  store i64 %405, i64* %406, align 8
  %407 = add i64 %401, -1
  %408 = icmp eq i64 %407, 0
  br i1 %408, label %409, label %398, !llvm.loop !35

409:                                              ; preds = %398, %388
  %410 = phi %"class.sh::TIntermNode"** [ undef, %388 ], [ %402, %398 ]
  %411 = phi %"class.sh::TIntermNode"** [ %389, %388 ], [ %402, %398 ]
  %412 = phi %"class.sh::TIntermNode"** [ %390, %388 ], [ %403, %398 ]
  %413 = icmp ult i64 %393, 56
  br i1 %413, label %458, label %414

414:                                              ; preds = %409, %414
  %415 = phi %"class.sh::TIntermNode"** [ %452, %414 ], [ %411, %409 ]
  %416 = phi %"class.sh::TIntermNode"** [ %453, %414 ], [ %412, %409 ]
  %417 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %415, i64 -1
  %418 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %416, i64 -1
  %419 = bitcast %"class.sh::TIntermNode"** %418 to i64*
  %420 = load i64, i64* %419, align 8
  %421 = bitcast %"class.sh::TIntermNode"** %417 to i64*
  store i64 %420, i64* %421, align 8
  %422 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %415, i64 -2
  %423 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %416, i64 -2
  %424 = bitcast %"class.sh::TIntermNode"** %423 to i64*
  %425 = load i64, i64* %424, align 8
  %426 = bitcast %"class.sh::TIntermNode"** %422 to i64*
  store i64 %425, i64* %426, align 8
  %427 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %415, i64 -3
  %428 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %416, i64 -3
  %429 = bitcast %"class.sh::TIntermNode"** %428 to i64*
  %430 = load i64, i64* %429, align 8
  %431 = bitcast %"class.sh::TIntermNode"** %427 to i64*
  store i64 %430, i64* %431, align 8
  %432 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %415, i64 -4
  %433 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %416, i64 -4
  %434 = bitcast %"class.sh::TIntermNode"** %433 to i64*
  %435 = load i64, i64* %434, align 8
  %436 = bitcast %"class.sh::TIntermNode"** %432 to i64*
  store i64 %435, i64* %436, align 8
  %437 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %415, i64 -5
  %438 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %416, i64 -5
  %439 = bitcast %"class.sh::TIntermNode"** %438 to i64*
  %440 = load i64, i64* %439, align 8
  %441 = bitcast %"class.sh::TIntermNode"** %437 to i64*
  store i64 %440, i64* %441, align 8
  %442 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %415, i64 -6
  %443 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %416, i64 -6
  %444 = bitcast %"class.sh::TIntermNode"** %443 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = bitcast %"class.sh::TIntermNode"** %442 to i64*
  store i64 %445, i64* %446, align 8
  %447 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %415, i64 -7
  %448 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %416, i64 -7
  %449 = bitcast %"class.sh::TIntermNode"** %448 to i64*
  %450 = load i64, i64* %449, align 8
  %451 = bitcast %"class.sh::TIntermNode"** %447 to i64*
  store i64 %450, i64* %451, align 8
  %452 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %415, i64 -8
  %453 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %416, i64 -8
  %454 = bitcast %"class.sh::TIntermNode"** %453 to i64*
  %455 = load i64, i64* %454, align 8
  %456 = bitcast %"class.sh::TIntermNode"** %452 to i64*
  store i64 %455, i64* %456, align 8
  %457 = icmp eq %"class.sh::TIntermNode"** %453, %285
  br i1 %457, label %458, label %414, !llvm.loop !36

458:                                              ; preds = %409, %414, %386, %276
  %459 = phi %"class.sh::TIntermNode"** [ %279, %276 ], [ %312, %386 ], [ %410, %409 ], [ %452, %414 ]
  %460 = ptrtoint %"class.sh::TIntermNode"** %459 to i64
  store i64 %460, i64* %252, align 8
  store i64 %284, i64* %251, align 8
  store i64 %281, i64* %261, align 8
  %461 = bitcast %"class.sh::TVector.76"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %461) #12
  %462 = getelementptr inbounds %"class.sh::TVector.76", %"class.sh::TVector.76"* %9, i64 0, i32 0, i32 0, i32 0
  %463 = getelementptr inbounds %"class.sh::TVector.76", %"class.sh::TVector.76"* %9, i64 0, i32 0, i32 0, i32 1
  %464 = getelementptr inbounds %"class.sh::TVector.76", %"class.sh::TVector.76"* %9, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %461, i8 0, i64 24, i1 false) #12
  %465 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #12
  %466 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %465, i64 184) #12
  %467 = bitcast i8* %466 to %"class.sh::TType"*
  %468 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %11, align 8
  %469 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %468, i64 31
  %470 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %469, align 8
  %471 = call dereferenceable(184) %"class.sh::TType"* %470(%"class.sh::TIntermTyped"* %1) #12
  call void @_ZN2sh5TTypeC1ERKS0_(%"class.sh::TType"* %467, %"class.sh::TType"* dereferenceable(184) %471) #12
  %472 = getelementptr inbounds i8, i8* %466, i64 4
  %473 = bitcast i8* %472 to i32*
  store i32 3, i32* %473, align 4
  %474 = getelementptr inbounds i8, i8* %466, i64 8
  %475 = bitcast i8* %474 to i32*
  store i32 15, i32* %475, align 8
  %476 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #12
  %477 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %476, i64 40) #12
  %478 = bitcast i8* %477 to %"class.sh::TVariable"*
  %479 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 0, i32 8
  %480 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %479, align 8
  call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %478, %"class.sh::TSymbolTable"* %480, %"class.sh::ImmutableString"* nonnull dereferenceable(16) @_ZN2sh12_GLOBAL__N_111kParamXNameE, %"class.sh::TType"* %467, i8 zeroext 2, i8 zeroext 0) #12
  %481 = ptrtoint i8* %477 to i64
  %482 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %463, align 8
  %483 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %464, align 8
  %484 = icmp ult %"class.sh::TVariable"** %482, %483
  %485 = ptrtoint %"class.sh::TVariable"** %483 to i64
  br i1 %484, label %486, label %491

486:                                              ; preds = %458
  %487 = bitcast %"class.sh::TVariable"** %482 to i64*
  store i64 %481, i64* %487, align 8
  %488 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %482, i64 1
  %489 = ptrtoint %"class.sh::TVariable"** %488 to i64
  %490 = bitcast %"class.sh::TVariable"*** %463 to i64*
  store i64 %489, i64* %490, align 8
  br label %703

491:                                              ; preds = %458
  %492 = ptrtoint %"class.sh::TVariable"** %482 to i64
  %493 = bitcast %"class.sh::TVariable"*** %463 to i64*
  %494 = bitcast %"class.sh::TVector.76"* %9 to i64*
  %495 = load i64, i64* %494, align 8
  %496 = sub i64 %492, %495
  %497 = ashr exact i64 %496, 3
  %498 = add nsw i64 %497, 1
  %499 = icmp ugt i64 %498, 2305843009213693951
  br i1 %499, label %500, label %502

500:                                              ; preds = %491
  %501 = bitcast %"class.sh::TVector.76"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %501) #13
  unreachable

502:                                              ; preds = %491
  %503 = bitcast %"class.sh::TVariable"*** %464 to i64*
  %504 = sub i64 %485, %495
  %505 = ashr exact i64 %504, 3
  %506 = icmp ult i64 %505, 1152921504606846975
  br i1 %506, label %507, label %512

507:                                              ; preds = %502
  %508 = ashr exact i64 %504, 2
  %509 = icmp ult i64 %508, %498
  %510 = select i1 %509, i64 %498, i64 %508
  %511 = icmp eq i64 %510, 0
  br i1 %511, label %518, label %512

512:                                              ; preds = %507, %502
  %513 = phi i64 [ %510, %507 ], [ 2305843009213693951, %502 ]
  %514 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #12
  %515 = shl i64 %513, 3
  %516 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %514, i64 %515) #12
  %517 = bitcast i8* %516 to %"class.sh::TVariable"**
  br label %518

518:                                              ; preds = %512, %507
  %519 = phi i64 [ %513, %512 ], [ 0, %507 ]
  %520 = phi %"class.sh::TVariable"** [ %517, %512 ], [ null, %507 ]
  %521 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %520, i64 %497
  %522 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %520, i64 %519
  %523 = ptrtoint %"class.sh::TVariable"** %522 to i64
  %524 = bitcast %"class.sh::TVariable"** %521 to i64*
  store i64 %481, i64* %524, align 8
  %525 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %521, i64 1
  %526 = ptrtoint %"class.sh::TVariable"** %525 to i64
  %527 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %462, align 8
  %528 = ptrtoint %"class.sh::TVariable"** %527 to i64
  %529 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %463, align 8
  %530 = icmp eq %"class.sh::TVariable"** %529, %527
  br i1 %530, label %700, label %531

531:                                              ; preds = %518
  %532 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %529, i64 -1
  %533 = ptrtoint %"class.sh::TVariable"** %532 to i64
  %534 = sub i64 %533, %528
  %535 = lshr i64 %534, 3
  %536 = add nuw nsw i64 %535, 1
  %537 = icmp ult i64 %536, 4
  br i1 %537, label %630, label %538

538:                                              ; preds = %531
  %539 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %529, i64 -1
  %540 = ptrtoint %"class.sh::TVariable"** %539 to i64
  %541 = sub i64 %540, %528
  %542 = lshr i64 %541, 3
  %543 = xor i64 %542, -1
  %544 = add nsw i64 %497, %543
  %545 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %520, i64 %544
  %546 = xor i64 %542, -1
  %547 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %529, i64 %546
  %548 = icmp ult %"class.sh::TVariable"** %545, %529
  %549 = icmp ult %"class.sh::TVariable"** %547, %521
  %550 = and i1 %548, %549
  br i1 %550, label %630, label %551

551:                                              ; preds = %538
  %552 = and i64 %536, 4611686018427387900
  %553 = sub nsw i64 0, %552
  %554 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %521, i64 %553
  %555 = sub nsw i64 0, %552
  %556 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %529, i64 %555
  %557 = add nsw i64 %552, -4
  %558 = lshr exact i64 %557, 2
  %559 = add nuw nsw i64 %558, 1
  %560 = and i64 %559, 1
  %561 = icmp eq i64 %557, 0
  br i1 %561, label %606, label %562

562:                                              ; preds = %551
  %563 = sub nuw nsw i64 %559, %560
  %564 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %521, i64 -1
  %565 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %529, i64 -1
  %566 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %521, i64 -1
  %567 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %529, i64 -1
  br label %568

568:                                              ; preds = %568, %562
  %569 = phi i64 [ 0, %562 ], [ %603, %568 ]
  %570 = phi i64 [ %563, %562 ], [ %604, %568 ]
  %571 = sub i64 0, %569
  %572 = sub i64 0, %569
  %573 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %564, i64 %571
  %574 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %565, i64 %572
  %575 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %574, i64 -1
  %576 = bitcast %"class.sh::TVariable"** %575 to <2 x i64>*
  %577 = load <2 x i64>, <2 x i64>* %576, align 8, !alias.scope !37
  %578 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %574, i64 -2
  %579 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %578, i64 -1
  %580 = bitcast %"class.sh::TVariable"** %579 to <2 x i64>*
  %581 = load <2 x i64>, <2 x i64>* %580, align 8, !alias.scope !37
  %582 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %573, i64 -1
  %583 = bitcast %"class.sh::TVariable"** %582 to <2 x i64>*
  store <2 x i64> %577, <2 x i64>* %583, align 8, !alias.scope !40, !noalias !37
  %584 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %573, i64 -2
  %585 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %584, i64 -1
  %586 = bitcast %"class.sh::TVariable"** %585 to <2 x i64>*
  store <2 x i64> %581, <2 x i64>* %586, align 8, !alias.scope !40, !noalias !37
  %587 = sub nuw nsw i64 -4, %569
  %588 = sub nuw nsw i64 -4, %569
  %589 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %566, i64 %587
  %590 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %567, i64 %588
  %591 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %590, i64 -1
  %592 = bitcast %"class.sh::TVariable"** %591 to <2 x i64>*
  %593 = load <2 x i64>, <2 x i64>* %592, align 8, !alias.scope !37
  %594 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %590, i64 -2
  %595 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %594, i64 -1
  %596 = bitcast %"class.sh::TVariable"** %595 to <2 x i64>*
  %597 = load <2 x i64>, <2 x i64>* %596, align 8, !alias.scope !37
  %598 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %589, i64 -1
  %599 = bitcast %"class.sh::TVariable"** %598 to <2 x i64>*
  store <2 x i64> %593, <2 x i64>* %599, align 8, !alias.scope !40, !noalias !37
  %600 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %589, i64 -2
  %601 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %600, i64 -1
  %602 = bitcast %"class.sh::TVariable"** %601 to <2 x i64>*
  store <2 x i64> %597, <2 x i64>* %602, align 8, !alias.scope !40, !noalias !37
  %603 = add i64 %569, 8
  %604 = add i64 %570, -2
  %605 = icmp eq i64 %604, 0
  br i1 %605, label %606, label %568, !llvm.loop !42

606:                                              ; preds = %568, %551
  %607 = phi i64 [ 0, %551 ], [ %603, %568 ]
  %608 = icmp eq i64 %560, 0
  br i1 %608, label %628, label %609

609:                                              ; preds = %606
  %610 = sub i64 0, %607
  %611 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %521, i64 -1
  %612 = sub i64 0, %607
  %613 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %529, i64 -1
  %614 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %611, i64 %610
  %615 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %613, i64 %612
  %616 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %615, i64 -1
  %617 = bitcast %"class.sh::TVariable"** %616 to <2 x i64>*
  %618 = load <2 x i64>, <2 x i64>* %617, align 8, !alias.scope !37
  %619 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %615, i64 -2
  %620 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %619, i64 -1
  %621 = bitcast %"class.sh::TVariable"** %620 to <2 x i64>*
  %622 = load <2 x i64>, <2 x i64>* %621, align 8, !alias.scope !37
  %623 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %614, i64 -1
  %624 = bitcast %"class.sh::TVariable"** %623 to <2 x i64>*
  store <2 x i64> %618, <2 x i64>* %624, align 8, !alias.scope !40, !noalias !37
  %625 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %614, i64 -2
  %626 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %625, i64 -1
  %627 = bitcast %"class.sh::TVariable"** %626 to <2 x i64>*
  store <2 x i64> %622, <2 x i64>* %627, align 8, !alias.scope !40, !noalias !37
  br label %628

628:                                              ; preds = %606, %609
  %629 = icmp eq i64 %536, %552
  br i1 %629, label %700, label %630

630:                                              ; preds = %628, %538, %531
  %631 = phi %"class.sh::TVariable"** [ %521, %538 ], [ %521, %531 ], [ %554, %628 ]
  %632 = phi %"class.sh::TVariable"** [ %529, %538 ], [ %529, %531 ], [ %556, %628 ]
  %633 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %632, i64 -1
  %634 = ptrtoint %"class.sh::TVariable"** %633 to i64
  %635 = sub i64 %634, %528
  %636 = lshr i64 %635, 3
  %637 = add nuw nsw i64 %636, 1
  %638 = and i64 %637, 7
  %639 = icmp eq i64 %638, 0
  br i1 %639, label %651, label %640

640:                                              ; preds = %630, %640
  %641 = phi %"class.sh::TVariable"** [ %644, %640 ], [ %631, %630 ]
  %642 = phi %"class.sh::TVariable"** [ %645, %640 ], [ %632, %630 ]
  %643 = phi i64 [ %649, %640 ], [ %638, %630 ]
  %644 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %641, i64 -1
  %645 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %642, i64 -1
  %646 = bitcast %"class.sh::TVariable"** %645 to i64*
  %647 = load i64, i64* %646, align 8
  %648 = bitcast %"class.sh::TVariable"** %644 to i64*
  store i64 %647, i64* %648, align 8
  %649 = add i64 %643, -1
  %650 = icmp eq i64 %649, 0
  br i1 %650, label %651, label %640, !llvm.loop !43

651:                                              ; preds = %640, %630
  %652 = phi %"class.sh::TVariable"** [ undef, %630 ], [ %644, %640 ]
  %653 = phi %"class.sh::TVariable"** [ %631, %630 ], [ %644, %640 ]
  %654 = phi %"class.sh::TVariable"** [ %632, %630 ], [ %645, %640 ]
  %655 = icmp ult i64 %635, 56
  br i1 %655, label %700, label %656

656:                                              ; preds = %651, %656
  %657 = phi %"class.sh::TVariable"** [ %694, %656 ], [ %653, %651 ]
  %658 = phi %"class.sh::TVariable"** [ %695, %656 ], [ %654, %651 ]
  %659 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %657, i64 -1
  %660 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %658, i64 -1
  %661 = bitcast %"class.sh::TVariable"** %660 to i64*
  %662 = load i64, i64* %661, align 8
  %663 = bitcast %"class.sh::TVariable"** %659 to i64*
  store i64 %662, i64* %663, align 8
  %664 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %657, i64 -2
  %665 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %658, i64 -2
  %666 = bitcast %"class.sh::TVariable"** %665 to i64*
  %667 = load i64, i64* %666, align 8
  %668 = bitcast %"class.sh::TVariable"** %664 to i64*
  store i64 %667, i64* %668, align 8
  %669 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %657, i64 -3
  %670 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %658, i64 -3
  %671 = bitcast %"class.sh::TVariable"** %670 to i64*
  %672 = load i64, i64* %671, align 8
  %673 = bitcast %"class.sh::TVariable"** %669 to i64*
  store i64 %672, i64* %673, align 8
  %674 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %657, i64 -4
  %675 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %658, i64 -4
  %676 = bitcast %"class.sh::TVariable"** %675 to i64*
  %677 = load i64, i64* %676, align 8
  %678 = bitcast %"class.sh::TVariable"** %674 to i64*
  store i64 %677, i64* %678, align 8
  %679 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %657, i64 -5
  %680 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %658, i64 -5
  %681 = bitcast %"class.sh::TVariable"** %680 to i64*
  %682 = load i64, i64* %681, align 8
  %683 = bitcast %"class.sh::TVariable"** %679 to i64*
  store i64 %682, i64* %683, align 8
  %684 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %657, i64 -6
  %685 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %658, i64 -6
  %686 = bitcast %"class.sh::TVariable"** %685 to i64*
  %687 = load i64, i64* %686, align 8
  %688 = bitcast %"class.sh::TVariable"** %684 to i64*
  store i64 %687, i64* %688, align 8
  %689 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %657, i64 -7
  %690 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %658, i64 -7
  %691 = bitcast %"class.sh::TVariable"** %690 to i64*
  %692 = load i64, i64* %691, align 8
  %693 = bitcast %"class.sh::TVariable"** %689 to i64*
  store i64 %692, i64* %693, align 8
  %694 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %657, i64 -8
  %695 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %658, i64 -8
  %696 = bitcast %"class.sh::TVariable"** %695 to i64*
  %697 = load i64, i64* %696, align 8
  %698 = bitcast %"class.sh::TVariable"** %694 to i64*
  store i64 %697, i64* %698, align 8
  %699 = icmp eq %"class.sh::TVariable"** %695, %527
  br i1 %699, label %700, label %656, !llvm.loop !44

700:                                              ; preds = %651, %656, %628, %518
  %701 = phi %"class.sh::TVariable"** [ %521, %518 ], [ %554, %628 ], [ %652, %651 ], [ %694, %656 ]
  %702 = ptrtoint %"class.sh::TVariable"** %701 to i64
  store i64 %702, i64* %494, align 8
  store i64 %526, i64* %493, align 8
  store i64 %523, i64* %503, align 8
  br label %703

703:                                              ; preds = %486, %700
  %704 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #12
  %705 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %704, i64 184) #12
  %706 = bitcast i8* %705 to %"class.sh::TType"*
  %707 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %708 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %707, align 8
  %709 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %708, i64 31
  %710 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %709, align 8
  %711 = call dereferenceable(184) %"class.sh::TType"* %710(%"class.sh::TIntermTyped"* %2) #12
  call void @_ZN2sh5TTypeC1ERKS0_(%"class.sh::TType"* %706, %"class.sh::TType"* dereferenceable(184) %711) #12
  %712 = getelementptr inbounds i8, i8* %705, i64 4
  %713 = bitcast i8* %712 to i32*
  store i32 3, i32* %713, align 4
  %714 = getelementptr inbounds i8, i8* %705, i64 8
  %715 = bitcast i8* %714 to i32*
  store i32 14, i32* %715, align 8
  %716 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #12
  %717 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %716, i64 40) #12
  %718 = bitcast i8* %717 to %"class.sh::TVariable"*
  %719 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %479, align 8
  call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %718, %"class.sh::TSymbolTable"* %719, %"class.sh::ImmutableString"* nonnull dereferenceable(16) @_ZN2sh12_GLOBAL__N_111kParamYNameE, %"class.sh::TType"* %706, i8 zeroext 2, i8 zeroext 0) #12
  %720 = ptrtoint i8* %717 to i64
  %721 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %463, align 8
  %722 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %464, align 8
  %723 = icmp ult %"class.sh::TVariable"** %721, %722
  %724 = ptrtoint %"class.sh::TVariable"** %722 to i64
  br i1 %723, label %725, label %730

725:                                              ; preds = %703
  %726 = bitcast %"class.sh::TVariable"** %721 to i64*
  store i64 %720, i64* %726, align 8
  %727 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %721, i64 1
  %728 = ptrtoint %"class.sh::TVariable"** %727 to i64
  %729 = bitcast %"class.sh::TVariable"*** %463 to i64*
  store i64 %728, i64* %729, align 8
  br label %942

730:                                              ; preds = %703
  %731 = ptrtoint %"class.sh::TVariable"** %721 to i64
  %732 = bitcast %"class.sh::TVariable"*** %463 to i64*
  %733 = bitcast %"class.sh::TVector.76"* %9 to i64*
  %734 = load i64, i64* %733, align 8
  %735 = sub i64 %731, %734
  %736 = ashr exact i64 %735, 3
  %737 = add nsw i64 %736, 1
  %738 = icmp ugt i64 %737, 2305843009213693951
  br i1 %738, label %739, label %741

739:                                              ; preds = %730
  %740 = bitcast %"class.sh::TVector.76"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %740) #13
  unreachable

741:                                              ; preds = %730
  %742 = bitcast %"class.sh::TVariable"*** %464 to i64*
  %743 = sub i64 %724, %734
  %744 = ashr exact i64 %743, 3
  %745 = icmp ult i64 %744, 1152921504606846975
  br i1 %745, label %746, label %751

746:                                              ; preds = %741
  %747 = ashr exact i64 %743, 2
  %748 = icmp ult i64 %747, %737
  %749 = select i1 %748, i64 %737, i64 %747
  %750 = icmp eq i64 %749, 0
  br i1 %750, label %757, label %751

751:                                              ; preds = %746, %741
  %752 = phi i64 [ %749, %746 ], [ 2305843009213693951, %741 ]
  %753 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #12
  %754 = shl i64 %752, 3
  %755 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %753, i64 %754) #12
  %756 = bitcast i8* %755 to %"class.sh::TVariable"**
  br label %757

757:                                              ; preds = %751, %746
  %758 = phi i64 [ %752, %751 ], [ 0, %746 ]
  %759 = phi %"class.sh::TVariable"** [ %756, %751 ], [ null, %746 ]
  %760 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %759, i64 %736
  %761 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %759, i64 %758
  %762 = ptrtoint %"class.sh::TVariable"** %761 to i64
  %763 = bitcast %"class.sh::TVariable"** %760 to i64*
  store i64 %720, i64* %763, align 8
  %764 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %760, i64 1
  %765 = ptrtoint %"class.sh::TVariable"** %764 to i64
  %766 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %462, align 8
  %767 = ptrtoint %"class.sh::TVariable"** %766 to i64
  %768 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %463, align 8
  %769 = icmp eq %"class.sh::TVariable"** %768, %766
  br i1 %769, label %939, label %770

770:                                              ; preds = %757
  %771 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %768, i64 -1
  %772 = ptrtoint %"class.sh::TVariable"** %771 to i64
  %773 = sub i64 %772, %767
  %774 = lshr i64 %773, 3
  %775 = add nuw nsw i64 %774, 1
  %776 = icmp ult i64 %775, 4
  br i1 %776, label %869, label %777

777:                                              ; preds = %770
  %778 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %768, i64 -1
  %779 = ptrtoint %"class.sh::TVariable"** %778 to i64
  %780 = sub i64 %779, %767
  %781 = lshr i64 %780, 3
  %782 = xor i64 %781, -1
  %783 = add nsw i64 %736, %782
  %784 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %759, i64 %783
  %785 = xor i64 %781, -1
  %786 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %768, i64 %785
  %787 = icmp ult %"class.sh::TVariable"** %784, %768
  %788 = icmp ult %"class.sh::TVariable"** %786, %760
  %789 = and i1 %787, %788
  br i1 %789, label %869, label %790

790:                                              ; preds = %777
  %791 = and i64 %775, 4611686018427387900
  %792 = sub nsw i64 0, %791
  %793 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %760, i64 %792
  %794 = sub nsw i64 0, %791
  %795 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %768, i64 %794
  %796 = add nsw i64 %791, -4
  %797 = lshr exact i64 %796, 2
  %798 = add nuw nsw i64 %797, 1
  %799 = and i64 %798, 1
  %800 = icmp eq i64 %796, 0
  br i1 %800, label %847, label %801

801:                                              ; preds = %790
  %802 = sub nuw nsw i64 %798, %799
  %803 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %760, i64 -1
  %804 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %768, i64 -1
  %805 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %760, i64 -1
  %806 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %768, i64 -1
  br label %807

807:                                              ; preds = %807, %801
  %808 = phi i64 [ 0, %801 ], [ %842, %807 ]
  %809 = phi i64 [ %802, %801 ], [ %843, %807 ]
  %810 = sub i64 0, %808
  %811 = sub i64 0, %808
  %812 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %803, i64 %810
  %813 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %804, i64 %811
  %814 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %813, i64 -1
  %815 = bitcast %"class.sh::TVariable"** %814 to <2 x i64>*
  %816 = load <2 x i64>, <2 x i64>* %815, align 8, !alias.scope !45
  %817 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %813, i64 -2
  %818 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %817, i64 -1
  %819 = bitcast %"class.sh::TVariable"** %818 to <2 x i64>*
  %820 = load <2 x i64>, <2 x i64>* %819, align 8, !alias.scope !45
  %821 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %812, i64 -1
  %822 = bitcast %"class.sh::TVariable"** %821 to <2 x i64>*
  store <2 x i64> %816, <2 x i64>* %822, align 8, !alias.scope !48, !noalias !45
  %823 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %812, i64 -2
  %824 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %823, i64 -1
  %825 = bitcast %"class.sh::TVariable"** %824 to <2 x i64>*
  store <2 x i64> %820, <2 x i64>* %825, align 8, !alias.scope !48, !noalias !45
  %826 = sub nuw nsw i64 -4, %808
  %827 = sub nuw nsw i64 -4, %808
  %828 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %805, i64 %826
  %829 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %806, i64 %827
  %830 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %829, i64 -1
  %831 = bitcast %"class.sh::TVariable"** %830 to <2 x i64>*
  %832 = load <2 x i64>, <2 x i64>* %831, align 8, !alias.scope !45
  %833 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %829, i64 -2
  %834 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %833, i64 -1
  %835 = bitcast %"class.sh::TVariable"** %834 to <2 x i64>*
  %836 = load <2 x i64>, <2 x i64>* %835, align 8, !alias.scope !45
  %837 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %828, i64 -1
  %838 = bitcast %"class.sh::TVariable"** %837 to <2 x i64>*
  store <2 x i64> %832, <2 x i64>* %838, align 8, !alias.scope !48, !noalias !45
  %839 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %828, i64 -2
  %840 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %839, i64 -1
  %841 = bitcast %"class.sh::TVariable"** %840 to <2 x i64>*
  store <2 x i64> %836, <2 x i64>* %841, align 8, !alias.scope !48, !noalias !45
  %842 = add i64 %808, 8
  %843 = add i64 %809, -2
  %844 = icmp eq i64 %843, 0
  br i1 %844, label %845, label %807, !llvm.loop !50

845:                                              ; preds = %807
  %846 = sub nuw nsw i64 -8, %808
  br label %847

847:                                              ; preds = %845, %790
  %848 = phi i64 [ 0, %790 ], [ %846, %845 ]
  %849 = icmp eq i64 %799, 0
  br i1 %849, label %867, label %850

850:                                              ; preds = %847
  %851 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %760, i64 -1
  %852 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %768, i64 -1
  %853 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %851, i64 %848
  %854 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %852, i64 %848
  %855 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %854, i64 -1
  %856 = bitcast %"class.sh::TVariable"** %855 to <2 x i64>*
  %857 = load <2 x i64>, <2 x i64>* %856, align 8, !alias.scope !45
  %858 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %854, i64 -2
  %859 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %858, i64 -1
  %860 = bitcast %"class.sh::TVariable"** %859 to <2 x i64>*
  %861 = load <2 x i64>, <2 x i64>* %860, align 8, !alias.scope !45
  %862 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %853, i64 -1
  %863 = bitcast %"class.sh::TVariable"** %862 to <2 x i64>*
  store <2 x i64> %857, <2 x i64>* %863, align 8, !alias.scope !48, !noalias !45
  %864 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %853, i64 -2
  %865 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %864, i64 -1
  %866 = bitcast %"class.sh::TVariable"** %865 to <2 x i64>*
  store <2 x i64> %861, <2 x i64>* %866, align 8, !alias.scope !48, !noalias !45
  br label %867

867:                                              ; preds = %847, %850
  %868 = icmp eq i64 %775, %791
  br i1 %868, label %939, label %869

869:                                              ; preds = %867, %777, %770
  %870 = phi %"class.sh::TVariable"** [ %760, %777 ], [ %760, %770 ], [ %793, %867 ]
  %871 = phi %"class.sh::TVariable"** [ %768, %777 ], [ %768, %770 ], [ %795, %867 ]
  %872 = getelementptr %"class.sh::TVariable"*, %"class.sh::TVariable"** %871, i64 -1
  %873 = ptrtoint %"class.sh::TVariable"** %872 to i64
  %874 = sub i64 %873, %767
  %875 = lshr i64 %874, 3
  %876 = add nuw nsw i64 %875, 1
  %877 = and i64 %876, 7
  %878 = icmp eq i64 %877, 0
  br i1 %878, label %890, label %879

879:                                              ; preds = %869, %879
  %880 = phi %"class.sh::TVariable"** [ %883, %879 ], [ %870, %869 ]
  %881 = phi %"class.sh::TVariable"** [ %884, %879 ], [ %871, %869 ]
  %882 = phi i64 [ %888, %879 ], [ %877, %869 ]
  %883 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %880, i64 -1
  %884 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %881, i64 -1
  %885 = bitcast %"class.sh::TVariable"** %884 to i64*
  %886 = load i64, i64* %885, align 8
  %887 = bitcast %"class.sh::TVariable"** %883 to i64*
  store i64 %886, i64* %887, align 8
  %888 = add i64 %882, -1
  %889 = icmp eq i64 %888, 0
  br i1 %889, label %890, label %879, !llvm.loop !51

890:                                              ; preds = %879, %869
  %891 = phi %"class.sh::TVariable"** [ undef, %869 ], [ %883, %879 ]
  %892 = phi %"class.sh::TVariable"** [ %870, %869 ], [ %883, %879 ]
  %893 = phi %"class.sh::TVariable"** [ %871, %869 ], [ %884, %879 ]
  %894 = icmp ult i64 %874, 56
  br i1 %894, label %939, label %895

895:                                              ; preds = %890, %895
  %896 = phi %"class.sh::TVariable"** [ %933, %895 ], [ %892, %890 ]
  %897 = phi %"class.sh::TVariable"** [ %934, %895 ], [ %893, %890 ]
  %898 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %896, i64 -1
  %899 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %897, i64 -1
  %900 = bitcast %"class.sh::TVariable"** %899 to i64*
  %901 = load i64, i64* %900, align 8
  %902 = bitcast %"class.sh::TVariable"** %898 to i64*
  store i64 %901, i64* %902, align 8
  %903 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %896, i64 -2
  %904 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %897, i64 -2
  %905 = bitcast %"class.sh::TVariable"** %904 to i64*
  %906 = load i64, i64* %905, align 8
  %907 = bitcast %"class.sh::TVariable"** %903 to i64*
  store i64 %906, i64* %907, align 8
  %908 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %896, i64 -3
  %909 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %897, i64 -3
  %910 = bitcast %"class.sh::TVariable"** %909 to i64*
  %911 = load i64, i64* %910, align 8
  %912 = bitcast %"class.sh::TVariable"** %908 to i64*
  store i64 %911, i64* %912, align 8
  %913 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %896, i64 -4
  %914 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %897, i64 -4
  %915 = bitcast %"class.sh::TVariable"** %914 to i64*
  %916 = load i64, i64* %915, align 8
  %917 = bitcast %"class.sh::TVariable"** %913 to i64*
  store i64 %916, i64* %917, align 8
  %918 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %896, i64 -5
  %919 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %897, i64 -5
  %920 = bitcast %"class.sh::TVariable"** %919 to i64*
  %921 = load i64, i64* %920, align 8
  %922 = bitcast %"class.sh::TVariable"** %918 to i64*
  store i64 %921, i64* %922, align 8
  %923 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %896, i64 -6
  %924 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %897, i64 -6
  %925 = bitcast %"class.sh::TVariable"** %924 to i64*
  %926 = load i64, i64* %925, align 8
  %927 = bitcast %"class.sh::TVariable"** %923 to i64*
  store i64 %926, i64* %927, align 8
  %928 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %896, i64 -7
  %929 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %897, i64 -7
  %930 = bitcast %"class.sh::TVariable"** %929 to i64*
  %931 = load i64, i64* %930, align 8
  %932 = bitcast %"class.sh::TVariable"** %928 to i64*
  store i64 %931, i64* %932, align 8
  %933 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %896, i64 -8
  %934 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %897, i64 -8
  %935 = bitcast %"class.sh::TVariable"** %934 to i64*
  %936 = load i64, i64* %935, align 8
  %937 = bitcast %"class.sh::TVariable"** %933 to i64*
  store i64 %936, i64* %937, align 8
  %938 = icmp eq %"class.sh::TVariable"** %934, %766
  br i1 %938, label %939, label %895, !llvm.loop !52

939:                                              ; preds = %890, %895, %867, %757
  %940 = phi %"class.sh::TVariable"** [ %760, %757 ], [ %793, %867 ], [ %891, %890 ], [ %933, %895 ]
  %941 = ptrtoint %"class.sh::TVariable"** %940 to i64
  store i64 %941, i64* %733, align 8
  store i64 %765, i64* %732, align 8
  store i64 %762, i64* %742, align 8
  br label %942

942:                                              ; preds = %725, %939
  %943 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %11, align 8
  %944 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %943, i64 31
  %945 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %944, align 8
  %946 = call dereferenceable(184) %"class.sh::TType"* %945(%"class.sh::TIntermTyped"* %1) #12
  %947 = call %"class.sh::TFunction"* @_ZN2sh16EmulatePrecision19getInternalFunctionERKNS_15ImmutableStringERKNS_5TTypeEPNS_7TVectorIPNS_11TIntermNodeEEERKNS7_IPKNS_9TVariableEEEb(%"class.sh::EmulatePrecision"* %0, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %6, %"class.sh::TType"* dereferenceable(184) %946, %"class.sh::TVector"* nonnull %8, %"class.sh::TVector.76"* nonnull dereferenceable(24) %9, i1 zeroext false)
  %948 = call %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate21CreateRawFunctionCallERKNS_9TFunctionEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TFunction"* dereferenceable(80) %947, %"class.sh::TVector"* nonnull %8) #12
  %949 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %462, align 8
  %950 = icmp eq %"class.sh::TVariable"** %949, null
  br i1 %950, label %954, label %951

951:                                              ; preds = %942
  %952 = ptrtoint %"class.sh::TVariable"** %949 to i64
  %953 = bitcast %"class.sh::TVariable"*** %463 to i64*
  store i64 %952, i64* %953, align 8
  br label %954

954:                                              ; preds = %942, %951
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %461) #12
  %955 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %55, align 8
  %956 = icmp eq %"class.sh::TIntermNode"** %955, null
  br i1 %956, label %960, label %957

957:                                              ; preds = %954
  %958 = ptrtoint %"class.sh::TIntermNode"** %955 to i64
  %959 = bitcast %"class.sh::TIntermNode"*** %56 to i64*
  store i64 %958, i64* %959, align 8
  br label %960

960:                                              ; preds = %954, %957
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #12
  %961 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %962 = bitcast %"class.std::__1::basic_stringstream"* %5 to i64*
  store i64 %961, i64* %962, align 8
  %963 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %964 = inttoptr i64 %961 to i8*
  %965 = getelementptr i8, i8* %964, i64 -24
  %966 = bitcast i8* %965 to i64*
  %967 = load i64, i64* %966, align 8
  %968 = getelementptr inbounds i8, i8* %10, i64 %967
  %969 = bitcast i8* %968 to i64*
  store i64 %963, i64* %969, align 8
  %970 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %971 = bitcast %"class.std::__1::basic_ostream.base"* %19 to i64*
  store i64 %970, i64* %971, align 8
  %972 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %31, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %972, align 8
  %973 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1, i32 1
  %974 = bitcast %"class.std::__1::basic_string.84"* %973 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %975 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %974, i64 0, i32 1, i32 0
  %976 = load i8, i8* %975, align 1
  %977 = icmp slt i8 %976, 0
  br i1 %977, label %978, label %981

978:                                              ; preds = %960
  %979 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %973, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %980 = load i8*, i8** %979, align 8
  call void @_ZdlPv(i8* %980) #14
  br label %981

981:                                              ; preds = %960, %978
  %982 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %31, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %982) #12
  %983 = bitcast %"class.std::__1::basic_stringstream"* %5 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %983, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #12
  %984 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 2
  %985 = bitcast %"class.std::__1::basic_ios.base"* %984 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %985) #12
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %10) #12
  ret %"class.sh::TIntermAggregate"* %948
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN2sh16EmulatePrecision16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE(%"class.sh::EmulatePrecision"* nocapture, i32, %"class.sh::TIntermDeclaration"* nocapture readnone) unnamed_addr #3 align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 7
  store i8 1, i8* %6, align 8
  br label %12

7:                                                ; preds = %3
  %8 = icmp eq i32 %1, 1
  %9 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 7
  br i1 %8, label %10, label %11

10:                                               ; preds = %7
  store i8 1, i8* %9, align 8
  br label %12

11:                                               ; preds = %7
  store i8 0, i8* %9, align 8
  br label %12

12:                                               ; preds = %10, %11, %5
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2sh16EmulatePrecision31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE(%"class.sh::EmulatePrecision"* nocapture readnone, i32, %"class.sh::TIntermGlobalQualifierDeclaration"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh16EmulatePrecision14visitAggregateENS_5VisitEPNS_16TIntermAggregateE(%"class.sh::EmulatePrecision"*, i32, %"class.sh::TIntermAggregate"*) unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %130

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %2, i64 0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8
  switch i8 %7, label %18 [
    i8 2, label %130
    i8 1, label %130
    i8 -119, label %8
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %2, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.sh::TIntermAggregate"* %2 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %11 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %11, i64 31
  %13 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %12, align 8
  %14 = tail call dereferenceable(184) %"class.sh::TType"* %13(%"class.sh::TIntermTyped"* %9) #12
  %15 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 90
  br i1 %17, label %130, label %18

18:                                               ; preds = %5, %8
  %19 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 0, i32 11, i32 0
  %21 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 0, i32 11, i32 0, i32 0, i32 1
  %22 = bitcast %"class.sh::TIntermNode"*** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.0"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = ashr exact i64 %26, 3
  %28 = icmp ult i64 %27, 2
  br i1 %28, label %35, label %29

29:                                               ; preds = %18
  %30 = inttoptr i64 %25 to %"class.sh::TIntermNode"**
  %31 = add nsw i64 %27, -2
  %32 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %30, i64 %31
  %33 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %32, align 8
  %34 = bitcast %"class.sh::TIntermNode"* %33 to %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)***
  br label %35

35:                                               ; preds = %18, %29
  %36 = phi %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*** [ %34, %29 ], [ null, %18 ]
  %37 = phi %"class.sh::TIntermNode"* [ %33, %29 ], [ null, %18 ]
  %38 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %2, i64 0, i32 0, i32 0
  %39 = bitcast %"class.sh::TIntermAggregate"* %2 to %"class.sh::TType"* (%"class.sh::TIntermExpression"*)***
  %40 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)**, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*** %39, align 8
  %41 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %40, i64 31
  %42 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %41, align 8
  %43 = tail call dereferenceable(184) %"class.sh::TType"* %42(%"class.sh::TIntermExpression"* %38) #12
  %44 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %43, i64 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %130

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %43, i64 0, i32 10, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %130

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %43, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = add i32 %53, -1
  %55 = icmp ult i32 %54, 2
  br i1 %55, label %56, label %130

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %2, i64 0, i32 0, i32 0, i32 0
  %58 = icmp eq %"class.sh::TIntermNode"* %37, null
  br i1 %58, label %130, label %59

59:                                               ; preds = %56
  %60 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*** %36, align 8
  %61 = getelementptr inbounds %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %60, i64 8
  %62 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %61, align 8
  %63 = tail call %"class.sh::TIntermBlock"* %62(%"class.sh::TIntermNode"* nonnull %37) #12
  %64 = icmp eq %"class.sh::TIntermBlock"* %63, null
  br i1 %64, label %65, label %130

65:                                               ; preds = %59
  %66 = bitcast %"class.sh::TIntermNode"* %37 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %67 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %66, align 8
  %68 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %67, i64 13
  %69 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %68, align 8
  %70 = tail call %"class.sh::TIntermBinary"* %69(%"class.sh::TIntermNode"* nonnull %37) #12
  %71 = icmp eq %"class.sh::TIntermBinary"* %70, null
  br i1 %71, label %80, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %70, i64 0, i32 0, i32 1
  %74 = load i8, i8* %73, align 8
  %75 = icmp eq i8 %74, 30
  br i1 %75, label %76, label %80

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %70, i64 0, i32 3
  %78 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %77, align 8
  %79 = icmp eq %"class.sh::TIntermTyped"* %78, %57
  br i1 %79, label %80, label %130

80:                                               ; preds = %65, %72, %76
  %81 = bitcast %"class.sh::TIntermNode"* %37 to %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)***
  %82 = load %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)*** %81, align 8
  %83 = getelementptr inbounds %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)** %82, i64 7
  %84 = load %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)** %83, align 8
  %85 = tail call %"class.sh::TIntermAggregate"* %84(%"class.sh::TIntermNode"* nonnull %37) #12
  %86 = icmp eq %"class.sh::TIntermAggregate"* %85, null
  br i1 %86, label %127, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %85, i64 0, i32 0, i32 1
  %89 = load i8, i8* %88, align 8
  %90 = icmp eq i8 %89, -119
  br i1 %90, label %91, label %127

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %85, i64 0, i32 0, i32 0, i32 0
  %93 = bitcast %"class.sh::TIntermAggregate"* %85 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %94 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %93, align 8
  %95 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %94, i64 31
  %96 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %95, align 8
  %97 = tail call dereferenceable(184) %"class.sh::TType"* %96(%"class.sh::TIntermTyped"* %92) #12
  %98 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %97, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = bitcast %"class.sh::TIntermAggregate"* %2 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %101 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %100, align 8
  %102 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %101, i64 31
  %103 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %102, align 8
  %104 = tail call dereferenceable(184) %"class.sh::TType"* %103(%"class.sh::TIntermTyped"* %57) #12
  %105 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %104, i64 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %99, %106
  br i1 %107, label %108, label %127

108:                                              ; preds = %91
  %109 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %85, i64 0, i32 0, i32 0
  %110 = bitcast %"class.sh::TIntermAggregate"* %85 to %"class.sh::TType"* (%"class.sh::TIntermExpression"*)***
  %111 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)**, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*** %110, align 8
  %112 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %111, i64 31
  %113 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %112, align 8
  %114 = tail call dereferenceable(184) %"class.sh::TType"* %113(%"class.sh::TIntermExpression"* %109) #12
  %115 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %114, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %118, label %127

118:                                              ; preds = %108
  %119 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %114, i64 0, i32 10, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %127

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %114, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = add i32 %124, -1
  %126 = icmp ult i32 %125, 2
  br i1 %126, label %130, label %127

127:                                              ; preds = %108, %118, %91, %80, %87, %122
  %128 = tail call %"class.sh::TIntermAggregate"* @_ZN2sh16EmulatePrecision30createRoundingFunctionCallNodeEPNS_12TIntermTypedE(%"class.sh::EmulatePrecision"* %0, %"class.sh::TIntermTyped"* %57)
  %129 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"* %19, %"class.sh::TIntermNode"* %129, i32 0) #12
  br label %130

130:                                              ; preds = %76, %59, %56, %35, %47, %5, %5, %8, %127, %122, %51, %3
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh16EmulatePrecision10visitUnaryENS_5VisitEPNS_12TIntermUnaryE(%"class.sh::EmulatePrecision"*, i32, %"class.sh::TIntermUnary"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::TIntermUnary", %"class.sh::TIntermUnary"* %2, i64 0, i32 0, i32 1
  %5 = load i8, i8* %4, align 8
  switch i8 %5, label %6 [
    i8 4, label %32
    i8 6, label %32
    i8 8, label %32
    i8 9, label %32
    i8 10, label %32
    i8 11, label %32
    i8 122, label %32
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.sh::TIntermUnary", %"class.sh::TIntermUnary"* %2, i64 0, i32 0, i32 0
  %8 = bitcast %"class.sh::TIntermUnary"* %2 to %"class.sh::TType"* (%"class.sh::TIntermExpression"*)***
  %9 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)**, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %9, i64 31
  %11 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %10, align 8
  %12 = tail call dereferenceable(184) %"class.sh::TType"* %11(%"class.sh::TIntermExpression"* %7) #12
  %13 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %12, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %32

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %12, i64 0, i32 10, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %12, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, -1
  %24 = icmp ult i32 %23, 2
  %25 = icmp eq i32 %1, 0
  %26 = and i1 %25, %24
  br i1 %26, label %27, label %32

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.sh::TIntermUnary", %"class.sh::TIntermUnary"* %2, i64 0, i32 0, i32 0, i32 0
  %29 = tail call %"class.sh::TIntermAggregate"* @_ZN2sh16EmulatePrecision30createRoundingFunctionCallNodeEPNS_12TIntermTypedE(%"class.sh::EmulatePrecision"* %0, %"class.sh::TIntermTyped"* %28)
  %30 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"* %31, %"class.sh::TIntermNode"* %30, i32 0) #12
  br label %32

32:                                               ; preds = %6, %16, %20, %27, %3, %3, %3, %3, %3, %3, %3
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh16EmulatePrecision21writeEmulationHelpersERNS_13TInfoSinkBaseEi14ShShaderOutput(%"class.sh::EmulatePrecision"*, %"class.sh::TInfoSinkBase"* dereferenceable(48), i32, i32) local_unnamed_addr #0 align 2 {
  switch i32 %3, label %15 [
    i32 35657, label %5
    i32 35653, label %10
  ]

5:                                                ; preds = %4
  %6 = tail call i8* @_Znwm(i64 16) #14
  %7 = bitcast i8* %6 to i32 (...)***
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 35657, i32* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2sh12_GLOBAL__N_124RoundingHelperWriterHLSLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  br label %20

10:                                               ; preds = %4
  %11 = tail call i8* @_Znwm(i64 16) #14
  %12 = getelementptr inbounds i8, i8* %11, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 35653, i32* %13, align 8
  %14 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2sh12_GLOBAL__N_124RoundingHelperWriterESSLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  br label %20

15:                                               ; preds = %4
  %16 = tail call i8* @_Znwm(i64 16) #14
  %17 = bitcast i8* %16 to i32 (...)***
  %18 = getelementptr inbounds i8, i8* %16, i64 8
  %19 = bitcast i8* %18 to i32*
  store i32 %3, i32* %19, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2sh12_GLOBAL__N_124RoundingHelperWriterGLSLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  br label %20

20:                                               ; preds = %5, %10, %15
  %21 = phi i8* [ %16, %15 ], [ %11, %10 ], [ %6, %5 ]
  %22 = bitcast i8* %21 to %"class.sh::(anonymous namespace)::RoundingHelperWriter"*
  %23 = bitcast i8* %21 to void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*)***
  %24 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*)** %24, i64 3
  %26 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*)** %25, align 8
  tail call void %26(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1) #12
  %27 = bitcast i8* %21 to void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32)***
  %28 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32)** %28, i64 4
  %30 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32)** %29, align 8
  tail call void %30(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 2) #12
  %31 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32)*** %27, align 8
  %32 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32)** %31, i64 4
  %33 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32)** %32, align 8
  tail call void %33(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 3) #12
  %34 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32)*** %27, align 8
  %35 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32)** %34, i64 4
  %36 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32)** %35, align 8
  tail call void %36(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 4) #12
  %37 = icmp sgt i32 %2, 100
  %38 = bitcast i8* %21 to void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)***
  %39 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %39, i64 5
  %41 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %40, align 8
  tail call void %41(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 2, i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.68, i64 0, i64 0)) #12
  %42 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*** %38, align 8
  %43 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %42, i64 5
  %44 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %43, align 8
  tail call void %44(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 2, i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i64 0, i64 0)) #12
  %45 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*** %38, align 8
  %46 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %45, i64 5
  %47 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %46, align 8
  br i1 %37, label %48, label %94

48:                                               ; preds = %20
  tail call void %47(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 2, i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.68, i64 0, i64 0)) #12
  %49 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*** %38, align 8
  %50 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %49, i64 5
  %51 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %50, align 8
  tail call void %51(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 2, i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i64 0, i64 0)) #12
  %52 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*** %38, align 8
  %53 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %52, i64 5
  %54 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %53, align 8
  tail call void %54(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 2, i32 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.68, i64 0, i64 0)) #12
  %55 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*** %38, align 8
  %56 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %55, i64 5
  %57 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %56, align 8
  tail call void %57(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 2, i32 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i64 0, i64 0)) #12
  %58 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*** %38, align 8
  %59 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %58, i64 5
  %60 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %59, align 8
  tail call void %60(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 3, i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.68, i64 0, i64 0)) #12
  %61 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*** %38, align 8
  %62 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %61, i64 5
  %63 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %62, align 8
  tail call void %63(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 3, i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i64 0, i64 0)) #12
  %64 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*** %38, align 8
  %65 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %64, i64 5
  %66 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %65, align 8
  tail call void %66(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 3, i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.68, i64 0, i64 0)) #12
  %67 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*** %38, align 8
  %68 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %67, i64 5
  %69 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %68, align 8
  tail call void %69(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 3, i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i64 0, i64 0)) #12
  %70 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*** %38, align 8
  %71 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %70, i64 5
  %72 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %71, align 8
  tail call void %72(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 3, i32 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.68, i64 0, i64 0)) #12
  %73 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*** %38, align 8
  %74 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %73, i64 5
  %75 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %74, align 8
  tail call void %75(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 3, i32 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i64 0, i64 0)) #12
  %76 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*** %38, align 8
  %77 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %76, i64 5
  %78 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %77, align 8
  tail call void %78(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 4, i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.68, i64 0, i64 0)) #12
  %79 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*** %38, align 8
  %80 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %79, i64 5
  %81 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %80, align 8
  tail call void %81(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 4, i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i64 0, i64 0)) #12
  %82 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*** %38, align 8
  %83 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %82, i64 5
  %84 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %83, align 8
  tail call void %84(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 4, i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.68, i64 0, i64 0)) #12
  %85 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*** %38, align 8
  %86 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %85, i64 5
  %87 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %86, align 8
  tail call void %87(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 4, i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i64 0, i64 0)) #12
  %88 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*** %38, align 8
  %89 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %88, i64 5
  %90 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %89, align 8
  tail call void %90(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 4, i32 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.68, i64 0, i64 0)) #12
  %91 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*** %38, align 8
  %92 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %91, i64 5
  %93 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %92, align 8
  tail call void %93(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 4, i32 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i64 0, i64 0)) #12
  br label %104

94:                                               ; preds = %20
  tail call void %47(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 3, i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.68, i64 0, i64 0)) #12
  %95 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*** %38, align 8
  %96 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %95, i64 5
  %97 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %96, align 8
  tail call void %97(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 3, i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i64 0, i64 0)) #12
  %98 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*** %38, align 8
  %99 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %98, i64 5
  %100 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %99, align 8
  tail call void %100(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 4, i32 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.68, i64 0, i64 0)) #12
  %101 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*** %38, align 8
  %102 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %101, i64 5
  %103 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"*, i32, i32, i8*)** %102, align 8
  tail call void %103(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 4, i32 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i64 0, i64 0)) #12
  br label %104

104:                                              ; preds = %48, %94
  %105 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 2, i32 0, i32 0
  %106 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %105, align 8
  %107 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %108 = icmp eq %"class.std::__1::__tree_end_node"* %106, %107
  br i1 %108, label %147, label %109

109:                                              ; preds = %104, %144
  %110 = phi %"class.std::__1::__tree_end_node"* [ %145, %144 ], [ %106, %104 ]
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %110, i64 4
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %110, i64 5
  %115 = bitcast %"class.std::__1::__tree_end_node"* %114 to i8**
  %116 = load i8*, i8** %115, align 8
  tail call fastcc void @_ZN2sh12_GLOBAL__N_120RoundingHelperWriter29writeCompoundAssignmentHelperERNS_13TInfoSinkBaseEPKcS5_S5_S5_(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i8* %113, i8* %116, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0))
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %110, i64 1, i32 0
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node_base"* %118, null
  br i1 %119, label %120, label %128

120:                                              ; preds = %109
  %121 = bitcast %"class.std::__1::__tree_end_node"* %110 to %"class.std::__1::__tree_node_base"*
  %122 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %110, i64 2
  %123 = bitcast %"class.std::__1::__tree_end_node"* %122 to %"class.std::__1::__tree_end_node"**
  %124 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %125 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %124, i64 0, i32 0
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %125, align 8
  %127 = icmp eq %"class.std::__1::__tree_node_base"* %126, %121
  br i1 %127, label %144, label %135

128:                                              ; preds = %109, %128
  %129 = phi %"class.std::__1::__tree_node_base"* [ %131, %128 ], [ %118, %109 ]
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %133, label %128

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  br label %144

135:                                              ; preds = %120, %135
  %136 = phi %"class.std::__1::__tree_end_node"** [ %139, %135 ], [ %123, %120 ]
  %137 = bitcast %"class.std::__1::__tree_end_node"** %136 to %"class.std::__1::__tree_node_base"**
  %138 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %137, align 8
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %138, i64 0, i32 2
  %140 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %139, align 8
  %141 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %140, i64 0, i32 0
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %141, align 8
  %143 = icmp eq %"class.std::__1::__tree_node_base"* %142, %138
  br i1 %143, label %144, label %135

144:                                              ; preds = %135, %120, %133
  %145 = phi %"class.std::__1::__tree_end_node"* [ %134, %133 ], [ %124, %120 ], [ %140, %135 ]
  %146 = icmp eq %"class.std::__1::__tree_end_node"* %145, %107
  br i1 %146, label %147, label %109

147:                                              ; preds = %144, %104
  %148 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 3, i32 0, i32 0
  %149 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %148, align 8
  %150 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %151 = icmp eq %"class.std::__1::__tree_end_node"* %149, %150
  br i1 %151, label %190, label %152

152:                                              ; preds = %147, %187
  %153 = phi %"class.std::__1::__tree_end_node"* [ %188, %187 ], [ %149, %147 ]
  %154 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %153, i64 4
  %155 = bitcast %"class.std::__1::__tree_end_node"* %154 to i8**
  %156 = load i8*, i8** %155, align 8
  %157 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %153, i64 5
  %158 = bitcast %"class.std::__1::__tree_end_node"* %157 to i8**
  %159 = load i8*, i8** %158, align 8
  tail call fastcc void @_ZN2sh12_GLOBAL__N_120RoundingHelperWriter29writeCompoundAssignmentHelperERNS_13TInfoSinkBaseEPKcS5_S5_S5_(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i8* %156, i8* %159, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  %160 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %153, i64 1, i32 0
  %161 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %160, align 8
  %162 = icmp eq %"class.std::__1::__tree_node_base"* %161, null
  br i1 %162, label %163, label %171

163:                                              ; preds = %152
  %164 = bitcast %"class.std::__1::__tree_end_node"* %153 to %"class.std::__1::__tree_node_base"*
  %165 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %153, i64 2
  %166 = bitcast %"class.std::__1::__tree_end_node"* %165 to %"class.std::__1::__tree_end_node"**
  %167 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %166, align 8
  %168 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 0, i32 0
  %169 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %168, align 8
  %170 = icmp eq %"class.std::__1::__tree_node_base"* %169, %164
  br i1 %170, label %187, label %178

171:                                              ; preds = %152, %171
  %172 = phi %"class.std::__1::__tree_node_base"* [ %174, %171 ], [ %161, %152 ]
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %172, i64 0, i32 0, i32 0
  %174 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %173, align 8
  %175 = icmp eq %"class.std::__1::__tree_node_base"* %174, null
  br i1 %175, label %176, label %171

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %172, i64 0, i32 0
  br label %187

178:                                              ; preds = %163, %178
  %179 = phi %"class.std::__1::__tree_end_node"** [ %182, %178 ], [ %166, %163 ]
  %180 = bitcast %"class.std::__1::__tree_end_node"** %179 to %"class.std::__1::__tree_node_base"**
  %181 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %180, align 8
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 2
  %183 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %182, align 8
  %184 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %183, i64 0, i32 0
  %185 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %184, align 8
  %186 = icmp eq %"class.std::__1::__tree_node_base"* %185, %181
  br i1 %186, label %187, label %178

187:                                              ; preds = %178, %163, %176
  %188 = phi %"class.std::__1::__tree_end_node"* [ %177, %176 ], [ %167, %163 ], [ %183, %178 ]
  %189 = icmp eq %"class.std::__1::__tree_end_node"* %188, %150
  br i1 %189, label %190, label %152

190:                                              ; preds = %187, %147
  %191 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 5, i32 0, i32 0
  %192 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %191, align 8
  %193 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %194 = icmp eq %"class.std::__1::__tree_end_node"* %192, %193
  br i1 %194, label %233, label %195

195:                                              ; preds = %190, %230
  %196 = phi %"class.std::__1::__tree_end_node"* [ %231, %230 ], [ %192, %190 ]
  %197 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %196, i64 4
  %198 = bitcast %"class.std::__1::__tree_end_node"* %197 to i8**
  %199 = load i8*, i8** %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %196, i64 5
  %201 = bitcast %"class.std::__1::__tree_end_node"* %200 to i8**
  %202 = load i8*, i8** %201, align 8
  tail call fastcc void @_ZN2sh12_GLOBAL__N_120RoundingHelperWriter29writeCompoundAssignmentHelperERNS_13TInfoSinkBaseEPKcS5_S5_S5_(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i8* %199, i8* %202, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0))
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %196, i64 1, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, null
  br i1 %205, label %206, label %214

206:                                              ; preds = %195
  %207 = bitcast %"class.std::__1::__tree_end_node"* %196 to %"class.std::__1::__tree_node_base"*
  %208 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %196, i64 2
  %209 = bitcast %"class.std::__1::__tree_end_node"* %208 to %"class.std::__1::__tree_end_node"**
  %210 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %209, align 8
  %211 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %210, i64 0, i32 0
  %212 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %211, align 8
  %213 = icmp eq %"class.std::__1::__tree_node_base"* %212, %207
  br i1 %213, label %230, label %221

214:                                              ; preds = %195, %214
  %215 = phi %"class.std::__1::__tree_node_base"* [ %217, %214 ], [ %204, %195 ]
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %215, i64 0, i32 0, i32 0
  %217 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %216, align 8
  %218 = icmp eq %"class.std::__1::__tree_node_base"* %217, null
  br i1 %218, label %219, label %214

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %215, i64 0, i32 0
  br label %230

221:                                              ; preds = %206, %221
  %222 = phi %"class.std::__1::__tree_end_node"** [ %225, %221 ], [ %209, %206 ]
  %223 = bitcast %"class.std::__1::__tree_end_node"** %222 to %"class.std::__1::__tree_node_base"**
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  %225 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  %226 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %225, align 8
  %227 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %226, i64 0, i32 0
  %228 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %227, align 8
  %229 = icmp eq %"class.std::__1::__tree_node_base"* %228, %224
  br i1 %229, label %230, label %221

230:                                              ; preds = %221, %206, %219
  %231 = phi %"class.std::__1::__tree_end_node"* [ %220, %219 ], [ %210, %206 ], [ %226, %221 ]
  %232 = icmp eq %"class.std::__1::__tree_end_node"* %231, %193
  br i1 %232, label %233, label %195

233:                                              ; preds = %230, %190
  %234 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 4, i32 0, i32 0
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %234, align 8
  %236 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %237 = icmp eq %"class.std::__1::__tree_end_node"* %235, %236
  br i1 %237, label %276, label %238

238:                                              ; preds = %233, %273
  %239 = phi %"class.std::__1::__tree_end_node"* [ %274, %273 ], [ %235, %233 ]
  %240 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %239, i64 4
  %241 = bitcast %"class.std::__1::__tree_end_node"* %240 to i8**
  %242 = load i8*, i8** %241, align 8
  %243 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %239, i64 5
  %244 = bitcast %"class.std::__1::__tree_end_node"* %243 to i8**
  %245 = load i8*, i8** %244, align 8
  tail call fastcc void @_ZN2sh12_GLOBAL__N_120RoundingHelperWriter29writeCompoundAssignmentHelperERNS_13TInfoSinkBaseEPKcS5_S5_S5_(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* %22, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i8* %242, i8* %245, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  %246 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %239, i64 1, i32 0
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %246, align 8
  %248 = icmp eq %"class.std::__1::__tree_node_base"* %247, null
  br i1 %248, label %249, label %257

249:                                              ; preds = %238
  %250 = bitcast %"class.std::__1::__tree_end_node"* %239 to %"class.std::__1::__tree_node_base"*
  %251 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %239, i64 2
  %252 = bitcast %"class.std::__1::__tree_end_node"* %251 to %"class.std::__1::__tree_end_node"**
  %253 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %252, align 8
  %254 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %253, i64 0, i32 0
  %255 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %254, align 8
  %256 = icmp eq %"class.std::__1::__tree_node_base"* %255, %250
  br i1 %256, label %273, label %264

257:                                              ; preds = %238, %257
  %258 = phi %"class.std::__1::__tree_node_base"* [ %260, %257 ], [ %247, %238 ]
  %259 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %258, i64 0, i32 0, i32 0
  %260 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %259, align 8
  %261 = icmp eq %"class.std::__1::__tree_node_base"* %260, null
  br i1 %261, label %262, label %257

262:                                              ; preds = %257
  %263 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %258, i64 0, i32 0
  br label %273

264:                                              ; preds = %249, %264
  %265 = phi %"class.std::__1::__tree_end_node"** [ %268, %264 ], [ %252, %249 ]
  %266 = bitcast %"class.std::__1::__tree_end_node"** %265 to %"class.std::__1::__tree_node_base"**
  %267 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %266, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %267, i64 0, i32 2
  %269 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %268, align 8
  %270 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %269, i64 0, i32 0
  %271 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %270, align 8
  %272 = icmp eq %"class.std::__1::__tree_node_base"* %271, %267
  br i1 %272, label %273, label %264

273:                                              ; preds = %264, %249, %262
  %274 = phi %"class.std::__1::__tree_end_node"* [ %263, %262 ], [ %253, %249 ], [ %269, %264 ]
  %275 = icmp eq %"class.std::__1::__tree_end_node"* %274, %236
  br i1 %275, label %276, label %238

276:                                              ; preds = %273, %233
  %277 = bitcast i8* %21 to void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*)***
  %278 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*)*** %277, align 8
  %279 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*)** %278, i64 1
  %280 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriter"*)** %279, align 8
  tail call void %280(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* nonnull %22) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2sh12_GLOBAL__N_120RoundingHelperWriter29writeCompoundAssignmentHelperERNS_13TInfoSinkBaseEPKcS5_S5_S5_(%"class.sh::(anonymous namespace)::RoundingHelperWriter"*, %"class.sh::TInfoSinkBase"* dereferenceable(48), i8*, i8*, i8*, i8*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::basic_string.84", align 8
  %8 = alloca %"class.std::__1::basic_string.84", align 8
  %9 = bitcast %"class.std::__1::basic_string.84"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.sh::(anonymous namespace)::RoundingHelperWriter"* %0 to void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriter"*, i8*)***
  %13 = bitcast %"class.std::__1::basic_string.84"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  %14 = load void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriter"*, i8*)**, void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriter"*, i8*)*** %12, align 8
  %15 = getelementptr inbounds void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriter"*, i8*)*, void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriter"*, i8*)** %14, i64 2
  %16 = load void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriter"*, i8*)*, void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriter"*, i8*)** %15, align 8
  call void %16(%"class.std::__1::basic_string.84"* nonnull sret %7, %"class.sh::(anonymous namespace)::RoundingHelperWriter"* %0, i8* %2) #12
  %17 = bitcast %"class.std::__1::basic_string.84"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string.84"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  %21 = load void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriter"*, i8*)**, void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriter"*, i8*)*** %12, align 8
  %22 = getelementptr inbounds void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriter"*, i8*)*, void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriter"*, i8*)** %21, i64 2
  %23 = load void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriter"*, i8*)*, void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriter"*, i8*)** %22, align 8
  call void %23(%"class.std::__1::basic_string.84"* nonnull sret %8, %"class.sh::(anonymous namespace)::RoundingHelperWriter"* %0, i8* %3) #12
  %24 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %1, i64 0, i32 0
  %25 = bitcast %"class.std::__1::basic_string.84"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = load i8*, i8** %10, align 8
  %30 = load i64, i64* %11, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i8* %29, i8* %9
  %33 = select i1 %28, i64 %30, i64 %31
  %34 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %24, i8* %32, i64 %33) #12
  %35 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %24, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70, i64 0, i64 0)) #12
  %36 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %24, i8* %5) #12
  %37 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %24, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i64 0, i64 0)) #12
  %38 = load i8, i8* %26, align 1
  %39 = icmp slt i8 %38, 0
  %40 = load i8*, i8** %10, align 8
  %41 = load i64, i64* %11, align 8
  %42 = zext i8 %38 to i64
  %43 = select i1 %39, i8* %40, i8* %9
  %44 = select i1 %39, i64 %41, i64 %42
  %45 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %24, i8* %43, i64 %44) #12
  %46 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.72, i64 0, i64 0)) #12
  %47 = bitcast %"class.std::__1::basic_string.84"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = load i8*, i8** %18, align 8
  %52 = load i64, i64* %19, align 8
  %53 = zext i8 %49 to i64
  %54 = select i1 %50, i8* %51, i8* %17
  %55 = select i1 %50, i64 %52, i64 %53
  %56 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %24, i8* %54, i64 %55) #12
  %57 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %24, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.73, i64 0, i64 0)) #12
  %58 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %24, i8* %4) #12
  %59 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %24, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.74, i64 0, i64 0)) #12
  %60 = load i8, i8* %26, align 1
  %61 = icmp slt i8 %60, 0
  %62 = load i8*, i8** %10, align 8
  %63 = load i64, i64* %11, align 8
  %64 = zext i8 %60 to i64
  %65 = select i1 %61, i8* %62, i8* %9
  %66 = select i1 %61, i64 %63, i64 %64
  %67 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %24, i8* %65, i64 %66) #12
  %68 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %24, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70, i64 0, i64 0)) #12
  %69 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %24, i8* %5) #12
  %70 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %24, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i64 0, i64 0)) #12
  %71 = load i8, i8* %26, align 1
  %72 = icmp slt i8 %71, 0
  %73 = load i8*, i8** %10, align 8
  %74 = load i64, i64* %11, align 8
  %75 = zext i8 %71 to i64
  %76 = select i1 %72, i8* %73, i8* %9
  %77 = select i1 %72, i64 %74, i64 %75
  %78 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %24, i8* %76, i64 %77) #12
  %79 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.72, i64 0, i64 0)) #12
  %80 = load i8, i8* %48, align 1
  %81 = icmp slt i8 %80, 0
  %82 = load i8*, i8** %18, align 8
  %83 = load i64, i64* %19, align 8
  %84 = zext i8 %80 to i64
  %85 = select i1 %81, i8* %82, i8* %17
  %86 = select i1 %81, i64 %83, i64 %84
  %87 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %24, i8* %85, i64 %86) #12
  %88 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %24, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.76, i64 0, i64 0)) #12
  %89 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %24, i8* %4) #12
  %90 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %24, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.74, i64 0, i64 0)) #12
  %91 = load i8, i8* %48, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %6
  %94 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %94) #14
  br label %95

95:                                               ; preds = %6, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #12
  %96 = load i8, i8* %26, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %95
  %99 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %99) #14
  br label %100

100:                                              ; preds = %95, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh16EmulatePrecision19SupportedInLanguageE14ShShaderOutput(i32) local_unnamed_addr #0 align 2 {
  switch i32 %0, label %2 [
    i32 35657, label %4
    i32 35653, label %4
    i32 35654, label %4
  ]

2:                                                ; preds = %1
  %3 = tail call zeroext i1 @_ZN2sh16IsGLSL130OrNewerE14ShShaderOutput(i32 %0) #12
  br label %4

4:                                                ; preds = %2, %1, %1, %1
  %5 = phi i1 [ true, %1 ], [ true, %1 ], [ %3, %2 ], [ true, %1 ]
  ret i1 %5
}

declare zeroext i1 @_ZN2sh16IsGLSL130OrNewerE14ShShaderOutput(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TFunction"* @_ZN2sh16EmulatePrecision19getInternalFunctionERKNS_15ImmutableStringERKNS_5TTypeEPNS_7TVectorIPNS_11TIntermNodeEEERKNS7_IPKNS_9TVariableEEEb(%"class.sh::EmulatePrecision"*, %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TType"* dereferenceable(184), %"class.sh::TVector"*, %"class.sh::TVector.76"* nocapture readonly dereferenceable(24), i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::tuple", align 8
  %8 = alloca %"class.std::__1::tuple.129", align 1
  %9 = alloca %"class.std::__1::tuple", align 8
  %10 = alloca %"class.std::__1::tuple.129", align 1
  %11 = alloca %"class.sh::ImmutableString", align 8
  %12 = bitcast %"class.sh::ImmutableString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %11, i64 0, i32 0
  %14 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %11, i64 0, i32 1
  %15 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %1, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  %18 = select i1 %17, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i64 0, i64 0), i8* %16
  %19 = tail call { i8*, i64 } @_ZN2sh15TFunctionLookup14GetMangledNameEPKcRKNS_7TVectorIPNS_11TIntermNodeEEE(i8* %18, %"class.sh::TVector"* dereferenceable(24) %3) #12
  %20 = extractvalue { i8*, i64 } %19, 0
  store i8* %20, i8** %13, align 8
  %21 = extractvalue { i8*, i64 } %19, 1
  store i64 %21, i64* %14, align 8
  %22 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 6, i32 0
  %23 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"class.std::__1::__tree_node"**
  %25 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node"* %25, null
  br i1 %26, label %75, label %27

27:                                               ; preds = %6
  %28 = icmp eq i8* %20, null
  %29 = select i1 %28, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i64 0, i64 0), i8* %20
  br label %30

30:                                               ; preds = %53, %27
  %31 = phi %"class.std::__1::__tree_end_node"* [ %23, %27 ], [ %55, %53 ]
  %32 = phi %"class.std::__1::__tree_node"* [ %25, %27 ], [ %56, %53 ]
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 1, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp ult i64 %34, %21
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 1
  %38 = bitcast %"class.std::__1::__tree_node_base"** %37 to %"class.std::__1::__tree_node"**
  br label %53

39:                                               ; preds = %30
  %40 = icmp ugt i64 %34, %21
  br i1 %40, label %50, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = icmp eq i8* %43, null
  %45 = select i1 %44, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i64 0, i64 0), i8* %43
  %46 = tail call i32 @memcmp(i8* %45, i8* %29, i64 %34) #15
  %47 = icmp slt i32 %46, 0
  %48 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 1
  %49 = bitcast %"class.std::__1::__tree_node_base"** %48 to %"class.std::__1::__tree_node"**
  br i1 %47, label %53, label %50

50:                                               ; preds = %41, %39
  %51 = bitcast %"class.std::__1::__tree_node"* %32 to %"class.std::__1::__tree_node"**
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 0
  br label %53

53:                                               ; preds = %50, %41, %36
  %54 = phi %"class.std::__1::__tree_node"** [ %51, %50 ], [ %38, %36 ], [ %49, %41 ]
  %55 = phi %"class.std::__1::__tree_end_node"* [ %52, %50 ], [ %31, %36 ], [ %31, %41 ]
  %56 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %54, align 8
  %57 = icmp eq %"class.std::__1::__tree_node"* %56, null
  br i1 %57, label %58, label %30

58:                                               ; preds = %53
  %59 = icmp eq %"class.std::__1::__tree_end_node"* %55, %23
  br i1 %59, label %75, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 4
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 5
  %63 = bitcast %"class.std::__1::__tree_end_node"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = icmp ult i64 %21, %64
  br i1 %65, label %75, label %66

66:                                               ; preds = %60
  %67 = icmp ugt i64 %21, %64
  br i1 %67, label %111, label %68

68:                                               ; preds = %66
  %69 = bitcast %"class.std::__1::__tree_end_node"* %61 to i8**
  %70 = load i8*, i8** %69, align 8
  %71 = icmp eq i8* %70, null
  %72 = select i1 %71, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i64 0, i64 0), i8* %70
  %73 = tail call i32 @memcmp(i8* %29, i8* %72, i64 %21) #15
  %74 = icmp slt i32 %73, 0
  br i1 %74, label %75, label %111

75:                                               ; preds = %68, %60, %58, %6
  %76 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #12
  %77 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %76, i64 80) #12
  %78 = bitcast i8* %77 to %"class.sh::TFunction"*
  %79 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 0, i32 8
  %80 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %79, align 8
  %81 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #12
  %82 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %81, i64 184) #12
  %83 = bitcast i8* %82 to %"class.sh::TType"*
  tail call void @_ZN2sh5TTypeC1ERKS0_(%"class.sh::TType"* %83, %"class.sh::TType"* dereferenceable(184) %2) #12
  tail call void @_ZN2sh9TFunctionC1EPNS_12TSymbolTableERKNS_15ImmutableStringENS_10SymbolTypeEPKNS_5TTypeEb(%"class.sh::TFunction"* %78, %"class.sh::TSymbolTable"* %80, %"class.sh::ImmutableString"* dereferenceable(16) %1, i8 zeroext 2, %"class.sh::TType"* %83, i1 zeroext %5) #12
  %84 = getelementptr inbounds %"class.sh::TVector.76", %"class.sh::TVector.76"* %4, i64 0, i32 0, i32 0, i32 1
  %85 = bitcast %"class.sh::TVariable"*** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.sh::TVector.76"* %4 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %86, %88
  br i1 %89, label %90, label %99

90:                                               ; preds = %99, %75
  %91 = getelementptr inbounds %"class.std::__1::map.65", %"class.std::__1::map.65"* %22, i64 0, i32 0
  %92 = bitcast %"class.std::__1::tuple"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #12
  %93 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.sh::ImmutableString"* %11, %"class.sh::ImmutableString"** %93, align 8
  %94 = getelementptr inbounds %"class.std::__1::tuple.129", %"class.std::__1::tuple.129"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %94) #12
  %95 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_9TFunctionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEE14pool_allocatorIS7_EE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.66"* %91, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.129"* nonnull dereferenceable(1) %8) #12
  %96 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %95, 0
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %96, i64 6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %94) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #12
  %98 = bitcast %"class.std::__1::__tree_end_node"* %97 to i8**
  store i8* %77, i8** %98, align 8
  br label %111

99:                                               ; preds = %75, %99
  %100 = phi i64 [ %107, %99 ], [ %88, %75 ]
  %101 = phi i64 [ %105, %99 ], [ 0, %75 ]
  %102 = inttoptr i64 %100 to %"class.sh::TVariable"**
  %103 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %102, i64 %101
  %104 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %103, align 8
  tail call void @_ZN2sh9TFunction12addParameterEPKNS_9TVariableE(%"class.sh::TFunction"* %78, %"class.sh::TVariable"* %104) #12
  %105 = add nuw i64 %101, 1
  %106 = load i64, i64* %85, align 8
  %107 = load i64, i64* %87, align 8
  %108 = sub i64 %106, %107
  %109 = ashr exact i64 %108, 3
  %110 = icmp ult i64 %105, %109
  br i1 %110, label %99, label %90

111:                                              ; preds = %66, %68, %90
  %112 = getelementptr inbounds %"class.std::__1::map.65", %"class.std::__1::map.65"* %22, i64 0, i32 0
  %113 = bitcast %"class.std::__1::tuple"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #12
  %114 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.sh::ImmutableString"* %11, %"class.sh::ImmutableString"** %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::tuple.129", %"class.std::__1::tuple.129"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %115) #12
  %116 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_9TFunctionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEE14pool_allocatorIS7_EE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.66"* %112, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.129"* nonnull dereferenceable(1) %10) #12
  %117 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %116, 0
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 6
  %119 = bitcast %"class.std::__1::__tree_end_node"* %118 to %"class.sh::TFunction"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %115) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #12
  %120 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %119, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #12
  ret %"class.sh::TFunction"* %120
}

declare { i8*, i64 } @_ZN2sh15TFunctionLookup14GetMangledNameEPKcRKNS_7TVectorIPNS_11TIntermNodeEEE(i8*, %"class.sh::TVector"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN2sh5TTypeC1ERKS0_(%"class.sh::TType"*, %"class.sh::TType"* dereferenceable(184)) unnamed_addr #1

declare void @_ZN2sh9TFunctionC1EPNS_12TSymbolTableERKNS_15ImmutableStringENS_10SymbolTypeEPKNS_5TTypeEb(%"class.sh::TFunction"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* dereferenceable(16), i8 zeroext, %"class.sh::TType"*, i1 zeroext) unnamed_addr #1

declare void @_ZN2sh9TFunction12addParameterEPKNS_9TVariableE(%"class.sh::TFunction"*, %"class.sh::TVariable"*) local_unnamed_addr #1

declare void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TType"*, i8 zeroext, i8 zeroext) unnamed_addr #1

declare %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate21CreateRawFunctionCallERKNS_9TFunctionEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TFunction"* dereferenceable(80), %"class.sh::TVector"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* noalias sret) local_unnamed_addr #0 comdat {
  %2 = alloca %"class.std::__1::locale", align 8
  %3 = alloca %"class.std::__1::locale", align 8
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = bitcast %"class.std::__1::basic_stringstream"* %0 to i8*
  %6 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast i64* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 272, i1 false)
  %8 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_stringstream"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %16 = bitcast %"class.std::__1::basic_stringstream"* %0 to i8**
  %17 = inttoptr i64 %13 to i8*
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 %20
  %22 = bitcast i8* %21 to i64*
  store i64 %15, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %23, align 8
  %24 = load i8*, i8** %16, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %5, i64 %27
  %29 = bitcast i8* %28 to %"class.std::__1::ios_base"*
  %30 = bitcast %"class.std::__1::basic_stringbuf"* %11 to i8*
  tail call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %29, i8* %30) #12
  %31 = getelementptr inbounds i8, i8* %28, i64 136
  %32 = bitcast i8* %31 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %28, i64 144
  %34 = bitcast i8* %33 to i32*
  store i32 -1, i32* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 1
  %36 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %37 = bitcast %"class.std::__1::basic_ostream.base"* %35 to i64*
  store i64 %36, i64* %37, align 8
  %38 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %39 = inttoptr i64 %36 to i8*
  %40 = getelementptr i8, i8* %39, i64 -24
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::basic_ostream.base"* %35 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %42
  %45 = bitcast i8* %44 to i64*
  store i64 %38, i64* %45, align 8
  %46 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %46, i64* %14, align 8
  %47 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %48 = inttoptr i64 %46 to i8*
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %5, i64 %51
  %53 = bitcast i8* %52 to i64*
  store i64 %47, i64* %53, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %12) #12
  %54 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1, i32 1
  %56 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1, i32 3
  %57 = bitcast %"class.std::__1::basic_string.84"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 32, i1 false) #12
  store i32 24, i32* %56, align 8
  %58 = load i8*, i8** %16, align 8
  %59 = getelementptr i8, i8* %58, i64 -24
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds i8, i8* %5, i64 %61
  %63 = tail call dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16locale7classicEv() #12
  %64 = bitcast %"class.std::__1::locale"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64)
  %65 = bitcast %"class.std::__1::locale"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65)
  %66 = getelementptr inbounds %"class.std::__1::locale", %"class.std::__1::locale"* %4, i64 0, i32 0
  store %"class.std::__1::locale::__imp"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::locale::__imp"*), %"class.std::__1::locale::__imp"** %66, align 8, !alias.scope !53
  %67 = bitcast i8* %62 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %67) #12
  call void @_ZNSt3__18ios_base5imbueERKNS_6localeE(%"class.std::__1::locale"* nonnull sret %2, %"class.std::__1::ios_base"* %67, %"class.std::__1::locale"* dereferenceable(8) %63) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %2) #12
  %68 = getelementptr inbounds i8, i8* %62, i64 40
  %69 = bitcast i8* %68 to %"class.std::__1::basic_streambuf"**
  %70 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %69, align 8, !noalias !53
  %71 = icmp eq %"class.std::__1::basic_streambuf"* %70, null
  br i1 %71, label %80, label %72

72:                                               ; preds = %1
  %73 = bitcast %"class.std::__1::basic_streambuf"* %70 to void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)***
  %74 = load void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)**, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*** %73, align 8, !noalias !56
  %75 = getelementptr inbounds void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)** %74, i64 2
  %76 = load void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)** %75, align 8, !noalias !56
  call void %76(%"class.std::__1::basic_streambuf"* nonnull %70, %"class.std::__1::locale"* dereferenceable(8) %63) #12, !noalias !56
  %77 = getelementptr inbounds %"class.std::__1::locale", %"class.std::__1::locale"* %3, i64 0, i32 0
  store %"class.std::__1::locale::__imp"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::locale::__imp"*), %"class.std::__1::locale::__imp"** %77, align 8, !alias.scope !56, !noalias !53
  %78 = getelementptr inbounds %"class.std::__1::basic_streambuf", %"class.std::__1::basic_streambuf"* %70, i64 0, i32 1
  call void @_ZNSt3__16localeC1ERKS0_(%"class.std::__1::locale"* nonnull %3, %"class.std::__1::locale"* dereferenceable(8) %78) #12
  %79 = call dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16localeaSERKS0_(%"class.std::__1::locale"* %78, %"class.std::__1::locale"* dereferenceable(8) %63) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %3) #12
  br label %80

80:                                               ; preds = %1, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65)
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16EmulatePrecisionD2Ev(%"class.sh::EmulatePrecision"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh16EmulatePrecisionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_9TFunctionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEE14pool_allocatorIS7_EE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.66"* %3, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 5, i32 0
  %8 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node.119"**
  %10 = load %"class.std::__1::__tree_node.119"*, %"class.std::__1::__tree_node.119"** %9, align 8
  tail call void @_ZNSt3__16__treeIN2sh16EmulatePrecision8TypePairENS2_18TypePairComparatorENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.58"* %7, %"class.std::__1::__tree_node.119"* %10) #12
  %11 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 4, i32 0
  %12 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node.119"**
  %14 = load %"class.std::__1::__tree_node.119"*, %"class.std::__1::__tree_node.119"** %13, align 8
  tail call void @_ZNSt3__16__treeIN2sh16EmulatePrecision8TypePairENS2_18TypePairComparatorENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.58"* %11, %"class.std::__1::__tree_node.119"* %14) #12
  %15 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 3, i32 0
  %16 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node.119"**
  %18 = load %"class.std::__1::__tree_node.119"*, %"class.std::__1::__tree_node.119"** %17, align 8
  tail call void @_ZNSt3__16__treeIN2sh16EmulatePrecision8TypePairENS2_18TypePairComparatorENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.58"* %15, %"class.std::__1::__tree_node.119"* %18) #12
  %19 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 2, i32 0
  %20 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node.119"**
  %22 = load %"class.std::__1::__tree_node.119"*, %"class.std::__1::__tree_node.119"** %21, align 8
  tail call void @_ZNSt3__16__treeIN2sh16EmulatePrecision8TypePairENS2_18TypePairComparatorENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.58"* %19, %"class.std::__1::__tree_node.119"* %22) #12
  %23 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* %23) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16EmulatePrecisionD0Ev(%"class.sh::EmulatePrecision"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh16EmulatePrecisionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_9TFunctionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEE14pool_allocatorIS7_EE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.66"* %3, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 5, i32 0
  %8 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node.119"**
  %10 = load %"class.std::__1::__tree_node.119"*, %"class.std::__1::__tree_node.119"** %9, align 8
  tail call void @_ZNSt3__16__treeIN2sh16EmulatePrecision8TypePairENS2_18TypePairComparatorENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.58"* %7, %"class.std::__1::__tree_node.119"* %10) #12
  %11 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 4, i32 0
  %12 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node.119"**
  %14 = load %"class.std::__1::__tree_node.119"*, %"class.std::__1::__tree_node.119"** %13, align 8
  tail call void @_ZNSt3__16__treeIN2sh16EmulatePrecision8TypePairENS2_18TypePairComparatorENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.58"* %11, %"class.std::__1::__tree_node.119"* %14) #12
  %15 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 3, i32 0
  %16 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node.119"**
  %18 = load %"class.std::__1::__tree_node.119"*, %"class.std::__1::__tree_node.119"** %17, align 8
  tail call void @_ZNSt3__16__treeIN2sh16EmulatePrecision8TypePairENS2_18TypePairComparatorENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.58"* %15, %"class.std::__1::__tree_node.119"* %18) #12
  %19 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 2, i32 0
  %20 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node.119"**
  %22 = load %"class.std::__1::__tree_node.119"*, %"class.std::__1::__tree_node.119"** %21, align 8
  tail call void @_ZNSt3__16__treeIN2sh16EmulatePrecision8TypePairENS2_18TypePairComparatorENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.58"* %19, %"class.std::__1::__tree_node.119"* %22) #12
  %23 = getelementptr inbounds %"class.sh::EmulatePrecision", %"class.sh::EmulatePrecision"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* %23) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwizzle"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermTernary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2sh24TLValueTrackingTraverser14traverseBinaryEPNS_13TIntermBinaryE(%"class.sh::TLValueTrackingTraverser"*, %"class.sh::TIntermBinary"*) unnamed_addr #1

declare void @_ZN2sh24TLValueTrackingTraverser13traverseUnaryEPNS_12TIntermUnaryE(%"class.sh::TLValueTrackingTraverser"*, %"class.sh::TIntermUnary"*) unnamed_addr #1

declare void @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*) unnamed_addr #1

declare void @_ZN2sh24TLValueTrackingTraverser17traverseAggregateEPNS_16TIntermAggregateE(%"class.sh::TLValueTrackingTraverser"*, %"class.sh::TIntermAggregate"*) unnamed_addr #1

declare void @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*) unnamed_addr #1

declare void @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_120RoundingHelperWriterD2Ev(%"class.sh::(anonymous namespace)::RoundingHelperWriter"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterHLSLD0Ev(%"class.sh::(anonymous namespace)::RoundingHelperWriterHLSL"*) unnamed_addr #5 align 2 {
  %2 = bitcast %"class.sh::(anonymous namespace)::RoundingHelperWriterHLSL"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterHLSL13getTypeStringEPKc(%"class.std::__1::basic_string.84"* noalias sret, %"class.sh::(anonymous namespace)::RoundingHelperWriterHLSL"* nocapture readnone, i8* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = tail call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0)) #15
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %43, label %6

6:                                                ; preds = %3
  %7 = tail call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0)) #15
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %43, label %9

9:                                                ; preds = %6
  %10 = tail call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)) #15
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %43, label %12

12:                                               ; preds = %9
  %13 = tail call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0)) #15
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %43, label %15

15:                                               ; preds = %12
  %16 = tail call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #15
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %43, label %18

18:                                               ; preds = %15
  %19 = tail call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0)) #15
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %43, label %21

21:                                               ; preds = %18
  %22 = tail call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0)) #15
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %43, label %24

24:                                               ; preds = %21
  %25 = tail call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0)) #15
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %43, label %27

27:                                               ; preds = %24
  %28 = tail call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0)) #15
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %43, label %30

30:                                               ; preds = %27
  %31 = tail call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0)) #15
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %43, label %33

33:                                               ; preds = %30
  %34 = tail call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #15
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %33
  %37 = tail call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i64 0, i64 0)) #15
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %36
  %40 = tail call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i64 0, i64 0)) #15
  %41 = icmp eq i32 %40, 0
  %42 = select i1 %41, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i64 0, i64 0), i8* null
  br label %43

43:                                               ; preds = %3, %6, %9, %12, %15, %18, %21, %24, %27, %30, %33, %36, %39
  %44 = phi i8* [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0), %3 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0), %6 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0), %9 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0), %12 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i64 0, i64 0), %15 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0), %18 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i64 0, i64 0), %21 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0), %24 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i64 0, i64 0), %27 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0), %30 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i64 0, i64 0), %33 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i64 0, i64 0), %36 ], [ %42, %39 ]
  %45 = tail call i64 @strlen(i8* %44) #12
  %46 = icmp ugt i64 %45, -17
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = bitcast %"class.std::__1::basic_string.84"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %48) #13
  unreachable

49:                                               ; preds = %43
  %50 = icmp ult i64 %45, 23
  br i1 %50, label %59, label %51

51:                                               ; preds = %49
  %52 = add nuw i64 %45, 16
  %53 = and i64 %52, -16
  %54 = tail call i8* @_Znwm(i64 %53) #14
  %55 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %54, i8** %55, align 8
  %56 = or i64 %53, -9223372036854775808
  %57 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %45, i64* %58, align 8
  br label %65

59:                                               ; preds = %49
  %60 = trunc i64 %45 to i8
  %61 = bitcast %"class.std::__1::basic_string.84"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  store i8 %60, i8* %62, align 1
  %63 = bitcast %"class.std::__1::basic_string.84"* %0 to i8*
  %64 = icmp eq i64 %45, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %59, %51
  %66 = phi i8* [ %54, %51 ], [ %63, %59 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %66, i8* align 1 %44, i64 %45, i1 false) #12
  br label %67

67:                                               ; preds = %59, %65
  %68 = phi i8* [ %63, %59 ], [ %66, %65 ]
  %69 = getelementptr inbounds i8, i8* %68, i64 %45
  store i8 0, i8* %69, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterHLSL25writeFloatRoundingHelpersERNS_13TInfoSinkBaseE(%"class.sh::(anonymous namespace)::RoundingHelperWriterHLSL"*, %"class.sh::TInfoSinkBase"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.sh::(anonymous namespace)::RoundingHelperWriterHLSL"* %0 to void (%"class.sh::(anonymous namespace)::RoundingHelperWriterHLSL"*, %"class.sh::TInfoSinkBase"*, i32)***
  %4 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriterHLSL"*, %"class.sh::TInfoSinkBase"*, i32)**, void (%"class.sh::(anonymous namespace)::RoundingHelperWriterHLSL"*, %"class.sh::TInfoSinkBase"*, i32)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.sh::(anonymous namespace)::RoundingHelperWriterHLSL"*, %"class.sh::TInfoSinkBase"*, i32)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriterHLSL"*, %"class.sh::TInfoSinkBase"*, i32)** %4, i64 4
  %6 = load void (%"class.sh::(anonymous namespace)::RoundingHelperWriterHLSL"*, %"class.sh::TInfoSinkBase"*, i32)*, void (%"class.sh::(anonymous namespace)::RoundingHelperWriterHLSL"*, %"class.sh::TInfoSinkBase"*, i32)** %5, align 8
  tail call void %6(%"class.sh::(anonymous namespace)::RoundingHelperWriterHLSL"* %0, %"class.sh::TInfoSinkBase"* dereferenceable(48) %1, i32 1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterHLSL26writeVectorRoundingHelpersERNS_13TInfoSinkBaseEj(%"class.sh::(anonymous namespace)::RoundingHelperWriterHLSL"* nocapture readnone, %"class.sh::TInfoSinkBase"* dereferenceable(48), i32) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::__1::basic_stringstream", align 8
  %6 = alloca %"class.std::__1::basic_string.84", align 8
  store i32 %2, i32* %4, align 4
  %7 = bitcast %"class.std::__1::basic_stringstream"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %7) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 280, i1 false)
  call void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* nonnull sret %5)
  %8 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::basic_ostream.base"* %8 to %"class.std::__1::basic_ostream"*
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0), i64 5) #12
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %10, i32 %2) #12
  %12 = bitcast %"class.std::__1::basic_string.84"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string.84"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.84"* nonnull sret %6, %"class.std::__1::basic_stringbuf"* %15) #12
  %17 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %1, i64 0, i32 0
  %18 = bitcast %"class.std::__1::basic_string.84"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = load i8*, i8** %13, align 8
  %23 = load i64, i64* %14, align 8
  %24 = zext i8 %20 to i64
  %25 = select i1 %21, i8* %22, i8* %12
  %26 = select i1 %21, i64 %23, i64 %24
  %27 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %17, i8* %25, i64 %26) #12
  %28 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.37, i64 0, i64 0)) #12
  %29 = load i8, i8* %19, align 1
  %30 = icmp slt i8 %29, 0
  %31 = load i8*, i8** %13, align 8
  %32 = load i64, i64* %14, align 8
  %33 = zext i8 %29 to i64
  %34 = select i1 %30, i8* %31, i8* %12
  %35 = select i1 %30, i64 %32, i64 %33
  %36 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %17, i8* %34, i64 %35) #12
  %37 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %17, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.38, i64 0, i64 0)) #12
  %38 = load i8, i8* %19, align 1
  %39 = icmp slt i8 %38, 0
  %40 = load i8*, i8** %13, align 8
  %41 = load i64, i64* %14, align 8
  %42 = zext i8 %38 to i64
  %43 = select i1 %39, i8* %40, i8* %12
  %44 = select i1 %39, i64 %41, i64 %42
  %45 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %17, i8* %43, i64 %44) #12
  %46 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %17, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.39, i64 0, i64 0)) #12
  %47 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIjEERS0_RKT_(%"class.sh::TInfoSinkBase"* %1, i32* nonnull dereferenceable(4) %4)
  %48 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %47, i64 0, i32 0
  %49 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %48, i8* getelementptr inbounds ([132 x i8], [132 x i8]* @.str.40, i64 0, i64 0)) #12
  %50 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIjEERS0_RKT_(%"class.sh::TInfoSinkBase"* %47, i32* nonnull dereferenceable(4) %4)
  %51 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %50, i64 0, i32 0
  %52 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %51, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.41, i64 0, i64 0)) #12
  %53 = load i8, i8* %19, align 1
  %54 = icmp slt i8 %53, 0
  %55 = load i8*, i8** %13, align 8
  %56 = load i64, i64* %14, align 8
  %57 = zext i8 %53 to i64
  %58 = select i1 %54, i8* %55, i8* %12
  %59 = select i1 %54, i64 %56, i64 %57
  %60 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %17, i8* %58, i64 %59) #12
  %61 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.42, i64 0, i64 0)) #12
  %62 = load i8, i8* %19, align 1
  %63 = icmp slt i8 %62, 0
  %64 = load i8*, i8** %13, align 8
  %65 = load i64, i64* %14, align 8
  %66 = zext i8 %62 to i64
  %67 = select i1 %63, i8* %64, i8* %12
  %68 = select i1 %63, i64 %65, i64 %66
  %69 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %17, i8* %67, i64 %68) #12
  %70 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %17, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @.str.43, i64 0, i64 0)) #12
  %71 = load i8, i8* %19, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %3
  %74 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %3, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #12
  %76 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %77 = bitcast %"class.std::__1::basic_stringstream"* %5 to i64*
  store i64 %76, i64* %77, align 8
  %78 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %79 = inttoptr i64 %76 to i8*
  %80 = getelementptr i8, i8* %79, i64 -24
  %81 = bitcast i8* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds i8, i8* %7, i64 %82
  %84 = bitcast i8* %83 to i64*
  store i64 %78, i64* %84, align 8
  %85 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %86 = bitcast %"class.std::__1::basic_ostream.base"* %8 to i64*
  store i64 %85, i64* %86, align 8
  %87 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %15, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %87, align 8
  %88 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1, i32 1
  %89 = bitcast %"class.std::__1::basic_string.84"* %88 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %75
  %94 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #14
  br label %96

96:                                               ; preds = %75, %93
  %97 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %15, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %97) #12
  %98 = bitcast %"class.std::__1::basic_stringstream"* %5 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %98, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #12
  %99 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 2
  %100 = bitcast %"class.std::__1::basic_ios.base"* %99 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %100) #12
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterHLSL25writeMatrixRoundingHelperERNS_13TInfoSinkBaseEjjPKc(%"class.sh::(anonymous namespace)::RoundingHelperWriterHLSL"* nocapture readnone, %"class.sh::TInfoSinkBase"* dereferenceable(48), i32, i32, i8*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_stringstream", align 8
  %7 = alloca %"class.std::__1::basic_string.84", align 8
  %8 = alloca i32, align 4
  %9 = bitcast %"class.std::__1::basic_stringstream"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %9) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 280, i1 false)
  call void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* nonnull sret %6)
  %10 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %6, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_ostream.base"* %10 to %"class.std::__1::basic_ostream"*
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0), i64 5) #12
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %12, i32 %2) #12
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44, i64 0, i64 0), i64 1) #12
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %14, i32 %3) #12
  %16 = bitcast %"class.std::__1::basic_string.84"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %6, i64 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string.84"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.84"* nonnull sret %7, %"class.std::__1::basic_stringbuf"* %19) #12
  %21 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %1, i64 0, i32 0
  %22 = bitcast %"class.std::__1::basic_string.84"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i8*, i8** %17, align 8
  %27 = load i64, i64* %18, align 8
  %28 = zext i8 %24 to i64
  %29 = select i1 %25, i8* %26, i8* %16
  %30 = select i1 %25, i64 %27, i64 %28
  %31 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %21, i8* %29, i64 %30) #12
  %32 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #12
  %33 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %21, i8* %4) #12
  %34 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.46, i64 0, i64 0)) #12
  %35 = load i8, i8* %23, align 1
  %36 = icmp slt i8 %35, 0
  %37 = load i8*, i8** %17, align 8
  %38 = load i64, i64* %18, align 8
  %39 = zext i8 %35 to i64
  %40 = select i1 %36, i8* %37, i8* %16
  %41 = select i1 %36, i64 %38, i64 %39
  %42 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %21, i8* %40, i64 %41) #12
  %43 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %21, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0)) #12
  %44 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0)) #12
  %45 = load i8, i8* %23, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i8*, i8** %17, align 8
  %48 = load i64, i64* %18, align 8
  %49 = zext i8 %45 to i64
  %50 = select i1 %46, i8* %47, i8* %16
  %51 = select i1 %46, i64 %48, i64 %49
  %52 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %21, i8* %50, i64 %51) #12
  %53 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %21, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.49, i64 0, i64 0)) #12
  %54 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #12
  store i32 0, i32* %8, align 4
  %55 = icmp eq i32 %2, 0
  br i1 %55, label %56, label %88

56:                                               ; preds = %88, %5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #12
  %57 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %21, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.54, i64 0, i64 0)) #12
  %58 = load i8, i8* %23, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %56
  %61 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %61) #14
  br label %62

62:                                               ; preds = %56, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  %63 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %64 = bitcast %"class.std::__1::basic_stringstream"* %6 to i64*
  store i64 %63, i64* %64, align 8
  %65 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %66 = inttoptr i64 %63 to i8*
  %67 = getelementptr i8, i8* %66, i64 -24
  %68 = bitcast i8* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds i8, i8* %9, i64 %69
  %71 = bitcast i8* %70 to i64*
  store i64 %65, i64* %71, align 8
  %72 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %73 = bitcast %"class.std::__1::basic_ostream.base"* %10 to i64*
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %19, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %74, align 8
  %75 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %6, i64 0, i32 1, i32 1
  %76 = bitcast %"class.std::__1::basic_string.84"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %62
  %81 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  call void @_ZdlPv(i8* %82) #14
  br label %83

83:                                               ; preds = %62, %80
  %84 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %19, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %84) #12
  %85 = bitcast %"class.std::__1::basic_stringstream"* %6 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %85, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #12
  %86 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %6, i64 0, i32 2
  %87 = bitcast %"class.std::__1::basic_ios.base"* %86 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %87) #12
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %9) #12
  ret void

88:                                               ; preds = %5, %88
  %89 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %21, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.50, i64 0, i64 0)) #12
  %90 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIjEERS0_RKT_(%"class.sh::TInfoSinkBase"* %1, i32* nonnull dereferenceable(4) %8)
  %91 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %90, i64 0, i32 0
  %92 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %91, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #12
  %93 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %91, i8* %4) #12
  %94 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %91, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.52, i64 0, i64 0)) #12
  %95 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIjEERS0_RKT_(%"class.sh::TInfoSinkBase"* %90, i32* nonnull dereferenceable(4) %8)
  %96 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %95, i64 0, i32 0
  %97 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %96, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0)) #12
  %98 = load i32, i32* %8, align 4
  %99 = add i32 %98, 1
  store i32 %99, i32* %8, align 4
  %100 = icmp ult i32 %99, %2
  br i1 %100, label %88, label %56
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIjEERS0_RKT_(%"class.sh::TInfoSinkBase"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::locale", align 8
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::locale", align 8
  %6 = alloca %"class.std::__1::basic_ostringstream", align 8
  %7 = alloca %"class.std::__1::basic_string.84", align 8
  %8 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %8) #12
  %9 = bitcast %"class.std::__1::locale"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_stringbuf"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -86, i64 256, i1 false) #12, !alias.scope !59
  %12 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 2, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %12, align 8, !alias.scope !59
  %14 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %10, i64 0, i32 0
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8, !noalias !59
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i64*
  store i64 %15, i64* %16, align 8, !alias.scope !59
  %17 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8, !noalias !59
  %18 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i8**
  %19 = inttoptr i64 %15 to i8*
  %20 = getelementptr i8, i8* %19, i64 -24
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8, !noalias !59
  %23 = getelementptr inbounds i8, i8* %8, i64 %22
  %24 = bitcast i8* %23 to i64*
  store i64 %17, i64* %24, align 8, !alias.scope !59
  %25 = load i8*, i8** %18, align 8, !alias.scope !59
  %26 = getelementptr i8, i8* %25, i64 -24
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !59
  %29 = getelementptr inbounds i8, i8* %8, i64 %28
  %30 = bitcast i8* %29 to %"class.std::__1::ios_base"*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %30, i8* %11) #12
  %31 = getelementptr inbounds i8, i8* %29, i64 136
  %32 = bitcast i8* %31 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %32, align 8, !alias.scope !59
  %33 = getelementptr inbounds i8, i8* %29, i64 144
  %34 = bitcast i8* %33 to i32*
  store i32 -1, i32* %34, align 8, !alias.scope !59
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %13, align 8, !alias.scope !59
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %12, align 8, !alias.scope !59
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %14) #12
  %35 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8, !alias.scope !59
  %36 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 1, i32 1
  %37 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 1, i32 3
  %38 = bitcast %"class.std::__1::basic_string.84"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 32, i1 false) #12, !alias.scope !59
  store i32 16, i32* %37, align 8, !alias.scope !59
  %39 = load i8*, i8** %18, align 8, !alias.scope !59
  %40 = getelementptr i8, i8* %39, i64 -24
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds i8, i8* %8, i64 %42
  %44 = call dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16locale7classicEv() #12
  %45 = bitcast %"class.std::__1::locale"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45)
  %46 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46)
  %47 = getelementptr inbounds %"class.std::__1::locale", %"class.std::__1::locale"* %5, i64 0, i32 0
  store %"class.std::__1::locale::__imp"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::locale::__imp"*), %"class.std::__1::locale::__imp"** %47, align 8, !alias.scope !62
  %48 = bitcast i8* %43 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %5, %"class.std::__1::ios_base"* %48) #12
  call void @_ZNSt3__18ios_base5imbueERKNS_6localeE(%"class.std::__1::locale"* nonnull sret %3, %"class.std::__1::ios_base"* %48, %"class.std::__1::locale"* dereferenceable(8) %44) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %3) #12
  %49 = getelementptr inbounds i8, i8* %43, i64 40
  %50 = bitcast i8* %49 to %"class.std::__1::basic_streambuf"**
  %51 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %50, align 8, !noalias !62
  %52 = icmp eq %"class.std::__1::basic_streambuf"* %51, null
  br i1 %52, label %61, label %53

53:                                               ; preds = %2
  %54 = bitcast %"class.std::__1::basic_streambuf"* %51 to void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)***
  %55 = load void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)**, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*** %54, align 8, !noalias !65
  %56 = getelementptr inbounds void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)** %55, i64 2
  %57 = load void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)** %56, align 8, !noalias !65
  call void %57(%"class.std::__1::basic_streambuf"* nonnull %51, %"class.std::__1::locale"* dereferenceable(8) %44) #12, !noalias !65
  %58 = getelementptr inbounds %"class.std::__1::locale", %"class.std::__1::locale"* %4, i64 0, i32 0
  store %"class.std::__1::locale::__imp"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::locale::__imp"*), %"class.std::__1::locale::__imp"** %58, align 8, !alias.scope !65, !noalias !62
  %59 = getelementptr inbounds %"class.std::__1::basic_streambuf", %"class.std::__1::basic_streambuf"* %51, i64 0, i32 1
  call void @_ZNSt3__16localeC1ERKS0_(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale"* dereferenceable(8) %59) #12
  %60 = call dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16localeaSERKS0_(%"class.std::__1::locale"* %59, %"class.std::__1::locale"* dereferenceable(8) %44) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  br label %61

61:                                               ; preds = %2, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46)
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  %62 = bitcast %"class.std::__1::basic_ostringstream"* %6 to %"class.std::__1::basic_ostream"*
  %63 = load i32, i32* %1, align 4
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* nonnull %62, i32 %63) #12
  %65 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %0, i64 0, i32 0
  %66 = bitcast %"class.std::__1::basic_string.84"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #12
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.84"* nonnull sret %7, %"class.std::__1::basic_stringbuf"* %10) #12
  %67 = bitcast %"class.std::__1::basic_string.84"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  %71 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = zext i8 %69 to i64
  %76 = select i1 %70, i8* %72, i8* %66
  %77 = select i1 %70, i64 %74, i64 %75
  %78 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %65, i8* %76, i64 %77) #12
  %79 = load i8, i8* %68, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %61
  %82 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %82) #14
  br label %83

83:                                               ; preds = %61, %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #12
  %84 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %84, i64* %16, align 8
  %85 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %86 = inttoptr i64 %84 to i8*
  %87 = getelementptr i8, i8* %86, i64 -24
  %88 = bitcast i8* %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds i8, i8* %8, i64 %89
  %91 = bitcast i8* %90 to i64*
  store i64 %85, i64* %91, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %92 = bitcast %"class.std::__1::basic_string.84"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %83
  %97 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  call void @_ZdlPv(i8* %98) #14
  br label %99

99:                                               ; preds = %83, %96
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %14) #12
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %62, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #12
  %100 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 2
  %101 = bitcast %"class.std::__1::basic_ios.base"* %100 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %101) #12
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %8) #12
  ret %"class.sh::TInfoSinkBase"* %0
}

declare dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"*, i8*) local_unnamed_addr #1

declare dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16locale7classicEv() local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #11

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #1

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #1

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5imbueERKNS_6localeE(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*, %"class.std::__1::locale"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeC1ERKS0_(%"class.std::__1::locale"*, %"class.std::__1::locale"* dereferenceable(8)) unnamed_addr #11

; Function Attrs: nounwind
declare dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16localeaSERKS0_(%"class.std::__1::locale"*, %"class.std::__1::locale"* dereferenceable(8)) local_unnamed_addr #11

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.84"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterESSLD0Ev(%"class.sh::(anonymous namespace)::RoundingHelperWriterESSL"*) unnamed_addr #5 align 2 {
  %2 = bitcast %"class.sh::(anonymous namespace)::RoundingHelperWriterESSL"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterESSL13getTypeStringEPKc(%"class.std::__1::basic_string.84"* noalias sret, %"class.sh::(anonymous namespace)::RoundingHelperWriterESSL"* nocapture readnone, i8*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_stringstream", align 8
  %5 = bitcast %"class.std::__1::basic_stringstream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %5) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 280, i1 false)
  call void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* nonnull sret %4)
  %6 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_ostream.base"* %6 to %"class.std::__1::basic_ostream"*
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i64 0, i64 0), i64 6) #12
  %9 = call i64 @strlen(i8* %2) #12
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %8, i8* %2, i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 1
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.84"* sret %0, %"class.std::__1::basic_stringbuf"* %11) #12
  %12 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %13 = bitcast %"class.std::__1::basic_stringstream"* %4 to i64*
  store i64 %12, i64* %13, align 8
  %14 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %15 = inttoptr i64 %12 to i8*
  %16 = getelementptr i8, i8* %15, i64 -24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds i8, i8* %5, i64 %18
  %20 = bitcast i8* %19 to i64*
  store i64 %14, i64* %20, align 8
  %21 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %22 = bitcast %"class.std::__1::basic_ostream.base"* %6 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 1, i32 1
  %25 = bitcast %"class.std::__1::basic_string.84"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #14
  br label %32

32:                                               ; preds = %3, %29
  %33 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %33) #12
  %34 = bitcast %"class.std::__1::basic_stringstream"* %4 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %34, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #12
  %35 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 2
  %36 = bitcast %"class.std::__1::basic_ios.base"* %35 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %36) #12
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterGLSL25writeFloatRoundingHelpersERNS_13TInfoSinkBaseE(%"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, %"class.sh::TInfoSinkBase"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.84", align 8
  %4 = bitcast %"class.std::__1::basic_string.84"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"* %0 to void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, i8*)***
  %8 = bitcast %"class.std::__1::basic_string.84"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  %9 = load void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, i8*)**, void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, i8*)*** %7, align 8
  %10 = getelementptr inbounds void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, i8*)*, void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, i8*)** %9, i64 2
  %11 = load void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, i8*)*, void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, i8*)** %10, align 8
  call void %11(%"class.std::__1::basic_string.84"* nonnull sret %3, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0)) #12
  %12 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %1, i64 0, i32 0
  %13 = bitcast %"class.std::__1::basic_string.84"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = load i8*, i8** %5, align 8
  %18 = load i64, i64* %6, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i8* %17, i8* %4
  %21 = select i1 %16, i64 %18, i64 %19
  %22 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %12, i8* %20, i64 %21) #12
  %23 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.56, i64 0, i64 0)) #12
  %24 = load i8, i8* %14, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i8*, i8** %5, align 8
  %27 = load i64, i64* %6, align 8
  %28 = zext i8 %24 to i64
  %29 = select i1 %25, i8* %26, i8* %4
  %30 = select i1 %25, i64 %27, i64 %28
  %31 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %12, i8* %29, i64 %30) #12
  %32 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %12, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.57, i64 0, i64 0)) #12
  %33 = load i8, i8* %14, align 1
  %34 = icmp slt i8 %33, 0
  %35 = load i8*, i8** %5, align 8
  %36 = load i64, i64* %6, align 8
  %37 = zext i8 %33 to i64
  %38 = select i1 %34, i8* %35, i8* %4
  %39 = select i1 %34, i64 %36, i64 %37
  %40 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %12, i8* %38, i64 %39) #12
  %41 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %12, i8* getelementptr inbounds ([205 x i8], [205 x i8]* @.str.58, i64 0, i64 0)) #12
  %42 = load i8, i8* %14, align 1
  %43 = icmp slt i8 %42, 0
  %44 = load i8*, i8** %5, align 8
  %45 = load i64, i64* %6, align 8
  %46 = zext i8 %42 to i64
  %47 = select i1 %43, i8* %44, i8* %4
  %48 = select i1 %43, i64 %45, i64 %46
  %49 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %12, i8* %47, i64 %48) #12
  %50 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.59, i64 0, i64 0)) #12
  %51 = load i8, i8* %14, align 1
  %52 = icmp slt i8 %51, 0
  %53 = load i8*, i8** %5, align 8
  %54 = load i64, i64* %6, align 8
  %55 = zext i8 %51 to i64
  %56 = select i1 %52, i8* %53, i8* %4
  %57 = select i1 %52, i64 %54, i64 %55
  %58 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %12, i8* %56, i64 %57) #12
  %59 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %12, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @.str.60, i64 0, i64 0)) #12
  %60 = load i8, i8* %14, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %2
  %63 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %63) #14
  br label %64

64:                                               ; preds = %2, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterGLSL26writeVectorRoundingHelpersERNS_13TInfoSinkBaseEj(%"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, %"class.sh::TInfoSinkBase"* dereferenceable(48), i32) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::__1::basic_stringstream", align 8
  %6 = alloca %"class.std::__1::basic_string.84", align 8
  %7 = alloca %"class.std::__1::basic_string.84", align 8
  store i32 %2, i32* %4, align 4
  %8 = bitcast %"class.std::__1::basic_stringstream"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %8) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 280, i1 false)
  call void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* nonnull sret %5)
  %9 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::basic_ostream.base"* %9 to %"class.std::__1::basic_ostream"*
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i64 0, i64 0), i64 3) #12
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %11, i32 %2) #12
  %13 = bitcast %"class.std::__1::basic_string.84"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string.84"* %7 to i8*
  %17 = bitcast %"class.std::__1::basic_string.84"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  %18 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.84"* nonnull sret %7, %"class.std::__1::basic_stringbuf"* %18) #12
  %19 = bitcast %"class.std::__1::basic_string.84"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = select i1 %22, i8* %24, i8* %16
  %26 = bitcast %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"* %0 to void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, i8*)***
  %27 = load void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, i8*)**, void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, i8*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, i8*)*, void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, i8*)** %27, i64 2
  %29 = load void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, i8*)*, void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, i8*)** %28, align 8
  call void %29(%"class.std::__1::basic_string.84"* nonnull sret %6, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"* %0, i8* %25) #12
  %30 = load i8, i8* %20, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %3
  %33 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %33) #14
  br label %34

34:                                               ; preds = %3, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  %35 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %1, i64 0, i32 0
  %36 = bitcast %"class.std::__1::basic_string.84"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  %40 = load i8*, i8** %14, align 8
  %41 = load i64, i64* %15, align 8
  %42 = zext i8 %38 to i64
  %43 = select i1 %39, i8* %40, i8* %13
  %44 = select i1 %39, i64 %41, i64 %42
  %45 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %35, i8* %43, i64 %44) #12
  %46 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %35, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.56, i64 0, i64 0)) #12
  %47 = load i8, i8* %37, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i8*, i8** %14, align 8
  %50 = load i64, i64* %15, align 8
  %51 = zext i8 %47 to i64
  %52 = select i1 %48, i8* %49, i8* %13
  %53 = select i1 %48, i64 %50, i64 %51
  %54 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %35, i8* %52, i64 %53) #12
  %55 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %35, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.38, i64 0, i64 0)) #12
  %56 = load i8, i8* %37, align 1
  %57 = icmp slt i8 %56, 0
  %58 = load i8*, i8** %14, align 8
  %59 = load i64, i64* %15, align 8
  %60 = zext i8 %56 to i64
  %61 = select i1 %57, i8* %58, i8* %13
  %62 = select i1 %57, i64 %59, i64 %60
  %63 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %35, i8* %61, i64 %62) #12
  %64 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %35, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.62, i64 0, i64 0)) #12
  %65 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIjEERS0_RKT_(%"class.sh::TInfoSinkBase"* %1, i32* nonnull dereferenceable(4) %4)
  %66 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %65, i64 0, i32 0
  %67 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %66, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.63, i64 0, i64 0)) #12
  %68 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIjEERS0_RKT_(%"class.sh::TInfoSinkBase"* %65, i32* nonnull dereferenceable(4) %4)
  %69 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %68, i64 0, i32 0
  %70 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %69, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.64, i64 0, i64 0)) #12
  %71 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIjEERS0_RKT_(%"class.sh::TInfoSinkBase"* %68, i32* nonnull dereferenceable(4) %4)
  %72 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %71, i64 0, i32 0
  %73 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %72, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.65, i64 0, i64 0)) #12
  %74 = load i8, i8* %37, align 1
  %75 = icmp slt i8 %74, 0
  %76 = load i8*, i8** %14, align 8
  %77 = load i64, i64* %15, align 8
  %78 = zext i8 %74 to i64
  %79 = select i1 %75, i8* %76, i8* %13
  %80 = select i1 %75, i64 %77, i64 %78
  %81 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %35, i8* %79, i64 %80) #12
  %82 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %35, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.59, i64 0, i64 0)) #12
  %83 = load i8, i8* %37, align 1
  %84 = icmp slt i8 %83, 0
  %85 = load i8*, i8** %14, align 8
  %86 = load i64, i64* %15, align 8
  %87 = zext i8 %83 to i64
  %88 = select i1 %84, i8* %85, i8* %13
  %89 = select i1 %84, i64 %86, i64 %87
  %90 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %35, i8* %88, i64 %89) #12
  %91 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %35, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @.str.43, i64 0, i64 0)) #12
  %92 = load i8, i8* %37, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %34
  %95 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %95) #14
  br label %96

96:                                               ; preds = %34, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  %97 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %98 = bitcast %"class.std::__1::basic_stringstream"* %5 to i64*
  store i64 %97, i64* %98, align 8
  %99 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %100 = inttoptr i64 %97 to i8*
  %101 = getelementptr i8, i8* %100, i64 -24
  %102 = bitcast i8* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds i8, i8* %8, i64 %103
  %105 = bitcast i8* %104 to i64*
  store i64 %99, i64* %105, align 8
  %106 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %107 = bitcast %"class.std::__1::basic_ostream.base"* %9 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %18, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1, i32 1
  %110 = bitcast %"class.std::__1::basic_string.84"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %96
  %115 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  call void @_ZdlPv(i8* %116) #14
  br label %117

117:                                              ; preds = %96, %114
  %118 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %18, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %118) #12
  %119 = bitcast %"class.std::__1::basic_stringstream"* %5 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %119, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #12
  %120 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 2
  %121 = bitcast %"class.std::__1::basic_ios.base"* %120 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %121) #12
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterGLSL25writeMatrixRoundingHelperERNS_13TInfoSinkBaseEjjPKc(%"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, %"class.sh::TInfoSinkBase"* dereferenceable(48), i32, i32, i8*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_stringstream", align 8
  %7 = alloca %"class.std::__1::basic_string.84", align 8
  %8 = alloca %"class.std::__1::basic_string.84", align 8
  %9 = alloca i32, align 4
  %10 = bitcast %"class.std::__1::basic_stringstream"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %10) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 280, i1 false)
  call void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* nonnull sret %6)
  %11 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %6, i64 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_ostream.base"* %11 to %"class.std::__1::basic_ostream"*
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i64 0, i64 0), i64 3) #12
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %13, i32 %2) #12
  %15 = icmp eq i32 %3, %2
  br i1 %15, label %19, label %16

16:                                               ; preds = %5
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44, i64 0, i64 0), i64 1) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %17, i32 %3) #12
  br label %19

19:                                               ; preds = %5, %16
  %20 = bitcast %"class.std::__1::basic_string.84"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string.84"* %8 to i8*
  %24 = bitcast %"class.std::__1::basic_string.84"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #12
  %25 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %6, i64 0, i32 1
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.84"* nonnull sret %8, %"class.std::__1::basic_stringbuf"* %25) #12
  %26 = bitcast %"class.std::__1::basic_string.84"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = select i1 %29, i8* %31, i8* %23
  %33 = bitcast %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"* %0 to void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, i8*)***
  %34 = load void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, i8*)**, void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, i8*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, i8*)*, void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, i8*)** %34, i64 2
  %36 = load void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, i8*)*, void (%"class.std::__1::basic_string.84"*, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*, i8*)** %35, align 8
  call void %36(%"class.std::__1::basic_string.84"* nonnull sret %7, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"* %0, i8* %32) #12
  %37 = load i8, i8* %27, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %19
  %40 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %40) #14
  br label %41

41:                                               ; preds = %19, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #12
  %42 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %1, i64 0, i32 0
  %43 = bitcast %"class.std::__1::basic_string.84"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i8*, i8** %21, align 8
  %48 = load i64, i64* %22, align 8
  %49 = zext i8 %45 to i64
  %50 = select i1 %46, i8* %47, i8* %20
  %51 = select i1 %46, i64 %48, i64 %49
  %52 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %42, i8* %50, i64 %51) #12
  %53 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %42, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)) #12
  %54 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %42, i8* %4) #12
  %55 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %42, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0)) #12
  %56 = load i8, i8* %44, align 1
  %57 = icmp slt i8 %56, 0
  %58 = load i8*, i8** %21, align 8
  %59 = load i64, i64* %22, align 8
  %60 = zext i8 %56 to i64
  %61 = select i1 %57, i8* %58, i8* %20
  %62 = select i1 %57, i64 %59, i64 %60
  %63 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %42, i8* %61, i64 %62) #12
  %64 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %42, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0)) #12
  %65 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %42, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0)) #12
  %66 = load i8, i8* %44, align 1
  %67 = icmp slt i8 %66, 0
  %68 = load i8*, i8** %21, align 8
  %69 = load i64, i64* %22, align 8
  %70 = zext i8 %66 to i64
  %71 = select i1 %67, i8* %68, i8* %20
  %72 = select i1 %67, i64 %69, i64 %70
  %73 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string.84"* %42, i8* %71, i64 %72) #12
  %74 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %42, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.49, i64 0, i64 0)) #12
  %75 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75) #12
  store i32 0, i32* %9, align 4
  %76 = icmp eq i32 %2, 0
  br i1 %76, label %77, label %109

77:                                               ; preds = %109, %41
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %75) #12
  %78 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %42, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.54, i64 0, i64 0)) #12
  %79 = load i8, i8* %44, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  %82 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %82) #14
  br label %83

83:                                               ; preds = %77, %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #12
  %84 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %85 = bitcast %"class.std::__1::basic_stringstream"* %6 to i64*
  store i64 %84, i64* %85, align 8
  %86 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %87 = inttoptr i64 %84 to i8*
  %88 = getelementptr i8, i8* %87, i64 -24
  %89 = bitcast i8* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds i8, i8* %10, i64 %90
  %92 = bitcast i8* %91 to i64*
  store i64 %86, i64* %92, align 8
  %93 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %94 = bitcast %"class.std::__1::basic_ostream.base"* %11 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %25, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %6, i64 0, i32 1, i32 1
  %97 = bitcast %"class.std::__1::basic_string.84"* %96 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %83
  %102 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  call void @_ZdlPv(i8* %103) #14
  br label %104

104:                                              ; preds = %83, %101
  %105 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %25, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %105) #12
  %106 = bitcast %"class.std::__1::basic_stringstream"* %6 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %106, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #12
  %107 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %6, i64 0, i32 2
  %108 = bitcast %"class.std::__1::basic_ios.base"* %107 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %108) #12
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %10) #12
  ret void

109:                                              ; preds = %41, %109
  %110 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %42, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.50, i64 0, i64 0)) #12
  %111 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIjEERS0_RKT_(%"class.sh::TInfoSinkBase"* %1, i32* nonnull dereferenceable(4) %9)
  %112 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %111, i64 0, i32 0
  %113 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %112, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #12
  %114 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %112, i8* %4) #12
  %115 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %112, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.52, i64 0, i64 0)) #12
  %116 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIjEERS0_RKT_(%"class.sh::TInfoSinkBase"* %111, i32* nonnull dereferenceable(4) %9)
  %117 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %116, i64 0, i32 0
  %118 = call dereferenceable(24) %"class.std::__1::basic_string.84"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.84"* %117, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0)) #12
  %119 = load i32, i32* %9, align 4
  %120 = add i32 %119, 1
  store i32 %120, i32* %9, align 4
  %121 = icmp ult i32 %120, %2
  br i1 %121, label %109, label %77
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterGLSLD0Ev(%"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"*) unnamed_addr #5 align 2 {
  %2 = bitcast %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_124RoundingHelperWriterGLSL13getTypeStringEPKc(%"class.std::__1::basic_string.84"* noalias sret, %"class.sh::(anonymous namespace)::RoundingHelperWriterGLSL"* nocapture readnone, i8* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = tail call i64 @strlen(i8* %2) #12
  %5 = icmp ugt i64 %4, -17
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = bitcast %"class.std::__1::basic_string.84"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %7) #13
  unreachable

8:                                                ; preds = %3
  %9 = icmp ult i64 %4, 23
  br i1 %9, label %18, label %10

10:                                               ; preds = %8
  %11 = add nuw i64 %4, 16
  %12 = and i64 %11, -16
  %13 = tail call i8* @_Znwm(i64 %12) #14
  %14 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %13, i8** %14, align 8
  %15 = or i64 %12, -9223372036854775808
  %16 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %4, i64* %17, align 8
  br label %24

18:                                               ; preds = %8
  %19 = trunc i64 %4 to i8
  %20 = bitcast %"class.std::__1::basic_string.84"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  store i8 %19, i8* %21, align 1
  %22 = bitcast %"class.std::__1::basic_string.84"* %0 to i8*
  %23 = icmp eq i64 %4, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %18, %10
  %25 = phi i8* [ %13, %10 ], [ %22, %18 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %2, i64 %4, i1 false) #12
  br label %26

26:                                               ; preds = %18, %24
  %27 = phi i8* [ %22, %18 ], [ %25, %24 ]
  %28 = getelementptr inbounds i8, i8* %27, i64 %4
  store i8 0, i8* %28, align 1
  ret void
}

declare %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() local_unnamed_addr #1

declare i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"*, i8**) unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"*) unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_9TFunctionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEE14pool_allocatorIS7_EE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.66"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"class.std::__1::__tree_node"* [ %10, %4 ], [ %1, %2 ]
  %6 = bitcast %"class.std::__1::__tree_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_9TFunctionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEE14pool_allocatorIS7_EE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.66"* %0, %"class.std::__1::__tree_node"* %7) #12
  %8 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN2sh16EmulatePrecision8TypePairENS2_18TypePairComparatorENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.58"*, %"class.std::__1::__tree_node.119"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.119"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.119"* %1 to %"class.std::__1::__tree_node.119"**
  %6 = load %"class.std::__1::__tree_node.119"*, %"class.std::__1::__tree_node.119"** %5, align 8
  tail call void @_ZNSt3__16__treeIN2sh16EmulatePrecision8TypePairENS2_18TypePairComparatorENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.58"* %0, %"class.std::__1::__tree_node.119"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.119", %"class.std::__1::__tree_node.119"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.119"**
  %9 = load %"class.std::__1::__tree_node.119"*, %"class.std::__1::__tree_node.119"** %8, align 8
  tail call void @_ZNSt3__16__treeIN2sh16EmulatePrecision8TypePairENS2_18TypePairComparatorENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.58"* %0, %"class.std::__1::__tree_node.119"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node.119"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string.84", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string.84"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string.84"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string.84", %"class.std::__1::basic_string.84"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string.84"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string.84"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #11

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN2sh16EmulatePrecision8TypePairENS2_18TypePairComparatorENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.58"*, %"struct.sh::EmulatePrecision::TypePair"* dereferenceable(16), %"struct.sh::EmulatePrecision::TypePair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.58", %"class.std::__1::__tree.58"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.119"**
  %6 = load %"class.std::__1::__tree_node.119"*, %"class.std::__1::__tree_node.119"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.119"* %6, null
  br i1 %7, label %48, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.58", %"class.std::__1::__tree.58"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.sh::EmulatePrecision::TypePair", %"struct.sh::EmulatePrecision::TypePair"* %1, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"struct.sh::EmulatePrecision::TypePair", %"struct.sh::EmulatePrecision::TypePair"* %1, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  br label %14

14:                                               ; preds = %44, %8
  %15 = phi %"class.std::__1::__tree_node.119"* [ %47, %44 ], [ %6, %8 ]
  %16 = phi %"class.std::__1::__tree_node_base"** [ %46, %44 ], [ %9, %8 ]
  %17 = getelementptr inbounds %"class.std::__1::__tree_node.119", %"class.std::__1::__tree_node.119"* %15, i64 0, i32 1, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %11, %18
  br i1 %19, label %20, label %24

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.std::__1::__tree_node.119", %"class.std::__1::__tree_node.119"* %15, i64 0, i32 1, i32 1
  %22 = load i8*, i8** %21, align 8
  %23 = icmp ult i8* %13, %22
  br i1 %23, label %26, label %32

24:                                               ; preds = %14
  %25 = icmp ult i8* %11, %18
  br i1 %25, label %26, label %34

26:                                               ; preds = %24, %20
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.119", %"class.std::__1::__tree_node.119"* %15, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %30, label %44

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::__tree_node.119", %"class.std::__1::__tree_node.119"* %15, i64 0, i32 0, i32 0
  br label %50

32:                                               ; preds = %20
  %33 = icmp ult i8* %22, %13
  br i1 %33, label %36, label %42

34:                                               ; preds = %24
  %35 = icmp ult i8* %18, %11
  br i1 %35, label %36, label %42

36:                                               ; preds = %34, %32
  %37 = getelementptr inbounds %"class.std::__1::__tree_node.119", %"class.std::__1::__tree_node.119"* %15, i64 0, i32 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, null
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.std::__1::__tree_node.119", %"class.std::__1::__tree_node.119"* %15, i64 0, i32 0, i32 0
  br label %50

42:                                               ; preds = %34, %32
  %43 = getelementptr inbounds %"class.std::__1::__tree_node.119", %"class.std::__1::__tree_node.119"* %15, i64 0, i32 0, i32 0
  br label %50

44:                                               ; preds = %36, %26
  %45 = phi %"class.std::__1::__tree_node_base"* [ %28, %26 ], [ %38, %36 ]
  %46 = phi %"class.std::__1::__tree_node_base"** [ %27, %26 ], [ %37, %36 ]
  %47 = bitcast %"class.std::__1::__tree_node_base"* %45 to %"class.std::__1::__tree_node.119"*
  br label %14

48:                                               ; preds = %3
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %50

50:                                               ; preds = %30, %40, %42, %48
  %51 = phi %"class.std::__1::__tree_end_node"* [ %4, %48 ], [ %31, %30 ], [ %41, %40 ], [ %43, %42 ]
  %52 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %27, %30 ], [ %37, %40 ], [ %16, %42 ]
  %53 = bitcast %"class.std::__1::__tree_node_base"** %52 to %"class.std::__1::__tree_node.119"**
  %54 = load %"class.std::__1::__tree_node.119"*, %"class.std::__1::__tree_node.119"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node.119"* %54, null
  br i1 %55, label %56, label %81

56:                                               ; preds = %50
  %57 = tail call i8* @_Znwm(i64 48) #14, !noalias !68
  %58 = getelementptr inbounds i8, i8* %57, i64 32
  %59 = bitcast %"struct.sh::EmulatePrecision::TypePair"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 16, i1 false) #12, !noalias !68
  %60 = bitcast i8* %57 to %"class.std::__1::__tree_node.119"*
  %61 = bitcast i8* %57 to %"class.std::__1::__tree_node_base"*
  %62 = getelementptr inbounds i8, i8* %57, i64 16
  %63 = bitcast i8* %62 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %51, %"class.std::__1::__tree_end_node"** %63, align 8
  %64 = bitcast %"class.std::__1::__tree_node_base"** %52 to i8**
  store i8* %57, i8** %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree.58", %"class.std::__1::__tree.58"* %0, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %65, align 8
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node_base"* %68, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %56
  %71 = ptrtoint %"class.std::__1::__tree_node_base"* %68 to i64
  %72 = bitcast %"class.std::__1::__tree.58"* %0 to i64*
  store i64 %71, i64* %72, align 8
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  br label %74

74:                                               ; preds = %70, %56
  %75 = phi %"class.std::__1::__tree_node_base"* [ %61, %56 ], [ %73, %70 ]
  %76 = getelementptr inbounds %"class.std::__1::__tree.58", %"class.std::__1::__tree.58"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %77, %"class.std::__1::__tree_node_base"* %75) #12
  %78 = getelementptr inbounds %"class.std::__1::__tree.58", %"class.std::__1::__tree.58"* %0, i64 0, i32 2, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %78, align 8
  br label %81

81:                                               ; preds = %74, %50
  %82 = phi i8 [ 1, %74 ], [ 0, %50 ]
  %83 = phi %"class.std::__1::__tree_node.119"* [ %60, %74 ], [ %54, %50 ]
  %84 = getelementptr inbounds %"class.std::__1::__tree_node.119", %"class.std::__1::__tree_node.119"* %83, i64 0, i32 0, i32 0
  %85 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %84, 0
  %86 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %85, i8 %82, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_9TFunctionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEE14pool_allocatorIS7_EE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.66"*, %"class.sh::ImmutableString"* dereferenceable(16), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.129"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree.66", %"class.std::__1::__tree.66"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %54, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__tree.66", %"class.std::__1::__tree.66"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %1, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %1, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  %17 = select i1 %16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i64 0, i64 0), i8* %15
  br label %18

18:                                               ; preds = %50, %10
  %19 = phi %"class.std::__1::__tree_node"* [ %53, %50 ], [ %8, %10 ]
  %20 = phi %"class.std::__1::__tree_node_base"** [ %52, %50 ], [ %11, %10 ]
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %13, %22
  br i1 %23, label %33, label %24

24:                                               ; preds = %18
  %25 = icmp ugt i64 %13, %22
  br i1 %25, label %42, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  %30 = select i1 %29, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.77, i64 0, i64 0), i8* %28
  %31 = tail call i32 @memcmp(i8* %17, i8* %30, i64 %13) #15
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %26, %18
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, null
  br i1 %36, label %37, label %50

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %56

39:                                               ; preds = %26
  %40 = tail call i32 @memcmp(i8* %30, i8* %17, i64 %22) #15
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %42, label %48

42:                                               ; preds = %39, %24
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 1
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, null
  br i1 %45, label %46, label %50

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %56

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %56

50:                                               ; preds = %42, %33
  %51 = phi %"class.std::__1::__tree_node_base"* [ %35, %33 ], [ %44, %42 ]
  %52 = phi %"class.std::__1::__tree_node_base"** [ %34, %33 ], [ %43, %42 ]
  %53 = bitcast %"class.std::__1::__tree_node_base"* %51 to %"class.std::__1::__tree_node"*
  br label %18

54:                                               ; preds = %5
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %56

56:                                               ; preds = %37, %46, %48, %54
  %57 = phi %"class.std::__1::__tree_end_node"* [ %6, %54 ], [ %38, %37 ], [ %47, %46 ], [ %49, %48 ]
  %58 = phi %"class.std::__1::__tree_node_base"** [ %55, %54 ], [ %34, %37 ], [ %43, %46 ], [ %20, %48 ]
  %59 = bitcast %"class.std::__1::__tree_node_base"** %58 to %"class.std::__1::__tree_node"**
  %60 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node"* %60, null
  br i1 %61, label %62, label %91

62:                                               ; preds = %56
  %63 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #12, !noalias !71
  %64 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %63, i64 56) #12, !noalias !71
  %65 = getelementptr inbounds i8, i8* %64, i64 32
  %66 = bitcast %"class.std::__1::tuple"* %3 to i8**
  %67 = load i8*, i8** %66, align 8, !noalias !71
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %67, i64 16, i1 false) #12, !noalias !71
  %68 = getelementptr inbounds i8, i8* %64, i64 48
  %69 = bitcast i8* %68 to %"class.sh::TFunction"**
  store %"class.sh::TFunction"* null, %"class.sh::TFunction"** %69, align 8, !noalias !71
  %70 = bitcast i8* %64 to %"class.std::__1::__tree_node"*
  %71 = bitcast i8* %64 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds i8, i8* %64, i64 16
  %73 = bitcast i8* %72 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %73, align 8
  %74 = bitcast %"class.std::__1::__tree_node_base"** %58 to i8**
  store i8* %64, i8** %74, align 8
  %75 = getelementptr inbounds %"class.std::__1::__tree.66", %"class.std::__1::__tree.66"* %0, i64 0, i32 0
  %76 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %76, i64 0, i32 0
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node_base"* %78, null
  br i1 %79, label %84, label %80

80:                                               ; preds = %62
  %81 = ptrtoint %"class.std::__1::__tree_node_base"* %78 to i64
  %82 = bitcast %"class.std::__1::__tree.66"* %0 to i64*
  store i64 %81, i64* %82, align 8
  %83 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  br label %84

84:                                               ; preds = %62, %80
  %85 = phi %"class.std::__1::__tree_node_base"* [ %71, %62 ], [ %83, %80 ]
  %86 = getelementptr inbounds %"class.std::__1::__tree.66", %"class.std::__1::__tree.66"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %87, %"class.std::__1::__tree_node_base"* %85) #12
  %88 = getelementptr inbounds %"class.std::__1::__tree.66", %"class.std::__1::__tree.66"* %0, i64 0, i32 2, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, 1
  store i64 %90, i64* %88, align 8
  br label %91

91:                                               ; preds = %84, %56
  %92 = phi i8 [ 1, %84 ], [ 0, %56 ]
  %93 = phi %"class.std::__1::__tree_node"* [ %70, %84 ], [ %60, %56 ]
  %94 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %93, i64 0, i32 0, i32 0
  %95 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %94, 0
  %96 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %95, i8 %92, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %96
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !9}
!19 = distinct !{!19, !11}
!20 = distinct !{!20, !9}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !9}
!27 = distinct !{!27, !11}
!28 = distinct !{!28, !9}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !9}
!35 = distinct !{!35, !11}
!36 = distinct !{!36, !9}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !9}
!43 = distinct !{!43, !11}
!44 = distinct !{!44, !9}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !9}
!51 = distinct !{!51, !11}
!52 = distinct !{!52, !9}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNSt3__19basic_iosIcNS_11char_traitsIcEEE5imbueERKNS_6localeE: argument 0"}
!55 = distinct !{!55, !"_ZNSt3__19basic_iosIcNS_11char_traitsIcEEE5imbueERKNS_6localeE"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8pubimbueERKNS_6localeE: argument 0"}
!58 = distinct !{!58, !"_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8pubimbueERKNS_6localeE"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN2sh16InitializeStreamINSt3__119basic_ostringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v: argument 0"}
!61 = distinct !{!61, !"_ZN2sh16InitializeStreamINSt3__119basic_ostringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZNSt3__19basic_iosIcNS_11char_traitsIcEEE5imbueERKNS_6localeE: argument 0"}
!64 = distinct !{!64, !"_ZNSt3__19basic_iosIcNS_11char_traitsIcEEE5imbueERKNS_6localeE"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8pubimbueERKNS_6localeE: argument 0"}
!67 = distinct !{!67, !"_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8pubimbueERKNS_6localeE"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNSt3__16__treeIN2sh16EmulatePrecision8TypePairENS2_18TypePairComparatorENS_9allocatorIS3_EEE16__construct_nodeIJS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS5_ISC_EEEEEEDpOT_: argument 0"}
!70 = distinct !{!70, !"_ZNSt3__16__treeIN2sh16EmulatePrecision8TypePairENS2_18TypePairComparatorENS_9allocatorIS3_EEE16__construct_nodeIJS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS5_ISC_EEEEEEDpOT_"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_9TFunctionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEE14pool_allocatorIS7_EE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorISC_ISR_EEEEEDpOT_: argument 0"}
!73 = distinct !{!73, !"_ZNSt3__16__treeINS_12__value_typeIN2sh15ImmutableStringEPKNS2_9TFunctionEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEE14pool_allocatorIS7_EE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorISC_ISR_EEEEEDpOT_"}
