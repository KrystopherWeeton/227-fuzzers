; ModuleID = '../../cc/paint/paint_worklet_job.cc'
source_filename = "../../cc/paint/paint_worklet_job.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::PaintWorkletJob" = type { i32, %class.scoped_refptr, %"class.base::flat_map", %class.sk_sp }
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type { %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyValue" }
%"struct.cc::PaintWorkletInput::PropertyKey" = type { %"class.absl::optional", %"class.absl::optional.11", %"struct.cc::ElementId" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.7 }
%union.anon.7 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.11" = type { %"class.absl::optional_internal::optional_data.12" }
%"class.absl::optional_internal::optional_data.12" = type { %"class.absl::optional_internal::optional_data_base.13" }
%"class.absl::optional_internal::optional_data_base.13" = type { %"class.absl::optional_internal::optional_data_dtor_base.14" }
%"class.absl::optional_internal::optional_data_dtor_base.14" = type { i8, %union.anon.15 }
%union.anon.15 = type { i32 }
%"struct.cc::ElementId" = type { i64 }
%"struct.cc::PaintWorkletInput::PropertyValue" = type { %"class.absl::optional.16", %"class.absl::optional.21" }
%"class.absl::optional.16" = type { %"class.absl::optional_internal::optional_data.17" }
%"class.absl::optional_internal::optional_data.17" = type { %"class.absl::optional_internal::optional_data_base.18" }
%"class.absl::optional_internal::optional_data_base.18" = type { %"class.absl::optional_internal::optional_data_dtor_base.19" }
%"class.absl::optional_internal::optional_data_dtor_base.19" = type { i8, %union.anon.20 }
%union.anon.20 = type { float }
%"class.absl::optional.21" = type { %"class.absl::optional_internal::optional_data.22" }
%"class.absl::optional_internal::optional_data.22" = type { %"class.absl::optional_internal::optional_data_base.23" }
%"class.absl::optional_internal::optional_data_base.23" = type { %"class.absl::optional_internal::optional_data_dtor_base.24" }
%"class.absl::optional_internal::optional_data_dtor_base.24" = type { i8, %union.anon.25 }
%union.anon.25 = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%class.sk_sp = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i8* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

@_ZN2cc15PaintWorkletJobC1Ei13scoped_refptrIKNS_17PaintWorkletInputEEN4base8flat_mapINS2_11PropertyKeyENS2_13PropertyValueENSt3__14lessIvEENS9_6vectorINS9_4pairIS7_S8_EENS9_9allocatorISE_EEEEEE = hidden unnamed_addr alias void (%"class.cc::PaintWorkletJob"*, i32, %"class.cc::PaintWorkletInput"*, %"class.base::flat_map"*), void (%"class.cc::PaintWorkletJob"*, i32, %"class.cc::PaintWorkletInput"*, %"class.base::flat_map"*)* @_ZN2cc15PaintWorkletJobC2Ei13scoped_refptrIKNS_17PaintWorkletInputEEN4base8flat_mapINS2_11PropertyKeyENS2_13PropertyValueENSt3__14lessIvEENS9_6vectorINS9_4pairIS7_S8_EENS9_9allocatorISE_EEEEEE
@_ZN2cc15PaintWorkletJobC1ERKS0_ = hidden unnamed_addr alias void (%"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"*), void (%"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"*)* @_ZN2cc15PaintWorkletJobC2ERKS0_
@_ZN2cc15PaintWorkletJobC1EOS0_ = hidden unnamed_addr alias void (%"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"*), void (%"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"*)* @_ZN2cc15PaintWorkletJobC2EOS0_
@_ZN2cc15PaintWorkletJobD1Ev = hidden unnamed_addr alias void (%"class.cc::PaintWorkletJob"*), void (%"class.cc::PaintWorkletJob"*)* @_ZN2cc15PaintWorkletJobD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15PaintWorkletJobC2Ei13scoped_refptrIKNS_17PaintWorkletInputEEN4base8flat_mapINS2_11PropertyKeyENS2_13PropertyValueENSt3__14lessIvEENS9_6vectorINS9_4pairIS7_S8_EENS9_9allocatorISE_EEEEEE(%"class.cc::PaintWorkletJob"* nocapture, i32, %"class.cc::PaintWorkletInput"*, %"class.base::flat_map"* nocapture) unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.cc::PaintWorkletInput"* %2 to i64
  %6 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 1
  %8 = bitcast %class.scoped_refptr* %7 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 2
  %10 = bitcast %"class.base::flat_map"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #7
  %11 = bitcast %"class.base::flat_map"* %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::flat_map"* %9 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %"struct.std::__1::pair"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast %"struct.std::__1::pair"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"struct.std::__1::pair"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"struct.std::__1::pair"** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %"class.base::flat_map"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #7
  %25 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 3, i32 0
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %25, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15PaintWorkletJobC2ERKS0_(%"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"* nocapture readonly dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %1, i64 0, i32 1, i32 0
  %7 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 1, i32 0
  store %"class.cc::PaintWorkletInput"* %7, %"class.cc::PaintWorkletInput"** %8, align 8
  %9 = icmp eq %"class.cc::PaintWorkletInput"* %7, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.cc::PaintWorkletInput", %"class.cc::PaintWorkletInput"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %2, %10
  %14 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %1, i64 0, i32 2
  %16 = bitcast %"class.base::flat_map"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #7
  %17 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast %"struct.std::__1::pair"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.base::flat_map"* %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 6
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %13
  %26 = icmp ugt i64 %23, 288230376151711743
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.base::flat_map"* %14 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #8
  unreachable

29:                                               ; preds = %25
  %30 = tail call i8* @_Znwm(i64 %22) #9
  %31 = bitcast i8* %30 to %"struct.std::__1::pair"*
  %32 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast %"struct.std::__1::pair"** %32 to i8**
  store i8* %30, i8** %33, align 8
  %34 = bitcast %"class.base::flat_map"* %14 to i8**
  store i8* %30, i8** %34, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %31, i64 %23
  %36 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::pair"* %35, %"struct.std::__1::pair"** %36, align 8
  %37 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %37, align 8
  %39 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %17, align 8
  %40 = bitcast %"struct.std::__1::pair"** %32 to i64*
  %41 = ptrtoint i8* %30 to i64
  %42 = icmp eq %"struct.std::__1::pair"* %38, %39
  br i1 %42, label %55, label %43

43:                                               ; preds = %29, %43
  %44 = phi %"struct.std::__1::pair"* [ %51, %43 ], [ %31, %29 ]
  %45 = phi %"struct.std::__1::pair"* [ %50, %43 ], [ %38, %29 ]
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 0, i32 0
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 0, i32 0
  tail call void @_ZN2cc17PaintWorkletInput11PropertyKeyC1ERKS1_(%"struct.cc::PaintWorkletInput::PropertyKey"* %46, %"struct.cc::PaintWorkletInput::PropertyKey"* dereferenceable(48) %47) #7
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 0, i32 1
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 0, i32 1
  tail call void @_ZN2cc17PaintWorkletInput13PropertyValueC1ERKS1_(%"struct.cc::PaintWorkletInput::PropertyValue"* %48, %"struct.cc::PaintWorkletInput::PropertyValue"* dereferenceable(16) %49) #7
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 1
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 1
  %52 = icmp eq %"struct.std::__1::pair"* %50, %39
  br i1 %52, label %53, label %43

53:                                               ; preds = %43
  %54 = ptrtoint %"struct.std::__1::pair"* %51 to i64
  br label %55

55:                                               ; preds = %53, %29
  %56 = phi i64 [ %41, %29 ], [ %54, %53 ]
  store i64 %56, i64* %40, align 8
  br label %57

57:                                               ; preds = %13, %55
  %58 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 3, i32 0
  %59 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %1, i64 0, i32 3, i32 0
  %60 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %59, align 8
  %61 = icmp eq %"class.cc::PaintOpBuffer"* %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %60, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 1 monotonic
  br label %65

65:                                               ; preds = %57, %62
  store %"class.cc::PaintOpBuffer"* %60, %"class.cc::PaintOpBuffer"** %58, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15PaintWorkletJobC2EOS0_(%"class.cc::PaintWorkletJob"* nocapture, %"class.cc::PaintWorkletJob"* nocapture dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 0, i32 0
  %9 = bitcast %class.scoped_refptr* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.scoped_refptr* %6 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.cc::PaintWorkletInput"* null, %"class.cc::PaintWorkletInput"** %8, align 8
  %12 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %1, i64 0, i32 2
  %14 = bitcast %"class.base::flat_map"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #7
  %15 = bitcast %"class.base::flat_map"* %13 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::flat_map"* %12 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast %"struct.std::__1::pair"** %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"struct.std::__1::pair"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast %"struct.std::__1::pair"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"class.base::flat_map"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #7
  %29 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 3
  %30 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %1, i64 0, i32 3
  %31 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %30, i64 0, i32 0
  %32 = bitcast %class.sk_sp* %30 to i64*
  %33 = load i64, i64* %32, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %31, align 8
  %34 = bitcast %class.sk_sp* %29 to i64*
  store i64 %33, i64* %34, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15PaintWorkletJobD2Ev(%"class.cc::PaintWorkletJob"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %2, align 8
  %4 = icmp eq %"class.cc::PaintOpBuffer"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = bitcast %"class.cc::PaintOpBuffer"* %3 to %class.SkRefCntBase*
  %11 = bitcast %"class.cc::PaintOpBuffer"* %3 to void (%class.SkRefCntBase*)***
  %12 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %12, i64 2
  %14 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, align 8
  tail call void %14(%class.SkRefCntBase* nonnull %10) #7
  br label %15

15:                                               ; preds = %1, %5, %9
  %16 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %17 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %16, align 8
  %18 = icmp eq %"struct.std::__1::pair"* %17, null
  br i1 %18, label %34, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %21 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %22 = icmp eq %"struct.std::__1::pair"* %21, %17
  br i1 %22, label %31, label %23

23:                                               ; preds = %19, %23
  %24 = phi %"struct.std::__1::pair"* [ %25, %23 ], [ %21, %19 ]
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 -1
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 -1, i32 1
  tail call void @_ZN2cc17PaintWorkletInput13PropertyValueD1Ev(%"struct.cc::PaintWorkletInput::PropertyValue"* %26) #7
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 0
  tail call void @_ZN2cc17PaintWorkletInput11PropertyKeyD1Ev(%"struct.cc::PaintWorkletInput::PropertyKey"* %27) #7
  %28 = icmp eq %"struct.std::__1::pair"* %25, %17
  br i1 %28, label %29, label %23

29:                                               ; preds = %23
  %30 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %16, align 8
  br label %31

31:                                               ; preds = %29, %19
  %32 = phi %"struct.std::__1::pair"* [ %30, %29 ], [ %17, %19 ]
  store %"struct.std::__1::pair"* %17, %"struct.std::__1::pair"** %20, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %33) #9
  br label %34

34:                                               ; preds = %15, %31
  %35 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 1, i32 0
  %36 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %35, align 8
  %37 = icmp eq %"class.cc::PaintWorkletInput"* %36, null
  br i1 %37, label %50, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.cc::PaintWorkletInput", %"class.cc::PaintWorkletInput"* %36, i64 0, i32 1
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %50

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %39, i64 -2
  %45 = bitcast %"class.base::RefCountedThreadSafe"* %44 to %"class.cc::PaintWorkletInput"*
  %46 = bitcast %"class.base::RefCountedThreadSafe"* %44 to void (%"class.cc::PaintWorkletInput"*)***
  %47 = load void (%"class.cc::PaintWorkletInput"*)**, void (%"class.cc::PaintWorkletInput"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.cc::PaintWorkletInput"*)*, void (%"class.cc::PaintWorkletInput"*)** %47, i64 4
  %49 = load void (%"class.cc::PaintWorkletInput"*)*, void (%"class.cc::PaintWorkletInput"*)** %48, align 8
  tail call void %49(%"class.cc::PaintWorkletInput"* nonnull %45) #7
  br label %50

50:                                               ; preds = %34, %38, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15PaintWorkletJob9SetOutputE5sk_spINS_13PaintOpBufferEE(%"class.cc::PaintWorkletJob"* nocapture, %class.sk_sp* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %5 = bitcast %class.sk_sp* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %4, align 8
  %7 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %8 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %7, align 8
  %9 = bitcast %class.sk_sp* %3 to i64*
  store i64 %6, i64* %9, align 8
  %10 = icmp eq %"class.cc::PaintOpBuffer"* %8, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = bitcast %"class.cc::PaintOpBuffer"* %8 to %class.SkRefCntBase*
  %17 = bitcast %"class.cc::PaintOpBuffer"* %8 to void (%class.SkRefCntBase*)***
  %18 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, i64 2
  %20 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, align 8
  tail call void %20(%class.SkRefCntBase* nonnull %16) #7
  br label %21

21:                                               ; preds = %2, %11, %15
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN2cc17PaintWorkletInput11PropertyKeyC1ERKS1_(%"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"* dereferenceable(48)) unnamed_addr #3

declare void @_ZN2cc17PaintWorkletInput13PropertyValueC1ERKS1_(%"struct.cc::PaintWorkletInput::PropertyValue"*, %"struct.cc::PaintWorkletInput::PropertyValue"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc17PaintWorkletInput13PropertyValueD1Ev(%"struct.cc::PaintWorkletInput::PropertyValue"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2cc17PaintWorkletInput11PropertyKeyD1Ev(%"struct.cc::PaintWorkletInput::PropertyKey"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
