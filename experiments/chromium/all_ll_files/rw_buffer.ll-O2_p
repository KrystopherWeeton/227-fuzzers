; ModuleID = '../../third_party/blink/renderer/platform/graphics/rw_buffer.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/rw_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::RWBuffer::ROIter" = type { %"class.blink::RWBuffer"*, %"struct.blink::RWBuffer::BufferBlock"*, i64 }
%"struct.blink::RWBuffer::BufferBlock" = type { %"struct.blink::RWBuffer::BufferBlock"*, i64, i64 }
%"class.blink::RWBuffer" = type { %"struct.blink::RWBuffer::BufferHead"*, %"struct.blink::RWBuffer::BufferBlock"*, i64 }
%"struct.blink::RWBuffer::BufferHead" = type { %"class.base::AtomicRefCount", %"struct.blink::RWBuffer::BufferBlock" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ROBuffer" = type { %"class.WTF::ThreadSafeRefCounted", %"struct.blink::RWBuffer::BufferHead"*, i64, %"struct.blink::RWBuffer::BufferBlock"* }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.blink::ROBuffer::Iter" = type { %"struct.blink::RWBuffer::BufferBlock"*, i64, %"class.blink::ROBuffer"* }
%class.scoped_refptr = type { %"class.blink::ROBuffer"* }

@.str = private unnamed_addr constant [28 x i8] c"blink::RWBuffer::BufferHead\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"blink::RWBuffer::BufferBlock\00", align 1

@_ZN5blink8RWBuffer6ROIterC1EPS0_m = hidden unnamed_addr alias void (%"class.blink::RWBuffer::ROIter"*, %"class.blink::RWBuffer"*, i64), void (%"class.blink::RWBuffer::ROIter"*, %"class.blink::RWBuffer"*, i64)* @_ZN5blink8RWBuffer6ROIterC2EPS0_m
@_ZN5blink8ROBufferC1EPKNS_8RWBuffer10BufferHeadEmPKNS1_11BufferBlockE = hidden unnamed_addr alias void (%"class.blink::ROBuffer"*, %"struct.blink::RWBuffer::BufferHead"*, i64, %"struct.blink::RWBuffer::BufferBlock"*), void (%"class.blink::ROBuffer"*, %"struct.blink::RWBuffer::BufferHead"*, i64, %"struct.blink::RWBuffer::BufferBlock"*)* @_ZN5blink8ROBufferC2EPKNS_8RWBuffer10BufferHeadEmPKNS1_11BufferBlockE
@_ZN5blink8ROBufferD1Ev = hidden unnamed_addr alias void (%"class.blink::ROBuffer"*), void (%"class.blink::ROBuffer"*)* @_ZN5blink8ROBufferD2Ev
@_ZN5blink8ROBuffer4IterC1EPKS0_ = hidden unnamed_addr alias void (%"class.blink::ROBuffer::Iter"*, %"class.blink::ROBuffer"*), void (%"class.blink::ROBuffer::Iter"*, %"class.blink::ROBuffer"*)* @_ZN5blink8ROBuffer4IterC2EPKS0_
@_ZN5blink8ROBuffer4IterC1ERK13scoped_refptrIS0_E = hidden unnamed_addr alias void (%"class.blink::ROBuffer::Iter"*, %class.scoped_refptr*), void (%"class.blink::ROBuffer::Iter"*, %class.scoped_refptr*)* @_ZN5blink8ROBuffer4IterC2ERK13scoped_refptrIS0_E
@_ZN5blink8RWBufferC1Em = hidden unnamed_addr alias void (%"class.blink::RWBuffer"*, i64), void (%"class.blink::RWBuffer"*, i64)* @_ZN5blink8RWBufferC2Em
@_ZN5blink8RWBufferD1Ev = hidden unnamed_addr alias void (%"class.blink::RWBuffer"*), void (%"class.blink::RWBuffer"*)* @_ZN5blink8RWBufferD2Ev

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink8RWBuffer6ROIter4sizeEv(%"class.blink::RWBuffer::ROIter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RWBuffer::ROIter", %"class.blink::RWBuffer::ROIter"* %0, i64 0, i32 1
  %3 = load %"struct.blink::RWBuffer::BufferBlock"*, %"struct.blink::RWBuffer::BufferBlock"** %2, align 8
  %4 = icmp eq %"struct.blink::RWBuffer::BufferBlock"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::RWBuffer::BufferBlock", %"struct.blink::RWBuffer::BufferBlock"* %3, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::RWBuffer::ROIter", %"class.blink::RWBuffer::ROIter"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = load i64, i64* %6, align 8
  %10 = icmp ult i64 %8, %9
  %11 = select i1 %10, i64 %8, i64 %9
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi i64 [ %11, %5 ], [ 0, %1 ]
  ret i64 %13
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink8RWBuffer6ROIterC2EPS0_m(%"class.blink::RWBuffer::ROIter"* nocapture, %"class.blink::RWBuffer"*, i64) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::RWBuffer::ROIter", %"class.blink::RWBuffer::ROIter"* %0, i64 0, i32 0
  store %"class.blink::RWBuffer"* %1, %"class.blink::RWBuffer"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::RWBuffer::ROIter", %"class.blink::RWBuffer::ROIter"* %0, i64 0, i32 2
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds %"class.blink::RWBuffer", %"class.blink::RWBuffer"* %1, i64 0, i32 0
  %7 = load %"struct.blink::RWBuffer::BufferHead"*, %"struct.blink::RWBuffer::BufferHead"** %6, align 8
  %8 = getelementptr inbounds %"struct.blink::RWBuffer::BufferHead", %"struct.blink::RWBuffer::BufferHead"* %7, i64 0, i32 1
  %9 = getelementptr inbounds %"class.blink::RWBuffer::ROIter", %"class.blink::RWBuffer::ROIter"* %0, i64 0, i32 1
  store %"struct.blink::RWBuffer::BufferBlock"* %8, %"struct.blink::RWBuffer::BufferBlock"** %9, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK5blink8RWBuffer6ROIter4dataEv(%"class.blink::RWBuffer::ROIter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RWBuffer::ROIter", %"class.blink::RWBuffer::ROIter"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::RWBuffer::ROIter", %"class.blink::RWBuffer::ROIter"* %0, i64 0, i32 1
  %7 = load %"struct.blink::RWBuffer::BufferBlock"*, %"struct.blink::RWBuffer::BufferBlock"** %6, align 8
  %8 = getelementptr inbounds %"struct.blink::RWBuffer::BufferBlock", %"struct.blink::RWBuffer::BufferBlock"* %7, i64 1
  %9 = bitcast %"struct.blink::RWBuffer::BufferBlock"* %8 to i8*
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i8* [ %9, %5 ], [ null, %1 ]
  ret i8* %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8RWBuffer6ROIter4NextEv(%"class.blink::RWBuffer::ROIter"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::RWBuffer::ROIter", %"class.blink::RWBuffer::ROIter"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %23, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::RWBuffer::ROIter", %"class.blink::RWBuffer::ROIter"* %0, i64 0, i32 1
  %7 = load %"struct.blink::RWBuffer::BufferBlock"*, %"struct.blink::RWBuffer::BufferBlock"** %6, align 8
  %8 = icmp eq %"struct.blink::RWBuffer::BufferBlock"* %7, null
  %9 = bitcast %"struct.blink::RWBuffer::BufferBlock"* %7 to i64*
  br i1 %8, label %15, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"struct.blink::RWBuffer::BufferBlock", %"struct.blink::RWBuffer::BufferBlock"* %7, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %3, %12
  %14 = select i1 %13, i64 %3, i64 %12
  br label %15

15:                                               ; preds = %5, %10
  %16 = phi i64 [ %14, %10 ], [ 0, %5 ]
  %17 = sub i64 %3, %16
  store i64 %17, i64* %2, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %15
  store %"struct.blink::RWBuffer::BufferBlock"* null, %"struct.blink::RWBuffer::BufferBlock"** %6, align 8
  br label %23

20:                                               ; preds = %15
  %21 = load i64, i64* %9, align 8
  %22 = bitcast %"struct.blink::RWBuffer::BufferBlock"** %6 to i64*
  store i64 %21, i64* %22, align 8
  br label %23

23:                                               ; preds = %19, %20, %1
  %24 = phi i1 [ false, %19 ], [ true, %20 ], [ false, %1 ]
  ret i1 %24
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink8RWBuffer6ROIter7HasNextEv(%"class.blink::RWBuffer::ROIter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RWBuffer::ROIter", %"class.blink::RWBuffer::ROIter"* %0, i64 0, i32 1
  %3 = load %"struct.blink::RWBuffer::BufferBlock"*, %"struct.blink::RWBuffer::BufferBlock"** %2, align 8
  %4 = icmp eq %"struct.blink::RWBuffer::BufferBlock"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::RWBuffer::BufferBlock", %"struct.blink::RWBuffer::BufferBlock"* %3, i64 0, i32 0
  %7 = load %"struct.blink::RWBuffer::BufferBlock"*, %"struct.blink::RWBuffer::BufferBlock"** %6, align 8
  %8 = icmp ne %"struct.blink::RWBuffer::BufferBlock"* %7, null
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink8ROBufferC2EPKNS_8RWBuffer10BufferHeadEmPKNS1_11BufferBlockE(%"class.blink::ROBuffer"* nocapture, %"struct.blink::RWBuffer::BufferHead"*, i64, %"struct.blink::RWBuffer::BufferBlock"*) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::ROBuffer", %"class.blink::ROBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.blink::ROBuffer", %"class.blink::ROBuffer"* %0, i64 0, i32 1
  store %"struct.blink::RWBuffer::BufferHead"* %1, %"struct.blink::RWBuffer::BufferHead"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::ROBuffer", %"class.blink::ROBuffer"* %0, i64 0, i32 2
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %"class.blink::ROBuffer", %"class.blink::ROBuffer"* %0, i64 0, i32 3
  store %"struct.blink::RWBuffer::BufferBlock"* %3, %"struct.blink::RWBuffer::BufferBlock"** %8, align 8
  %9 = icmp eq %"struct.blink::RWBuffer::BufferHead"* %1, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"struct.blink::RWBuffer::BufferHead", %"struct.blink::RWBuffer::BufferHead"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %4, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8ROBufferD2Ev(%"class.blink::ROBuffer"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::ROBuffer", %"class.blink::ROBuffer"* %0, i64 0, i32 1
  %3 = load %"struct.blink::RWBuffer::BufferHead"*, %"struct.blink::RWBuffer::BufferHead"** %2, align 8
  %4 = icmp eq %"struct.blink::RWBuffer::BufferHead"* %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::RWBuffer::BufferHead", %"struct.blink::RWBuffer::BufferHead"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %20

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.blink::RWBuffer::BufferHead", %"struct.blink::RWBuffer::BufferHead"* %3, i64 0, i32 1, i32 0
  %11 = load %"struct.blink::RWBuffer::BufferBlock"*, %"struct.blink::RWBuffer::BufferBlock"** %10, align 8
  %12 = bitcast %"struct.blink::RWBuffer::BufferHead"* %3 to i8*
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %12) #8
  %13 = icmp eq %"struct.blink::RWBuffer::BufferBlock"* %11, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %9, %14
  %15 = phi %"struct.blink::RWBuffer::BufferBlock"* [ %18, %14 ], [ %11, %9 ]
  %16 = bitcast %"struct.blink::RWBuffer::BufferBlock"* %15 to i8*
  %17 = getelementptr inbounds %"struct.blink::RWBuffer::BufferBlock", %"struct.blink::RWBuffer::BufferBlock"* %15, i64 0, i32 0
  %18 = load %"struct.blink::RWBuffer::BufferBlock"*, %"struct.blink::RWBuffer::BufferBlock"** %17, align 8
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %16) #8
  %19 = icmp eq %"struct.blink::RWBuffer::BufferBlock"* %18, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %9, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8ROBuffer4IterC2EPKS0_(%"class.blink::ROBuffer::Iter"* nocapture, %"class.blink::ROBuffer"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::ROBuffer::Iter", %"class.blink::ROBuffer::Iter"* %0, i64 0, i32 2
  store %"class.blink::ROBuffer"* %1, %"class.blink::ROBuffer"** %3, align 8
  %4 = icmp eq %"class.blink::ROBuffer"* %1, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::ROBuffer", %"class.blink::ROBuffer"* %1, i64 0, i32 1
  %7 = load %"struct.blink::RWBuffer::BufferHead"*, %"struct.blink::RWBuffer::BufferHead"** %6, align 8
  %8 = icmp eq %"struct.blink::RWBuffer::BufferHead"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.blink::RWBuffer::BufferHead", %"struct.blink::RWBuffer::BufferHead"* %7, i64 0, i32 1
  %11 = getelementptr inbounds %"class.blink::ROBuffer::Iter", %"class.blink::ROBuffer::Iter"* %0, i64 0, i32 0
  store %"struct.blink::RWBuffer::BufferBlock"* %10, %"struct.blink::RWBuffer::BufferBlock"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ROBuffer", %"class.blink::ROBuffer"* %1, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.blink::ROBuffer::Iter", %"class.blink::ROBuffer::Iter"* %0, i64 0, i32 1
  store i64 %13, i64* %14, align 8
  br label %17

15:                                               ; preds = %5, %2
  %16 = bitcast %"class.blink::ROBuffer::Iter"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #8
  br label %17

17:                                               ; preds = %9, %15
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink8ROBuffer4Iter5ResetEPKS0_(%"class.blink::ROBuffer::Iter"* nocapture, %"class.blink::ROBuffer"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ROBuffer::Iter", %"class.blink::ROBuffer::Iter"* %0, i64 0, i32 2
  store %"class.blink::ROBuffer"* %1, %"class.blink::ROBuffer"** %3, align 8
  %4 = icmp eq %"class.blink::ROBuffer"* %1, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::ROBuffer", %"class.blink::ROBuffer"* %1, i64 0, i32 1
  %7 = load %"struct.blink::RWBuffer::BufferHead"*, %"struct.blink::RWBuffer::BufferHead"** %6, align 8
  %8 = icmp eq %"struct.blink::RWBuffer::BufferHead"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.blink::RWBuffer::BufferHead", %"struct.blink::RWBuffer::BufferHead"* %7, i64 0, i32 1
  %11 = getelementptr inbounds %"class.blink::ROBuffer::Iter", %"class.blink::ROBuffer::Iter"* %0, i64 0, i32 0
  store %"struct.blink::RWBuffer::BufferBlock"* %10, %"struct.blink::RWBuffer::BufferBlock"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ROBuffer", %"class.blink::ROBuffer"* %1, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.blink::ROBuffer::Iter", %"class.blink::ROBuffer::Iter"* %0, i64 0, i32 1
  store i64 %13, i64* %14, align 8
  br label %17

15:                                               ; preds = %5, %2
  %16 = bitcast %"class.blink::ROBuffer::Iter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false)
  br label %17

17:                                               ; preds = %15, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8ROBuffer4IterC2ERK13scoped_refptrIS0_E(%"class.blink::ROBuffer::Iter"* nocapture, %class.scoped_refptr* nocapture readonly dereferenceable(8)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %4 = load %"class.blink::ROBuffer"*, %"class.blink::ROBuffer"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ROBuffer::Iter", %"class.blink::ROBuffer::Iter"* %0, i64 0, i32 2
  store %"class.blink::ROBuffer"* %4, %"class.blink::ROBuffer"** %5, align 8
  %6 = icmp eq %"class.blink::ROBuffer"* %4, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::ROBuffer", %"class.blink::ROBuffer"* %4, i64 0, i32 1
  %9 = load %"struct.blink::RWBuffer::BufferHead"*, %"struct.blink::RWBuffer::BufferHead"** %8, align 8
  %10 = icmp eq %"struct.blink::RWBuffer::BufferHead"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.blink::RWBuffer::BufferHead", %"struct.blink::RWBuffer::BufferHead"* %9, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::ROBuffer::Iter", %"class.blink::ROBuffer::Iter"* %0, i64 0, i32 0
  store %"struct.blink::RWBuffer::BufferBlock"* %12, %"struct.blink::RWBuffer::BufferBlock"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::ROBuffer", %"class.blink::ROBuffer"* %4, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.blink::ROBuffer::Iter", %"class.blink::ROBuffer::Iter"* %0, i64 0, i32 1
  store i64 %15, i64* %16, align 8
  br label %19

17:                                               ; preds = %7, %2
  %18 = bitcast %"class.blink::ROBuffer::Iter"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #8
  br label %19

19:                                               ; preds = %11, %17
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK5blink8ROBuffer4Iter4dataEv(%"class.blink::ROBuffer::Iter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ROBuffer::Iter", %"class.blink::ROBuffer::Iter"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ROBuffer::Iter", %"class.blink::ROBuffer::Iter"* %0, i64 0, i32 0
  %7 = load %"struct.blink::RWBuffer::BufferBlock"*, %"struct.blink::RWBuffer::BufferBlock"** %6, align 8
  %8 = getelementptr inbounds %"struct.blink::RWBuffer::BufferBlock", %"struct.blink::RWBuffer::BufferBlock"* %7, i64 1
  %9 = bitcast %"struct.blink::RWBuffer::BufferBlock"* %8 to i8*
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i8* [ %9, %5 ], [ null, %1 ]
  ret i8* %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink8ROBuffer4Iter4sizeEv(%"class.blink::ROBuffer::Iter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ROBuffer::Iter", %"class.blink::ROBuffer::Iter"* %0, i64 0, i32 0
  %3 = load %"struct.blink::RWBuffer::BufferBlock"*, %"struct.blink::RWBuffer::BufferBlock"** %2, align 8
  %4 = icmp eq %"struct.blink::RWBuffer::BufferBlock"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::RWBuffer::BufferBlock", %"struct.blink::RWBuffer::BufferBlock"* %3, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::ROBuffer::Iter", %"class.blink::ROBuffer::Iter"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = load i64, i64* %6, align 8
  %10 = icmp ult i64 %8, %9
  %11 = select i1 %10, i64 %8, i64 %9
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi i64 [ %11, %5 ], [ 0, %1 ]
  ret i64 %13
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8ROBuffer4Iter4NextEv(%"class.blink::ROBuffer::Iter"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ROBuffer::Iter", %"class.blink::ROBuffer::Iter"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %27, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ROBuffer::Iter", %"class.blink::ROBuffer::Iter"* %0, i64 0, i32 0
  %7 = load %"struct.blink::RWBuffer::BufferBlock"*, %"struct.blink::RWBuffer::BufferBlock"** %6, align 8
  %8 = icmp eq %"struct.blink::RWBuffer::BufferBlock"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.blink::RWBuffer::BufferBlock", %"struct.blink::RWBuffer::BufferBlock"* %7, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %3, %11
  %13 = select i1 %12, i64 %3, i64 %11
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi i64 [ %13, %9 ], [ 0, %5 ]
  %16 = sub i64 %3, %15
  store i64 %16, i64* %2, align 8
  %17 = getelementptr inbounds %"class.blink::ROBuffer::Iter", %"class.blink::ROBuffer::Iter"* %0, i64 0, i32 2
  %18 = load %"class.blink::ROBuffer"*, %"class.blink::ROBuffer"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ROBuffer", %"class.blink::ROBuffer"* %18, i64 0, i32 3
  %20 = load %"struct.blink::RWBuffer::BufferBlock"*, %"struct.blink::RWBuffer::BufferBlock"** %19, align 8
  %21 = icmp eq %"struct.blink::RWBuffer::BufferBlock"* %20, %7
  br i1 %21, label %22, label %23

22:                                               ; preds = %14
  store %"struct.blink::RWBuffer::BufferBlock"* null, %"struct.blink::RWBuffer::BufferBlock"** %6, align 8
  br label %27

23:                                               ; preds = %14
  %24 = bitcast %"struct.blink::RWBuffer::BufferBlock"* %7 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.blink::ROBuffer::Iter"* %0 to i64*
  store i64 %25, i64* %26, align 8
  br label %27

27:                                               ; preds = %1, %22, %23
  %28 = phi i64 [ 0, %1 ], [ %16, %22 ], [ %16, %23 ]
  %29 = icmp ne i64 %28, 0
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8RWBufferC2Em(%"class.blink::RWBuffer"* nocapture, i64) unnamed_addr #2 align 2 {
  %3 = icmp eq i64 %1, 0
  %4 = bitcast %"class.blink::RWBuffer"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false)
  br i1 %3, label %17, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::RWBuffer", %"class.blink::RWBuffer"* %0, i64 0, i32 1
  %7 = icmp ugt i64 %1, 4064
  %8 = select i1 %7, i64 %1, i64 4064
  %9 = add i64 %8, 32
  %10 = tail call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %9, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)) #8
  %11 = bitcast i8* %10 to i32*
  store i32 1, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %10, i64 8
  %13 = getelementptr inbounds i8, i8* %10, i64 24
  %14 = bitcast i8* %13 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #8
  store i64 %8, i64* %14, align 8
  %15 = bitcast %"class.blink::RWBuffer"* %0 to i8**
  store i8* %10, i8** %15, align 8
  %16 = bitcast %"struct.blink::RWBuffer::BufferBlock"** %6 to i8**
  store i8* %12, i8** %16, align 8
  br label %17

17:                                               ; preds = %2, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8RWBufferD2Ev(%"class.blink::RWBuffer"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::RWBuffer", %"class.blink::RWBuffer"* %0, i64 0, i32 0
  %3 = load %"struct.blink::RWBuffer::BufferHead"*, %"struct.blink::RWBuffer::BufferHead"** %2, align 8
  %4 = icmp eq %"struct.blink::RWBuffer::BufferHead"* %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::RWBuffer::BufferHead", %"struct.blink::RWBuffer::BufferHead"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %20

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.blink::RWBuffer::BufferHead", %"struct.blink::RWBuffer::BufferHead"* %3, i64 0, i32 1, i32 0
  %11 = load %"struct.blink::RWBuffer::BufferBlock"*, %"struct.blink::RWBuffer::BufferBlock"** %10, align 8
  %12 = bitcast %"struct.blink::RWBuffer::BufferHead"* %3 to i8*
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %12) #8
  %13 = icmp eq %"struct.blink::RWBuffer::BufferBlock"* %11, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %9, %14
  %15 = phi %"struct.blink::RWBuffer::BufferBlock"* [ %18, %14 ], [ %11, %9 ]
  %16 = bitcast %"struct.blink::RWBuffer::BufferBlock"* %15 to i8*
  %17 = getelementptr inbounds %"struct.blink::RWBuffer::BufferBlock", %"struct.blink::RWBuffer::BufferBlock"* %15, i64 0, i32 0
  %18 = load %"struct.blink::RWBuffer::BufferBlock"*, %"struct.blink::RWBuffer::BufferBlock"** %17, align 8
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %16) #8
  %19 = icmp eq %"struct.blink::RWBuffer::BufferBlock"* %18, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %9, %5, %1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink8RWBuffer8ValidateEv(%"class.blink::RWBuffer"* nocapture) local_unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8RWBuffer6AppendEPKvmm(%"class.blink::RWBuffer"* nocapture, i8* nocapture readonly, i64, i64) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %70, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::RWBuffer", %"class.blink::RWBuffer"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, %2
  store i64 %9, i64* %7, align 8
  %10 = getelementptr inbounds %"class.blink::RWBuffer", %"class.blink::RWBuffer"* %0, i64 0, i32 0
  %11 = load %"struct.blink::RWBuffer::BufferHead"*, %"struct.blink::RWBuffer::BufferHead"** %10, align 8
  %12 = icmp eq %"struct.blink::RWBuffer::BufferHead"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::RWBuffer", %"class.blink::RWBuffer"* %0, i64 0, i32 1
  %15 = load %"struct.blink::RWBuffer::BufferBlock"*, %"struct.blink::RWBuffer::BufferBlock"** %14, align 8
  br label %30

16:                                               ; preds = %6
  %17 = add i64 %3, %2
  %18 = icmp ugt i64 %17, 4064
  %19 = select i1 %18, i64 %17, i64 4064
  %20 = add i64 %19, 32
  %21 = tail call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %20, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)) #8
  %22 = bitcast i8* %21 to i32*
  store i32 1, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %21, i64 8
  %24 = getelementptr inbounds i8, i8* %21, i64 24
  %25 = bitcast i8* %24 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #8
  store i64 %19, i64* %25, align 8
  %26 = bitcast %"class.blink::RWBuffer"* %0 to i8**
  store i8* %21, i8** %26, align 8
  %27 = getelementptr inbounds %"class.blink::RWBuffer", %"class.blink::RWBuffer"* %0, i64 0, i32 1
  %28 = bitcast %"struct.blink::RWBuffer::BufferBlock"** %27 to i8**
  store i8* %23, i8** %28, align 8
  %29 = bitcast i8* %23 to %"struct.blink::RWBuffer::BufferBlock"*
  br label %30

30:                                               ; preds = %13, %16
  %31 = phi %"struct.blink::RWBuffer::BufferBlock"* [ %15, %13 ], [ %29, %16 ]
  %32 = getelementptr inbounds %"class.blink::RWBuffer", %"class.blink::RWBuffer"* %0, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.blink::RWBuffer::BufferBlock", %"struct.blink::RWBuffer::BufferBlock"* %31, i64 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"struct.blink::RWBuffer::BufferBlock", %"struct.blink::RWBuffer::BufferBlock"* %31, i64 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = icmp ugt i64 %37, %2
  %39 = select i1 %38, i64 %2, i64 %37
  %40 = getelementptr inbounds %"struct.blink::RWBuffer::BufferBlock", %"struct.blink::RWBuffer::BufferBlock"* %31, i64 1
  %41 = bitcast %"struct.blink::RWBuffer::BufferBlock"* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 %36
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* align 1 %1, i64 %39, i1 false) #8
  %43 = load i64, i64* %35, align 8
  %44 = add i64 %39, %43
  store i64 %44, i64* %35, align 8
  %45 = sub i64 %2, %39
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %70, label %47

47:                                               ; preds = %30
  %48 = getelementptr inbounds i8, i8* %1, i64 %39
  %49 = add i64 %45, %3
  %50 = icmp ugt i64 %49, 4072
  %51 = select i1 %50, i64 %49, i64 4072
  %52 = add i64 %51, 24
  %53 = tail call i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64 %52, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0)) #8
  %54 = getelementptr inbounds i8, i8* %53, i64 16
  %55 = bitcast i8* %54 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #8
  store i64 %51, i64* %55, align 8
  %56 = bitcast %"struct.blink::RWBuffer::BufferBlock"** %32 to i8***
  %57 = load i8**, i8*** %56, align 8
  store i8* %53, i8** %57, align 8
  %58 = bitcast %"struct.blink::RWBuffer::BufferBlock"** %32 to i8**
  store i8* %53, i8** %58, align 8
  %59 = load i64, i64* %55, align 8
  %60 = getelementptr inbounds i8, i8* %53, i64 8
  %61 = bitcast i8* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %59, %62
  %64 = icmp ugt i64 %63, %45
  %65 = select i1 %64, i64 %45, i64 %63
  %66 = getelementptr inbounds i8, i8* %53, i64 24
  %67 = getelementptr inbounds i8, i8* %66, i64 %62
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %67, i8* align 1 %48, i64 %65, i1 false) #8
  %68 = load i64, i64* %61, align 8
  %69 = add i64 %65, %68
  store i64 %69, i64* %61, align 8
  br label %70

70:                                               ; preds = %47, %30, %4
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias %"class.blink::ROBuffer"* @_ZNK5blink8RWBuffer20MakeROBufferSnapshotEv(%"class.blink::RWBuffer"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = tail call noalias i8* @malloc(i64 32) #8
  %3 = bitcast i8* %2 to %"class.blink::ROBuffer"*
  %4 = getelementptr inbounds %"class.blink::RWBuffer", %"class.blink::RWBuffer"* %0, i64 0, i32 0
  %5 = load %"struct.blink::RWBuffer::BufferHead"*, %"struct.blink::RWBuffer::BufferHead"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::RWBuffer", %"class.blink::RWBuffer"* %0, i64 0, i32 1
  %7 = bitcast %"struct.blink::RWBuffer::BufferBlock"** %6 to <2 x i64>*
  %8 = load <2 x i64>, <2 x i64>* %7, align 8
  %9 = shufflevector <2 x i64> %8, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %10 = bitcast i8* %2 to i32*
  store i32 1, i32* %10, align 4
  %11 = getelementptr inbounds i8, i8* %2, i64 8
  %12 = bitcast i8* %11 to %"struct.blink::RWBuffer::BufferHead"**
  store %"struct.blink::RWBuffer::BufferHead"* %5, %"struct.blink::RWBuffer::BufferHead"** %12, align 8
  %13 = getelementptr inbounds i8, i8* %2, i64 16
  %14 = bitcast i8* %13 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %14, align 8
  %15 = icmp eq %"struct.blink::RWBuffer::BufferHead"* %5, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"struct.blink::RWBuffer::BufferHead", %"struct.blink::RWBuffer::BufferHead"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 1 monotonic
  br label %19

19:                                               ; preds = %1, %16
  ret %"class.blink::ROBuffer"* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8RWBuffer14HasNoSnapshotsEv(%"class.blink::RWBuffer"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::RWBuffer", %"class.blink::RWBuffer"* %0, i64 0, i32 0
  %3 = load %"struct.blink::RWBuffer::BufferHead"*, %"struct.blink::RWBuffer::BufferHead"** %2, align 8
  %4 = icmp eq %"struct.blink::RWBuffer::BufferHead"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::RWBuffer::BufferHead", %"struct.blink::RWBuffer::BufferHead"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 acquire, align 4
  %8 = icmp eq i32 %7, 1
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ %8, %5 ], [ true, %1 ]
  ret i1 %10
}

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #5

declare i8* @_ZN3WTF10Partitions12BufferMallocEmPKc(i64, i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
