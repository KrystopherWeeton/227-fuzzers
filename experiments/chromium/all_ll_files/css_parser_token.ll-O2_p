; ModuleID = '../../third_party/blink/renderer/core/css/parser/css_parser_token.cc'
source_filename = "../../third_party/blink/renderer/core/css/parser/css_parser_token.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon }
%union.anon = type { double }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%struct.anon = type { i32, i32 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.23", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.29", %"class.blink::Member.31", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.40", %"class.blink::Member.46", %"class.blink::Member.48", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.5" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.3" }
%"class.WTF::HashTable.3" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.5" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.6" }
%"class.blink::HeapHashMap.6" = type { %"class.WTF::HashMap.9" }
%"class.WTF::HashMap.9" = type { %"class.WTF::HashTable.10" }
%"class.WTF::HashTable.10" = type <{ %"struct.WTF::KeyValuePair.12"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.12" = type { i8*, %"class.blink::Member.62" }
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.64" }
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.14", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.20", i32, i32 }
%class.scoped_refptr = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.20" = type { %"class.WTF::HashTable.21" }
%"class.WTF::HashTable.21" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.27"*, i32, i32 }
%"class.blink::Member.27" = type opaque
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.33", i32, i32 }
%"class.blink::HeapHashMap.33" = type { %"class.WTF::HashMap.36" }
%"class.WTF::HashMap.36" = type { %"class.WTF::HashTable.37" }
%"class.WTF::HashTable.37" = type <{ %"struct.WTF::KeyValuePair.39"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.39" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.51, i32, i8, i8, [2 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr.50 }
%class.scoped_refptr.50 = type { %"class.WTF::StringImpl"* }
%union.anon.51 = type { %"class.WTF::Vector.52" }
%"class.WTF::Vector.52" = type { %"class.WTF::VectorBuffer.53" }
%"class.WTF::VectorBuffer.53" = type { %"class.WTF::VectorBufferBase.54", [16 x i8] }
%"class.WTF::VectorBufferBase.54" = type { i8*, i32, i32 }
%"class.WTF::Vector.57" = type { %"class.WTF::VectorBuffer.58" }
%"class.WTF::VectorBuffer.58" = type { %"class.WTF::VectorBufferBase.59", [16 x i8] }
%"class.WTF::VectorBufferBase.59" = type { i16*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.68 }
%union.anon.68 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

@.str = private unnamed_addr constant [5 x i8] c"url(\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"\5C\0A\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"U+%X-%X\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"~=\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"|=\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"^=\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"$=\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"*=\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"||\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"<!--\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"-->\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"'\0A\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"url(()\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN3WTF10StringImpl12empty16_bit_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.13 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.14 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.16 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.17 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1

@_ZN5blink14CSSParserTokenC1ENS_18CSSParserTokenTypeEDs = hidden unnamed_addr alias void (%"class.blink::CSSParserToken"*, i32, i16), void (%"class.blink::CSSParserToken"*, i32, i16)* @_ZN5blink14CSSParserTokenC2ENS_18CSSParserTokenTypeEDs
@_ZN5blink14CSSParserTokenC1ENS_18CSSParserTokenTypeEdNS_16NumericValueTypeENS_11NumericSignE = hidden unnamed_addr alias void (%"class.blink::CSSParserToken"*, i32, double, i32, i32), void (%"class.blink::CSSParserToken"*, i32, double, i32, i32)* @_ZN5blink14CSSParserTokenC2ENS_18CSSParserTokenTypeEdNS_16NumericValueTypeENS_11NumericSignE
@_ZN5blink14CSSParserTokenC1ENS_18CSSParserTokenTypeEii = hidden unnamed_addr alias void (%"class.blink::CSSParserToken"*, i32, i32, i32), void (%"class.blink::CSSParserToken"*, i32, i32, i32)* @_ZN5blink14CSSParserTokenC2ENS_18CSSParserTokenTypeEii
@_ZN5blink14CSSParserTokenC1ENS_13HashTokenTypeEN3WTF10StringViewE = hidden unnamed_addr alias void (%"class.blink::CSSParserToken"*, i32, %"class.WTF::StringView"*), void (%"class.blink::CSSParserToken"*, i32, %"class.WTF::StringView"*)* @_ZN5blink14CSSParserTokenC2ENS_13HashTokenTypeEN3WTF10StringViewE

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink14CSSParserTokenC2ENS_18CSSParserTokenTypeEDs(%"class.blink::CSSParserToken"* nocapture, i32, i16 zeroext) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %1, 63
  %7 = and i32 %5, -256
  %8 = or i32 %7, %6
  store i32 %8, i32* %4, align 8
  %9 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 3
  %10 = bitcast %union.anon* %9 to i16*
  store i16 %2, i16* %10, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink14CSSParserTokenC2ENS_18CSSParserTokenTypeEdNS_16NumericValueTypeENS_11NumericSignE(%"class.blink::CSSParserToken"* nocapture, i32, double, i32, i32) unnamed_addr #0 align 2 {
  %6 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %1, 63
  %9 = and i32 %7, -262144
  %10 = shl i32 %3, 8
  %11 = and i32 %10, 256
  %12 = shl i32 %4, 9
  %13 = and i32 %12, 1536
  %14 = or i32 %8, %11
  %15 = or i32 %14, %13
  %16 = or i32 %15, %9
  %17 = or i32 %16, 2048
  store i32 %17, i32* %6, align 8
  %18 = fcmp ult double %2, 0x47EFFFFFE0000000
  %19 = fcmp ole double %2, 0xC7EFFFFFE0000000
  %20 = select i1 %19, double 0xC7EFFFFFE0000000, double %2
  %21 = select i1 %18, double %20, double 0x47EFFFFFE0000000
  %22 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 3, i32 0
  store double %21, double* %22, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink14CSSParserTokenC2ENS_18CSSParserTokenTypeEii(%"class.blink::CSSParserToken"* nocapture, i32, i32, i32) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, -256
  %8 = or i32 %7, 16
  store i32 %8, i32* %5, align 8
  %9 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 3
  %10 = bitcast %union.anon* %9 to %struct.anon*
  %11 = bitcast %union.anon* %9 to i32*
  store i32 %2, i32* %11, align 8
  %12 = getelementptr inbounds %struct.anon, %struct.anon* %10, i64 0, i32 1
  store i32 %3, i32* %12, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14CSSParserTokenC2ENS_13HashTokenTypeEN3WTF10StringViewE(%"class.blink::CSSParserToken"* nocapture, i32, %"class.WTF::StringView"* nocapture readonly byval(%"class.WTF::StringView") align 8) unnamed_addr #1 align 2 {
  %4 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, -256
  %7 = or i32 %6, 3
  store i32 %7, i32* %4, align 8
  %8 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 3
  %9 = bitcast %union.anon* %8 to i32*
  store i32 %1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 1
  store i32 %16, i32* %17, align 4
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = shl i32 %19, 18
  %21 = and i32 %20, 262144
  %22 = and i32 %7, -262397
  %23 = or i32 %21, %22
  store i32 %23, i32* %4, align 8
  %24 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 2
  %25 = bitcast i8** %24 to i64*
  store i64 %14, i64* %25, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14CSSParserToken26ConvertToDimensionWithUnitEN3WTF10StringViewE(%"class.blink::CSSParserToken"* nocapture, %"class.WTF::StringView"* nocapture readonly byval(%"class.WTF::StringView") align 8) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, -64
  %6 = or i32 %5, 9
  store i32 %6, i32* %3, align 8
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 1
  store i32 %13, i32* %14, align 4
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = shl i32 %16, 18
  %18 = and i32 %17, 262144
  %19 = and i32 %6, -262199
  %20 = or i32 %18, %19
  store i32 %20, i32* %3, align 8
  %21 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 2
  %22 = bitcast i8** %21 to i64*
  store i64 %11, i64* %22, align 8
  %23 = load atomic i32, i32* %15 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %2
  %27 = inttoptr i64 %11 to i8*
  %28 = tail call i32 @_ZN5blink17CSSPrimitiveValue16StringToUnitTypeEPKhj(i8* %27, i32 %13) #11
  br label %32

29:                                               ; preds = %2
  %30 = inttoptr i64 %11 to i16*
  %31 = tail call i32 @_ZN5blink17CSSPrimitiveValue16StringToUnitTypeEPKDsj(i16* %30, i32 %13) #11
  br label %32

32:                                               ; preds = %26, %29
  %33 = phi i32 [ %28, %26 ], [ %31, %29 ]
  %34 = load i32, i32* %3, align 8
  %35 = shl i32 %33, 11
  %36 = and i32 %35, 260096
  %37 = and i32 %34, -260097
  %38 = or i32 %37, %36
  store i32 %38, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink14CSSParserToken19ConvertToPercentageEv(%"class.blink::CSSParserToken"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, -260160
  %5 = or i32 %4, 4104
  store i32 %5, i32* %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @_ZNK5blink14CSSParserToken9DelimiterEv(%"class.blink::CSSParserToken"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 3
  %3 = bitcast %union.anon* %2 to i16*
  %4 = load i16, i16* %3, align 8
  ret i16 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink14CSSParserToken14GetNumericSignEv(%"class.blink::CSSParserToken"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %3 = load i32, i32* %2, align 8
  %4 = lshr i32 %3, 9
  %5 = and i32 %4, 3
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink14CSSParserToken19GetNumericValueTypeEv(%"class.blink::CSSParserToken"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %3 = load i32, i32* %2, align 8
  %4 = lshr i32 %3, 8
  %5 = and i32 %4, 1
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZNK5blink14CSSParserToken12NumericValueEv(%"class.blink::CSSParserToken"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 3, i32 0
  %3 = load double, double* %2, align 8
  ret double %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14CSSParserToken30ParseAsUnresolvedCSSPropertyIDEPKNS_16ExecutionContextENS_13CSSParserModeE(%"class.blink::CSSParserToken"* nocapture readonly, %"class.blink::ExecutionContext"*, i8 zeroext) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %6 = load i32, i32* %5, align 8, !noalias !2
  %7 = and i32 %6, 262144
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 2
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8, !noalias !2
  %12 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4, !noalias !2
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %16 = select i1 %8, i64 %14, i64 %15
  %17 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %16, i64* %17, align 8, !alias.scope !2
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %19 = bitcast i8** %18 to i64*
  store i64 %11, i64* %19, align 8, !alias.scope !2
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %13, i32* %20, align 8, !alias.scope !2
  %21 = tail call i32 @_ZN5blink23UnresolvedCSSPropertyIDEPKNS_16ExecutionContextEN3WTF10StringViewENS_13CSSParserModeE(%"class.blink::ExecutionContext"* %1, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %4, i8 zeroext %2) #11
  ret i32 %21
}

declare i32 @_ZN5blink23UnresolvedCSSPropertyIDEPKNS_16ExecutionContextEN3WTF10StringViewENS_13CSSParserModeE(%"class.blink::ExecutionContext"*, %"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8, i8 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14CSSParserToken25ParseAsAtRuleDescriptorIDEv(%"class.blink::CSSParserToken"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %4 = load i32, i32* %3, align 8, !noalias !5
  %5 = and i32 %4, 262144
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 2
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8, !noalias !5
  %10 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4, !noalias !5
  %12 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %13 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %14 = select i1 %6, i64 %12, i64 %13
  %15 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %14, i64* %15, align 8, !alias.scope !5
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %17 = bitcast i8** %16 to i64*
  store i64 %9, i64* %17, align 8, !alias.scope !5
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %11, i32* %18, align 8, !alias.scope !5
  %19 = tail call i32 @_ZN5blink20AsAtRuleDescriptorIDEN3WTF10StringViewE(%"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %2) #11
  ret i32 %19
}

declare i32 @_ZN5blink20AsAtRuleDescriptorIDEN3WTF10StringViewE(%"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14CSSParserToken2IdEv(%"class.blink::CSSParserToken"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 63
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %28

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 3
  %9 = bitcast %union.anon* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %28

12:                                               ; preds = %7
  %13 = and i32 %4, 262144
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 2
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !8
  %18 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 4, !noalias !8
  %20 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %21 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %22 = select i1 %14, i64 %20, i64 %21
  %23 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %22, i64* %23, align 8, !alias.scope !8
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %25 = bitcast i8** %24 to i64*
  store i64 %17, i64* %25, align 8, !alias.scope !8
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %19, i32* %26, align 8, !alias.scope !8
  %27 = tail call i32 @_ZN5blink17CssValueKeywordIDEN3WTF10StringViewE(%"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %2) #11
  store i32 %27, i32* %9, align 8
  br label %28

28:                                               ; preds = %7, %12, %1
  %29 = phi i32 [ 0, %1 ], [ %27, %12 ], [ %10, %7 ]
  ret i32 %29
}

declare i32 @_ZN5blink17CssValueKeywordIDEN3WTF10StringViewE(%"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14CSSParserToken10FunctionIdEv(%"class.blink::CSSParserToken"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 63
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %28

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 3
  %9 = bitcast %union.anon* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %28

12:                                               ; preds = %7
  %13 = and i32 %4, 262144
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 2
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !11
  %18 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 4, !noalias !11
  %20 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %21 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %22 = select i1 %14, i64 %20, i64 %21
  %23 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %22, i64* %23, align 8, !alias.scope !11
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %25 = bitcast i8** %24 to i64*
  store i64 %17, i64* %25, align 8, !alias.scope !11
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %19, i32* %26, align 8, !alias.scope !11
  %27 = tail call i32 @_ZN5blink17CssValueKeywordIDEN3WTF10StringViewE(%"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %2) #11
  store i32 %27, i32* %9, align 8
  br label %28

28:                                               ; preds = %7, %12, %1
  %29 = phi i32 [ 0, %1 ], [ %27, %12 ], [ %10, %7 ]
  ret i32 %29
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14CSSParserToken16HasStringBackingEv(%"class.blink::CSSParserToken"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 63
  %5 = icmp ult i32 %4, 30
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = trunc i32 %4 to i30
  %8 = lshr i30 -536870369, %7
  %9 = and i30 %8, 1
  %10 = icmp ne i30 %9, 0
  ret i1 %10

11:                                               ; preds = %1
  ret i1 false
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14CSSParserToken21CopyWithUpdatedStringERKN3WTF10StringViewE(%"class.blink::CSSParserToken"* noalias nocapture sret, %"class.blink::CSSParserToken"* nocapture readonly, %"class.WTF::StringView"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 2
  %6 = bitcast %"class.blink::CSSParserToken"* %0 to i8*
  %7 = bitcast %"class.blink::CSSParserToken"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
  %8 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  store i32 %14, i32* %4, align 4
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = shl i32 %16, 18
  %20 = and i32 %19, 262144
  %21 = and i32 %18, -262145
  %22 = or i32 %21, %20
  store i32 %22, i32* %17, align 8
  %23 = bitcast i8** %5 to i64*
  store i64 %12, i64* %23, align 8
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14CSSParserToken21ValueDataCharRawEqualERKS0_(%"class.blink::CSSParserToken"* nocapture readonly, %"class.blink::CSSParserToken"* nocapture readonly dereferenceable(24)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %72

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 2
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %1, i64 0, i32 2
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %10, %12
  %14 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = bitcast %"class.blink::CSSParserToken"* %1 to i32*
  %17 = load i32, i32* %16, align 8
  br i1 %13, label %18, label %22

18:                                               ; preds = %8
  %19 = xor i32 %17, %15
  %20 = and i32 %19, 262144
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %72, label %22

22:                                               ; preds = %8, %18
  %23 = and i32 %15, 262144
  %24 = icmp eq i32 %23, 0
  %25 = and i32 %17, 262144
  %26 = icmp ne i32 %25, 0
  br i1 %24, label %49, label %27

27:                                               ; preds = %22
  br i1 %26, label %28, label %32

28:                                               ; preds = %27
  %29 = zext i32 %4 to i64
  %30 = tail call i32 @bcmp(i8* %10, i8* %12, i64 %29) #11
  %31 = icmp eq i32 %30, 0
  br label %72

32:                                               ; preds = %27
  %33 = bitcast i8* %12 to i16*
  %34 = icmp eq i32 %4, 0
  br i1 %34, label %72, label %35

35:                                               ; preds = %32
  %36 = zext i32 %4 to i64
  br label %39

37:                                               ; preds = %39
  %38 = icmp eq i64 %48, %36
  br i1 %38, label %72, label %39

39:                                               ; preds = %37, %35
  %40 = phi i64 [ 0, %35 ], [ %48, %37 ]
  %41 = getelementptr inbounds i8, i8* %10, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = getelementptr inbounds i16, i16* %33, i64 %40
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  %47 = icmp eq i32 %43, %46
  %48 = add nuw nsw i64 %40, 1
  br i1 %47, label %37, label %72

49:                                               ; preds = %22
  %50 = bitcast i8* %10 to i16*
  br i1 %26, label %51, label %67

51:                                               ; preds = %49
  %52 = icmp eq i32 %4, 0
  br i1 %52, label %72, label %53

53:                                               ; preds = %51
  %54 = zext i32 %4 to i64
  br label %57

55:                                               ; preds = %57
  %56 = icmp eq i64 %66, %54
  br i1 %56, label %72, label %57

57:                                               ; preds = %55, %53
  %58 = phi i64 [ 0, %53 ], [ %66, %55 ]
  %59 = getelementptr inbounds i8, i8* %12, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = getelementptr inbounds i16, i16* %50, i64 %58
  %63 = load i16, i16* %62, align 2
  %64 = zext i16 %63 to i32
  %65 = icmp eq i32 %61, %64
  %66 = add nuw nsw i64 %58, 1
  br i1 %65, label %55, label %72

67:                                               ; preds = %49
  %68 = zext i32 %4 to i64
  %69 = shl nuw nsw i64 %68, 1
  %70 = tail call i32 @bcmp(i8* %10, i8* %12, i64 %69) #11
  %71 = icmp eq i32 %70, 0
  br label %72

72:                                               ; preds = %39, %37, %57, %55, %51, %32, %67, %28, %18, %2
  %73 = phi i1 [ false, %2 ], [ true, %18 ], [ %31, %28 ], [ %71, %67 ], [ true, %32 ], [ true, %51 ], [ true, %55 ], [ false, %57 ], [ false, %39 ], [ true, %37 ]
  ret i1 %73
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14CSSParserTokeneqERKS0_(%"class.blink::CSSParserToken"* nocapture readonly, %"class.blink::CSSParserToken"* nocapture readonly dereferenceable(24)) local_unnamed_addr #5 align 2 {
  %3 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 63
  %6 = bitcast %"class.blink::CSSParserToken"* %1 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 63
  %9 = icmp eq i32 %5, %8
  br i1 %9, label %10, label %60

10:                                               ; preds = %2
  switch i32 %5, label %60 [
    i32 6, label %11
    i32 3, label %19
    i32 0, label %27
    i32 1, label %27
    i32 29, label %27
    i32 4, label %27
    i32 9, label %29
    i32 7, label %31
    i32 8, label %31
    i32 16, label %44
  ]

11:                                               ; preds = %10
  %12 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 3
  %13 = bitcast %union.anon* %12 to i16*
  %14 = load i16, i16* %13, align 8
  %15 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %1, i64 0, i32 3
  %16 = bitcast %union.anon* %15 to i16*
  %17 = load i16, i16* %16, align 8
  %18 = icmp eq i16 %14, %17
  br label %60

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 3
  %21 = bitcast %union.anon* %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %1, i64 0, i32 3
  %24 = bitcast %union.anon* %23 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %22, %25
  br i1 %26, label %27, label %60

27:                                               ; preds = %19, %10, %10, %10, %10
  %28 = tail call zeroext i1 @_ZNK5blink14CSSParserToken21ValueDataCharRawEqualERKS0_(%"class.blink::CSSParserToken"* %0, %"class.blink::CSSParserToken"* dereferenceable(24) %1)
  br label %60

29:                                               ; preds = %10
  %30 = tail call zeroext i1 @_ZNK5blink14CSSParserToken21ValueDataCharRawEqualERKS0_(%"class.blink::CSSParserToken"* %0, %"class.blink::CSSParserToken"* dereferenceable(24) %1)
  br i1 %30, label %31, label %60

31:                                               ; preds = %29, %10, %10
  %32 = xor i32 %7, %4
  %33 = and i32 %32, 1536
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %60

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 3, i32 0
  %37 = load double, double* %36, align 8
  %38 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %1, i64 0, i32 3, i32 0
  %39 = load double, double* %38, align 8
  %40 = fcmp oeq double %37, %39
  br i1 %40, label %41, label %60

41:                                               ; preds = %35
  %42 = and i32 %32, 256
  %43 = icmp eq i32 %42, 0
  br label %60

44:                                               ; preds = %10
  %45 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 3
  %46 = bitcast %union.anon* %45 to i32*
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %1, i64 0, i32 3
  %49 = bitcast %union.anon* %48 to i32*
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %47, %50
  br i1 %51, label %52, label %60

52:                                               ; preds = %44
  %53 = bitcast %union.anon* %48 to %struct.anon*
  %54 = bitcast %union.anon* %45 to %struct.anon*
  %55 = getelementptr inbounds %struct.anon, %struct.anon* %54, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %struct.anon, %struct.anon* %53, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %56, %58
  br label %60

60:                                               ; preds = %10, %44, %52, %31, %35, %41, %29, %19, %2, %27, %11
  %61 = phi i1 [ %28, %27 ], [ %18, %11 ], [ false, %2 ], [ false, %19 ], [ false, %29 ], [ false, %35 ], [ false, %31 ], [ %43, %41 ], [ false, %44 ], [ %59, %52 ], [ true, %10 ]
  ret i1 %61
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14CSSParserToken9SerializeERN3WTF13StringBuilderE(%"class.blink::CSSParserToken"* readonly, %"class.WTF::StringBuilder"* dereferenceable(48)) local_unnamed_addr #1 align 2 {
  %3 = alloca i16, align 2
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.WTF::StringView", align 8
  %21 = alloca %"class.WTF::StringView", align 8
  %22 = alloca %"class.WTF::StringView", align 8
  %23 = alloca %"class.WTF::StringView", align 8
  %24 = alloca %"class.WTF::StringView", align 8
  %25 = alloca %"class.WTF::StringView", align 8
  %26 = alloca %"class.WTF::StringView", align 8
  %27 = alloca %"class.WTF::StringView", align 8
  %28 = alloca %"class.WTF::StringView", align 8
  %29 = alloca %"class.WTF::StringView", align 8
  %30 = alloca %"class.WTF::StringView", align 8
  %31 = bitcast %"class.blink::CSSParserToken"* %0 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 63
  switch i32 %33, label %454 [
    i32 0, label %34
    i32 1, label %69
    i32 2, label %104
    i32 3, label %140
    i32 4, label %180
    i32 6, label %221
    i32 7, label %269
    i32 8, label %272
    i32 9, label %275
    i32 16, label %313
    i32 29, label %349
    i32 10, label %384
    i32 11, label %390
    i32 12, label %396
    i32 13, label %402
    i32 14, label %408
    i32 15, label %414
    i32 18, label %420
    i32 19, label %426
    i32 30, label %432
    i32 5, label %438
    i32 17, label %444
    i32 20, label %445
    i32 21, label %446
    i32 22, label %447
    i32 23, label %448
    i32 24, label %449
    i32 25, label %450
    i32 26, label %451
    i32 27, label %452
    i32 28, label %453
  ]

34:                                               ; preds = %2
  %35 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #11
  %37 = and i32 %32, 262144
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 2
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8, !noalias !14
  %42 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 1
  %43 = load i32, i32* %42, align 4, !noalias !14
  %44 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %46 = select i1 %38, i64 %44, i64 %45
  %47 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %46, i64* %47, align 8, !alias.scope !14
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %49 = bitcast i8** %48 to i64*
  store i64 %41, i64* %49, align 8, !alias.scope !14
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %43, i32* %50, align 8, !alias.scope !14
  %51 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %5) #11
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %52, align 8
  call void @_ZN5blink19SerializeIdentifierERKN3WTF6StringERNS0_13StringBuilderEb(%"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::StringBuilder"* dereferenceable(48) %1, i1 zeroext false) #11
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %34
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #11
  br label %68

68:                                               ; preds = %34, %64, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  br label %454

69:                                               ; preds = %2
  %70 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #11
  %71 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #11
  %72 = and i32 %32, 262144
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 2
  %75 = bitcast i8** %74 to i64*
  %76 = load i64, i64* %75, align 8, !noalias !17
  %77 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 1
  %78 = load i32, i32* %77, align 4, !noalias !17
  %79 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %80 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %81 = select i1 %73, i64 %79, i64 %80
  %82 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %81, i64* %82, align 8, !alias.scope !17
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %84 = bitcast i8** %83 to i64*
  store i64 %76, i64* %84, align 8, !alias.scope !17
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %78, i32* %85, align 8, !alias.scope !17
  %86 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %7) #11
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %86, %"class.WTF::StringImpl"** %87, align 8
  call void @_ZN5blink19SerializeIdentifierERKN3WTF6StringERNS0_13StringBuilderEb(%"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::StringBuilder"* dereferenceable(48) %1, i1 zeroext false) #11
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %69
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #11
  br label %103

103:                                              ; preds = %69, %99, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #11
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 40) #11
  br label %454

104:                                              ; preds = %2
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 64) #11
  %105 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #11
  %106 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #11
  %107 = load i32, i32* %31, align 8, !noalias !20
  %108 = and i32 %107, 262144
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 2
  %111 = bitcast i8** %110 to i64*
  %112 = load i64, i64* %111, align 8, !noalias !20
  %113 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 1
  %114 = load i32, i32* %113, align 4, !noalias !20
  %115 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %116 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %117 = select i1 %109, i64 %115, i64 %116
  %118 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %117, i64* %118, align 8, !alias.scope !20
  %119 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %120 = bitcast i8** %119 to i64*
  store i64 %112, i64* %120, align 8, !alias.scope !20
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %114, i32* %121, align 8, !alias.scope !20
  %122 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %9) #11
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %123, align 8
  call void @_ZN5blink19SerializeIdentifierERKN3WTF6StringERNS0_13StringBuilderEb(%"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::StringBuilder"* dereferenceable(48) %1, i1 zeroext false) #11
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %104
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #11
  br label %139

139:                                              ; preds = %104, %135, %138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #11
  br label %454

140:                                              ; preds = %2
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 35) #11
  %141 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #11
  %142 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #11
  %143 = load i32, i32* %31, align 8, !noalias !23
  %144 = and i32 %143, 262144
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 2
  %147 = bitcast i8** %146 to i64*
  %148 = load i64, i64* %147, align 8, !noalias !23
  %149 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 1
  %150 = load i32, i32* %149, align 4, !noalias !23
  %151 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %152 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %153 = select i1 %145, i64 %151, i64 %152
  %154 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %153, i64* %154, align 8, !alias.scope !23
  %155 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %156 = bitcast i8** %155 to i64*
  store i64 %148, i64* %156, align 8, !alias.scope !23
  %157 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %150, i32* %157, align 8, !alias.scope !23
  %158 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %11) #11
  %159 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %158, %"class.WTF::StringImpl"** %159, align 8
  %160 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 3
  %161 = bitcast %union.anon* %160 to i32*
  %162 = load i32, i32* %161, align 8
  %163 = icmp eq i32 %162, 1
  call void @_ZN5blink19SerializeIdentifierERKN3WTF6StringERNS0_13StringBuilderEb(%"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::StringBuilder"* dereferenceable(48) %1, i1 zeroext %163) #11
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %179, label %166

166:                                              ; preds = %140
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %175

173:                                              ; preds = %166
  %174 = add i32 %172, -1
  store i32 %174, i32* %171, align 4
  br label %175

175:                                              ; preds = %173, %166
  %176 = phi i32 [ %174, %173 ], [ %172, %166 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #11
  br label %179

179:                                              ; preds = %140, %175, %178
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #11
  br label %454

180:                                              ; preds = %2
  %181 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %181) #11
  %182 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %183 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %182, i64* %183, align 8
  %184 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %184, align 8
  %185 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 4, i32* %185, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181) #11
  %186 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #11
  %187 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %187) #11
  %188 = load i32, i32* %31, align 8, !noalias !26
  %189 = and i32 %188, 262144
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 2
  %192 = bitcast i8** %191 to i64*
  %193 = load i64, i64* %192, align 8, !noalias !26
  %194 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 1
  %195 = load i32, i32* %194, align 4, !noalias !26
  %196 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %197 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %198 = select i1 %190, i64 %196, i64 %197
  %199 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %198, i64* %199, align 8, !alias.scope !26
  %200 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %201 = bitcast i8** %200 to i64*
  store i64 %193, i64* %201, align 8, !alias.scope !26
  %202 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %195, i32* %202, align 8, !alias.scope !26
  %203 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %14) #11
  %204 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %203, %"class.WTF::StringImpl"** %204, align 8
  call void @_ZN5blink19SerializeIdentifierERKN3WTF6StringERNS0_13StringBuilderEb(%"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.WTF::StringBuilder"* dereferenceable(48) %1, i1 zeroext false) #11
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %206, label %220, label %207

207:                                              ; preds = %180
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load atomic i32, i32* %208 monotonic, align 4
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  br i1 %211, label %214, label %216

214:                                              ; preds = %207
  %215 = add i32 %213, -1
  store i32 %215, i32* %212, align 4
  br label %216

216:                                              ; preds = %214, %207
  %217 = phi i32 [ %215, %214 ], [ %213, %207 ]
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %205) #11
  br label %220

220:                                              ; preds = %180, %216, %219
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %187) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #11
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 41) #11
  br label %454

221:                                              ; preds = %2
  %222 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 3
  %223 = bitcast %union.anon* %222 to i16*
  %224 = load i16, i16* %223, align 8
  %225 = icmp eq i16 %224, 92
  br i1 %225, label %226, label %232

226:                                              ; preds = %221
  %227 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %227) #11
  %228 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %229 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %228, i64* %229, align 8
  %230 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8** %230, align 8
  %231 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 2, i32* %231, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %15)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %227) #11
  br label %454

232:                                              ; preds = %221
  %233 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %233)
  store i16 %224, i16* %3, align 2
  %234 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 3
  %235 = load i8, i8* %234, align 4, !range !29
  %236 = icmp ne i8 %235, 0
  %237 = icmp ult i16 %224, 256
  %238 = and i1 %237, %236
  br i1 %238, label %239, label %241

239:                                              ; preds = %232
  %240 = trunc i16 %224 to i8
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext %240) #11
  br label %268

241:                                              ; preds = %232
  %242 = icmp eq i8 %235, 0
  br i1 %242, label %243, label %247

243:                                              ; preds = %241
  %244 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 4
  %245 = load i8, i8* %244, align 1, !range !29
  %246 = icmp eq i8 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %243, %241
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %1, i32 1) #11
  br label %248

248:                                              ; preds = %247, %243
  %249 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1
  %250 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %251 = load i32, i32* %250, align 4
  %252 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %253 = load i32, i32* %252, align 8
  %254 = icmp eq i32 %251, %253
  br i1 %254, label %262, label %255, !prof !30

255:                                              ; preds = %248
  %256 = bitcast %union.anon.51* %249 to i16**
  %257 = load i16*, i16** %256, align 8
  %258 = zext i32 %251 to i64
  %259 = getelementptr inbounds i16, i16* %257, i64 %258
  store i16 %224, i16* %259, align 2
  %260 = load i32, i32* %250, align 4
  %261 = add i32 %260, 1
  store i32 %261, i32* %250, align 4
  br label %264

262:                                              ; preds = %248
  %263 = bitcast %union.anon.51* %249 to %"class.WTF::Vector.57"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.57"* %263, i16* nonnull dereferenceable(2) %3) #11
  br label %264

264:                                              ; preds = %262, %255
  %265 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 2
  %266 = load i32, i32* %265, align 8
  %267 = add i32 %266, 1
  store i32 %267, i32* %265, align 8
  br label %268

268:                                              ; preds = %239, %264
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %233)
  br label %454

269:                                              ; preds = %2
  %270 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 3, i32 0
  %271 = load double, double* %270, align 8
  tail call void @_ZN3WTF13StringBuilder12AppendNumberEdj(%"class.WTF::StringBuilder"* %1, double %271, i32 6) #11
  br label %454

272:                                              ; preds = %2
  %273 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 3, i32 0
  %274 = load double, double* %273, align 8
  tail call void @_ZN3WTF13StringBuilder12AppendNumberEdj(%"class.WTF::StringBuilder"* %1, double %274, i32 6) #11
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 37) #11
  br label %454

275:                                              ; preds = %2
  %276 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 3, i32 0
  %277 = load double, double* %276, align 8
  tail call void @_ZN3WTF13StringBuilder12AppendNumberEdj(%"class.WTF::StringBuilder"* %1, double %277, i32 6) #11
  %278 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %278) #11
  %279 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %279) #11
  %280 = load i32, i32* %31, align 8, !noalias !31
  %281 = and i32 %280, 262144
  %282 = icmp eq i32 %281, 0
  %283 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 2
  %284 = bitcast i8** %283 to i64*
  %285 = load i64, i64* %284, align 8, !noalias !31
  %286 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 1
  %287 = load i32, i32* %286, align 4, !noalias !31
  %288 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %289 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %290 = select i1 %282, i64 %288, i64 %289
  %291 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %290, i64* %291, align 8, !alias.scope !31
  %292 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  %293 = bitcast i8** %292 to i64*
  store i64 %285, i64* %293, align 8, !alias.scope !31
  %294 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 %287, i32* %294, align 8, !alias.scope !31
  %295 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %17) #11
  %296 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %295, %"class.WTF::StringImpl"** %296, align 8
  call void @_ZN5blink19SerializeIdentifierERKN3WTF6StringERNS0_13StringBuilderEb(%"class.WTF::String"* nonnull dereferenceable(8) %16, %"class.WTF::StringBuilder"* dereferenceable(48) %1, i1 zeroext false) #11
  %297 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %296, align 8
  %298 = icmp eq %"class.WTF::StringImpl"* %297, null
  br i1 %298, label %312, label %299

299:                                              ; preds = %275
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %301 = load atomic i32, i32* %300 monotonic, align 4
  %302 = and i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 0
  %305 = load i32, i32* %304, align 4
  br i1 %303, label %306, label %308

306:                                              ; preds = %299
  %307 = add i32 %305, -1
  store i32 %307, i32* %304, align 4
  br label %308

308:                                              ; preds = %306, %299
  %309 = phi i32 [ %307, %306 ], [ %305, %299 ]
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %312

311:                                              ; preds = %308
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %297) #11
  br label %312

312:                                              ; preds = %275, %308, %311
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %279) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #11
  br label %454

313:                                              ; preds = %2
  %314 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %314) #11
  %315 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 3
  %316 = bitcast %union.anon* %315 to i32*
  %317 = load i32, i32* %316, align 8
  %318 = bitcast %union.anon* %315 to %struct.anon*
  %319 = getelementptr inbounds %struct.anon, %struct.anon* %318, i64 0, i32 1
  %320 = load i32, i32* %319, align 4
  %321 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i32 %317, i32 %320) #11
  %322 = icmp eq %"class.WTF::StringImpl"* %321, null
  br i1 %322, label %323, label %328

323:                                              ; preds = %313
  %324 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* null, i8** %324, align 8
  %325 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %326 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %325, i64* %326, align 8
  %327 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 0, i32* %327, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %18)
  br label %348

328:                                              ; preds = %313
  %329 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 0
  store %"class.WTF::StringImpl"* %321, %"class.WTF::StringImpl"** %329, align 8
  %330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 1
  %331 = load i32, i32* %330, align 4
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 1
  %333 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  %334 = bitcast i8** %333 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %332, %"class.WTF::StringImpl"** %334, align 8
  %335 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 %331, i32* %335, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %18)
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = load atomic i32, i32* %336 monotonic, align 4
  %338 = and i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 0
  %341 = load i32, i32* %340, align 4
  br i1 %339, label %342, label %344

342:                                              ; preds = %328
  %343 = add i32 %341, -1
  store i32 %343, i32* %340, align 4
  br label %344

344:                                              ; preds = %342, %328
  %345 = phi i32 [ %343, %342 ], [ %341, %328 ]
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %347, label %348

347:                                              ; preds = %344
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %321) #11
  br label %348

348:                                              ; preds = %323, %344, %347
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %314) #11
  br label %454

349:                                              ; preds = %2
  %350 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %350) #11
  %351 = bitcast %"class.WTF::StringView"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %351) #11
  %352 = and i32 %32, 262144
  %353 = icmp eq i32 %352, 0
  %354 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 2
  %355 = bitcast i8** %354 to i64*
  %356 = load i64, i64* %355, align 8, !noalias !34
  %357 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %0, i64 0, i32 1
  %358 = load i32, i32* %357, align 4, !noalias !34
  %359 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %360 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %361 = select i1 %353, i64 %359, i64 %360
  %362 = bitcast %"class.WTF::StringView"* %20 to i64*
  store i64 %361, i64* %362, align 8, !alias.scope !34
  %363 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  %364 = bitcast i8** %363 to i64*
  store i64 %356, i64* %364, align 8, !alias.scope !34
  %365 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 2
  store i32 %358, i32* %365, align 8, !alias.scope !34
  %366 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %20) #11
  %367 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %366, %"class.WTF::StringImpl"** %367, align 8
  call void @_ZN5blink15SerializeStringERKN3WTF6StringERNS0_13StringBuilderE(%"class.WTF::String"* nonnull dereferenceable(8) %19, %"class.WTF::StringBuilder"* dereferenceable(48) %1) #11
  %368 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %367, align 8
  %369 = icmp eq %"class.WTF::StringImpl"* %368, null
  br i1 %369, label %383, label %370

370:                                              ; preds = %349
  %371 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %368, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %372 = load atomic i32, i32* %371 monotonic, align 4
  %373 = and i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %368, i64 0, i32 0
  %376 = load i32, i32* %375, align 4
  br i1 %374, label %377, label %379

377:                                              ; preds = %370
  %378 = add i32 %376, -1
  store i32 %378, i32* %375, align 4
  br label %379

379:                                              ; preds = %377, %370
  %380 = phi i32 [ %378, %377 ], [ %376, %370 ]
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %382, label %383

382:                                              ; preds = %379
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %368) #11
  br label %383

383:                                              ; preds = %349, %379, %382
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %351) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %350) #11
  br label %454

384:                                              ; preds = %2
  %385 = bitcast %"class.WTF::StringView"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %385) #11
  %386 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %387 = bitcast %"class.WTF::StringView"* %21 to i64*
  store i64 %386, i64* %387, align 8
  %388 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8** %388, align 8
  %389 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 2
  store i32 2, i32* %389, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %21)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %385) #11
  br label %454

390:                                              ; preds = %2
  %391 = bitcast %"class.WTF::StringView"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %391) #11
  %392 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %393 = bitcast %"class.WTF::StringView"* %22 to i64*
  store i64 %392, i64* %393, align 8
  %394 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8** %394, align 8
  %395 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 2
  store i32 2, i32* %395, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %22)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %391) #11
  br label %454

396:                                              ; preds = %2
  %397 = bitcast %"class.WTF::StringView"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %397) #11
  %398 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %399 = bitcast %"class.WTF::StringView"* %23 to i64*
  store i64 %398, i64* %399, align 8
  %400 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %400, align 8
  %401 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 2
  store i32 2, i32* %401, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %23)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %397) #11
  br label %454

402:                                              ; preds = %2
  %403 = bitcast %"class.WTF::StringView"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %403) #11
  %404 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %405 = bitcast %"class.WTF::StringView"* %24 to i64*
  store i64 %404, i64* %405, align 8
  %406 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8** %406, align 8
  %407 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 2
  store i32 2, i32* %407, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %24)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %403) #11
  br label %454

408:                                              ; preds = %2
  %409 = bitcast %"class.WTF::StringView"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %409) #11
  %410 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %411 = bitcast %"class.WTF::StringView"* %25 to i64*
  store i64 %410, i64* %411, align 8
  %412 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8** %412, align 8
  %413 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 2
  store i32 2, i32* %413, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %25)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %409) #11
  br label %454

414:                                              ; preds = %2
  %415 = bitcast %"class.WTF::StringView"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %415) #11
  %416 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %417 = bitcast %"class.WTF::StringView"* %26 to i64*
  store i64 %416, i64* %417, align 8
  %418 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8** %418, align 8
  %419 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 2
  store i32 2, i32* %419, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %26)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %415) #11
  br label %454

420:                                              ; preds = %2
  %421 = bitcast %"class.WTF::StringView"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %421) #11
  %422 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %423 = bitcast %"class.WTF::StringView"* %27 to i64*
  store i64 %422, i64* %423, align 8
  %424 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i8** %424, align 8
  %425 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 2
  store i32 4, i32* %425, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %27)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %421) #11
  br label %454

426:                                              ; preds = %2
  %427 = bitcast %"class.WTF::StringView"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %427) #11
  %428 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %429 = bitcast %"class.WTF::StringView"* %28 to i64*
  store i64 %428, i64* %429, align 8
  %430 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), i8** %430, align 8
  %431 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 2
  store i32 3, i32* %431, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %28)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %427) #11
  br label %454

432:                                              ; preds = %2
  %433 = bitcast %"class.WTF::StringView"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %433) #11
  %434 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %435 = bitcast %"class.WTF::StringView"* %29 to i64*
  store i64 %434, i64* %435, align 8
  %436 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i8** %436, align 8
  %437 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 2
  store i32 2, i32* %437, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %29)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %433) #11
  br label %454

438:                                              ; preds = %2
  %439 = bitcast %"class.WTF::StringView"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %439) #11
  %440 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %441 = bitcast %"class.WTF::StringView"* %30 to i64*
  store i64 %440, i64* %441, align 8
  %442 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), i8** %442, align 8
  %443 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 2
  store i32 6, i32* %443, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %30)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %439) #11
  br label %454

444:                                              ; preds = %2
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 32) #11
  br label %454

445:                                              ; preds = %2
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 58) #11
  br label %454

446:                                              ; preds = %2
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 59) #11
  br label %454

447:                                              ; preds = %2
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 44) #11
  br label %454

448:                                              ; preds = %2
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 40) #11
  br label %454

449:                                              ; preds = %2
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 41) #11
  br label %454

450:                                              ; preds = %2
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 91) #11
  br label %454

451:                                              ; preds = %2
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 93) #11
  br label %454

452:                                              ; preds = %2
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 123) #11
  br label %454

453:                                              ; preds = %2
  tail call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 125) #11
  br label %454

454:                                              ; preds = %103, %220, %226, %268, %269, %272, %348, %383, %384, %390, %396, %402, %408, %414, %420, %426, %432, %438, %444, %445, %446, %447, %448, %449, %450, %451, %452, %453, %2, %312, %179, %139, %68
  ret void
}

declare void @_ZN5blink19SerializeIdentifierERKN3WTF6StringERNS0_13StringBuilderEb(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringBuilder"* dereferenceable(48), i1 zeroext) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !29
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !30

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #11
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #11
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #11
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare void @_ZN3WTF13StringBuilder12AppendNumberEdj(%"class.WTF::StringBuilder"*, double, i32) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #4

declare void @_ZN5blink15SerializeStringERKN3WTF6StringERNS0_13StringBuilderE(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringBuilder"* dereferenceable(48)) local_unnamed_addr #4

declare i32 @_ZN5blink17CSSPrimitiveValue16StringToUnitTypeEPKhj(i8*, i32) local_unnamed_addr #4

declare i32 @_ZN5blink17CSSPrimitiveValue16StringToUnitTypeEPKDsj(i16*, i32) local_unnamed_addr #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !29
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !29
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #11
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !30

22:                                               ; preds = %15
  %23 = bitcast %union.anon.51* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.51* %16 to %"class.WTF::Vector.57"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.57"* %30, i16* nonnull dereferenceable(2) %3) #11
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !29
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #11
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !30

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.52"* %41, i8* nonnull dereferenceable(1) %4) #11
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.52"*, i8* dereferenceable(1)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.52"* %0, i32 %5) #11
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.52"* %0, i32 %5) #11
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.52"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0), i8* %15, i8* %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !37

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #11
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #11
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.52"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.52"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.52"* %0, i32 %27) #11
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.52"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.52"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.52"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !30

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #11
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.53"* %18, i8* nonnull %6) #11
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #11
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #11
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !37

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #11
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !37

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.53"* %46, i8* %42) #11
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.52"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #11
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.53"*, i8*) local_unnamed_addr #6 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #11
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #4

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.57"*, i16* dereferenceable(2)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.57"* %0, i32 %5) #11
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.57"* %0, i32 %5) #11
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.57"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0), i8* %15, i8* %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !37

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #11
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #11
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.57"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.57"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.57"* %0, i32 %27) #11
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.57"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.57"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.57"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !30

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #11
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.58"* %19, i16* nonnull %6) #11
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #11
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #11
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !37

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #11
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !37

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.58"* %53, i16* %48) #11
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.57"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.57", %"class.WTF::Vector.57"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.58"*, i16*) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #11
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5blink14CSSParserToken5ValueEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink14CSSParserToken5ValueEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink14CSSParserToken5ValueEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!13 = distinct !{!13, !"_ZNK5blink14CSSParserToken5ValueEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!16 = distinct !{!16, !"_ZNK5blink14CSSParserToken5ValueEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!19 = distinct !{!19, !"_ZNK5blink14CSSParserToken5ValueEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!22 = distinct !{!22, !"_ZNK5blink14CSSParserToken5ValueEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!25 = distinct !{!25, !"_ZNK5blink14CSSParserToken5ValueEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!28 = distinct !{!28, !"_ZNK5blink14CSSParserToken5ValueEv"}
!29 = !{i8 0, i8 2}
!30 = !{!"branch_weights", i32 1, i32 2000}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!33 = distinct !{!33, !"_ZNK5blink14CSSParserToken5ValueEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!36 = distinct !{!36, !"_ZNK5blink14CSSParserToken5ValueEv"}
!37 = !{!"branch_weights", i32 2000, i32 1}
