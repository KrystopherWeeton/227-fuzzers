; ModuleID = '../../third_party/breakpad/breakpad/src/client/linux/minidump_writer/linux_dumper.cc'
source_filename = "../../third_party/breakpad/breakpad/src/client/linux/minidump_writer/linux_dumper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.google_breakpad::LinuxDumper" = type { i32 (...)**, i32, i8*, i64, i32, i32, %"class.std::__1::vector", i32, %"class.google_breakpad::PageAllocator", %"class.google_breakpad::wasteful_vector", %"class.google_breakpad::wasteful_vector.8", %"class.google_breakpad::wasteful_vector.17" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64*, i64*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64* }
%"class.google_breakpad::PageAllocator" = type { i64, %"struct.google_breakpad::PageAllocator::PageHeader"*, i8*, i64, i64 }
%"struct.google_breakpad::PageAllocator::PageHeader" = type { %"struct.google_breakpad::PageAllocator::PageHeader"*, i64 }
%"class.google_breakpad::wasteful_vector" = type { %"class.std::__1::vector.1" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i32* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.google_breakpad::PageStdAllocator" }
%"struct.google_breakpad::PageStdAllocator" = type { %"class.google_breakpad::PageAllocator"*, i32*, i64 }
%"class.google_breakpad::wasteful_vector.8" = type { %"class.std::__1::vector.9" }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"**, %"class.std::__1::__compressed_pair.11" }
%"struct.google_breakpad::MappingInfo" = type { i64, i64, %struct.anon, i64, i8, [255 x i8] }
%struct.anon = type { i64, i64 }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12", %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.google_breakpad::MappingInfo"** }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.google_breakpad::PageStdAllocator.14" }
%"struct.google_breakpad::PageStdAllocator.14" = type { %"class.google_breakpad::PageAllocator"*, %"struct.google_breakpad::MappingInfo"**, i64 }
%"class.google_breakpad::wasteful_vector.17" = type { %"class.std::__1::vector.18" }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { i64*, i64*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.google_breakpad::PageStdAllocator.22" }
%"struct.google_breakpad::PageStdAllocator.22" = type { %"class.google_breakpad::PageAllocator"*, i64*, i64 }
%struct.Elf64_auxv_t = type { i64, %union.anon.33 }
%union.anon.33 = type { i64 }
%"class.google_breakpad::wasteful_vector.23" = type opaque
%"class.google_breakpad::MemoryMappedFile" = type { %"class.google_breakpad::MemoryRange" }
%"class.google_breakpad::MemoryRange" = type { i8*, i64 }
%struct.kernel_stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [3 x i64] }
%struct.siginfo_t = type { i32, i32, i32, i32, %union.anon }
%union.anon = type { %struct.anon.27, [80 x i8] }
%struct.anon.27 = type { i32, i32, i32, i64, i64 }
%"class.google_breakpad::LineReader" = type { i32, i8, i32, [512 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN15google_breakpad13PageAllocator5AllocEm = comdat any

$_ZNSt3__16vectorImN15google_breakpad16PageStdAllocatorImEEE8__appendEm = comdat any

@_ZTVN15google_breakpad11LinuxDumperE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.google_breakpad::LinuxDumper"*)* @_ZN15google_breakpad11LinuxDumperD2Ev to i8*), i8* bitcast (void (%"class.google_breakpad::LinuxDumper"*)* @_ZN15google_breakpad11LinuxDumperD0Ev to i8*), i8* bitcast (i1 (%"class.google_breakpad::LinuxDumper"*)* @_ZN15google_breakpad11LinuxDumper4InitEv to i8*), i8* bitcast (i1 (%"class.google_breakpad::LinuxDumper"*)* @_ZN15google_breakpad11LinuxDumper8LateInitEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.google_breakpad::LinuxDumper"*)* @_ZN15google_breakpad11LinuxDumper17EnumerateMappingsEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZN15google_breakpadL21kLinuxGateLibraryNameE = internal constant [14 x i8] c"linux-gate.so\00", align 1
@.str = private unnamed_addr constant [7 x i8] c"SIGHUP\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"SIGINT\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"SIGQUIT\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"SIGILL\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"SIGTRAP\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"SIGABRT\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"SIGBUS\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"SIGFPE\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"SIGKILL\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"SIGUSR1\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"SIGSEGV\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"SIGUSR2\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"SIGPIPE\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"SIGALRM\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"SIGTERM\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"SIGSTKFLT\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"SIGCHLD\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"SIGCONT\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"SIGSTOP\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"SIGTSTP\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"SIGTTIN\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"SIGTTOU\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"SIGURG\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"SIGXCPU\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"SIGXFSZ\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"SIGVTALRM\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"SIGPROF\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"SIGWINCH\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"SIGIO\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"SIGPWR\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"SIGSYS\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"DUMP_REQUESTED\00", align 1
@.str.32 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str.33 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c"auxv\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] c"maps\00", align 1
@_ZL14kDeletedSuffix = internal constant [11 x i8] c" (deleted)\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"exe\00", align 1
@_ZL23kMappedFileUnsafePrefix = internal constant [6 x i8] c"/dev/\00", align 1
@switch.table._ZNK15google_breakpad11LinuxDumper20GetCrashSignalStringEv = private unnamed_addr constant [33 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)], align 8

@_ZN15google_breakpad11LinuxDumperD1Ev = hidden unnamed_addr alias void (%"class.google_breakpad::LinuxDumper"*), void (%"class.google_breakpad::LinuxDumper"*)* @_ZN15google_breakpad11LinuxDumperD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15google_breakpad11LinuxDumperC2EiPKc(%"class.google_breakpad::LinuxDumper"*, i32, i8*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN15google_breakpad11LinuxDumperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 1
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 2
  store i8* %2, i8** %6, align 8
  %7 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 7
  %9 = bitcast i64* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 40, i1 false)
  store i32 %1, i32* %8, align 8
  %10 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 8
  %11 = getelementptr inbounds %"class.google_breakpad::PageAllocator", %"class.google_breakpad::PageAllocator"* %10, i64 0, i32 0
  %12 = tail call i32 @getpagesize() #13
  %13 = sext i32 %12 to i64
  store i64 %13, i64* %11, align 8
  %14 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 8, i32 1
  %15 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 9
  %16 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %17 = bitcast %"struct.google_breakpad::PageAllocator::PageHeader"** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 56, i1 false)
  store %"class.google_breakpad::PageAllocator"* %10, %"class.google_breakpad::PageAllocator"** %16, align 8
  %18 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %19 = bitcast i32** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #14
  %20 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast i32** %20 to i64*
  %22 = bitcast %"class.google_breakpad::wasteful_vector"* %15 to i64*
  %23 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %24 = bitcast i32** %23 to i64*
  %25 = tail call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %10, i64 32) #14
  %26 = getelementptr inbounds %"class.google_breakpad::wasteful_vector", %"class.google_breakpad::wasteful_vector"* %15, i64 0, i32 0, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = ptrtoint i32* %27 to i64
  %29 = load i32*, i32** %23, align 8
  %30 = bitcast i32* %29 to i8*
  %31 = ptrtoint i8* %25 to i64
  %32 = getelementptr inbounds i8, i8* %25, i64 32
  %33 = ptrtoint i8* %32 to i64
  %34 = icmp eq i32* %29, %27
  br i1 %34, label %194, label %35

35:                                               ; preds = %3
  %36 = bitcast i8* %25 to i32*
  %37 = getelementptr i32, i32* %29, i64 -1
  %38 = ptrtoint i32* %37 to i64
  %39 = sub i64 %38, %28
  %40 = lshr i64 %39, 2
  %41 = add nuw nsw i64 %40, 1
  %42 = icmp ult i64 %41, 8
  br i1 %42, label %139, label %43

43:                                               ; preds = %35
  %44 = getelementptr i32, i32* %29, i64 -1
  %45 = ptrtoint i32* %44 to i64
  %46 = sub i64 %45, %28
  %47 = lshr i64 %46, 2
  %48 = and i64 %46, -4
  %49 = xor i64 %48, -4
  %50 = getelementptr i8, i8* %25, i64 %49
  %51 = xor i64 %47, -1
  %52 = getelementptr i32, i32* %29, i64 %51
  %53 = bitcast i32* %52 to i8*
  %54 = icmp ult i8* %50, %30
  %55 = icmp ugt i8* %25, %53
  %56 = and i1 %54, %55
  br i1 %56, label %139, label %57

57:                                               ; preds = %43
  %58 = and i64 %41, 9223372036854775800
  %59 = sub nsw i64 0, %58
  %60 = getelementptr i32, i32* %36, i64 %59
  %61 = sub nsw i64 0, %58
  %62 = getelementptr i32, i32* %29, i64 %61
  %63 = add nsw i64 %58, -8
  %64 = lshr exact i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %63, 0
  br i1 %67, label %114, label %68

68:                                               ; preds = %57
  %69 = sub nuw nsw i64 %65, %66
  %70 = getelementptr i8, i8* %25, i64 -4
  %71 = bitcast i8* %70 to i32*
  %72 = getelementptr i32, i32* %29, i64 -1
  %73 = getelementptr i8, i8* %25, i64 -4
  %74 = bitcast i8* %73 to i32*
  %75 = getelementptr i32, i32* %29, i64 -1
  br label %76

76:                                               ; preds = %76, %68
  %77 = phi i64 [ 0, %68 ], [ %111, %76 ]
  %78 = phi i64 [ %69, %68 ], [ %112, %76 ]
  %79 = sub i64 0, %77
  %80 = sub i64 0, %77
  %81 = getelementptr inbounds i32, i32* %71, i64 %79
  %82 = getelementptr inbounds i32, i32* %72, i64 %80
  %83 = getelementptr inbounds i32, i32* %82, i64 -3
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4, !alias.scope !2
  %86 = getelementptr inbounds i32, i32* %82, i64 -4
  %87 = getelementptr inbounds i32, i32* %86, i64 -3
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !2
  %90 = getelementptr inbounds i32, i32* %81, i64 -3
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> %85, <4 x i32>* %91, align 4, !alias.scope !5, !noalias !2
  %92 = getelementptr inbounds i32, i32* %81, i64 -4
  %93 = getelementptr inbounds i32, i32* %92, i64 -3
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %94, align 4, !alias.scope !5, !noalias !2
  %95 = sub nuw nsw i64 -8, %77
  %96 = sub nuw nsw i64 -8, %77
  %97 = getelementptr inbounds i32, i32* %74, i64 %95
  %98 = getelementptr inbounds i32, i32* %75, i64 %96
  %99 = getelementptr inbounds i32, i32* %98, i64 -3
  %100 = bitcast i32* %99 to <4 x i32>*
  %101 = load <4 x i32>, <4 x i32>* %100, align 4, !alias.scope !2
  %102 = getelementptr inbounds i32, i32* %98, i64 -4
  %103 = getelementptr inbounds i32, i32* %102, i64 -3
  %104 = bitcast i32* %103 to <4 x i32>*
  %105 = load <4 x i32>, <4 x i32>* %104, align 4, !alias.scope !2
  %106 = getelementptr inbounds i32, i32* %97, i64 -3
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %107, align 4, !alias.scope !5, !noalias !2
  %108 = getelementptr inbounds i32, i32* %97, i64 -4
  %109 = getelementptr inbounds i32, i32* %108, i64 -3
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %105, <4 x i32>* %110, align 4, !alias.scope !5, !noalias !2
  %111 = add i64 %77, 16
  %112 = add i64 %78, -2
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %76, !llvm.loop !7

114:                                              ; preds = %76, %57
  %115 = phi i64 [ 0, %57 ], [ %111, %76 ]
  %116 = icmp eq i64 %66, 0
  br i1 %116, label %137, label %117

117:                                              ; preds = %114
  %118 = sub i64 0, %115
  %119 = getelementptr i8, i8* %25, i64 -4
  %120 = bitcast i8* %119 to i32*
  %121 = sub i64 0, %115
  %122 = getelementptr i32, i32* %29, i64 -1
  %123 = getelementptr inbounds i32, i32* %120, i64 %118
  %124 = getelementptr inbounds i32, i32* %122, i64 %121
  %125 = getelementptr inbounds i32, i32* %124, i64 -3
  %126 = bitcast i32* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4, !alias.scope !2
  %128 = getelementptr inbounds i32, i32* %124, i64 -4
  %129 = getelementptr inbounds i32, i32* %128, i64 -3
  %130 = bitcast i32* %129 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 4, !alias.scope !2
  %132 = getelementptr inbounds i32, i32* %123, i64 -3
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %133, align 4, !alias.scope !5, !noalias !2
  %134 = getelementptr inbounds i32, i32* %123, i64 -4
  %135 = getelementptr inbounds i32, i32* %134, i64 -3
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %131, <4 x i32>* %136, align 4, !alias.scope !5, !noalias !2
  br label %137

137:                                              ; preds = %114, %117
  %138 = icmp eq i64 %41, %58
  br i1 %138, label %191, label %139

139:                                              ; preds = %137, %43, %35
  %140 = phi i32* [ %36, %43 ], [ %36, %35 ], [ %60, %137 ]
  %141 = phi i32* [ %29, %43 ], [ %29, %35 ], [ %62, %137 ]
  %142 = getelementptr i32, i32* %141, i64 -1
  %143 = ptrtoint i32* %142 to i64
  %144 = sub i64 %143, %28
  %145 = lshr i64 %144, 2
  %146 = add nuw nsw i64 %145, 1
  %147 = and i64 %146, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %158, label %149

149:                                              ; preds = %139, %149
  %150 = phi i32* [ %153, %149 ], [ %140, %139 ]
  %151 = phi i32* [ %154, %149 ], [ %141, %139 ]
  %152 = phi i64 [ %156, %149 ], [ %147, %139 ]
  %153 = getelementptr inbounds i32, i32* %150, i64 -1
  %154 = getelementptr inbounds i32, i32* %151, i64 -1
  %155 = load i32, i32* %154, align 4
  store i32 %155, i32* %153, align 4
  %156 = add i64 %152, -1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %149, !llvm.loop !9

158:                                              ; preds = %149, %139
  %159 = phi i32* [ undef, %139 ], [ %153, %149 ]
  %160 = phi i32* [ %140, %139 ], [ %153, %149 ]
  %161 = phi i32* [ %141, %139 ], [ %154, %149 ]
  %162 = icmp ult i64 %144, 28
  br i1 %162, label %191, label %163

163:                                              ; preds = %158, %163
  %164 = phi i32* [ %187, %163 ], [ %160, %158 ]
  %165 = phi i32* [ %188, %163 ], [ %161, %158 ]
  %166 = getelementptr inbounds i32, i32* %164, i64 -1
  %167 = getelementptr inbounds i32, i32* %165, i64 -1
  %168 = load i32, i32* %167, align 4
  store i32 %168, i32* %166, align 4
  %169 = getelementptr inbounds i32, i32* %164, i64 -2
  %170 = getelementptr inbounds i32, i32* %165, i64 -2
  %171 = load i32, i32* %170, align 4
  store i32 %171, i32* %169, align 4
  %172 = getelementptr inbounds i32, i32* %164, i64 -3
  %173 = getelementptr inbounds i32, i32* %165, i64 -3
  %174 = load i32, i32* %173, align 4
  store i32 %174, i32* %172, align 4
  %175 = getelementptr inbounds i32, i32* %164, i64 -4
  %176 = getelementptr inbounds i32, i32* %165, i64 -4
  %177 = load i32, i32* %176, align 4
  store i32 %177, i32* %175, align 4
  %178 = getelementptr inbounds i32, i32* %164, i64 -5
  %179 = getelementptr inbounds i32, i32* %165, i64 -5
  %180 = load i32, i32* %179, align 4
  store i32 %180, i32* %178, align 4
  %181 = getelementptr inbounds i32, i32* %164, i64 -6
  %182 = getelementptr inbounds i32, i32* %165, i64 -6
  %183 = load i32, i32* %182, align 4
  store i32 %183, i32* %181, align 4
  %184 = getelementptr inbounds i32, i32* %164, i64 -7
  %185 = getelementptr inbounds i32, i32* %165, i64 -7
  %186 = load i32, i32* %185, align 4
  store i32 %186, i32* %184, align 4
  %187 = getelementptr inbounds i32, i32* %164, i64 -8
  %188 = getelementptr inbounds i32, i32* %165, i64 -8
  %189 = load i32, i32* %188, align 4
  store i32 %189, i32* %187, align 4
  %190 = icmp eq i32* %188, %27
  br i1 %190, label %191, label %163, !llvm.loop !11

191:                                              ; preds = %158, %163, %137
  %192 = phi i32* [ %60, %137 ], [ %159, %158 ], [ %187, %163 ]
  %193 = ptrtoint i32* %192 to i64
  br label %194

194:                                              ; preds = %191, %3
  %195 = phi i64 [ %193, %191 ], [ %31, %3 ]
  store i64 %195, i64* %22, align 8
  store i64 %31, i64* %24, align 8
  store i64 %33, i64* %21, align 8
  %196 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10
  %197 = bitcast %"class.google_breakpad::wasteful_vector.8"* %196 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %197, i8 0, i64 24, i1 false) #14
  %198 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  store %"class.google_breakpad::PageAllocator"* %10, %"class.google_breakpad::PageAllocator"** %198, align 8
  %199 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %200 = bitcast %"struct.google_breakpad::MappingInfo"*** %199 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %200, i8 0, i64 16, i1 false) #14
  %201 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10, i32 0, i32 0, i32 2, i32 0, i32 0
  %202 = bitcast %"struct.google_breakpad::MappingInfo"*** %201 to i64*
  %203 = bitcast %"class.google_breakpad::wasteful_vector.8"* %196 to i64*
  %204 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %205 = bitcast %"struct.google_breakpad::MappingInfo"*** %204 to i64*
  %206 = tail call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %10, i64 128) #14
  %207 = getelementptr inbounds %"class.google_breakpad::wasteful_vector.8", %"class.google_breakpad::wasteful_vector.8"* %196, i64 0, i32 0, i32 0, i32 0
  %208 = load %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"*** %207, align 8
  %209 = ptrtoint %"struct.google_breakpad::MappingInfo"** %208 to i64
  %210 = load %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"*** %204, align 8
  %211 = bitcast %"struct.google_breakpad::MappingInfo"** %210 to i8*
  %212 = ptrtoint i8* %206 to i64
  %213 = getelementptr inbounds i8, i8* %206, i64 128
  %214 = ptrtoint i8* %213 to i64
  %215 = icmp eq %"struct.google_breakpad::MappingInfo"** %210, %208
  br i1 %215, label %393, label %216

216:                                              ; preds = %194
  %217 = bitcast i8* %206 to %"struct.google_breakpad::MappingInfo"**
  %218 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %210, i64 -1
  %219 = ptrtoint %"struct.google_breakpad::MappingInfo"** %218 to i64
  %220 = sub i64 %219, %209
  %221 = lshr i64 %220, 3
  %222 = add nuw nsw i64 %221, 1
  %223 = icmp ult i64 %222, 4
  br i1 %223, label %320, label %224

224:                                              ; preds = %216
  %225 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %210, i64 -1
  %226 = ptrtoint %"struct.google_breakpad::MappingInfo"** %225 to i64
  %227 = sub i64 %226, %209
  %228 = lshr i64 %227, 3
  %229 = and i64 %227, -8
  %230 = xor i64 %229, -8
  %231 = getelementptr i8, i8* %206, i64 %230
  %232 = xor i64 %228, -1
  %233 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %210, i64 %232
  %234 = bitcast %"struct.google_breakpad::MappingInfo"** %233 to i8*
  %235 = icmp ult i8* %231, %211
  %236 = icmp ugt i8* %206, %234
  %237 = and i1 %235, %236
  br i1 %237, label %320, label %238

238:                                              ; preds = %224
  %239 = and i64 %222, 4611686018427387900
  %240 = sub nsw i64 0, %239
  %241 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %217, i64 %240
  %242 = sub nsw i64 0, %239
  %243 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %210, i64 %242
  %244 = add nsw i64 %239, -4
  %245 = lshr exact i64 %244, 2
  %246 = add nuw nsw i64 %245, 1
  %247 = and i64 %246, 1
  %248 = icmp eq i64 %244, 0
  br i1 %248, label %295, label %249

249:                                              ; preds = %238
  %250 = sub nuw nsw i64 %246, %247
  %251 = getelementptr i8, i8* %206, i64 -8
  %252 = bitcast i8* %251 to %"struct.google_breakpad::MappingInfo"**
  %253 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %210, i64 -1
  %254 = getelementptr i8, i8* %206, i64 -8
  %255 = bitcast i8* %254 to %"struct.google_breakpad::MappingInfo"**
  %256 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %210, i64 -1
  br label %257

257:                                              ; preds = %257, %249
  %258 = phi i64 [ 0, %249 ], [ %292, %257 ]
  %259 = phi i64 [ %250, %249 ], [ %293, %257 ]
  %260 = sub i64 0, %258
  %261 = sub i64 0, %258
  %262 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %252, i64 %260
  %263 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %253, i64 %261
  %264 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %263, i64 -1
  %265 = bitcast %"struct.google_breakpad::MappingInfo"** %264 to <2 x i64>*
  %266 = load <2 x i64>, <2 x i64>* %265, align 8, !alias.scope !12
  %267 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %263, i64 -2
  %268 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %267, i64 -1
  %269 = bitcast %"struct.google_breakpad::MappingInfo"** %268 to <2 x i64>*
  %270 = load <2 x i64>, <2 x i64>* %269, align 8, !alias.scope !12
  %271 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %262, i64 -1
  %272 = bitcast %"struct.google_breakpad::MappingInfo"** %271 to <2 x i64>*
  store <2 x i64> %266, <2 x i64>* %272, align 8, !alias.scope !15, !noalias !12
  %273 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %262, i64 -2
  %274 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %273, i64 -1
  %275 = bitcast %"struct.google_breakpad::MappingInfo"** %274 to <2 x i64>*
  store <2 x i64> %270, <2 x i64>* %275, align 8, !alias.scope !15, !noalias !12
  %276 = sub nuw nsw i64 -4, %258
  %277 = sub nuw nsw i64 -4, %258
  %278 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %255, i64 %276
  %279 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %256, i64 %277
  %280 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %279, i64 -1
  %281 = bitcast %"struct.google_breakpad::MappingInfo"** %280 to <2 x i64>*
  %282 = load <2 x i64>, <2 x i64>* %281, align 8, !alias.scope !12
  %283 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %279, i64 -2
  %284 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %283, i64 -1
  %285 = bitcast %"struct.google_breakpad::MappingInfo"** %284 to <2 x i64>*
  %286 = load <2 x i64>, <2 x i64>* %285, align 8, !alias.scope !12
  %287 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %278, i64 -1
  %288 = bitcast %"struct.google_breakpad::MappingInfo"** %287 to <2 x i64>*
  store <2 x i64> %282, <2 x i64>* %288, align 8, !alias.scope !15, !noalias !12
  %289 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %278, i64 -2
  %290 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %289, i64 -1
  %291 = bitcast %"struct.google_breakpad::MappingInfo"** %290 to <2 x i64>*
  store <2 x i64> %286, <2 x i64>* %291, align 8, !alias.scope !15, !noalias !12
  %292 = add i64 %258, 8
  %293 = add i64 %259, -2
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %257, !llvm.loop !17

295:                                              ; preds = %257, %238
  %296 = phi i64 [ 0, %238 ], [ %292, %257 ]
  %297 = icmp eq i64 %247, 0
  br i1 %297, label %318, label %298

298:                                              ; preds = %295
  %299 = sub i64 0, %296
  %300 = getelementptr i8, i8* %206, i64 -8
  %301 = bitcast i8* %300 to %"struct.google_breakpad::MappingInfo"**
  %302 = sub i64 0, %296
  %303 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %210, i64 -1
  %304 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %301, i64 %299
  %305 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %303, i64 %302
  %306 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %305, i64 -1
  %307 = bitcast %"struct.google_breakpad::MappingInfo"** %306 to <2 x i64>*
  %308 = load <2 x i64>, <2 x i64>* %307, align 8, !alias.scope !12
  %309 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %305, i64 -2
  %310 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %309, i64 -1
  %311 = bitcast %"struct.google_breakpad::MappingInfo"** %310 to <2 x i64>*
  %312 = load <2 x i64>, <2 x i64>* %311, align 8, !alias.scope !12
  %313 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %304, i64 -1
  %314 = bitcast %"struct.google_breakpad::MappingInfo"** %313 to <2 x i64>*
  store <2 x i64> %308, <2 x i64>* %314, align 8, !alias.scope !15, !noalias !12
  %315 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %304, i64 -2
  %316 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %315, i64 -1
  %317 = bitcast %"struct.google_breakpad::MappingInfo"** %316 to <2 x i64>*
  store <2 x i64> %312, <2 x i64>* %317, align 8, !alias.scope !15, !noalias !12
  br label %318

318:                                              ; preds = %295, %298
  %319 = icmp eq i64 %222, %239
  br i1 %319, label %390, label %320

320:                                              ; preds = %318, %224, %216
  %321 = phi %"struct.google_breakpad::MappingInfo"** [ %217, %224 ], [ %217, %216 ], [ %241, %318 ]
  %322 = phi %"struct.google_breakpad::MappingInfo"** [ %210, %224 ], [ %210, %216 ], [ %243, %318 ]
  %323 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %322, i64 -1
  %324 = ptrtoint %"struct.google_breakpad::MappingInfo"** %323 to i64
  %325 = sub i64 %324, %209
  %326 = lshr i64 %325, 3
  %327 = add nuw nsw i64 %326, 1
  %328 = and i64 %327, 7
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %341, label %330

330:                                              ; preds = %320, %330
  %331 = phi %"struct.google_breakpad::MappingInfo"** [ %334, %330 ], [ %321, %320 ]
  %332 = phi %"struct.google_breakpad::MappingInfo"** [ %335, %330 ], [ %322, %320 ]
  %333 = phi i64 [ %339, %330 ], [ %328, %320 ]
  %334 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %331, i64 -1
  %335 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %332, i64 -1
  %336 = bitcast %"struct.google_breakpad::MappingInfo"** %335 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = bitcast %"struct.google_breakpad::MappingInfo"** %334 to i64*
  store i64 %337, i64* %338, align 8
  %339 = add i64 %333, -1
  %340 = icmp eq i64 %339, 0
  br i1 %340, label %341, label %330, !llvm.loop !18

341:                                              ; preds = %330, %320
  %342 = phi %"struct.google_breakpad::MappingInfo"** [ undef, %320 ], [ %334, %330 ]
  %343 = phi %"struct.google_breakpad::MappingInfo"** [ %321, %320 ], [ %334, %330 ]
  %344 = phi %"struct.google_breakpad::MappingInfo"** [ %322, %320 ], [ %335, %330 ]
  %345 = icmp ult i64 %325, 56
  br i1 %345, label %390, label %346

346:                                              ; preds = %341, %346
  %347 = phi %"struct.google_breakpad::MappingInfo"** [ %384, %346 ], [ %343, %341 ]
  %348 = phi %"struct.google_breakpad::MappingInfo"** [ %385, %346 ], [ %344, %341 ]
  %349 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %347, i64 -1
  %350 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %348, i64 -1
  %351 = bitcast %"struct.google_breakpad::MappingInfo"** %350 to i64*
  %352 = load i64, i64* %351, align 8
  %353 = bitcast %"struct.google_breakpad::MappingInfo"** %349 to i64*
  store i64 %352, i64* %353, align 8
  %354 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %347, i64 -2
  %355 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %348, i64 -2
  %356 = bitcast %"struct.google_breakpad::MappingInfo"** %355 to i64*
  %357 = load i64, i64* %356, align 8
  %358 = bitcast %"struct.google_breakpad::MappingInfo"** %354 to i64*
  store i64 %357, i64* %358, align 8
  %359 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %347, i64 -3
  %360 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %348, i64 -3
  %361 = bitcast %"struct.google_breakpad::MappingInfo"** %360 to i64*
  %362 = load i64, i64* %361, align 8
  %363 = bitcast %"struct.google_breakpad::MappingInfo"** %359 to i64*
  store i64 %362, i64* %363, align 8
  %364 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %347, i64 -4
  %365 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %348, i64 -4
  %366 = bitcast %"struct.google_breakpad::MappingInfo"** %365 to i64*
  %367 = load i64, i64* %366, align 8
  %368 = bitcast %"struct.google_breakpad::MappingInfo"** %364 to i64*
  store i64 %367, i64* %368, align 8
  %369 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %347, i64 -5
  %370 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %348, i64 -5
  %371 = bitcast %"struct.google_breakpad::MappingInfo"** %370 to i64*
  %372 = load i64, i64* %371, align 8
  %373 = bitcast %"struct.google_breakpad::MappingInfo"** %369 to i64*
  store i64 %372, i64* %373, align 8
  %374 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %347, i64 -6
  %375 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %348, i64 -6
  %376 = bitcast %"struct.google_breakpad::MappingInfo"** %375 to i64*
  %377 = load i64, i64* %376, align 8
  %378 = bitcast %"struct.google_breakpad::MappingInfo"** %374 to i64*
  store i64 %377, i64* %378, align 8
  %379 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %347, i64 -7
  %380 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %348, i64 -7
  %381 = bitcast %"struct.google_breakpad::MappingInfo"** %380 to i64*
  %382 = load i64, i64* %381, align 8
  %383 = bitcast %"struct.google_breakpad::MappingInfo"** %379 to i64*
  store i64 %382, i64* %383, align 8
  %384 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %347, i64 -8
  %385 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %348, i64 -8
  %386 = bitcast %"struct.google_breakpad::MappingInfo"** %385 to i64*
  %387 = load i64, i64* %386, align 8
  %388 = bitcast %"struct.google_breakpad::MappingInfo"** %384 to i64*
  store i64 %387, i64* %388, align 8
  %389 = icmp eq %"struct.google_breakpad::MappingInfo"** %385, %208
  br i1 %389, label %390, label %346, !llvm.loop !19

390:                                              ; preds = %341, %346, %318
  %391 = phi %"struct.google_breakpad::MappingInfo"** [ %241, %318 ], [ %342, %341 ], [ %384, %346 ]
  %392 = ptrtoint %"struct.google_breakpad::MappingInfo"** %391 to i64
  br label %393

393:                                              ; preds = %390, %194
  %394 = phi i64 [ %392, %390 ], [ %212, %194 ]
  store i64 %394, i64* %203, align 8
  store i64 %212, i64* %205, align 8
  store i64 %214, i64* %202, align 8
  %395 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 11
  %396 = bitcast %"class.google_breakpad::wasteful_vector.17"* %395 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %396, i8 0, i64 24, i1 false) #14
  %397 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 11, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  store %"class.google_breakpad::PageAllocator"* %10, %"class.google_breakpad::PageAllocator"** %397, align 8
  %398 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 11, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %399 = bitcast i64** %398 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %399, i8 0, i64 16, i1 false) #14
  %400 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 11, i32 0, i32 0, i32 2, i32 0, i32 0
  %401 = bitcast i64** %400 to i64*
  %402 = bitcast %"class.google_breakpad::wasteful_vector.17"* %395 to i64*
  %403 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %404 = bitcast i64** %403 to i64*
  %405 = tail call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %10, i64 272) #14
  %406 = getelementptr inbounds %"class.google_breakpad::wasteful_vector.17", %"class.google_breakpad::wasteful_vector.17"* %395, i64 0, i32 0, i32 0, i32 0
  %407 = load i64*, i64** %406, align 8
  %408 = ptrtoint i64* %407 to i64
  %409 = load i64*, i64** %403, align 8
  %410 = bitcast i64* %409 to i8*
  %411 = ptrtoint i8* %405 to i64
  %412 = getelementptr inbounds i8, i8* %405, i64 272
  %413 = ptrtoint i8* %412 to i64
  %414 = icmp eq i64* %409, %407
  br i1 %414, label %574, label %415

415:                                              ; preds = %393
  %416 = bitcast i8* %405 to i64*
  %417 = getelementptr i64, i64* %409, i64 -1
  %418 = ptrtoint i64* %417 to i64
  %419 = sub i64 %418, %408
  %420 = lshr i64 %419, 3
  %421 = add nuw nsw i64 %420, 1
  %422 = icmp ult i64 %421, 4
  br i1 %422, label %519, label %423

423:                                              ; preds = %415
  %424 = getelementptr i64, i64* %409, i64 -1
  %425 = ptrtoint i64* %424 to i64
  %426 = sub i64 %425, %408
  %427 = lshr i64 %426, 3
  %428 = and i64 %426, -8
  %429 = xor i64 %428, -8
  %430 = getelementptr i8, i8* %405, i64 %429
  %431 = xor i64 %427, -1
  %432 = getelementptr i64, i64* %409, i64 %431
  %433 = bitcast i64* %432 to i8*
  %434 = icmp ult i8* %430, %410
  %435 = icmp ugt i8* %405, %433
  %436 = and i1 %434, %435
  br i1 %436, label %519, label %437

437:                                              ; preds = %423
  %438 = and i64 %421, 4611686018427387900
  %439 = sub nsw i64 0, %438
  %440 = getelementptr i64, i64* %416, i64 %439
  %441 = sub nsw i64 0, %438
  %442 = getelementptr i64, i64* %409, i64 %441
  %443 = add nsw i64 %438, -4
  %444 = lshr exact i64 %443, 2
  %445 = add nuw nsw i64 %444, 1
  %446 = and i64 %445, 1
  %447 = icmp eq i64 %443, 0
  br i1 %447, label %496, label %448

448:                                              ; preds = %437
  %449 = sub nuw nsw i64 %445, %446
  %450 = getelementptr i8, i8* %405, i64 -8
  %451 = bitcast i8* %450 to i64*
  %452 = getelementptr i64, i64* %409, i64 -1
  %453 = getelementptr i8, i8* %405, i64 -8
  %454 = bitcast i8* %453 to i64*
  %455 = getelementptr i64, i64* %409, i64 -1
  br label %456

456:                                              ; preds = %456, %448
  %457 = phi i64 [ 0, %448 ], [ %491, %456 ]
  %458 = phi i64 [ %449, %448 ], [ %492, %456 ]
  %459 = sub i64 0, %457
  %460 = sub i64 0, %457
  %461 = getelementptr inbounds i64, i64* %451, i64 %459
  %462 = getelementptr inbounds i64, i64* %452, i64 %460
  %463 = getelementptr inbounds i64, i64* %462, i64 -1
  %464 = bitcast i64* %463 to <2 x i64>*
  %465 = load <2 x i64>, <2 x i64>* %464, align 8, !alias.scope !20
  %466 = getelementptr inbounds i64, i64* %462, i64 -2
  %467 = getelementptr inbounds i64, i64* %466, i64 -1
  %468 = bitcast i64* %467 to <2 x i64>*
  %469 = load <2 x i64>, <2 x i64>* %468, align 8, !alias.scope !20
  %470 = getelementptr inbounds i64, i64* %461, i64 -1
  %471 = bitcast i64* %470 to <2 x i64>*
  store <2 x i64> %465, <2 x i64>* %471, align 8, !alias.scope !23, !noalias !20
  %472 = getelementptr inbounds i64, i64* %461, i64 -2
  %473 = getelementptr inbounds i64, i64* %472, i64 -1
  %474 = bitcast i64* %473 to <2 x i64>*
  store <2 x i64> %469, <2 x i64>* %474, align 8, !alias.scope !23, !noalias !20
  %475 = sub nuw nsw i64 -4, %457
  %476 = sub nuw nsw i64 -4, %457
  %477 = getelementptr inbounds i64, i64* %454, i64 %475
  %478 = getelementptr inbounds i64, i64* %455, i64 %476
  %479 = getelementptr inbounds i64, i64* %478, i64 -1
  %480 = bitcast i64* %479 to <2 x i64>*
  %481 = load <2 x i64>, <2 x i64>* %480, align 8, !alias.scope !20
  %482 = getelementptr inbounds i64, i64* %478, i64 -2
  %483 = getelementptr inbounds i64, i64* %482, i64 -1
  %484 = bitcast i64* %483 to <2 x i64>*
  %485 = load <2 x i64>, <2 x i64>* %484, align 8, !alias.scope !20
  %486 = getelementptr inbounds i64, i64* %477, i64 -1
  %487 = bitcast i64* %486 to <2 x i64>*
  store <2 x i64> %481, <2 x i64>* %487, align 8, !alias.scope !23, !noalias !20
  %488 = getelementptr inbounds i64, i64* %477, i64 -2
  %489 = getelementptr inbounds i64, i64* %488, i64 -1
  %490 = bitcast i64* %489 to <2 x i64>*
  store <2 x i64> %485, <2 x i64>* %490, align 8, !alias.scope !23, !noalias !20
  %491 = add i64 %457, 8
  %492 = add i64 %458, -2
  %493 = icmp eq i64 %492, 0
  br i1 %493, label %494, label %456, !llvm.loop !25

494:                                              ; preds = %456
  %495 = sub nuw nsw i64 -8, %457
  br label %496

496:                                              ; preds = %494, %437
  %497 = phi i64 [ 0, %437 ], [ %495, %494 ]
  %498 = icmp eq i64 %446, 0
  br i1 %498, label %517, label %499

499:                                              ; preds = %496
  %500 = getelementptr i8, i8* %405, i64 -8
  %501 = bitcast i8* %500 to i64*
  %502 = getelementptr i64, i64* %409, i64 -1
  %503 = getelementptr inbounds i64, i64* %501, i64 %497
  %504 = getelementptr inbounds i64, i64* %502, i64 %497
  %505 = getelementptr inbounds i64, i64* %504, i64 -1
  %506 = bitcast i64* %505 to <2 x i64>*
  %507 = load <2 x i64>, <2 x i64>* %506, align 8, !alias.scope !20
  %508 = getelementptr inbounds i64, i64* %504, i64 -2
  %509 = getelementptr inbounds i64, i64* %508, i64 -1
  %510 = bitcast i64* %509 to <2 x i64>*
  %511 = load <2 x i64>, <2 x i64>* %510, align 8, !alias.scope !20
  %512 = getelementptr inbounds i64, i64* %503, i64 -1
  %513 = bitcast i64* %512 to <2 x i64>*
  store <2 x i64> %507, <2 x i64>* %513, align 8, !alias.scope !23, !noalias !20
  %514 = getelementptr inbounds i64, i64* %503, i64 -2
  %515 = getelementptr inbounds i64, i64* %514, i64 -1
  %516 = bitcast i64* %515 to <2 x i64>*
  store <2 x i64> %511, <2 x i64>* %516, align 8, !alias.scope !23, !noalias !20
  br label %517

517:                                              ; preds = %496, %499
  %518 = icmp eq i64 %421, %438
  br i1 %518, label %571, label %519

519:                                              ; preds = %517, %423, %415
  %520 = phi i64* [ %416, %423 ], [ %416, %415 ], [ %440, %517 ]
  %521 = phi i64* [ %409, %423 ], [ %409, %415 ], [ %442, %517 ]
  %522 = getelementptr i64, i64* %521, i64 -1
  %523 = ptrtoint i64* %522 to i64
  %524 = sub i64 %523, %408
  %525 = lshr i64 %524, 3
  %526 = add nuw nsw i64 %525, 1
  %527 = and i64 %526, 7
  %528 = icmp eq i64 %527, 0
  br i1 %528, label %538, label %529

529:                                              ; preds = %519, %529
  %530 = phi i64* [ %533, %529 ], [ %520, %519 ]
  %531 = phi i64* [ %534, %529 ], [ %521, %519 ]
  %532 = phi i64 [ %536, %529 ], [ %527, %519 ]
  %533 = getelementptr inbounds i64, i64* %530, i64 -1
  %534 = getelementptr inbounds i64, i64* %531, i64 -1
  %535 = load i64, i64* %534, align 8
  store i64 %535, i64* %533, align 8
  %536 = add i64 %532, -1
  %537 = icmp eq i64 %536, 0
  br i1 %537, label %538, label %529, !llvm.loop !26

538:                                              ; preds = %529, %519
  %539 = phi i64* [ undef, %519 ], [ %533, %529 ]
  %540 = phi i64* [ %520, %519 ], [ %533, %529 ]
  %541 = phi i64* [ %521, %519 ], [ %534, %529 ]
  %542 = icmp ult i64 %524, 56
  br i1 %542, label %571, label %543

543:                                              ; preds = %538, %543
  %544 = phi i64* [ %567, %543 ], [ %540, %538 ]
  %545 = phi i64* [ %568, %543 ], [ %541, %538 ]
  %546 = getelementptr inbounds i64, i64* %544, i64 -1
  %547 = getelementptr inbounds i64, i64* %545, i64 -1
  %548 = load i64, i64* %547, align 8
  store i64 %548, i64* %546, align 8
  %549 = getelementptr inbounds i64, i64* %544, i64 -2
  %550 = getelementptr inbounds i64, i64* %545, i64 -2
  %551 = load i64, i64* %550, align 8
  store i64 %551, i64* %549, align 8
  %552 = getelementptr inbounds i64, i64* %544, i64 -3
  %553 = getelementptr inbounds i64, i64* %545, i64 -3
  %554 = load i64, i64* %553, align 8
  store i64 %554, i64* %552, align 8
  %555 = getelementptr inbounds i64, i64* %544, i64 -4
  %556 = getelementptr inbounds i64, i64* %545, i64 -4
  %557 = load i64, i64* %556, align 8
  store i64 %557, i64* %555, align 8
  %558 = getelementptr inbounds i64, i64* %544, i64 -5
  %559 = getelementptr inbounds i64, i64* %545, i64 -5
  %560 = load i64, i64* %559, align 8
  store i64 %560, i64* %558, align 8
  %561 = getelementptr inbounds i64, i64* %544, i64 -6
  %562 = getelementptr inbounds i64, i64* %545, i64 -6
  %563 = load i64, i64* %562, align 8
  store i64 %563, i64* %561, align 8
  %564 = getelementptr inbounds i64, i64* %544, i64 -7
  %565 = getelementptr inbounds i64, i64* %545, i64 -7
  %566 = load i64, i64* %565, align 8
  store i64 %566, i64* %564, align 8
  %567 = getelementptr inbounds i64, i64* %544, i64 -8
  %568 = getelementptr inbounds i64, i64* %545, i64 -8
  %569 = load i64, i64* %568, align 8
  store i64 %569, i64* %567, align 8
  %570 = icmp eq i64* %568, %407
  br i1 %570, label %571, label %543, !llvm.loop !27

571:                                              ; preds = %538, %543, %517
  %572 = phi i64* [ %440, %517 ], [ %539, %538 ], [ %567, %543 ]
  %573 = ptrtoint i64* %572 to i64
  br label %574

574:                                              ; preds = %393, %571
  %575 = phi i64 [ %573, %571 ], [ %411, %393 ]
  store i64 %575, i64* %402, align 8
  store i64 %411, i64* %404, align 8
  store i64 %413, i64* %401, align 8
  %576 = sub i64 %411, %575
  %577 = ashr exact i64 %576, 3
  %578 = icmp ult i64 %577, 34
  %579 = inttoptr i64 %575 to i64*
  br i1 %578, label %580, label %583

580:                                              ; preds = %574
  %581 = getelementptr inbounds %"class.google_breakpad::wasteful_vector.17", %"class.google_breakpad::wasteful_vector.17"* %395, i64 0, i32 0
  %582 = sub nuw nsw i64 34, %577
  tail call void @_ZNSt3__16vectorImN15google_breakpad16PageStdAllocatorImEEE8__appendEm(%"class.std::__1::vector.18"* %581, i64 %582) #14
  br label %587

583:                                              ; preds = %574
  %584 = icmp eq i64 %576, 272
  br i1 %584, label %587, label %585

585:                                              ; preds = %583
  %586 = getelementptr inbounds i64, i64* %579, i64 34
  store i64* %586, i64** %403, align 8
  br label %587

587:                                              ; preds = %583, %580, %585
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15google_breakpad11LinuxDumperD2Ev(%"class.google_breakpad::LinuxDumper"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN15google_breakpad11LinuxDumperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i64* %4 to i64
  %8 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %9 = bitcast i64** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %12 = load %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"*** %11, align 8
  %13 = icmp eq %"struct.google_breakpad::MappingInfo"** %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"struct.google_breakpad::MappingInfo"** %12 to i64
  %16 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %17 = bitcast %"struct.google_breakpad::MappingInfo"*** %16 to i64*
  store i64 %15, i64* %17, align 8
  br label %18

18:                                               ; preds = %10, %14
  %19 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = icmp eq i32* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = ptrtoint i32* %20 to i64
  %24 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %25 = bitcast i32** %24 to i64*
  store i64 %23, i64* %25, align 8
  br label %26

26:                                               ; preds = %18, %22
  %27 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 8, i32 1
  %28 = load %"struct.google_breakpad::PageAllocator::PageHeader"*, %"struct.google_breakpad::PageAllocator::PageHeader"** %27, align 8
  %29 = icmp eq %"struct.google_breakpad::PageAllocator::PageHeader"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 8, i32 0
  br label %32

32:                                               ; preds = %47, %30
  %33 = phi %"struct.google_breakpad::PageAllocator::PageHeader"* [ %28, %30 ], [ %35, %47 ]
  %34 = getelementptr inbounds %"struct.google_breakpad::PageAllocator::PageHeader", %"struct.google_breakpad::PageAllocator::PageHeader"* %33, i64 0, i32 0
  %35 = load %"struct.google_breakpad::PageAllocator::PageHeader"*, %"struct.google_breakpad::PageAllocator::PageHeader"** %34, align 8
  %36 = getelementptr inbounds %"struct.google_breakpad::PageAllocator::PageHeader", %"struct.google_breakpad::PageAllocator::PageHeader"* %33, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = load i64, i64* %31, align 8
  %39 = mul i64 %38, %37
  %40 = ptrtoint %"struct.google_breakpad::PageAllocator::PageHeader"* %33 to i64
  %41 = tail call i64 asm sideeffect "syscall\0A", "={ax},0,{di},{si},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 11, i64 %40, i64 %39) #14, !srcloc !28
  %42 = icmp ugt i64 %41, -4096
  br i1 %42, label %43, label %47

43:                                               ; preds = %32
  %44 = trunc i64 %41 to i32
  %45 = sub nsw i32 0, %44
  %46 = tail call i32* @__errno_location() #13
  store i32 %45, i32* %46, align 4
  br label %47

47:                                               ; preds = %43, %32
  %48 = icmp eq %"struct.google_breakpad::PageAllocator::PageHeader"* %35, null
  br i1 %48, label %49, label %32

49:                                               ; preds = %47, %26
  %50 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 6, i32 0, i32 0
  %51 = load i64*, i64** %50, align 8
  %52 = icmp eq i64* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %49
  %54 = ptrtoint i64* %51 to i64
  %55 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 6, i32 0, i32 1
  %56 = bitcast i64** %55 to i64*
  store i64 %54, i64* %56, align 8
  %57 = bitcast i64* %51 to i8*
  tail call void @_ZdlPv(i8* %57) #15
  br label %58

58:                                               ; preds = %49, %53
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN15google_breakpad11LinuxDumperD0Ev(%"class.google_breakpad::LinuxDumper"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15google_breakpad11LinuxDumper4InitEv(%"class.google_breakpad::LinuxDumper"*) unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN15google_breakpad11LinuxDumper8ReadAuxvEv(%"class.google_breakpad::LinuxDumper"* %0)
  br i1 %2, label %3, label %14

3:                                                ; preds = %1
  %4 = bitcast %"class.google_breakpad::LinuxDumper"* %0 to i1 (%"class.google_breakpad::LinuxDumper"*)***
  %5 = load i1 (%"class.google_breakpad::LinuxDumper"*)**, i1 (%"class.google_breakpad::LinuxDumper"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %5, i64 11
  %7 = load i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.google_breakpad::LinuxDumper"* %0) #14
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  %10 = load i1 (%"class.google_breakpad::LinuxDumper"*)**, i1 (%"class.google_breakpad::LinuxDumper"*)*** %4, align 8
  %11 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %10, i64 10
  %12 = load i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.google_breakpad::LinuxDumper"* %0) #14
  br label %14

14:                                               ; preds = %9, %3, %1
  %15 = phi i1 [ false, %3 ], [ false, %1 ], [ %13, %9 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15google_breakpad11LinuxDumper8ReadAuxvEv(%"class.google_breakpad::LinuxDumper"*) local_unnamed_addr #0 align 2 {
  %2 = alloca [255 x i8], align 16
  %3 = alloca %struct.Elf64_auxv_t, align 8
  %4 = getelementptr inbounds [255 x i8], [255 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 255, i8* nonnull %4) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 255, i1 false)
  %5 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = bitcast %"class.google_breakpad::LinuxDumper"* %0 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)***
  %8 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)** %8, i64 9
  %10 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)** %9, align 8
  %11 = call zeroext i1 %10(%"class.google_breakpad::LinuxDumper"* %0, i8* nonnull %4, i32 %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i64 0, i64 0)) #14
  br i1 %11, label %12, label %68

12:                                               ; preds = %1
  %13 = ptrtoint [255 x i8]* %2 to i64
  %14 = call i64 asm sideeffect "syscall\0A", "={ax},0,{di},{si},{dx},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 2, i64 %13, i64 0, i64 0) #14, !srcloc !29
  %15 = icmp ugt i64 %14, -4096
  %16 = trunc i64 %14 to i32
  br i1 %15, label %17, label %20

17:                                               ; preds = %12
  %18 = sub nsw i32 0, %16
  %19 = tail call i32* @__errno_location() #13
  store i32 %18, i32* %19, align 4
  br label %68

20:                                               ; preds = %12
  %21 = icmp slt i32 %16, 0
  br i1 %21, label %68, label %22

22:                                               ; preds = %20
  %23 = bitcast %struct.Elf64_auxv_t* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #14
  %24 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %3, i64 0, i32 0
  %25 = getelementptr inbounds %struct.Elf64_auxv_t, %struct.Elf64_auxv_t* %3, i64 0, i32 1, i32 0
  %26 = shl i64 %14, 32
  %27 = ashr exact i64 %26, 32
  %28 = ptrtoint %struct.Elf64_auxv_t* %3 to i64
  %29 = bitcast %struct.Elf64_auxv_t* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 16, i1 false)
  %30 = call i64 asm sideeffect "syscall\0A", "={ax},0,{di},{si},{dx},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 0, i64 %27, i64 %28, i64 16) #14, !srcloc !30
  %31 = icmp ugt i64 %30, -4096
  br i1 %31, label %34, label %32

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  br label %40

34:                                               ; preds = %53, %22
  %35 = phi i8 [ 0, %22 ], [ %54, %53 ]
  %36 = phi i64 [ %30, %22 ], [ %55, %53 ]
  %37 = trunc i64 %36 to i32
  %38 = sub nsw i32 0, %37
  %39 = tail call i32* @__errno_location() #13
  store i32 %38, i32* %39, align 4
  br label %57

40:                                               ; preds = %32, %53
  %41 = phi i64 [ %30, %32 ], [ %55, %53 ]
  %42 = phi i8 [ 0, %32 ], [ %54, %53 ]
  %43 = icmp eq i64 %41, 16
  %44 = load i64, i64* %24, align 8
  %45 = icmp ne i64 %44, 0
  %46 = and i1 %43, %45
  br i1 %46, label %47, label %57

47:                                               ; preds = %40
  %48 = icmp ult i64 %44, 34
  br i1 %48, label %49, label %53

49:                                               ; preds = %47
  %50 = load i64, i64* %25, align 8
  %51 = load i64*, i64** %33, align 8
  %52 = getelementptr inbounds i64, i64* %51, i64 %44
  store i64 %50, i64* %52, align 8
  br label %53

53:                                               ; preds = %49, %47
  %54 = phi i8 [ 1, %49 ], [ %42, %47 ]
  %55 = call i64 asm sideeffect "syscall\0A", "={ax},0,{di},{si},{dx},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 0, i64 %27, i64 %28, i64 16) #14, !srcloc !30
  %56 = icmp ugt i64 %55, -4096
  br i1 %56, label %34, label %40

57:                                               ; preds = %40, %34
  %58 = phi i8 [ %35, %34 ], [ %42, %40 ]
  %59 = call i64 asm sideeffect "syscall\0A", "={ax},0,{di},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 3, i64 %27) #14, !srcloc !31
  %60 = icmp ugt i64 %59, -4096
  br i1 %60, label %61, label %65

61:                                               ; preds = %57
  %62 = trunc i64 %59 to i32
  %63 = sub nsw i32 0, %62
  %64 = tail call i32* @__errno_location() #13
  store i32 %63, i32* %64, align 4
  br label %65

65:                                               ; preds = %57, %61
  %66 = and i8 %58, 1
  %67 = icmp ne i8 %66, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #14
  br label %68

68:                                               ; preds = %17, %65, %20, %1
  %69 = phi i1 [ false, %1 ], [ %67, %65 ], [ false, %20 ], [ false, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %4) #14
  ret i1 %69
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN15google_breakpad11LinuxDumper8LateInitEv(%"class.google_breakpad::LinuxDumper"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15google_breakpad11LinuxDumper27ElfFileIdentifierForMappingERKNS_11MappingInfoEbjRNS_15wasteful_vectorIhEE(%"class.google_breakpad::LinuxDumper"*, %"struct.google_breakpad::MappingInfo"* dereferenceable(296), i1 zeroext, i32, %"class.google_breakpad::wasteful_vector.23"*) local_unnamed_addr #0 align 2 {
  %6 = alloca [4096 x i8], align 16
  %7 = alloca %"class.google_breakpad::MemoryMappedFile", align 8
  %8 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %1, i64 0, i32 5, i64 0
  %9 = tail call i32 @my_strncmp(i8* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZL23kMappedFileUnsafePrefix, i64 0, i64 0), i64 5) #14
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %86, label %11

11:                                               ; preds = %5
  %12 = tail call i32 @my_strcmp(i8* %8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN15google_breakpadL21kLinuxGateLibraryNameE, i64 0, i64 0)) #14
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %47

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = tail call i64 asm sideeffect "syscall\0A", "={ax},0,~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 39) #14, !srcloc !32
  %18 = icmp ugt i64 %17, -4096
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = trunc i64 %17 to i32
  %21 = sub nsw i32 0, %20
  %22 = tail call i32* @__errno_location() #13
  store i32 %21, i32* %22, align 4
  br label %23

23:                                               ; preds = %14, %19
  %24 = phi i64 [ -1, %19 ], [ %17, %14 ]
  %25 = trunc i64 %24 to i32
  %26 = icmp eq i32 %16, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %23
  %28 = bitcast %"struct.google_breakpad::MappingInfo"* %1 to i8**
  %29 = load i8*, i8** %28, align 8
  br label %44

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 8
  %32 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %1, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = tail call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %31, i64 %33)
  %35 = load i32, i32* %15, align 8
  %36 = bitcast %"struct.google_breakpad::MappingInfo"* %1 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = load i64, i64* %32, align 8
  %39 = bitcast %"class.google_breakpad::LinuxDumper"* %0 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)***
  %40 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %40, i64 8
  %42 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.google_breakpad::LinuxDumper"* %0, i8* %34, i32 %35, i8* %37, i64 %38) #14
  br label %44

44:                                               ; preds = %30, %27
  %45 = phi i8* [ %29, %27 ], [ %34, %30 ]
  %46 = tail call zeroext i1 @_ZN15google_breakpad6FileID31ElfFileIdentifierFromMappedFileEPKvRNS_15wasteful_vectorIhEE(i8* %45, %"class.google_breakpad::wasteful_vector.23"* %4) #14
  br label %86

47:                                               ; preds = %11
  %48 = getelementptr inbounds [4096 x i8], [4096 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %48) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %48, i8 -86, i64 4096, i1 false)
  %49 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 2
  %50 = load i8*, i8** %49, align 8
  %51 = call i64 @my_strlcpy(i8* nonnull %48, i8* %50, i64 4096) #14
  %52 = icmp ult i64 %51, 4096
  br i1 %52, label %53, label %84

53:                                               ; preds = %47
  %54 = call i64 @my_strlcat(i8* nonnull %48, i8* %8, i64 4096) #14
  %55 = icmp ult i64 %54, 4096
  br i1 %55, label %56, label %84

56:                                               ; preds = %53
  %57 = call zeroext i1 @_ZNK15google_breakpad11LinuxDumper26HandleDeletedFileInMappingEPc(%"class.google_breakpad::LinuxDumper"* %0, i8* nonnull %48)
  %58 = bitcast %"class.google_breakpad::MemoryMappedFile"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #14
  %59 = getelementptr inbounds %"class.google_breakpad::MemoryMappedFile", %"class.google_breakpad::MemoryMappedFile"* %7, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.google_breakpad::MemoryMappedFile", %"class.google_breakpad::MemoryMappedFile"* %7, i64 0, i32 0, i32 1
  %61 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %1, i64 0, i32 3
  %62 = bitcast %"class.google_breakpad::MemoryMappedFile"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 16, i1 false)
  %63 = load i64, i64* %61, align 8
  call void @_ZN15google_breakpad16MemoryMappedFileC1EPKcm(%"class.google_breakpad::MemoryMappedFile"* nonnull %7, i8* nonnull %48, i64 %63) #14
  %64 = load i8*, i8** %59, align 8
  %65 = icmp eq i8* %64, null
  %66 = load i64, i64* %60, align 8
  %67 = icmp ult i64 %66, 4
  %68 = or i1 %65, %67
  br i1 %68, label %82, label %69

69:                                               ; preds = %56
  %70 = call zeroext i1 @_ZN15google_breakpad6FileID31ElfFileIdentifierFromMappedFileEPKvRNS_15wasteful_vectorIhEE(i8* nonnull %64, %"class.google_breakpad::wasteful_vector.23"* %4) #14
  %71 = and i1 %70, %2
  %72 = and i1 %57, %71
  br i1 %72, label %73, label %82

73:                                               ; preds = %69
  %74 = zext i32 %3 to i64
  %75 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %76 = load %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"*** %75, align 8
  %77 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %76, i64 %74
  %78 = load %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %77, align 8
  %79 = call i64 @my_strlen(i8* %8) #14
  %80 = add i64 %79, -10
  %81 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %78, i64 0, i32 5, i64 %80
  store i8 0, i8* %81, align 1
  br label %82

82:                                               ; preds = %69, %73, %56
  %83 = phi i1 [ false, %56 ], [ %70, %69 ], [ true, %73 ]
  call void @_ZN15google_breakpad16MemoryMappedFileD1Ev(%"class.google_breakpad::MemoryMappedFile"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #14
  br label %84

84:                                               ; preds = %47, %53, %82
  %85 = phi i1 [ %83, %82 ], [ false, %53 ], [ false, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %48) #14
  br label %86

86:                                               ; preds = %5, %84, %44
  %87 = phi i1 [ %46, %44 ], [ %85, %84 ], [ false, %5 ]
  ret i1 %87
}

declare i32 @my_strcmp(i8*, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %62, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.google_breakpad::PageAllocator", %"class.google_breakpad::PageAllocator"* %0, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.google_breakpad::PageAllocator", %"class.google_breakpad::PageAllocator"* %0, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  br i1 %7, label %21, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.google_breakpad::PageAllocator", %"class.google_breakpad::PageAllocator"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %9, %12
  %14 = icmp ult i64 %13, %1
  br i1 %14, label %21, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds i8, i8* %6, i64 %12
  %17 = add i64 %12, %1
  store i64 %17, i64* %11, align 8
  %18 = icmp eq i64 %17, %9
  br i1 %18, label %19, label %62

19:                                               ; preds = %15
  %20 = bitcast i8** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  br label %62

21:                                               ; preds = %4, %10
  %22 = add i64 %1, 16
  %23 = getelementptr inbounds %"class.google_breakpad::PageAllocator", %"class.google_breakpad::PageAllocator"* %0, i64 0, i32 0
  %24 = add i64 %1, 15
  %25 = add i64 %24, %9
  %26 = udiv i64 %25, %9
  %27 = mul i64 %26, %9
  %28 = tail call i64 asm sideeffect "movq $5,%r10;movq $6,%r8;movq $7,%r9;syscall\0A", "={ax},0,{di},{si},{dx},r,r,r,~{r10},~{r8},~{r9},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 9, i64 0, i64 %27, i64 3, i64 34, i64 -1, i64 0) #14, !srcloc !33
  %29 = icmp ugt i64 %28, -4096
  br i1 %29, label %30, label %34

30:                                               ; preds = %21
  %31 = trunc i64 %28 to i32
  %32 = sub nsw i32 0, %31
  %33 = tail call i32* @__errno_location() #13
  store i32 %32, i32* %33, align 4
  br label %62

34:                                               ; preds = %21
  %35 = inttoptr i64 %28 to i8*
  %36 = icmp eq i8* %35, inttoptr (i64 -1 to i8*)
  br i1 %36, label %62, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.google_breakpad::PageAllocator", %"class.google_breakpad::PageAllocator"* %0, i64 0, i32 1
  %39 = bitcast %"struct.google_breakpad::PageAllocator::PageHeader"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = inttoptr i64 %28 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %35, i64 8
  %43 = bitcast i8* %42 to i64*
  store i64 %26, i64* %43, align 8
  %44 = bitcast %"struct.google_breakpad::PageAllocator::PageHeader"** %38 to i8**
  store i8* %35, i8** %44, align 8
  %45 = getelementptr inbounds %"class.google_breakpad::PageAllocator", %"class.google_breakpad::PageAllocator"* %0, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, %26
  store i64 %47, i64* %45, align 8
  %48 = icmp eq i64 %28, 0
  br i1 %48, label %62, label %49

49:                                               ; preds = %37
  %50 = load i64, i64* %23, align 8
  %51 = mul i64 %50, %26
  %52 = add i64 %50, %22
  %53 = sub i64 %52, %51
  %54 = urem i64 %53, %50
  %55 = getelementptr inbounds %"class.google_breakpad::PageAllocator", %"class.google_breakpad::PageAllocator"* %0, i64 0, i32 3
  store i64 %54, i64* %55, align 8
  %56 = icmp eq i64 %54, 0
  %57 = add i64 %26, -1
  %58 = mul i64 %50, %57
  %59 = getelementptr inbounds i8, i8* %35, i64 %58
  %60 = select i1 %56, i8* null, i8* %59
  store i8* %60, i8** %5, align 8
  %61 = getelementptr inbounds i8, i8* %35, i64 16
  br label %62

62:                                               ; preds = %30, %34, %49, %37, %15, %19, %2
  %63 = phi i8* [ null, %2 ], [ %16, %19 ], [ %16, %15 ], [ %61, %49 ], [ null, %37 ], [ null, %34 ], [ null, %30 ]
  ret i8* %63
}

declare zeroext i1 @_ZN15google_breakpad6FileID31ElfFileIdentifierFromMappedFileEPKvRNS_15wasteful_vectorIhEE(i8*, %"class.google_breakpad::wasteful_vector.23"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK15google_breakpad11LinuxDumper22GetMappingAbsolutePathERKNS_11MappingInfoEPc(%"class.google_breakpad::LinuxDumper"* nocapture readonly, %"struct.google_breakpad::MappingInfo"* dereferenceable(296), i8*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 2
  %5 = load i8*, i8** %4, align 8
  %6 = tail call i64 @my_strlcpy(i8* %2, i8* %5, i64 4096) #14
  %7 = icmp ult i64 %6, 4096
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %1, i64 0, i32 5, i64 0
  %10 = tail call i64 @my_strlcat(i8* %2, i8* %9, i64 4096) #14
  %11 = icmp ult i64 %10, 4096
  br label %12

12:                                               ; preds = %8, %3
  %13 = phi i1 [ false, %3 ], [ %11, %8 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK15google_breakpad11LinuxDumper26HandleDeletedFileInMappingEPc(%"class.google_breakpad::LinuxDumper"*, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca [255 x i8], align 16
  %4 = alloca %"struct.google_breakpad::MappingInfo", align 8
  %5 = alloca [4096 x i8], align 16
  %6 = alloca %struct.kernel_stat, align 8
  %7 = alloca %struct.kernel_stat, align 8
  %8 = tail call i64 @my_strlen(i8* %1) #14
  %9 = icmp ult i64 %8, 12
  br i1 %9, label %85, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i64 %8
  %12 = getelementptr inbounds i8, i8* %11, i64 -10
  %13 = tail call i32 @my_strncmp(i8* %12, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZL14kDeletedSuffix, i64 0, i64 0), i64 10) #14
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %85

15:                                               ; preds = %10
  %16 = getelementptr inbounds [255 x i8], [255 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 255, i8* nonnull %16) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 255, i1 false)
  %17 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = bitcast %"class.google_breakpad::LinuxDumper"* %0 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)***
  %20 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)** %20, i64 9
  %22 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)** %21, align 8
  %23 = call zeroext i1 %22(%"class.google_breakpad::LinuxDumper"* %0, i8* nonnull %16, i32 %18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0)) #14
  br i1 %23, label %24, label %83

24:                                               ; preds = %15
  %25 = bitcast %"struct.google_breakpad::MappingInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 296, i8* nonnull %25) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 296, i1 false)
  %26 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %4, i64 0, i32 5, i64 0
  %27 = call zeroext i1 @_ZN15google_breakpad12SafeReadLinkEPKcPcm(i8* nonnull %16, i8* %26, i64 255) #14
  br i1 %27, label %28, label %81

28:                                               ; preds = %24
  %29 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %29) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %29, i8 -86, i64 4096, i1 false)
  %30 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 2
  %31 = load i8*, i8** %30, align 8
  %32 = call i64 @my_strlcpy(i8* nonnull %29, i8* %31, i64 4096) #14
  %33 = icmp ult i64 %32, 4096
  br i1 %33, label %34, label %79

34:                                               ; preds = %28
  %35 = call i64 @my_strlcat(i8* nonnull %29, i8* %26, i64 4096) #14
  %36 = icmp ult i64 %35, 4096
  br i1 %36, label %37, label %79

37:                                               ; preds = %34
  %38 = call i32 @my_strcmp(i8* %1, i8* nonnull %29) #14
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %79

40:                                               ; preds = %37
  %41 = bitcast %struct.kernel_stat* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %41) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 144, i1 false)
  %42 = bitcast %struct.kernel_stat* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %42) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 144, i1 false)
  %43 = ptrtoint [255 x i8]* %3 to i64
  %44 = ptrtoint %struct.kernel_stat* %6 to i64
  %45 = call i64 asm sideeffect "syscall\0A", "={ax},0,{di},{si},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 4, i64 %43, i64 %44) #14, !srcloc !34
  %46 = icmp ugt i64 %45, -4096
  %47 = trunc i64 %45 to i32
  br i1 %46, label %48, label %51

48:                                               ; preds = %40
  %49 = sub nsw i32 0, %47
  %50 = tail call i32* @__errno_location() #13
  store i32 %49, i32* %50, align 4
  br label %76

51:                                               ; preds = %40
  %52 = icmp eq i32 %47, 0
  br i1 %52, label %53, label %76

53:                                               ; preds = %51
  %54 = ptrtoint [4096 x i8]* %5 to i64
  %55 = ptrtoint %struct.kernel_stat* %7 to i64
  %56 = call i64 asm sideeffect "syscall\0A", "={ax},0,{di},{si},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 4, i64 %54, i64 %55) #14, !srcloc !34
  %57 = icmp ugt i64 %56, -4096
  %58 = trunc i64 %56 to i32
  br i1 %57, label %59, label %62

59:                                               ; preds = %53
  %60 = sub nsw i32 0, %58
  %61 = tail call i32* @__errno_location() #13
  store i32 %60, i32* %61, align 4
  br label %76

62:                                               ; preds = %53
  %63 = icmp eq i32 %58, 0
  br i1 %63, label %64, label %76

64:                                               ; preds = %62
  %65 = getelementptr inbounds %struct.kernel_stat, %struct.kernel_stat* %6, i64 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %struct.kernel_stat, %struct.kernel_stat* %7, i64 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %66, %68
  br i1 %69, label %70, label %76

70:                                               ; preds = %64
  %71 = getelementptr inbounds %struct.kernel_stat, %struct.kernel_stat* %6, i64 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %struct.kernel_stat, %struct.kernel_stat* %7, i64 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %72, %74
  br i1 %75, label %77, label %76

76:                                               ; preds = %59, %48, %70, %64, %62, %51
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* nonnull align 16 %16, i64 255, i1 false)
  br label %77

77:                                               ; preds = %70, %76
  %78 = phi i1 [ true, %76 ], [ false, %70 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %42) #14
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %41) #14
  br label %79

79:                                               ; preds = %28, %37, %34, %77
  %80 = phi i1 [ %78, %77 ], [ false, %34 ], [ false, %37 ], [ false, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %29) #14
  br label %81

81:                                               ; preds = %24, %79
  %82 = phi i1 [ %80, %79 ], [ false, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 296, i8* nonnull %25) #14
  br label %83

83:                                               ; preds = %15, %81
  %84 = phi i1 [ %82, %81 ], [ false, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %16) #14
  br label %85

85:                                               ; preds = %10, %2, %83
  %86 = phi i1 [ %84, %83 ], [ false, %2 ], [ false, %10 ]
  ret i1 %86
}

declare void @_ZN15google_breakpad16MemoryMappedFileC1EPKcm(%"class.google_breakpad::MemoryMappedFile"*, i8*, i64) unnamed_addr #4

declare i64 @my_strlen(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN15google_breakpad16MemoryMappedFileD1Ev(%"class.google_breakpad::MemoryMappedFile"*) unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN15google_breakpad11LinuxDumper23SetCrashInfoFromSigInfoERK9siginfo_t(%"class.google_breakpad::LinuxDumper"* nocapture, %struct.siginfo_t* nocapture readonly dereferenceable(128)) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %struct.siginfo_t, %struct.siginfo_t* %1, i64 0, i32 4
  %4 = bitcast %union.anon* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 3
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %struct.siginfo_t, %struct.siginfo_t* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 4
  store i32 %8, i32* %9, align 8
  %10 = getelementptr inbounds %struct.siginfo_t, %struct.siginfo_t* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 5
  store i32 %11, i32* %12, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK15google_breakpad11LinuxDumper20GetCrashSignalStringEv(%"class.google_breakpad::LinuxDumper"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, 1
  %5 = icmp ult i32 %4, 33
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds [33 x i8*], [33 x i8*]* @switch.table._ZNK15google_breakpad11LinuxDumper20GetCrashSignalStringEv, i64 0, i64 %7
  %9 = load i8*, i8** %8, align 8
  ret i8* %9

10:                                               ; preds = %1
  ret i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0)
}

declare i64 @my_strlcpy(i8*, i8*, i64) local_unnamed_addr #4

declare i64 @my_strlcat(i8*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15google_breakpad11LinuxDumper30GetMappingEffectiveNameAndPathERKNS_11MappingInfoEPcmS4_m(%"class.google_breakpad::LinuxDumper"* nocapture readonly, %"struct.google_breakpad::MappingInfo"* dereferenceable(296), i8*, i64, i8*, i64) local_unnamed_addr #0 align 2 {
  %7 = alloca [4096 x i8], align 16
  %8 = alloca %"class.google_breakpad::MemoryMappedFile", align 8
  %9 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %1, i64 0, i32 5, i64 0
  %10 = tail call i64 @my_strlcpy(i8* %2, i8* %9, i64 %3) #14
  %11 = tail call i32 @my_strncmp(i8* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZL23kMappedFileUnsafePrefix, i64 0, i64 0), i64 5) #14
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %37, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %14) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 4096, i1 false) #14
  %15 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 2
  %16 = load i8*, i8** %15, align 8
  %17 = call i64 @my_strlcpy(i8* nonnull %14, i8* %16, i64 4096) #14
  %18 = icmp ult i64 %17, 4096
  br i1 %18, label %19, label %35

19:                                               ; preds = %13
  %20 = call i64 @my_strlcat(i8* nonnull %14, i8* %9, i64 4096) #14
  %21 = icmp ult i64 %20, 4096
  br i1 %21, label %22, label %35

22:                                               ; preds = %19
  %23 = bitcast %"class.google_breakpad::MemoryMappedFile"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #14
  %24 = getelementptr inbounds %"class.google_breakpad::MemoryMappedFile", %"class.google_breakpad::MemoryMappedFile"* %8, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.google_breakpad::MemoryMappedFile", %"class.google_breakpad::MemoryMappedFile"* %8, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %1, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false) #14
  %27 = load i64, i64* %26, align 8
  call void @_ZN15google_breakpad16MemoryMappedFileC1EPKcm(%"class.google_breakpad::MemoryMappedFile"* nonnull %8, i8* nonnull %14, i64 %27) #14
  %28 = load i8*, i8** %24, align 8
  %29 = icmp eq i8* %28, null
  %30 = load i64, i64* %25, align 8
  %31 = icmp ult i64 %30, 4
  %32 = or i1 %29, %31
  br i1 %32, label %36, label %33

33:                                               ; preds = %22
  %34 = call zeroext i1 @_ZN15google_breakpad27ElfFileSoNameFromMappedFileEPKvPcm(i8* nonnull %28, i8* %4, i64 %5) #14
  call void @_ZN15google_breakpad16MemoryMappedFileD1Ev(%"class.google_breakpad::MemoryMappedFile"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #14
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %14) #14
  br i1 %34, label %43, label %37

35:                                               ; preds = %19, %13
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %14) #14
  br label %37

36:                                               ; preds = %22
  call void @_ZN15google_breakpad16MemoryMappedFileD1Ev(%"class.google_breakpad::MemoryMappedFile"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #14
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %14) #14
  br label %37

37:                                               ; preds = %36, %6, %35, %33
  %38 = call i8* @my_strrchr(i8* %2, i8 signext 47) #14
  %39 = icmp eq i8* %38, null
  %40 = getelementptr inbounds i8, i8* %38, i64 1
  %41 = select i1 %39, i8* %2, i8* %40
  %42 = call i64 @my_strlcpy(i8* %4, i8* %41, i64 %5) #14
  br label %71

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %1, i64 0, i32 4
  %45 = load i8, i8* %44, align 8, !range !35
  %46 = icmp eq i8 %45, 0
  %47 = load i64, i64* %26, align 8
  %48 = icmp eq i64 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %59, label %50

50:                                               ; preds = %43
  %51 = call i64 @my_strlen(i8* %2) #14
  %52 = add i64 %51, 1
  %53 = call i64 @my_strlen(i8* %4) #14
  %54 = add i64 %52, %53
  %55 = icmp ult i64 %54, %3
  br i1 %55, label %56, label %71

56:                                               ; preds = %50
  %57 = call i64 @my_strlcat(i8* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i64 0, i64 0), i64 %3) #14
  %58 = call i64 @my_strlcat(i8* %2, i8* %4, i64 %3) #14
  br label %71

59:                                               ; preds = %43
  %60 = call i8* @my_strrchr(i8* %2, i8 signext 47) #14
  %61 = icmp eq i8* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds i8, i8* %60, i64 1
  %64 = call i64 @my_strlen(i8* %2) #14
  %65 = sub i64 %3, %64
  %66 = call i64 @my_strlen(i8* %63) #14
  %67 = add i64 %65, %66
  %68 = call i64 @my_strlcpy(i8* %63, i8* %4, i64 %67) #14
  br label %71

69:                                               ; preds = %59
  %70 = call i64 @my_strlcpy(i8* %2, i8* %4, i64 %3) #14
  br label %71

71:                                               ; preds = %62, %69, %50, %56, %37
  ret void
}

declare i8* @my_strrchr(i8*, i8 signext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15google_breakpad11LinuxDumper17EnumerateMappingsEv(%"class.google_breakpad::LinuxDumper"*) unnamed_addr #0 align 2 {
  %2 = alloca [255 x i8], align 16
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds [255 x i8], [255 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 255, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 255, i1 false)
  %7 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = bitcast %"class.google_breakpad::LinuxDumper"* %0 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)***
  %10 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)** %10, i64 9
  %12 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*)** %11, align 8
  %13 = call zeroext i1 %12(%"class.google_breakpad::LinuxDumper"* %0, i8* nonnull %6, i32 %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0)) #14
  br i1 %13, label %14, label %535

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds i64, i64* %16, i64 33
  %18 = bitcast i64* %17 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i64, i64* %16, i64 9
  %21 = bitcast i64* %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = ptrtoint [255 x i8]* %2 to i64
  %24 = call i64 asm sideeffect "syscall\0A", "={ax},0,{di},{si},{dx},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 2, i64 %23, i64 0, i64 0) #14, !srcloc !29
  %25 = icmp ugt i64 %24, -4096
  %26 = trunc i64 %24 to i32
  br i1 %25, label %27, label %30

27:                                               ; preds = %14
  %28 = sub nsw i32 0, %26
  %29 = tail call i32* @__errno_location() #13
  store i32 %28, i32* %29, align 4
  br label %535

30:                                               ; preds = %14
  %31 = icmp slt i32 %26, 0
  br i1 %31, label %535, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 8
  %34 = call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %33, i64 524) #14
  %35 = bitcast i8* %34 to %"class.google_breakpad::LineReader"*
  %36 = bitcast i8* %34 to i32*
  store i32 %26, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %34, i64 4
  store i8 0, i8* %37, align 4
  %38 = getelementptr inbounds i8, i8* %34, i64 8
  %39 = bitcast i8* %38 to i32*
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds i8, i8* %34, i64 12
  %41 = bitcast i64* %3 to i8*
  %42 = bitcast i64* %4 to i8*
  %43 = bitcast i64* %5 to i8*
  %44 = icmp ne i8* %19, null
  %45 = bitcast i64* %3 to i8**
  %46 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10, i32 0
  %49 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10, i32 0, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast %"struct.google_breakpad::MappingInfo"*** %47 to i64*
  %51 = bitcast %"class.std::__1::vector.9"* %48 to i64*
  %52 = bitcast %"struct.google_breakpad::MappingInfo"*** %49 to i64*
  %53 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10, i32 0, i32 0, i32 2, i32 1, i32 0, i32 2
  %54 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %55 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %56 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %48, i64 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %435, %32
  %58 = phi i32 [ 0, %32 ], [ %436, %435 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %57
  %61 = load i8, i8* %37, align 4, !range !35
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %85, label %437

63:                                               ; preds = %57
  %64 = zext i32 %58 to i64
  br label %65

65:                                               ; preds = %69, %63
  %66 = phi i64 [ 0, %63 ], [ %70, %69 ]
  %67 = getelementptr inbounds %"class.google_breakpad::LineReader", %"class.google_breakpad::LineReader"* %35, i64 0, i32 3, i64 %66
  %68 = load i8, i8* %67, align 1
  switch i8 %68, label %69 [
    i8 10, label %72
    i8 0, label %72
  ]

69:                                               ; preds = %65
  %70 = add nuw nsw i64 %66, 1
  %71 = icmp eq i64 %70, %64
  br i1 %71, label %76, label %65

72:                                               ; preds = %65, %65
  %73 = trunc i64 %66 to i32
  %74 = and i64 %66, 4294967295
  %75 = getelementptr inbounds %"class.google_breakpad::LineReader", %"class.google_breakpad::LineReader"* %35, i64 0, i32 3, i64 %74
  store i8 0, i8* %75, align 1
  br label %108

76:                                               ; preds = %69
  %77 = icmp eq i32 %58, 512
  br i1 %77, label %437, label %78

78:                                               ; preds = %76
  %79 = load i8, i8* %37, align 4
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %78
  %82 = zext i32 %58 to i64
  %83 = getelementptr inbounds %"class.google_breakpad::LineReader", %"class.google_breakpad::LineReader"* %35, i64 0, i32 3, i64 %82
  store i8 0, i8* %83, align 1
  %84 = add i32 %58, 1
  store i32 %84, i32* %39, align 4
  br label %108

85:                                               ; preds = %78, %60
  %86 = phi i64 [ %64, %78 ], [ 0, %60 ]
  %87 = load i32, i32* %36, align 4
  %88 = getelementptr inbounds %"class.google_breakpad::LineReader", %"class.google_breakpad::LineReader"* %35, i64 0, i32 3, i64 %86
  %89 = sub nsw i64 512, %86
  %90 = sext i32 %87 to i64
  %91 = ptrtoint i8* %88 to i64
  %92 = call i64 asm sideeffect "syscall\0A", "={ax},0,{di},{si},{dx},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 0, i64 %90, i64 %91, i64 %89) #14, !srcloc !30
  %93 = icmp ugt i64 %92, -4096
  br i1 %93, label %94, label %98

94:                                               ; preds = %85
  %95 = trunc i64 %92 to i32
  %96 = sub nsw i32 0, %95
  %97 = tail call i32* @__errno_location() #13
  store i32 %96, i32* %97, align 4
  br label %437

98:                                               ; preds = %85
  %99 = icmp slt i64 %92, 0
  br i1 %99, label %437, label %100

100:                                              ; preds = %98
  %101 = icmp eq i64 %92, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %100
  store i8 1, i8* %37, align 4
  %103 = load i32, i32* %39, align 4
  br label %435

104:                                              ; preds = %100
  %105 = load i32, i32* %39, align 4
  %106 = trunc i64 %92 to i32
  %107 = add i32 %105, %106
  store i32 %107, i32* %39, align 4
  br label %435

108:                                              ; preds = %81, %72
  %109 = phi i32 [ %58, %81 ], [ %73, %72 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #14
  store i64 -6148914691236517206, i64* %3, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #14
  store i64 -6148914691236517206, i64* %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #14
  store i64 -6148914691236517206, i64* %5, align 8
  %110 = call i8* @my_read_hex_ptr(i64* nonnull %3, i8* %40) #14
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 45
  br i1 %112, label %113, label %427

113:                                              ; preds = %108
  %114 = getelementptr inbounds i8, i8* %110, i64 1
  %115 = call i8* @my_read_hex_ptr(i64* nonnull %4, i8* %114) #14
  %116 = load i8, i8* %115, align 1
  %117 = icmp eq i8 %116, 32
  br i1 %117, label %118, label %427

118:                                              ; preds = %113
  %119 = getelementptr inbounds i8, i8* %115, i64 3
  %120 = load i8, i8* %119, align 1
  %121 = icmp eq i8 %120, 120
  %122 = zext i1 %121 to i8
  %123 = getelementptr inbounds i8, i8* %115, i64 6
  %124 = call i8* @my_read_hex_ptr(i64* nonnull %5, i8* %123) #14
  %125 = load i8, i8* %124, align 1
  %126 = icmp eq i8 %125, 32
  br i1 %126, label %127, label %427

127:                                              ; preds = %118
  %128 = call i8* @my_strchr(i8* %40, i8 signext 47) #14
  %129 = icmp eq i8* %128, null
  %130 = and i1 %44, %129
  br i1 %130, label %131, label %135

131:                                              ; preds = %127
  %132 = load i8*, i8** %45, align 8
  %133 = icmp eq i8* %132, %19
  br i1 %133, label %134, label %170

134:                                              ; preds = %131
  store i64 0, i64* %5, align 8
  br label %136

135:                                              ; preds = %127
  br i1 %129, label %170, label %136

136:                                              ; preds = %135, %134
  %137 = phi i8* [ getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN15google_breakpadL21kLinuxGateLibraryNameE, i64 0, i64 0), %134 ], [ %128, %135 ]
  %138 = load %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"*** %46, align 8
  %139 = load %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"*** %47, align 8
  %140 = icmp eq %"struct.google_breakpad::MappingInfo"** %138, %139
  br i1 %140, label %170, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %139, i64 -1
  %143 = load %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %142, align 8
  %144 = load i64, i64* %3, align 8
  %145 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %143, i64 0, i32 0
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %143, i64 0, i32 1
  %148 = load i64, i64* %147, align 8
  %149 = add i64 %148, %146
  %150 = icmp eq i64 %144, %149
  br i1 %150, label %151, label %170

151:                                              ; preds = %141
  %152 = call i64 @my_strlen(i8* nonnull %137) #14
  %153 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %143, i64 0, i32 5, i64 0
  %154 = call i64 @my_strlen(i8* %153) #14
  %155 = icmp eq i64 %152, %154
  br i1 %155, label %156, label %170

156:                                              ; preds = %151
  %157 = call i64 @my_strlen(i8* nonnull %137) #14
  %158 = call i32 @my_strncmp(i8* nonnull %137, i8* %153, i64 %157) #14
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %170

160:                                              ; preds = %156
  %161 = zext i1 %121 to i32
  %162 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %143, i64 0, i32 4
  %163 = load i8, i8* %162, align 8, !range !35
  %164 = zext i8 %163 to i32
  %165 = icmp eq i32 %161, %164
  br i1 %165, label %421, label %166

166:                                              ; preds = %160
  %167 = icmp ne i8 %163, 0
  %168 = xor i1 %121, true
  %169 = or i1 %167, %168
  br i1 %169, label %170, label %421

170:                                              ; preds = %135, %141, %151, %156, %166, %131, %136
  %171 = phi i1 [ true, %136 ], [ false, %135 ], [ false, %131 ], [ true, %166 ], [ true, %156 ], [ true, %151 ], [ true, %141 ]
  %172 = phi i8* [ %137, %136 ], [ null, %135 ], [ null, %131 ], [ %137, %166 ], [ %137, %156 ], [ %137, %151 ], [ %137, %141 ]
  %173 = call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %33, i64 296) #14
  %174 = ptrtoint i8* %173 to i64
  %175 = load %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"*** %47, align 8
  %176 = load %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"*** %49, align 8
  %177 = icmp eq %"struct.google_breakpad::MappingInfo"** %175, %176
  %178 = ptrtoint %"struct.google_breakpad::MappingInfo"** %176 to i64
  br i1 %177, label %183, label %179

179:                                              ; preds = %170
  %180 = bitcast %"struct.google_breakpad::MappingInfo"** %175 to i64*
  store i64 %174, i64* %180, align 8
  %181 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %175, i64 1
  %182 = ptrtoint %"struct.google_breakpad::MappingInfo"** %181 to i64
  store i64 %182, i64* %50, align 8
  br label %398

183:                                              ; preds = %170
  %184 = ptrtoint %"struct.google_breakpad::MappingInfo"** %175 to i64
  %185 = load i64, i64* %51, align 8
  %186 = sub i64 %184, %185
  %187 = ashr exact i64 %186, 3
  %188 = add nsw i64 %187, 1
  %189 = icmp ugt i64 %188, 2305843009213693951
  br i1 %189, label %190, label %192

190:                                              ; preds = %183
  %191 = bitcast %"class.std::__1::vector.9"* %48 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %191) #16
  unreachable

192:                                              ; preds = %183
  %193 = sub i64 %178, %185
  %194 = ashr exact i64 %193, 3
  %195 = icmp ult i64 %194, 1152921504606846975
  br i1 %195, label %196, label %201

196:                                              ; preds = %192
  %197 = ashr exact i64 %193, 2
  %198 = icmp ult i64 %197, %188
  %199 = select i1 %198, i64 %188, i64 %197
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %212, label %201

201:                                              ; preds = %196, %192
  %202 = phi i64 [ %199, %196 ], [ 2305843009213693951, %192 ]
  %203 = shl i64 %202, 3
  %204 = load i64, i64* %53, align 8
  %205 = icmp ugt i64 %203, %204
  br i1 %205, label %208, label %206

206:                                              ; preds = %201
  %207 = load %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"*** %54, align 8
  br label %212

208:                                              ; preds = %201
  %209 = load %"class.google_breakpad::PageAllocator"*, %"class.google_breakpad::PageAllocator"** %55, align 8
  %210 = call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %209, i64 %203) #14
  %211 = bitcast i8* %210 to %"struct.google_breakpad::MappingInfo"**
  br label %212

212:                                              ; preds = %208, %206, %196
  %213 = phi i64 [ 0, %196 ], [ %202, %206 ], [ %202, %208 ]
  %214 = phi %"struct.google_breakpad::MappingInfo"** [ null, %196 ], [ %207, %206 ], [ %211, %208 ]
  %215 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %214, i64 %187
  %216 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %214, i64 %213
  %217 = ptrtoint %"struct.google_breakpad::MappingInfo"** %216 to i64
  %218 = bitcast %"struct.google_breakpad::MappingInfo"** %215 to i64*
  store i64 %174, i64* %218, align 8
  %219 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %215, i64 1
  %220 = ptrtoint %"struct.google_breakpad::MappingInfo"** %219 to i64
  %221 = load %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"*** %56, align 8
  %222 = ptrtoint %"struct.google_breakpad::MappingInfo"** %221 to i64
  %223 = load %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"*** %47, align 8
  %224 = icmp eq %"struct.google_breakpad::MappingInfo"** %223, %221
  br i1 %224, label %395, label %225

225:                                              ; preds = %212
  %226 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %223, i64 -1
  %227 = ptrtoint %"struct.google_breakpad::MappingInfo"** %226 to i64
  %228 = sub i64 %227, %222
  %229 = lshr i64 %228, 3
  %230 = add nuw nsw i64 %229, 1
  %231 = icmp ult i64 %230, 4
  br i1 %231, label %325, label %232

232:                                              ; preds = %225
  %233 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %214, i64 -1
  %234 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %223, i64 -1
  %235 = ptrtoint %"struct.google_breakpad::MappingInfo"** %234 to i64
  %236 = sub i64 %235, %222
  %237 = lshr i64 %236, 3
  %238 = sub nsw i64 %187, %237
  %239 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %233, i64 %238
  %240 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %223, i64 -1
  %241 = sub nsw i64 0, %237
  %242 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %240, i64 %241
  %243 = icmp ult %"struct.google_breakpad::MappingInfo"** %239, %223
  %244 = icmp ult %"struct.google_breakpad::MappingInfo"** %242, %215
  %245 = and i1 %243, %244
  br i1 %245, label %325, label %246

246:                                              ; preds = %232
  %247 = and i64 %230, 4611686018427387900
  %248 = sub nsw i64 0, %247
  %249 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %215, i64 %248
  %250 = sub nsw i64 0, %247
  %251 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %223, i64 %250
  %252 = add nsw i64 %247, -4
  %253 = lshr exact i64 %252, 2
  %254 = add nuw nsw i64 %253, 1
  %255 = and i64 %254, 1
  %256 = icmp eq i64 %252, 0
  br i1 %256, label %301, label %257

257:                                              ; preds = %246
  %258 = sub nuw nsw i64 %254, %255
  %259 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %215, i64 -1
  %260 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %223, i64 -1
  %261 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %215, i64 -1
  %262 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %223, i64 -1
  br label %263

263:                                              ; preds = %263, %257
  %264 = phi i64 [ 0, %257 ], [ %298, %263 ]
  %265 = phi i64 [ %258, %257 ], [ %299, %263 ]
  %266 = sub i64 0, %264
  %267 = sub i64 0, %264
  %268 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %259, i64 %266
  %269 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %260, i64 %267
  %270 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %269, i64 -1
  %271 = bitcast %"struct.google_breakpad::MappingInfo"** %270 to <2 x i64>*
  %272 = load <2 x i64>, <2 x i64>* %271, align 8, !alias.scope !36
  %273 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %269, i64 -2
  %274 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %273, i64 -1
  %275 = bitcast %"struct.google_breakpad::MappingInfo"** %274 to <2 x i64>*
  %276 = load <2 x i64>, <2 x i64>* %275, align 8, !alias.scope !36
  %277 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %268, i64 -1
  %278 = bitcast %"struct.google_breakpad::MappingInfo"** %277 to <2 x i64>*
  store <2 x i64> %272, <2 x i64>* %278, align 8, !alias.scope !39, !noalias !36
  %279 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %268, i64 -2
  %280 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %279, i64 -1
  %281 = bitcast %"struct.google_breakpad::MappingInfo"** %280 to <2 x i64>*
  store <2 x i64> %276, <2 x i64>* %281, align 8, !alias.scope !39, !noalias !36
  %282 = sub nuw nsw i64 -4, %264
  %283 = sub nuw nsw i64 -4, %264
  %284 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %261, i64 %282
  %285 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %262, i64 %283
  %286 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %285, i64 -1
  %287 = bitcast %"struct.google_breakpad::MappingInfo"** %286 to <2 x i64>*
  %288 = load <2 x i64>, <2 x i64>* %287, align 8, !alias.scope !36
  %289 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %285, i64 -2
  %290 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %289, i64 -1
  %291 = bitcast %"struct.google_breakpad::MappingInfo"** %290 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !36
  %293 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %284, i64 -1
  %294 = bitcast %"struct.google_breakpad::MappingInfo"** %293 to <2 x i64>*
  store <2 x i64> %288, <2 x i64>* %294, align 8, !alias.scope !39, !noalias !36
  %295 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %284, i64 -2
  %296 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %295, i64 -1
  %297 = bitcast %"struct.google_breakpad::MappingInfo"** %296 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %297, align 8, !alias.scope !39, !noalias !36
  %298 = add i64 %264, 8
  %299 = add i64 %265, -2
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %301, label %263, !llvm.loop !41

301:                                              ; preds = %263, %246
  %302 = phi i64 [ 0, %246 ], [ %298, %263 ]
  %303 = icmp eq i64 %255, 0
  br i1 %303, label %323, label %304

304:                                              ; preds = %301
  %305 = sub i64 0, %302
  %306 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %215, i64 -1
  %307 = sub i64 0, %302
  %308 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %223, i64 -1
  %309 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %306, i64 %305
  %310 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %308, i64 %307
  %311 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %310, i64 -1
  %312 = bitcast %"struct.google_breakpad::MappingInfo"** %311 to <2 x i64>*
  %313 = load <2 x i64>, <2 x i64>* %312, align 8, !alias.scope !36
  %314 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %310, i64 -2
  %315 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %314, i64 -1
  %316 = bitcast %"struct.google_breakpad::MappingInfo"** %315 to <2 x i64>*
  %317 = load <2 x i64>, <2 x i64>* %316, align 8, !alias.scope !36
  %318 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %309, i64 -1
  %319 = bitcast %"struct.google_breakpad::MappingInfo"** %318 to <2 x i64>*
  store <2 x i64> %313, <2 x i64>* %319, align 8, !alias.scope !39, !noalias !36
  %320 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %309, i64 -2
  %321 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %320, i64 -1
  %322 = bitcast %"struct.google_breakpad::MappingInfo"** %321 to <2 x i64>*
  store <2 x i64> %317, <2 x i64>* %322, align 8, !alias.scope !39, !noalias !36
  br label %323

323:                                              ; preds = %301, %304
  %324 = icmp eq i64 %230, %247
  br i1 %324, label %395, label %325

325:                                              ; preds = %323, %232, %225
  %326 = phi %"struct.google_breakpad::MappingInfo"** [ %215, %232 ], [ %215, %225 ], [ %249, %323 ]
  %327 = phi %"struct.google_breakpad::MappingInfo"** [ %223, %232 ], [ %223, %225 ], [ %251, %323 ]
  %328 = getelementptr %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %327, i64 -1
  %329 = ptrtoint %"struct.google_breakpad::MappingInfo"** %328 to i64
  %330 = sub i64 %329, %222
  %331 = lshr i64 %330, 3
  %332 = add nuw nsw i64 %331, 1
  %333 = and i64 %332, 7
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %346, label %335

335:                                              ; preds = %325, %335
  %336 = phi %"struct.google_breakpad::MappingInfo"** [ %339, %335 ], [ %326, %325 ]
  %337 = phi %"struct.google_breakpad::MappingInfo"** [ %340, %335 ], [ %327, %325 ]
  %338 = phi i64 [ %344, %335 ], [ %333, %325 ]
  %339 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %336, i64 -1
  %340 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %337, i64 -1
  %341 = bitcast %"struct.google_breakpad::MappingInfo"** %340 to i64*
  %342 = load i64, i64* %341, align 8
  %343 = bitcast %"struct.google_breakpad::MappingInfo"** %339 to i64*
  store i64 %342, i64* %343, align 8
  %344 = add i64 %338, -1
  %345 = icmp eq i64 %344, 0
  br i1 %345, label %346, label %335, !llvm.loop !42

346:                                              ; preds = %335, %325
  %347 = phi %"struct.google_breakpad::MappingInfo"** [ undef, %325 ], [ %339, %335 ]
  %348 = phi %"struct.google_breakpad::MappingInfo"** [ %326, %325 ], [ %339, %335 ]
  %349 = phi %"struct.google_breakpad::MappingInfo"** [ %327, %325 ], [ %340, %335 ]
  %350 = icmp ult i64 %330, 56
  br i1 %350, label %395, label %351

351:                                              ; preds = %346, %351
  %352 = phi %"struct.google_breakpad::MappingInfo"** [ %389, %351 ], [ %348, %346 ]
  %353 = phi %"struct.google_breakpad::MappingInfo"** [ %390, %351 ], [ %349, %346 ]
  %354 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %352, i64 -1
  %355 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %353, i64 -1
  %356 = bitcast %"struct.google_breakpad::MappingInfo"** %355 to i64*
  %357 = load i64, i64* %356, align 8
  %358 = bitcast %"struct.google_breakpad::MappingInfo"** %354 to i64*
  store i64 %357, i64* %358, align 8
  %359 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %352, i64 -2
  %360 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %353, i64 -2
  %361 = bitcast %"struct.google_breakpad::MappingInfo"** %360 to i64*
  %362 = load i64, i64* %361, align 8
  %363 = bitcast %"struct.google_breakpad::MappingInfo"** %359 to i64*
  store i64 %362, i64* %363, align 8
  %364 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %352, i64 -3
  %365 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %353, i64 -3
  %366 = bitcast %"struct.google_breakpad::MappingInfo"** %365 to i64*
  %367 = load i64, i64* %366, align 8
  %368 = bitcast %"struct.google_breakpad::MappingInfo"** %364 to i64*
  store i64 %367, i64* %368, align 8
  %369 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %352, i64 -4
  %370 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %353, i64 -4
  %371 = bitcast %"struct.google_breakpad::MappingInfo"** %370 to i64*
  %372 = load i64, i64* %371, align 8
  %373 = bitcast %"struct.google_breakpad::MappingInfo"** %369 to i64*
  store i64 %372, i64* %373, align 8
  %374 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %352, i64 -5
  %375 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %353, i64 -5
  %376 = bitcast %"struct.google_breakpad::MappingInfo"** %375 to i64*
  %377 = load i64, i64* %376, align 8
  %378 = bitcast %"struct.google_breakpad::MappingInfo"** %374 to i64*
  store i64 %377, i64* %378, align 8
  %379 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %352, i64 -6
  %380 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %353, i64 -6
  %381 = bitcast %"struct.google_breakpad::MappingInfo"** %380 to i64*
  %382 = load i64, i64* %381, align 8
  %383 = bitcast %"struct.google_breakpad::MappingInfo"** %379 to i64*
  store i64 %382, i64* %383, align 8
  %384 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %352, i64 -7
  %385 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %353, i64 -7
  %386 = bitcast %"struct.google_breakpad::MappingInfo"** %385 to i64*
  %387 = load i64, i64* %386, align 8
  %388 = bitcast %"struct.google_breakpad::MappingInfo"** %384 to i64*
  store i64 %387, i64* %388, align 8
  %389 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %352, i64 -8
  %390 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %353, i64 -8
  %391 = bitcast %"struct.google_breakpad::MappingInfo"** %390 to i64*
  %392 = load i64, i64* %391, align 8
  %393 = bitcast %"struct.google_breakpad::MappingInfo"** %389 to i64*
  store i64 %392, i64* %393, align 8
  %394 = icmp eq %"struct.google_breakpad::MappingInfo"** %390, %221
  br i1 %394, label %395, label %351, !llvm.loop !43

395:                                              ; preds = %346, %351, %323, %212
  %396 = phi %"struct.google_breakpad::MappingInfo"** [ %215, %212 ], [ %249, %323 ], [ %347, %346 ], [ %389, %351 ]
  %397 = ptrtoint %"struct.google_breakpad::MappingInfo"** %396 to i64
  store i64 %397, i64* %51, align 8
  store i64 %220, i64* %50, align 8
  store i64 %217, i64* %52, align 8
  br label %398

398:                                              ; preds = %179, %395
  call void @my_memset(i8* %173, i8 signext 0, i64 296) #14
  %399 = load i64, i64* %3, align 8
  %400 = getelementptr inbounds i8, i8* %173, i64 16
  %401 = bitcast i8* %400 to i64*
  store i64 %399, i64* %401, align 8
  %402 = load i64, i64* %4, align 8
  %403 = getelementptr inbounds i8, i8* %173, i64 24
  %404 = bitcast i8* %403 to i64*
  store i64 %402, i64* %404, align 8
  %405 = bitcast i8* %173 to i64*
  store i64 %399, i64* %405, align 8
  %406 = load i64, i64* %4, align 8
  %407 = load i64, i64* %3, align 8
  %408 = sub i64 %406, %407
  %409 = getelementptr inbounds i8, i8* %173, i64 8
  %410 = bitcast i8* %409 to i64*
  store i64 %408, i64* %410, align 8
  %411 = load i64, i64* %5, align 8
  %412 = getelementptr inbounds i8, i8* %173, i64 32
  %413 = bitcast i8* %412 to i64*
  store i64 %411, i64* %413, align 8
  %414 = getelementptr inbounds i8, i8* %173, i64 40
  store i8 %122, i8* %414, align 8
  br i1 %171, label %415, label %427

415:                                              ; preds = %398
  %416 = call i64 @my_strlen(i8* nonnull %172) #14
  %417 = and i64 %416, 4294967295
  %418 = icmp ult i64 %417, 255
  br i1 %418, label %419, label %427

419:                                              ; preds = %415
  %420 = getelementptr inbounds i8, i8* %173, i64 41
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %420, i8* nonnull align 1 %172, i64 %417, i1 false)
  br label %427

421:                                              ; preds = %166, %160
  %422 = load i64, i64* %4, align 8
  %423 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %143, i64 0, i32 2, i32 1
  store i64 %422, i64* %423, align 8
  %424 = load i64, i64* %145, align 8
  %425 = sub i64 %422, %424
  store i64 %425, i64* %147, align 8
  %426 = or i8 %163, %122
  store i8 %426, i8* %162, align 8
  br label %427

427:                                              ; preds = %108, %113, %118, %415, %419, %398, %421
  %428 = load i32, i32* %39, align 4
  %429 = xor i32 %109, -1
  %430 = add i32 %428, %429
  store i32 %430, i32* %39, align 4
  %431 = zext i32 %109 to i64
  %432 = getelementptr inbounds %"class.google_breakpad::LineReader", %"class.google_breakpad::LineReader"* %35, i64 0, i32 3, i64 %431
  %433 = getelementptr inbounds i8, i8* %432, i64 1
  %434 = zext i32 %430 to i64
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %40, i8* align 1 %433, i64 %434, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #14
  br label %435

435:                                              ; preds = %427, %104, %102
  %436 = phi i32 [ %430, %427 ], [ %107, %104 ], [ %103, %102 ]
  br label %57

437:                                              ; preds = %60, %76, %98, %94
  %438 = icmp eq i8* %22, null
  br i1 %438, label %522, label %439

439:                                              ; preds = %437
  %440 = load i64, i64* %50, align 8
  %441 = load i64, i64* %51, align 8
  %442 = icmp eq i64 %440, %441
  %443 = inttoptr i64 %441 to %"struct.google_breakpad::MappingInfo"**
  br i1 %442, label %522, label %444

444:                                              ; preds = %439
  %445 = sub i64 %440, %441
  %446 = ashr exact i64 %445, 3
  br label %447

447:                                              ; preds = %444, %519
  %448 = phi i64 [ 0, %444 ], [ %520, %519 ]
  %449 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %443, i64 %448
  %450 = load %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %449, align 8
  %451 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %450, i64 0, i32 0
  %452 = load i64, i64* %451, align 8
  %453 = inttoptr i64 %452 to i8*
  %454 = icmp ult i8* %22, %453
  br i1 %454, label %519, label %455

455:                                              ; preds = %447
  %456 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %450, i64 0, i32 1
  %457 = load i64, i64* %456, align 8
  %458 = add i64 %457, %452
  %459 = inttoptr i64 %458 to i8*
  %460 = icmp ult i8* %22, %459
  br i1 %460, label %461, label %519

461:                                              ; preds = %455
  %462 = icmp eq i64 %448, 0
  br i1 %462, label %485, label %463

463:                                              ; preds = %461
  %464 = add i64 %448, -1
  %465 = and i64 %448, 3
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %480, label %467

467:                                              ; preds = %463, %467
  %468 = phi %"struct.google_breakpad::MappingInfo"** [ %477, %467 ], [ %443, %463 ]
  %469 = phi i64 [ %471, %467 ], [ %448, %463 ]
  %470 = phi i64 [ %478, %467 ], [ %465, %463 ]
  %471 = add i64 %469, -1
  %472 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %468, i64 %471
  %473 = bitcast %"struct.google_breakpad::MappingInfo"** %472 to i64*
  %474 = load i64, i64* %473, align 8
  %475 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %468, i64 %469
  %476 = bitcast %"struct.google_breakpad::MappingInfo"** %475 to i64*
  store i64 %474, i64* %476, align 8
  %477 = load %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"*** %56, align 8
  %478 = add i64 %470, -1
  %479 = icmp eq i64 %478, 0
  br i1 %479, label %480, label %467, !llvm.loop !44

480:                                              ; preds = %467, %463
  %481 = phi %"struct.google_breakpad::MappingInfo"** [ undef, %463 ], [ %477, %467 ]
  %482 = phi %"struct.google_breakpad::MappingInfo"** [ %443, %463 ], [ %477, %467 ]
  %483 = phi i64 [ %448, %463 ], [ %471, %467 ]
  %484 = icmp ult i64 %464, 3
  br i1 %484, label %485, label %487

485:                                              ; preds = %480, %487, %461
  %486 = phi %"struct.google_breakpad::MappingInfo"** [ %443, %461 ], [ %481, %480 ], [ %518, %487 ]
  store %"struct.google_breakpad::MappingInfo"* %450, %"struct.google_breakpad::MappingInfo"** %486, align 8
  br label %522

487:                                              ; preds = %480, %487
  %488 = phi %"struct.google_breakpad::MappingInfo"** [ %518, %487 ], [ %482, %480 ]
  %489 = phi i64 [ %511, %487 ], [ %483, %480 ]
  %490 = add i64 %489, -1
  %491 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %488, i64 %490
  %492 = bitcast %"struct.google_breakpad::MappingInfo"** %491 to i64*
  %493 = load i64, i64* %492, align 8
  %494 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %488, i64 %489
  %495 = bitcast %"struct.google_breakpad::MappingInfo"** %494 to i64*
  store i64 %493, i64* %495, align 8
  %496 = load %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"*** %56, align 8
  %497 = add i64 %489, -2
  %498 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %496, i64 %497
  %499 = bitcast %"struct.google_breakpad::MappingInfo"** %498 to i64*
  %500 = load i64, i64* %499, align 8
  %501 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %496, i64 %490
  %502 = bitcast %"struct.google_breakpad::MappingInfo"** %501 to i64*
  store i64 %500, i64* %502, align 8
  %503 = load %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"*** %56, align 8
  %504 = add i64 %489, -3
  %505 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %503, i64 %504
  %506 = bitcast %"struct.google_breakpad::MappingInfo"** %505 to i64*
  %507 = load i64, i64* %506, align 8
  %508 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %503, i64 %497
  %509 = bitcast %"struct.google_breakpad::MappingInfo"** %508 to i64*
  store i64 %507, i64* %509, align 8
  %510 = load %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"*** %56, align 8
  %511 = add i64 %489, -4
  %512 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %510, i64 %511
  %513 = bitcast %"struct.google_breakpad::MappingInfo"** %512 to i64*
  %514 = load i64, i64* %513, align 8
  %515 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %510, i64 %504
  %516 = bitcast %"struct.google_breakpad::MappingInfo"** %515 to i64*
  store i64 %514, i64* %516, align 8
  %517 = icmp eq i64 %511, 0
  %518 = load %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"*** %56, align 8
  br i1 %517, label %485, label %487

519:                                              ; preds = %447, %455
  %520 = add nuw i64 %448, 1
  %521 = icmp ult i64 %520, %446
  br i1 %521, label %447, label %522

522:                                              ; preds = %519, %439, %485, %437
  %523 = shl i64 %24, 32
  %524 = ashr exact i64 %523, 32
  %525 = call i64 asm sideeffect "syscall\0A", "={ax},0,{di},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 3, i64 %524) #14, !srcloc !31
  %526 = icmp ugt i64 %525, -4096
  br i1 %526, label %527, label %531

527:                                              ; preds = %522
  %528 = trunc i64 %525 to i32
  %529 = sub nsw i32 0, %528
  %530 = tail call i32* @__errno_location() #13
  store i32 %529, i32* %530, align 4
  br label %531

531:                                              ; preds = %522, %527
  %532 = load %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"*** %46, align 8
  %533 = load %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"*** %47, align 8
  %534 = icmp ne %"struct.google_breakpad::MappingInfo"** %532, %533
  br label %535

535:                                              ; preds = %27, %531, %30, %1
  %536 = phi i1 [ false, %1 ], [ %534, %531 ], [ false, %30 ], [ false, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %6) #14
  ret i1 %536
}

declare i8* @my_read_hex_ptr(i64*, i8*) local_unnamed_addr #4

declare i8* @my_strchr(i8*, i8 signext) local_unnamed_addr #4

declare i32 @my_strncmp(i8*, i8*, i64) local_unnamed_addr #4

declare void @my_memset(i8*, i8 signext, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN15google_breakpad11LinuxDumper12GetStackInfoEPPKvPmm(%"class.google_breakpad::LinuxDumper"* nocapture readonly, i8** nocapture, i64* nocapture, i64) local_unnamed_addr #9 align 2 {
  %5 = tail call i32 @getpagesize() #13
  %6 = sext i32 %5 to i64
  %7 = sub nsw i64 0, %6
  %8 = and i64 %7, %3
  %9 = inttoptr i64 %8 to i8*
  %10 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10, i32 0
  %11 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %12 = bitcast %"struct.google_breakpad::MappingInfo"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.9"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %13, %15
  %17 = inttoptr i64 %15 to %"struct.google_breakpad::MappingInfo"**
  br i1 %16, label %43, label %18

18:                                               ; preds = %4
  %19 = sub i64 %13, %15
  %20 = ashr exact i64 %19, 3
  br label %21

21:                                               ; preds = %33, %18
  %22 = phi i64 [ 0, %18 ], [ %34, %33 ]
  %23 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %17, i64 %22
  %24 = load %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %23, align 8
  %25 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %24, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp ult i64 %8, %26
  br i1 %27, label %33, label %28

28:                                               ; preds = %21
  %29 = sub i64 %8, %26
  %30 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %24, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp ult i64 %29, %31
  br i1 %32, label %36, label %33

33:                                               ; preds = %28, %21
  %34 = add nuw i64 %22, 1
  %35 = icmp ult i64 %34, %20
  br i1 %35, label %21, label %43

36:                                               ; preds = %28
  %37 = icmp eq %"struct.google_breakpad::MappingInfo"* %24, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %36
  %39 = sub i64 %26, %8
  %40 = add i64 %31, %39
  %41 = icmp slt i64 %40, 32768
  %42 = select i1 %41, i64 %40, i64 32768
  store i64 %42, i64* %2, align 8
  store i8* %9, i8** %1, align 8
  br label %43

43:                                               ; preds = %33, %4, %36, %38
  %44 = phi i1 [ true, %38 ], [ false, %36 ], [ false, %4 ], [ false, %33 ]
  ret i1 %44
}

; Function Attrs: nounwind readnone
declare i32 @getpagesize() local_unnamed_addr #10

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"struct.google_breakpad::MappingInfo"* @_ZNK15google_breakpad11LinuxDumper11FindMappingEPKv(%"class.google_breakpad::LinuxDumper"* nocapture readonly, i8*) local_unnamed_addr #8 align 2 {
  %3 = ptrtoint i8* %1 to i64
  %4 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10, i32 0
  %5 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.google_breakpad::MappingInfo"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.9"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  %11 = inttoptr i64 %9 to %"struct.google_breakpad::MappingInfo"**
  br i1 %10, label %30, label %12

12:                                               ; preds = %2
  %13 = sub i64 %7, %9
  %14 = ashr exact i64 %13, 3
  br label %15

15:                                               ; preds = %12, %27
  %16 = phi i64 [ 0, %12 ], [ %28, %27 ]
  %17 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %11, i64 %16
  %18 = load %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %17, align 8
  %19 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %18, i64 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp ugt i64 %20, %3
  br i1 %21, label %27, label %22

22:                                               ; preds = %15
  %23 = sub i64 %3, %20
  %24 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %18, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp ult i64 %23, %25
  br i1 %26, label %30, label %27

27:                                               ; preds = %15, %22
  %28 = add nuw i64 %16, 1
  %29 = icmp ult i64 %28, %14
  br i1 %29, label %15, label %30

30:                                               ; preds = %22, %27, %2
  %31 = phi %"struct.google_breakpad::MappingInfo"* [ null, %2 ], [ null, %27 ], [ %18, %22 ]
  ret %"struct.google_breakpad::MappingInfo"* %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15google_breakpad11LinuxDumper17SanitizeStackCopyEPhmmm(%"class.google_breakpad::LinuxDumper"* nocapture readonly, i8*, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca [256 x i8], align 16
  %7 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10, i32 0
  %8 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.google_breakpad::MappingInfo"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.9"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  %14 = inttoptr i64 %12 to %"struct.google_breakpad::MappingInfo"**
  br i1 %13, label %32, label %15

15:                                               ; preds = %5
  %16 = sub i64 %10, %12
  %17 = ashr exact i64 %16, 3
  br label %18

18:                                               ; preds = %29, %15
  %19 = phi i64 [ 0, %15 ], [ %30, %29 ]
  %20 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %14, i64 %19
  %21 = load %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %20, align 8
  %22 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %21, i64 0, i32 2, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp ugt i64 %23, %3
  br i1 %24, label %29, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %21, i64 0, i32 2, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp ugt i64 %27, %3
  br i1 %28, label %32, label %29

29:                                               ; preds = %25, %18
  %30 = add nuw i64 %19, 1
  %31 = icmp ult i64 %30, %17
  br i1 %31, label %18, label %32

32:                                               ; preds = %25, %29, %5
  %33 = phi %"struct.google_breakpad::MappingInfo"* [ null, %5 ], [ %21, %25 ], [ null, %29 ]
  %34 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %34) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 256, i1 false)
  call void @my_memset(i8* nonnull %34, i8 signext 0, i64 256) #14
  %35 = load i64, i64* %9, align 8
  %36 = load i64, i64* %11, align 8
  %37 = icmp eq i64 %35, %36
  %38 = inttoptr i64 %36 to %"struct.google_breakpad::MappingInfo"**
  br i1 %37, label %42, label %39

39:                                               ; preds = %32
  %40 = sub i64 %35, %36
  %41 = ashr exact i64 %40, 3
  br label %46

42:                                               ; preds = %104, %32
  %43 = add i64 %4, 7
  %44 = and i64 %43, -8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %108, label %107

46:                                               ; preds = %39, %104
  %47 = phi i64 [ 0, %39 ], [ %105, %104 ]
  %48 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %38, i64 %47
  %49 = load %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %48, align 8
  %50 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %49, i64 0, i32 4
  %51 = load i8, i8* %50, align 8, !range !35
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %104, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %49, i64 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %49, i64 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = add i64 %57, %55
  %59 = lshr i64 %55, 21
  %60 = lshr i64 %58, 21
  %61 = icmp ult i64 %60, %59
  br i1 %61, label %104, label %62

62:                                               ; preds = %53
  %63 = add nuw nsw i64 %60, 1
  %64 = sub nsw i64 %63, %59
  %65 = and i64 %64, 1
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %78, label %67

67:                                               ; preds = %62
  %68 = trunc i64 %59 to i32
  %69 = and i32 %68, 7
  %70 = shl i32 1, %69
  %71 = lshr i64 %55, 24
  %72 = and i64 %71, 255
  %73 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = trunc i32 %70 to i8
  %76 = or i8 %74, %75
  store i8 %76, i8* %73, align 1
  %77 = add nuw nsw i64 %59, 1
  br label %78

78:                                               ; preds = %67, %62
  %79 = phi i64 [ %77, %67 ], [ %59, %62 ]
  %80 = icmp eq i64 %60, %59
  br i1 %80, label %104, label %81

81:                                               ; preds = %78, %81
  %82 = phi i64 [ %102, %81 ], [ %79, %78 ]
  %83 = trunc i64 %82 to i32
  %84 = and i32 %83, 7
  %85 = shl i32 1, %84
  %86 = lshr i64 %82, 3
  %87 = and i64 %86, 255
  %88 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = trunc i32 %85 to i8
  %91 = or i8 %89, %90
  store i8 %91, i8* %88, align 1
  %92 = add nuw nsw i64 %82, 1
  %93 = trunc i64 %92 to i32
  %94 = and i32 %93, 7
  %95 = shl i32 1, %94
  %96 = lshr i64 %92, 3
  %97 = and i64 %96, 255
  %98 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = trunc i32 %95 to i8
  %101 = or i8 %99, %100
  store i8 %101, i8* %98, align 1
  %102 = add nuw nsw i64 %82, 2
  %103 = icmp eq i64 %92, %60
  br i1 %103, label %104, label %81

104:                                              ; preds = %78, %81, %53, %46
  %105 = add nuw i64 %47, 1
  %106 = icmp ult i64 %105, %41
  br i1 %106, label %46, label %42

107:                                              ; preds = %42
  call void @my_memset(i8* %1, i8 signext 0, i64 %44) #14
  br label %108

108:                                              ; preds = %42, %107
  %109 = getelementptr inbounds i8, i8* %1, i64 %44
  %110 = getelementptr inbounds i8, i8* %1, i64 %2
  %111 = getelementptr inbounds i8, i8* %110, i64 -8
  %112 = icmp ugt i8* %109, %111
  br i1 %112, label %186, label %113

113:                                              ; preds = %108
  %114 = icmp eq %"struct.google_breakpad::MappingInfo"* %33, null
  %115 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %33, i64 0, i32 2, i32 0
  %116 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %33, i64 0, i32 2, i32 1
  br label %117

117:                                              ; preds = %113, %182
  %118 = phi %"struct.google_breakpad::MappingInfo"* [ null, %113 ], [ %183, %182 ]
  %119 = phi i8* [ %109, %113 ], [ %184, %182 ]
  %120 = bitcast i8* %119 to i64*
  %121 = load i64, i64* %120, align 1
  %122 = add i64 %121, 4096
  %123 = icmp ult i64 %122, 8193
  br i1 %123, label %182, label %124

124:                                              ; preds = %117
  br i1 %114, label %131, label %125

125:                                              ; preds = %124
  %126 = load i64, i64* %115, align 8
  %127 = icmp ule i64 %126, %121
  %128 = load i64, i64* %116, align 8
  %129 = icmp ugt i64 %128, %121
  %130 = and i1 %127, %129
  br i1 %130, label %182, label %131

131:                                              ; preds = %124, %125
  %132 = icmp eq %"struct.google_breakpad::MappingInfo"* %118, null
  br i1 %132, label %141, label %133

133:                                              ; preds = %131
  %134 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %118, i64 0, i32 2, i32 0
  %135 = load i64, i64* %134, align 8
  %136 = icmp ule i64 %135, %121
  %137 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %118, i64 0, i32 2, i32 1
  %138 = load i64, i64* %137, align 8
  %139 = icmp ugt i64 %138, %121
  %140 = and i1 %136, %139
  br i1 %140, label %182, label %141

141:                                              ; preds = %131, %133
  %142 = lshr i64 %121, 21
  %143 = lshr i64 %121, 24
  %144 = and i64 %143, 255
  %145 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = sext i8 %146 to i32
  %148 = trunc i64 %142 to i32
  %149 = and i32 %148, 7
  %150 = shl i32 1, %149
  %151 = and i32 %150, %147
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %181, label %153

153:                                              ; preds = %141
  %154 = load i64, i64* %9, align 8
  %155 = load i64, i64* %11, align 8
  %156 = icmp eq i64 %154, %155
  %157 = inttoptr i64 %155 to %"struct.google_breakpad::MappingInfo"**
  br i1 %156, label %181, label %158

158:                                              ; preds = %153
  %159 = sub i64 %154, %155
  %160 = ashr exact i64 %159, 3
  br label %161

161:                                              ; preds = %172, %158
  %162 = phi i64 [ 0, %158 ], [ %173, %172 ]
  %163 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %157, i64 %162
  %164 = load %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %163, align 8
  %165 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %164, i64 0, i32 2, i32 0
  %166 = load i64, i64* %165, align 8
  %167 = icmp ugt i64 %166, %121
  br i1 %167, label %172, label %168

168:                                              ; preds = %161
  %169 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %164, i64 0, i32 2, i32 1
  %170 = load i64, i64* %169, align 8
  %171 = icmp ugt i64 %170, %121
  br i1 %171, label %175, label %172

172:                                              ; preds = %168, %161
  %173 = add nuw i64 %162, 1
  %174 = icmp ult i64 %173, %160
  br i1 %174, label %161, label %181

175:                                              ; preds = %168
  %176 = icmp eq %"struct.google_breakpad::MappingInfo"* %164, null
  br i1 %176, label %181, label %177

177:                                              ; preds = %175
  %178 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %164, i64 0, i32 4
  %179 = load i8, i8* %178, align 8, !range !35
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %172, %153, %177, %175, %141
  store i64 1004211376067947757, i64* %120, align 1
  br label %182

182:                                              ; preds = %181, %177, %133, %125, %117
  %183 = phi %"struct.google_breakpad::MappingInfo"* [ %118, %117 ], [ %118, %125 ], [ %118, %133 ], [ %118, %181 ], [ %164, %177 ]
  %184 = getelementptr inbounds i8, i8* %119, i64 8
  %185 = icmp ugt i8* %184, %111
  br i1 %185, label %186, label %117

186:                                              ; preds = %182, %108
  %187 = phi i8* [ %109, %108 ], [ %184, %182 ]
  %188 = icmp ult i8* %187, %110
  br i1 %188, label %189, label %193

189:                                              ; preds = %186
  %190 = ptrtoint i8* %110 to i64
  %191 = ptrtoint i8* %187 to i64
  %192 = sub i64 %190, %191
  call void @my_memset(i8* %187, i8 signext 0, i64 %192) #14
  br label %193

193:                                              ; preds = %189, %186
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %34) #14
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"struct.google_breakpad::MappingInfo"* @_ZNK15google_breakpad11LinuxDumper17FindMappingNoBiasEm(%"class.google_breakpad::LinuxDumper"* nocapture readonly, i64) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10, i32 0
  %4 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.google_breakpad::MappingInfo"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.9"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  %10 = inttoptr i64 %8 to %"struct.google_breakpad::MappingInfo"**
  br i1 %9, label %28, label %11

11:                                               ; preds = %2
  %12 = sub i64 %6, %8
  %13 = ashr exact i64 %12, 3
  br label %14

14:                                               ; preds = %11, %25
  %15 = phi i64 [ 0, %11 ], [ %26, %25 ]
  %16 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %10, i64 %15
  %17 = load %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %16, align 8
  %18 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %17, i64 0, i32 2, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp ugt i64 %19, %1
  br i1 %20, label %25, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %17, i64 0, i32 2, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = icmp ugt i64 %23, %1
  br i1 %24, label %28, label %25

25:                                               ; preds = %14, %21
  %26 = add nuw i64 %15, 1
  %27 = icmp ult i64 %26, %13
  br i1 %27, label %14, label %28

28:                                               ; preds = %21, %25, %2
  %29 = phi %"struct.google_breakpad::MappingInfo"* [ null, %2 ], [ null, %25 ], [ %17, %21 ]
  ret %"struct.google_breakpad::MappingInfo"* %29
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN15google_breakpad11LinuxDumper24StackHasPointerToMappingEPKhmmRKNS_11MappingInfoE(%"class.google_breakpad::LinuxDumper"* nocapture readnone, i8* readonly, i64, i64, %"struct.google_breakpad::MappingInfo"* nocapture readonly dereferenceable(296)) local_unnamed_addr #8 align 2 {
  %6 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %4, i64 0, i32 2, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %4, i64 0, i32 2, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %3, 7
  %11 = and i64 %10, -8
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = getelementptr inbounds i8, i8* %1, i64 %2
  %14 = getelementptr inbounds i8, i8* %13, i64 -8
  %15 = icmp ugt i8* %12, %14
  br i1 %15, label %26, label %18

16:                                               ; preds = %18
  %17 = icmp ugt i8* %25, %14
  br i1 %17, label %26, label %18

18:                                               ; preds = %5, %16
  %19 = phi i8* [ %25, %16 ], [ %12, %5 ]
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = icmp ugt i64 %7, %21
  %23 = icmp ugt i64 %21, %9
  %24 = or i1 %22, %23
  %25 = getelementptr inbounds i8, i8* %19, i64 8
  br i1 %24, label %16, label %26

26:                                               ; preds = %18, %16, %5
  %27 = phi i1 [ false, %5 ], [ false, %16 ], [ true, %18 ]
  ret i1 %27
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #10

declare zeroext i1 @_ZN15google_breakpad27ElfFileSoNameFromMappedFileEPKvPcm(i8*, i8*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorImN15google_breakpad16PageStdAllocatorImEEE8__appendEm(%"class.std::__1::vector.18"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i64** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i64** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i64*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i64, i64* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i64, i64* %13, i64 %18
  %20 = bitcast i64* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #14
  %26 = ptrtoint i64* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  ret void

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.18"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.18"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #16
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %47

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %61, label %47

47:                                               ; preds = %38, %42
  %48 = phi i64 [ %45, %42 ], [ 2305843009213693951, %38 ]
  %49 = shl i64 %48, 3
  %50 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 2
  %51 = load i64, i64* %50, align 8
  %52 = icmp ugt i64 %49, %51
  br i1 %52, label %56, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %55 = load i64*, i64** %54, align 8
  br label %61

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %58 = load %"class.google_breakpad::PageAllocator"*, %"class.google_breakpad::PageAllocator"** %57, align 8
  %59 = tail call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %58, i64 %49) #14
  %60 = bitcast i8* %59 to i64*
  br label %61

61:                                               ; preds = %56, %53, %42
  %62 = phi i64 [ 0, %42 ], [ %48, %53 ], [ %48, %56 ]
  %63 = phi i64* [ null, %42 ], [ %55, %53 ], [ %60, %56 ]
  %64 = getelementptr inbounds i64, i64* %63, i64 %33
  %65 = bitcast i64* %64 to i8*
  %66 = getelementptr inbounds i64, i64* %63, i64 %62
  %67 = getelementptr inbounds i64, i64* %64, i64 %1
  %68 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 %68, i1 false) #14
  %69 = ptrtoint i64* %66 to i64
  %70 = ptrtoint i64* %67 to i64
  %71 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = ptrtoint i64* %72 to i64
  %74 = load i64*, i64** %6, align 8
  %75 = icmp eq i64* %74, %72
  br i1 %75, label %227, label %76

76:                                               ; preds = %61
  %77 = getelementptr i64, i64* %74, i64 -1
  %78 = ptrtoint i64* %77 to i64
  %79 = sub i64 %78, %73
  %80 = lshr i64 %79, 3
  %81 = add nuw nsw i64 %80, 1
  %82 = icmp ult i64 %81, 4
  br i1 %82, label %175, label %83

83:                                               ; preds = %76
  %84 = getelementptr i64, i64* %74, i64 -1
  %85 = ptrtoint i64* %84 to i64
  %86 = sub i64 %85, %73
  %87 = lshr i64 %86, 3
  %88 = xor i64 %87, -1
  %89 = add nsw i64 %33, %88
  %90 = getelementptr i64, i64* %63, i64 %89
  %91 = xor i64 %87, -1
  %92 = getelementptr i64, i64* %74, i64 %91
  %93 = icmp ult i64* %90, %74
  %94 = icmp ult i64* %92, %64
  %95 = and i1 %93, %94
  br i1 %95, label %175, label %96

96:                                               ; preds = %83
  %97 = and i64 %81, 4611686018427387900
  %98 = sub nsw i64 0, %97
  %99 = getelementptr i64, i64* %64, i64 %98
  %100 = sub nsw i64 0, %97
  %101 = getelementptr i64, i64* %74, i64 %100
  %102 = add nsw i64 %97, -4
  %103 = lshr exact i64 %102, 2
  %104 = add nuw nsw i64 %103, 1
  %105 = and i64 %104, 1
  %106 = icmp eq i64 %102, 0
  br i1 %106, label %153, label %107

107:                                              ; preds = %96
  %108 = sub nuw nsw i64 %104, %105
  %109 = getelementptr i64, i64* %64, i64 -1
  %110 = getelementptr i64, i64* %74, i64 -1
  %111 = getelementptr i64, i64* %64, i64 -1
  %112 = getelementptr i64, i64* %74, i64 -1
  br label %113

113:                                              ; preds = %113, %107
  %114 = phi i64 [ 0, %107 ], [ %148, %113 ]
  %115 = phi i64 [ %108, %107 ], [ %149, %113 ]
  %116 = sub i64 0, %114
  %117 = sub i64 0, %114
  %118 = getelementptr inbounds i64, i64* %109, i64 %116
  %119 = getelementptr inbounds i64, i64* %110, i64 %117
  %120 = getelementptr inbounds i64, i64* %119, i64 -1
  %121 = bitcast i64* %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !45
  %123 = getelementptr inbounds i64, i64* %119, i64 -2
  %124 = getelementptr inbounds i64, i64* %123, i64 -1
  %125 = bitcast i64* %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !45
  %127 = getelementptr inbounds i64, i64* %118, i64 -1
  %128 = bitcast i64* %127 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %128, align 8, !alias.scope !48, !noalias !45
  %129 = getelementptr inbounds i64, i64* %118, i64 -2
  %130 = getelementptr inbounds i64, i64* %129, i64 -1
  %131 = bitcast i64* %130 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %131, align 8, !alias.scope !48, !noalias !45
  %132 = sub nuw nsw i64 -4, %114
  %133 = sub nuw nsw i64 -4, %114
  %134 = getelementptr inbounds i64, i64* %111, i64 %132
  %135 = getelementptr inbounds i64, i64* %112, i64 %133
  %136 = getelementptr inbounds i64, i64* %135, i64 -1
  %137 = bitcast i64* %136 to <2 x i64>*
  %138 = load <2 x i64>, <2 x i64>* %137, align 8, !alias.scope !45
  %139 = getelementptr inbounds i64, i64* %135, i64 -2
  %140 = getelementptr inbounds i64, i64* %139, i64 -1
  %141 = bitcast i64* %140 to <2 x i64>*
  %142 = load <2 x i64>, <2 x i64>* %141, align 8, !alias.scope !45
  %143 = getelementptr inbounds i64, i64* %134, i64 -1
  %144 = bitcast i64* %143 to <2 x i64>*
  store <2 x i64> %138, <2 x i64>* %144, align 8, !alias.scope !48, !noalias !45
  %145 = getelementptr inbounds i64, i64* %134, i64 -2
  %146 = getelementptr inbounds i64, i64* %145, i64 -1
  %147 = bitcast i64* %146 to <2 x i64>*
  store <2 x i64> %142, <2 x i64>* %147, align 8, !alias.scope !48, !noalias !45
  %148 = add i64 %114, 8
  %149 = add i64 %115, -2
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %113, !llvm.loop !50

151:                                              ; preds = %113
  %152 = sub nuw nsw i64 -8, %114
  br label %153

153:                                              ; preds = %151, %96
  %154 = phi i64 [ 0, %96 ], [ %152, %151 ]
  %155 = icmp eq i64 %105, 0
  br i1 %155, label %173, label %156

156:                                              ; preds = %153
  %157 = getelementptr i64, i64* %64, i64 -1
  %158 = getelementptr i64, i64* %74, i64 -1
  %159 = getelementptr inbounds i64, i64* %157, i64 %154
  %160 = getelementptr inbounds i64, i64* %158, i64 %154
  %161 = getelementptr inbounds i64, i64* %160, i64 -1
  %162 = bitcast i64* %161 to <2 x i64>*
  %163 = load <2 x i64>, <2 x i64>* %162, align 8, !alias.scope !45
  %164 = getelementptr inbounds i64, i64* %160, i64 -2
  %165 = getelementptr inbounds i64, i64* %164, i64 -1
  %166 = bitcast i64* %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8, !alias.scope !45
  %168 = getelementptr inbounds i64, i64* %159, i64 -1
  %169 = bitcast i64* %168 to <2 x i64>*
  store <2 x i64> %163, <2 x i64>* %169, align 8, !alias.scope !48, !noalias !45
  %170 = getelementptr inbounds i64, i64* %159, i64 -2
  %171 = getelementptr inbounds i64, i64* %170, i64 -1
  %172 = bitcast i64* %171 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %172, align 8, !alias.scope !48, !noalias !45
  br label %173

173:                                              ; preds = %153, %156
  %174 = icmp eq i64 %81, %97
  br i1 %174, label %227, label %175

175:                                              ; preds = %173, %83, %76
  %176 = phi i64* [ %64, %83 ], [ %64, %76 ], [ %99, %173 ]
  %177 = phi i64* [ %74, %83 ], [ %74, %76 ], [ %101, %173 ]
  %178 = getelementptr i64, i64* %177, i64 -1
  %179 = ptrtoint i64* %178 to i64
  %180 = sub i64 %179, %73
  %181 = lshr i64 %180, 3
  %182 = add nuw nsw i64 %181, 1
  %183 = and i64 %182, 7
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %194, label %185

185:                                              ; preds = %175, %185
  %186 = phi i64* [ %189, %185 ], [ %176, %175 ]
  %187 = phi i64* [ %190, %185 ], [ %177, %175 ]
  %188 = phi i64 [ %192, %185 ], [ %183, %175 ]
  %189 = getelementptr inbounds i64, i64* %186, i64 -1
  %190 = getelementptr inbounds i64, i64* %187, i64 -1
  %191 = load i64, i64* %190, align 8
  store i64 %191, i64* %189, align 8
  %192 = add i64 %188, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %185, !llvm.loop !51

194:                                              ; preds = %185, %175
  %195 = phi i64* [ undef, %175 ], [ %189, %185 ]
  %196 = phi i64* [ %176, %175 ], [ %189, %185 ]
  %197 = phi i64* [ %177, %175 ], [ %190, %185 ]
  %198 = icmp ult i64 %180, 56
  br i1 %198, label %227, label %199

199:                                              ; preds = %194, %199
  %200 = phi i64* [ %223, %199 ], [ %196, %194 ]
  %201 = phi i64* [ %224, %199 ], [ %197, %194 ]
  %202 = getelementptr inbounds i64, i64* %200, i64 -1
  %203 = getelementptr inbounds i64, i64* %201, i64 -1
  %204 = load i64, i64* %203, align 8
  store i64 %204, i64* %202, align 8
  %205 = getelementptr inbounds i64, i64* %200, i64 -2
  %206 = getelementptr inbounds i64, i64* %201, i64 -2
  %207 = load i64, i64* %206, align 8
  store i64 %207, i64* %205, align 8
  %208 = getelementptr inbounds i64, i64* %200, i64 -3
  %209 = getelementptr inbounds i64, i64* %201, i64 -3
  %210 = load i64, i64* %209, align 8
  store i64 %210, i64* %208, align 8
  %211 = getelementptr inbounds i64, i64* %200, i64 -4
  %212 = getelementptr inbounds i64, i64* %201, i64 -4
  %213 = load i64, i64* %212, align 8
  store i64 %213, i64* %211, align 8
  %214 = getelementptr inbounds i64, i64* %200, i64 -5
  %215 = getelementptr inbounds i64, i64* %201, i64 -5
  %216 = load i64, i64* %215, align 8
  store i64 %216, i64* %214, align 8
  %217 = getelementptr inbounds i64, i64* %200, i64 -6
  %218 = getelementptr inbounds i64, i64* %201, i64 -6
  %219 = load i64, i64* %218, align 8
  store i64 %219, i64* %217, align 8
  %220 = getelementptr inbounds i64, i64* %200, i64 -7
  %221 = getelementptr inbounds i64, i64* %201, i64 -7
  %222 = load i64, i64* %221, align 8
  store i64 %222, i64* %220, align 8
  %223 = getelementptr inbounds i64, i64* %200, i64 -8
  %224 = getelementptr inbounds i64, i64* %201, i64 -8
  %225 = load i64, i64* %224, align 8
  store i64 %225, i64* %223, align 8
  %226 = icmp eq i64* %224, %72
  br i1 %226, label %227, label %199, !llvm.loop !52

227:                                              ; preds = %194, %199, %173, %61
  %228 = phi i64* [ %64, %61 ], [ %99, %173 ], [ %195, %194 ], [ %223, %199 ]
  %229 = ptrtoint i64* %228 to i64
  store i64 %229, i64* %30, align 8
  store i64 %70, i64* %7, align 8
  store i64 %69, i64* %4, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

declare zeroext i1 @_ZN15google_breakpad12SafeReadLinkEPKcPcm(i8*, i8*, i64) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = !{!13}
!13 = distinct !{!13, !14}
!14 = distinct !{!14, !"LVerDomain"}
!15 = !{!16}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !8}
!18 = distinct !{!18, !10}
!19 = distinct !{!19, !8}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !8}
!26 = distinct !{!26, !10}
!27 = distinct !{!27, !8}
!28 = !{i32 -2143679039}
!29 = !{i32 -2143668487}
!30 = !{i32 -2143653000}
!31 = !{i32 -2143759983}
!32 = !{i32 -2143719670}
!33 = !{i32 -2143555150}
!34 = !{i32 -2143604105}
!35 = !{i8 0, i8 2}
!36 = !{!37}
!37 = distinct !{!37, !38}
!38 = distinct !{!38, !"LVerDomain"}
!39 = !{!40}
!40 = distinct !{!40, !38}
!41 = distinct !{!41, !8}
!42 = distinct !{!42, !10}
!43 = distinct !{!43, !8}
!44 = distinct !{!44, !10}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !8}
!51 = distinct !{!51, !10}
!52 = distinct !{!52, !8}
