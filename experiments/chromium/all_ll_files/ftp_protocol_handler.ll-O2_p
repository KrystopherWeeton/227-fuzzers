; ModuleID = '../../net/url_request/ftp_protocol_handler.cc'
source_filename = "../../net/url_request/ftp_protocol_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::FtpProtocolHandler" = type { %"class.net::URLRequestJobFactory::ProtocolHandler", %"class.std::__1::unique_ptr.0", %"class.net::FtpAuthCache"* }
%"class.net::URLRequestJobFactory::ProtocolHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.net::FtpTransactionFactory"* }
%"class.net::FtpTransactionFactory" = type { i32 (...)** }
%"class.net::FtpAuthCache" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.net::HostResolver" = type opaque
%"class.net::FtpNetworkLayer" = type <{ %"class.net::FtpTransactionFactory", %"class.std::__1::unique_ptr.13", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.net::FtpNetworkSession"* }
%"class.net::FtpNetworkSession" = type opaque
%"class.net::URLRequestJob" = type { i32 (...)**, %"class.net::URLRequest"*, i8, i64, i64, %"class.std::__1::unique_ptr.25", %class.scoped_refptr, %class.scoped_refptr, i8, i64, %"class.absl::optional", %"class.base::OnceCallback", %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.net::SourceStream"* }
%"class.net::SourceStream" = type <{ i32 (...)**, i32, [4 x i8] }>
%class.scoped_refptr = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i8* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.net::RedirectInfo" }
%"struct.net::RedirectInfo" = type { i32, %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", %"class.std::__1::basic_string", i8, i8, i32 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.38" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %class.GURL* }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.44" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.44" = type { %"class.absl::optional_internal::optional_data.45" }
%"class.absl::optional_internal::optional_data.45" = type { %"class.absl::optional_internal::optional_data_base.46" }
%"class.absl::optional_internal::optional_data_base.46" = type { %"class.absl::optional_internal::optional_data_dtor_base.47" }
%"class.absl::optional_internal::optional_data_dtor_base.47" = type { i8, %union.anon.48 }
%union.anon.48 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.34 }
%union.anon.34 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.49 }
%class.scoped_refptr.49 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.50", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.50" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.51 }
%class.scoped_refptr.51 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.52", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.52" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.53" }
%"struct.std::__1::atomic.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__cxx_atomic_impl.56" }
%"struct.std::__1::__cxx_atomic_impl.56" = type { %"struct.std::__1::__cxx_atomic_base_impl.57" }
%"struct.std::__1::__cxx_atomic_base_impl.57" = type { i8 }
%"class.net::URLRequest" = type { %"class.base::SupportsUserData.base", %"class.net::URLRequestContext"*, %"class.net::NetLogWithSource", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.80", %"class.std::__1::vector.86", %"class.net::SiteForCookies", %"class.net::IsolationInfo", i32, i8, i8, %"class.absl::optional.92", %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.net::HttpRequestHeaders", i32, i8, i32, i32, %"class.std::__1::vector.123", %"class.std::__1::vector.131", i32, %"class.net::URLRequest::Delegate"*, i32, %"class.net::HttpResponseInfo", i8, i8, i32, %"class.net::UploadProgress", i32, i32, i8, %"class.std::__1::basic_string", i8, i8, i64, %"class.base::TimeTicks", %"struct.net::LoadTimingInfo", %"class.net::ProxyServer", %"class.absl::optional.195", %"struct.net::NetworkTrafficAnnotationTag", %"class.net::SocketTag", %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.207", %"class.base::RepeatingCallback.207", i8, i8, i32, %"class.base::WeakPtrFactory.208" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.net::URLRequestContext" = type opaque
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.73" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.68" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.75" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.net::URLRequestJob"* }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.net::UploadDataStream"* }
%"class.net::UploadDataStream" = type opaque
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.net::IsolationInfo" = type { i32, %"class.absl::optional.92", %"class.absl::optional.92", %"class.net::NetworkIsolationKey", %"class.net::SiteForCookies", i8, %"class.absl::optional.102" }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.97", %"class.absl::optional.97" }
%"class.absl::optional.97" = type { %"class.absl::optional_internal::optional_data.98" }
%"class.absl::optional_internal::optional_data.98" = type { %"class.absl::optional_internal::optional_data_base.99" }
%"class.absl::optional_internal::optional_data_base.99" = type { %"class.absl::optional_internal::optional_data_dtor_base.100" }
%"class.absl::optional_internal::optional_data_dtor_base.100" = type { i8, %union.anon.101 }
%union.anon.101 = type { %"class.net::SchemefulSite" }
%"class.absl::optional.102" = type { %"class.absl::optional_internal::optional_data.103" }
%"class.absl::optional_internal::optional_data.103" = type { %"class.absl::optional_internal::optional_data_base.104" }
%"class.absl::optional_internal::optional_data_base.104" = type { %"class.absl::optional_internal::optional_data_dtor_base.105" }
%"class.absl::optional_internal::optional_data_dtor_base.105" = type { i8, %union.anon.106 }
%union.anon.106 = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.107" }
%"class.std::__1::__tree.107" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.absl::optional.92" = type { %"class.absl::optional_internal::optional_data.93" }
%"class.absl::optional_internal::optional_data.93" = type { %"class.absl::optional_internal::optional_data_base.94" }
%"class.absl::optional_internal::optional_data_base.94" = type { %"class.absl::optional_internal::optional_data_dtor_base.95" }
%"class.absl::optional_internal::optional_data_dtor_base.95" = type { i8, %union.anon.96 }
%union.anon.96 = type { %"class.url::Origin" }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector.116" }
%"class.std::__1::vector.116" = type { %"class.std::__1::__vector_base.117" }
%"class.std::__1::__vector_base.117" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.118" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"*, %"class.std::__1::__compressed_pair.126" }
%"struct.net::CookieWithAccessResult" = type <{ %"class.net::CanonicalCookie", %"struct.net::CookieAccessResult", [4 x i8] }>
%"class.net::CanonicalCookie" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i8, i32, i32, i8, i32, i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.125" }
%"class.base::time_internal::TimeBase.125" = type { i64 }
%"struct.net::CookieAccessResult" = type <{ %"class.net::CookieInclusionStatus", i32, i32, i8, [3 x i8] }>
%"class.net::CookieInclusionStatus" = type { i32, i32 }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.net::CookieWithAccessResult"* }
%"class.std::__1::vector.131" = type { %"class.std::__1::__vector_base.132" }
%"class.std::__1::__vector_base.132" = type { %"struct.net::CookieAndLineWithAccessResult"*, %"struct.net::CookieAndLineWithAccessResult"*, %"class.std::__1::__compressed_pair.138" }
%"struct.net::CookieAndLineWithAccessResult" = type <{ %"class.absl::optional.133", %"class.std::__1::basic_string", %"struct.net::CookieAccessResult", [4 x i8] }>
%"class.absl::optional.133" = type { %"class.absl::optional_internal::optional_data.134" }
%"class.absl::optional_internal::optional_data.134" = type { %"class.absl::optional_internal::optional_data_base.135" }
%"class.absl::optional_internal::optional_data_base.135" = type { %"class.absl::optional_internal::optional_data_dtor_base.136" }
%"class.absl::optional_internal::optional_data_dtor_base.136" = type { i8, %union.anon.137 }
%union.anon.137 = type { %"class.net::CanonicalCookie" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"struct.net::CookieAndLineWithAccessResult"* }
%"class.net::URLRequest::Delegate" = type { i32 (...)** }
%"class.net::HttpResponseInfo" = type { i8, i32, i8, i8, i8, i8, i8, %"class.net::ProxyServer", i8, i8, i8, i8, %"class.base::Time", %"class.net::IPEndPoint", %"class.std::__1::basic_string", i32, %"class.base::Time", %"class.base::Time", %"struct.net::ResolveErrorInfo", %"class.absl::optional.143", %class.scoped_refptr.148, %"class.net::SSLInfo", %class.scoped_refptr.186, %"class.net::HttpVaryData", %"class.std::__1::vector.151" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.143" = type { %"class.absl::optional_internal::optional_data.144" }
%"class.absl::optional_internal::optional_data.144" = type { %"class.absl::optional_internal::optional_data_base.145" }
%"class.absl::optional_internal::optional_data_base.145" = type { %"class.absl::optional_internal::optional_data_dtor_base.146" }
%"class.absl::optional_internal::optional_data_dtor_base.146" = type { i8, %union.anon.147 }
%union.anon.147 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.148 = type { %"class.net::SSLCertRequestInfo"* }
%"class.net::SSLCertRequestInfo" = type opaque
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.149, %class.scoped_refptr.149, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.169", %"class.std::__1::basic_string", %"class.std::__1::vector.177", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.149 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.150", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.158", %"class.std::__1::vector.162" }
%"class.base::RefCountedThreadSafe.150" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.151", %"class.std::__1::vector.151", %"class.std::__1::vector.151", %"class.std::__1::vector.151" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.162" = type { %"class.std::__1::__vector_base.163" }
%"class.std::__1::__vector_base.163" = type { %"class.std::__1::unique_ptr.158"*, %"class.std::__1::unique_ptr.158"*, %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.std::__1::unique_ptr.158"* }
%"class.std::__1::vector.169" = type { %"class.std::__1::__vector_base.170" }
%"class.std::__1::__vector_base.170" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.172" }
%"class.net::HashValue" = type { i32, %union.anon.171 }
%union.anon.171 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.177" = type { %"class.std::__1::__vector_base.178" }
%"class.std::__1::__vector_base.178" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.181" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.179, i32, [4 x i8] }>
%class.scoped_refptr.179 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.180", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.180" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%class.scoped_refptr.186 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.187", %"class.std::__1::vector.188", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.187" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.188" = type { %"class.std::__1::__vector_base.189" }
%"class.std::__1::__vector_base.189" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.190" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"class.net::HttpVaryData" = type { %"struct.base::MD5Digest", i8 }
%"struct.base::MD5Digest" = type { [16 x i8] }
%"class.std::__1::vector.151" = type { %"class.std::__1::__vector_base.152" }
%"class.std::__1::__vector_base.152" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.std::__1::basic_string"* }
%"class.net::UploadProgress" = type { i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.195" = type { %"class.absl::optional_internal::optional_data.196" }
%"class.absl::optional_internal::optional_data.196" = type { %"class.absl::optional_internal::optional_data_base.197" }
%"class.absl::optional_internal::optional_data_base.197" = type { %"class.absl::optional_internal::optional_data_dtor_base.198" }
%"class.absl::optional_internal::optional_data_dtor_base.198" = type { i8, %union.anon.199 }
%union.anon.199 = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.200" }
%"class.std::__1::vector.200" = type { %"class.std::__1::__vector_base.201" }
%"class.std::__1::__vector_base.201" = type { i32*, i32*, %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { i32* }
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%"class.net::SocketTag" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.207" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.208" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.net::URLRequestErrorJob" = type { %"class.net::URLRequestJob", i32, %"class.base::WeakPtrFactory.212" }
%"class.base::WeakPtrFactory.212" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::URLRequestFtpJob" = type { %"class.net::URLRequestJob", %"class.net::ProxyResolutionService"*, %"class.net::ProxyInfo", %"class.std::__1::unique_ptr.237", %"class.net::FtpRequestInfo", %"class.std::__1::unique_ptr.243", i8, %"class.std::__1::unique_ptr.249", %"class.net::FtpTransactionFactory"*, %"class.net::FtpAuthCache"*, %"class.base::WeakPtrFactory.255" }
%"class.net::ProxyResolutionService" = type { i32 (...)** }
%"class.net::ProxyInfo" = type { %"class.net::ProxyList", %"class.std::__1::map.226", %"struct.net::MutableNetworkTrafficAnnotationTag", i8, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.net::ProxyList" = type { %"class.std::__1::vector.219" }
%"class.std::__1::vector.219" = type { %"class.std::__1::__vector_base.220" }
%"class.std::__1::__vector_base.220" = type { %"class.net::ProxyServer"*, %"class.net::ProxyServer"*, %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.net::ProxyServer"* }
%"class.std::__1::map.226" = type { %"class.std::__1::__tree.227" }
%"class.std::__1::__tree.227" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.228", %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.net::MutableNetworkTrafficAnnotationTag" = type { i32 }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.net::ProxyResolutionRequest"* }
%"class.net::ProxyResolutionRequest" = type opaque
%"class.net::FtpRequestInfo" = type { %class.GURL }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.net::FtpTransaction"* }
%"class.net::FtpTransaction" = type { i32 (...)** }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.net::URLRequestFtpJob::AuthData"* }
%"class.net::URLRequestFtpJob::AuthData" = type opaque
%"class.base::WeakPtrFactory.255" = type { %"class.base::internal::WeakPtrFactoryBase" }

@_ZTVN3net18FtpProtocolHandlerE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::FtpProtocolHandler"*)* @_ZN3net18FtpProtocolHandlerD2Ev to i8*), i8* bitcast (void (%"class.net::FtpProtocolHandler"*)* @_ZN3net18FtpProtocolHandlerD0Ev to i8*), i8* bitcast (%"class.net::URLRequestJob"* (%"class.net::FtpProtocolHandler"*, %"class.net::URLRequest"*)* @_ZNK3net18FtpProtocolHandler9CreateJobEPNS_10URLRequestE to i8*), i8* bitcast (i1 (%"class.net::URLRequestJobFactory::ProtocolHandler"*, %class.GURL*)* @_ZNK3net20URLRequestJobFactory15ProtocolHandler20IsSafeRedirectTargetERK4GURL to i8*)] }, align 8

@_ZN3net18FtpProtocolHandlerD1Ev = hidden unnamed_addr alias void (%"class.net::FtpProtocolHandler"*), void (%"class.net::FtpProtocolHandler"*)* @_ZN3net18FtpProtocolHandlerD2Ev
@_ZN3net18FtpProtocolHandlerC1ENSt3__110unique_ptrINS_21FtpTransactionFactoryENS1_14default_deleteIS3_EEEEPNS_12FtpAuthCacheE = hidden unnamed_addr alias void (%"class.net::FtpProtocolHandler"*, %"class.net::FtpTransactionFactory"*, %"class.net::FtpAuthCache"*), void (%"class.net::FtpProtocolHandler"*, %"class.net::FtpTransactionFactory"*, %"class.net::FtpAuthCache"*)* @_ZN3net18FtpProtocolHandlerC2ENSt3__110unique_ptrINS_21FtpTransactionFactoryENS1_14default_deleteIS3_EEEEPNS_12FtpAuthCacheE

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.net::FtpProtocolHandler"* @_ZN3net18FtpProtocolHandler6CreateEPNS_12HostResolverEPNS_12FtpAuthCacheE(%"class.net::HostResolver"*, %"class.net::FtpAuthCache"*) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 24) #5
  %4 = bitcast i8* %3 to %"class.net::FtpProtocolHandler"*
  %5 = tail call i8* @_Znwm(i64 24) #5
  %6 = bitcast i8* %5 to %"class.net::FtpNetworkLayer"*
  tail call void @_ZN3net15FtpNetworkLayerC1EPNS_12HostResolverE(%"class.net::FtpNetworkLayer"* nonnull %6, %"class.net::HostResolver"* %0) #6
  %7 = ptrtoint i8* %5 to i64
  %8 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net18FtpProtocolHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 8
  %10 = bitcast i8* %9 to i64*
  store i64 %7, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %3, i64 16
  %12 = bitcast i8* %11 to %"class.net::FtpAuthCache"**
  store %"class.net::FtpAuthCache"* %1, %"class.net::FtpAuthCache"** %12, align 8
  ret %"class.net::FtpProtocolHandler"* %4
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN3net15FtpNetworkLayerC1EPNS_12HostResolverE(%"class.net::FtpNetworkLayer"*, %"class.net::HostResolver"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.net::FtpProtocolHandler"* @_ZN3net18FtpProtocolHandler16CreateForTestingENSt3__110unique_ptrINS_21FtpTransactionFactoryENS1_14default_deleteIS3_EEEEPNS_12FtpAuthCacheE(%"class.net::FtpTransactionFactory"*, %"class.net::FtpAuthCache"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.net::FtpTransactionFactory"* %0 to i64
  %4 = tail call i8* @_Znwm(i64 24) #5
  %5 = bitcast i8* %4 to %"class.net::FtpProtocolHandler"*
  %6 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net18FtpProtocolHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %4, i64 8
  %8 = bitcast i8* %7 to i64*
  store i64 %3, i64* %8, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 16
  %10 = bitcast i8* %9 to %"class.net::FtpAuthCache"**
  store %"class.net::FtpAuthCache"* %1, %"class.net::FtpAuthCache"** %10, align 8
  ret %"class.net::FtpProtocolHandler"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net18FtpProtocolHandlerD2Ev(%"class.net::FtpProtocolHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::FtpProtocolHandler", %"class.net::FtpProtocolHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net18FtpProtocolHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::FtpProtocolHandler", %"class.net::FtpProtocolHandler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::FtpTransactionFactory"*, %"class.net::FtpTransactionFactory"** %3, align 8
  store %"class.net::FtpTransactionFactory"* null, %"class.net::FtpTransactionFactory"** %3, align 8
  %5 = icmp eq %"class.net::FtpTransactionFactory"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.net::FtpTransactionFactory"* %4 to void (%"class.net::FtpTransactionFactory"*)***
  %8 = load void (%"class.net::FtpTransactionFactory"*)**, void (%"class.net::FtpTransactionFactory"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.net::FtpTransactionFactory"*)*, void (%"class.net::FtpTransactionFactory"*)** %8, i64 1
  %10 = load void (%"class.net::FtpTransactionFactory"*)*, void (%"class.net::FtpTransactionFactory"*)** %9, align 8
  tail call void %10(%"class.net::FtpTransactionFactory"* nonnull %4) #6
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.net::FtpProtocolHandler", %"class.net::FtpProtocolHandler"* %0, i64 0, i32 0
  tail call void @_ZN3net20URLRequestJobFactory15ProtocolHandlerD2Ev(%"class.net::URLRequestJobFactory::ProtocolHandler"* %12) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net20URLRequestJobFactory15ProtocolHandlerD2Ev(%"class.net::URLRequestJobFactory::ProtocolHandler"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net18FtpProtocolHandlerD0Ev(%"class.net::FtpProtocolHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::FtpProtocolHandler", %"class.net::FtpProtocolHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net18FtpProtocolHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::FtpProtocolHandler", %"class.net::FtpProtocolHandler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::FtpTransactionFactory"*, %"class.net::FtpTransactionFactory"** %3, align 8
  store %"class.net::FtpTransactionFactory"* null, %"class.net::FtpTransactionFactory"** %3, align 8
  %5 = icmp eq %"class.net::FtpTransactionFactory"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.net::FtpTransactionFactory"* %4 to void (%"class.net::FtpTransactionFactory"*)***
  %8 = load void (%"class.net::FtpTransactionFactory"*)**, void (%"class.net::FtpTransactionFactory"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.net::FtpTransactionFactory"*)*, void (%"class.net::FtpTransactionFactory"*)** %8, i64 1
  %10 = load void (%"class.net::FtpTransactionFactory"*)*, void (%"class.net::FtpTransactionFactory"*)** %9, align 8
  tail call void %10(%"class.net::FtpTransactionFactory"* nonnull %4) #6
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.net::FtpProtocolHandler", %"class.net::FtpProtocolHandler"* %0, i64 0, i32 0
  tail call void @_ZN3net20URLRequestJobFactory15ProtocolHandlerD2Ev(%"class.net::URLRequestJobFactory::ProtocolHandler"* %12) #6
  %13 = bitcast %"class.net::FtpProtocolHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::URLRequestJob"* @_ZNK3net18FtpProtocolHandler9CreateJobEPNS_10URLRequestE(%"class.net::FtpProtocolHandler"* nocapture readonly, %"class.net::URLRequest"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %1, i64 0, i32 5, i32 0, i32 1
  %4 = load %class.GURL*, %class.GURL** %3, align 8
  %5 = getelementptr inbounds %class.GURL, %class.GURL* %4, i64 -1
  %6 = tail call i32 @_ZNK4GURL16EffectiveIntPortEv(%class.GURL* %5) #6
  %7 = load %class.GURL*, %class.GURL** %3, align 8
  %8 = getelementptr inbounds %class.GURL, %class.GURL* %7, i64 -1
  %9 = getelementptr inbounds %class.GURL, %class.GURL* %7, i64 -1, i32 2, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.GURL, %class.GURL* %7, i64 -1, i32 2, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = bitcast %class.GURL* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %12
  %21 = getelementptr inbounds %class.GURL, %class.GURL* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  br label %25

23:                                               ; preds = %12
  %24 = bitcast %class.GURL* %8 to i8*
  br label %25

25:                                               ; preds = %23, %20
  %26 = phi i8* [ %22, %20 ], [ %24, %23 ]
  %27 = getelementptr inbounds i8, i8* %26, i64 %15
  %28 = sext i32 %10 to i64
  br label %29

29:                                               ; preds = %2, %25
  %30 = phi i8* [ %27, %25 ], [ null, %2 ]
  %31 = phi i64 [ %28, %25 ], [ 0, %2 ]
  %32 = tail call zeroext i1 @_ZN3net22IsPortAllowedForSchemeEiN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i32 %6, i8* %30, i64 %31) #6
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = tail call i8* @_Znwm(i64 408) #5
  %35 = bitcast i8* %34 to %"class.net::URLRequestErrorJob"*
  tail call void @_ZN3net18URLRequestErrorJobC1EPNS_10URLRequestEi(%"class.net::URLRequestErrorJob"* nonnull %35, %"class.net::URLRequest"* %1, i32 -312) #6
  br label %43

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.net::FtpProtocolHandler", %"class.net::FtpProtocolHandler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.net::FtpTransactionFactory"*, %"class.net::FtpTransactionFactory"** %37, align 8
  %39 = getelementptr inbounds %"class.net::FtpProtocolHandler", %"class.net::FtpProtocolHandler"* %0, i64 0, i32 2
  %40 = tail call i8* @_Znwm(i64 648) #5
  %41 = bitcast i8* %40 to %"class.net::URLRequestFtpJob"*
  %42 = load %"class.net::FtpAuthCache"*, %"class.net::FtpAuthCache"** %39, align 8
  tail call void @_ZN3net16URLRequestFtpJobC1EPNS_10URLRequestEPNS_21FtpTransactionFactoryEPNS_12FtpAuthCacheE(%"class.net::URLRequestFtpJob"* nonnull %41, %"class.net::URLRequest"* %1, %"class.net::FtpTransactionFactory"* %38, %"class.net::FtpAuthCache"* %42) #6
  br label %43

43:                                               ; preds = %36, %33
  %44 = phi i8* [ %40, %36 ], [ %34, %33 ]
  %45 = bitcast i8* %44 to %"class.net::URLRequestJob"*
  ret %"class.net::URLRequestJob"* %45
}

declare zeroext i1 @_ZN3net22IsPortAllowedForSchemeEiN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i32, i8*, i64) local_unnamed_addr #2

declare i32 @_ZNK4GURL16EffectiveIntPortEv(%class.GURL*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net18FtpProtocolHandlerC2ENSt3__110unique_ptrINS_21FtpTransactionFactoryENS1_14default_deleteIS3_EEEEPNS_12FtpAuthCacheE(%"class.net::FtpProtocolHandler"* nocapture, %"class.net::FtpTransactionFactory"*, %"class.net::FtpAuthCache"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.net::FtpTransactionFactory"* %1 to i64
  %5 = getelementptr inbounds %"class.net::FtpProtocolHandler", %"class.net::FtpProtocolHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net18FtpProtocolHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.net::FtpProtocolHandler", %"class.net::FtpProtocolHandler"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  store i64 %4, i64* %7, align 8
  %8 = getelementptr inbounds %"class.net::FtpProtocolHandler", %"class.net::FtpProtocolHandler"* %0, i64 0, i32 2
  store %"class.net::FtpAuthCache"* %2, %"class.net::FtpAuthCache"** %8, align 8
  ret void
}

declare zeroext i1 @_ZNK3net20URLRequestJobFactory15ProtocolHandler20IsSafeRedirectTargetERK4GURL(%"class.net::URLRequestJobFactory::ProtocolHandler"*, %class.GURL* dereferenceable(120)) unnamed_addr #2

declare void @_ZN3net18URLRequestErrorJobC1EPNS_10URLRequestEi(%"class.net::URLRequestErrorJob"*, %"class.net::URLRequest"*, i32) unnamed_addr #2

declare void @_ZN3net16URLRequestFtpJobC1EPNS_10URLRequestEPNS_21FtpTransactionFactoryEPNS_12FtpAuthCacheE(%"class.net::URLRequestFtpJob"*, %"class.net::URLRequest"*, %"class.net::FtpTransactionFactory"*, %"class.net::FtpAuthCache"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { builtin nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
