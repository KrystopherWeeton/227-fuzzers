; ModuleID = '../../third_party/opus/src/silk/decode_pulses.c'
source_filename = "../../third_party/opus/src/silk/decode_pulses.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.ec_ctx = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@silk_rate_levels_iCDF = external constant [2 x [9 x i8]], align 16
@.str = private unnamed_addr constant [42 x i8] c"assertion failed: frame_length == 12 * 10\00", align 1
@.str.1 = private unnamed_addr constant [48 x i8] c"../../third_party/opus/src/silk/decode_pulses.c\00", align 1
@silk_pulses_per_block_iCDF = external constant [10 x [18 x i8]], align 16
@silk_lsb_iCDF = external constant [2 x i8], align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @silk_decode_pulses(%struct.ec_ctx*, i16*, i32, i32, i32) local_unnamed_addr #0 {
  %6 = alloca [20 x i32], align 16
  %7 = alloca [20 x i32], align 16
  %8 = bitcast [20 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 80, i1 false)
  %9 = bitcast [20 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 80, i1 false)
  %10 = ashr i32 %2, 1
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [2 x [9 x i8]], [2 x [9 x i8]]* @silk_rate_levels_iCDF, i64 0, i64 %11, i64 0
  %13 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %0, i8* %12, i32 8) #4
  %14 = and i32 %4, -16
  %15 = icmp slt i32 %14, %4
  br i1 %15, label %16, label %19

16:                                               ; preds = %5
  %17 = icmp eq i32 %4, 120
  br i1 %17, label %22, label %18

18:                                               ; preds = %16
  tail call void @celt_fatal(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 59) #5
  unreachable

19:                                               ; preds = %5
  %20 = ashr i32 %4, 4
  %21 = icmp sgt i32 %4, 15
  br i1 %21, label %22, label %94

22:                                               ; preds = %16, %19
  %23 = phi i32 [ %20, %19 ], [ 8, %16 ]
  %24 = sext i32 %13 to i64
  %25 = getelementptr inbounds [10 x [18 x i8]], [10 x [18 x i8]]* @silk_pulses_per_block_iCDF, i64 0, i64 %24, i64 0
  %26 = zext i32 %23 to i64
  br label %29

27:                                               ; preds = %44
  %28 = zext i32 %23 to i64
  br label %49

29:                                               ; preds = %44, %22
  %30 = phi i64 [ 0, %22 ], [ %45, %44 ]
  %31 = getelementptr inbounds [20 x i32], [20 x i32]* %7, i64 0, i64 %30
  store i32 0, i32* %31, align 4
  %32 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %0, i8* %25, i32 8) #4
  %33 = getelementptr inbounds [20 x i32], [20 x i32]* %6, i64 0, i64 %30
  store i32 %32, i32* %33, align 4
  %34 = icmp eq i32 %32, 17
  br i1 %34, label %35, label %44

35:                                               ; preds = %29, %35
  %36 = phi i32 [ %37, %35 ], [ 0, %29 ]
  %37 = add nuw nsw i32 %36, 1
  %38 = icmp eq i32 %37, 10
  %39 = zext i1 %38 to i64
  %40 = getelementptr inbounds [10 x [18 x i8]], [10 x [18 x i8]]* @silk_pulses_per_block_iCDF, i64 0, i64 9, i64 %39
  %41 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %0, i8* %40, i32 8) #4
  store i32 %41, i32* %33, align 4
  %42 = icmp eq i32 %41, 17
  br i1 %42, label %35, label %43

43:                                               ; preds = %35
  store i32 %37, i32* %31, align 4
  br label %44

44:                                               ; preds = %43, %29
  %45 = add nuw nsw i64 %30, 1
  %46 = icmp eq i64 %45, %26
  br i1 %46, label %27, label %29

47:                                               ; preds = %62
  %48 = zext i32 %23 to i64
  br label %65

49:                                               ; preds = %62, %27
  %50 = phi i64 [ 0, %27 ], [ %63, %62 ]
  %51 = getelementptr inbounds [20 x i32], [20 x i32]* %6, i64 0, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = icmp sgt i32 %52, 0
  %54 = trunc i64 %50 to i32
  %55 = shl i32 %54, 16
  %56 = ashr exact i32 %55, 12
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i16, i16* %1, i64 %57
  br i1 %53, label %59, label %60

59:                                               ; preds = %49
  tail call void @silk_shell_decoder(i16* %58, %struct.ec_ctx* %0, i32 %52) #4
  br label %62

60:                                               ; preds = %49
  %61 = bitcast i16* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %61, i8 0, i64 32, i1 false)
  br label %62

62:                                               ; preds = %59, %60
  %63 = add nuw nsw i64 %50, 1
  %64 = icmp eq i64 %63, %28
  br i1 %64, label %47, label %49

65:                                               ; preds = %91, %47
  %66 = phi i64 [ 0, %47 ], [ %92, %91 ]
  %67 = getelementptr inbounds [20 x i32], [20 x i32]* %7, i64 0, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = icmp sgt i32 %68, 0
  br i1 %69, label %70, label %91

70:                                               ; preds = %65
  %71 = trunc i64 %66 to i32
  %72 = shl i32 %71, 16
  %73 = ashr exact i32 %72, 12
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i16, i16* %1, i64 %74
  %76 = load i16, i16* %75, align 2
  %77 = sext i16 %76 to i32
  br label %78

78:                                               ; preds = %78, %70
  %79 = phi i32 [ %77, %70 ], [ %83, %78 ]
  %80 = phi i32 [ 0, %70 ], [ %84, %78 ]
  %81 = shl i32 %79, 1
  %82 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %83 = add nsw i32 %82, %81
  %84 = add nuw nsw i32 %80, 1
  %85 = icmp eq i32 %84, %68
  br i1 %85, label %86, label %78

86:                                               ; preds = %78
  %87 = trunc i32 %83 to i16
  store i16 %87, i16* %75, align 2
  %88 = getelementptr inbounds i16, i16* %75, i64 1
  %89 = load i16, i16* %88, align 2
  %90 = sext i16 %89 to i32
  br label %96

91:                                               ; preds = %65, %286
  %92 = add nuw nsw i64 %66, 1
  %93 = icmp eq i64 %92, %48
  br i1 %93, label %94, label %65

94:                                               ; preds = %91, %19
  %95 = getelementptr inbounds [20 x i32], [20 x i32]* %6, i64 0, i64 0
  call void @silk_decode_signs(%struct.ec_ctx* %0, i16* %1, i32 %4, i32 %2, i32 %3, i32* nonnull %95) #4
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %9) #4
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %8) #4
  ret void

96:                                               ; preds = %96, %86
  %97 = phi i32 [ %90, %86 ], [ %101, %96 ]
  %98 = phi i32 [ 0, %86 ], [ %102, %96 ]
  %99 = shl i32 %97, 1
  %100 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %101 = add nsw i32 %100, %99
  %102 = add nuw nsw i32 %98, 1
  %103 = icmp eq i32 %102, %68
  br i1 %103, label %104, label %96

104:                                              ; preds = %96
  %105 = trunc i32 %101 to i16
  store i16 %105, i16* %88, align 2
  %106 = getelementptr inbounds i16, i16* %75, i64 2
  %107 = load i16, i16* %106, align 2
  %108 = sext i16 %107 to i32
  br label %109

109:                                              ; preds = %109, %104
  %110 = phi i32 [ %108, %104 ], [ %114, %109 ]
  %111 = phi i32 [ 0, %104 ], [ %115, %109 ]
  %112 = shl i32 %110, 1
  %113 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %114 = add nsw i32 %113, %112
  %115 = add nuw nsw i32 %111, 1
  %116 = icmp eq i32 %115, %68
  br i1 %116, label %117, label %109

117:                                              ; preds = %109
  %118 = trunc i32 %114 to i16
  store i16 %118, i16* %106, align 2
  %119 = getelementptr inbounds i16, i16* %75, i64 3
  %120 = load i16, i16* %119, align 2
  %121 = sext i16 %120 to i32
  br label %122

122:                                              ; preds = %122, %117
  %123 = phi i32 [ %121, %117 ], [ %127, %122 ]
  %124 = phi i32 [ 0, %117 ], [ %128, %122 ]
  %125 = shl i32 %123, 1
  %126 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %127 = add nsw i32 %126, %125
  %128 = add nuw nsw i32 %124, 1
  %129 = icmp eq i32 %128, %68
  br i1 %129, label %130, label %122

130:                                              ; preds = %122
  %131 = trunc i32 %127 to i16
  store i16 %131, i16* %119, align 2
  %132 = getelementptr inbounds i16, i16* %75, i64 4
  %133 = load i16, i16* %132, align 2
  %134 = sext i16 %133 to i32
  br label %135

135:                                              ; preds = %135, %130
  %136 = phi i32 [ %134, %130 ], [ %140, %135 ]
  %137 = phi i32 [ 0, %130 ], [ %141, %135 ]
  %138 = shl i32 %136, 1
  %139 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %140 = add nsw i32 %139, %138
  %141 = add nuw nsw i32 %137, 1
  %142 = icmp eq i32 %141, %68
  br i1 %142, label %143, label %135

143:                                              ; preds = %135
  %144 = trunc i32 %140 to i16
  store i16 %144, i16* %132, align 2
  %145 = getelementptr inbounds i16, i16* %75, i64 5
  %146 = load i16, i16* %145, align 2
  %147 = sext i16 %146 to i32
  br label %148

148:                                              ; preds = %148, %143
  %149 = phi i32 [ %147, %143 ], [ %153, %148 ]
  %150 = phi i32 [ 0, %143 ], [ %154, %148 ]
  %151 = shl i32 %149, 1
  %152 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %153 = add nsw i32 %152, %151
  %154 = add nuw nsw i32 %150, 1
  %155 = icmp eq i32 %154, %68
  br i1 %155, label %156, label %148

156:                                              ; preds = %148
  %157 = trunc i32 %153 to i16
  store i16 %157, i16* %145, align 2
  %158 = getelementptr inbounds i16, i16* %75, i64 6
  %159 = load i16, i16* %158, align 2
  %160 = sext i16 %159 to i32
  br label %161

161:                                              ; preds = %161, %156
  %162 = phi i32 [ %160, %156 ], [ %166, %161 ]
  %163 = phi i32 [ 0, %156 ], [ %167, %161 ]
  %164 = shl i32 %162, 1
  %165 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %166 = add nsw i32 %165, %164
  %167 = add nuw nsw i32 %163, 1
  %168 = icmp eq i32 %167, %68
  br i1 %168, label %169, label %161

169:                                              ; preds = %161
  %170 = trunc i32 %166 to i16
  store i16 %170, i16* %158, align 2
  %171 = getelementptr inbounds i16, i16* %75, i64 7
  %172 = load i16, i16* %171, align 2
  %173 = sext i16 %172 to i32
  br label %174

174:                                              ; preds = %174, %169
  %175 = phi i32 [ %173, %169 ], [ %179, %174 ]
  %176 = phi i32 [ 0, %169 ], [ %180, %174 ]
  %177 = shl i32 %175, 1
  %178 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %179 = add nsw i32 %178, %177
  %180 = add nuw nsw i32 %176, 1
  %181 = icmp eq i32 %180, %68
  br i1 %181, label %182, label %174

182:                                              ; preds = %174
  %183 = trunc i32 %179 to i16
  store i16 %183, i16* %171, align 2
  %184 = getelementptr inbounds i16, i16* %75, i64 8
  %185 = load i16, i16* %184, align 2
  %186 = sext i16 %185 to i32
  br label %187

187:                                              ; preds = %187, %182
  %188 = phi i32 [ %186, %182 ], [ %192, %187 ]
  %189 = phi i32 [ 0, %182 ], [ %193, %187 ]
  %190 = shl i32 %188, 1
  %191 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %192 = add nsw i32 %191, %190
  %193 = add nuw nsw i32 %189, 1
  %194 = icmp eq i32 %193, %68
  br i1 %194, label %195, label %187

195:                                              ; preds = %187
  %196 = trunc i32 %192 to i16
  store i16 %196, i16* %184, align 2
  %197 = getelementptr inbounds i16, i16* %75, i64 9
  %198 = load i16, i16* %197, align 2
  %199 = sext i16 %198 to i32
  br label %200

200:                                              ; preds = %200, %195
  %201 = phi i32 [ %199, %195 ], [ %205, %200 ]
  %202 = phi i32 [ 0, %195 ], [ %206, %200 ]
  %203 = shl i32 %201, 1
  %204 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %205 = add nsw i32 %204, %203
  %206 = add nuw nsw i32 %202, 1
  %207 = icmp eq i32 %206, %68
  br i1 %207, label %208, label %200

208:                                              ; preds = %200
  %209 = trunc i32 %205 to i16
  store i16 %209, i16* %197, align 2
  %210 = getelementptr inbounds i16, i16* %75, i64 10
  %211 = load i16, i16* %210, align 2
  %212 = sext i16 %211 to i32
  br label %213

213:                                              ; preds = %213, %208
  %214 = phi i32 [ %212, %208 ], [ %218, %213 ]
  %215 = phi i32 [ 0, %208 ], [ %219, %213 ]
  %216 = shl i32 %214, 1
  %217 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %218 = add nsw i32 %217, %216
  %219 = add nuw nsw i32 %215, 1
  %220 = icmp eq i32 %219, %68
  br i1 %220, label %221, label %213

221:                                              ; preds = %213
  %222 = trunc i32 %218 to i16
  store i16 %222, i16* %210, align 2
  %223 = getelementptr inbounds i16, i16* %75, i64 11
  %224 = load i16, i16* %223, align 2
  %225 = sext i16 %224 to i32
  br label %226

226:                                              ; preds = %226, %221
  %227 = phi i32 [ %225, %221 ], [ %231, %226 ]
  %228 = phi i32 [ 0, %221 ], [ %232, %226 ]
  %229 = shl i32 %227, 1
  %230 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %231 = add nsw i32 %230, %229
  %232 = add nuw nsw i32 %228, 1
  %233 = icmp eq i32 %232, %68
  br i1 %233, label %234, label %226

234:                                              ; preds = %226
  %235 = trunc i32 %231 to i16
  store i16 %235, i16* %223, align 2
  %236 = getelementptr inbounds i16, i16* %75, i64 12
  %237 = load i16, i16* %236, align 2
  %238 = sext i16 %237 to i32
  br label %239

239:                                              ; preds = %239, %234
  %240 = phi i32 [ %238, %234 ], [ %244, %239 ]
  %241 = phi i32 [ 0, %234 ], [ %245, %239 ]
  %242 = shl i32 %240, 1
  %243 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %244 = add nsw i32 %243, %242
  %245 = add nuw nsw i32 %241, 1
  %246 = icmp eq i32 %245, %68
  br i1 %246, label %247, label %239

247:                                              ; preds = %239
  %248 = trunc i32 %244 to i16
  store i16 %248, i16* %236, align 2
  %249 = getelementptr inbounds i16, i16* %75, i64 13
  %250 = load i16, i16* %249, align 2
  %251 = sext i16 %250 to i32
  br label %252

252:                                              ; preds = %252, %247
  %253 = phi i32 [ %251, %247 ], [ %257, %252 ]
  %254 = phi i32 [ 0, %247 ], [ %258, %252 ]
  %255 = shl i32 %253, 1
  %256 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %257 = add nsw i32 %256, %255
  %258 = add nuw nsw i32 %254, 1
  %259 = icmp eq i32 %258, %68
  br i1 %259, label %260, label %252

260:                                              ; preds = %252
  %261 = trunc i32 %257 to i16
  store i16 %261, i16* %249, align 2
  %262 = getelementptr inbounds i16, i16* %75, i64 14
  %263 = load i16, i16* %262, align 2
  %264 = sext i16 %263 to i32
  br label %265

265:                                              ; preds = %265, %260
  %266 = phi i32 [ %264, %260 ], [ %270, %265 ]
  %267 = phi i32 [ 0, %260 ], [ %271, %265 ]
  %268 = shl i32 %266, 1
  %269 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %270 = add nsw i32 %269, %268
  %271 = add nuw nsw i32 %267, 1
  %272 = icmp eq i32 %271, %68
  br i1 %272, label %273, label %265

273:                                              ; preds = %265
  %274 = trunc i32 %270 to i16
  store i16 %274, i16* %262, align 2
  %275 = getelementptr inbounds i16, i16* %75, i64 15
  %276 = load i16, i16* %275, align 2
  %277 = sext i16 %276 to i32
  br label %278

278:                                              ; preds = %278, %273
  %279 = phi i32 [ %277, %273 ], [ %283, %278 ]
  %280 = phi i32 [ 0, %273 ], [ %284, %278 ]
  %281 = shl i32 %279, 1
  %282 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @silk_lsb_iCDF, i64 0, i64 0), i32 8) #4
  %283 = add nsw i32 %282, %281
  %284 = add nuw nsw i32 %280, 1
  %285 = icmp eq i32 %284, %68
  br i1 %285, label %286, label %278

286:                                              ; preds = %278
  %287 = trunc i32 %283 to i16
  store i16 %287, i16* %275, align 2
  %288 = shl i32 %68, 5
  %289 = getelementptr inbounds [20 x i32], [20 x i32]* %6, i64 0, i64 %66
  %290 = load i32, i32* %289, align 4
  %291 = or i32 %290, %288
  store i32 %291, i32* %289, align 4
  br label %91
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @ec_dec_icdf(%struct.ec_ctx*, i8*, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @celt_fatal(i8*, i8*, i32) local_unnamed_addr #3

declare void @silk_shell_decoder(i16*, %struct.ec_ctx*, i32) local_unnamed_addr #2

declare void @silk_decode_signs(%struct.ec_ctx*, i16*, i32, i32, i32, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
